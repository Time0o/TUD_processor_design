unit.start("callreti ('(RETI|RETN)')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0623;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'h0625, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #0 4630389d-785d-4ed1-b720-5c9bcc57a37e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 b7d017cd-5695-409b-8eed-12fbbd3fce5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 eb2a22cc-3bdf-4263-8c03-33bc2b13e326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 dcc11092-19ad-474d-9e43-8f4b36217222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 b0e7b080-239a-4afc-b904-fed978e58b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 c25e3469-4061-4b1d-b197-ef6efd779d05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 acfa42c9-43d1-424d-b3ae-171c46b90595)");

unit.assert_eq16(16'h03ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #0 4b751bcc-97ab-42d6-a79e-876c71bde6f9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0002;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'h0A3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1 a4fc2748-9467-43cc-beef-4815ad4af0c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 ff72009c-65e9-4987-b521-51130371a401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 b8b3cdb2-7693-4918-8e74-a33cd9524e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 d9f1e49c-fb64-4ad4-9ecc-4e1e7245931d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 e8f91d62-dd2a-4790-ab05-e54129704f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 6b0508d2-12aa-485f-9430-694b55d7688d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 162e7f6f-c52d-4f9e-9015-51b612394512)");

unit.assert_eq16(16'h79B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1 2e5e3a12-c2e8-451a-bc0d-8b73a43cf2c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0004;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'h0BB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2 1797ef09-7328-43ce-84ae-88790371eef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 591af39a-00a3-45e8-8a75-a8117773eb95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 c0721e2e-52be-4a74-b6de-aed222730a07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 a7f3de75-891a-45a3-903b-be3424986275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 31a476a2-1289-4b60-9aad-654166062ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 ecf60a87-887b-40ca-82bc-396696ace619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 0c44aa91-c822-4832-8ead-13beeb2d7900)");

unit.assert_eq16(16'hC644, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #2 3a9d6b1b-6de0-4a31-8257-2c2b32b2fff8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0006;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0990;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'h0992, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #3 dfdfbdf1-d208-48c5-9107-13da8b9668d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 f4a4bb3a-0130-490c-a6e7-fe1e65a944c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 7f54a48d-1f56-4920-a0a8-8b4f05b9c3b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 7392d369-5e3f-44ff-bc50-8505cc4d379a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 c4bd60b5-91b5-412b-8a01-50c2ab5fbeb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 2ab659cd-3393-45a4-9a47-db307c04d2b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 01af3a14-b4ec-400b-bac2-1a314be8f03b)");

unit.assert_eq16(16'hE4D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #3 509a6900-5aee-471f-9562-f62040e8c69a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0008;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h002C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'h002E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #4 5ac232d5-cecf-4b8c-bb2d-dacdcb7e659c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 88921022-4ae3-4997-91ec-2f489d83a24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 8a0df898-c886-4b36-9f40-b5a27c3df1c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 4b0e52e8-10f5-48d8-a419-f1fcb1b82dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 ee952060-3c27-4a59-9114-77818c8b95d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 bcdfc62f-8466-446f-ba7e-0351c47c36c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 bab1d718-06fa-46bc-ae60-be4f9b94f3db)");

unit.assert_eq16(16'hA1D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #4 d7a9cb4d-5f10-4d4b-a15d-fcefdf67d1ec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'h0B87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #5 882e3bea-001a-4bad-8c5e-ddacea0daba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 f3529022-1c21-4db7-ad1f-253c7553ee2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 73138a71-6973-4d81-999a-df6cb0bb91dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 3051b7d2-9f54-4402-a216-0b9a3085d06e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 84418c79-68a8-4352-aaa8-54ac8c26c624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 d4c7fd70-a481-441b-8ee9-51c1f8a55206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 34e9ccc4-2535-4336-a91f-3104aba1d50f)");

unit.assert_eq16(16'h4BE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #5 d144cdb3-124e-4bdf-a151-019db3064ea5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h0C2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #6 37987ee0-6731-438a-b0cc-342c68f57082)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 586d0f99-70da-4122-a7f4-d4fa6b94dd2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 cea666ab-9575-49ab-b652-c0d35a0862e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 75bc3ebc-e56f-4995-bc3f-bc56a3bb431c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 fa4b5aca-3e6d-4a69-90d3-4f32bcbc42c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 c3453122-733c-4ce0-96c0-cb51133ec0db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 0889cf5e-ab21-4ddd-9d1f-963b196cdc79)");

unit.assert_eq16(16'h0278, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #6 8412501a-fe77-4b22-ad75-edf4c5622fc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h000E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0288;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'h028A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #7 a008f2c4-5537-42a0-8af1-441c3d2bba91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 55e8856b-96f0-4ca4-bf66-ecfb773d364f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 943361a7-c77a-440f-a538-5deb759a1e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 3740974c-b83e-4907-be5a-a8c1f2a84f97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 16e38ec7-fd59-461c-8232-e714ebfba168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 ea3a1e30-a362-4af0-9926-d841506a6c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 a754636b-4ff7-46a3-a6a8-2a47247de0f7)");

unit.assert_eq16(16'hFE97, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #7 d846408f-e83a-4374-a6f2-75ba7b295c94)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0010;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0412;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'h0414, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #8 c74daecf-0cba-4b25-9410-d1af8d42fd52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 00f11926-fdca-4c9f-af2b-4fcd8b6922a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 d872f845-ef28-41ff-a400-3c4f37918daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 9f4af455-214a-480d-8468-38d5192dac99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 459fb35d-b141-4770-b257-2de123f52948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 0fcd76d7-2c22-42d0-84fd-40cc12fa07d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 d8877ad7-df51-4f50-9176-d9925e4663dd)");

unit.assert_eq16(16'h137C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #8 21f826d9-3404-4927-8136-b2503b714441)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0012;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'h07F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #9 57955476-8b29-4b43-84ff-3b4aa4e7011f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 91d2b16a-c453-4060-b6a8-dcbdcd6029ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 6bc2650e-fc11-4438-bc85-c3bd05a066a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 3557a5e9-cd3b-416d-bb9a-a900a4e9c381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 de0d05d7-f33a-4491-b845-62a746209ee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 9156d69a-0e5a-45df-8384-aa8e76ec858a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 729e4185-62b3-47ed-9167-7b26e9b991ce)");

unit.assert_eq16(16'hE0C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #9 1d832acd-ed12-4606-80b3-091cebf93b52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0014;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'h0B1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #10 4b823f32-6eee-4012-8552-d01c1bd6a5c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 86c0832a-4519-4d10-802c-06dc8768c327)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 645561c4-f2ca-4a85-9520-7d2c8c82867c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 b28bf4d1-965b-4376-9189-64b93ecbaa0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 a5c216fc-a1ea-4154-b7de-4d458fb9ed29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 868e57b6-2479-4845-ad4b-4e16760edd42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 4b85ad12-5449-43db-a8cc-1673724ef870)");

unit.assert_eq16(16'h5494, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #10 964435a6-c111-497b-9c57-444ab74ab5a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0016;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h0F11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #11 38ae0969-b43a-4ca9-a9f0-adaad562d13d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 64dd5cf8-a578-4dd9-b130-bc38089abe08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 6700be57-b34e-4813-bc8d-a8dca5c9841d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 8a531c9a-910c-4ffd-ab0c-e3137abf4a14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 ea47b0eb-c3d1-4dbb-84f1-0fbfb48e12d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 18269195-610b-42dc-9565-0bf25ef18695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 8374b1c4-8e18-4f3e-9ee2-8978b9678acd)");

unit.assert_eq16(16'h4513, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #11 c4093b1d-f7d2-4f25-9cb1-b17df1c37df4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0018;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h0A46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #12 310efac2-d33f-4a9f-9f75-c1b68d4e69d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 6b6c63fe-90b1-472c-8620-23f81a98a457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 a1f5e42c-f1b1-4294-9470-e2dd15823343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 63ffb948-0a60-4bf7-924e-c6839eb5a3f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 ea639ecb-712d-4c2b-ad97-9f8bc6b74cc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 21dbfd0d-ee5d-4748-bd18-209170f94dac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 f7fcbebe-49fb-4808-ba1c-b882c051b4e4)");

unit.assert_eq16(16'h07C2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #12 90363b2c-8580-4f93-b183-ca1bf660e9ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0712;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h0714, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #13 30063cee-a72e-4805-943a-ebfbefc482af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 1632c100-96e1-4580-aa2a-9262e54d57fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 abb6f0aa-7d59-430b-a7ef-315d95dbc2c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 2213c285-a256-41ef-9d1b-6d7152179173)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 29068fb3-9179-4bdc-9d0b-d1e6a4567416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 d95eaf2d-cf89-4360-9698-214162088bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 81de66aa-eb56-4ea2-baa3-3f5c2ef8f607)");

unit.assert_eq16(16'hD0A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #13 9770002d-2cbf-4dfe-83f4-b14f2f458d7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'h0C9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #14 9a7eef41-5b40-4fda-90b8-c3825283e2b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 6219c138-325a-4de7-aba0-a260ba14ab0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 4e63c503-b5d5-436e-bf84-9e0b4395d2b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 4cb7be86-e169-40c4-9b63-5f78ed64fae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 219e8b41-d78f-464d-a708-23b7e6f1eba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 bd4fbf54-f2d0-4acc-b169-b038a800c55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 ed55c653-4508-4be9-bd30-40ab45aff6f4)");

unit.assert_eq16(16'h2F3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #14 a3fea1c8-d1f2-4653-a072-e70234ddde10)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h001E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h051B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h051D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #15 c1927c40-e7cc-4e9d-b2fd-a20e3ff098c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 be6044bd-1c73-4de3-b3e0-810521a848ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 5e85ca47-8276-4542-96ba-56de76580805)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 3ee22bd9-9892-472b-8fdf-9b2c8ed8fc9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 fe89944b-3473-43d8-9573-b84065adf67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 1475b248-32b1-4283-8b77-1bfbf4d81357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 008b7c65-b7ba-4c60-af7c-932e432602a7)");

unit.assert_eq16(16'h1279, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #15 d21ee1c6-74a2-48bb-a0a0-0b273971f392)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0020;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'h0CF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #16 64cab82b-fcee-4af9-bd5e-1cf790f1ef2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 50b5e616-db34-4d1f-929c-eeda8642b96f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 26bb3fac-e8ea-4c01-a063-82b414dcc40f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 25f62638-05de-4f22-b66f-ab604175b289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 1046cc64-058d-43ac-ac19-309cd42d44d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 6bf34bc5-871f-48a0-a839-fd24a687ed06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 97193664-00ff-4a5a-8b34-1bc09ccf0bc8)");

unit.assert_eq16(16'h0B22, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #16 275bd740-dd82-4f42-bb41-b3cf8acffd0c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0022;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0964;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h0966, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #17 90ae0b5b-21fa-4377-b220-ebaae95ee3be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 a2560eaf-f099-4a5a-91a3-1dd1e6b734c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 916de5c7-6e8d-4702-ac84-a47224a3d7dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 096362d0-a4f6-4095-9cc1-9cc21a339f5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 cd749317-ddf2-48d7-ab88-372c3bb95153)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 224cb6a4-6f09-4d69-b0c3-320a20a01491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 c66ccade-bd3e-476f-b987-f2ad890732a0)");

unit.assert_eq16(16'h25F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #17 456dd43e-d76b-4249-adb9-3340f413c226)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0024;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h0D98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #18 ce2327b4-84f9-44a6-9ba1-66c0e951d7d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 2ff898ed-4f82-4e79-acbe-44f8bb47860f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 37312e99-7732-4819-a1bf-730fbcf00a50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 0d3630c7-b2b9-439e-98b0-f3a2ab6decfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 3855fc16-9b34-4811-b83f-d84b6652772e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 2b8aad29-77ed-4d7d-a8c7-b6dcc3ff1e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 3c821331-7cbd-43e7-870c-8acc668a1c05)");

unit.assert_eq16(16'hB506, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #18 3e7421f6-371b-4445-bc2a-4ebe65098b64)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0026;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'h00CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #19 31ec5fb8-612e-4092-8da0-a369f9ffd489)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 ac9f90ea-d339-4a7e-8f62-74ce4ec2ec1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 d1375ed2-16c5-4af6-908f-52fa2cb8940b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 7e960061-dbe5-49f2-ba55-76837fa0bf1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 59672361-161d-4911-bb47-494a19f915a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 f0696ce4-3fbe-49ab-85de-26de59cc7f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 366dc188-1102-4a4f-8a6e-b0c476af1d1d)");

unit.assert_eq16(16'h66D6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #19 1dc2baee-28ec-4a5f-8459-6ea0355817a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0028;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'h0B7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #20 097c872c-28b9-4824-9b8f-0a8114e3d4d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 232cd5ce-f3ce-4350-99d5-fc4bb705e56e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 8cf6e1a8-e646-45c2-84d2-8a3071165a59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 ac460046-f066-4a6f-83ea-acecfd604746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 aa3159d3-1e1a-48a4-96f7-2f1e866dc2e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 b1ebfc96-2d53-496c-ac2d-4a8407f973b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 21d78bcf-999a-474d-b815-bd987369fc5f)");

unit.assert_eq16(16'h4771, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #20 056dd1b2-028c-4ea5-afb3-eac1723ea3f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'h0EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #21 7f046db3-c59b-4a65-8c5b-3be5d5181119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 dfb7ca13-7597-4dbf-ab72-b85d38ee38c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 1005cfc0-ca7c-4597-9175-c76b06661996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 df599a8f-00c9-4e49-837d-19b2e9a6681f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 e2beaa87-df2b-490f-bfff-e1e9aa022d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 202495bf-6a9a-4ca2-a92a-624e11232dec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 ddef8bda-88e9-4d27-b135-3c2b61bef9de)");

unit.assert_eq16(16'hFD62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #21 af6e94f5-a9cf-4755-bc75-a1d6e2df6549)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'h09F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #22 c7862757-4973-4092-b33b-20b1055b4dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 9803dd99-8e04-4d02-a8d4-6b2a32f19a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 afafc245-e2e0-4b1c-be11-2910379ff056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 0a0106b4-5520-4310-a0e5-1b78f447c888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 2ce07aa7-a9e4-4d03-8a77-32209c3130a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 f6b838b6-2d10-46fc-8e16-b3e510c3d37d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 74ffca28-a6ee-4324-aa5d-b23ae2d69240)");

unit.assert_eq16(16'h42B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #22 0b2665ef-47c2-45b7-aed0-9912edf0b1db)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h002E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h0B0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #23 19683945-c820-4250-b41a-a28fc5d01395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 61368078-9deb-4e4d-9d32-ee32bd03e2b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 182e1653-26d9-41e4-8b64-e35b74998750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 42ae204f-93e6-468e-8870-450418b23470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 2bae556e-ba65-4ad3-b973-8e38a34a8c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 a29f0957-d506-4ae6-9692-a25108723ff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 0969176e-5077-44b2-84f6-3cc1f3d8e337)");

unit.assert_eq16(16'h2BC3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #23 cadd2766-5180-4976-a02f-6840dd6baff4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0030;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'h0F4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #24 3e455f1d-78d0-4b5b-8822-c5e2c6902a36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 bd093055-000a-4ece-8a81-285be07d4889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 1af059de-753b-408f-b42b-0693fc26847a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 840df021-d9cb-4b83-aaa7-499147539a32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 963a32b5-6697-44d4-a913-93d1edfabf5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 85e122eb-2dbd-444c-80f5-718de2571251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 b9d48fa5-56c5-4932-bfba-e5a234eac57b)");

unit.assert_eq16(16'hB51F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #24 53ebbb45-1366-4b88-89de-9490553504fd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0032;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0270;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #25 e02bf2d1-f51a-4b61-9858-a966d2f7894e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 688f9204-5577-45f8-b62f-31fb6386c790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 41c88767-49e6-4733-aff6-c581264baff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 68a742b9-0254-4eac-94d5-40c6cb735fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 6871b792-b631-4290-a8aa-9246540e2655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 2733e20f-c3c2-4c54-ae50-d9cdf24c3b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 92362f69-3d66-457c-82e9-99eaf64c19b5)");

unit.assert_eq16(16'h414E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #25 74773fad-cc0d-4426-a602-29664a783203)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0034;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0679;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h067B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #26 71d9c3fa-f0c1-4ab6-aa82-ffc8cc639fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 b43f7da2-3e15-47de-b602-d8ee4984dc37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 3d20add8-6ae8-4b0d-ab95-358e1ef4444c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 586219da-8312-42ac-916a-07decc4dd747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 8bfae01a-7e75-48be-842c-66810ca8ce49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 c7241f9d-bfa1-4ae9-a6c8-094ab2bf8355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 736ba223-5e44-4a45-8fcd-95040eadecb2)");

unit.assert_eq16(16'h533D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #26 a3392654-f5ec-459d-b25f-c453775b6277)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0036;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'h00A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #27 4f4ef326-cb9d-4e8b-9778-ff609ffdf2a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 07a1fa7c-09c9-44a5-9534-27c166b5adfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 a8187906-d1e7-40a3-aa63-cfa3a1ac5411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 2cdf0fda-e04d-4d3b-ab71-506690e3e205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 25cf0d16-93a1-477a-890b-cf0a7cc4151e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 08eebdfd-3126-4fe7-bc49-8c05be5b8a84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 8f06d843-69f9-42b8-9f97-de8b14c7ba08)");

unit.assert_eq16(16'h8FAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #27 572dcc50-4b72-437a-a9b4-b7d39a4e6bbf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0038;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'h0D6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #28 64a57c4f-7be7-441b-8725-1726084b6c8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 7401048e-422d-48e6-9db0-75c65dd911e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 3d1ed10c-591b-4600-b73b-33990ee23f39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 879c6540-12b5-454f-8a72-0616571c4235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 29354b0a-508a-4fca-81ec-eba2d543c340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 423a3886-3820-490d-ab7f-59be9afaba83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 ef2f3169-2cfa-4b76-b548-836d556d4d89)");

unit.assert_eq16(16'h986F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #28 6af86a8e-c57d-4f8b-b6aa-7d1d0a34a8a7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0395;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h0397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #29 23215509-0842-4ede-933e-9b25f95a80a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 9f433502-d777-4094-8cc5-437f07b24e0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 ed4ff0fc-1a44-4b96-a5a2-dce50aaa2961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 51af6bfc-eca6-4310-b850-16bca4761223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 ddb98bac-b4c8-4a2a-97a4-a4971f120c90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 90e4d0d9-9eda-46e1-80b4-d74ae5f1e561)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 dc902eb2-e337-476b-8219-3d3fa7f34ec6)");

unit.assert_eq16(16'hBA2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #29 c4eb5e47-f979-41d4-96d8-5366d3ec5583)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0121;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'h0123, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #30 89c309b3-60b5-4bbd-b6d6-80ebc158e0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 89993fc8-84d0-46fd-9d1c-184b33d92322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 71958af3-af6e-4957-ba8e-5e196f8355ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 7d52846c-7032-4c2b-808c-22de1d2c6334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 a6bc3c38-64da-4072-8bf9-5cc6bc736ed1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 96e39620-b1bc-4fbe-a4de-5d7fbd865dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 30647bf3-fdce-4974-8d91-efb2489a8226)");

unit.assert_eq16(16'h073F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #30 10e3f1af-a37d-4111-b11c-871cc838a3c1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h003E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'h0ED2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #31 f40ec28c-08e6-42e0-8cf1-cfe74b2da901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 18075bee-3a8e-4ebf-aa2e-e8c7cf58e6c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 3e9b8c4c-7113-4bfb-8ab7-de7cebd60ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 821d9bc9-ac4f-4b4f-9e6b-664e02f517b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 43eb0756-6ae5-4177-bc98-3a18ecfdc0ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 476c609b-aa45-4d95-bcaa-e8cd5f42138d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 25297f9c-f52d-4346-bded-5f0c865c163c)");

unit.assert_eq16(16'h4339, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #31 c6f606a6-a271-4107-b3f1-4a625ba8cb8f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0040;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'h0C55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #32 30ab5410-24f5-4bef-92ef-f2d38db6688c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 eea38de4-277f-41d6-8c35-346eb39c3fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 06a1affc-ee0d-4620-9897-4ffd990e1b16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 6e3ce474-998d-4f68-b5ed-d029e30a31d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 e9a35bb9-015e-4e57-8653-d8dd64c7b792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 c281b49b-4a60-490c-a746-48df5ef48683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 fcf5b6ee-0d53-4e4f-b5f0-94abfdb59c51)");

unit.assert_eq16(16'hE800, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #32 233044cd-fd52-4127-a0fd-e47f97986fe7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0042;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h0A2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #33 738c9af9-480c-4d25-8bc1-096e4643e465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 e8ff9204-ccc7-4e65-9995-cf3daba0d5fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 311886de-7a7c-4001-b58e-35bc06444de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 d26f86c4-95e1-4da1-a70b-32c65f1f5d89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 77c912ee-aa8a-4306-8d48-136607b5318a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 d95680f3-c4e8-428e-96f6-90e1ee66b47f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 cc7998af-0374-4da1-bb1b-d4cb865916cd)");

unit.assert_eq16(16'hA3E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #33 0b5b5202-6a48-4960-b340-def534a6acd6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0044;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'h0F44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #34 3811319e-b786-4b24-bf91-065a088df7c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 ac1e37f7-e1b8-4d12-9837-d13c43c770bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 d03adf6b-997b-4f45-9810-d6d94ac7ccbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 a12c0cdc-6d90-4289-9e42-0f4851e43ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 5cb88329-13f9-4c0b-b2a6-c2235ed37e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 31871977-9ec1-4d85-8954-6dffe4460801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 bc52dfc6-116d-4c07-8d86-a27ec41f7e8c)");

unit.assert_eq16(16'hADB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #34 865857ad-f9ab-4577-a268-ece50c4f4ac0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0046;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'h07F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #35 83c41937-39de-4b87-9af5-ed8e4be45e2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 3e39dbcf-3b4b-4505-a591-96cd240d225d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 109da6ae-1c71-43e3-a992-c0f80572aa20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 2a5d77ee-75bc-4363-98c2-1dddf4768bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 b3d23fb4-c72b-45c2-b83c-c70d9b3699e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 cc37545a-20bd-460c-99ea-3ab66e62d663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 c0a33857-6557-4a40-b927-0e7034ecd69f)");

unit.assert_eq16(16'hE0C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #35 91fd6e9e-b321-4992-be0e-f11d058ab3ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0048;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0751;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'h0753, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #36 2da2ff02-c6ee-45e4-bb39-7a74ee684a3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 e7daff1f-90af-47ec-acd7-e66e8ee93364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 5281abe7-3608-4da6-b875-8d2b8839ad43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 269a0044-0428-474c-ac82-a1268ef48db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 2820f6b7-b1c3-4340-b4e4-2542213faa85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 d3643369-13af-4dca-a5c3-a24a3c405370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 e0cfaa02-7bc5-42d1-9a82-2df87e7a64a0)");

unit.assert_eq16(16'h3728, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #36 10a00bd3-a3ac-40a6-89e9-479b6970b56f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'h0EED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #37 b86af310-2e77-4fb3-ab0a-0731df4ebeb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 5122c8cf-b499-47ce-8b18-706406c40adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 bb8031e9-42fa-47dc-975d-8164f5e363f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 e9092866-24e2-443c-83e8-1960f6e5ca12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 f3bbef40-7056-4f02-906b-e3e79d8f8294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 7814471c-241c-4374-ac31-f4add0828aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 2e4335fe-7d16-443b-9fba-45584d6e2032)");

unit.assert_eq16(16'h93F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #37 71729a2b-3c19-4d9c-b75a-dd6864b4b19f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'h09C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #38 73369936-2135-4bda-8c77-5ca7bb07f89e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 0e67479f-cc21-4041-89e4-8eabc5eee07b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 13209699-f8af-435e-8092-df09aa0cd818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 8f9c1434-8872-41b6-9e9d-8acdd6bafecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 090a625a-c2e8-4b2c-b649-155fdbf076b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 cd488297-3f7e-443b-be53-f1e48de0f65d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 d7adf692-8627-4edb-9734-c42db27a5987)");

unit.assert_eq16(16'h57B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #38 af7b4867-ee2a-4e1a-8536-cd040ee5ed54)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h004E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'h05F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #39 eac4a9c0-282a-4534-956b-e74247a4bdba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 de9fd99d-0ad9-4401-b514-1b035bc76743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 339c1862-d257-47d2-bd7f-e0504c1be8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 f0e0f59a-d267-4797-b00d-26838a32f27e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 06119fd8-1974-4b01-bdb1-78526bb03b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 6da81c1c-faf9-4bb1-8101-d86645d93637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 87a61c4b-2f7c-40e8-b5ab-25db4ae4ecf9)");

unit.assert_eq16(16'h462F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #39 6456f369-1115-402d-a5de-15cc0f386213)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0050;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h072D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'h072F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #40 dd043de7-9a2e-4971-a4ea-8d24ec520e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 85bcb275-59c6-440c-920b-0efb57b79d44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 2a1337b0-444d-43da-964b-820ebf77424c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 9146b6d9-ebc1-4ac8-8c48-b2f4b2ef546f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 d8d7d447-585c-4143-a5c6-d976a6faa44f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 1eea610e-bc37-467e-ba11-299ea93c30bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 44e059d5-e598-497f-a6fc-934014e56858)");

unit.assert_eq16(16'h9D3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #40 1c081903-0e2b-4608-9cb9-5a204992238d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0052;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0715;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h0717, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #41 f7f9e98e-c1d5-4b5b-ac1d-6b383f0f223c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 d1f22064-567d-477f-b112-1f32206b6ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 5cdebde7-55d6-4db9-9136-a8dde395de1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 d65211e1-2e7a-4bd5-9745-efc70ded789a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 dba6eb4c-e54c-42f6-a655-45ee4b21bb49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 4f4038c8-d8c4-4f03-a283-8d077cf13f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 07d7d057-692c-406c-a961-d58cfd321cb6)");

unit.assert_eq16(16'h72B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #41 e6b8626c-dcec-4a91-8f8d-be405e03fe6a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0054;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'h03F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #42 fa83810d-273f-4c30-8e27-7da71cbd5c37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 4714055e-1d6d-41cf-a7db-dd6a370aa79b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 913a3d83-5c97-4b60-bc62-32677a473624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 5d9eb585-ced5-47db-b05a-c650321fd4e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 f1ff7ef1-537d-4a68-b643-f91623c3655d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 160ed46f-e03f-4af5-9aa6-f99a9487fe6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 ec42e559-1b6b-40f9-bb56-9146accdfdc2)");

unit.assert_eq16(16'hD9D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #42 4808d096-1154-4898-9fe3-606ff4354733)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0056;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'h06CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #43 bd7a9758-3ab2-48d0-80ab-a02983e5f3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 1eb2aedb-c48e-4e8c-b8e7-1235e088ccd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 027eabf4-23ef-4545-a03c-e6e706d2abab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 06598658-f130-4326-bd28-667adf419c31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 a6e4f2ee-6799-45ac-8f3a-5c077e1ae893)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 02789839-b8d8-4a4d-be77-b95667bf4c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 67520b44-e4b6-42b9-8f87-e2f71c72608c)");

unit.assert_eq16(16'h99FA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #43 bfb4c57c-c78a-454f-ba2d-516dc319b00c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0058;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0939;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h093B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #44 6fb08023-97f4-4344-9925-bb83120b9825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 f0c023d1-5159-48d5-b6a8-438ab3d9cfc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 795321ed-8b44-48b7-aa3e-1001081adcfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 53c849ca-f5fe-4166-b5d6-ad22ea0f0c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 589f9fa5-7031-49b0-9287-7bbdb039adce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 8508ed3a-8d69-48c3-9114-52c596cf5449)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 cdfaade7-b4d2-48e6-ac96-859254d9e884)");

unit.assert_eq16(16'hC384, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #44 73efb904-9d36-455c-a974-9f7e3a497030)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0894;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h0896, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #45 1c294dfb-9249-4ad9-9266-a9902111bf81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 03b46f0f-956a-4894-9ebd-3d0d0c57de26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 a14693c4-1d3c-4e2a-b662-dca67fee19b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 e2e839d3-c2d6-49b2-84f7-3c961f63d10b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 1a0c060e-542e-45c0-97f0-bd9147d31034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 0cfcff21-d5bb-488f-832c-83d5828d9002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 37d794d9-2236-47c2-ba08-2c94466d3f4f)");

unit.assert_eq16(16'h7A1F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #45 f0e8df19-fd29-4602-ae8f-f3bf5d1c84b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h0EC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #46 ebc248cb-cb19-4842-ad0f-6adf326843d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 ab34deb7-8d90-4e1f-b65a-750f641e73a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 ca37afd3-71ae-436d-b1be-9bcacd0347b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 c7d596da-bb4a-482e-a334-fda4875be4dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 b0f4c522-307a-4ec5-a3f6-becd787e9c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 12c10785-91a3-401f-abde-028e720c3d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 8f863f22-daf4-464c-84af-4419dda719c5)");

unit.assert_eq16(16'hA19D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #46 8076ac05-b66a-4247-8de2-6dcfa03eecc3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h005E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'h0D1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #47 c78a2967-64df-4b59-8201-df79bf93921b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 a46f0712-4238-4a6e-89bf-adeeb5c5f1d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 78a7cb81-5ff2-43c7-b25c-819e1152987c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 80ba9aa1-340a-4eb4-91ff-639c71c02441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 48ea5250-855f-4d8b-98aa-b72469c3a7c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 7ca481d0-802d-49bb-ae13-5d5666515bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 21bff94c-dc32-4f33-8faa-8b221927fb93)");

unit.assert_eq16(16'hD2F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #47 20931066-2770-4b5e-81ca-017661818d7b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0060;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0730;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'h0732, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #48 c5fcfe5a-36fa-4320-b705-e428d7301aa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 8af8c1b1-67a4-42e5-864e-4643dedeafdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 a8504281-b289-4993-9f88-3be5682fe493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 fae89a19-c56a-4279-8c59-c35652cf7ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 0d6c7ae2-d8aa-42a9-9062-58b6c32a32b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 0cda519c-24ba-49c0-8397-ca7a908d55ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 3070adf3-468b-440a-b24e-0b9d853ffa07)");

unit.assert_eq16(16'h210D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #48 4d09a4cb-c249-48cb-88e3-8fa095b28abe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0062;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'h05A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #49 724e2d1f-31e1-42e0-b399-dc94d594515c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 5c7c6bb8-1ed9-4eb0-a40b-e816d9276218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 066f4372-3b48-4c98-8bf7-3a068c89faa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 15dcbd15-0ba9-4acf-b54c-fb42302dca4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 434349fe-5ab4-4fc2-a3ae-3de87d9a2a9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 be55a5e5-8da1-435d-8604-bc1391122d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 4abda819-17ce-4076-b926-b476450a51e0)");

unit.assert_eq16(16'h8862, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #49 a07326b2-e336-4647-8815-48a882787fba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0064;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h021E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h0220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #50 9b0b8f83-3643-4cd7-afcb-b22f416fdc99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 596c0670-e104-4be8-aa96-8e5a1ece86fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 dfd656f0-224e-4fd7-b1d7-7684bb2781aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 421560ce-9c19-4356-906c-679099b47f90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 ba8417e6-2a7b-4866-8f4b-d3b6bd929ce6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 78b48e53-08c0-4bfc-9ca0-ed0be7eafe1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 4437f21c-2171-49ba-8076-cf76602b216b)");

unit.assert_eq16(16'hD90E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #50 97c58217-c1b2-4fbf-88cb-d68906b869bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0066;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0792;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'h0794, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #51 3780fa18-dacf-4e31-9616-326e0964455f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 690444ff-4e40-4207-863a-80194be726f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 8aae12e2-ec88-494a-8e07-de249d3167c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 d9da3593-2246-420f-bfdb-452d40db7bd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 74c51a43-4236-4383-a1a6-ea177cad5a4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 8bd4235e-3e47-4f68-9179-be334473fb99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 e45da262-dd41-4f43-9ad3-6b8995016009)");

unit.assert_eq16(16'hBAE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #51 aae501fc-41ef-447b-b445-caa006a73338)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0068;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h08E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #52 586a8d17-9c2a-4e6c-b138-4ec20ba86f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 1ceeb25b-5cf7-4d3f-a107-6748dcf4801c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 b53ce2ab-fd44-4bb6-a57d-14453365ef71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 0d1f6259-8c80-460c-bde2-a19b5d1707ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 d48313e8-65e9-476e-a093-edf8aa76e025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 13010bec-7f0a-4a95-9a3e-a69c8435e626)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 bb0c2e9a-458e-43de-bbf4-29960b65f8e4)");

unit.assert_eq16(16'h0486, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #52 908f3652-5677-4d3e-8399-db9da28b1b50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'h0C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #53 a148a87b-ee55-4f7e-b8e5-6365589e3d27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 2af15580-5bad-479a-aa5a-1eeeb199214f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 1c798573-a947-4838-ba4b-76b2a857979c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 2fb4a1ee-9f86-4f51-a8c3-b867c4723a2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 60f99ac5-7f2b-4f11-96a5-ff56d5aa35cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 097e7c18-a346-46b6-99d3-9daf2b12fc0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 a055084c-4fad-4e72-a333-e39b7befeb5d)");

unit.assert_eq16(16'hB582, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #53 15908829-9597-4d7c-8338-c4317cf873f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h03AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #54 3d2df282-088d-4fa4-9553-fa5cbaab124d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 cd71492e-b68d-4f32-84ce-e99f726ec0fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 704dc71f-9477-44d7-99cc-ef9a7bcd706b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 bf91f729-b8d2-467f-abc7-d6403c0cda27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 099be6de-f911-4653-8312-de7a00511e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 32d15a9b-686b-4254-bf82-0d3bdfc27178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 245b9af9-fa9e-42f5-9220-e8095263b039)");

unit.assert_eq16(16'h71C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #54 bfb1de40-a21b-49ab-8745-e31bd8f3f97e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h006E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0870;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'h0872, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #55 46ad93ed-6add-41f8-9387-297032eba4de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 70736af3-abd1-4df5-8321-ef7bff8b2e80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 d7c3560f-4d38-41f9-bd79-1c811c337ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 f3848a54-6d89-4d84-a2df-2dcc16370e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 4fa55f10-d184-485c-8fdb-1910145b0a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 f866bc66-71d3-4577-81d2-8c68b48bed93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 f5d2f4d0-a878-4a5c-87b3-f33b98860194)");

unit.assert_eq16(16'h3C24, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #55 cec4a8f3-9540-490c-a113-dda2a846c956)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0070;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0678;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'h067A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #56 8fd9e1c9-f59c-4a1b-a5c1-5964f4f0798f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 8e8a1b8e-a855-4074-ba29-c47fa7913030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 c7cd8af4-46e9-4e28-9b91-70f276dce8ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 bc3a1553-87eb-4158-8500-49a8bf5e53f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 30c36f37-56e3-4c61-a357-b74c3041d95d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 49c445d4-efb8-4d24-a565-4e8e52657da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 cb24503c-0955-4e59-ab06-31838633c211)");

unit.assert_eq16(16'h3DEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #56 e14f9926-37c9-4da5-9d61-49439aa2c048)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0072;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'h0B1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #57 169e309b-dedc-41f1-b801-7dcdb3c32551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 6cd3f8a8-224d-47d6-a87e-7c48ce09f82c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 86ce6ecb-977c-40fd-a271-4f2a2332eb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 6a3ab4d3-7ccc-4a90-b72a-caabd46f5e73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 db8b398c-488b-473e-aeee-69f9f35b845d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 ad0939ea-6d62-4331-987b-29eeb91536a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 deb9195a-5476-45a0-bb4b-2366a4d06390)");

unit.assert_eq16(16'h5494, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #57 4aee4c12-a55d-4b64-a977-817f20f6c956)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0074;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'h0F51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #58 7364858a-00e2-4deb-970a-f84fe5c286f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 70c88b4b-ba74-4875-89c8-8ced302564f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 d21ee7c6-9b92-4ec0-811d-11661d5ea22d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 8fb6492f-e569-44be-8fe8-2a3ff506a8a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 33406b4f-069d-4e64-a0f4-b2f2c5aa8405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 9a07a7d7-ef97-4a86-984f-e27d9848863a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 23169075-4539-4182-ac65-0368002feeaf)");

unit.assert_eq16(16'hDE8B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #58 38fdab26-70e2-4c32-92b5-52360146e8f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0076;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'h02A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #59 4d4993d0-1fac-4576-8cb3-0bd6aac9726b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 be09cba1-be30-4dad-8e3a-d602382fa01a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 2e37567b-d14e-44b8-b2a7-45afc0bb1359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 9a3ff97d-3b9d-42fb-93a6-cdafcfa80fbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 0353fcf8-3c67-4cb5-ab7f-229a11c9a250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 ff8b9366-567b-4dea-9164-acae280f609c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 239f4f2b-95d5-4001-b87d-1fb7442293d3)");

unit.assert_eq16(16'h80B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #59 605530f2-90f1-45c6-bc61-3b57ad5a8aa3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0078;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h032F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h0331, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #60 2acdffd3-bb98-4943-b746-154f8cfc9c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 20f0ebe9-83dc-4837-bbe5-a42821e44164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 ef8bf564-837c-475d-9609-eb514ae4eafb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 10520da7-3e79-4786-8525-e15127125ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 db60c6d2-a904-4c1b-8c80-72dea8768129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 a05f5c98-b0cc-41b6-a0e9-6227ab336321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 f2c6e765-f50d-44f1-9ed8-5b83c67ec01c)");

unit.assert_eq16(16'hDF6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #60 faeeddc5-ff17-4348-9876-b3adb6e91c4a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0066;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'h0068, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #61 b08bdceb-778a-4306-bebf-9abf8c23d6e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 42677226-a859-4d81-8d29-11a00a90e989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 0bca45fe-a9d7-4892-8574-dcd9230bc690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 c2b600e2-a9bb-4113-ba70-2b0753f9e2c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 99690bc3-f966-40a3-a512-e12aee45e833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 e12b8561-0647-4220-8acc-8563f258797b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 fcdb4766-d9e0-4e04-b585-1630b4edede2)");

unit.assert_eq16(16'h96C9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #61 256af26e-ea9d-41a6-a8d9-23b406ce2800)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h0AF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #62 466ef8ac-fcbc-4c4c-94c0-c35ffeed5259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 6d04dfd3-2d6f-4dca-8c29-9f60a4efad44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 5336dc03-86d8-41c2-bfc7-a6bb0f91985d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 f87fb6fb-9d0e-44eb-a850-9b697b675a3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 6cfacbeb-2f7a-4044-8dc2-597ed70fbdd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 473341c5-8200-4834-a0b6-ff9c3193b9d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 a44a567e-5e62-45b5-87da-f97f687037be)");

unit.assert_eq16(16'h62D4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #62 630a07d2-4bfe-4ced-ac35-2e33e05d61bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h007E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'h082E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #63 1bce0d4e-52db-4dd6-ac02-1f77eff1e30e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 081b2403-90e4-4ced-b763-b9a19dad4215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 b97411bf-230a-4690-a035-7ec48bb39bd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 1ffac601-8198-44ac-b60d-379e6dce2d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 2f53c8c8-e68c-4bd2-a5f7-597091e58684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 fb809ceb-528e-4e4d-a4d3-d4d37742a5d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 491417e4-bb9f-4283-8073-d3e81de6beee)");

unit.assert_eq16(16'h70B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #63 236efb38-faea-4295-a1c1-8e84761f8ce4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0080;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0221;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h0223, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #64 615b8f08-6dd5-4c99-aa6e-dace055ece96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 6bd99589-f3c6-4995-8f6d-12ca8e109765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 c5eb4a8e-8e44-4aef-9771-aa868847a3ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 3c7b53f8-a437-4f1e-a557-ffbb19543e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 58662004-2ee1-4153-8019-af848a97a8e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 3241bba1-e612-42ed-98e3-d2c6bbae7bb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 38a9cdac-48fb-436f-9047-e2e9851e7677)");

unit.assert_eq16(16'h4607, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #64 7e600eeb-a371-47cb-ad54-d1e475c79bec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0082;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'h0ACD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #65 6f4135a5-4557-4ff1-8c56-ab77b2060454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 738fae93-c6e2-4ace-a415-4c7ae0fc4801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 792d3880-39b3-403a-8b97-c88fedc8a8bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 d6a9a45e-3e9a-441b-8051-b31aafa06b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 301eba82-b133-437b-a708-bfd0e8cf42bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 7efd7b41-db49-4336-bd17-bf863267d6e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 bde64b02-b90e-42c3-8384-22edcb0e64eb)");

unit.assert_eq16(16'h901D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #65 77d4cc89-54c5-4f27-b996-e7c8080ee382)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0084;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0427;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h0429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #66 8638405b-8d5c-4369-b122-1222270ba82a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 4e290df3-b9e1-4c7f-b5d8-bfba4d553c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 24ff6e0c-f926-4ec3-a73f-90c4e54d2b91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 9162d64a-29b2-4eaf-a645-cdfe6bb6f244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 20fa7bf3-8203-4417-9133-6cece69b703a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 2f3d7d30-4007-4be9-b330-6353cfe1be7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 8610a3e1-5c46-465a-a13b-6551b6389f7f)");

unit.assert_eq16(16'hCA63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #66 d48837d0-5aca-464d-9eed-a891e4fc8b3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0086;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0175;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'h0177, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #67 20b1d868-f5ec-4e73-9084-1989c67170ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 0c48c55e-fd05-4e7a-9a92-793124574b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 e942fac0-6c9a-46ee-af7b-a5ef4f33826f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 41853b8a-ec43-4dbf-8490-331d49b8a7a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 59e6e6c6-3172-408a-bd33-45beb692970e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 641525a4-3663-4649-a87a-80f6aca1c52a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 7c2c2c89-757d-4b01-ba09-744985aa41fc)");

unit.assert_eq16(16'hFAFF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #67 1541018b-4d9c-4cc5-886e-1b4f2f6f6a10)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0088;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'h061C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #68 5befa032-3c8f-449a-8538-ca3b2e46d4e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 75b4e147-0ca0-4f78-b936-93251af6fea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 4110db16-2141-44ef-9568-905e76c41fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 c9216a9c-3405-4047-b1a1-e845aeea847b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 2e4bcdfc-5e6b-4dc2-ac16-048395ba5fbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 fc925e27-1d99-42e1-8836-f421b4415682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 2d68531d-4552-4a58-ad07-8c4b3473de28)");

unit.assert_eq16(16'h6D40, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #68 fb75d07b-f4ac-49b1-bb46-f36945dd227c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h0B90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #69 722ebfbb-70a8-4a11-9002-5005be9acfa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 21403a6a-2c1a-4534-b191-a4126e3cd631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 7c30ac5c-14e0-4587-8c29-adbd7d4598a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 b2da784a-79bf-4099-8fee-5d7ea62a71ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 0a3214c9-9e4d-471f-b937-b46ce5dc4d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 06ac3a1e-cb15-4ea7-8f76-fceed6393833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 d3eedf69-4092-4b04-b2de-103a309b22dd)");

unit.assert_eq16(16'h3E37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #69 f8937a0b-f115-46dd-8d84-fb943bd5ab0f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'h0D9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #70 3a3b6f09-0f39-4011-93ee-8b1d61c18735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 07d5bcd1-f7f5-42ac-a97d-12ba577a639b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 537c4b67-58ad-44b9-bb02-d12879462e27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 dd000b62-5a13-4eaa-a149-6d4a186bcab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 a43244a4-1b4c-4edb-81da-d17fa8c9e5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 4b636b0c-1fc6-4b74-9377-d616f23dc023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 cd3cdb31-195a-4bed-ad21-40882619f7fc)");

unit.assert_eq16(16'h097B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #70 40dc3be6-d76a-4ff5-9786-2e0a731ac6b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h008E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'h0CBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #71 ebf31e49-33f1-402f-993f-bd0f1de96327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 1dbee85c-b9e1-420d-8480-829fce4f7371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 198dead9-0b5b-4c5f-95c3-aa27854e0729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 5cd09cdc-70da-4c97-b64a-3c18000440fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 717addc8-84ad-447e-a65f-6457ae42871a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 2445bb04-edf1-43e3-9ab1-b44552e403f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 8484e476-aadd-463f-bac9-7aeda7ff9873)");

unit.assert_eq16(16'hE3EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #71 4f46034a-b430-4a7f-b531-617447090e44)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0090;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'h0E8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #72 f4c67368-cebe-46c5-8746-034a57176967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 77e0ed74-49c4-4831-abf5-410f3193b203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 d24954c5-a6f0-4297-9b7a-7bdf165ae854)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 5c42aaed-3b51-4821-b35b-dfcd03512b14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 509417d8-acee-4c88-b90d-efa6f81b1f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 009edf57-a9f9-4249-8569-5c383fadf831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 09247953-a164-4ee0-962e-fa5d59e07171)");

unit.assert_eq16(16'hBC24, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #72 bc61d986-ef45-4df1-8a84-92d50771eae2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0092;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h09A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #73 a3145738-154d-4f56-90c5-b08957e12065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 4e91c470-eca7-4951-9140-70df767c9431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 f4cec080-7fcb-4156-b084-fc727004f2d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 13b9de6e-81bf-4c56-9777-f2fa67abe83b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 d3556856-6a88-4c12-805f-4957698c500d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 40dd162d-d92c-4a15-8529-69d5de35dbe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 3aefeebc-8f65-466d-a283-df345fb95dee)");

unit.assert_eq16(16'h71C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #73 3a8aa766-e430-46b7-a0cc-f50b2e7431aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0094;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'h0B9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #74 bed9eeea-e654-4b35-a291-a5a6fa6fee97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 83132efb-5a09-4046-91df-f11d8d7c578c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 8cebe29b-fbc7-4194-9859-9aa7875fff6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 b647e42d-649a-4492-8434-0a71b965ff61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 a4837164-4eb6-4831-a30a-07f766b3442a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 292e909d-9e25-47ee-9104-3ebf46d2b93d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 e4c2c2ae-5cc9-4255-ae21-775f29db61ac)");

unit.assert_eq16(16'hCB58, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #74 ac44688e-f27d-4032-94e0-5703183bce92)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0096;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0480;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h0482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #75 804e2336-4aac-41d5-8fe9-2e89f52353d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 9bc16024-374f-4c16-8af5-27e776b1a67e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 55437af7-112c-4207-a6a8-cfa38b6c2302)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 121c7866-8899-4d20-94c1-f0c01a2ac766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 36edf999-a9ef-4724-bfec-eff7391470bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 f84bf6d0-1fdc-4bd7-b02d-2539c7efa080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 5d11ccc7-e541-431b-b35d-b64dd82192a2)");

unit.assert_eq16(16'hA3CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #75 97566605-19a5-4f93-9925-7c79c81f4856)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0098;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h0C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #76 93d9dbfd-1f1c-4faf-b11a-222c55072fbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 54dd09a2-2b7b-4108-80bf-b2fa7f69c321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 5b24428c-b2e3-4a20-8dea-77a62bafc548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 8c053f1b-f5ac-464c-b295-a06ab90fe0e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 fb9e0f03-2139-44c1-a9bd-1441716a9a47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 27d47c65-d31a-4c29-ae90-695205ed62c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 eafe5fe8-b4c5-4437-ada8-e4d55ff73dd9)");

unit.assert_eq16(16'hD113, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #76 d509c8e3-06f0-40f0-a620-88149351fd5d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h09CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #77 03f96e2e-189d-4017-818b-d4af410f39b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 2e42efae-e69b-4c6e-9060-f90f8ec62fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 3273d67c-6016-4899-8d41-a9b92682ccb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 d3fc3ac4-eae3-4ca5-967d-709b94fa7b17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 4d8d976d-8e03-4317-bd3d-75a6aac8402c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 afd80e4f-daa5-4a0b-975a-a4ceb291affb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 6f62b080-7fdd-4e34-83af-e1dbb4b73676)");

unit.assert_eq16(16'h02F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #77 84ee2da9-01b7-4586-a4c9-1ab4edc913ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'h1000, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #78 a87bdd67-2574-4797-8819-b3814a261ecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 a53cf3c3-c056-46f0-9c7d-e68d0a58d83e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 1f042019-c965-47e1-a2a0-0973c3e5e13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 b24b7f12-5442-48ab-b4f9-0d6f9c74c728)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 286579ab-4895-49b6-a5a8-f92456c99a43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 2dc0f1e4-c28f-4429-abf5-0ee94928d531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 46a65401-fab1-4d65-98c3-cecbe73fc1ed)");

unit.assert_eq16(16'h0244, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #78 b6c3c432-bbba-49cf-a1f3-612365c9263c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h009E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'h00BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #79 ade87af3-6731-4974-b41a-505f6ab8c2e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 ccd16fb5-90e1-4e94-a1e9-1638166a055b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 78029771-7c1c-45c9-ace7-0638ee54fef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 c3d1d855-78f2-4ea7-a503-d5bedda4fb56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 6249a38e-01c7-4ac8-a279-509ce8da59d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 5e07f7ea-47a9-4737-8235-3c57f60858a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 001c2e53-dc7d-4113-bdf5-0f65c7ae77e6)");

unit.assert_eq16(16'h94B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #79 cc9bd927-c00c-44bd-a653-fd09ca690b57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'h0A59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #80 41010737-8540-4472-9ee8-6d1173303665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 512090f5-af60-4751-8de9-432f0e5ea3f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 e9b6cdcf-e133-42eb-b4b5-b34031653982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 e7dcff98-0120-45ac-95e7-a95314ba975a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 74dd4b47-f2df-404c-b922-267d53f59b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 e02e85a3-9e93-44c0-b05f-6df30c051dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 88f44fcb-3b0d-44d5-9b5b-724e1795b3d1)");

unit.assert_eq16(16'h4D03, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #80 09974ac8-fbf2-497f-8291-9711ae901b4a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'h0F82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #81 8d2c98bc-7056-4333-a148-9ab9fc933986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 e69d1e50-decf-4ce3-a3bc-8b63131fbc22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 234a4650-c271-48be-bc6e-55e7f734a855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 93c757d0-d4fd-4165-89d0-7cda76220547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 133ebbfa-6963-4598-b4d6-624cfa9d3649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 3711c1a7-2b0b-49ab-916c-e7178e38ef1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 9eda8612-102e-435e-a028-5b346eec13ba)");

unit.assert_eq16(16'h824E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #81 3b6f53b9-6a9c-410d-a11d-691bf5fb9c72)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h05DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #82 239d0174-e065-4901-97d8-be3aa665bf3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 2fd3c5ab-dacb-4af7-8acc-1066826517e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 ebdf48ea-9046-42cd-82e8-507a08b97609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 a35244e3-22fd-4911-8051-577fecbf93b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 353b394b-1e1f-4002-a6a1-1244360790e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 73b87aac-7a31-4bb0-a5aa-1db658ac0ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 0b0ba8c4-7805-4078-8270-62e9ce3656df)");

unit.assert_eq16(16'hF116, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #82 b59a7e41-4843-418e-8eb9-fa095ba4aa0e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h081E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'h0820, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #83 b63f2035-8a2c-4de7-8ef8-8e746c882adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 e8d8d898-d39b-4e26-9c88-da07e1fc8c75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 69ed1984-8469-4b0f-b1a2-e78e634bb9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 891fe65b-4e73-4e80-a4f1-5f3c25a792db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 4109f84c-4806-4bcc-926d-fcee688027ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 8f1cd07b-6d79-4ce3-aed7-79e93082d97c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 e90a5f1f-ae13-4cf4-9a39-f7600aa6392c)");

unit.assert_eq16(16'hF0C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #83 75374385-b290-4417-bdea-f289b41d8d0c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0329;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h032B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #84 461542cb-7eb7-4133-bad5-f0e4f828879c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 10168fd3-ae2d-48ac-b8b0-ef751ba9e27f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 73986ae6-3292-42c8-9acd-46624cc32d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 1d77395d-f20e-4f7a-be77-526d8f3d415f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 91e6c6a6-1bed-408c-bbaa-49df9950791c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 dad8fce1-151b-4f3a-9b04-9fbdada7dcc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 78a91519-4bd2-439c-82a2-bc6aece4b26c)");

unit.assert_eq16(16'h0561, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #84 945928ac-f491-40e5-bc00-7503214d586b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'h0C4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #85 2b60bca9-ecf6-4995-ae2c-ab088fba10eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 eef60fe1-d6e6-4d78-87a1-75afcf9891eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 f2e99b00-d6a2-4cef-b2d2-575000688094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 28dc7805-49a4-4329-9d37-3a23aab7d0f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 b44bf840-cc81-4059-a2b9-8d629d7fbe2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 2ba7bc8d-3b87-4e64-8179-03163ec11480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 05eb3882-f167-412e-8a99-06d85d8b6105)");

unit.assert_eq16(16'h8C31, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #85 0d9cde76-8cf2-468a-a583-f1a61634fe21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'h04EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #86 ce2606d8-02ec-44f0-8c29-679ed9b01405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 012f7388-66c4-4c38-bf58-277e9510ec74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 f7519199-78ed-44d1-90ca-9fded986652c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 5301691c-2219-4b40-ad34-e823f39eb6e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 196af17c-5c84-4978-8ca4-792afeff10d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 ee6eb0bf-489d-4b89-9f15-4733288faa95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 688a153d-9f2e-4d75-967a-26b465948a36)");

unit.assert_eq16(16'h4D6A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #86 abde0b10-ce35-4165-a336-a9624668a1fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0531;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'h0533, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #87 0cc847bc-2b25-4031-b0d7-7633e1fcf9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 5894f05e-f80c-4768-9747-94a077918703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 2761987b-594c-4da2-b8f2-429e341de63c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 91a34ec7-d152-46d2-a0a3-55de5467a0a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 0d38f257-f4ff-436f-8469-f7aef95dd793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 3081b4a2-11c8-44d2-90db-338cdce9be8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 df9553c5-ad77-4ede-8ad2-67c6d82ccd30)");

unit.assert_eq16(16'hAAD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #87 c35cd699-d7df-4f6a-a0b3-c487a30df809)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0979;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h097B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #88 0f591eaa-7601-48dd-b836-dc2f4683df74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 2910dc3f-11b6-4ec0-9645-1b535e53281b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 d14799cf-0ce5-49ec-afe0-284a470001ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 4bcb82f7-f746-4dfd-89f9-0a16509a310d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 079cb0b1-bc2d-4277-ab99-19446f72ba18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 e4ded4be-176f-4728-879d-3295721b98f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 5dea899f-870b-4990-a457-cdde3ca31e73)");

unit.assert_eq16(16'h8260, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #88 111c48f8-e60b-4f10-9aa2-0fb660f11817)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h0E33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #89 e1fcb5a3-aca2-4c8f-96f3-70f6ccb46537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 17ef10aa-c4fd-4623-94a6-b7ea538a8e2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 39b02feb-f182-4c9c-a990-fe84c01ce7e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 92f3d730-975f-43a7-be94-044883ab96a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 c45fff5a-5cb0-477c-90bb-af4b0340eafc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 69c2bc5d-5320-41bf-9290-3698c26481e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 b678800d-737e-414f-82f7-729bc52a149c)");

unit.assert_eq16(16'h0DB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #89 e26ca733-bfcd-4bf4-97cb-b9181fea2f4b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0943;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'h0945, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #90 a4b84d4a-ff6c-46e8-94ca-7f214ca509a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 d174de57-0bdc-49e2-a158-d5e848cc40de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 1584f036-7a8f-4588-94af-dfc3a7649260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 f4494f0c-b683-4469-8d56-f5337da799dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 33336d7a-f8b5-4e25-9f40-0daa13eb4f4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 cea6f55a-d4fb-431b-ab56-8e6345e19a32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 148bc3ee-7206-4fa7-a485-810d90fff913)");

unit.assert_eq16(16'hDCE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #90 de1e2f30-3b51-4c6c-894e-1d802bbe488a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0341;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h0343, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #91 233b5f8a-3eac-4fb6-be5c-436b1025c042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 43edd917-a141-44cc-a350-d2faf44deacb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 49c99ae0-84b3-43e2-a27d-7ab5b5e13181)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 5a172349-baeb-461e-b988-12a8ed2b8ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 b61eabef-48e7-4bbb-90e0-7be4def9255c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 27b71d33-13fd-48c5-aa08-db048a542d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 95c6b931-76e3-4271-86ca-5a8ee1a459d8)");

unit.assert_eq16(16'h45C8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #91 81859825-b4d5-4669-ba66-d989ff61e990)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h062E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'h0630, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #92 dbf77060-e178-4c74-9fd7-059a01959ed4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 2b337ef4-6dbe-4b28-a239-8bd6852abc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 c3f0305d-99c5-4294-bf05-866e7a9a45f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 37716b66-2e0f-4636-9540-f51a2e9265f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 f96aaf78-3a4d-462f-a311-9c148306c2a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 fba92184-b98a-41c9-879b-418d4533c77d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 7ed8b628-e9be-4478-8b77-2bfb9e54c5c9)");

unit.assert_eq16(16'h1988, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #92 88ec4fc0-5c97-47f8-b113-9725d70f3713)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'h0FDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #93 38b5045c-1706-4147-bf01-7d15c2c3a4cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 41246020-05ff-4c7c-8087-93a209099854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 a186e0df-a820-4973-8827-97dbecdd7b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 f7692ac7-027c-45fe-9184-f3be8ca197a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 b24a8e34-89d6-4157-969b-4bad11c925a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 eb83c477-acbc-4d6a-970f-0875a1d645aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 df9c3e3c-6bdc-416c-be22-1fba54190f3f)");

unit.assert_eq16(16'h6689, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #93 c69b791c-a481-4b6e-ba9d-0306b5fe0a6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h00F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #94 f3107ae7-a3b2-4880-af80-66915b793ccf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 db6d0de8-a09d-4f67-877b-3e99058fcb94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 9182fe7d-92fc-471c-8250-2d76754a000f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 55696948-136c-4b67-8c9e-7944735226f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 24491d93-b3b5-4862-8cd4-a7ef3f1a1f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 f384958b-b49d-4308-a62a-8fe3cea8110d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 a9000800-ac90-4b2d-90be-4d5fb5050f10)");

unit.assert_eq16(16'h5BBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #94 26220a2f-110d-4595-bd04-dc2203036c9b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'h02C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #95 842cd263-b307-4011-ba52-433f8f0a3ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 b44985f3-c427-442b-ac3b-dc5f2752acb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 d8bb3671-6a59-4a8b-970d-d238e5b8ce87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 0f4be782-fa40-4ee8-a0cf-bba220690d2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 86584544-23a4-4fda-a85a-dccae8bdbb82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 44c0e8cc-3e2c-48f3-9a93-19895a640a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 2357172e-6d3b-49ff-99dc-bd716fc2b438)");

unit.assert_eq16(16'h5132, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #95 8fea8126-5dc0-4e40-a3be-03e7f5350095)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h0D2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #96 d181b3f2-c0af-4c88-8657-9628e0ba59eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 9db8d25c-ec45-4797-a35d-23f5035675ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 6b2e1ba9-83d0-4161-87a9-e78342182576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 d33a26f5-3dea-4438-ae79-05427484c4f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 06fc056c-cb11-4d1a-a665-68355cee6fc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 6648589e-8a64-4c89-8f9f-b59fc3c75c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 68831463-8e98-4025-be5b-b904d0178916)");

unit.assert_eq16(16'hD3D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #96 461fbabb-e26c-4c87-aba5-5ef63279442e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0223;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'h0225, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #97 efc3629d-f813-422f-b550-970ea4be8462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 dbe2762a-4e90-49f9-8322-4b3019f642e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 a0c51568-1e1d-41eb-bbfb-32d205a08c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 19acb7c5-37e0-4dc5-93b9-679ff5c47d33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 1754e739-56bf-4b5b-8b1a-663b54a2c38d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 8ec9e431-011e-42cd-8b0c-e890cfbfc1c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 c1070f7c-8b42-4f4f-88bd-a9853f962bd9)");

unit.assert_eq16(16'hB04C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #97 47b803df-31ff-471f-a0b6-d6af11095686)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h1001, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #98 358ceed7-88f4-4c87-8980-98ef59491b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 5d7299f4-d48a-4e2b-a6c6-092472d70f7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 61775266-470f-43b6-a0e2-41696511d9ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 2134fefa-ca60-46f6-9066-62f7040da6a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 5ef6642c-5c46-45db-9cb2-11021d56240c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 4a8b332e-23d2-4076-bd09-541f88bb0e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 8cd1048c-d1bd-43be-b211-33b4b1639797)");

unit.assert_eq16(16'hE302, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #98 5982c143-73d3-4873-ad08-507e1b7559af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0040;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'h0042, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #99 2215d68f-00b3-44f5-afe3-dae6a43b7c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 e59428d6-22cf-4e06-81cd-acd2429b29e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 31858010-77f5-4202-8323-b611adad2fb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 ce1ff59a-9350-4eaa-a226-3dfdb38ab91e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 3873f657-00e8-4ed7-93bd-49f965c9b6d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 6f476b27-4c94-4113-96c5-fddcd7eee516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 4b82b8bf-fd60-4b5a-b836-cac325493f89)");

unit.assert_eq16(16'h725F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #99 fc62379a-c414-4ffb-94ea-137f52cbae55)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h0AC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #100 b8ff0362-4489-4918-bbd0-92c0095cddc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 c96ed1bc-d5d9-4c9e-bf7b-e221098d0207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 268fe8bf-5685-478d-8f02-8371140540bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 e7a8eb34-2645-42b1-a4a1-10c2c9676f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 b73a934f-69e2-4b57-950a-c55ae2961a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 1c873235-d802-48f2-bd2e-5e82e1ada71a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 3349477d-546e-4550-9c37-b124ba890c53)");

unit.assert_eq16(16'h6745, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #100 b82cd5d1-aeed-4c0d-9e8a-8027342fc6bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h0FD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #101 5da65b72-45cd-4826-8089-eea00f9e70fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 d104c566-9d6d-488b-bd1a-d640b09ca2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 ea55fa6d-7841-4c07-a1cc-6a3fe075db61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 a7ebefcd-1e1d-4954-9517-ff85ad939589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 1e8d7663-c815-454d-b61f-47c9e6b19863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 a1147d3d-5a0c-4ca1-9645-38be0e6483d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 8502349d-1731-4d55-a40d-ffdd1116ca36)");

unit.assert_eq16(16'h879F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #101 d881e896-a9e7-4484-979c-b3c643e3df33)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'h0E2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #102 fc891ff6-dd79-45dc-99ed-8a416d7cb92f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 9df01bdc-db4b-458b-9f8c-8f70e81e28a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 b874e88a-1827-4b0a-952e-af5d758e793c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 a1610353-e3cb-45d2-8753-1c742b0a76fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 976fafa6-d5d7-4760-9c9a-a9a528b12dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 837a02b5-252c-4149-a147-eec1a690f235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 ba6076db-6db7-46d5-8c7b-55462417bd56)");

unit.assert_eq16(16'hB05F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #102 860e811e-0bbc-466d-95cf-edfae381b5d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'h03A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #103 4cc163ec-5235-439d-8b54-4c823ec9f0cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 62b54980-89f8-4284-b36d-caf152d305a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 5ed2eff8-c0e4-4425-a8cd-088eb5eebd42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 4e7683ee-f649-4406-a5e3-d1c68be50b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 52d31b06-eec3-4013-a846-eb6deca7bbc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 a1d0d7c1-edff-4432-b7bb-6695b9df5b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 cbe31692-8a2c-4b61-a13d-ac40e4a05fb2)");

unit.assert_eq16(16'hC1EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #103 f3ee2224-da5b-4ee7-af46-e188508122ea)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h0300, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #104 3c090d7c-6a58-45ea-98cb-935ce1dc7f94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 82a967af-ab19-4c9f-a3be-2b20388a6104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 d7ee11ba-eada-4c0c-b493-691975462099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 a2fcd232-7e0a-44bb-90bf-169c7d024461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 9cce2e96-181e-4c68-bc6e-e4914b2946b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 2c178675-8730-45d6-a406-c629b40d711e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 eb7f00cf-05b9-49d8-b752-69618ea5e371)");

unit.assert_eq16(16'h0A49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #104 d48cc5d1-d21a-4b2f-8a12-7435d8e6c242)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h0BC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #105 db7ce572-df78-4e47-9f2f-295b7197f7bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 c620d384-2ff1-44a4-8308-b411f152555a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 1b81e8a0-0e76-4b45-83ab-41049b5f8f88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 c07a46de-2bbe-40eb-a72e-2135174f51fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 b389bbc4-464b-49db-8524-3c58ccf67bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 ea7e6a2a-76f1-4475-941f-c9e555657571)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 118452ae-cecc-409d-be55-8d2bf620fcf4)");

unit.assert_eq16(16'h2A5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #105 42136553-b3c3-4717-a00f-0a2af1e76a22)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'h0A36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #106 3ee326f7-8764-426a-ae2b-f9601a68e7d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 3323c696-d788-4be6-a7c8-95c0fc9d54ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 38b13475-e1d3-44d6-aeaf-7664497f655c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 37594a5e-2a6f-4cf3-921e-6095c50feb2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 7048cfd4-6406-49ca-97ce-3337a1e3098e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 9281e7dc-02c6-42c1-9b7a-1a5c5dbfa267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 3352b5e9-ee3e-405e-95b4-8dcf13f59bbd)");

unit.assert_eq16(16'hE78F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #106 f76a722d-4e7a-4e01-be64-3633efa33878)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'h0F15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #107 f42f9446-3fa3-4a5d-8419-0cb50dbfc66a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 6253879b-d273-418c-8fd1-1bca9f5c4e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 f7d1a456-f530-4fdd-b725-71bf7356c557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 a1e40621-d71e-4b6c-8d9d-5f55f907a9cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 0e51c18e-7b6e-44b2-89a4-d200b123e15a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 9bce2fcc-df15-4c23-888f-a1fd9a9e22ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 27cff529-7be7-4322-ab62-0dcfc5b2cdc6)");

unit.assert_eq16(16'h33C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #107 30bd1ac1-9065-4297-b9d9-e69df8f90c25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h0DAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #108 7c63cb41-2ec1-43b7-89fc-53da8c8c87d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 2288af2c-69c6-49de-aae2-ce047a06c19b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 bdd81942-b81d-4402-beca-02b217dfc33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 04ffabd7-f822-4193-b4df-61f2f0ec9f3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 6703f1e0-0735-4bcd-912b-aef260d8cac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 f84e0b49-7f2a-4531-8e4b-40e384266573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 81ad9fdb-44a7-4189-8272-19b96bbe242e)");

unit.assert_eq16(16'h4093, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #108 bc7313ec-a748-4b43-bf3e-342585da5bf6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0259;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'h025B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #109 2afc5814-9c90-4c8a-b9b6-7dfba45aa4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 6538b23b-46ef-4c10-8665-fd10140ed8b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 c6cce90a-d847-4292-8130-d8538d03e866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 027a18b6-daab-4006-9ce2-38fd4bc135ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 cb953df5-8b10-4ed0-a6f0-38239888b25b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 3ed29bf1-f6fb-4ae7-9c57-07b1a8408028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 21c3fe14-83e7-4316-bb78-f55eb426567c)");

unit.assert_eq16(16'h3D4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #109 1e6373a0-0376-42b9-b869-fc529c8085be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h007D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'h007F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #110 f3f31cc5-2892-4b36-abc5-aff0e0c98254)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 c2ab8daa-7f5f-4b6e-a078-0922f4750424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 40f5b6d3-2796-4a45-85d2-d3196e97c8e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 5ec2a15d-0fda-4c57-a571-766b618d9b83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 5427773d-0f42-4faf-a81a-b15777ce3bc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 8c114242-fa95-47e7-83ad-3defca415d8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 f2f14f18-4c46-4abc-822f-143bc5984c1c)");

unit.assert_eq16(16'hF196, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #110 edcd7bbc-2fc9-4709-ac79-85c365440a15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'h0B56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #111 c32170c0-8dbb-4a59-85e3-198ad8f1eb63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 c71904af-7c09-43b1-b575-bb6cffa7cfd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 5c5497d7-807d-4163-9774-68c6ac601dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 efbd2fcd-1c8c-43b3-a632-883981e5aff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 e0c0a60a-5620-4c51-9716-a7f7c6c071b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 90f99153-d498-4077-8f49-2e7b0eec1175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 2d51c991-d680-4d66-82ea-5279f82001ab)");

unit.assert_eq16(16'hC35A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #111 0504d57f-5326-41bf-ba68-7c7e237e6509)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h0AA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #112 9b344a12-3b08-4975-8109-8147f83edc5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 e81478dd-2671-4e43-a014-a89fe119bc9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 d82957bf-ecda-4d6e-8ee2-bdac7a339a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 a6f528db-53c5-4c86-a854-0cbfce5958b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 d48d16f4-4e64-42b8-952a-0c33f689bec4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 76e891b1-0cde-4420-aaa6-bc8d9ca6bdff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 2104674c-79e1-4b1a-9885-08b3a4fd43b5)");

unit.assert_eq16(16'h876B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #112 71c481b3-28df-497c-b80f-dd3141a44709)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'h0DAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #113 8e78e087-f664-4fcb-bb19-8e99e25d4b6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 51ff6aee-5367-4cf7-b95e-d3b29ce6cf1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 f6f50202-8c49-4044-a35f-ddc3eed9c133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 099c86ab-02fc-4c94-b4ca-0e91b0c40beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 9b02293a-ac0c-4d18-bcdc-faef4a28a29c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 08f24676-d6d3-4a56-80fa-2755f997e2a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 38b93a0d-a8fd-43a3-a40d-b06ea281e45b)");

unit.assert_eq16(16'h4093, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #113 d6f12216-a5b8-469f-91f5-4c5558266575)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'h0D3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #114 9b0688e9-e8b0-4664-af28-45d6d5245205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 bb957413-f57d-47b7-a2f9-0229e66cd888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 09af0162-d15a-410d-ae66-08948aef59e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 824759b3-ea29-4e05-b004-ce497eb2ca50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 e4632438-6332-4523-9207-bc5cf07ae4a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 b4a56a40-29f2-470b-a187-c8a199f5839f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 3c0f8667-c8c3-41dd-aeaa-1bae4215bdeb)");

unit.assert_eq16(16'h0841, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #114 f2d126ca-f676-481a-beb1-3970e9c0d93c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'h05F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #115 0931a941-fc21-438a-bb34-95e6d3a0a9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 a309f18e-5234-4974-831a-fde10cf823ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 f0c83bc5-f62e-45de-9cf7-22f3669b772a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 e7715e6f-cff8-4613-bf59-0b2e24d69c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 90b1c8fd-bf87-4995-9409-380f22e02e98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 6e872e2f-b037-4749-a812-efed5b6c2a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 1fec1b98-c188-46b1-b2ec-69c3cb1039db)");

unit.assert_eq16(16'hF9B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #115 c95c09f2-0a06-48f2-9061-af6a3e3b6557)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h0D73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #116 b9162b91-19ec-4520-883e-1b7f4b84f298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 90b1a7ef-cf17-40c6-9b1c-fb460f7a7061)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 c74c7509-86a4-4475-8357-f9aa64b8cbfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 8e339b11-a790-4cab-986f-0db1a6c7810a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 be9403e8-4947-4d7f-bcdf-f437a99b71a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 bed5e125-8c66-4c18-a13e-fd95fca1b6b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 7f064b3b-643b-4737-bdfb-ba5fa2109e4d)");

unit.assert_eq16(16'h7AD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #116 27337fdc-6bde-417f-8667-d1cae56d5f36)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h0CEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #117 480507a4-5a73-418e-b642-1f440bfbb2a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 0acb2838-f915-4622-bd67-9ea3f191308f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 c66f06f8-57ed-4b4f-b628-acd89e563295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 5f2ef52a-b81b-416f-8ae6-009c5b165079)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 3662b45b-1efb-4b95-9cd9-d4450ecd7c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 96755878-8f2b-4a5e-b31e-f34d6ed269fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 1a75b5d2-233e-4961-8bd2-49344f889024)");

unit.assert_eq16(16'hBC91, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #117 8319d6d0-5268-4f4e-971e-6538df30d0c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'h0A94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #118 e45414f9-1175-4896-b288-5f2c2c3985b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 0337f631-992a-4371-86be-61051db0057b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 605f8425-ed7d-4b04-8537-5e6d0e7a9a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 44b3ac46-daa5-4b71-8713-a0f2e8256839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 a7c297de-c82d-44ca-80da-5aa35cf243ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 bc5d5334-86f7-4f80-8299-ae7f5d22345a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 ad91b3ba-fc6b-460f-9657-9a7c301a2883)");

unit.assert_eq16(16'h1203, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #118 3749835d-a9b4-4710-9727-f5cc7a6a620c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h06FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #119 19dda3b2-3981-4d93-8c5c-8a10696a7bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 c9e0b3d0-c9f4-4fd9-bba8-f5a8b3b25ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 e1f29b86-7b11-4121-b5ff-9597a84917b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 48e59ade-7589-4a91-a901-d4a7171bd457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 9afd7fa7-4c76-4758-aa75-6f54478f7dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 0d68e833-21de-4ee1-8dcf-35628ca560f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 3f55c3a8-11cd-4817-9247-3b3e993a8b21)");

unit.assert_eq16(16'h4E38, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #119 126d514e-6649-49e4-a35f-f8a524eed098)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h007D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h007F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #120 209b67d7-58ef-4c0f-9189-56bdd91f10f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 c59df1dc-e6ce-43aa-95c0-9738e379618f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 78cb53bf-a719-4bda-bc7d-a56138c8698f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 f3341a5d-f435-4623-aa7b-9a8bdae3d6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 1704960b-3267-4fca-ae58-f7186e1fde17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 ac8b79ea-c7e5-45ee-a054-d28073003128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 1615da28-0c05-4c1b-ba3a-8323bf4019b1)");

unit.assert_eq16(16'hF196, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #120 e001902a-0b79-4331-9f35-af3fab3ba731)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0013;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h0015, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #121 80d614b0-d5d1-40aa-af40-84659233d6b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 a71da0ee-b675-4a2e-b8a9-cf645d76606d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 c643ea15-d0b0-4160-8325-b452541f7a94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 cf7ee3fc-84da-44d1-8bb8-eb4e0d4b4684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 c3b3e3a7-dd1d-451b-992a-0eccdd5d992e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 048a42cb-1bce-417a-b8e4-3adfc972ab20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 5aa78eb8-57c4-4a63-9bf0-fa5b23a1c404)");

unit.assert_eq16(16'h6FD0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #121 3091e3c3-c7ef-4602-931d-bcd69477322d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'h07E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #122 11161cfe-775e-4dc5-8de9-264dcc87c280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 88021214-c2b6-4113-b7ac-65c53df3e033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 4ce19fe7-f215-40a8-9a6f-72ca84d81144)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 89bf559f-91e4-4008-9ae2-cabf9f44b4c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 25029f97-6631-4dca-84fd-0bc5ae64064e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 6019135e-0362-4766-a84b-a806ec5f519b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 ea2034e1-1e32-4b5c-8bde-3b24dab47495)");

unit.assert_eq16(16'h28B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #122 d03f0618-4e41-4164-9bc3-33446c77bed1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'h0DCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #123 786e878c-1587-439b-adae-b6a93e6f596d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 de3f66e2-883b-4864-8b88-15f586481c1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 08a1e1b1-33a2-4298-bacb-f0b84276c1d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 1d5420bf-7cec-416a-ad1b-70a0dc1bec8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 7a6de642-6f5b-4eaa-997b-0439b177c4bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 c024cd6d-f5eb-4981-a2cf-ecd80b100a9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 a55aaf43-b1e5-49b5-86b1-2e45597e99cc)");

unit.assert_eq16(16'h5D0A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #123 bd56ed7c-1c37-4db1-ac49-4dc74030f4e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h0D16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #124 07f8d35b-33ac-4c50-97ca-6e99a8889739)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 f6af43ab-63bc-4ffd-8bd7-e4689b2c0f85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 e0328641-ca41-46b7-9e4c-52be59291354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 8a3c4085-ca18-4f60-8f14-08337beddd9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 54351539-68b9-4f51-8a07-ede2c8bfda28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 5748ac09-81f3-4df3-b4b0-6756f17595ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 d539c54e-da33-4202-8cc5-bc8141e36600)");

unit.assert_eq16(16'hB64F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #124 43f73082-8848-4972-89d8-6fbbd571ed28)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'h01B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #125 fb326a22-2c0c-4b66-a4ba-3b85e139cd55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 5793a8cf-3341-40c6-bae8-fcaa5ad0a4ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 e5ea13a7-53c5-4a9c-82ca-73b850d38fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 6a34ecdc-052a-4a1b-9c3a-e757d0f0d184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 9fced070-e2ef-4de6-94e7-7eaf8d6c3fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 7e628b00-8c6a-4b4f-8b69-1c6036e3d040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 619b7fd3-3c9a-43ee-9170-809370928d0c)");

unit.assert_eq16(16'h8720, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #125 231897da-36f2-4e96-99a0-970a38439c60)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0851;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'h0853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #126 f0948f43-459f-4ccf-9bba-0c7cf5359b29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 285de0de-acff-4ba8-8ac2-aa6d12ed5679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 82495fd5-be9a-4ecd-aa0e-6e740b68737c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 ea9fcd24-8c10-496b-a5b7-7f809a4c96be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 0c33220d-d050-4686-8037-704ab5481b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 f8069a27-ad4e-42c6-bec6-c1cb2179da92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 677d78a5-2f32-4a0d-8ea7-6bd8cc321cb1)");

unit.assert_eq16(16'hFE21, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #126 03726b22-2c3a-424e-aeea-5990d8f18f0c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h00FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h08F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #127 46bf56e5-d7f6-4152-a19b-0ae79e2e88fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 7ca83f7b-f8f6-43e9-b98f-1227d0b23900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 5f99bafa-1d19-4554-b512-5d941020d23a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 707636b2-0dfb-4441-87ae-3bd03e6ba312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 b91dca48-4406-47b3-b7e9-698b8814626b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 882b8d99-d783-4f85-9b04-16b957e64577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 f3b76b0c-99d0-4dd3-8494-95277ec8c772)");

unit.assert_eq16(16'h64EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #127 2642c1d3-339f-4c9a-9976-9c5e9fff7034)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0100;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h089C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'h089E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #128 8c9e226f-f39a-4c08-9cd6-5b9b844cc680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 38433106-de29-488a-922d-516ab98ef4ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 17e9b574-2506-43fb-85d4-0bf2c47e5548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 24ecfbc0-e913-4ba3-b3bb-5d301a052249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 c282d6d6-9476-44e1-8b4f-3d19b6a4432f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 1768db48-e735-40a2-847e-2f47a58697d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 74db636b-3eae-4ba4-9d82-ef52426e5c45)");

unit.assert_eq16(16'h3FF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #128 b5b8fc23-f912-4d15-aa00-35e0a799f331)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0102;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0668;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'h066A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #129 60a82ada-8a31-45af-b6f3-e3834a39d49b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 a07283d8-9a36-404c-925e-b92553ce37c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 da2e74a8-1162-4e5a-ac4d-1067832cac25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 f9e55321-11c8-467e-9b80-3c001396c492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 55a9f9c1-c00c-4e01-a803-bc1f1910e6d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 4ecd447b-6080-40c8-a4a5-ba580b849125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 0289fe81-ed70-4648-8414-922e1939368b)");

unit.assert_eq16(16'hA407, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #129 3507ef06-2cab-4c54-8768-71e0712b790f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0104;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h06CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #130 7d318386-a02d-4cbb-829b-312f59ae428c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 d21e429a-1a6e-4394-9a48-abfc0e50c0f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 40e79315-ce9f-46c3-9654-511be1812577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 805331c3-061d-4f8b-b3c2-d01aafb089df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 34ab6cd2-ed6d-4a13-bfda-f49d23cda6ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 9b91e5ce-ab59-48c1-994a-bbdbdea55b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 b4ffe295-5ccb-421d-9768-13139fa0072c)");

unit.assert_eq16(16'hD919, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #130 592dc357-cb6b-459d-9b47-b8e7abebd873)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0106;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0513;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'h0515, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #131 fbda738f-4ffb-4f23-87f5-60cd8c17b95d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 3228862c-d2b5-4b44-9506-9bd0a05b1937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 1b566ec0-8180-4972-bd25-e0662a9a384d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 5be3b1f0-3a48-4571-ad0c-e04d15795528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 339869c2-b574-4f1e-a543-9833e0b0308c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 547367a9-2603-4e5a-a0dc-4dd7128be2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 a486eb6e-01da-4d95-b2d2-ed41b87bdf7d)");

unit.assert_eq16(16'h4A71, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #131 0c6ada5b-dc50-4528-a5da-aec0a9c5b739)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0108;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h0BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #132 f0ab942e-b904-4f94-9094-26ef1edeb3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 fac5be26-bbd6-4782-b7f8-b984a5d245a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 6bf00ee6-9eca-476f-8c2d-8ca5e47fba26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 7f0355fb-a21b-4a7c-a238-e910079f9dbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 546da927-88d1-415b-a5ed-dc1f8dca8013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 77156b4e-15f2-4577-a7de-7d604440c657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 83d3a00f-85fc-4b20-aabf-487401dcb7fc)");

unit.assert_eq16(16'hE0B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #132 ca6cc718-f416-4d85-959a-aa6bb7b3a323)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h00AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #133 99f656d3-a335-49d7-a4ed-bd5fb77d1e51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 400be92d-0c01-4846-a7b3-dbbafc0d5075)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 657c57f2-cf1e-4ced-a605-f4f29c196ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 2ef44989-8933-4d54-9512-f5071bd500cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 e37f1a1c-4aa2-4042-822a-b3a2b4c13604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 83e22d26-66c6-4b12-b5c8-5d0e5f42c279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 e2f66114-9af5-45d4-9816-e87ca6a895e2)");

unit.assert_eq16(16'h8DE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #133 18ff4e39-d190-4467-bdf3-d40251142c89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'h0C28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #134 9c357f36-c5e6-4b10-8cf2-a07d6deec0fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 1be385aa-295b-48cc-86c7-1e70d15f71a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 c134e4a8-0b30-41fa-a6ea-ce02cb0f4c18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 e781e6aa-fe50-4545-907e-a813a0af62be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 4ff26a04-30fd-48df-906c-ce42533e434b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 a7bab9de-9db7-4931-8187-bd5b46bb6776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 090b7d72-1344-46a0-b027-c4ad44ad30b5)");

unit.assert_eq16(16'hA2AC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #134 730b35c0-a37c-4124-a628-72765770c039)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h010E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'h0D08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #135 6c9fe857-07d0-4048-9da3-b2bbc05f76e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 6a2d6f6f-9a5a-491d-b015-33381af68d56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 07c61728-ef01-45c7-a23b-24ccc9325bb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 817e0977-f44d-4610-a07a-d83b6360dc3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 81d2c397-90e7-4d8d-a1a5-b2b3b9517254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 f6a6aec8-ea33-42cb-9bcb-fd1ef14c8b1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 6ba7d595-ad67-4cee-8233-89b9864ab0fc)");

unit.assert_eq16(16'hCAF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #135 3c15d3ec-79b7-4485-bbb4-1599782632f7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0110;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'h0A16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #136 27c5e278-a78c-4460-8b30-273f213c491b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 87201e9b-9455-4852-8f80-cb158b8914f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 fdb85545-f47d-46a5-8321-1bfe30ce92b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 7ca9ebb5-cdbd-4ac1-8ddd-20112f0766bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 7b41041d-6e11-4973-b711-4c440b5adce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 6e2ebdc4-6cab-45b6-8308-7448b5172ff9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 6cf78e26-af1c-4048-a0e3-29660517f016)");

unit.assert_eq16(16'hFAF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #136 0191b80a-3d0c-460a-9ca8-157fa0c67c09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0112;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h0E7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #137 479ecfaa-376b-4796-a023-08cbc5a5c94b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 dabe8f34-c06c-4a7b-92fc-8cdb8132e4f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 83150708-217d-40d3-8abf-8c7a046808b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 344067f6-fa4b-45d5-8991-6f4cfa61baab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 91e7797a-6f0e-4706-91e6-c1ffe011c261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 cf297d87-851c-4423-99b0-297104c4f94b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 01c889d3-2e9d-4c54-96f0-d5b8eaf15f29)");

unit.assert_eq16(16'h4573, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #137 b35f9f2e-253a-459e-b61a-696b010148af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0114;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h01C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #138 bd7078a0-707b-4a46-9421-9acae90ed73c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 d835df72-9b42-479a-815c-4d2d232b9199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 e569fe18-6b2f-4b33-8fa9-8ae0bacdbc79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 7b12784b-b6d8-48ae-a463-a40c6cc61d78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 bcd6eba2-ebc6-410c-bbbb-6114cffd76e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 cbd38a6b-ae4a-46e5-bf29-7b6d221e1e5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 723f5852-4617-4fd5-a71d-1c0356debcd6)");

unit.assert_eq16(16'h5A0A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #138 2a1b5800-c976-4b02-b615-1ce7b079379e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0116;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'h0D84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #139 0be8264b-cceb-4869-8e98-9d05fc8e7b0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 bfd02773-8b43-4c8b-bbf3-fbc09c88605a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 227aa76c-8950-4e62-8b82-4ab47f5a024c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 f81eabc9-e523-4266-838e-2c636f4a5851)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 f731a0a1-9a60-4276-b5a2-c82930db81cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 5cdd43a5-8532-4542-ab61-1db22df61723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 142edb7d-a477-40ae-9289-035aed5cff6e)");

unit.assert_eq16(16'h4EE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #139 9154a194-da40-4f6d-8e11-4ad7caab8398)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0118;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0947;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'h0949, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #140 0a8a26a8-81b6-49cb-b8e5-a15a2831ee38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 db3c954f-5a62-4fe4-a5ef-773d8fbad342)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 43a1dc28-e861-4415-bdd5-1a4d4c43d95a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 645de220-1a62-4fd5-b59d-5504987a758b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 61379e0b-825d-4306-8529-8f586e5bcf9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 73acb7ea-3ca0-4a5a-828f-7a385437f586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 f117736b-5835-429f-ac2b-c341655c8368)");

unit.assert_eq16(16'h7E97, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #140 5199a059-2a7c-4c14-864b-9a75152342c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0072;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'h0074, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #141 07348dfd-dcc0-4471-9840-3b1541e237a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 3b6c6be9-f969-47f5-9893-ac896703e9a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 a857840b-b8b1-4d88-8ebb-68cac61ef217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 3c7e9a8a-8beb-4afb-9849-e9ab6e7aadab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 8e8981f5-116d-4a5d-a47e-e1c6a25831c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 8f0c9dfa-9ea1-44ef-85bd-f9f931730e3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 1876625a-a672-4139-8b03-4f716c9850f7)");

unit.assert_eq16(16'h5FB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #141 82579ef3-545c-4adf-8566-57e72b8a7f31)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'h0400, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #142 f4e3ee62-d997-456f-a4d1-5675a5fe0480)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 e5a2b802-729a-43ff-a53c-6d226c4f3be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 8b00c5c9-4457-40df-b72a-cd6468d6fefd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 da20ae64-260d-48be-8f73-3d0d51028872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 76c4801a-7387-4584-a621-225f1f7cab89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 2b71019d-a2ac-4f23-b501-ff98bb4ce75c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 0101b97b-5581-4d43-baba-668b24410f5d)");

unit.assert_eq16(16'h6E97, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #142 1e9e3df9-4343-48e8-be95-22102a5127af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h011E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'h0DAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #143 b2c4e1a2-8028-4b25-85fc-bd3575337bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 e08ac7a9-04c0-4733-a11d-4f46bc9d210a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 4c78bd99-87e2-4d97-a45b-f6469f84c59d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 6eda4e9b-e2e1-4df5-912c-18f9272fbab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 791acee1-4297-44ff-8570-f7920f549c33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 ecd6cb7a-0fbb-4a1b-aad5-6e75d34a7282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 20e631be-57a3-47c8-a7c1-1435c9fd8500)");

unit.assert_eq16(16'h84C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #143 56a30d09-6006-4b36-aae7-ba4a73045700)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0120;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'h0A58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #144 39798a66-6558-4042-9211-3964e3923f25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 95f07ebe-73c0-4ec1-bae8-700d1f2ef3db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 570113ac-7236-41a1-a568-32525f4da9d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 cdcfb194-3ed9-473f-b77c-5829d6cdb012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 6cbb2a4b-d9bf-474c-9002-bbf6d1a6bddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 09a5c3fb-65e8-4d76-85bd-8a1c9ccfba44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 b9876c64-45e4-44ce-81ea-76c5bbb9b3cf)");

unit.assert_eq16(16'h0392, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #144 5e8e818e-eaa5-49c7-8422-833006a5e931)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0122;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h0B40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #145 64b7e1d1-3930-4e7c-994e-b2ff911d3014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 f2422ee3-caf8-4766-b9fe-7cb9bbe544a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 97af81fb-45dd-4531-b9b3-6cb5729fb3a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 c96c1b92-3fc5-47e0-a3d3-a9c2b1e34c26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 0f1804ab-bc21-45d6-a8eb-aaac96483b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 5577bce4-bfae-43dc-9b5d-8eed98d45ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 6045f70f-709d-4b79-af1b-5b0bbbc473cf)");

unit.assert_eq16(16'h90E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #145 84da4785-493b-4a89-8934-1aa040a48128)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0124;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0139;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h013B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #146 5f601826-d1c9-4e89-aa8d-0dc580d2c9fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 99809160-59c8-4b32-8861-79bfc2fd6827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 9ff7659e-dd9b-4368-a610-c8242a543205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 c00e666f-102b-44a7-9825-9f4dcf18be43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 a7f2932b-c94b-417e-a4a7-b1cda7dbfafa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 3a25e922-523d-4759-b151-aad443a17ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 15b2b0c7-d16a-4235-bf09-eba58ffe0c78)");

unit.assert_eq16(16'h272E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #146 71abceaf-115a-47c4-9df5-25cfef82fbaa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0126;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'h02B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #147 58111247-57b4-433a-b131-5be642c23466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 3d1cc3df-ade6-415d-903f-59ab5cb29928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 c75e41e5-23c9-48ec-a0fe-2f76bb1c6ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 b597a0e6-3395-4fbd-a9fb-6a0758b052e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 4afb409a-e197-4fe1-b837-b654e25552e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 3838ff57-c064-40c5-8cb7-7ab04a392dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 2453b704-41ab-4b4a-b040-0b2295c4b7fc)");

unit.assert_eq16(16'h91C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #147 f1d07663-bd06-417b-8a17-d52310796498)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0128;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'h03B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #148 cb4c5b10-39d9-4ab2-ac6a-3949ec1333b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 bebde905-0dde-49f3-b938-dd19340dafa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 f41e6f91-93f1-4c0a-b833-c53272c39c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 ad6e5860-7238-4eb1-85bd-2b7dcc27b91f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 36516767-6454-43e5-a670-516a97903058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 3b33f373-916c-47cd-b4ae-c5ba93b82af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 cfc9cc22-751a-4230-8305-53741f907036)");

unit.assert_eq16(16'hAC29, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #148 473e4d23-2e16-421c-bbeb-a260786079f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #149 37a557dc-4321-485f-bfc0-4c5984958b8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 669a7839-daaa-428a-9f67-155d70369f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 6809e3a5-5590-4420-bc1e-82a28a2239b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 a737b374-065d-4677-876b-299c749d1f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 103f5077-1acc-46dd-8520-45b534142952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 44d8348d-da75-44fc-b1ec-a81df837365c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 745e4f28-82d0-4818-95ad-b6059ce1c492)");

unit.assert_eq16(16'hEF6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #149 84235081-6a06-4ef9-8611-87604e7bafdd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0589;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'h058B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #150 a3d3eccf-a824-41e3-847e-96a0be443d16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 07623be5-004d-4521-b23f-1549bee6eb5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 4b87f89d-ada0-4200-884f-48b729fd639d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 4fe9df68-619a-403a-a138-e26c930ce601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 dda48035-36bc-42fc-a8d0-53b966f2d38d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 41f9463d-06a5-4bd3-85f4-796c68eaae9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 7cc3ebfa-f17b-4087-af36-08263f28c542)");

unit.assert_eq16(16'hD2C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #150 56688ba2-9739-40d2-b736-a4193b466aa7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h012E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'h0DCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #151 84aab105-c54e-4d74-a80e-a0779ffd3c58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 f2654157-2e8d-49aa-aeee-632a2b0d15eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 a94ce0e4-a6bd-4ed7-9122-440c7c1c1e72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 70f82fb3-d1f7-4a99-8adc-30d10999a269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 6f306c72-d35c-43bf-a80e-266fea596e28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 cfec2909-c3f9-483a-b5da-daf0587ce862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 d54d4d6b-d96c-43e9-9686-7e5d92cf290d)");

unit.assert_eq16(16'hA666, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #151 d2f45f86-c37d-4d93-bad5-6a74359969d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0130;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0862;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'h0864, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #152 d96c9754-04e6-4c1d-8011-bbb08b32637e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 4a0e6035-4c57-4d74-be39-8cd8072e912e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 d526223e-5e03-48ae-8025-f1782c0510f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 9acdc0f4-4518-47c3-bd8f-835e5e0c7861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 b2f38b7f-e282-440e-a26b-b3bd521cda68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 4d06f4f3-041f-4615-8b4a-c9ae544d0a08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 7ab146a7-564a-4a63-880b-48c8f9cda150)");

unit.assert_eq16(16'h8317, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #152 86f94be1-ea54-4971-818b-cc5bcacc7932)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0132;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0213;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'h0215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #153 4bdb97da-ba75-4101-b64a-d65e1cd7229f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 92aba532-6173-47dd-a128-c97d79dd80c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 d1d72664-74aa-4946-a239-883c9dc8434e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 b63f9835-0c58-4d91-b94c-25af82694ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 655e819b-bacc-472d-b62a-4d8337975779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 0e5732f7-6808-4c73-b3a6-0a6fb229cefa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 4d7bc94c-d9ad-4af5-a3c3-2913e75c61b8)");

unit.assert_eq16(16'h8034, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #153 c8b5a939-2f0d-4202-bc9a-b2b3f2c5e159)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0134;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'h0D96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #154 d8b8c704-cf55-4828-8cab-638303194c2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 0658af6d-f347-4d1c-89da-1cdf824232f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 50a5e677-ae2f-4479-a062-6292a770293e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 37be5c73-cf36-41b3-b9d0-728866fe08c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 e6a832e8-311f-4f84-88ea-7a0657d7ba64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 022bab59-2a0b-4156-9721-aab88af08dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 e06e1bfa-630a-4470-9061-b602d4ff316d)");

unit.assert_eq16(16'h9AF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #154 d5deb208-0dca-40cf-9971-9b3671b21ed6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0136;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h0D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #155 f8adc757-c6b0-42f9-903a-edcce12fbe99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 e4b0d5ba-7abe-476b-b0b3-90f185346dae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 ca7d7829-7e2b-4a05-a379-74b1a34aa14d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 04fece82-15a0-4e8f-90a8-6b0060fca6de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 179b8fa5-a2c7-4793-ac83-f448af4fc8f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 f320a84c-fad7-4453-9de3-5b6839465adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 c2da2d3d-25d9-4c8e-a33e-aa7c954bc40c)");

unit.assert_eq16(16'hD824, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #155 d8c9a21f-ac8b-4d0c-bb08-3dc7afe574ca)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0138;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h0A29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #156 9037ddf7-f098-4ee3-8efd-836a3c07971a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 8fc770a8-ba30-4ee0-b359-b2dcc595ddcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 fa490bde-b7fa-475e-94b9-801812e59316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 00e00c0a-cbe9-4a1b-9a84-edeeeff99ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 9f4abdf6-97c6-40d3-b27c-f5718bcd354e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 2fc4b931-f6ef-4022-923e-c780a4c3d200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 1a96c1f0-7d9a-450f-8314-5152c0ff631c)");

unit.assert_eq16(16'hBFE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #156 48856fdc-e4f1-4a3b-b940-dfd57b8bd087)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h071A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'h071C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #157 335f9e1b-1206-4d07-8813-fe716a7ad212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 f4ee6735-69bc-40ab-839f-24ecbe5f8efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 b3574893-ef2b-4e10-b14a-511e1b1fc33e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 0b0d1018-0b7f-41b9-9763-a8048c828526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 cb3455c2-64fe-47b5-ad26-17045dc85991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 982f055c-bf9b-47fb-8686-eb9dadf11eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 0e448b83-c3e4-4fb9-9702-c686e772a173)");

unit.assert_eq16(16'hD104, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #157 0c29be55-76ca-48cb-8c89-75af889f4855)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'h029D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #158 f8fed2b2-258c-49da-933f-c8ebefbc4cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 cac380d9-91cb-40ef-95b3-ae22d9612e2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 997be023-8e5c-4a7f-b385-68c17e82aeca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 e8f839f8-4b03-4108-8400-29f5caca2d8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 fc009374-c618-4e2c-9a16-70830e22081b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 77bf7dd4-90ff-4f72-8175-b346e5a8328a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 138d26cb-696b-4250-b56a-16d45bbef7c4)");

unit.assert_eq16(16'hA8C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #158 8d96a085-6f1d-4a2b-bace-61759c812ad1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h013E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0688;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'h068A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #159 f3d0542f-0f96-4228-af98-b0bd655a8f48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 98f0db4e-e6df-42c5-b2b4-fb561e747a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 8e6882eb-e710-49e4-9c30-acbf50fd11c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 551e020e-226b-4835-b188-9e5e55fb4a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 6e1d4fad-3623-4e2a-9435-83281003523f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 251ceb2d-b15e-4821-bdee-4576f9c55995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 fcc0058b-a4c2-4873-be8a-f093522ac853)");

unit.assert_eq16(16'h530C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #159 835c7638-e7cf-4f9e-a0fb-2b85e9f681bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0140;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h026F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'h0271, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #160 a19800a8-0db0-48f0-bd08-a13cf2d7af32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 d22aaae2-46b2-46b8-b326-3be14b82d0fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 ca13f943-cd89-47aa-865b-475dc05b6c67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 0ee22a82-872e-4b4f-92f7-ecf4d6fec182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 aa7e825e-2db8-496c-991a-950bdf468cd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 35a4fc82-0b8f-4cbb-96aa-94d426a2a219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 c6da1213-8658-4b45-a9a7-a02a12d84753)");

unit.assert_eq16(16'h4EED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #160 42562927-9880-4124-abb5-5a001376272d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0142;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'h04DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #161 398912ac-bf9f-445e-a9b7-1c09f16bcc8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 167f1561-4020-4670-bdde-d266723ea109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 a910b64b-9a8b-40f0-8467-1146ad136ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 92ed44eb-e1b5-426f-95af-c376c04252c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 294000e2-9634-42ee-af60-7503fd08f99b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 7cab8cc9-5f35-44f5-86c2-1bd97443929d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 629bcfe1-b565-4283-a96c-e2d0791ff890)");

unit.assert_eq16(16'h5D06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #161 08285fd0-c4a6-462d-a3ac-9ad0b0aabc0d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0144;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'h0DD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #162 1b73e7c5-e87b-4fed-842d-4451483e3a1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 7de6d21f-72ec-46a7-a13c-a4acf5a3736d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 a3df881a-3df0-48e9-b23b-4f8aa4c143fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 80d14428-b8db-456b-b1c8-78a608b05257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 510a49f6-cbab-4017-8994-6015354deb99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 fa3a94ec-b097-44fc-a594-d0a3636c5912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 90e6632e-e1e1-4654-8eb2-95dc42323b28)");

unit.assert_eq16(16'h59B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #162 f79ef5b1-d2fb-40ee-b14f-fa0f88cd335f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0146;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'h0DF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #163 ddd1711c-3fc3-47b1-934f-1464ccbb8102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 c6855172-d941-4712-8c8e-ef5b34885c6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 b26bc81a-a45e-4435-96b2-2d42dddde708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 7da31cec-1fc0-425c-a8c9-03936dfe975f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 380510bf-5386-4c57-b17d-d550e311ca26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 cb6cfcc2-e9ad-4c9b-90ed-0ffa3b161451)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 ab3a9024-2bba-4438-9b79-c86474073fe8)");

unit.assert_eq16(16'hE336, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #163 80eacd23-7315-456e-b014-659fbf349f1c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0148;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h004E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h0050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #164 69b6502f-6390-442f-a559-4af9afcbf968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 36193bb9-7f75-4003-950c-e7980be2ca2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 39b8709c-8791-4985-848f-c618f469f977)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 f58f8aa8-a05b-4ad3-9e1b-3dcb32ed387b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 41bd48ab-c5d3-4568-a80e-43b7671d8441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 5b2c3669-54dd-40ad-8aca-d5953aecd1b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 2d521d5b-f5d3-4d63-a495-a874fb104866)");

unit.assert_eq16(16'h1BCE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #164 7896c527-bb7d-4feb-bfc3-6185c2738fd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0449;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h044B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #165 9e14d43a-e53e-467a-a1fd-ca2d5b7dd9cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 6dd3a10f-18b6-47db-a181-f92fd09617eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 28fec3a4-e73f-40e1-b771-91a7658e0944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 14cd2a99-e015-42da-ad4e-0fb4d8f4043b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 1616867a-f90f-4c80-b246-4905c8623788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 cd4b4509-c742-4ea3-87cc-5d723b1b92ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 04742293-620d-4f27-aaa9-36001febaab1)");

unit.assert_eq16(16'hE60C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #165 32548bbd-7af3-434a-982d-7dc97d6ce330)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ECA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h0ECC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #166 3fdfbf89-2fa7-4679-b00a-65d5d037fc4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 58695740-1272-4e13-85f6-a08a2c5d0e31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 1d196fe4-9913-430f-9fcc-49dd5f6cbbae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 9c107cb2-9b74-414f-b59e-4938c228b73b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 7c92cc88-38de-448f-b363-5b37879cf44e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 6f93748d-ec84-4d3d-88d8-1bd925042a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 58463c96-6d5d-4914-83a7-cb524668ae37)");

unit.assert_eq16(16'h68E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #166 7522095c-72e0-42bb-bf18-63b71844ff8e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h014E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0861;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h0863, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #167 397c1c06-90fe-439c-b114-fbe2a7deb5a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 c87bee38-30f4-4553-ab33-6deef190771d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 ebc6bd57-f9fa-4fa1-8630-2051665de8fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 e0840063-7e21-40e6-819b-d31fa820cbcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 0c8250dc-52c5-48fe-bb27-962591bcf4ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 dc5f9b04-cbde-4879-ade9-147399ee19d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 aa402580-ecae-4035-8538-7ea0ae8565f1)");

unit.assert_eq16(16'h174A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #167 27f7cdac-7b9b-49d7-b548-a29b5072a6f1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0150;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h06C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #168 5c8f0fd4-9f58-4954-a676-82041c047bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 a0a845a4-8a3b-4ac0-b96c-61d1dca6fa71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 de90ef67-4e89-4e63-a827-87a1f484ff43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 f9ea9e7f-c7fb-4991-8020-90500df5d7ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 51e05af7-c015-41e8-a814-e0aefb12e830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 e80408fb-2407-405a-b474-d4bf1dadd1e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 b467a222-2d2a-4193-b98f-d9a583653d81)");

unit.assert_eq16(16'h773D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #168 3cbefccf-9057-460f-a955-b65ec93057e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0152;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h037E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h0380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #169 3544bfde-0a3e-449f-8d86-d3d36a84894e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 a768cf1d-48b1-435d-b4e8-421bb15233d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 a30b2639-2425-4450-9bd0-b3c2338f6ff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 75a77c54-1681-4247-89cd-b00a3f9abab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 5de61e75-21ca-448a-8a33-00be431e784e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 3e308b81-e949-42f4-a4ef-f530c0729cc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 9f9bd5f1-e600-4e02-97e5-1b81b873244f)");

unit.assert_eq16(16'h5FA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #169 343eaf18-7ea0-4cd1-ad01-530708d9f8e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0154;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'h0B64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #170 369edd4e-1fec-474d-8f63-cf80df0fc362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 4e0104cd-21dd-496a-931a-51b73cb3d1df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 ef87d6c4-4ad4-4e66-8c90-5ee5b3665dbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 f9fd5aa9-c3f0-4141-abd0-f4716a372434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 f7a79dd8-db45-4cf8-b39e-4338a3d62109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 942bf430-6a75-47e3-838d-b7a5c8b5fb8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 dd9753ac-dfa7-486e-9938-6069e54274b9)");

unit.assert_eq16(16'h39E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #170 532054f4-a042-424f-984b-204c468fe2d2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0156;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'h06DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #171 562ee7b2-1f0e-4407-a953-5fbf7c7916a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 b2c612e3-97c5-4d4d-b3a6-ed53266e3ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 7cc1e68e-467e-4f7b-83e0-7d27a04097b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 39d3a676-07e8-4c77-82bd-cc46720147f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 7753115d-82ab-42f9-9f9b-dc2905cd4a3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 2c9dba6e-8d31-4ffb-ae10-f911e87f27e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 b071722e-57ab-403a-9eb6-28e5908215bf)");

unit.assert_eq16(16'h348E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #171 2e52b208-f325-4da3-9ce3-df263d2c6b90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0158;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'h08D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #172 17aef48b-7ef7-4fc2-baa2-d16783f8a05b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 700ed03f-cbcb-4e44-953c-5276112c534b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 f8ccbb95-3af2-47ba-99bc-0bb237d3b239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 bd64c02b-7433-4630-b4a8-3dffef7aebd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 231a2132-482d-49c9-b55e-bad5ca8b9547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 8ba43c49-ac34-4456-9b24-5aaba9a6c589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 a71f25d6-bde6-4ff2-8a0d-d8e25c612c1a)");

unit.assert_eq16(16'hCC8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #172 99a12ac1-98b1-4d0a-86f2-ac592c2da932)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h0DFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #173 df0af6b2-6928-4306-9fc9-21b3fcb35186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 5f4b83bc-a69b-4ce2-b633-07404b10b2f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 0f4d6aa5-b56d-46e4-be25-75747c80609a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 d32290da-10a6-4e39-8ce7-4d5915124d3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 c4cd77bf-b6a7-4f6f-b449-77ffbf948e75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 ffed8330-1c97-46e3-a422-7117348061af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 a647ba36-96b0-4fff-b290-2936775b4c4f)");

unit.assert_eq16(16'hE876, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #173 d7dbf10b-1ea2-41ef-9d28-d53776cb59fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'h0D6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #174 2a435ca1-50dc-43a5-bcbd-b3e118046939)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 ac05376f-7293-4298-9778-93a053b77ba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 d5706586-318a-4aaa-87c5-27b70c97ae0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 17134056-2582-4061-9099-0ad42bb35f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 1d8c2be8-f2a1-411f-9f32-5819ff0583ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 2bc6d1dc-5dd3-4eab-be22-e0c3afaa52e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 d875180f-736b-471c-b30a-ce3115f742b5)");

unit.assert_eq16(16'hB898, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #174 02aa7d7a-aee3-4251-94e6-da480ff430ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h015E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0471;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h0473, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #175 de5cd689-db1c-4ed3-8bb2-2f5d182e400b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 1bb2b386-d7e3-4e87-bb14-152674ca9954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 746079af-ac80-4958-8487-b4cd4a7e528a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 9684ad49-7c15-4df6-b20a-58c698d500a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 a6e1171e-f6ad-4ddf-9119-df8648af8c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 da3f9d23-6320-4ff9-9259-ad0692ef6604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 d6822598-70cd-4470-83d2-175972f8a368)");

unit.assert_eq16(16'h9CE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #175 d2b24020-7a4d-4562-b135-b7779f12a18e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0160;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'h0D8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #176 84fb7c4c-b7f8-4c69-8e96-3908e23742ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 a2bbdd71-610d-4f19-ab5a-d91b56665154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 d1976b39-9542-4752-8926-15fedde2b538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 52bf723b-81cd-4364-af0c-e2186b103b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 65b5db37-2611-46f5-b9b7-9021742f7bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 4c30e197-1b74-4a2a-95c5-3e4cccacbae0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 c6ceea35-643c-4ce2-babb-32cdb09c0c5d)");

unit.assert_eq16(16'hDF08, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #176 481b8d32-4e60-493a-825d-cb1f88828425)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0162;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'h0E37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #177 b452dfc8-8657-478a-b8fd-3f8bdeba8a02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 3a79ea45-f5a9-4122-b0b4-908f2cbfa02a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 e67a6d57-e83f-4571-b58c-b8c36eac3077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 f9f87993-0361-425b-a8c5-98ab97401b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 673cac47-97c1-46fc-8921-6948f67e016f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 5579aa43-ba8a-4f2a-a9b9-5527b838e4bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 d36c1f86-f8c8-4d84-8c11-c461747d5165)");

unit.assert_eq16(16'h220B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #177 7d597cc2-759f-457f-865a-072c9cee8a68)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0164;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0654;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'h0656, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #178 4577f489-97d9-49a1-9471-e1b2e30058f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 9df8d0f3-e93e-4780-8b4d-292ae66cbb99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 47a904a1-fe07-44c0-a5a4-14e6a3dad0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 e082f8cc-ed5c-43a2-9523-2f92524e02c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 8e5f976d-eee7-44c1-9560-ced27cdf520e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 492b15d7-accd-4b73-accd-f0384a7fc959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 7eff394f-b0fe-44a9-88ab-218d83a00840)");

unit.assert_eq16(16'hC9F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #178 3f40b9ff-e136-4c03-b9fd-d43160c8a2d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0166;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h01B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #179 f4e176b7-27dd-4b2b-8cdd-fecba73ba03d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 10509260-9c74-40ae-aa5a-1d97f91e780e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 c7f170ac-5d89-4224-be4e-2f1cb5b3a0ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 34ae5557-b859-4b94-9e6a-aeffbf3871d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 52379ec1-438c-483b-bcf5-f34b76dc9540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 65ea194b-e02e-4539-961c-6bb339ef5903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 9cb4f0d0-ad4b-4e7e-b047-18edf91105f3)");

unit.assert_eq16(16'hD09A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #179 6d7b7592-e190-415f-8ffe-cfbcbadd603f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0168;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h038D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h038F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #180 d7470c8b-a560-4bd9-b36f-b50f828d6a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 049bb62e-05ed-45f1-8ba2-37a9dab1ed2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 8e1cca18-b63b-4412-a36d-c1b9f8e96cc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 06b91dab-d2da-445b-9a60-d41d74a87436)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 27a0a2e7-4d35-4a9b-bed6-32f0ac814f04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 ed401819-4321-4f2f-8f30-eee95c6335bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 5a23b2a1-ae5c-4a81-9b51-a6afbd9a0983)");

unit.assert_eq16(16'h9E5D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #180 0c3d1392-c2ef-4814-b598-5f5c79a828c9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'h0F52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #181 1af9abf6-62a8-46a9-b472-efca66048281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 511f04cd-d9a4-4a5e-b8ef-49c2e59db702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 09d72b3e-3d44-46b4-a1e1-e60673fa9aab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 6ccb1013-dc37-4460-a5de-31f889ce0394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 734efa6c-465f-4860-94ca-ab957740a02a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 8cf80b4d-2cad-4025-ba79-c337bd404fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 88dbfe8c-4bdf-4713-bd83-b6058de95016)");

unit.assert_eq16(16'hFADE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #181 d5bfedc5-3f4a-4b0c-820d-d4f7d299a0bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'h0EF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #182 ec107fce-f294-433d-a9b4-f6fcea47670d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 9477708e-85f2-413a-a1b2-63ad35352c75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 b37a3e07-e6e2-48d1-b07e-f912d4682da1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 de8de2d3-5717-47cb-9ea3-b362b134dc17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 504bd29a-f464-4b3a-a22c-904599c24328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 ad8243d1-9a04-4d9b-930d-333cc5610213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 ad3eb318-4995-404e-a3b7-6529f1b674e9)");

unit.assert_eq16(16'hDB37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #182 0f1571c5-b17b-4084-abd2-f190d0f4ee74)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h016E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'h06B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #183 122aa286-2702-40b6-adf3-99952c0a7602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 527a94dd-176f-4acb-82ff-fad74f0dee59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 589202ac-2809-45db-8b94-569a32b606fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 3e85a2e1-4d7d-4945-8801-622e1c7dedfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 fae575ca-64d4-45c0-848f-d1b056e844b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 89f2e7fc-7b77-44b5-b5d6-a2fa8c56cf98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 cc9a31be-e033-4e17-8983-d52640919873)");

unit.assert_eq16(16'h420E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #183 50104ce7-60d1-4f94-8d09-59afdbffadb9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0170;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'h08DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #184 6106b27e-476c-445f-8ea7-5711f4a42bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 5ddd8b6e-9303-4114-a908-1c7b731069bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 04e75e49-2406-416e-a63b-3c29250ad89e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 09392208-bcff-4564-8d9d-8834101c56ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 17b7339a-b39e-4939-8551-90a66f393776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 054911b3-1443-4c18-988c-01311cdca3d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 2ed797cf-d510-44b1-964c-c3ed7cbbfe28)");

unit.assert_eq16(16'hE46B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #184 c3c9de8a-3221-457c-a505-03a85dcaad70)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0172;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0646;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'h0648, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #185 2b33f2d7-5671-4b2d-a869-70ff99b69b7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 3b5b8753-2d1f-404a-894d-4a39d4cb3b3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 3c45e116-02a2-41bf-b2bd-81e426f34648)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 d7f48214-1786-43a3-8e5a-1d0c7ea55cf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 e50c6f7a-f8b2-43e7-bbd6-22b935a37862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 3adbdd83-7db9-4f22-a75b-3b0cfa50115d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 e006f429-94dd-42a9-9661-c9807778a445)");

unit.assert_eq16(16'h2AE9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #185 0335e699-45c1-4801-b4e0-1d0ff96c3b1b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0174;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0548;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'h054A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #186 6178336d-9585-421c-b389-2ec1dfcb77b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 9e0e809a-cd7c-4d04-adb4-3ddeb9ac0ef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 7a59e0a5-4e7d-4a98-82d5-fda6851b55bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 1530fd32-4b7a-423d-8037-221252f91b19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 26802348-6d92-4463-9875-e753e3b029dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 2ba640a0-a495-4761-ba7b-53e75e640f5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 a62fbb4b-9a11-483e-9356-e4d9b4344481)");

unit.assert_eq16(16'h9153, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #186 7a8bf358-5272-46a7-8d46-5ebef6bcd342)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0176;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0885;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'h0887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #187 9f1b0f22-eddd-4818-99b3-10d355cca168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 fcfa0373-7d62-4df9-b309-71be5d265997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 a457806a-6b94-4551-8675-c413d443771a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 c3cbb9a2-3507-4849-bea7-9f077341da15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 1c7efdeb-0d91-4fad-99fe-5d6c22325996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 be7f2c7a-0622-4641-8903-93f78979d275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 8aeb8ecd-b197-4f3b-adac-ce56ae27d1ff)");

unit.assert_eq16(16'h0422, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #187 cd9ea9d2-3cf0-4a8b-859a-1bc312765637)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0178;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h04A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #188 ec86ec82-f1b4-44ce-a4f6-cfcdeb64c675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 fe0cfbb2-2d2d-4eb8-8b69-a600d58d93ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 0e0c6005-26f1-4711-857a-70cd567b79d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 39b54285-bb0d-4c35-acf0-26b3c8a6f951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 ad3b576c-95e9-41cc-be9d-b67ae5945984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 4a3da0ad-f402-4a09-b32f-3db8f9b9bb86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 33225396-9855-4c16-9a83-f91836d7a586)");

unit.assert_eq16(16'h60ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #188 ba43775a-3951-4436-a248-a3a1ab7ee089)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h060A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'h060C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #189 033a6146-54d3-4493-840d-27ac3a9737e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 e1195b5e-6e0d-450d-8919-03ada6421120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 2e1415c7-481b-417b-bb18-870fb9ac6f9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 b204b4bf-0699-4b46-9c5c-399cc5c64e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 a12c8b7f-ac39-4b42-a404-054c893d80e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 6f152d41-e039-4126-ae2b-b4079d3e0ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 989e2172-04f1-4c3b-a449-e394ee299223)");

unit.assert_eq16(16'hFF47, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #189 24839568-c6b8-4ce5-a0f7-8f6f45b16731)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h045C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #190 c09d8415-c223-40e5-bedc-9b4d25ec5dfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 a617689a-46c8-4502-a2e0-33d86d8f5c77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 06e330aa-eaf6-4443-992f-c2def3c3874e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 067a0bf9-3a29-416a-b5d7-4c7cac2b501c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 5e1406fb-eb87-44c2-9d58-ce82ce3fad6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 9e7d89a9-a62c-49d2-a142-4fac6c34a750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 77d2f82e-cde6-4d06-b8f1-5095a8113f21)");

unit.assert_eq16(16'h15EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #190 896fd08b-e61a-435f-888b-873ed0405e3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h017E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'h09E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #191 f9e9dced-50b6-4eeb-afdb-8e5f3cf4322d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 391c808c-11fc-49ed-88af-00d40de9ad4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 cfefc928-d94e-4860-be2f-a701ab7b5ac6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 9156f992-5ba2-41de-a07d-670ad8c57630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 f3de11c7-872b-48a4-be88-05594061ed77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 978d67be-3707-4fc5-98e8-4091b749d5d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 fddb1620-b63a-4fa2-85d3-13c3b95cb699)");

unit.assert_eq16(16'h6E57, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #191 5a8075b0-bbd2-49a5-b5f8-ad2599063447)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0180;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'h0C01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #192 d4785d0e-8687-4416-b827-d4e884b0a228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 6684566d-3370-4e59-b254-4a739867d780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 853060bd-d227-4aa2-83aa-fb7633d2e5c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 f22d8760-6f22-4be9-b7bb-d0c9dcff9993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 a247a363-dfe6-432e-a16e-7b701856158b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 60330802-413d-4860-a22e-c4e8d609cd29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 56329db7-7935-49b6-8786-8a80cb903d40)");

unit.assert_eq16(16'h7E78, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #192 2d995de7-c201-4b5d-b5cf-2c3388e83c9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0182;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0173;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h0175, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #193 120968f9-1eb3-441e-9ed8-921f7aeea16f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 928bcfa8-f62e-4582-9d00-9336eeddc7d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 28d4503b-75a6-4de1-abb3-a6529164986b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 350b3f97-7865-4e75-89a5-dab901f4a15c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 fa85a640-310a-445d-99ec-6cc61efe4e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 6cc1af4c-6abe-4ca2-934d-17819789c085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 2544464c-7572-4be2-bbec-121bd38f641f)");

unit.assert_eq16(16'hF2BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #193 796a34f4-a0fd-45ce-9f97-2ee82d69fcec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0184;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'h0C25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #194 a5233119-4700-4098-b52f-f69f99ca7119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 4088f974-9075-420b-82da-acc3ae2f0820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 c02ea4c8-d382-4c35-909c-3d9508ecdd4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 73b52a37-5b9c-4814-9169-dff4e8966c2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 2ec43c71-f3bc-46dc-b7a9-de5ceaa14852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 b6a75818-83a6-4fb3-b6da-ae7e3d8e3459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 70e155d1-80a6-42a1-ae50-0d3ffb75ffa3)");

unit.assert_eq16(16'h4619, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #194 256b3365-eff0-475c-a041-0703d79a004e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0186;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h056A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'h056C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #195 4c62ec37-0f02-42d6-9192-1908f3a53577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 a0f8671d-a20b-4d94-afdc-10baef3d0b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 d3bcd2dc-a2f0-4d69-9cbc-74da851a0404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 12b1d162-2b83-460b-ae3f-942a1f6bf4cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 15f7cbcd-b4ee-4ed0-b1cf-1329c690cbd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 3a33a702-d7b9-409d-bc85-317e82b0bcb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 9a968590-4098-47de-8677-9f0b1dc52154)");

unit.assert_eq16(16'h4888, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #195 abe75edb-62bc-4823-99c4-2b6ffd56a648)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0188;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h0F35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #196 d1f5bce6-669b-4b46-83d5-bffe48851a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 f3d91748-aaee-4e6b-a73d-b155c5f63cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 a6088828-9609-4d76-9227-66529cacaf92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 3c570d95-28e3-463d-b57c-7893fa032be9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 efbae361-b9d1-468c-96d1-5ecb71ab9b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 def5c0f1-b823-482b-9b59-e791a6f38324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 982c93f1-9887-4a49-9fcb-215eecbc234c)");

unit.assert_eq16(16'h72AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #196 d7339c2b-d48b-42e2-ba27-19454f291d12)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'h0DF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #197 923384bd-daef-4e0c-9036-9a14ce8a9c2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 16526182-18fe-4230-94c3-50b574f7207d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 d074d4a1-3e0e-4973-8e48-12e4bfc1ae98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 725429d9-b5f1-4be7-bfe5-72e76cb7cf4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 7e447a66-a4eb-4b6b-9987-e030abee6ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 9b9eeaee-c24b-456e-933a-a4e3aeca6617)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 8a8f086a-c53c-4a28-a932-b37ddaca09f7)");

unit.assert_eq16(16'hD5E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #197 9ce62abd-fcff-40cd-b959-ee9b86396540)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h034B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h034D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #198 b396a569-1100-4458-a395-350bef3f63fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 42ca2712-b92a-4b0e-bc97-36f8348d1b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 0d1496dd-8e6e-4b23-842b-0e3baca41a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 c6eaf2c4-c560-4717-8a18-92512dc32c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 faa1c9ef-ed86-4f46-9b1d-d1267434e55f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 51a59102-c348-4762-a3e3-3a6b6bc51a49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 65c7fc35-a187-4109-bb4f-2a2166e36eb5)");

unit.assert_eq16(16'hA221, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #198 aa493877-ae9b-4c17-8979-9ee4b6b9bbcb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h018E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0854;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h0856, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #199 bb708f2e-0451-4b1c-9bff-f323ca120a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 3d31902c-e5f9-4ebd-89f4-03aad951916b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 1e61e458-4723-428b-a8f1-d7972146053f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 4caba8a7-5373-47c4-b09a-bec4065b22c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 603012b7-f9b5-401e-85bc-a21a4bb344cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 a3f11d51-b0a7-4184-a3e8-dea0a88bcb39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 3c9b305f-c38f-4665-b11b-971e5f03fa8a)");

unit.assert_eq16(16'hEEC7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #199 62534402-7308-4c90-9d48-bfbf2bd7565c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0190;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'h0E02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #200 159cb128-cca5-4b21-9e8f-036c65d3a9bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 9b671453-e6ec-415a-acf4-571916c59bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 e31142ed-5f6c-478a-a146-231fc5bc6f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 9a4a7184-63ea-4020-8563-8dde3f816ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 e019c540-57e8-4e2b-b370-d35740c34367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 f0cf6b52-cd26-43d3-ac9e-41044f90c713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 d5286eab-38e3-4833-8c7c-df04c3cd88bb)");

unit.assert_eq16(16'h6D8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #200 d1642012-9b16-4eb4-853e-036633a71e98)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0192;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0080;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h0082, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #201 849221c9-9143-453e-a0f4-1e86ca7649e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 c20f7af4-5cb1-49a4-8ba7-1885f1686b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 ab599dc0-5a15-4794-ba27-d263aa4e5391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 7e9fa866-a6b3-4235-9ba5-58b82ab89b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 9b2464c1-219e-4df6-99b7-75194d70db6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 0f7fbfb3-9bfa-41e8-aa79-c534d28a4e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 63501527-fe76-4343-93cb-d28ce75a3cca)");

unit.assert_eq16(16'hB1EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #201 45cfdd05-8930-44cb-ba45-783d922a5309)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0194;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0682;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'h0684, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #202 91055835-cbd3-4018-b98c-0b674d6bf525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 e9840bb1-5410-4f78-86cd-eb7df4e83f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 c78f2400-bd9f-4548-a863-aec290121abc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 23862841-2793-4078-b8c8-4aaf14b70c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 69def7a2-e2b7-4b9f-9c94-f29fa36d30bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 bc6867ae-931d-4745-8f09-ec9e77cbb694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 3360893d-8c00-40b4-b5a8-e6a9b5bd616a)");

unit.assert_eq16(16'h9A90, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #202 906cb9ab-5203-4eef-a900-b5102ed97cd3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0196;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0785;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'h0787, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #203 8a3865a8-002f-404e-980e-c198f089a0a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 de2ff5ce-7b3a-4de3-a99e-96dd80ee3b79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 0ee916fa-25ba-4b51-9289-f15f78860d9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 83a86cc0-9c29-49ce-a28c-b9a0a555b5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 995e5ffe-6320-49ab-ac64-feb2d215f25f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 6a0b6d37-0d83-4816-b30e-0642700980af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 f1442351-0700-48ed-8933-2e591d1f70c1)");

unit.assert_eq16(16'hC6C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #203 be4518e1-64cc-42dc-9824-db8a36103fb8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0198;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h002C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'h002E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #204 fcbca812-ad22-4069-be7e-e848de151dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 7328c1ee-dc9d-46e0-b57d-1b05932d69d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 baac65ec-56e1-4b7d-96e4-1c181962fda1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 9d18b024-a345-45d7-866e-894cb6219f80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 8cca1629-b99a-4a8a-9404-a6aefcf03794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 1643ffbf-8b2e-45c5-933a-0be0de460d64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 73db44aa-5329-4de7-b8c3-5fa27a9ed0b1)");

unit.assert_eq16(16'hA1D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #204 38eff933-55a5-4bb0-84eb-f958b7791a21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h06EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #205 c6828b7f-bdcd-4bbd-845a-71ac4c692747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 3a33bb1a-ee23-46d8-9313-cf4aefe471e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 ff5d93b1-4353-4ce1-a4ae-86cf532739c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 e33afd24-0b87-4fa1-8462-293ac7021ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 3cf18480-243e-4437-9f8e-57a4d6a66c69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 82c1e76f-b607-400a-97ed-5d7aabea53cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 02c2863c-ccba-43ad-889f-2e120fd40163)");

unit.assert_eq16(16'hC349, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #205 729edd76-d57a-4f0a-951b-263089aec980)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h032F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'h0331, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #206 51a74e10-5bb9-4cef-bf5c-4c042480d155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 68d6fe7c-ec49-4ffd-b12f-5b8befad3952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 6ea07f44-23d7-4931-a262-37ec305005e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 1051fd40-c2af-402f-ba02-41baf14b15f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 2ee4523d-cc8d-4994-aba0-3b7654f7ae04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 61512d9a-2db1-4ede-b316-242dce5c1d17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 05917a7d-9ac2-4653-b481-5f1008fe9264)");

unit.assert_eq16(16'hDF6D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #206 edc3d7f6-6a35-43e4-a90b-f997b6948acd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h019E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'h0B47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #207 9ceac698-df3a-4f76-a5fb-d2387f1c2411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 3934257c-2d6c-4503-8464-4abfc6d10832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 ccfb9845-2d05-4d3a-9872-785923dea549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 73ba62a7-c638-4fb8-94ce-c640e1096243)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 51b087c8-fd76-484a-a0fb-4f28ff68c05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 88071d70-93cb-41ee-8634-8e9b0bede86f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 f9e48ef7-a858-4010-96f3-a9402ceaa039)");

unit.assert_eq16(16'h148E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #207 05002978-9f0c-41f7-ac94-ed073172e88e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'h00E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #208 5054169f-7624-4323-ad73-5535c2e7ff84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 87056160-7f56-48b9-8f40-aa41108540eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 fb055042-4004-4fc1-beb2-6adcf6a1d7aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 1298b481-866c-4e5a-9830-773b18309047)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 058d484f-b87a-4834-956e-4b8a410b8cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 58a387a4-8c23-40b4-8bee-726350f919c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 6277bc08-603e-4ac1-95d9-0884bbeaa843)");

unit.assert_eq16(16'h457F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #208 7be197d9-c82f-4bca-be2b-5f077805595d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h014C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h014E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #209 6205a6d1-bf8a-4a41-80ed-70db721ebabe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 ed20ca0b-0af2-4518-beb1-cb8300512fc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 bf8085f0-6443-45af-8174-20656d056283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 27ca7299-6537-4e9e-9253-774d2e72860b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 97717d0e-dd43-4f8f-b147-9d1513f5c591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 831cc7a5-268d-4cea-9894-b8329ed0e561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 7e908813-adb7-47d7-9855-b91c89220e00)");

unit.assert_eq16(16'h8B53, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #209 b6e27d6a-0bb9-4032-9ef8-d174a424fccf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'h05BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #210 285fe445-5cfa-4afe-b1e4-42be19def79f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 85b65982-fda7-4221-8e47-6254967bc740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 a19b1605-18df-44b1-bfd8-2103432fd30f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 1d30ed65-685d-497c-806f-af0cf6336054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 0fd898cf-167c-4d20-833b-3a1384b80480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 683a06e2-31a6-403d-b30e-69cfc2fcf786)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 b7c0b4b1-0eca-48db-aedb-4a23bb481af0)");

unit.assert_eq16(16'h6655, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #210 c430d7b9-0b19-459d-af3a-e525c86ec139)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h037B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'h037D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #211 c01ab016-9749-451d-8668-30d635aa4a25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 134ca5c5-68e5-4f6e-83d7-dde66e30384a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 265fb486-a1c6-4d00-a073-2dd25af39649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 4795e279-0da3-4467-b3bb-1d6855c13260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 b7bdabcb-7d38-456b-b0e2-7ef84b1eccb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 ace77106-b05c-4052-8344-a66bf3e3931a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 2d0064f7-6b80-4079-9a8a-9bdee39a07f7)");

unit.assert_eq16(16'hB96B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #211 7d3fd853-2ff4-4661-a4ba-91fa799fd873)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #212 0f4e445c-ccae-413f-8797-b42786ee1429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 bef1d1f5-2b8d-440d-9eee-0c8099ce0f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 a7708faa-e650-4883-b3fa-e11dcce0b07f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 00d7c8fd-0d8b-47d8-83c0-3d8eb21d2302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 d11cbb43-0594-4a8b-9805-4cdff2f7b1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 8efec5fb-e167-4815-b4fa-600324072b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 bc1bf58e-4eb8-47e0-8573-e7587ef63770)");

unit.assert_eq16(16'hF7BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #212 64bbafad-f000-4a2b-bed4-99575b094597)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h0A32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #213 ed6d3e8b-0316-4aa1-a904-8eebe082d270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 4f9d6833-8e8d-4098-9ab2-9ec0c9e6dc20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 abeffd33-f86f-4505-8dad-491d191b7da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 93af2139-9563-4d10-9d81-5a25a7fa4904)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 128e3ada-c429-42ac-abe2-d28cb6871726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 767a93ea-b2e5-4a79-b547-0a1a660a5db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 30ce0be6-30d9-4fb8-9d15-c43db47fab7d)");

unit.assert_eq16(16'h77C5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #213 29010b4e-dea4-40dc-a18f-e617b493e608)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h001F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'h0021, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #214 4d512a13-6a9a-4e36-b93c-460c5bc8e4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 c16499e6-d810-4157-b545-4a641bb708c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 43e7c634-c612-4997-bc55-44e57c280b65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 bd86d9f2-4903-4db3-ac7c-2b53cb7a092f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 a1f8640f-6827-43b8-b2c2-9747dc28ac80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 dda2c26e-6b2c-42c8-9c09-d99f5f82bdd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 e5a720cc-de84-4efb-809a-ebcf73d825db)");

unit.assert_eq16(16'h6CA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #214 6a0c481b-d203-4daf-b032-5a0f4c524c57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'h0B77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #215 0a9114b7-cd11-466f-aa8f-f13c069c4563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 a151af50-2ad9-4658-b837-c2cf8cdf4ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 37fdcafc-3dbe-4e58-adbb-c5b4e7fea494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 c9d45036-f0f7-4b6e-8399-8ca5c2266a05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 613f2011-7a5e-4fc4-a608-fe9505379a21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 0a387740-58a8-49f2-b52d-de443dd31685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 a63bb7ab-09ea-4cf5-814f-2c74465b66ea)");

unit.assert_eq16(16'h1678, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #215 be15066e-481e-41e0-b6ba-a378fcb537ee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'h07D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #216 b2371f0b-6b3c-40ad-8517-5971c5b19911)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 86c68e0b-2319-43b6-996f-26f124b6f251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 a0a02b8f-0006-464d-aeae-25e37dc29d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 5c83092d-860d-405a-b7f3-5a0764a7a1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 2768a4d6-34eb-4833-beb0-b0de6c930cc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 58ca8dd3-deff-4a17-ade9-192918312dd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 98f526da-b50f-47bc-80b3-2f50d9a28955)");

unit.assert_eq16(16'hF3D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #216 8d9fea0d-65e3-429c-abf3-b4b00a3054e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0391;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'h0393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #217 003ec512-cbc0-4622-a858-010f9e634e27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 03c4fe25-9486-4c8d-90ae-929cb741591f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 c0e0ec14-09bf-421a-b130-536ac233d5ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 f0557d0b-a257-4f12-a697-d1c55582ce9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 49a4076d-2879-4954-92ec-303f2a1a6b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 d021590b-f286-4f2c-97e3-273e8d138592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 6b0a3462-8cd9-4a25-86b7-2d71ce97741d)");

unit.assert_eq16(16'h981B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #217 ca444480-bdd2-4d09-8234-7b94c8b08b97)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h0C1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #218 28c2fc90-935f-42f4-97dc-46857a325ed5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 f8eebd0b-1165-4859-9546-0170107eed57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 5cb59e09-3933-41a8-9c7f-5b3c1f19fdf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 6d3624da-f8e9-4326-aadd-75751225e35d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 acb14be4-f98a-4a7f-a2c2-6ee2cf576f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 79591942-6496-44be-9dde-72cc75c1b55b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 35ef91c6-b766-4cea-a484-c0baa4a49fcb)");

unit.assert_eq16(16'hDFF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #218 a72533ac-fe5d-41f7-847d-b26158a8b74f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0427;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h0429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #219 a81b5927-c3f1-410d-b104-ea4f24036a5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 4427b869-5dbf-45c5-b4db-01ac89e0a7c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 5397db67-7558-4728-983b-16a1308cc7b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 59d523f8-c17c-4057-bb41-78bbcaffc784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 3de9a840-0e2f-41ae-ae9b-8b2fb0848c13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 b6eb4d09-166a-434a-b52f-5d62e363ba08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 31aa63d1-e604-4e31-b594-acffee8dee3b)");

unit.assert_eq16(16'hCA63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #219 60bd4c93-c1ef-4d0d-a1ab-95aa991c314d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0260;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'h0262, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #220 f7243c03-a7b7-4643-a1dc-c8c06ddb56c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 f5b1f12f-8a91-4fa9-adc5-d3e7b3ddb614)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 87bc0f48-f632-4892-82e6-d13dd377f75d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 64d92e51-42b1-49bf-bc02-05f813408744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 22c1ff6b-e92d-4696-98da-3d03918f9265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 6c845f49-be62-414a-9213-e5d524ab51c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 03cfc2d1-da76-4bea-aef5-29015c5d7f78)");

unit.assert_eq16(16'h225E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #220 7e764ad4-7e87-4145-8b35-ae76d54ff09c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h0BEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #221 b4ead391-e66f-4bb6-89dd-562fbf6da389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 bf9a4e70-691f-4622-9189-9536897d7e29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 eefd57e0-754a-420e-af23-2a7120087a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 148bd48b-08de-4df8-a7e7-fe378a6fb3b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 2d5449b3-d1b9-40bc-b258-cffba55f50c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 47fbf229-676e-48d0-a158-d72140c8c419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 5e75b204-4e4c-491a-b716-8f6dcc32770c)");

unit.assert_eq16(16'h9934, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #221 814137aa-b74e-4f55-862d-b983eed7f635)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0601;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'h0603, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #222 2346a73b-0b42-41b5-b5a0-4c1f96c9800b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 a615dd7f-30df-4085-9be2-33b60df9aea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 5fb0055e-3ec1-4dd8-aea6-f4999856d7a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 9a0266f3-d7a3-4737-9819-0784416ac43f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 0f355d65-1c8f-44b7-b123-ca1983d669fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 d1d15fa8-8628-4bc4-8504-ecb7564919a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 dac154e0-b9b8-476d-aa38-28a486bc421c)");

unit.assert_eq16(16'h6169, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #222 11b512ec-1f52-46b3-aaaf-5b461848c436)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h031D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'h031F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #223 5a11dac8-73b5-42f6-9516-b6e3116427a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 251ac8ee-ef12-41ad-bca7-d96c716b4655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 a243f408-0b79-4c1f-8e19-cec2c15dc4b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 f8f2345a-333d-4b24-bc5e-f8d0c80bb0b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 5b1661a6-36e7-48d4-976a-21e9b04fb636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 5f05854a-e222-48d5-a22e-77b68af9a4c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 ac1d4ccc-e8dc-4408-999c-4197c8d9b669)");

unit.assert_eq16(16'hF75D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #223 05b43269-19b9-4f04-bac2-0e84cfb3a3be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0085;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'h0087, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #224 b2580e69-950b-45d7-8c38-36638cf9ff6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 47638613-9342-455d-8e13-a9b41b623475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 8e20228b-5478-4401-a8a7-7238214631f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 62b728c2-3546-43aa-bb80-230c1eb5a7f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 50f25b68-362a-43c9-ba38-3f589e7a7a8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 f8bc8ff4-49b0-4d55-bbf6-78a72a56b982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 c274d0c9-52af-43b9-b965-5cfd8cf947b4)");

unit.assert_eq16(16'h02B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #224 e19ac5c6-7c7d-4677-bdf2-f9c02199a8f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'h0FC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #225 6b462eda-2feb-46cd-8e37-057e3a66a902)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 3a063dc5-1199-443a-90c7-764d6a4950b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 b8e1f31d-080c-4052-b601-cce5fba415aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 95338024-4a26-498a-8fcc-58ca042ca356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 3dca2b73-1ba4-44fc-97be-65e9ddc8691b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 b73aeca2-b8ef-4466-ad71-7590d3fb7d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 e044cffe-4bfb-48f1-99bc-491cf007ac05)");

unit.assert_eq16(16'h0186, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #225 78dbf234-9955-4f38-8cf6-5c4005f0156b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h0EDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #226 44c641d3-1678-4d9a-b8d1-2af4d5f12d2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 598f1fe5-39e6-4ceb-aa4f-edcdf0553d6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 e3ed5f7b-ffc8-446c-9f8c-1542ba56ec1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 c214a315-a835-4100-a688-52dc26ceba48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 b24b52d3-b298-4520-826e-b3f1345b7e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 3b0af8fb-3a91-4c35-8207-ad9669c760e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 c43d4302-140d-4360-af97-79aa0c394e61)");

unit.assert_eq16(16'h8ED8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #226 78b1d946-9fc3-4e9c-80a8-11b88511ad1e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'h0F1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #227 725bf23d-d79a-49e9-a3de-c562cb597cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 5c657572-1b9c-40e8-835e-805011b3d8d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 ba567e79-4091-4d86-a2ea-96ab2c3cc221)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 5ec1a582-a1a0-4b35-8887-116ba89f1def)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 7e906da0-8ea3-41e1-94bf-378c33980ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 e4efd656-5268-4015-9ca0-4c46764efb22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 a48928ee-d2d2-44cb-b8a0-782082ddea49)");

unit.assert_eq16(16'h709D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #227 7adc5a5e-0589-4f81-97a8-c960c4cb8145)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'h0FA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #228 33b584e8-abac-47eb-971c-6ce9f424b684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 98fdd207-5f37-48db-8e1e-eac57b6b03c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 e1be330f-6ac0-4dfe-83f6-04e85a2511c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 16a1baf4-9df1-4f11-b609-7ab546b5e848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 41b4a1bb-e52f-4886-842e-291ebaf3a914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 d05b52dd-dd86-459e-beee-9be6fc79d17e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 2ec32f94-2daa-4d4f-9a39-f7167a3b60d5)");

unit.assert_eq16(16'h30EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #228 1ad0ca4a-c1c1-4ced-b28e-bc94905665f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'h0C80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #229 100fe6a6-7e65-4957-87a9-83a60845017f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 e9bf1cfe-0df8-4d20-a972-f28be967e0bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 8af94064-7a98-4450-b4e2-07e7e3a6f165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 feeb1aa5-5ee9-4a2b-9c26-19c82812dea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 7738c0dc-95cf-4c1d-b763-ffd1f8f8c1ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 98a476da-7505-4615-be8e-e0471a62b027)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 ca9acc4d-e33e-4410-aadd-33fe69665a4e)");

unit.assert_eq16(16'h52A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #229 99d06d14-4953-4f31-a690-2af1f05bbdf6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0172;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'h0174, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #230 668959bc-0a1d-4d4f-81a8-74435a36984d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 0c4d915d-355d-48f2-9543-703f8f812aa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 4196727d-65d5-443f-9bf9-e3ee438fe251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 9bc04dcf-c758-49ef-802a-3c69e3dbe312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 b5fa5023-a4c6-4659-a7fa-6d64e397ada9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 35b87d11-2da2-475d-a649-45c371307e6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 7f2da801-f5a2-4266-b2ee-1b23b7c97230)");

unit.assert_eq16(16'hBCA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #230 8b631a92-1118-423c-bea9-f68efb2dead8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h09DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #231 f3818583-9280-4793-b4c3-41f4c8462020)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 d3a407f0-2d62-4cad-b944-8c4372b33f74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 84201da1-55de-44b2-89b0-b45555b9eb72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 46b7851f-9533-4dda-877e-408a08037b0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 62af9836-97b1-4662-aa29-15d7635f1c71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 cbe5c38a-27e3-4d7a-ab97-3c844c78e95f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 90a0bd68-f7dc-415b-bc46-7e3c12e8bb28)");

unit.assert_eq16(16'hF639, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #231 4d3a4f34-c378-4f3c-b999-1eedf3341ccb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0197;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'h0199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #232 79a565a0-731d-4eba-bcfc-be1997996edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 4fc2fe6c-a462-4dde-90e7-1098a7d7deda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 3ee369d2-6560-4549-9bc0-3ab688b91ba0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 ab755123-6c4c-43a5-8055-45b4205f07de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 eb7fcc78-8135-4b41-85d6-4444657f667f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 7e1a5432-7d67-48c2-8139-3a736404ade1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 b911ddfa-d53a-45df-b803-94a5fc0c6e17)");

unit.assert_eq16(16'hA9E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #232 8374b707-28f5-4f39-86a3-7d34e0efcb11)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'h01EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #233 4f91dc3b-85d1-4ac0-8bc3-c382bd714116)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 b6a82adb-8690-401b-bf33-20996e8932b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 4cd68531-5c9d-4e77-ac6e-6c500d6b72b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 39d58909-53a9-485c-b85f-7c55b98c33a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 1b5cf390-c975-437f-8945-376c956d7249)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 94074b9f-40fe-4dfa-8e00-aeb146cf9c8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 ff68d5f8-5493-4578-8cb7-5502a067c43f)");

unit.assert_eq16(16'h6A9B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #233 d86f69ef-1149-4fb9-9ce3-8facf9d61928)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0336;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'h0338, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #234 34d05472-9260-46bb-8275-01be112feaba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 577876e3-752f-4060-bb82-c7d08a9780b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 f2475122-6725-408a-be38-80c3034cdd1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 b0206087-5cf9-45bd-a6cb-9746140dde70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 c52585f9-ad62-429c-adb3-0c5bb6885b69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 cb7e45bf-85da-4034-b01c-913e0f446d1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 c7a2f1e3-d70c-48b6-b1ec-126ffd54b1e1)");

unit.assert_eq16(16'hAFCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #234 39ff071b-a196-40e5-914c-3c2ae047302e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0332;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h0334, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #235 91f31892-9dee-4a50-a7d5-944aae3c64f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 3199caf6-eb33-49d6-acae-9fa67852c847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 df73beca-f091-460a-88f5-9fb570ed134a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 239b2fb0-87e3-4328-a697-d4595783f00d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 82e06eb6-97e0-4647-a3bd-8f513e862a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 0e013f3d-4751-4941-9f0b-c6783a9ce7e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 344262c3-3d69-447a-8c65-62bac59c3bbb)");

unit.assert_eq16(16'h6570, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #235 27895b29-bbc4-4978-817a-304d78dd496c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'h0F8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #236 3e53c675-7708-44a7-b945-0a06fce01233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 338dacfb-adc6-4b3c-9af0-32e762fc9850)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 6be4c490-5265-4c4c-b863-7c8bea548102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 e4146613-0b67-4fc4-a8ba-482f4f913985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 4e877179-db5f-4472-a184-d38105d892f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 e3621ab1-7254-4b89-bd45-2ed09f23b427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 589cd4e8-6636-4a8b-9398-38a09a40dcc0)");

unit.assert_eq16(16'h3819, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #236 0150134c-c0d0-40f3-8045-71810f2f72a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'h0A2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #237 25283bff-2c72-4a82-9ec7-324211194c2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 1df6db9b-b659-4d59-8f51-25eb149fe279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 d32d4402-0632-4af8-ba88-4b0ae6a3f775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 e4b8064f-59a7-4e8b-954f-1c6604a8175c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 9b2e09b7-4658-4c77-8099-ff7aa12928fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 34132f82-ab53-4a9b-975c-29f3ef2edb03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 fe2bbb87-6eb6-45a4-a6ba-8b3629604e9b)");

unit.assert_eq16(16'h9942, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #237 556948b0-60b6-41f8-bf5f-f7a100fd75e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'h0A0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #238 59645634-ca6c-4f55-a715-899071391edd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 c0d922e6-e591-4a91-8aff-6b5151f2cf90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 5f1ae35b-7bf9-4e70-992d-a5d53ffdff68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 2f1bd89f-fee3-4c4f-9411-2e236e120e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 033671a9-e54f-447d-a15f-96acef1e7d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 2c1ae843-1c0e-4b4c-af3d-03b685b764cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 3fc20501-b376-436c-91c1-c8e7df3ce712)");

unit.assert_eq16(16'hCEFA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #238 cd5bc532-85b0-4b37-a23a-fe8018ecc804)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'h07AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #239 3b9ee363-ff63-4f1d-9101-ea6c80215662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 b36e3a76-995f-49b0-9aa1-43e1e9ced61a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 4a4f0d5d-45df-4b8a-bd04-48c8ab6e14dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 45be9e88-25ef-4c35-8f01-381b5866373f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 275c1391-0d2a-4bb1-8fd0-784d3945f74c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 04aca5d8-40af-4843-9f50-8b723ddc5648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 669a64fc-f3a2-474f-884c-82eae9b86e7b)");

unit.assert_eq16(16'h0F49, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #239 aad13bc6-6c82-4ebf-b23f-8160032df284)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0258;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'h025A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #240 5215f0a4-7fff-4f8a-9ff6-3719c4f3a560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 24be9646-9838-4767-b094-0665b941bebc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 380a6856-ad70-48d4-894e-ccc4efeeb682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 c04fa0eb-f332-40fb-a414-b492b5a600c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 81f6fe04-bf97-4066-be34-5406aea79872)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 6ade9258-c8fd-4e2d-aa09-a304bb84845a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 3894f892-14c6-44b4-b534-0d1133d1486c)");

unit.assert_eq16(16'h4D32, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #240 5d326f8a-ac19-4b70-a0aa-1c9ecfd04813)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0893;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'h0895, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #241 6177bf44-ba13-4d8d-a929-3ca67ad2217a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 b7e17439-0438-4175-8534-63bb90fd3ddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 150d428c-1bea-486a-8d18-20c6aeb8d566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 cb1fc493-9d79-4ebc-bd89-37951e1dab4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 96867284-0c18-4381-813c-dc2629b726a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 74221042-76e5-4ed4-84f1-0346029afa3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 79174a1f-7b61-4ee9-aee3-4121947ab104)");

unit.assert_eq16(16'h1F44, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #241 f6dfc268-f738-484e-826b-303d1cb0f9c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0582;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'h0584, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #242 bb9d701d-0782-4067-b55b-ca65eed2ddd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 52816cb1-a3e4-449e-bb54-8e0db8d43c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 e2fe608f-0ac7-42d1-9d22-c133fdf690bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 66434f3f-f0f1-4fd3-914a-cfecf106f017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 e8826270-d1d0-4807-bddb-7ac14d849716)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 43d4c24b-1d5d-40a3-bdac-0d5f9f6bbb71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 3f25d338-d566-4e14-93ce-93e6b12a94f4)");

unit.assert_eq16(16'hA453, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #242 37298ff7-4fb7-415d-b233-c33b06c01d0a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h073A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h073C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #243 0969b3f8-b141-4e15-9f5b-41a2bb4a560a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 77f4ca8e-13dc-453d-9ac1-ccbc54fb87d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 c08b1bb2-2ed8-4ac0-8a3c-24ccf606faa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 0f9f68b4-860c-49af-b62d-545f4b8e4371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 7fcfbe53-e718-433f-bb91-b87e43e96898)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 a4bf0fc9-9c6d-4906-a636-1d52f5c193a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 e899236d-8374-477c-aa80-8f16c634464d)");

unit.assert_eq16(16'h5E77, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #243 62bb9f19-5d00-4e6f-ac97-0a60e76ec057)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'h03D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #244 19a8b27f-a369-43b4-b4fb-1c7c1f9c77fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 48e7846e-4224-484a-91ae-90652d17ecfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 45392bc0-9bad-4f96-bbd0-af4b138dcbcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 24c930fe-8125-463f-a62b-a82787b6405f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 1ab75dce-8dd2-482b-b3cf-e4e42f955d1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 4fcf8895-2dd4-440d-83e0-376779124673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 ef1c069b-fff2-4dc8-81e0-ada31bbc204f)");

unit.assert_eq16(16'h460C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #244 e0ebb99a-fc13-4c82-9673-83a2fdaa975c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0707;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'h0709, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #245 f18715b7-80c6-4776-9a9c-ac87aff28900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 f12d9a11-36a8-455a-a6a7-7e152de813b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 6d354525-775e-45c2-b916-9005cd552da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 ab00cde0-fdcb-4bec-b689-9db1b8781d8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 8cb15925-77ac-44b0-827b-1f8c3a0b875d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 7fcc6abe-a22e-4f23-8d15-e01ff80fcbff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 42aeb905-6e75-4097-8147-5084a420eb0b)");

unit.assert_eq16(16'hA86E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #245 f2df1a86-f42b-48aa-b1ca-7ee16f5a4bb3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0154;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h0156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #246 c973d121-e8d0-43e4-9761-75f748c1f314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 09e3b8e6-96b1-4d74-9404-0829d32dd91f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 44f24d75-fa34-4b92-a3d4-842c0ca571e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 a9d05b72-f90c-418f-b203-f39c95b9de64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 9c8ec7d9-88f0-4f5e-9349-42f4d8f94c62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 d3d14fa9-4fac-49d8-a5cd-84ed84ffc241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 8b5e19ff-5569-4a73-820e-212d29cf6f4e)");

unit.assert_eq16(16'hA134, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #246 2973f1b7-0492-4a16-a4fc-1ca59b479474)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'h0A2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #247 11956ff7-e488-493a-94dc-53c459862c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 b33801d8-d672-4704-838e-e0b4af499439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 0bc398e5-2f1c-4811-a437-122fdd513f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 7716d4ef-10c0-4e59-941f-b5f49871dca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 5d745ff3-8361-4aa5-a2bd-d093bdc63029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 2f89fd66-44af-4e79-8d8b-59d39cf48245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 7a3c194f-635a-4a46-8359-ca63403cd2c1)");

unit.assert_eq16(16'h9942, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #247 34993f55-53dd-453c-8832-1099be9308b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0911;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'h0913, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #248 08dc198e-1a68-4823-a655-b24271bc68eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 031c4815-6642-4fab-a3e6-1bd334846372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 56502133-f8f3-46f8-8434-413784ea7991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 2e6cbf67-5d0d-4643-848e-869e72598bd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 d12bdf7b-437c-46c6-b08b-7e0cefab3573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 cd7c9b78-f87a-43b1-9116-5dad2447d3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 f871e628-d0f7-4d87-8526-1b6b9ae2fd97)");

unit.assert_eq16(16'hEDB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #248 fc6c27e0-c47a-4ce5-abf1-9abf86d36628)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0362;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'h0364, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #249 51fd10bf-13a4-4264-a7f9-8af1ea64a830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 671c3074-8f97-461b-b7b3-acd889260991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 2a546a50-eb6b-4cca-82df-663aa03acc7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 dd29fd9e-5abf-4ace-8bbd-e66bbe527bb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 e21a1c43-8b15-46c9-8a40-35f29838828a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 4ab1ba1b-4d50-4725-ad69-3ac732ec3f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 c9679dfb-0691-43e6-b8d6-9ab41a3bd54d)");

unit.assert_eq16(16'hFFAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #249 1b02368c-8bfd-4ed1-8891-ff770276e17b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h05C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #250 8c5b5bb0-eb36-44de-b7f5-4e145a7baa33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 8782ffdf-e271-49fc-9375-cf25ebade7df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 6e363292-c727-430f-b360-3af5b913dc75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 cec8e00f-d896-4ace-b61a-e025e492ce8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 06c608ee-0f2f-43ae-b3f8-52cc3ca4fb42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 fd217f8a-22b1-4b5f-b151-2f8275d3cfb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 b9b55072-c5d0-44c2-8580-3b2b305400aa)");

unit.assert_eq16(16'hC592, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #250 d724e8ba-a179-43d6-bd5c-2e141567a0ba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'h00FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #251 eceb9f35-d856-4d7c-82eb-f3ac748a9cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 0b84bc55-525d-4930-b51b-ae9d40144ca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 a8760ac8-2dcf-4b18-87d5-f66cb711d22d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 8d5b680f-d932-4daf-9717-cc95bcd39ae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 2c1f40aa-6052-44df-8a4f-409e20ba634b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 8201e6a3-3c91-41c3-a065-03de62fbded2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 aa27fdaf-b5a9-4fb9-9b9e-d2f5d91b8bff)");

unit.assert_eq16(16'h12BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #251 fd1c7d00-95d9-4eb3-9f08-584335b79e20)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0581;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h0583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #252 04b0ec60-5e07-4dd9-9917-b3c883abd95b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 eb66c096-f1e8-4837-9667-348320a767a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 2e3fe3fc-8e15-4ff9-ba22-ab65fef083a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 d69808c4-85f7-4738-a7c6-79f9fd76b7fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 257a6ef3-aa3e-4c9b-a36d-7bcb2c661dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 bc2b96f6-95e2-4b5b-999a-df6dc8216d99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 4bf75afe-291d-4156-be49-f4e467f47dd4)");

unit.assert_eq16(16'h538F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #252 832f65d4-68d7-4c77-8479-5d98c9b36272)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'h04F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #253 b4cec2f0-7387-4700-821b-70793d55aeb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 127d6375-8a2d-4f25-a122-76ae15209e25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 30278d6a-2a23-41de-a1cd-38a09b9eef78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 d747afbb-53e6-4b4b-80eb-cf5350fcf33c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 dc3a0ffc-9fec-4ec0-8b2f-5730de70cc33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 067e4d6a-da91-4978-be8a-4cdc250ed23c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 03957a44-b4d6-4368-b4e7-f21b118949e0)");

unit.assert_eq16(16'h69CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #253 19c9e2b0-10b0-48aa-a122-7e60f31a308c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0067;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h0069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #254 347d90ec-1c49-43a0-bf14-24ef496566b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 54256878-4840-44c2-8cfc-f5772c5c71c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 5cbf789c-5629-4477-8158-422d89be425a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 9a89c38e-7b06-4d4d-a352-738f8752bc0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 0c8a3b3e-16ee-4a2b-aed0-eaa9e0c3aa19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 d7b240cd-8365-43ef-b848-3ba3c6c602a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 2b23a48c-3425-42d4-9b35-f502265d3379)");

unit.assert_eq16(16'h5E96, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #254 d5997def-04b0-4b32-8a4f-0cd01095ca5b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h01FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h0AAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #255 e8084188-d538-4269-b311-6441efec831d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 2eab71e0-7b0e-4e90-980b-5674d7004322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 2bbc44c4-3233-4295-ae1b-8a924efbdd5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 0d33c090-ef1f-4db8-b52c-8253c6a29b9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 51c285a9-de05-46e3-84da-625f4fd23034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 29346f4f-c2ae-43ee-88ab-965880410a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 06d4d5d2-b08b-4eae-84c2-5f3cda888447)");

unit.assert_eq16(16'h3CD3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #255 33a70121-0d3c-4cdf-9b57-8a5c5c77a1e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0200;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #256 20078c69-8964-4182-8889-fbd5e84bd409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 fe063a04-c6ce-401c-ab3d-515d1b970390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 b4259afe-0d65-484c-a8c0-11dd2ac9cdd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 41af2da3-9b39-4e62-8479-110a637610ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 bfceb2ca-d76f-4836-8abf-6946ad93c247)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 ae190eea-4474-4ca6-aa40-0aba2990047e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 9723ac00-a372-492c-99ba-3ae214fb48b0)");

unit.assert_eq16(16'h5A79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #256 5c516f1b-9735-4c7e-af28-966a9e06576e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0202;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0870;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h0872, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #257 04f8ba8d-b6a7-4146-952b-edbc7ffe97f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 2c93e6b5-de2d-4668-ab35-e2fd39d19ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 37fbc5fc-30fc-47aa-8ee7-4202eca71bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 68dd4e4f-2adc-430c-80a9-baf6ee6ee539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 017f6c7d-dd9b-4947-9a26-2877ab0c6e42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 e74cd9f1-7cb9-43ed-aa3e-294b2fe1fed3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 eac825e6-93b4-468d-afd5-4e274ade3b4a)");

unit.assert_eq16(16'h3C24, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #257 b5a2156a-ae44-47c0-ac96-236ec5f27a96)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0204;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0677;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'h0679, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #258 575758c7-b112-43ba-907c-33d3107f6502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 6eb47d5b-88de-40be-80cb-dd1e4134464a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 400d1b27-fe02-4b40-bc4b-ba20266931b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 ae49d1b5-2292-471d-bdfc-85c839ab78ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 9c83f5ec-4dfc-4ba8-a39d-d9bcb671510c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 22f71021-bc00-41aa-ae51-f348e0490fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 fa058d23-083a-4bba-9b9f-7275cb07a5a7)");

unit.assert_eq16(16'hEC33, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #258 5dea89b2-a129-4fa5-a54d-b886238655ac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0206;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h014D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'h014F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #259 56b03f26-2137-4332-88c3-d86ab313c0e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 62a4ce68-12df-42ea-ac2c-871b41a4c72e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 aa1a0d80-b286-4ba1-95c1-29205c72c483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 6cfce72e-3196-4e44-b93c-699c67d7b2d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 e64a4a01-a421-4791-9bde-ef1282e6547e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 efc12ce8-8ade-4304-bb72-97aa3648b6fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 577777d7-6166-422b-baed-7e607c371f45)");

unit.assert_eq16(16'h978B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #259 1a0484b6-ba07-4141-88a4-1af18c70eb80)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0208;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h054D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'h054F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #260 2d4a3730-96e7-4b37-9824-18863dd93cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 006d1a12-0cc0-49cd-a432-079d0ddcf19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 efcc06b1-3b71-4cb7-b492-1542814d06cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 cd4c7c71-a709-4612-9e37-3a7c2b3489df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 a5ed8cda-ec9f-486e-886d-29c5771bd6da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 ec0d5b44-a38a-4b0e-b35b-21e1564fe655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 97e79f40-893b-409b-aa8d-e1040a1f362d)");

unit.assert_eq16(16'hD16B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #260 abbf2398-ee23-44a4-be8a-f547c3204699)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ABD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h0ABF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #261 fabaeff2-fc20-4d1e-a569-d6700c06f1c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 70ad7aa5-bac0-4a39-9eb5-ee1c5d257565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 fcdb6e5e-39da-4dbb-8b4f-2a406cb85148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 f8d20aca-b3e9-4084-a24c-d67311378ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 d9261169-30df-40bc-ac56-f4586602cd32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 ad5219de-de19-4824-8b3d-cc5e6a76cf6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 09c917bb-7060-4f15-a18f-21c852ac05e4)");

unit.assert_eq16(16'hE933, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #261 b157a300-9520-421b-b89c-b4a38db4f6a2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'h09F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #262 afab324f-a301-4aa7-be0a-05e3fa879dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 cd832de9-cb6f-4748-a17b-88978783ce42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 75e32906-1119-4990-9700-97c4a9784ed1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 88c9b93d-9150-4da4-903e-faf78e0a9672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 275469b7-e2a3-4645-8445-6b8b5c753090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 8c791a30-ef5f-42bb-8590-e956cac22441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 e40b9fcf-0032-4e09-9db2-51cce97dcef5)");

unit.assert_eq16(16'h0BB3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #262 e607ae48-a2f5-4082-bba0-6601f459f650)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h020E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'h0CAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #263 383c81a1-7f54-4ba6-b9d0-8eae06e4a476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 d6333eee-f260-4085-82ca-4e15b9dc49f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 2316ea5a-bbda-4f66-b702-8fc9fc0d65e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 88536289-ae61-40d1-a0fb-2296bc8e2be2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 3bd85c91-5430-4d65-8eeb-c863266d9345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 1e3967d6-9aca-41a1-8746-5f5f96477228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 82c00fcd-176c-42c6-ae48-4eb15e82201e)");

unit.assert_eq16(16'h4EEA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #263 a16e90e2-8739-4c3f-8664-87b37ddf52d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0210;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'h0AA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #264 fa568ce7-7618-4538-ac22-33ffbeea8daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 b73073c8-795f-47f9-bcf5-c538ec5a822e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 f7008475-64c4-4c20-b683-ce84de45bffe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 348fa408-a3d2-4ecc-9108-4c0485d29ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 cdd6a513-0f8f-4fb8-a164-1b337489ca67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 94756b5d-95c6-43bc-b5cb-a69eec4801f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 f2efd060-4ec1-4b6c-9e3e-e3cf663df720)");

unit.assert_eq16(16'h876B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #264 aea507bf-29eb-4cc3-8f4d-166329f4bbee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0212;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0086;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'h0088, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #265 a9c39322-b7fd-4eb3-bd2c-9a7b322db56b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 3ddf0010-44d0-4d78-ba8a-ffb5b8d2104c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 579b44aa-ce69-4308-8a65-51fec7793042)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 9e5d8336-6629-480b-a386-a7f831dee4ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 fd82dd00-27ed-4c76-a4aa-b8ae3bfdbc76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 f0a930dc-346f-4b21-a3c3-25a7f8de7fce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 c9537af2-d829-4a04-a17b-390d9ee57c10)");

unit.assert_eq16(16'h3E02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #265 2d65eca3-ed6e-4e18-aad6-a4939b3b170b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0214;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h019D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'h019F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #266 38c4d6d7-d6d5-49ba-96a5-4b5efd5ab87b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 b08278e8-3d54-4ded-92f1-28d13d99164e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 bb7d2fb1-1b99-4abe-b374-95a1ae356f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 e60e793b-f826-4ef4-9f6d-807816cd7a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 7c0cd91a-06de-434b-a503-69147a4a91ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 5bfcb5c4-122b-4ab3-ba02-789d85e5b65b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 3914420a-743c-4f3e-90a9-38e0449479b9)");

unit.assert_eq16(16'hD30B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #266 d774b5ff-19cf-4024-a436-8f14f7c51096)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0216;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h0D66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #267 d899dc10-cf82-4675-829f-ae893718dfd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 3cbcb242-e127-485a-ae05-7171a39b8ce2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 f483098e-c28d-46e2-96a9-28a715e46c16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 67d312ea-7b55-4491-947d-6155442880ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 4ce89156-8632-4c1c-85f1-fda87ee3d177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 0f8b9e05-50d1-49b7-b817-a27384145460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 d6a7bc74-548a-42ef-b511-39437ba8db89)");

unit.assert_eq16(16'hF2EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #267 6375ef3b-1025-4e6a-9005-a5920967dc6a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0218;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0725;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'h0727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #268 ebb0421e-ca05-4a55-887e-5c397e80fbd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 404edbe7-c204-4dbb-9633-348d0d0be17d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 c1c58404-d53a-49d3-86e5-e91d2d9d4ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 e2a40bbb-cc20-4e9d-b449-9392ed5c3b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 51d9f7d7-98ed-46f1-8db0-7e7363c70aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 5e60633a-d34e-4eb0-8340-1b8414f5de77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 7c837e08-ed8b-44ac-a81f-3997ffa23f5a)");

unit.assert_eq16(16'h1B41, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #268 997b5219-16df-4ddd-85e3-00682c483868)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'h0D37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #269 ce7bfaad-11eb-4737-be31-6d6b8170ff6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 6357b369-8890-4a92-8fd1-ab083f782637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 f7d349fb-8337-4eb2-a66d-b0a46fbd7f83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 2cc0fa75-3b3b-40cf-82d9-71bdd8c03ecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 3277c60a-227f-4378-8586-621e88383169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 1250d81b-c4a7-4bba-9be4-6a011a6905ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 594cb2af-72fa-4eb3-bbed-fd88d3a17c58)");

unit.assert_eq16(16'hA4BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #269 ace70bf2-b9dc-4ed3-9d10-92d0d2b1c92f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h0E62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #270 205617cc-3345-483e-92fb-2542068015e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 95265714-2cdc-4be9-b3b3-ef0e31e55177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 4a42a5fc-fde1-4297-b011-25756952e8f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 b3a9d40c-00c3-4496-b68c-8214038c81ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 1b4f5d57-eca8-4ab5-a1e7-12bad96a7a6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 a0add417-cfb0-4a3c-9d67-d7ba98fa3823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 12adb43f-f2cb-4393-87b2-d4f98a208616)");

unit.assert_eq16(16'hD729, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #270 ab95e86a-ec9b-4b16-9126-67d7599c53bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h021E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h0C0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #271 e877925e-41fc-4c81-8af8-0defb34e9569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 bf3a5885-7986-4d00-bab0-0b9ad14b1ef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 5c594973-3b91-4136-9ca6-aa4f65fcdae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 e30d1483-8868-462e-9a48-aff09fb5d6dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 5f948c78-7fc1-4dbe-870b-1bb5710c8078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 bc340a19-79eb-4c2a-8868-97843c9634fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 d4528070-5056-4548-8a88-72e895299357)");

unit.assert_eq16(16'hB4A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #271 898d9e92-ea95-48ea-a2ca-85759a078503)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0220;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'h0D50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #272 ad88ae08-77d3-49d0-857f-d8265ffadf8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 ae4b2666-fcea-49f9-937b-24e88b4b1d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 b520d8cd-6c3c-40c5-921f-9c738b04833b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 09bca3c7-2048-4af5-94ae-429ade55bfdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 4406d484-cad8-4ab3-9b88-2f55178dde79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 a578362b-52e1-4926-85bf-e3ba9c176cd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 49d1e6be-fbdf-442e-8a9e-132d50eea796)");

unit.assert_eq16(16'hE82E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #272 00c73a3f-123e-4254-9547-77b796f51569)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0222;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ECF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'h0ED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #273 66742afc-3b64-4d01-9a7f-a33eee63a951)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 d36f068b-845b-41b0-80e4-52a342581266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 3d308a4d-e0c9-4d2d-9789-a8c390ac9eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 0c7ce576-fec8-4130-b624-ac473bb1b115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 f9c7884c-70e3-4830-bd34-832f054f6929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 b98ea2c3-b884-480d-af28-4d1140b6b674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 2ca972fe-dd1c-49fa-bdbe-a7bd1db37e19)");

unit.assert_eq16(16'h3902, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #273 d027242a-87a0-4f0f-b18a-6870f9d57f06)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0224;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h08BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #274 56a2b3df-ddcf-48fe-af28-cfef1868682e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 a3c44c6c-25e7-48f3-9037-355173851771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 aa36329c-8fa9-4e34-8044-71eda74eca9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 cdcee916-3454-4042-9947-cc7abb02ba53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 79610f50-92e2-4321-83c2-6b0906615c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 2503e128-0f78-42fe-b53e-01c1fe581533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 947fd19b-3553-43e4-be02-67b770367661)");

unit.assert_eq16(16'h627E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #274 f0e49464-d256-4f04-a4f7-91c547598b25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0226;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'h040F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #275 1926a6df-e4e1-4f9f-b940-2d9a4fb2b5fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 b6bf164f-0a51-423a-bedc-092e20a4797b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 2448c30a-1bc4-48d1-80eb-def2609c0b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 3438f25b-9391-443b-96b9-bb544e3c3624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 f46a036c-7174-45be-91be-38270c76ab96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 ede614bd-7f80-413c-b3f0-d91a0c28c8c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 608b476a-b067-45b0-aef1-502e6cfd282b)");

unit.assert_eq16(16'h2AF9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #275 0aa9f818-b987-40df-8ff3-3cada499953e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0228;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0734;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h0736, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #276 1db63fa5-b937-40ce-bc9e-badcb392299a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 5726d2d2-73bb-4646-b64e-155d5bafafdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 9182957d-1a25-48c4-a3da-e0a8473581ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 29b05484-3321-4003-9e34-e2af55af1ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 88ba403c-4e18-4c70-b0c8-2903b7ec4c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 31cd7e8a-bb67-4bdf-a1a0-15e6ac5dbeb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 67464aad-6f7a-40b5-9d81-98dce11ebec1)");

unit.assert_eq16(16'h8CB5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #276 0322ca06-df02-429b-a745-b5fe024b78e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0748;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'h074A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #277 dc879f08-8a81-4d6c-bb4e-97b30093fcbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 a32f409d-5359-456a-a8ca-979e6d6849f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 15d7186c-71e1-45fe-b6bb-9d53166406f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 2ea7d643-73e0-4d32-bd08-146bb051c555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 fd74e56e-e2e1-4954-bd74-71e1df3a0bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 5188fae0-098c-489b-bcf3-cdd66f186570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 b97123a4-bcdf-497f-a241-2cf0fc5c891f)");

unit.assert_eq16(16'h5455, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #277 f8fabdf1-33e2-44f8-a6ec-96f3989b3432)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'h0D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #278 37f5e912-bb44-4de4-b1b8-112fe2adeed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 9756349a-0bbe-45f2-be78-af45119e8fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 4536efde-b3d2-4bd0-9196-fc78d600e53d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 3edd49c8-1bd4-4026-9479-046650572501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 0de1f4f5-ac58-4ec3-b617-4e9a0fe20fa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 68a51f09-9602-437f-ad33-7374244fb2e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 5a294c6b-5e47-4b1b-9e49-ea955201b54e)");

unit.assert_eq16(16'h9862, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #278 6b831b04-bbb3-42df-b44c-4622321ff772)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h022E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h0F3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #279 e006a7a2-32a6-4e61-9157-a647b01b8fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 7f76faf5-dccd-4712-9202-38ff1fcadb0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 0d029845-12b5-4cf5-a246-b19ee8ec2a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 2d26e314-5641-4b98-920a-690554de9b4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 35e0f2c3-c8a0-400d-8504-7579e26c2fd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 3e16dee3-5812-44f1-b538-7de9d3bea2bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 9f342355-4917-44d2-b6ab-d9b83394c5f5)");

unit.assert_eq16(16'h9CD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #279 351e35a3-f449-451f-9ea3-00b1b0ab6c39)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0230;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h059C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'h059E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #280 5a7baaec-7e6d-482c-936b-ae0dce6ccc43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 924525b8-c002-4c4f-a926-16654c3b9345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 eb431a69-70a9-4095-bacd-552c087025ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 b2834386-9feb-4fa8-80f5-a309675f67f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 56bee206-d621-4378-b76f-1b09aaa3b03b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 5009df8e-a867-4cc2-9019-3c1a7a744688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 2e11fd28-73c7-436d-8e56-a51f5de0ccbf)");

unit.assert_eq16(16'h6346, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #280 f3ab688d-494f-460a-8db2-f9839683bf3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0232;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0207;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'h0209, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #281 13dc41ba-583b-46f8-ac22-3f97459e05f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 d0d77d82-ee2e-4525-9001-416252e1a3b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 ed5f4489-c8ed-4005-9efb-afd67b006c4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 06c63dd5-b0a7-4d09-be32-516dcd950af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 85df5e8b-fc7d-4d03-8a0e-a01d55bb4380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 f5dd7760-9e7c-4693-9ea0-d130f16c19d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 132ed7ea-f8a1-4ff1-ac85-391c295b0dae)");

unit.assert_eq16(16'hA1AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #281 6d96d60c-6793-4ab6-abe3-de93b9db6235)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0234;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'h07D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #282 53dbda69-62fe-4821-9b2b-dea2c654cdad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 8f9022c2-213d-431b-96bf-5541d212a87e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 8dac0a94-a4d8-4602-a9fd-45e67b2bffe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 4c33a87d-dfec-4d9e-be45-10ce4dd6c2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 dc5fe02f-f568-4f65-a3ff-465d9dc76485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 9782d444-3361-4ac3-9cb5-863cf55ed997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 d5cccbb0-92f5-4334-bea2-e4ae10cfb408)");

unit.assert_eq16(16'h7AAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #282 1e874868-8ba3-4f1b-b48c-7db4f9918efd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0236;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'h0C86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #283 57d58a08-c96b-4001-89c1-a76924990001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 fa0bb99c-830e-48de-8849-1d23610a05d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 f9bcf855-c733-42d3-8a26-741e60599256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 009a7646-b61f-4545-a58b-afc6c0925fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 851e4b33-8995-4932-bba0-46af6fb8e6a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 117c1796-357d-483d-8a55-7313daa769c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 4056c999-6a95-4ebc-a83c-a2b1863157a0)");

unit.assert_eq16(16'h5B0A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #283 cac296af-0465-4a4e-b6e1-37ee58fa8c76)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0238;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0481;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #284 c3920661-35b0-496d-98b9-512193410edf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 710d4fbd-f4ee-46c6-9bff-2a6a1a4ec526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 edd327a9-1ec0-469b-8b96-0c0d3a91e809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 3565e04e-3d36-496e-b16a-6ff3f68393fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 67511c5a-70b5-42a8-816a-3a60a1d7033f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 5583a9df-5d74-4737-9736-6ee53520a108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 e041c0c7-2b34-4f52-ad88-c9adf9bd773a)");

unit.assert_eq16(16'h47A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #284 2aa81dd0-b9bf-416c-803b-50cfb053be42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0964;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'h0966, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #285 b7d8a256-a36c-45ec-92cc-4615c2eee524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 9894b776-237b-43a8-be0b-eff8e12372a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 076b108f-ee6c-4030-9236-6eff6ab392ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 e525be7c-8e44-4915-8cd2-c5c53893fb8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 c150c2ac-e3e5-49ef-963d-1f644dcf8a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 177515d1-4273-475b-87d1-5d65b1c84538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 47be3eef-d938-434e-893e-0d4d964ecd82)");

unit.assert_eq16(16'h25F1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #285 41c0f213-b870-44b0-9702-19cc3b0987cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'h0A5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #286 96433f44-2133-4b21-89b1-c3de534af3aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 82cd444a-564b-4920-bf5c-a7e146e38193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 e173ec04-8881-40b4-b4a3-dc4e9e3a3111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 2da09133-ccfa-4c7f-80a8-6e2daa095600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 6314e26c-158f-4abc-8933-688be1e37731)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 6b4247cf-7119-46c3-86b3-42d6abac2a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 9916c7e7-d311-414e-9915-87366437eff4)");

unit.assert_eq16(16'hF6D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #286 aafcadf3-296b-483f-ad6f-310db5a625a9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h023E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h0BED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #287 9798df6c-3a6c-4258-b451-eb7e39d716e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 e99ddf77-65a8-418c-a1a2-7fd807a48f1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 3dc1df75-c9f5-4b50-b578-05384e5197d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 f851354f-4d6f-428b-999d-c524a698706a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 bdec5c86-925b-47ee-be02-0aca1619dd38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 07f36c75-096b-49c4-a161-786d2c09d155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 d29993f8-b37a-44ed-900e-b2a1ffa2e31b)");

unit.assert_eq16(16'h3496, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #287 9872d921-d63c-4742-8a47-e19cda8c1bb1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0240;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0939;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h093B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #288 1d32f193-7d0b-41e4-819c-e85d4b1d09c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 31698366-a31a-43bb-b8cb-f23c0c7d2c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 7394da52-eb62-40d9-b8d0-f87444e4e56b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 ae8eebf7-0d2b-4612-a321-30357e9b6c0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 078f53cf-7be6-4e0e-b829-11f445cb4073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 595a20c7-28a1-4dfa-955a-447c42228bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 03ae1922-c588-480e-a7e2-c65d8b15dd3c)");

unit.assert_eq16(16'hC384, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #288 13c5b8ca-35c1-43ad-bbdf-d820b776e7a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0242;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h0C4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #289 21113d34-aebc-4622-a324-01506015cba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 262c7e93-2a44-4dd8-b651-effa5a3f62e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 70d6146d-2583-4c29-a888-eec136f02a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 e58454c6-f945-402f-9557-b8c907fe98c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 07f23beb-94b1-4731-8065-c92e96090e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 bba78960-2a97-4f3d-8eff-a0f64db65647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 033c9ddc-abb9-49c3-9648-e24084c1d242)");

unit.assert_eq16(16'h4EE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #289 290e8f62-01d4-4e96-b930-940697d2f742)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0244;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0180;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h0182, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #290 a563f137-f53d-4b47-ab73-a0f2c73bdf3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 1a455c3f-005d-4697-bc5c-25aa232c1865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 3e5854ea-5b14-436c-a17c-26bc62af7706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 db8e9806-0654-4014-9da5-529bc599fec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 5946f329-2852-4cf8-a7c9-140407099b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 ab7621a1-5021-4ad8-ae05-606e23a81e6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 39fab41d-476c-40eb-9af3-06d09cac8676)");

unit.assert_eq16(16'h3479, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #290 14acee0d-e1a2-4a30-a773-981a2439f0bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0246;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h00B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #291 8632d168-28b4-488c-9414-3e00e7f2be81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 e09786ae-7efb-42c1-b36d-2b9c20d5fd69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 d4544ece-4df0-4789-8e63-fc51218913d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 92abfdaf-1371-49a7-a115-e099491bbf64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 a95b746c-0084-46f5-bbc0-0e5a1c0e0c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 cd82676d-3214-4a71-aed9-0ea7c7b2e352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 1b6aef07-f189-4560-aa9d-f501e1a7a805)");

unit.assert_eq16(16'h28F0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #291 8b31f66d-603b-430e-be34-55136598934c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0248;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0452;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'h0454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #292 6a7c7d4e-59c3-479d-a38a-b57887c43202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 ee54f7f4-dcb0-4187-ba1b-50aca46b85f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 251754c6-ecca-44a5-a132-6f437a0ace6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 084189af-359e-4c78-9fd5-57e70fa13350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 79d5607d-fac8-41f1-90a9-4822dc94d32e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 b0c98907-6284-4ab0-afb8-ea732ce010a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 2b3d4853-2889-4bcc-af53-b9ab8779e54c)");

unit.assert_eq16(16'h457E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #292 dd162f1e-002d-4611-ab0f-214c8b19cbc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'h0EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #293 3d5583aa-b353-48ab-ace4-01b771324752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 956a6c9e-c854-4f2d-a320-46c9db583d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 af6d9101-973e-4aa6-a72c-10e7fef6f127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 d75f176f-ed35-42df-835a-4513be7107de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 566b65f3-952e-47c8-b3ca-831290dfbaa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 5ba71610-07b5-4181-a8d8-677d05679910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 508b3d83-e421-4fe6-8054-d9ebb9a19179)");

unit.assert_eq16(16'hFF91, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #293 24777180-6603-4c9d-b30d-e23b52cbbf6e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0213;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'h0215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #294 27828a7c-4ddc-41eb-aeff-4cec33f8268b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 ab128f54-b694-4faf-9366-f1b9f62a0018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 614c1bb2-22fe-4d1e-ad14-ccc20c7bcfb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 2110808a-358a-4b82-a1b8-3be815bce02e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 972f614c-4774-494b-b3a9-63137faf128e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 2d6a0759-0e9e-459e-8284-b82c4a3dd88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 7447e1d5-bd82-4cad-af91-8eb4bedc6e93)");

unit.assert_eq16(16'h8034, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #294 7da8b920-74a3-415d-9964-e415e91cda1a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h024E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'h0DD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #295 8a2327c8-889a-4a68-a0df-25eef9b27ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 b04e0c93-f927-4ae9-8b5d-06658dbbfbd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 f3780b60-e39b-4710-9254-0f1527f3c61f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 fbe63f2b-3f64-49a3-ac3d-73c85f6fb01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 991304d8-69ad-4ee5-9d39-233a08adc43a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 19440deb-49cf-4c87-a0e1-22dcf27bd5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 18dcbd8e-6397-46a4-9557-5972d6e4c94f)");

unit.assert_eq16(16'h5159, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #295 b8164aac-cedb-4020-b805-ff5db4556563)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0250;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h08B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #296 86ace751-ba4a-496c-82f3-ef946524b453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 9e9edead-1ce7-43ab-a3e8-7a6381d019ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 659a0f37-5736-4977-8224-ebce1d02fcfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 b649665f-047e-49f3-9abf-0bac413a8837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 20bf286f-9517-41c3-8ad6-809b130fd847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 2b6485a9-e609-459a-a4e5-849682ce6947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 20a4749c-8d26-43f7-8480-74afdc405054)");

unit.assert_eq16(16'h464A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #296 49936782-cce4-446d-a771-42d8e2b8775e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0252;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #297 89ff6d50-3388-4f75-9625-fbc664602cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 3ab9911a-902c-45ba-b579-0fd4160afeef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 9f7d2001-f79b-4a1c-9d4d-edfae56136ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 de7872c1-e294-4ff0-99cf-f62e52846db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 54fe8dbe-40aa-4ac0-a418-866a0414bd94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 d6f53dbd-d96f-4ad6-952e-756b67b43f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 7111e15e-89a4-4bcd-b1b4-40bc05789b23)");

unit.assert_eq16(16'h1E74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #297 cd606466-2d22-41ab-8ebb-264275ce80ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0254;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h0C9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #298 fe2a092b-d0fd-4dce-9b3a-faada29abf88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 adf2816f-a3d4-441c-a505-4077b3333ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 6a006454-a0cb-47cb-9299-00acac982301)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 b38a2406-c323-4575-8b46-60b461a3b2a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 a0bc923f-f2d9-4895-a5af-9f437d770870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 2b327ed6-ee05-4d63-a33a-9d694d77be9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 c7c2f96a-3073-4b12-a72a-d70c4f0e0b5c)");

unit.assert_eq16(16'h2F3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #298 07055dbf-cbad-4830-9676-a434608c0994)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0256;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h0A38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #299 7dcbde24-306c-4f82-88c9-eb5b7e36e464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 1076312b-cdab-4fd9-92a1-dbca4169d0a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 4fdc64e9-c5c9-41f7-ae17-5b194ccee87f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 0051c481-6014-4d74-858a-088100a0c180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 86350e82-f84c-484a-8ccd-194ac5563afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 75196272-2f79-4f6f-bbc6-725545b73181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 77874813-e5d5-4862-9501-9432366a39f3)");

unit.assert_eq16(16'h8B06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #299 da5b338c-8e77-4bcc-af52-7d3a7a4e47b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0258;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'h00E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #300 6f83a017-4b1c-4c57-8b8b-faece809d6ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 df2883b8-0a24-445e-a1c8-3776b7835c16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 6c23e604-11c1-4ca9-a82e-b304a25b55f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 c01b37b4-243b-4a12-a73f-e8479bfff262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 e62197ba-8173-4e14-9738-8878064bdebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 7380a38f-4e60-4056-bd8e-0ce4a260525c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 16591e4d-ec3d-4a70-a2c3-93e0f47eafb6)");

unit.assert_eq16(16'hC53D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #300 650ad654-6e28-4106-ab61-74dbaca9a3a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0249;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'h024B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #301 c69b8bae-a41b-42ed-9f7c-df27827d57ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 b2a541d7-2f1e-4eaf-9938-a1f46188ad88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 921fead8-dbe3-4931-9612-44447ac83343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 c6d44d99-e566-4b2a-a269-f22c6fbb7cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 06a59e6f-0af4-4417-91a9-11310f14a856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 cbfe9347-bc57-4473-beda-85c4fe660d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 922b7953-c6c2-4564-8da9-9ae6138a19ce)");

unit.assert_eq16(16'h10A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #301 15e3abb1-917a-4437-ae44-b2db928270ed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'h0AA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #302 87e876c3-592a-4f21-baa2-669c37186df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 9baffb85-e8e9-40f0-9c49-d3916a81eaab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 5cc68206-3912-4d5e-b025-45dd14f7ae6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 d30ab9eb-9886-437e-ad67-737ec62c7953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 68c185ca-560a-4ffc-82a0-a99cdccbe392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 5c1043c5-c8c6-4a5c-9cfa-bf64b510ebb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 7a127272-2c37-42f2-acc6-ee676cbef2de)");

unit.assert_eq16(16'h55BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #302 d5823d21-2edf-4150-8d93-86b51f8bffa9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h025E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0722;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'h0724, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #303 ec6ab77d-cd73-45f6-bafa-81445bb2cc51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 3bf732ed-2cd6-4cff-b2dd-fdcd6efe8863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 6b13c0cf-7391-4a5c-85e5-3dddb928d83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 f587c220-da3e-4bfa-98be-ec4c0720f305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 231592d3-7d2e-4afc-ab95-d7a8be879300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 06072dc8-ac30-4373-ad38-716bb5b39471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 790d5ea3-f99f-400c-a962-b30b8703fd6c)");

unit.assert_eq16(16'h4478, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #303 f89ecf3c-c3df-422a-a996-e6778c43069c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0260;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0576;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'h0578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #304 e372e53d-97ca-4806-8740-8caaad3c8baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 cacf6bcd-b58b-475a-ae39-343e15b875be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 db15d763-ffe5-43ca-9652-c44ddad08af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 70655bd9-4c68-4cc3-8501-ce0724250bea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 661cbf6f-7433-43ba-a5f3-ec323f6ec429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 ff7d418b-22e8-47b5-8470-a2b6bccec7d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 ca153c62-0815-452a-bbac-f221e2b7ea15)");

unit.assert_eq16(16'h357B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #304 1c3115b6-62d7-41d4-96bb-927e8fe9f019)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0262;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0026;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h0028, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #305 3d8c4bc0-6c36-4243-bca0-04c585608957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 c8b123cf-479e-4bdf-abca-a3fb673b5753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 af95071e-6fcc-4d4f-ac87-8ef91eca8a89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 06fa6cc2-b6ba-4f99-8251-e6fb3becbc2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 721b6d69-88a2-4090-b25e-052e2bb0af3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 e328c7c0-92dc-4b99-880c-d21173c38246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 65d0fc2c-c6d4-4396-a687-47be233aa6e0)");

unit.assert_eq16(16'h25A0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #305 82adefe4-201b-4da7-a231-502c077e6344)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0264;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'h07C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #306 09eaa9b5-bd7a-41fc-b47b-0d1717d98caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 631eec14-ba18-433b-89cd-daf351d1e31a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 b54499d0-e61c-429e-aac3-ee0dc3c78dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 c69f8d4e-aa0f-4dd5-9faf-9b00729279c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 925efcbd-a9cc-4034-a9f4-6b358775bbe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 73c5710f-3c08-4c38-9d40-bc6ba7be64d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 84b2011c-0b66-4941-a6f7-cc8659387f8a)");

unit.assert_eq16(16'h053C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #306 d388e0a9-0f61-44c9-a18a-9b212e38db66)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0266;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0946;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'h0948, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #307 83f5dbf0-0d63-4d40-8adb-429fe26b9ffb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 9b6c51c1-ad9c-4f73-b9f4-062662e5ed81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 3bf7fdb2-12f9-4cd1-967c-f796406b75ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 53e48309-4250-41a3-a450-af512466d6c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 198a2ef7-2832-44f3-a6f4-853441a82a8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 c7526112-67cb-4425-b27f-a0344db24338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 aac06809-bdd4-4b1c-a6e4-db51f5299b44)");

unit.assert_eq16(16'h9796, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #307 e518a91e-62a9-4c10-953a-568cd3d3b27d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0268;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'h0E60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #308 909088c8-a5d2-46c3-8497-c2fbda3f4581)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 470dda4c-fc28-4ec8-8d59-535b9b7c6620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 e4931715-f6db-4302-b635-73524496b83a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 20c3bcaf-ba5f-424e-a7b2-501471c4a6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 11b1ed98-17c9-4c39-9e43-baab4f81adff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 75f57543-0c72-470e-ae6d-e6db2f64d5cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 3e48f990-ba4d-4506-8059-a78f1b865384)");

unit.assert_eq16(16'hC6DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #308 905e6b44-62fe-4e8b-b3ea-15782099d33e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0289;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h028B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #309 84fa9324-7acc-4137-9be4-6c9bfa3a4fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 542232c3-db54-458d-ac7a-278f4217200e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 1c79c4c3-a1c4-44b5-8a05-0b513b2d3f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 7d2b6886-fe75-4432-8937-54396c27ef92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 726c645d-8283-4d2c-8920-a98b43561bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 8c87549e-fa93-4d0f-999c-94feaf16eefb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 e8bdc85e-25fd-4a69-82bf-66a65d335922)");

unit.assert_eq16(16'h53FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #309 a358c714-cf20-4ae2-a1e7-7a101c0f0495)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'h0CE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #310 d24fb32a-8836-44c9-9d83-2fb5915efa40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 86de1777-30cd-4faa-b346-7bde3113dc28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 69afe16a-ee3e-41a2-be41-49c17cbc7342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 7099a44a-341b-41be-957e-259714e929fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 8ed4272e-0c09-4ece-a79e-ebf6d27b1620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 8f62a7f6-7fe8-4be0-8dae-22268de39d61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 9ef894d9-9912-4c1e-936e-4c4966fd5d7f)");

unit.assert_eq16(16'h5E73, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #310 98d3e27d-f8d8-4079-8968-22f107c57274)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h026E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0340;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h0342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #311 b6a6c6aa-3bf2-48d0-a45f-3e93ed3ec110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 8546d035-c405-4cf1-b10e-cb3b0a08abb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 3cea79c0-bf7f-4c40-8d28-9291df416760)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 e76a565e-b8fe-426f-bdd7-1ea18a019d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 f1a766fe-82e3-4e79-a130-1ad701e5664a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 402e618a-6461-4b5d-a3f3-36e3d1f64b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 192ed7b0-150d-4fd0-8625-9595db26ef09)");

unit.assert_eq16(16'hC824, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #311 9d31bfa1-1925-4ecf-b05e-c490c30c6929)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0270;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0995;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h0997, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #312 7a764dd9-e73f-4da0-bd39-34128baf725b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 0d516070-5abd-4bdb-9a1f-499ecbef1f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 48d12dc0-66fa-4196-b6dc-f00ec96e19c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 91be6d6f-dc57-4f00-ae6f-3801720f3a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 e77c28ae-0504-4643-953a-fdac6099a4fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 598a79ea-19ed-4601-a0c5-bfc13f0e02af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 c394e46e-9730-4fd1-b0fc-274921f808b1)");

unit.assert_eq16(16'h815C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #312 20c0487f-cf4b-4e25-bf2b-5b0ce8252e3f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0272;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'h0D90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #313 ebf8f2c5-8e19-4b51-80b1-09170036d41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 1577ad04-a205-4703-8a90-4f9f9190b861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 11658315-169b-44a6-99f3-cd745c8da1f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 291f6214-58b4-4465-8fb4-d9846c2aae94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 2c78630a-6926-4c97-9816-f7d4b7b13acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 5430a6bd-e9ae-40e0-9142-21504e191db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 340fe406-cac3-4122-ad67-083c0589e1f3)");

unit.assert_eq16(16'h6843, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #313 53b07013-2650-4780-9d37-059eb186806b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0274;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h056F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'h0571, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #314 85248786-b3dc-41c2-aaef-73356b5238d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 0a86467f-1946-45ab-bc2b-50be62dec87c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 37039303-7a49-4bd7-8955-08f8fb783bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 556c02c2-7972-4756-840f-b824c65c0af9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 bbeae904-c56f-4085-92e5-4aa94080195c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 ca130bf6-48cc-426b-b80e-903ab9d1e6fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 f9eca79f-88dd-4adb-9646-b9109f4a4a72)");

unit.assert_eq16(16'h7C94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #314 0718f984-6fcb-4d32-829a-123b8d147f64)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0276;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0404;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'h0406, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #315 565a061a-6acd-4cbf-bb54-83f2236eb183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 7e106936-ca7d-4d99-8ff9-e75caef3d315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 c5a16d80-99ec-4025-afe9-81a13ffb7ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 a46a98b9-631f-4248-b7d9-9eada088eebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 bf582dc7-2850-4ccd-b4da-02f3f31bcc2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 24bffa12-0db2-4ceb-bdb7-88af85956312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 b2ba21ed-f3fa-498e-826f-11d1c4c92505)");

unit.assert_eq16(16'hADA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #315 a98b9a32-feaf-40b2-876d-f93bc4119cc9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0278;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'h0BF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #316 3ad5cb71-d3e5-4f56-bad1-50862ff3975a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 4206839b-6ac0-4a1b-a3c3-f742179781cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 a84b1f7a-b1a2-4d39-af47-1967191db6ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 c60d1726-e66e-4142-ae76-dab7d5670e6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 fe431e10-caf1-4053-bef2-df5ebd29f565)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 7106bac6-dca5-4751-a268-2bbf1fa4ac3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 c9a0396d-7938-4766-bec6-d7ca90c8315c)");

unit.assert_eq16(16'hFDD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #316 4cee9d59-bfe0-45b8-8c7b-dd59af720e2f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h0BF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #317 1428525f-ed01-4d7b-9526-cac07fb263b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 71cccb9f-cd1d-469d-b93d-136326d30696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 afb87049-517c-4f19-be9c-da10f903df55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 1e377f5c-dcbe-4a0d-bb33-54fe34269c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 139089e2-337a-41c7-b0a3-48734f64d292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 e338ad31-d562-4dba-afba-947f443546a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 25606c53-2a43-4753-b354-5cc33fc0761f)");

unit.assert_eq16(16'h1759, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #317 6dfe60bc-49ab-4815-a053-34a9cb11eadd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0298;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h029A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #318 b6d0f56a-2184-400c-b0ad-a8928a0d84ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 d9e775fd-2a1e-45a4-b9a0-9cafd5d5344f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 02b10c82-b674-4be9-80d7-360f0b0a7ee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 52c28927-8d85-4ece-8452-ea38d854d288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 c56cb41d-397d-44bc-a188-c56a62701478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 742bba98-f37d-4b73-bbf8-cdd11143970b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 ffad35d0-1a0e-42f3-bf81-446c60e84583)");

unit.assert_eq16(16'h9D89, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #318 123aa8f3-23ab-4b3a-827f-a7903f795adc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h027E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h0FBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #319 fe7671d5-ef2b-4eea-b1d8-31f3c4f805d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 5384464d-4699-41e5-9e90-9f320062d90d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 66ca66c7-2cfa-4521-9811-59865ff11ff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 202210d9-4179-47e1-8cba-d3ac00af7c5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 9f5a7ed5-ffb5-4653-b4e8-cbc83c941651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 1b291c60-28c2-4131-aca6-2cd5e5b952bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 040c3ec7-9159-4960-be7c-1b8ae1c8d98a)");

unit.assert_eq16(16'hAF1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #319 07670de8-2c45-4893-849d-123ee2e08924)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0280;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0836;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h0838, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #320 3012be98-29e1-493f-b2ad-76b7b79c4200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 06d9122f-4ac7-4a4d-8477-13cab974744a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 98f31a20-55c2-4fa4-8b09-cace7d13434f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 92962994-5e1d-4030-a40e-bea5d9c67c43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 2448f409-8df5-414c-9d32-ec8fa3446aa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 317cbedb-1992-4252-8c3f-783a57bdc917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 24acde17-cbb4-4a9d-b3c7-638bdeff5fe9)");

unit.assert_eq16(16'hBE19, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #320 f1628047-dd9f-4c48-95d8-3d99db8b74b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0282;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'h0F9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #321 64bdc60e-8a6e-4e0e-a806-939133371210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 ed679e8c-3aa3-4579-bb5a-acb3b442ac0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 4e64674b-d818-468e-b6a7-d8f68c7696cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 7435a1f3-c01f-401e-951f-0e907e255c31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 c6efc6de-4bd5-48d0-b4ef-c7877ec41732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 7644071c-2f9b-48cd-aeda-5243a39250c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 cb2cbf91-5090-4650-8556-009149b325a6)");

unit.assert_eq16(16'h6E60, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #321 20c2c646-2fb3-4f82-bf24-fae38392a2b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0284;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0225;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'h0227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #322 9ac4fe4e-4d2b-4b1f-8d8d-b0df8fe29301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 d9a2349d-f321-46c8-8f64-58fc174d65dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 1d43d473-711d-4706-b042-cd58061388c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 719fc295-3b30-49de-9bff-5e7dcc39f2ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 821bdd8b-e932-4f9b-b5fe-9c04e02a14f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 88d6b0d0-f1f7-4623-a934-3634da1a72ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 e5c48295-cd75-4e5e-a795-d56ddf58a980)");

unit.assert_eq16(16'hEDD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #322 787de05e-2fea-4808-9b2c-9056ac3318a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0286;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h009F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'h00A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #323 400c53b8-4bf2-42f5-9a94-fb28d96e6191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 6e2bcbd4-f116-427d-809c-35ab15b4e5bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 fd89d44b-6d35-4366-b6c3-ad90ac1aa4c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 60536d44-23e0-4c6c-927e-1e3b36d21a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 6ff64ad6-dab5-46cd-b990-740b21441719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 3ae9e80f-0fa7-4437-b934-f23886eaf25d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 6ad388bd-e77c-489c-b3a0-e3303e2e5200)");

unit.assert_eq16(16'h6C23, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #323 99c0de83-7131-4056-be5b-04d7a3c80b8b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0288;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0796;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h0798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #324 73188a06-6523-4902-a8dd-a065945391a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 3387a12f-92a1-4acd-8fed-9a3636e310a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 7fb0adb5-8e26-4e87-8514-8f7c67f38d01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 925c9c65-22b8-43fb-a332-3b277cabcd69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 28c21034-83f2-4068-95e7-275292d8bc70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 06802ce2-e7e5-481e-827a-ae3c1a99b60e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 9595e9f0-f029-473e-bed5-7d704fb190a3)");

unit.assert_eq16(16'h4510, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #324 aa19980d-efcc-4c58-859e-36717b6338f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h0BA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #325 49832383-fefe-463f-91b5-b63f50b6e0f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 147bf6d7-00cf-4c19-ad7d-fee20b5e4f66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 bf67c62d-7dfe-494e-b1d1-b4b0e125989e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 19a63bb4-1dd1-4225-b911-a13dc9e45cf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 f8a086c6-1bcf-4fbf-8990-e83f8dca7470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 e2c186c4-420f-4138-9757-281f245f70c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 5ef91755-f625-4fdb-a81a-3fa05822fc1a)");

unit.assert_eq16(16'h17EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #325 a0ba211e-2d20-44bb-bb0c-b1cd249cb81c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0833;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'h0835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #326 1204f5b4-19ca-4ef9-ad0a-63cbf728ab32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 4ec007f0-98c5-4718-86f9-0e3ae683bfa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 715e076d-c7cd-4848-9c5d-b1ac8b2ff5c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 c5b10047-c038-4688-b124-e49d229dd2e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 639dcc38-daf7-46aa-ac1c-ae296050671d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 f7402732-7e9a-461e-a7d4-1946c3648f86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 fd154160-2698-465c-b423-a45e9c80e1b1)");

unit.assert_eq16(16'hB865, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #326 a086f2cf-3389-4e02-9999-ee44c1ce2084)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h028E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h0B0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #327 21fbc669-1f0d-4565-b5f0-4576e4426ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 067609e6-cb9c-45e7-87e0-6e703cdd06e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 208b9cae-b715-477e-a224-a4a567b70baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 12ec819d-ee92-417e-b286-afcafb8d7894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 7c59aabe-1643-40bf-b00a-d96e9c64da16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 67962a3d-a054-4f72-9e19-505918f8b442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 151e1d37-23bc-4b96-ac09-8d5d2115ea51)");

unit.assert_eq16(16'h2BC3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #327 8b35f5f6-7aca-4b24-9437-dc7e35344237)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0290;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #328 dfb61a74-3ea9-402b-9acf-71700c82fa7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 b2a32727-695f-48c4-96a8-59a0cf78c6ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 14a8da5b-61fb-46cb-a8b3-0df3e2564c01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 f6239133-2a98-4d59-886d-01b4651eb75b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 dba7d333-fd73-4074-87fd-a944db9f1125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 ab914c83-ffbb-4751-bb31-5d06f11615e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 a7f88662-f0bb-4b93-839e-e1f09279cea9)");

unit.assert_eq16(16'h5FA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #328 c551fbfd-944e-44e1-8e63-8c99c326f6fc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0292;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'h05D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #329 0865c683-59ee-4bc0-b32f-52c0022a8ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 c73aad1a-b603-4082-a485-cbf4965fb2eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 f047871f-f762-4149-ba66-fc14ed789986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 b1b748bd-ea91-4d6f-a8a2-a4c31a3da3f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 669025ff-42e7-4041-8dc4-6e5e8d09b72a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 2743f43d-2536-49dd-a5d9-97d3fc4750b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 ff58e9f8-9c2c-453b-a9a5-db93db8fac09)");

unit.assert_eq16(16'h4EA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #329 afecece1-047c-4533-b2d9-78dbffa45e16)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0294;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h0EDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #330 2d9aec2e-4b46-4dc1-8a91-edc9f23a016b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 6d90a891-d040-4c07-8de7-30181555393b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 b0b2d949-cf32-4560-abc4-4040c72b1dbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 c9d3cd31-bb10-4adb-8f21-7d0b62f7e4cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 2fa41b4a-dc40-426a-8c1a-36d191d8e444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 8218bcdf-f344-43f6-b782-79256521ab0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 4eeaef42-04a7-44c0-8dad-414817390fe3)");

unit.assert_eq16(16'hCDF1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #330 13bb59c7-10a0-4df3-88b5-84206f57dc5c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0296;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'h03A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #331 85391e67-3609-4d46-a3dd-ebb60f79c64a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 f287c8fc-2c59-424c-811e-7c7b902b9e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 72f0a845-c1c5-403c-b356-4534534d4b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 e0e6ed97-2e1c-4e03-b5a1-642b303d942e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 f6fbcf3a-64a7-4ed8-b59d-23be21cf7bd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 149e1602-767f-4d2c-9dea-2ff46b60d85f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 91a3eb16-c40b-489b-b0e6-9e90def86ccb)");

unit.assert_eq16(16'hEC2A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #331 d53fe845-fee1-44cd-a5cf-9e1065c9c601)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0298;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'h0D22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #332 93fb2f1e-f4d9-4559-9e53-7c58c7efab09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 6d26d03f-35c9-4db5-ae35-01bb6ccea46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 7093b2b5-b4b9-4c54-bd02-9fca292d1a27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 360d92a9-8ed1-4654-a1db-ea8c9bad08bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 847c486b-c9d9-4758-8b7b-82fa159df7bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 647e0121-ce7f-43a0-8609-2d6c27ea8f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 e24a2e86-c425-4bcc-ab8e-18736ba6db55)");

unit.assert_eq16(16'h95DC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #332 cf65103e-502e-43f3-9f0b-1ea84d722232)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0571;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h0573, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #333 02fe6315-e45b-4480-95b3-b2c66efd35ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 ceef68f9-5ebe-4e5d-ac0b-1885e91e38fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 d302c012-0273-4e20-8069-5670317e6bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 39a43987-1da3-4311-908b-7ec5e43b788e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 0fe3cc6a-5dac-40c2-b67b-50709af84490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 1d6919f6-6a64-4eb1-83a2-789a7d9e4613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 820f4a61-14cf-4553-96e9-12ca1d336287)");

unit.assert_eq16(16'h190C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #333 cdf55b4a-fed7-4eab-a9fe-2eef18d2f9aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'h07AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #334 eaebbc0a-7ad0-49af-b3a5-1fb87becd362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 7f727215-2bd8-4f5b-a14e-680d4ebdd9ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 902327f4-b26d-447a-b547-d970a4b40274)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 8ee8bd24-92ab-420f-b40f-fac868f61385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 d1f49827-1c7d-45cb-9ca6-2b9fcc61f17d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 ddc36346-587f-4993-a4a0-ff5dea5458f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 ad8e6ec6-8e84-4095-9d18-3bebd290d33b)");

unit.assert_eq16(16'h4952, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #334 f045278b-f82c-4a60-92ce-c6ab3680aa7f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h029E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'h02B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #335 895392b5-725c-4430-a81d-a09bfb27b0c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 625ee871-8eda-47da-b48b-f5fb6c2b84b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 eeafca3b-3046-4aca-965d-0a1209a08217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 09a629d2-6bd4-4afb-b18c-e5074514008d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 212c5f32-0e2b-4d8f-9f2a-57031c30435b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 0799f34a-3c72-4248-9911-44525a759540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 4981bda0-02be-4545-9d40-48378e750c6a)");

unit.assert_eq16(16'h2F40, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #335 e984e6e9-aad9-416d-9525-dcbf62a698ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'h05D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #336 b1438145-6b11-47f4-aef6-b45b99989b44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 7e76b0e7-4072-4f06-8ac9-94835d6b697b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 3605446d-307a-421c-a6cc-e0db6171c351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 2f989c5d-5e13-4c38-abca-22cf080747c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 3a153fd8-eaa3-42d4-8b31-be0f8adbf284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 560b34e2-d438-4517-a340-53e8fee6311c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 68a85b86-dc95-47ef-9f55-02059529ff23)");

unit.assert_eq16(16'h4EA7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #336 c735d624-7760-49db-a5fe-75b54082e1e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h0FA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #337 8fb1ee65-e76e-47ee-9ce7-93216e245d34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 3b1be05d-3be9-4f8b-acfe-5ef3b663b9e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 37731e93-ffb9-4462-beae-a4320712b76e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 b356979b-efc3-4a7f-bb19-9b44a6d0755d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 19cf67d5-bde1-4c5f-8f53-455096adab25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 574c3d0b-af20-4135-bfd7-c7fee2a1e1f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 ad7db333-ebc3-4072-a384-91ee6db2c333)");

unit.assert_eq16(16'h30EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #337 0cbaa3c1-7f94-4739-affe-d8efaf763fc2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h0C69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #338 e4da94ec-201f-4dda-8088-f713d32981e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 4b9fbab9-1d1d-4b83-8742-d848911e185d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 bd0f6f18-992f-428d-8ad4-d4018bf3458b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 55bddf25-4c03-448b-ae1a-a4c4850f2fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 4ab32c0c-6a17-4c49-a2c8-b133e399d21d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 278a5216-f7b1-4e22-9cf9-ea43b844a547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 916196f7-a0cf-43a1-8e05-83f1a92b81d1)");

unit.assert_eq16(16'h878A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #338 52889cb4-014d-445e-9a4f-a8bfec17ba3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h02AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #339 e3cd3bce-cc7b-4550-91dc-2b94f4f5ab5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 db497b26-d15c-4586-baa9-60aba441e1ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 c8db3b31-f3c1-44e6-b9cb-679057066d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 b10d723b-e238-43c3-9041-c1dbb19ca1ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 2b355b5e-aa0e-4488-a0de-e9e54963dc0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 b26c3473-881b-4488-9978-f213f818ff90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 b972dae3-1920-4172-b5f3-f01554814e8a)");

unit.assert_eq16(16'h2C3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #339 a9631322-1eb3-4610-8173-da781e02ffcd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h02FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #340 e26cbfb8-4c9d-44bc-8c96-b0e45b0d8f82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 c18e9484-f942-4d5c-b692-53eb6373d18b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 2b9f2b78-46d9-472b-8d0f-c24b2ba1f186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 799da621-99b8-4ed1-ae4c-698c3babe2ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 ca1f78f9-2af7-41ad-89ef-f66ebb962dec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 66e12af0-9e02-4ffc-b05c-cded538dea69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 d287f29e-da83-42c9-b34b-0a278823ebe5)");

unit.assert_eq16(16'hA9F5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #340 90b29f07-a60d-491f-a930-cf871acee60f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'h03EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #341 881a3fb8-e6af-4cbb-ba13-07517296694d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 0614568a-4a26-4de8-9131-75ed42032be8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 59ef89f8-86fd-4a89-ba1a-8cdd600a31d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 cd55a70a-1799-4cc8-ac34-b922fd474b05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 817a7a87-afc4-41e0-8082-1814e8d0970a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 d4cf9552-44ee-47c9-9bd9-e87881194fae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 4d076f34-cf7e-46af-8f83-237ee3ad5e3e)");

unit.assert_eq16(16'h5D06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #341 9a9fda21-843d-4433-8608-3ae247cf8f09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h082E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #342 f27f23b3-42ca-492f-a683-1e46c251bb5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 656c661c-f4b6-450d-8f1f-bfdc588b9873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 20802959-0b16-48cc-81b4-e78e4827d077)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 1bf6aebf-8c23-4fd8-aa81-27e73a6a3792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 9a884cbe-7c86-4a5c-9a6b-fce3629cd245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 95c7ad3a-15f4-4375-85f2-44fbf8a6e87b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 c501ff35-c7a5-4729-8c9c-5891c1bc0c82)");

unit.assert_eq16(16'h70B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #342 977fa801-dbef-4cb7-b06c-a56f23a80f25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h027C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'h027E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #343 8d0fd6c8-9869-4fcd-ae3f-3cf1af8576b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 a91a6e84-7497-47e6-a5ef-071ae729c470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 2c2b87ad-ff7d-441a-88bf-b534d3d9434b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 7e95173b-97e0-4f62-90f6-f2a79a7490bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 29b2e638-89d1-417a-9895-bdd5b3d30046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 6a60f283-933b-4758-a2db-640591ab100b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 6d9559f0-d25c-42e9-a7a4-01bfe34e0bda)");

unit.assert_eq16(16'hB214, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #343 f7c7f39b-b9c4-4725-bf65-8364b94e350b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0368;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'h036A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #344 5ebc8862-4d86-4882-b8fd-5f2d740cc24f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 1695aa33-2e26-4009-9de1-593aaf5f4157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 913f2ff4-1d76-4df7-9289-31e05d3b910f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 8f4ffecb-4654-4745-aba1-698a392a88be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 47a39ce2-a567-4f61-aecf-66ecaba1a134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 54934631-eb22-4a84-bc49-4cd6f240c022)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 09abe993-69ef-4068-826a-34ec4fad6e91)");

unit.assert_eq16(16'hDCCD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #344 dea8fd6c-d6e2-4cf1-ae19-d5842c141f96)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h00E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #345 9dfbdf19-86eb-46bc-8697-3e711283fa99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 eb6959ae-6a7c-430a-bb9a-1ee8ebd4fb03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 02203919-11a9-4ba4-af7d-5b48675b4ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 89acdcc7-cd38-4475-8ae8-3f5d455a69eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 c5732603-0b73-455d-95e9-0d2fe0f0059e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 ed666476-9f6c-4b2e-9b43-4ca5472a795e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 f1af7777-90b1-45e0-a240-51fb71d81fb9)");

unit.assert_eq16(16'h3DE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #345 b7cff279-ba3a-472c-b7c4-b06fa042f02a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h0FAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #346 36cb3a4a-f310-4668-8cf2-a672256ffbe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 4e21e074-1d6d-43f6-b536-3f6b39c9e011)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 460acebd-344f-44d0-a11d-b7252957c2f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 028ece2e-fd92-489b-9789-75b20e4cfa81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 adc87be6-a05f-444d-9617-70a0c12a63d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 92b3d1ee-a897-441d-8b31-afb4470dca2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 8a10328a-ce9c-4429-87c0-7978b9e6ea3e)");

unit.assert_eq16(16'hB184, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #346 ac835517-0193-4c6f-8685-c3e307f58a74)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'h0D50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #347 0dd9ebad-cb85-4bda-b11c-73d281647575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 d56e835e-64b9-4920-b974-aee687067682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 e9260b74-7368-47ab-9ca5-b09e44e57a5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 2e1a4fb8-a7ca-4c1d-8611-715a4292f60b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 8caa1838-f565-47a3-89db-919c4f2d4f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 020993d8-27e5-4897-96a6-887a9129fe24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 54e4bca3-ae49-47f1-aff1-20e674d585c6)");

unit.assert_eq16(16'hE82E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #347 b77bc625-751a-491e-a905-5308bcd23584)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h058E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'h0590, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #348 189525d1-2f70-4c3f-9a1d-ac2546970543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 34cf8363-c3f3-46ad-b49e-24bce19819df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 b844ebc7-e30d-4eca-a780-6e09933d149d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 1b71e26b-38db-4a01-bdf6-92fc7ae2a2ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 c666b1ed-5c2e-4306-9177-d794cdd6dd93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 3691203d-7d40-4ccb-9f8f-4abb8f8586e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 8d140dd7-3808-45c8-a14f-8f78b1d3eca7)");

unit.assert_eq16(16'h1239, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #348 9c241ef6-ed37-4b3e-ac00-9fd6200af553)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h0F1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #349 801cbf9c-fb75-4c70-803e-0b8d1b90e0db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 bba8287b-6561-4274-8014-1c5527d35aa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 6f7694db-8a47-4d80-a41c-bcff09bb1aee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 5e0d0d75-d108-4b55-8420-4c1bcfa285db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 abdbea0c-cbf3-44c8-bffb-1dad12331769)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 104c3f62-1fda-40db-9b45-8d308e04d516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 89bff45e-5dd6-42ca-9069-abbd26970810)");

unit.assert_eq16(16'h125C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #349 8bc8301e-a775-4962-94ba-176d81aabb6a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'h01D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #350 ef40ce76-e93a-4ddd-8083-16b5b1103ebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 abb3fbef-718f-4380-9bb2-112a5e701997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 558d8ff2-5019-4da8-8869-293caeb8db10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 c2e54c95-5ef4-455c-8908-d48bb258721b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 d7174f13-95dd-4fe4-9ae7-b60475a4abad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 0091376a-762e-4ea7-a489-afd43973bdec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 dcd6a48c-8635-433a-91e3-52af3e5811b5)");

unit.assert_eq16(16'hE2BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #350 00377648-ac53-427d-876c-d4124a0e8b9a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'h0F5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #351 9ca6ccbb-e102-4285-a98c-350a0f91b668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 bc1a43ce-c31c-4b9a-a909-b08310482f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 caf3896f-4e90-4d04-8760-f53c915f1a07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 ad6a2805-2064-4ae7-97cc-128b4ed49599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 633ea9d2-4f06-4c6a-922c-812e731e707b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 7a2cd959-52a8-4899-adfa-3ac5bd9b0cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 19dd1868-7104-4237-82a0-f567f8aef619)");

unit.assert_eq16(16'hA3AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #351 3f235076-b026-451e-ac7a-d052f6c80b9f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h0F98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #352 8e0cccf2-4316-4d6e-a121-a3799b000d29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 efef24d8-ef71-4a16-94f2-f8ba890d8b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 e99b4da9-6997-477d-9a1f-8061670ea486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 f0d132cd-c6ac-4483-9efa-5c2ddc1b8922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 5203cd31-f666-4005-938c-e7f63a121e47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 21c7498c-e9d8-4456-8ab5-89b589fb0edd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 5f84185b-19b9-450e-8c17-4e22bbeddec0)");

unit.assert_eq16(16'h24E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #352 70f36650-a5eb-4741-ad3a-27b6ee4c7816)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'h0FC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #353 3d0d69db-8d74-4e2d-b8a0-2120fe6a314c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 732baa66-3c9b-443e-a689-ab3f16d4168a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 2af7b142-e929-4008-9f19-abfbfb7cdb52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 43eded32-f5c4-4550-8f1a-6315187334f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 6cefe649-9fc6-4386-956b-2f4ea71387a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 c6908729-d762-44f4-b0ba-d8d5265ca998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 e61df131-2fb7-41e0-ba37-e54cbf4b3321)");

unit.assert_eq16(16'hBF86, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #353 029286f3-b448-4515-8520-b0344086f69b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h0E34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #354 b0c4fa1a-e2aa-44ca-90cb-6fcb1987074c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 89410116-5e3d-49db-94fb-0c31798bc56c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 9f31540d-cea6-4318-a0e1-5b760fa22fe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 b5ca8307-3066-4dce-a071-ea38173403fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 14256629-9b83-45b0-a78f-2b4948621faa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 ff9969da-d1ae-4d01-8da7-712e7da87f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 2332d3dc-34e1-4744-be07-005a08685535)");

unit.assert_eq16(16'h9F0D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #354 49871d1d-f7b4-4f67-bf52-4b8964632759)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'h01ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #355 945398fa-82c1-47fb-b27b-62276e3935a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 0258c9f4-6e72-4a00-b288-3ca219330daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 c92edbfa-e7a8-4796-b771-1f9124bfd8a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 5aa4efbe-5c61-4571-939a-7ee6ee879029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 2489e5b5-0592-44de-9f4c-95130684b749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 f6cc5bf7-f629-432b-a0a9-b0da787b5b29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 d667a84a-5577-4da4-a700-c9418f2d934f)");

unit.assert_eq16(16'h9BCF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #355 14675853-121d-49fc-b9e0-e06958513ee7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'h09B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #356 9d862345-6f23-4cd4-b9fe-61fd2f0da64d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 5a8b9837-e012-4770-bef1-be0c7c952cab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 fd930c7d-1ec0-4e87-8a77-3c9890f8ff4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 a5d516bf-d3ed-4481-a7c9-3a50345d1746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 cfcd2505-6625-4e20-8530-419e21eccc8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 33d6dd92-6aa6-4780-8708-de27c7e1e6c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 4f4e4e65-be61-46b7-a55d-e3c5ff08ca92)");

unit.assert_eq16(16'hC8E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #356 944e1d0d-ec9c-48df-9a25-2a5a2208de29)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'h0D1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #357 19e405d4-51b8-497a-855a-7824a9bbe3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 fea2e8b4-a522-46a8-9e1f-cb38e4db441e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 d11e5ea6-c524-4e2d-97bd-49214103365b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 cb38f115-973d-4677-be9a-c73679bf547c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 5edab04b-e739-4b46-a909-e3dde380a684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 95922a17-b3cc-48bb-94a5-afe366d89d57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 76f53294-7ecc-41d5-91ca-d928bc9c0786)");

unit.assert_eq16(16'h23D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #357 9e444b33-e799-4a44-a2b3-f5d2121feff9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h030D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'h030F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #358 e77e7621-2186-4891-a257-fc1d39eb1ab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 42713a6e-c7f3-47c3-9cef-562427c545e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 9d3dfd0c-b63b-46b2-9d68-0c124c956899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 7a87ae90-8fab-45fa-8b8b-c3fc518cf218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 c1bfe530-cbc4-415a-a73e-b41081524693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 7cdb75ac-0ec7-45b2-9e62-eeba31a5b85a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 1d4bd7fc-7038-4999-97fc-d3b6fc227c8c)");

unit.assert_eq16(16'hDFD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #358 8e26476d-e83d-4478-8652-aee572051d7a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'h00D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #359 05de1cc3-e7ad-4cb4-82ab-e3996f544bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 e04f1739-8837-49a9-8267-115a1643da97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 7a18a4a1-1a20-4c7a-a124-c5326dff7e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 59653c3f-cb08-466e-8118-6d56def15adb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 2e625c79-855a-41a0-af84-78382bdb9f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 4ad2568b-5dbd-41f6-b258-73e9e699c81a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 7f5b3957-9bfb-43b7-ba57-01ae920c4153)");

unit.assert_eq16(16'h9762, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #359 3f103213-d58f-41fa-a4a6-5417a9d263b2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'h06D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #360 dfdead0e-caee-4c90-a8e6-efe2090679f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 43d6a912-14b0-4520-b01a-071b8a35c6e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 6f49ebfd-1932-4080-b917-d0d2637d1914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 4c811182-4916-4bcd-b41a-41ef39a58216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 ac28b464-bb98-4925-a4a6-5ee48466f384)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 435200b3-c8b9-4c51-8e85-a3be3891e6f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 a8d58a2e-fea1-4f4c-87a0-5bd34baccf88)");

unit.assert_eq16(16'h7043, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #360 63bb55c2-d81c-49e9-8da3-93c7c351ca9c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h001D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'h001F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #361 68ad602c-adc5-4cc0-b1e1-ae5e763c2886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 46b1183a-b09c-464d-8d90-6f5ecbffa4f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 1f5cd80e-ef43-413e-a9bf-6fd20979070c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 9537f29c-3a55-4daa-8698-d8edf481c8fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 e18b8ed2-0184-48c7-95ae-7eb9451c4f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 1065f277-78ca-4c74-870a-b16e08494a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 d3417767-2b83-483b-b004-e0210da060a2)");

unit.assert_eq16(16'hEEC3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #361 1cbc6d0f-a24b-465d-b17d-a16fe17ecb89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0053;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'h0055, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #362 b153ae9c-e7cb-43c3-bd1c-37844915f533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 361d1da9-ed8e-4aba-a3b1-127c0fbd0fc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 f74d24ba-89c2-4e1a-9808-f956192158f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 76f9bcea-c872-4de3-bfd8-a878eb8da29c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 c25259a4-5098-4a6f-b491-f594ae0e2a4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 6aaa8962-e269-4e95-9100-b258ac57b8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 ffe93620-6bc9-42cf-b7ab-983491cbe95c)");

unit.assert_eq16(16'h4125, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #362 82924397-b1b1-4b53-8c60-0ae8657685e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h0DE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #363 749c1982-8bb0-4b87-85d4-19861d8da5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 617fe8c6-eb25-4beb-8db4-37b57923ef9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 956f6fed-96f8-452b-941b-72675f4e595b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 6a2d92e7-b86e-41ec-8788-dd08f911f6e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 aea83e03-945f-4647-8d91-b3b582c16bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 a191bd12-e05e-4279-9868-e1e73fd77d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 92e78bf1-b0cb-4104-8ebd-786b30fdb419)");

unit.assert_eq16(16'h939E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #363 394e2d0f-00df-41a9-977f-6c4f9e50607d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'h05DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #364 bb2670a3-d792-46c0-9449-a37b5eafa8df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 1f1a22a3-e850-490d-b0ed-660172d95c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 3f21c7e2-0f92-43fe-838a-1c682344a635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 d02758bd-10c1-485c-9f6e-280605872e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 de34ccab-63fc-484a-8f2d-66c71b14a337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 a3154ad9-0482-4028-a24f-2ffee52d36e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 87ec797d-3d9c-4d95-892f-fbdd39c08592)");

unit.assert_eq16(16'h167A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #364 d60c0d3f-b385-42a8-803e-1b2d98f26090)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h0E2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #365 6d7f55f2-927b-4493-a4d2-94d167824a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 91ed515e-9257-4100-87a8-7487cbf51c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 35cc5aa9-3e13-482b-9e48-525d684b88b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 f5db74f6-9200-4f08-be99-dc673871a417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 8607cee9-d403-4e27-b603-da46e68c5192)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 328578e8-29b3-40a1-ad5e-b5d68bb88d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 a47a4786-7e67-4a24-a5dc-c717ecade9d7)");

unit.assert_eq16(16'hCE47, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #365 0d0e346d-2c3c-46c0-8488-4a2f8b17f0ad)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h0B13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #366 c2b2f0e8-4378-4783-a65b-6da6943fbc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 0a862bda-e88a-484a-abd7-c37a917eed2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 356b73c2-4860-429f-a527-437228594e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 cc769354-8eb2-4ebb-8720-892231675172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 3f9c8fb4-515a-4a29-8d6b-c40778a7390f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 fa286836-0ebd-47f3-8898-34c7df56dc53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 85be20e7-444c-4c95-8f41-65ee5328d2cd)");

unit.assert_eq16(16'h9F78, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #366 d5206837-cf22-42ca-b4fe-33e74d1b5c0e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0234;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'h0236, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #367 f9a15c9c-8675-49a8-b011-fe43827acf3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 2e049eb0-b6a0-4c02-a05a-f60b607f48c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 3319dea0-6ca7-4fd3-a68e-c6bd1fa07111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 b5da3d8a-a9e5-41ec-9993-147df6791383)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 1ef2c581-3b51-4d98-820c-b010abf8e585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 5fdd98bb-f208-4ffd-9416-5fff32b50105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 5d3f1f37-7ea9-4807-9313-5968a53d8b24)");

unit.assert_eq16(16'h93D8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #367 fa382416-0978-4352-bb08-e5591e6eeb84)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h01A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #368 96aae1df-f6ed-4a74-a008-f9e8ad13d301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 6d407313-a2e6-4136-a70c-753288304e29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 df18e6e4-7479-40e4-a10f-c6fbd8700dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 46118429-d0cc-4c36-b81b-46c484b26cf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 c0990600-72a1-4992-9daf-e3cb384471e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 89d6e07c-4538-4c56-a9f7-44a4301fc4e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 e356f389-bceb-491f-8483-1da945616e08)");

unit.assert_eq16(16'h475A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #368 ad7c25d2-999f-404e-96d3-9d2128461334)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h077A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'h077C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #369 487058ed-fab1-4174-8eb1-45cc054ac343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 73f36fef-bf2c-40ea-b5be-701645614531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 7d0348a4-bc28-44c9-a26d-b3e9980830a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 99774a28-2611-4b44-8f25-82307da31406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 4ffde590-910f-4ad3-81ff-1227937dc3bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 8a08d5d3-d3f1-49d4-a79c-981d67504b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 1344c2f3-c34e-4211-a6c4-0aa3d88e7c67)");

unit.assert_eq16(16'hDBE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #369 6d9a0604-b31f-417a-81b5-0eee93bd92da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h0F43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #370 3ae8a71a-a743-4391-9a19-765114f17a61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 e9113fbe-9e14-4ad2-9d16-5524b06ddb86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 b776f725-1365-4b77-8d47-33b3fdb5b5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 20726ebf-2f32-4275-8440-adb5ab16e90a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 c6d46309-267d-4b99-af9a-af22f7199761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 10347641-0ff4-438d-a942-d2c81e9b184b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 e54f9f5a-9c31-4b6b-8b8c-8cf1cf211788)");

unit.assert_eq16(16'hB5BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #370 3f864d67-24f7-4f7a-9e24-8b530706d461)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'h0A90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #371 e8bd58fe-d64b-4911-ac3c-8fdeb200919f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 561b9800-5268-45be-ba92-891fc3baf107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 04fce5c1-28f0-40b6-a76e-68430274a624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 a02d38c8-25c9-4a0c-b5cf-b1f1287ce9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 2222aade-25e9-4dc9-8362-796c3b6386a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 851667fd-0122-42b5-959f-14ff1bcc38ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 ddbe33a0-d682-445c-bda7-50c7ca8b1e75)");

unit.assert_eq16(16'h7DE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #371 49156d44-c352-4d4f-8224-8cc80dbcccc8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h089E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h08A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #372 aa6af3ad-d329-4469-965b-f4c138a8b481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 aa8de65c-b9bb-4fc7-bbfc-878eb327be14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 89c0dff0-92ac-4e03-b0ea-c9ddccd386a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 ba015b23-89eb-4157-baa8-495cbb9380fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 7ffc7156-2929-4546-b6ab-3b6eea5ab7f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 06a2e8b9-5e36-43d5-b286-d102afa9ad21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 e7c57345-7dab-4601-9409-aeea0c535bb3)");

unit.assert_eq16(16'h339D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #372 141110b6-242e-4b2d-ba89-3143a2a92152)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'h0E79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #373 3b99277e-00ed-47e9-9396-c8a5f9253787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 7aaa6082-0b28-4b00-812a-1eec1977f1bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 4d78e105-06af-4433-a0a0-ca27f7eb566f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 5bb56981-000f-4e18-bfde-7b7938ab8357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 49a14a45-985a-469e-b750-fe2b48f9b8ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 65abb65d-ff39-4efd-b919-ca7b4c80679a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 29f0c440-ed15-410f-a7f7-4693d142e405)");

unit.assert_eq16(16'h13B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #373 19d2c2ab-d6f7-4ae4-b554-e57eaadfd1ba)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0366;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'h0368, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #374 f328fe7d-a5a0-45ef-8016-d314ffbac0a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 9d10e3a1-1344-4d5b-babf-052b604f3a1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 a425283c-c867-47f1-b577-43725452f931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 7d1373ea-bc0c-4965-8842-2930b90a7f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 64680425-ec1d-4d5a-99f3-e759b4474b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 bb0f33be-1d2b-43d4-b14a-357c28bc8f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 5aa76acd-358e-450b-b442-44bb6f0505d3)");

unit.assert_eq16(16'h57AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #374 b53a798b-14aa-4995-a087-93191155d057)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'h0AB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #375 2c324b29-259a-4fd5-9d68-4b311cc47c0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 67149cc5-0b80-4fe1-8c5b-4f4c9902d721)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 1f1b3ef8-1234-4b71-afe6-a8edecc7d118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 b23e9ba9-4339-4fef-94bc-014ad28bc28e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 40f818e5-a0a6-4eee-b189-6a53342d1d1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 bf9433f5-1956-4866-b2ab-4c3be28e684f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 7cd5bbc6-07cf-41e8-990f-2408f9caa8ce)");

unit.assert_eq16(16'h47E4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #375 5bdeb477-0b92-49b3-923a-54823078bfbf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0554;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h0556, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #376 d2081bf3-dc3b-4a3b-8cf7-aa3318f5145c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 8c8ba3ae-8320-4f7c-9f6c-d0a76cf522d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 2911b870-e83b-4a1c-97f3-ca998c73f241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 8f8d5749-87ea-4bd0-a1df-54023cc0160a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 bb70c7d6-314f-4ce3-9c51-0144b769f06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 5bda561f-bd3d-4252-a0a6-9cc9e1f87484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 54db839b-6524-48b6-9704-97f983d4101b)");

unit.assert_eq16(16'hFDE5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #376 a0e0030a-1113-40b7-9f69-0fa3858fbd38)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'h04B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #377 20937034-1829-4b75-beed-76adfaeb2272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 d54ba49b-2b8b-4e6c-83f7-d054813ef538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 3ad592d5-b145-449f-b4e3-35580e8f2855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 1056e73a-a52b-4987-bce1-f4cd12aa3aec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 59903ed4-8dd4-4977-afa4-6a7b72a1ea63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 2ef391e6-627f-4202-b055-b3117e9e36b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 804b99d0-7b56-4ec6-9c61-e944c7e1f4d8)");

unit.assert_eq16(16'h29B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #377 2adf9cf0-35c0-430e-9954-8d0dd90afdc8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'h0B88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #378 aef3fcb4-cfe1-4e78-b8de-2e10d88754ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 d80a1d10-4544-444a-8c4e-b28e2c77c0f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 212a1b1f-1021-449b-ba45-d1e71c23baf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 06ae52ff-c9d0-4005-bb5e-177b31b6b5c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 acc1fc1c-656c-4744-a8a3-9827f221d1f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 9aea7246-9289-43fc-8748-57bc35af1700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 3c42f116-46a2-42e2-b6e0-e67714f6c854)");

unit.assert_eq16(16'h674B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #378 52d602ce-676d-4b21-83aa-752aaf82c5cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0312;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'h0314, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #379 b1dd06dc-483a-4147-b526-77d20c7fafb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 74ed3679-e1c5-4e35-b7aa-1df5f3de2369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 25099246-26a1-4918-9865-a09bd4d9fa39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 b07e2ed9-930b-4d03-8fc0-184eed0d9be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 9bc0a8f1-d92b-495f-9c0d-10e2f7bb7015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 b9dcaa52-6c2e-4954-80df-0775476e5452)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 03ae1e1e-382c-4e4a-8a46-1fa5094899b4)");

unit.assert_eq16(16'hAB85, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #379 1de1274e-7cc1-4920-bde8-a12fc243a97e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0327;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h0329, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #380 0362bb6e-0f67-4926-a562-0881f961c69f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 e4a9f8e0-efab-43bc-80a2-e442ab608fd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 27b66277-457b-4c9c-b906-a39b76109361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 81a66498-871e-428f-b910-1ccdafef03bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 b6592b35-7de3-4270-8f65-e6697c22d173)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 eb935777-8906-4f2c-909a-5c2754800e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 bc270691-a2ab-4989-a8a4-03b89ae3dbad)");

unit.assert_eq16(16'h2DA1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #380 0dc6ac35-cfae-44e5-9090-e73b1dd47f2b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'h03D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #381 6ed882bf-fa32-4f12-a5e5-2d7a49931455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 ad42b497-dbf7-4b52-b568-76f59ba9d7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 706a8d3b-52c8-434d-9563-977e282379f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 ee40abad-b3ce-4840-b9d1-3139e9311585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 a555f734-9918-4a1a-a8e3-6e9577464af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 b6c8a5c0-fe94-489b-ad9c-31b45c391377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 56c7df5f-1837-4b95-9593-bf8faf0d08d9)");

unit.assert_eq16(16'h133B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #381 1375483b-3a62-496d-a7c1-add510a29d2f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h010E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'h0110, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #382 99b6d33e-22c2-4638-95bb-6604d8d5c3b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 17680191-fdc1-4a19-904f-d7ad2da0e9d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 de516a78-aafd-4c93-a8c7-5b598f76fab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 bd223306-9d42-4e27-ab9e-5095f0005e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 5eb34628-76cc-4682-ae00-ef3fa88b4622)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 e7545115-68a5-47d8-8c66-1b2294c2d039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 34773711-137b-484a-b856-521050f1624a)");

unit.assert_eq16(16'h118E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #382 b3c119c2-b95a-4395-ac85-060885036900)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h02FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h065C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h065E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #383 a2ccfa94-c8ec-4c1d-bfac-aa9e2089db63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 32ce0cce-0b47-4120-b233-1d588268f90e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 0de684ee-c1f5-49e9-9b57-702928a1e720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 a0188ab8-e733-4df9-b477-74bf55de486c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 2b381464-673c-4863-8a03-2f4005b49415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 9226dfcd-701b-425c-8249-c94c60eb27e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 e467e7d8-bbd4-45a9-8501-7d9142c0c779)");

unit.assert_eq16(16'h4B1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #383 3c6181c9-b8d8-4f50-8363-4e7b28d586ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0300;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'h05E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #384 9e09388c-8aae-40fb-a5c0-89ec71508564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 64a59298-9f82-4ce1-8b5e-107010c0552d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 202e2de7-a761-4ae3-959d-efdd69d5d2c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 d4db9ee4-b9a8-4bb6-b040-0df0b20f86a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 3e55d0af-80f3-476f-826c-07bb5323592f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 f8568085-0b4e-4f9d-a23b-fc4b68a01ffb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 799192c6-87d8-480c-93cc-c2f1ce985f70)");

unit.assert_eq16(16'hDC05, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #384 ae81aff9-2cfa-47f8-bc84-03d52d477b17)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0302;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h0F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #385 b0b8ff77-639a-4279-8f7c-4c9642113a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 ef9dcc7d-4be0-476b-a38f-28ed1ec3e388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 12905af4-451b-47c7-a1bc-390468fd7099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 bdbe9460-517f-4053-96d7-abd66d5e0209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 b4567cae-2136-4255-82b3-447ebe1c5dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 6d15d50e-98c5-4f9e-b0be-d522e6fd2493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 ea1f323a-053c-4f6e-8408-b43237db3108)");

unit.assert_eq16(16'h160B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #385 8798d87f-9fdc-4c90-a313-9e7661d5c08d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0304;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'h0CAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #386 27b03ce8-3e9e-4ef9-8fe3-8e953609e123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 361d5ca4-39ae-431d-8a1b-75378cb97e75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 aff23e38-2ed1-4306-8515-6dde7a6f78b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 61d521ff-ff37-4a8c-b450-bb82da05bba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 8ef28350-e452-4709-828a-f529fe8d426d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 eb369521-0a37-4678-b55f-5ed207aeeb2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 b1bb74cf-dfde-4af5-a780-6de84d7c56b7)");

unit.assert_eq16(16'hEA25, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #386 73588041-9830-4c3e-b863-aa7cf7e547a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0306;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'h0E47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #387 52bef6e0-1bc9-4693-b5a2-b68cc57e2f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 6f06c39c-3c59-4786-b7cb-833e822526f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 36b9444c-6f1c-4b47-b677-b5e5638cbe4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 963f8f1f-cd92-4da0-b5ff-2566db8b0cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 cc01f63c-904f-49da-a956-0bd0ca201c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 7fc473af-09ad-470f-bd9f-a3407c1e6baa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 60b89475-19b3-455d-9d5b-8bc90977829d)");

unit.assert_eq16(16'h6232, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #387 f5535180-f9dc-465d-a801-aafceb88932b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0308;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'h03EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #388 5e092284-afd6-41d9-ae4f-a9a0120c3cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 90d9d724-862a-4f00-b8ae-8253b08ca919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 f190e771-8ad3-4643-8909-8058a1d3c1b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 452171c1-b2bf-4055-a508-66ed3bd0be3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 79fd00a2-8c9c-45d9-826f-48092bc70d5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 b92aeced-4022-4876-a0c6-4939dfc77a6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 dc0505ee-3fe3-43b4-89ba-528f19c29aa2)");

unit.assert_eq16(16'h0677, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #388 35c5fff9-e370-4a00-90a1-ac71f4084b59)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h0C1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #389 3748d19f-704c-47bd-ad4b-e8c6a254a5b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 abd48a28-03cc-4ac7-a07a-99fe29595c66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 dbc5b353-ea76-4bff-925a-97d9933e5140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 dc8cfe08-3140-45de-9e4f-3dde25aa28e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 326e72e3-e9b3-4d02-ba1a-f798999b3034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 8bc519d5-f589-4d8e-b143-e467d371c2a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 db5ecaa1-7cf2-48c6-8c64-52c789e85589)");

unit.assert_eq16(16'hBF71, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #389 8c2178d8-f6e7-467a-ab9b-4508824321e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'h0DA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #390 da104581-4c89-4a01-91f7-c8f762bcd5c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 20533df0-2b8a-4679-bf0c-c94044a6209b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 1bbe9294-4898-44ce-bccf-74be566b0857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 7cf6477c-22ad-467a-b2de-276a21bad75d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 1165cf02-a52c-4b90-9fea-f00fb2ad635c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 bb24bd38-997f-4034-845b-86bfaa19a6ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 6a1aac77-361f-4395-9666-5e86216ae110)");

unit.assert_eq16(16'hE321, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #390 f5f57118-2b60-47c3-ba52-1c0ab8f554e6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h030E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'h0BCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #391 60c9a26a-2d09-4d2c-a59b-d899d56c7fb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 512689d9-540b-43cd-92bc-230ca1444c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 e06efda0-8b72-4a1f-952d-3940a2e18a11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 eabc234d-ea69-40ac-b927-62bf85182aa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 34cf57b7-f3f9-4327-aed6-d7947469f5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 45302e96-31d6-476d-be76-9d72d847970c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 73171f22-fa0f-4829-b514-1038a0424c4f)");

unit.assert_eq16(16'h0D79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #391 046d5cb9-6fb0-473e-bcd5-e03a3eea6272)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0310;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0124;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'h0126, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #392 89933189-b2cd-465a-af4a-0142b533d6ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 c00cd1c9-b101-4fc3-b348-8a29ce0ef9d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 49ec5db4-0566-4672-b454-ebacf4dd53e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 abe3cbe8-5a48-4f95-a532-654b65f779c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 e9982d1f-081a-430d-950a-e452c1a52ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 de5ab17f-9add-4785-9f7c-b45ae8ea1ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 d27a6571-3fd2-42e8-adfc-2921e14667be)");

unit.assert_eq16(16'h5964, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #392 a79f52d5-a6bb-4201-8c8d-f211e9cb9dda)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0312;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'h04C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #393 835a05aa-6932-4b32-a076-6ee4a5b06c81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 35e16fc0-dcf9-46bc-b484-d4ac3cf1a0b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 0eb41877-5eb8-4a96-8789-f1c7184a2390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 b8c5c307-8b73-4e44-9931-58c5fee6d94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 aa98204a-06cd-4849-b806-9139930a1904)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 82104dd5-6e3b-41ba-9336-9b9878a4eb85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 35232671-b4db-4088-a494-095ab6b46dac)");

unit.assert_eq16(16'hF486, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #393 3689b4f0-07b2-4bc9-8bc0-69933d8c27a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0314;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'h0E91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #394 7fb2f9d5-e4bf-483a-a715-0b2e2050abe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 6255c9ba-4cef-4794-8620-81a96f82dbcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 8d844ce8-1a73-4d6b-9b07-7c7226d5ae8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 343f70ee-6469-4b38-9235-bf37b3d7ddb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 e54d5442-49d4-48e5-bba6-0046e0cb54e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 17f11697-8684-44e1-95fa-82e341d8e78f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 6555464a-efe7-4032-b4ee-993c09ddf478)");

unit.assert_eq16(16'h34DF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #394 53b86d5b-9863-41b0-88b6-ff0441795fc1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0316;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0665;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'h0667, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #395 82315589-eebe-4fad-8cb2-0b3c13720081)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 76340d4e-631f-471f-9d35-52e426954970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 fe86d5d0-27bb-49e1-af0d-eeed13ce5cdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 abe62c71-456a-44e3-bb74-858e6678f0b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 2cc824d6-2867-4f00-8c86-5c192cfeb7e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 e74db59f-5b28-488e-bdf1-2bb6bbb69278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 27a6dcc5-1099-4834-ad2a-c7c222b7537b)");

unit.assert_eq16(16'h4665, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #395 0eaeec5b-44d7-4ebc-8e99-4967cbc59613)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0318;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0891;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'h0893, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #396 43dd7a8a-2c54-466c-a337-fbe8a1c68c31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 ad33becb-90d8-404f-8529-b1896516e244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 c2152854-7419-4806-94cf-aae6c97b163a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 0a61a42f-0f78-4bb1-833c-60b3840c4211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 19ffcc55-992e-4e47-b886-4c41d296548f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 616c9e19-5267-4add-8795-8645e6253fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 4c10a900-01a6-48a2-a100-7e7e8d0646d6)");

unit.assert_eq16(16'hD7ED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #396 d3b74f31-1c3a-47b3-8e48-cc28eab3230b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h071D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h071F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #397 85237068-e9e9-42b5-8da8-89edf7ac0d5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 9f3004c7-69d7-4b5e-81d9-d4df77994a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 de438865-9251-4874-b818-5e7cd08dc4cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 f63a182d-90f0-40cd-8f0f-7b52bfab1102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 07b5478e-bfa9-49b9-b703-41943224cf03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 50ee4126-d137-47ba-a28a-484cafd0a377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 105e98a0-c7e4-4132-be80-9c839c277500)");

unit.assert_eq16(16'h84C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #397 6b01e024-d904-4737-af03-e0988345c7aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'h0CBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #398 98cb52e6-6e5d-43a6-9a0b-23e193739276)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 d178df61-a87a-4a46-87d6-912ce32ae0ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 039d7250-934d-4f70-9ad6-309eadb091ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 f14e7cb4-099a-4b76-9619-d707b7822e30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 afa7cd22-9076-4c0d-9f5d-70f1504a92e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 e40c7602-60cd-4756-a3f4-e863d7051d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 5821dfc4-693e-4798-975b-dc70a186ef56)");

unit.assert_eq16(16'hE3EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #398 b7ace81c-77ee-40b1-ba10-6d71f45fc93b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h031E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'h08C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #399 e0c7c92c-c073-406c-ae9f-0aac5d7d2f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 8ba7254a-e7c7-4272-8b6d-778976d718d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 7d6c909d-98ac-4974-bc3f-02a330b0bec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 58137fd6-293d-4446-a9f5-93f61320b7b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 65681a42-dda0-47d5-a185-eae418b4c468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 687ecc4a-e61f-4bf3-9ba4-c76a365ab818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 32985069-84e9-4853-bc15-05af7f5c964f)");

unit.assert_eq16(16'h3669, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #399 efa3bf53-b4e9-4777-9cf5-54a0abcf5678)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0320;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0180;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'h0182, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #400 6c820509-3edc-4411-a6f3-c9cfa22c130d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 6d729797-4393-4d94-9a1b-8da1c97e1d06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 e260a558-9580-4120-8432-9ce10054b375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 8e2471dd-8ccb-4e59-aef1-995cd67b2aa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 e6213c0c-3ae5-49b2-933d-9756c7c37890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 91660514-0988-439d-98d3-d5477088f7d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 6abf3547-176a-4afe-94ff-710fa9543cda)");

unit.assert_eq16(16'h3479, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #400 dbfd4f1b-d1c0-4e17-8b34-b3bd3dd3353b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0322;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'h0B35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #401 1dda4093-7954-48b3-a6f9-a41a844a8efc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 5b5d7aeb-2c3d-42a6-9af1-71aed4d9660c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 a0d6dd33-5906-43de-a0ae-e52447d0e4a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 b0ef7a73-ed3f-4151-b090-100e307ad931)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 727db48c-a845-4b18-946b-ef7da0c873ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 113cac32-f125-4d83-b0b5-c90215c3371e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 a9c62d99-50a2-4505-b23b-9cec32c15a2d)");

unit.assert_eq16(16'h768E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #401 843e5763-2861-4383-a517-e738bb1a2b43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0324;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'h0C76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #402 d40cf6f9-33b0-44c4-96d3-e1247b064f57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 613b5abe-633b-4556-b494-3d685d61e552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 4491a1e8-a23e-400b-b558-e48b67678582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 904ef1d6-de65-41a9-b8e4-e9b6fd703470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 7680297e-3c69-4ea8-b55d-f63ce25340d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 350f7d3b-6136-4d9d-a5c1-5ab3c60ed519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 55af5f2c-1275-48a5-81ec-1c38b4ca5347)");

unit.assert_eq16(16'h6862, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #402 98231eb2-9393-4ad9-95b1-9c2366e3a134)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0326;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h074D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'h074F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #403 2c2a71e5-61ca-46e0-a8f1-29fb6ae8bc1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 ba50b818-2dee-4dd6-8245-8d634ac2346a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 7d665f38-cf95-42f2-a442-ff4e67aa5ee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 8c974108-af17-4d90-897f-200764474c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 1f97e2f0-78f7-4076-9b79-a90dfadfcd25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 994c430d-f810-47f5-a85e-46f711d9553d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 b73d7b06-758a-400b-bdba-c7cc86ee6ea6)");

unit.assert_eq16(16'h263A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #403 252816a0-a769-4923-9304-02ed5ff49912)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0328;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'h0E3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #404 bd3aad44-ce63-45ec-96f0-db4f0e2819da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 7d6da677-c724-4738-8526-4b1d110deaab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 01cf59f2-e969-4639-bcfc-8666e217ca26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 e7598d9e-ec5e-4faf-8e27-767866b95336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 52b09a69-c2b3-4639-86b5-f29a8deb80e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 2d55687b-3296-454a-9366-8fe6db1d31eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 b77d6107-0237-441c-a766-d47f5fa19038)");

unit.assert_eq16(16'h10A2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #404 4cc08eaa-6fb0-4b96-82d7-c8b5745d835d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'h0FBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #405 ba418f1b-74c4-4875-8541-954de9c2ece5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 d63a1f12-9e18-41c0-91b6-9509ba841ea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 4a6e7e72-8b45-441f-93ca-c2f03a9d1e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 fdcdbdb1-848f-453c-b7af-ff80e6560da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 aa921df7-dcc4-4482-bc5c-ef347d2cf8b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 501b7bff-6874-49e9-bfd4-8eb12615ef45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 5c5018ef-2860-4955-944d-af6b0a482761)");

unit.assert_eq16(16'hC8BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #405 eee35737-e3b3-43d7-a8b9-4c5681e6bfa5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'h01B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #406 d93a5bc2-96d2-4509-9b91-25ccbfbb072f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 e2978786-2968-4687-b9c7-f71bfa114295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 d99fd763-209b-4606-8adc-93017589ecd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 01905b85-eb66-424d-821a-74c5a4da89be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 69072807-2694-4a04-b85a-47462b3a2977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 cee7ad2f-0424-4fde-bb70-03d3caef4397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 bff50566-d970-4877-b03b-0efb957138df)");

unit.assert_eq16(16'h51D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #406 9199a280-f228-42d2-9e30-28d37603e91e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h032E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'h08AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #407 70e6dc7c-b505-47cd-8aec-530b158cc86c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 4daeb15f-a90d-4273-9578-3bf13a583b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 09efe095-2ee2-4b94-8656-529bb8d3aca7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 8841f3ef-007e-4556-86d5-9cadb7889c0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 698fbf9f-5ea2-43cf-b5bd-94cd9a23811c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 98eda2f5-696c-4d66-ba6d-73b788ab871d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 570ebb1e-2a03-4110-a4ea-17a4577c3e44)");

unit.assert_eq16(16'hA99C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #407 e91b8a12-6505-4450-b863-971a8ebb47b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0330;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'h0E01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #408 ec37deae-0f1c-4ed3-9cb7-77f600f542d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 5d0f8bb3-4180-4949-a29a-b70cc3f0aff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 257f3598-7c4f-481a-99e3-9bf2a75ad75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 3c47c400-cbb3-40fc-bd0f-61f2f9e16409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 8ba48a80-3e41-4ca9-8662-2f76cbc252fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 ead1bebd-d4ef-4104-80fa-438ea84181cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 c9f5074f-82ff-4b62-a42b-d2cc93303fe2)");

unit.assert_eq16(16'h8A2F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #408 36b0bbe6-1b30-4bfd-8c47-a9f7709dbd5f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0332;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'h04BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #409 f02fb788-ae6f-48ec-ae74-00b5319f3a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 07e7f3a2-6b7c-431f-b0fe-6737da3c3854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 869fd25e-0017-4eaf-b992-4d312f0634ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 6ff45480-ffb0-4dd8-9207-00f335e31add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 1ca33b96-75ba-4fbb-9458-e45cd36e2b95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 f500f214-e4e8-4dfb-b376-8fa7b3239576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 d851d138-fca8-4b3d-b88a-482c6ad1751b)");

unit.assert_eq16(16'h876A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #409 2c77000a-fcb5-4e16-bd27-395622ddd81e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0334;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'h0E1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #410 22b8402b-90a9-4b04-ba33-891167e01060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 5b2bbcdf-2f0a-4905-8c9e-bb28f0c4266f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 4152c1ef-e92d-4767-9360-15d1aa951534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 c7dfa00e-8b3c-46af-bebd-9c77784302e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 98e00a8f-7334-477e-b673-974625ac434c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 dea2f1d3-f934-4a3b-a52c-d778d7388943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 4f330509-6580-4fee-9354-5f7d38a36b0f)");

unit.assert_eq16(16'hBAEB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #410 eeb57e60-44f6-417b-8505-8bf55e4c3eab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0336;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'h0BCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #411 286fe122-f23e-41e8-8955-6195f9824b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 97d98d69-7646-4452-be8a-2137c8fa8e80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 4cee5ce2-30aa-40f3-92b4-6eed8bb27588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 c8a19592-2294-4193-9b56-c80df0ff8dfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 e772b6da-f839-4852-a358-b0f79e73544d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 61e5820b-7926-499f-bc19-476dfcf4d1dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 f7957329-7a0c-4e8b-8a72-ed4bef438145)");

unit.assert_eq16(16'h0D79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #411 c218b509-67be-400f-8adb-ccf522f9b2fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0338;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'h0D0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #412 c0013ad3-38c0-4c5e-a3fb-2f91e22546f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 b4a70be4-3c35-435b-880d-9d4f8ad01680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 6b166f55-04e0-46c8-8f43-fbaedbf8c549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 67b69f68-7416-4e23-8694-f853f41da0b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 0c86c5eb-e897-447f-a711-8310fbedc5af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 ecef6aed-27fa-42ce-984f-51308e1f697b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 d43f8242-2e2d-471e-a650-5447549e0b47)");

unit.assert_eq16(16'h02CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #412 303766d6-f64e-4b1c-a884-9c01a342f158)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h033C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'h033E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #413 83373304-7ca6-411f-b607-7bb9ded126e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 cb44d89b-0036-4b9d-aa0f-4fdf030cbd31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 2b00850e-c1b7-4880-9885-585a654a5967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 c34d3b4e-9993-4162-96cf-2bd0be734363)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 c8e5d2f1-84b1-4fe8-8c6f-5794354d9a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 216b02fc-acbe-4f82-b622-08e00e3e637d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 e3ae9a04-4971-4554-9637-8a5abf764885)");

unit.assert_eq16(16'h5688, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #413 b26b6fb0-d43d-4f24-a999-ee9789be6bdd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0068;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'h006A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #414 42b7ecd7-a086-406d-8078-2c6b16ad3593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 5896c8c8-33d5-4769-8c12-82026b108e35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 3e0bdcd3-a49f-4f11-a3d2-3cc2e6d06a57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 98e76bcc-cd0c-4aea-8098-d4c4a032fbf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 0293501f-a3f9-4797-bd27-b747e696c42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 4339ff77-fb22-4cb7-95ec-68fba275451a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 fa51882a-8e88-4ec4-af2e-826ccafaebcd)");

unit.assert_eq16(16'hA45E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #414 16054704-20f1-4359-8c99-9fd3747ef379)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h033E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h074A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'h074C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #415 c6348232-193f-413c-9b5b-9407abce43ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 035ba2e1-22de-46db-b078-d3216479c048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 deb80609-ee26-4e9d-bc35-60554bbc713c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 08889daa-0edb-473a-a080-255cc36fbc57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 fedc65fb-b4c8-4453-9aaf-9c59e3c48d18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 de5877c5-7ebd-4a3b-acd5-949875c534a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 b2662ce3-0781-4510-8e05-64f689bff0f5)");

unit.assert_eq16(16'hA9C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #415 28be8d97-abfd-4c18-bc66-aca00aa63ffe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0340;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0182;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'h0184, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #416 87dfc160-4685-4fbf-b042-c14550361315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 dc569f7e-85e7-4a82-9386-d7b232baa4c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 7a9f38b8-7039-4238-8e47-539a45487f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 74c98c94-8bd6-4658-ad09-5d40f93e31c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 c62fbd58-0dfa-4a17-a26b-710db8a514f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 58d57dbf-dd8e-4bc3-9491-e7ad322b6615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 875bc051-670f-4f2f-9bb0-b1b795c35fd3)");

unit.assert_eq16(16'h9034, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #416 a521204b-5d22-4c1b-93dd-66ca6c0d5cdf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0342;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'h0A7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #417 022ec3b6-b1bc-4ca9-9b99-82f88d21ce78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 d747dff9-c78c-4fe7-b371-c227921858a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 b4d8235f-c1b5-4fb8-b92f-afcefd4f7a72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 4cdb4895-9fa9-4cb9-8f49-a62f8d673692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 7bd6d2c3-c26d-431a-a747-a5e11531cae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 6d975198-a365-4a65-9b3f-dcdb817823bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 b92442b3-56ef-4b47-86ad-b74969339f8d)");

unit.assert_eq16(16'hFCAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #417 bb821432-7d04-4a61-9c0f-356f8df8db66)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0344;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'h0B56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #418 96c9f2d2-1b11-4c6f-b184-e02ec81a8250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 992b615d-cf20-4628-a4d9-80dde9ffb373)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 a1cbb4cc-3a45-4302-ab8f-3aa23d78b57e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 a5e7908b-a181-4017-800b-51a841b95aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 0293b946-93f5-48e4-85e2-a4233e95382e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 242bb266-ef0a-4f53-ae95-3d6b85e77d0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 58a62bc7-0644-44a6-8ee2-69bd4fe3651e)");

unit.assert_eq16(16'hC35A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #418 18d3fea5-f8ec-4599-aa23-f1236f94c90e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0346;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'h0AE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #419 725efa20-304b-4ff9-9396-4cbbc6cca423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 ce29c664-ba91-4b72-a65b-c5a5df2a2632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 4bf83fe8-bf6c-4a44-a521-299cb50a71b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 db2a5731-8f57-4e0b-a52d-327c09b925f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 1d1f3cd9-cd63-45c5-929b-3032675be112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 a66d6a1b-3606-441b-9bf9-93f8e0447994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 a0643415-6f67-49f6-b6fe-e85ca2226e36)");

unit.assert_eq16(16'h4CD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #419 86ca5a9e-3cba-4ab3-8725-6e7cb4e26299)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0348;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'h0CF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #420 160c703b-45b6-423c-8872-52377d23db69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 fd0c7e06-360c-432e-9d87-653777564f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 1c57a90e-d764-4b41-a01e-80426a0b49d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 edbb4b22-b3f8-4ffc-8904-fe90e909a7e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 aabf1428-bffc-451e-899a-e3f28f14c832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 9a9c7d08-db49-49ff-9f7e-f4cc125c86f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 0ef1160e-f6ab-4d24-ab35-05b1dfb01075)");

unit.assert_eq16(16'h2244, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #420 109349c7-ae7e-4a72-8afb-5a8d16c22f3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0438;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'h043A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #421 1a080007-0414-4fa5-9488-f99c4e23976b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 ce05b62e-d845-4502-997b-b1af0f93ae2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 9779f251-dab6-4909-b11e-8b6eee77cae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 4b7df6de-132a-4adc-8cee-35aaa804c236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 45ec7411-7655-4f03-ac55-fca7423262f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 55efb359-aefe-408e-9ee8-e24a042a4720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 503b9e60-66d3-43c4-a3aa-8c746dd8c8c5)");

unit.assert_eq16(16'h4BE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #421 b8e0926c-38d4-4d4c-8dad-1907b43f2142)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'h03B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #422 f0e804ff-186e-49b0-99e7-cceb5dcffabd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 aa51079c-78ee-4b26-b962-2d084b857506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 bd0f2661-56fa-47ba-aefe-78443ed4eaa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 f82992e5-16bc-472f-99ea-da4cc640987d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 de2baf35-e78c-4d4d-9383-4a0efd28dcf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 2ef352b2-e101-4f8c-8dc1-f638841b8f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 06fc64df-d78e-424a-82b8-286a9758a2cd)");

unit.assert_eq16(16'h29DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #422 8fa728e0-8a6f-4821-b795-a13dd3f4189a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h034E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'h0DBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #423 42cca927-7142-4737-8b46-eac3bc202c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 33c41720-a726-4f54-8f27-b9cecf81baf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 7c525783-dd5b-4486-95f6-8a2d29ee05ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 77a700f8-87b9-448b-9bd8-0270e0ccb667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 0edca310-ccd2-43d5-9427-db8c4da11312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 aa78cc47-6070-4e03-b25c-39d76bf78e4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 583739a2-f05b-4ef1-9df9-9ac45533da4b)");

unit.assert_eq16(16'h68E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #423 d53c00ab-f308-4db8-8b36-bd7f13b68231)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0350;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'h05C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #424 2b600e99-6b27-4309-b3bf-141e6a5a2887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 77de38b8-e88d-4f04-93f4-136ba71e34df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 5c76211c-7db1-4d61-beaa-aee7795b11bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 c02f72d0-504d-43a6-86eb-065f1bcd42a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 c9e9b44d-5a4e-4190-aa94-1373ad19a824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 a44feb62-96e6-4109-838b-5eca7a8e627b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 2614b5fb-6e2d-4822-a010-aab1d04cbeeb)");

unit.assert_eq16(16'h01CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #424 2b3652ef-621b-4e49-a493-30a7f7d52842)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0352;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'h09D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #425 00c014f3-1705-44e1-80b3-5535839c5563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 f89c3840-a54f-4cdc-9477-d7ecb6c4be46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 ea7a3837-667d-423b-a24e-ea5d3ec46aff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 413481dd-6a9a-4146-8346-130cc5e0ab48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 53fecfef-ddd0-43fc-9759-3e922567af54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 fb505a17-0fe1-47fa-a0fd-d3ef7c2b5fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 328cbfe9-7624-448e-88a9-18eeae4a7d7a)");

unit.assert_eq16(16'h88B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #425 74ef2d82-871c-467a-99bd-43d6b2bc48f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0354;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'h0E0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #426 9101bb16-7361-41f8-82ce-d3f33a978e3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 b7a9e366-06f6-463c-8d42-b304d71b167f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 00e26b31-3179-4a8f-8827-69d70316aeb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 f97eb7bf-839f-4e72-bc74-984371eec402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 e6ce7a2c-9e65-4daf-bbf6-02517ecd0444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 b354dc9f-2eba-43e2-a590-e5f0b85e36af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 c2f182cd-d2f3-4904-a5a5-c74f0f214148)");

unit.assert_eq16(16'h8AE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #426 bcc214d5-395a-4f76-87d8-d1c545cee4cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0356;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h087A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'h087C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #427 836a0fa7-f737-4a62-80b1-947ae6c4559b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 fd1af28c-89c8-4486-bb9d-b4b4ae5ac506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 9c84a613-e5ed-4e7a-b49f-56256c607ef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 5b105bb2-9df9-43f6-bb12-dd6a936f63a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 8929e3f7-5292-4bb5-a896-59401c525c64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 b7f6f756-5d4c-4036-9044-c169bd237406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 fed5a793-e206-4032-9d59-e25788fc4284)");

unit.assert_eq16(16'hE189, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #427 c95966fb-83d3-4c83-9413-1f9029d5793e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0358;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'h0E63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #428 5e64382c-f6a2-48cf-a0ba-6263ecd4b904)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 9879563e-63c6-43af-8da9-30ef052f27ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 c71c8850-ef92-48ea-8739-9f499dc316dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 e63e1931-4e6f-44f2-a84c-27f3ea5b0463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 891f5c28-d38d-46ee-af3b-602782f3a6bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 2b2e1971-af46-487c-a5ea-42d9084ae1df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 aea82154-4db3-4174-92ea-d10f82c336a7)");

unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #428 cf61aa4b-7502-47da-bb6f-31fef7bd3a38)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'h00B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #429 9299939a-654d-4a8a-a8fe-909b36db76fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 7dfc3f4a-c93f-4076-9fda-e0d2e9042576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 fe4c1a31-a024-4c18-8ffd-bfdb3c23913f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 4bff66ee-e4c8-4bad-ba47-044d5dd413c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 819d18dd-ed58-475d-abd3-0c355c24f294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 e7847439-fee2-408d-a309-b1f30a46b8d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 aadbb7cc-16f8-45f1-8d1e-75f9c343191b)");

unit.assert_eq16(16'hA130, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #429 cfd7ebf1-baaf-4c1a-871c-62c33ab1efb9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'h0CC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #430 61fa71c7-88c1-4190-a5f9-2a32904db1a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 5011577c-9637-4abe-88d5-94efcd754e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 57e0833b-da5c-455e-8f21-243cb81b1e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 d912a19f-8a26-4c4b-b71b-a9340454d3e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 cae65799-c989-49b9-bebb-d41c749283e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 2847f6e5-c00c-4793-bd44-bbd42d376b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 34ffaba7-52d6-4cae-abf9-f280fe13db4b)");

unit.assert_eq16(16'h096E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #430 0ea4d023-fcbc-41f2-8a41-965d14e11c0d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h035E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'h0A80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #431 144a3218-299a-4aac-b9b2-ed36e2713815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 8291534d-2b08-479c-abc1-d4aa521fd9d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 3f550308-4ede-47d2-9d7a-4b6f14420b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 1d910326-b462-4e78-a731-c46bdcc60e07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 72d26c0d-5b1e-47c7-b5b1-51f9dcd441bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 7ecd242f-4438-462b-932d-1edf75badbd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 6e0e6893-e256-42d6-bce5-d9de11f766d0)");

unit.assert_eq16(16'hC6E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #431 aa58bd7d-f062-4d6b-a7aa-14b642061d92)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0360;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #432 38cccd53-5c56-4704-b214-ba168085a469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 5ce5a0fb-e0bd-4d74-8f96-72e8f0a1565c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 4291c9ec-5ad1-4d52-b9aa-4ea90955e78a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 b054dc26-9c9e-4b34-a9a5-cb4fd5f44c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 fe8f137d-cd97-4239-a511-80f4e152725a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 2353cb75-645d-4f6c-9d1d-8cdfdfef2707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 c52a4f61-f3c9-48c2-bd3a-766c5a72de35)");

unit.assert_eq16(16'h1E74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #432 872c72ec-2d3b-4eae-b151-28a06c827e4b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0362;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'h0D9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #433 c08dac7d-d408-4774-bbdb-a3fc7dccfce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 f8c2c261-7ba5-405d-9f1b-512ce1c2f6da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 4b3d3e74-48d4-4ccf-88f7-47b5db6956a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 b6e4726b-e047-43b3-be30-676d036bfd36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 5e1cdb73-86e0-4e5e-84fc-613eaaa568b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 ee0f6427-5325-4b5f-9dda-c3c69fb20404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 e822824d-5723-46f5-b24a-afc0c71e664d)");

unit.assert_eq16(16'h7B52, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #433 732dc758-06ad-4510-883f-a4d6a8003e3d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0364;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'h0D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #434 ae36285d-6b58-483b-a0a0-94515294ac79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 f2eae9bb-407a-4edc-80d7-fdbbf0f55efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 2588c1d3-cc5f-4f2c-8af0-d871256e518c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 21f63fb3-f54d-4e17-9ae0-b6fd609886ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 94cbcb79-a789-455d-ac9e-1b1a6c13920c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 ab4ad84b-026a-4d7c-b893-19295b3c0730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 400f88e9-5034-416a-8777-ac8c56eafa8b)");

unit.assert_eq16(16'h51B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #434 c68d7aad-b18c-465a-b161-dd505c104fef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0366;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0774;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'h0776, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #435 47043e8e-bb8b-400f-8035-479e1c0c5dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 d2753c12-2c05-4482-88fb-d0bb19a9eb0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 13e2b831-0f97-4df2-8fcf-38398cdb0794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 f8999462-85b9-4e18-a568-2af8182818e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 ef7a285c-37dd-46a2-90a2-87dac25184a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 5f5314a1-1ed1-4603-865f-1287660fa241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 af4a2a34-3849-4000-b3d9-ee33242d09dd)");

unit.assert_eq16(16'hB947, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #435 6a4ca14c-3348-49c2-bcd8-6f7a39885ae5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0368;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'h0D76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #436 c6aa5b1d-ce02-4866-b71f-f2529c31fbdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 91693eb8-a196-4616-93a9-ac9329f25bec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 fa543496-a22b-4362-87e6-aab04fdbd858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 982f71c7-64ee-42c1-9e22-2207bef9c047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 a7295120-4636-41d2-80ae-e191654638b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 566967bd-3b3b-4ff2-806c-8d6c23fbbb69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 9c1e990c-3ba9-484b-b7b4-53330127fff5)");

unit.assert_eq16(16'hB1E0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #436 5fec9f65-ebaf-4824-a8d4-93506aa22829)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'h0B44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #437 2e0a9950-a233-41de-abec-55f9d683cc4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 9e08e024-5f18-4352-a0c0-ff17303de8dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 8d7970b6-e461-4ce1-8c48-6ab1719c2d4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 799b66df-4f90-470e-a6af-3c674b22bbdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 a0c9d8a0-895d-4060-9759-6dd584a35172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 f2c8eb55-d0ba-403e-82ef-3ae956c801b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 c3861a24-4297-49b9-bfbe-7aa7e338ca10)");

unit.assert_eq16(16'h1D38, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #437 cb55a23e-9f28-4712-9711-b9a8df0c71ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0171;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'h0173, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #438 28ebbe53-f635-4dbf-a874-01b1af7e8511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 89a004fe-24d5-4ab2-bf1d-df48548387f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 e05ed80b-6396-48f2-99cc-7064fbda8fed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 9f7020b2-10e4-4a53-b8db-a38cd71f096c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 00ef0e07-5c5b-4e79-ad28-a48dd704927a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 689abaa7-291d-4b75-a5ac-cfdfede241f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 f52e8679-cf00-4302-a895-9ab531e08cfc)");

unit.assert_eq16(16'hA8FD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #438 85ec9890-6a79-441e-936e-bd234903ca6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h036E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'h0B6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #439 717d78cf-cc9a-4205-8a2a-f3527e2b5f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 fcbe6d61-715d-4e3d-be03-3bcab10e8d1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 366db4e4-3d42-4d7b-ba22-164c91f339aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 ad735000-929f-4faf-bacb-bc9f2df01ebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 6f55d653-4b02-4bee-a3d3-61c6558bfedb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 925e5f4a-3292-419a-ad17-f89e647103a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 4c340d99-a4e5-47d0-9e42-9383b26a6986)");

unit.assert_eq16(16'h7837, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #439 1f297e71-441c-4166-ad36-71bbd67752d4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0370;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0053;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'h0055, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #440 05f8a29f-6d6f-4cd1-87d6-4a3e8921e3be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 626973c7-1c4a-42d9-8cef-298e7b115d87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 4a6f3ff4-1f0b-437f-aba1-498900e32ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 adaf76aa-35e5-47e2-b884-f43210c343b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 88775c33-afbb-4426-9404-b7ed9781f33a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 9f5a9c9d-c38d-44a4-a846-c6c2ed7ec1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 085ea240-757d-4499-87e8-df821547db2d)");

unit.assert_eq16(16'h4125, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #440 0d6f814b-91f0-4469-8411-ad90f3473cc2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0372;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'h0B98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #441 b6868d1c-00bf-4231-a109-be376da7ffb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 c525498f-fb75-4ae0-a8ee-e3e5a1368046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 1aa2149a-c316-4f22-9f0a-26210a538fd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 36b1f5c6-89c4-4e0d-9420-d88d3e250444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 9bee4b7e-e7a9-4165-b3dc-118f9c73f37c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 e1597386-8dfe-4f36-a98c-c6c009ab2e35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 8f4870a9-7a4f-4c90-9772-335cebb6aae0)");

unit.assert_eq16(16'h4360, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #441 7881146f-1c98-45e9-ad67-3452d07a6350)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0374;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0296;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'h0298, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #442 dfd26051-31e7-4b31-9b1c-61f91e5b603e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 b855eba2-9815-4054-ab9e-4d5d66d2f113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 6e3ac441-50ee-4804-b1b8-c24527388b10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 97bc1d3b-1699-41a3-b296-5952935d119a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 f32ed92e-857a-4afc-a426-1c2c12778560)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 2cc37f1e-da77-4ae1-aa7f-18575e6da804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 dc478979-e8f3-43ed-8800-639fb2313c7c)");

unit.assert_eq16(16'h5BA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #442 dd094b12-002b-40a8-a558-bf551a557f87)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0376;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'h0B09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #443 f0588ec0-f11b-4314-85cf-79c3162784be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 383f5705-58df-4aa4-8c93-b5ca2619a007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 afaf5404-2d8a-4696-a290-a8b8ae222c95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 066b79e5-27ba-403b-af85-512eae6f7e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 3354b5b4-3ceb-4a88-b991-cc0ead274359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 9b8cf0de-183b-4ea1-bde8-22591676dd9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 0b706da9-b939-40df-add9-9807731ea674)");

unit.assert_eq16(16'h3A29, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #443 060b5776-2d9b-46cc-b4cc-59c93b70a5bc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0378;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'h0FA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #444 cb236673-fcdf-42fd-9d71-2c73c2304919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 bace3d56-5efa-461e-8682-0ce7ffcde37b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 34b4f079-6176-4912-a5fa-7657cebebd76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 ebf7132d-a89b-4622-b5cf-b3f9cbb48137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 b0b6e60f-2388-48d4-bb82-171b70954f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 e2100902-ee89-42d2-9c95-9122409c96a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 0e9148c2-b8a3-4cf9-aa48-685c0b7935a7)");

unit.assert_eq16(16'h88E5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #444 890f26e3-f2de-46b6-b92c-8e03c6d0c146)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'h00C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #445 44615bf0-e1ef-4874-b759-c32bdf81320b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 a159fcfa-8897-4a37-95f4-b54b0da71185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 6947d626-d1f8-43e3-8bdb-740b3de54544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 2361da0d-ac6b-4cc1-a9a4-d42b0de6c6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 9f998451-9269-4471-914b-365a2fe55300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 f5edec40-ad8c-422f-953b-e1ce87d7bba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 aff06b77-5ffc-4737-b001-f87925acec21)");

unit.assert_eq16(16'h315F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #445 0718adaa-103f-444a-973e-f1dfe24eac2e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'h06D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #446 c7066006-f5ce-4d07-a850-ac8d4764ed8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 f0bfc987-e82f-4ac6-9839-46b302bbe9cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 3ab1fe57-b652-4a7a-bcfd-764bf67f72c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 55f682cf-1653-4d22-9be4-ddb991f1bcc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 5223e047-3bb9-4cd2-a393-e18773f592d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 ec2634c6-5caa-4c85-8956-78b5e0af5ffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 a5c2b769-967a-4747-8f5d-8862e4a7156f)");

unit.assert_eq16(16'h50C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #446 f59269f6-c2e3-467f-8a27-e5bfde8b0ae1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h037E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h0411, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #447 e49e800f-d764-4059-83d7-ad8f99d0b7d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 1014f10d-e09b-4ff1-9c14-e47aa15faa06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 965cf27e-8313-4acc-b350-8e295b038852)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 77c632f8-baf3-4118-a641-fc43c6cdf184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 8bcbcd10-f1ed-4162-892b-b93bd0e7acda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 4c599a85-abdd-4ed7-90ac-5b884441da00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 e7d2ee7c-7b1d-4443-b412-576556627a5a)");

unit.assert_eq16(16'h87AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #447 74650bb0-8004-4ee0-abe2-89803f8cf106)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0380;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'h0F63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #448 6986b187-0847-4db4-a63a-b4a5844a87ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 e5804e87-ceec-4414-81cc-e9874e2703e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 359987f2-120c-4cf4-9f9e-31bbd53ef14c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 be5576de-423d-4af9-8143-88481a11262b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 37e7405b-0598-4e13-ab08-628a2467532d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 a931774d-5f68-4eb3-8262-4da21dc87c2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 17831a26-83a6-4997-8dd1-9474f816fb87)");

unit.assert_eq16(16'hAF74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #448 96aa90be-3cf6-4c10-b99e-3f74376785ee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0382;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0612;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h0614, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #449 163e69c2-689a-455f-9f7f-19c39bce5cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 f0dd1799-d1ba-477d-ba69-75125651b878)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 b1be3072-db8c-4906-8f78-31b4495b30aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 bba9a390-5251-4bca-840c-f8dff311bf7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 7f677f94-0511-4892-9ec1-3bc0bf211b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 efe11a02-20d9-4261-8148-5b853210b072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 97da43a5-6338-4d00-8d2e-d87ad7b42f6c)");

unit.assert_eq16(16'h30A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #449 b16194fc-633f-48b0-ac38-4a78bc8c2f73)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0384;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h0A7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #450 976144ed-e930-4598-a344-93d43720436a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 1ab32d44-407a-45f8-ae28-93c725d8df29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 c494a2d2-d7be-40e1-8fa2-57ce1cc5e692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 9c2261b0-b8d1-4f2b-b5c4-bcfc74a4251f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 e104de06-459c-4747-a0d0-52f9ddfe5a4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 e1ebc93f-9e84-4e49-b51b-68705085f7b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 9e742a09-783d-483e-92cb-0073d6ac5b58)");

unit.assert_eq16(16'hC2A4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #450 533e9952-bac6-483d-bdb7-9e94189113e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0386;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0598;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h059A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #451 c9f0281f-085a-419b-a5ef-e12481709327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 ee6b1ac7-5239-48b5-b1ab-e74aa3190924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 45ac826c-2df6-4cf7-9fe4-6e01603d586e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 ef072168-da40-4937-b939-1bf5a8c1664c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 9693f01e-308d-4259-b301-03f3a2c2c3c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 bd547c5b-44e0-483e-9e8c-e918359b9242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 5ae83103-37b8-4699-a37a-dac4be63efdd)");

unit.assert_eq16(16'hBBC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #451 b10efc2f-b8dc-4914-9736-7125328d06f3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0388;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h012B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'h012D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #452 fcd9291f-0254-4a40-9134-2160147d9d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 a68032c2-bdf0-480d-9ce5-a2faae4ac7be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 6da1fc82-4f04-4774-a045-d8f1234aa088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 5fc3dcff-1549-4f96-a524-657a7e4dd2be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 01fa0bc9-6080-474b-8a1d-007580677c0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 490fb08a-5518-4417-b362-13d45e6ec95a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 4c0162d6-8445-4dce-bba2-f22bed9e57d2)");

unit.assert_eq16(16'hFC8D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #452 fa9050cf-339d-41f3-82da-625ce5a02f3e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h0F03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #453 477e847f-9528-4d4f-8082-ea4798715c84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 1030d7db-101c-40bc-8f7d-f310c63df019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 d8f46f13-ec2f-4480-b743-f97eba375bb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 e2e5123f-520e-49fb-ab38-8f46d756e2de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 3837a1da-1799-4984-b515-5a37c8f02d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 6e052224-02fd-4f93-9a95-35c6eb5cee96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 dfe42353-f28a-49f5-83e4-f9a43c000be8)");

unit.assert_eq16(16'h97B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #453 af04e6ec-9796-4a92-a895-00471defa4e3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h090D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'h090F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #454 0000cb26-0c4b-4a90-931c-a96971c8698a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 c09af66f-1797-4d66-aa52-eaee958df7d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 d4dd3738-72cd-407e-867b-13227d22b93f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 8ac02437-e6d4-4b2a-8dd0-16319f191a8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 883d1b3e-b01e-411e-b3c5-3a783620f9b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 e3efbbd0-0c94-4dc6-bd56-b3f30a995eba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 da79b923-53c0-4b70-a304-48b9fa5fe30f)");

unit.assert_eq16(16'h993F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #454 eeef07ae-9bce-4e9e-95c7-199ea6dece21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h038E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'h01ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #455 6d1e359a-7203-4a1d-9022-31f333bf1058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 68111b88-c3d4-484b-95cd-848ec2221720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 092a5eb0-9601-455c-9b33-efa6f3da05b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 5546f795-5e7a-4ce0-8aed-f4aaa3558f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 e16b56a3-990f-4709-9310-03680d58de44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 127fc1ad-e657-47b6-b47b-dc7b8872e1f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 9086ecbd-c290-4771-a6a5-281ba4762718)");

unit.assert_eq16(16'h9BCF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #455 a19ba1e0-b040-4db9-9de5-4aa4f985e6c2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0390;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'h03C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #456 0fab28fb-ec77-4db9-9d08-f1a44b2695d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 016d2ae4-e289-4ff9-a615-3d090ae2934e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 8ac7ef7f-6f61-48a8-a554-f96fc943266f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 9e02c9db-9067-4537-a451-1c38dfbcafa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 f78d686b-a7a6-4a61-9de0-7ea3aa9a5466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 4a8103da-4453-4f6a-b01a-d4671bf085d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 fe870079-2187-4282-8976-acea6c6baa59)");

unit.assert_eq16(16'h14D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #456 f10f2ad0-4536-4718-a327-0e566238d931)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0392;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0424;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h0426, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #457 8681bfa3-96ea-48d9-a1cc-45c656a6ead8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 67625a01-2817-43f7-a356-c34bd1f67326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 695ef4c8-89d6-487c-98cb-790be9365aa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 e2408c3f-342c-4436-917b-04c54af2ad84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 bfc8a25b-91c8-4f1f-a63e-7839d53ba7e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 bceb1ca8-6fa2-48b4-b336-8fa3232030fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 4121d69e-7f97-41a1-8647-67e8c700240a)");

unit.assert_eq16(16'h4EF2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #457 20f7d4b5-d42a-4862-b247-7e2b835025fe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0394;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h0930, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #458 7ab2ec1d-1a25-42c4-939a-20da58379935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 285d808c-9e92-403f-a4f7-f5fb9c5f93d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 c5cc4dd0-5d54-42b4-97c4-98d510a75c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 f3e2bb23-a9a1-4b12-b893-f43694e2a7e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 67440410-549d-4619-b8b3-7ec4b22ccce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 24073dcc-1358-4d91-9984-69b37b14c2c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 e4646d55-8185-43e5-a8a4-43e0d5455e59)");

unit.assert_eq16(16'hF2F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #458 d0207367-a90f-4fe7-b954-cfc38d94f27e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0396;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'h0F54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #459 e042f7c2-6a07-482c-8167-72c363d5e507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 7a5afaca-ada0-483e-b1a4-a932fc64d493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 36c5315e-fa51-4ee6-a8e5-a7bc2dabd6e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 a6d82d10-af15-46cc-b159-d2da42475c1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 3e279f4f-d782-4f4f-9404-77d727b676ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 c1ada87c-caba-4b8a-9b88-37660a890fc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 e3e28f1b-2aaf-489a-8ab8-e11e6447ee5b)");

unit.assert_eq16(16'h8B42, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #459 a38206c5-ece7-4a03-998c-0020af134deb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0398;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'h01F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #460 5836f612-4720-4c4a-be7e-a344d1142134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 c8818229-ed33-4adb-9434-79e2c1d9b832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 d6d7031e-e2ee-427c-be11-c6ada1e0a8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 e0d609c3-221a-4a59-bfaf-6ab2ece13db7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 3fbb3d3d-b94e-4b90-8b70-53aea09da7c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 2a854f17-8398-479d-80a1-222cf303a88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 56dcc942-9d02-45ce-a422-773e90e3e766)");

unit.assert_eq16(16'h61A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #460 ad8d5550-a167-4603-8834-f75329073954)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h0F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #461 2d3c29ed-d881-45bd-b474-7eb9b4942354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 073899e6-56d9-4991-8fec-4085b5a8c123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 bbe3a818-9cd5-4512-a503-358e00899148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 6a3fcbe4-0cb6-4acc-9b4f-7ead8b3308f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 5e02e546-9587-4708-b392-335c432b15a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 ae4e2620-6e79-49ce-be29-8667ccd25be0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 71a5f17d-5ebf-462c-b262-7854bc39da78)");

unit.assert_eq16(16'h5B22, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #461 462e5608-532f-4654-9130-333247eaecc4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h05D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #462 9c311794-141c-48d6-ae93-3225ab0f50c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 b4a47381-63ce-4f4d-abf1-56b9f5e325e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 a2efe7e4-53f9-4038-9a63-0dd989bbbf00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 131be7ab-cf4d-4cab-99f0-64b3b66a2718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 72f890cd-0ba1-484d-b987-d49cab63dc8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 da5c6763-51ca-4cc9-806a-be6565835ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 a5daceb6-5796-4a47-bd97-d3696bbfe96b)");

unit.assert_eq16(16'h48E7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #462 8407a444-f516-4363-a741-eccacbf7547a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h039E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'h01D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #463 ffa9cc32-2587-4d23-9352-acb21a648747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 c4147299-825d-4d37-b958-026680e8694b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 d58fb6d8-95cf-4484-b7e5-138dff84cd1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 5dd67582-3e82-4164-a3eb-3983f9b9d974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 e3ccb376-e5ae-4c7e-a329-6fe4d573e36b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 8afdefc8-827e-459f-ab34-85dea998f686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 1af6bea5-ccef-4ea5-bdec-18200d9caae1)");

unit.assert_eq16(16'h66E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #463 f21c1001-8912-43cb-90d3-05e4db93c94a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0268;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'h026A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #464 eceffcce-a00e-472d-bafd-5db6c0ebfbfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 2500066e-0085-42fd-b2ca-766ba04d9b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 31f9d664-0f2f-4b05-97bc-0b745b3f4a4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 2045d4da-c567-4967-98df-9bd4e1ab3b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 04ea6dc7-6502-4c34-b58c-bd0cd32f7b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 807c5625-58c0-4a3a-bb35-adb498df10c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 93eb2dd4-b7f1-443b-a6db-dc3eee35fb05)");

unit.assert_eq16(16'hBDF9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #464 c478c474-31aa-4c5b-a5aa-8b22aebbeff4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0017;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h0019, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #465 e8f6233c-ad4c-44f6-9d12-c0bf038583f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 de0b841b-d9f1-4835-b9f9-9557387ae0bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 9287c0c1-417f-4cf6-8053-223bb68b59c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 7cc220a6-2fef-42db-a215-25537e6a1dcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 3085cbbd-ebc3-43f5-ad1c-dd2a56218da6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 5fe228eb-2638-4b61-aeef-022611207e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 024ba781-a7f2-4ca6-b306-ef65fd1fdbc6)");

unit.assert_eq16(16'h9509, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #465 1c4d630e-b101-47c3-ad34-c54b84d1a0e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h0B90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #466 72cc5613-1da7-41d3-b7b9-db29201d01d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 26ca16f2-15f1-4cbe-96be-b3bc316a295e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 66cfbbed-8ee7-4d97-9540-2ae516764f6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 5102426c-063e-4400-9d7e-011025d53d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 8c63eaea-f04a-48d4-9ab6-f9af1b3ccb9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 158d469c-4aa9-4310-a43a-8bf2f40a30a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 26224a94-06eb-4ba4-95ef-7d0d59d7131b)");

unit.assert_eq16(16'h3E37, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #466 8e3c62f2-0401-4560-8a76-3b277a4be350)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'h08F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #467 f7c0696d-de38-4cf3-8e31-7bf338714531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 3f82999a-b297-4950-b979-8f8674e61fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 98a83152-9134-474c-823c-d6c47d7000a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 468414c3-aec1-45f2-a18d-7325b7070378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 da6d188b-be0b-4b34-a679-2abd052183e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 84850cfe-7dda-4f88-9d94-f18a8dd37613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 acc5db27-c3b2-408d-ad48-eaa7f738c69b)");

unit.assert_eq16(16'hC4A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #467 7dc56815-6073-4b95-b3d4-9a35591aa12b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h0C1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #468 8aeb248a-c0e0-482a-a5f3-38710da4e136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 4d8b595a-6f99-4519-8675-7eb53ff7bca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 1f44b1d1-86cd-49b6-9c8b-2daf35c78b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 8e6637b8-0f16-4126-aa54-e16536680353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 51a68f33-4864-4feb-bc48-1fbdc53a3bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 740460c3-7760-491d-a061-cf824aca08e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 7ceb7fc5-95a8-4587-bce8-0dddbdf5dc3e)");

unit.assert_eq16(16'h74BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #468 5aae3b47-8e6f-4ddb-a2fa-7caab35203f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h0C7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #469 bc882821-b1e0-4cd6-8632-7533461e6359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 5f50bc67-78eb-4a9b-a73f-c30b55b41879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 edaefb7a-8b9b-4721-822f-c9b860fe6f2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 67225270-34c2-4762-8f7e-132b442408c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 4848104f-7548-4e64-9386-27af7eec2e21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 e4294ce7-a3cd-42be-b817-d4486d940278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 8e718014-6fd8-4e54-afbd-a2c91c423314)");

unit.assert_eq16(16'h6AD4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #469 985c8641-4569-4766-835f-54b65e588270)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'h0A1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #470 21dde2fa-4945-45a2-a738-ea6fd1aa1372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 02f5c9c8-32c6-488f-ba50-4be96295cc3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 3021d62b-e8ec-46c5-b3f5-a5509b077c41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 13b66e8c-533d-4ce9-8027-7b67938e7da1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 d009436d-a501-40b5-8965-1edae12c9690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 1984806e-5157-4282-988e-54c2799b3e60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 b4f6d272-15b4-4138-bb9c-930d10f89107)");

unit.assert_eq16(16'hA5E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #470 91ac6045-315b-497b-8ce3-c59c4e79c44d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h033F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'h0341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #471 78832818-4f63-4cee-9849-667f82378a28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 94bc56bf-1719-442f-9a47-ec43fb21c106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 ca50ae22-cebe-46e6-865b-6887769479b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 cfb8f22c-f581-492b-9cad-0e77f891fb58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 2b565634-f66a-478f-bafc-00a217083914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 de53bfa1-338f-4744-8dcd-75031e8521ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 e585b003-5184-4a3c-859c-500decaf30f0)");

unit.assert_eq16(16'h24A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #471 bfc728ff-b41d-4e6e-b710-53b99b629b1d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'h0B56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #472 d0d1b662-da39-48f7-841d-0c9c879af425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 9eb1c0e5-8f77-4bd8-8317-09afd917f515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 a040dea6-9ec4-4ebd-8802-3d5931042665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 fb032968-46f5-4d80-8f96-0d9edfff5b62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 f500b4b0-861c-4947-97dc-693a1465e94f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 720df4f4-2256-4a35-8120-1d4c6815ccea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 206dbb59-ca92-40f7-bcf7-e21d20936875)");

unit.assert_eq16(16'hC35A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #472 11b82411-4379-44cc-a4d8-39ff6d1d298e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h0AFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #473 5dabe9ea-4b71-4721-9206-1616e0267226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 0979330a-a069-4ba3-af00-50352d4e67c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 9485267f-0335-4ebc-8d00-80a19c1731de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 709be968-4893-4189-ab63-014cba556018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 b1de1e84-0082-418f-a8a8-63fa07174de7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 8ab3a892-ef4b-44e3-8afb-9f5aaa0fe67b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 b68c9173-3037-49c8-9ac5-2221722a1860)");

unit.assert_eq16(16'hD649, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #473 17efd139-1f56-438a-8a1f-f799f6028960)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h06C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #474 468f8cd9-cd5c-454e-9a30-df7811e5c456)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 92a577de-f03e-42ea-be54-56677245ad28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 873dc586-780b-4862-9a77-44c6b79e1dc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 67c062a8-60e2-49fa-8ebc-e0e311b281f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 cf28c7ac-9b53-4355-a5f8-1731db6453fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 17d03fd7-ee85-4f5a-9040-efd74db63297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 b2795094-a9f6-4fc9-b085-d2967802a7de)");

unit.assert_eq16(16'hDCEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #474 09ac5b8b-023e-4772-81bf-360fbf7b47b6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h06E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #475 47bc0ddc-ef55-49e1-80cf-86eb1e990873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 fdcea077-1094-4482-a3cf-bdf675527b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 e1fbcb7e-e2d1-4170-95da-dd6403074167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 3fbdd9ca-9636-4730-8332-63c448f74403)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 b17beadf-f5a3-4dd6-a2d3-5e3111af496f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 ebcd0dcb-6daf-48fc-8950-d6aaff47eead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 3872d65e-318f-435b-accb-bf495159a062)");

unit.assert_eq16(16'hA2FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #475 5f513117-f8c2-42fe-b8fd-f641128b1385)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h083A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h083C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #476 7046f04a-0c28-4466-bcfc-f31a8d3d8f3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 26e5dbe5-ce65-4087-af0b-f1439947656d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 514b79f0-ac7f-4f57-81b9-6319f39e1b98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 4327b126-9249-4eba-9d34-496d78b510b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 a1606b47-0249-47b4-8ec0-55c89f2886e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 a9049d3f-59e8-4db2-8798-50d891dc8e32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 e09900a8-8044-4786-a71c-447b9bb35fee)");

unit.assert_eq16(16'hB967, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #476 ca8f8294-4dfe-4016-a9a0-508a2e9fa5ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h0CE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #477 f169ad65-c6a6-407d-a022-5400b57c5687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 561c492f-7257-4cb2-b43c-dbb7e4c6ae13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 618bb9d5-0d25-4357-8695-c8a7a02dfa9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 47d735b1-0fd4-4df8-a32c-a6ccf9a85f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 f697ab31-5db2-456e-8996-ef0fc140952a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 7962a5e0-b73a-4570-a73e-0b281d73006b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 29e7cd21-8c7b-42b6-acad-a884f99a4723)");

unit.assert_eq16(16'h21A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #477 9d60593b-d37c-4bfd-b8d7-f1492bdf2433)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'h07C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #478 a6df291e-e27a-4429-810b-1dc37d12724b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 5c918dfb-3296-422a-ba55-dab894e10d5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 687d30e7-1d0a-431d-b69f-fd0a61816b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 b8d7179d-d05d-455d-9285-32e9db47b997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 9445a7af-67ff-4989-a91a-ff0050e44260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 6c7759d4-33b6-4989-88d7-20c7bd3723fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 a1ae2c9f-d88a-4ad1-8686-1c02188b738c)");

unit.assert_eq16(16'h9602, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #478 307e95d0-aab0-41a3-b8c4-2bb817373573)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'h09E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #479 d630c3a3-c1d4-49a7-8b66-1ba8b9f6b7c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 09f92fb7-6d5e-4a4a-a7e9-e4fa03c723de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 1f6cf33a-0bd7-4112-8c0b-128c02008821)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 08171d8f-fc6d-49c0-b034-45e96111e623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 57bdf150-9ec1-40ac-84ba-b38d5d540e5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 d850c150-37e7-4052-b470-67b709366577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 d7acc3e6-d1da-444a-b215-0f6af474b7a5)");

unit.assert_eq16(16'hF0C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #479 5db1fd35-3bc9-41da-84b5-5c46239a66a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0034;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'h0036, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #480 e00af3e1-338f-4334-a006-a7a284e682c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 8aaea3fc-320f-430c-8e06-140d30bc571e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 6231423d-a213-40ac-865d-b301b8fdadfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 1f09b18c-11cb-49d8-bfac-5bcb2a549d34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 1f20e582-ac6c-4513-8617-ffcea4afc212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 249c30e0-9a33-4c24-97de-7880c8cd68c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 574029e0-119f-42a9-a220-9b991d1b2dda)");

unit.assert_eq16(16'h5A32, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #480 4aec7ce2-1a0e-421d-a9de-086480d1c390)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'h0D9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #481 5b10a359-c123-431c-8e58-bb8545f3d7ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 b3f4221c-9b34-45fd-8bb1-eba28a0abfe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 6075d93d-5d27-49c5-a299-23980a3ed7f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 febc83cf-720b-4c56-9f5a-d551ef36dcb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 ec661a60-2329-4659-93f5-5617588ea59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 718e505a-fa48-4723-9c42-4294845e1f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 58c094ca-052b-4fce-8dd9-f29f4ebd1f74)");

unit.assert_eq16(16'h7B52, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #481 1ab1c020-a39a-401c-a948-67c34b02915e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h0B58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #482 4f32cb65-f3cd-4142-995b-aa45a1af7774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 24ca7dac-cbfc-4740-ad5f-9a65b95922ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 975c24f9-26e6-4469-885f-cb48b307cbe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 71d5d411-461d-46a6-856e-e260112d5781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 d46e050f-aae2-4a97-a2b8-38b24c1da99e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 7edbc2cd-d593-4a18-8321-1290fafa74c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 eec2b647-6165-4bd1-8ad6-89c9155a73cf)");

unit.assert_eq16(16'h36CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #482 3370738b-16fd-4185-99a7-e9f9972decab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'h0BDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #483 b216131b-d2be-4fbf-8ce8-7a4dbe37d2fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 a135149a-8663-4d9f-b442-12cabaea7202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 3ff1416e-d0d0-4eb3-86a2-957a2b15edaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 7e831df7-c26a-4255-9ca7-ef8ba2ca5023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 5db138dc-9d10-41d0-8a22-87182e77988f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 cacaa6d6-54c7-4bdf-b67e-bc5f6b1bb160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 189d1135-1034-4698-ae86-d095b2080848)");

unit.assert_eq16(16'h5D3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #483 dabc2460-3cb6-4a20-9a2e-b3d7d9ba3da7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'h0B2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #484 c41bf2f6-d33b-4257-b27a-8b9cdf2e0029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 22ee9c38-84b8-4ed1-979a-b2ae6a8684e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 25f29edc-e746-440d-a721-4635a20db136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 2f460f0b-3bfc-4d65-a594-f06abdf83d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 8a9d35ca-1dd3-4300-a07c-2e8c3bb07809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 ca01bbde-3367-4e18-8693-d4bab7643bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 871dd7e7-f5a3-46e2-9be2-71e3376a390e)");

unit.assert_eq16(16'h901C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #484 64b01cc5-dcfc-4ca1-8db1-649b57223c90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h03AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #485 1957631c-dc29-4358-b95d-b243d0d9ca0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 e0ab8d5e-82fb-48d4-98ba-c441121edb48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 474855d5-6093-4093-818f-6baa6fb0db4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 1f2f6d20-ad70-4253-b6a6-5f56e4d96b5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 b5450ca4-9d3f-4c64-a9eb-3c64b1018381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 2f193c21-b853-463d-90c0-c62f04a32661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 81c77a9d-3c2d-4a6c-8cef-475bf3413cfc)");

unit.assert_eq16(16'h7571, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #485 f929bf4a-9389-4991-a4ab-7ced4965fd18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'h00A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #486 c6de1a35-9a65-46fb-bbc3-ce16f9db4071)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 509bec0b-c0f3-4e41-8196-b027a4fb85a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 d63d855a-4745-45e3-ae2a-486f88da8978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 7f580498-5419-4fbb-a41b-a38abcb1a580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 46ba1b7a-922c-4f3f-9118-f266ddd5fa41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 8cab53df-623d-4e16-9d35-e97c742c0c9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 1ccbb886-20fd-4b45-aac4-e170a965db50)");

unit.assert_eq16(16'h009E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #486 cd1e9e4e-12f6-4b1c-a0a7-6b50bff3f01b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'h01FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #487 c23a49c3-e192-4a94-9b3b-cda1841a3463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 68fce723-62be-426c-8486-010e26b05bf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 f0dabc29-ae7b-4c39-b64e-e84458ed000a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 0baf3ce3-22e5-42d0-b756-072a8f194e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 c842ebb1-8303-4c8f-9611-aca87bfabbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 9fd1abe3-58fe-4e25-b35b-a499197e5342)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 5b3cae54-9770-48c8-9872-72f0ff7cf710)");

unit.assert_eq16(16'h9E32, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #487 2b92bdf5-7a38-4e44-aba5-e5bac9273fa7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h0B66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #488 2c053dc0-5a9b-437f-a422-ad86eff0a84a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 df0d2764-1ef1-4a29-bb0d-8420f26b0fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 5baa6b57-8901-483b-aebf-25890ddbdd05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 a72e6795-9222-4607-ba66-e03bde780bb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 0bad703f-3315-492e-bfa1-09213bef051b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 b77cb7cb-c937-4084-b514-6daaf6ad072e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 5b3eb6ab-8c22-4166-b4d2-c27ae449b0f6)");

unit.assert_eq16(16'h1E6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #488 dcb37de9-dcef-4586-a154-fbdc784bb97d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'h0AE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #489 492d4a29-273d-4c7c-8cc6-e3e698151087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 b4dbbb6b-002b-4a7a-89ee-c32311a56f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 5c7fa78c-ee93-439a-a25e-acfcd6185891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 9a2cbd79-9026-4a6b-9230-5e5f48bec909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 dd0b3614-d6c7-41f7-b988-7d13826291d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 650cca90-58ba-42de-bc58-d00e55ab5719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 d35e0c60-3e7c-4f8f-8750-6ae47f1bc2d6)");

unit.assert_eq16(16'h2C8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #489 abd8b655-71ea-4090-8841-4bacd1ac04bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0364;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'h0366, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #490 2b17d1b9-3207-4b32-b3d6-092144912fcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 aa3efcab-e95d-4280-b443-5aa884dcd3e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 7be0c1c3-f0fe-4ddc-9dca-0aff6c464106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 497e846c-f430-43d3-bfda-cacbe884efca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 8a31116b-9884-4010-8984-a42f66737795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 c9d8bd35-5121-480f-bb18-4e21d13d0d36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 cf01a1f0-f342-46d8-9491-d6a240ad3e3c)");

unit.assert_eq16(16'h1438, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #490 356764be-09f0-4e06-923b-f79fc2dabce4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0873;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'h0875, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #491 0efc2794-36db-4d55-b64b-b748162c1c58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 650384a8-8eec-4879-b97a-b743ca8b8ed3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 a8e9bb68-e3f2-4184-8d56-e019e0cebac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 0838a74c-ddb3-4456-a348-5ba8f3e684e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 759168b4-81da-412a-8d24-73cec8f76e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 5f6cf82c-63c2-42a2-8934-daccfe8b0970)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 aa1a869c-26a1-4955-ab7f-e33da853809c)");

unit.assert_eq16(16'h324B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #491 5cd402f6-0bc2-4ee8-b503-f79e0f959efe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'h04C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #492 e69a1378-6ec5-428a-af6f-829037ea9664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 7206b0c4-30b6-469e-ba82-40d4acd511da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 9525af36-825e-4f6b-81de-2e722e92b197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 ce50f2a3-0d51-4f2d-88fc-89e26a3f13f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 1e123e1e-71ca-4540-a2bc-d5331c98dfbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 038d255e-1fb9-405d-8891-401e860e073c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 abcf16cd-1da3-440e-96ff-006d4f953cc4)");

unit.assert_eq16(16'hBDCD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #492 97e3f022-c14f-486f-8930-3fffc1bf200a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0475;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'h0477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #493 a3aa922b-3b53-4b42-a144-87dfd48b4629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 8e0dc808-3776-45aa-b284-620a13e99cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 54fb27fa-ac6f-4634-b569-49ae297e2344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 9753e727-f2e9-448f-98c2-6a594536f080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 3c69155b-4860-418f-923a-ea457d8e4380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 8b55cc58-7300-44a0-a9f0-d861fbf4c2e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 12cd35ad-b8de-4839-bb41-04c3cd4bcebf)");

unit.assert_eq16(16'hC2BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #493 d1f2b24f-b343-4ab2-9c47-52f4e16ad82c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0364;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'h0366, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #494 abac1829-e907-4fb6-aa4e-ba20d2bfed0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 0c12d64c-578f-4981-8e89-5dadee4c2035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 11ec4e28-3676-4730-aa8d-d4f35d3db1d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 2e871ad6-e5c9-407b-9d22-23ef67b42d19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 4538ac0b-9fe8-44c8-82cb-50f0e451f3e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 660181a1-3909-4508-8c14-5b654a2ee596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 214a88f0-be1e-47b0-b003-c09b5afb0691)");

unit.assert_eq16(16'h1438, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #494 bf68d5a8-2658-4110-be59-ee53b02afc73)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'h08B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #495 313e249b-3be9-42f7-999a-19f1a8fd970e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 65efc406-a727-47cf-bd5b-36971e5b400e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 83db9647-aa1e-4518-a3af-aeb3f0245128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 1d45ae50-e25c-48a5-a69c-af336063e5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 3b8e4d4c-2871-4547-9c2f-99433f3a8d84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 6c8224c1-be62-4cbb-bfd8-61a90b0a0c31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 701c8973-9832-4430-bf0a-d4c378d13a72)");

unit.assert_eq16(16'h4366, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #495 d37a9f13-e25c-426a-9a75-5fbc066ae54a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'h07C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #496 16769a4d-9e86-49d0-8486-a6fb8c896d20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 fa2a2d61-4ced-4d24-8fb6-f0f16f7960e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 b21c3211-13b2-4835-baa2-fc7b1a7180c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 7b34d32c-9980-4ad5-b5be-a04acab9b809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 4a2adb0f-7a1e-4d9f-be7b-e2be6c42528d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 5d153026-ecbf-4e65-b5e8-59062fff9823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 127fcae4-f5e1-4029-8dfa-301dc8574351)");

unit.assert_eq16(16'h2001, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #496 46deedb8-9640-45f2-8a57-d8ae9c6275b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0962;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h0964, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #497 339b9740-efe6-463c-9c62-e31ffb7c9f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 7b00dbc1-7846-4a79-80d6-8b9950096b5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 5c3fc859-5cfb-45af-9094-9827a7deb820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 d842e329-3d9c-489d-a861-14d7ce0c3abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 b2c7fc93-e09e-437b-9dbe-6928b36b9c07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 d5b6e82e-e86d-4c4d-bf7c-cc04d97eb1a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 1bc70b40-6b7f-409f-9469-bc5a20b93af6)");

unit.assert_eq16(16'h048F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #497 a270d2bc-1af1-4f85-9071-412a17f31264)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h081E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'h0820, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #498 48262496-5a2c-41e4-b860-01eccd1b2003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 6f378375-4c0d-4b2f-b4d7-0eeb34c1e7d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 89313a47-fecc-463a-8582-9ccb2550ddd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 767d80e2-aa49-49ed-8829-4c58736b8afc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 b3e01eaa-bdf0-4e58-9b46-5d8cdbdbfe72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 02db3603-1b20-4af4-9f66-8fe27547528a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 65e0c31d-1924-426e-9fa7-88b29b0ce492)");

unit.assert_eq16(16'hF0C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #498 0cbc8529-61f6-4e86-86b2-d88d1c1b8f94)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0919;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h091B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #499 5dba4107-b63c-4c30-a9c9-fd7cb6b9b922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 0f047b8c-fb74-414a-8951-96bd0466e202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 e44d3187-388d-4038-ab0a-f275f8aa73f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 933d417a-5d92-4f8b-b854-528a5463d7a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 c37883fe-7dc7-49c0-a470-45ae05bbbab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 35fdc556-0602-4163-a8c0-dcaaf8f9edf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 8c9b963c-f576-4e00-9d5a-d1403b7f58be)");

unit.assert_eq16(16'h46C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #499 1040b4c0-6e8c-40bd-bcd8-a983fa9e08b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'h0EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #500 45a7e1ab-1acd-4628-8136-27f8b748e438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 eee634e0-fb74-4fb2-9306-2f798e8af45c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 324bb9aa-7fb4-4c18-a756-af9ec67d084e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 ad762d2a-0412-4e83-adb2-0d8c6ab2795c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 31e05d16-d63f-4589-9c4a-4c27f2d103cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 bfd0fc9d-2204-42fb-96a4-67e83bf65c8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 0f014b77-c32b-4af7-a436-da8a3e18345f)");

unit.assert_eq16(16'h12A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #500 98443c06-df35-4f22-918d-c32fe5a98793)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'h0F9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #501 286bf917-548c-456b-9d52-ca725e263ff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 63b48be8-10ce-41b1-89b8-542cc7d465ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 a9d75615-df48-4970-9580-19ff9255dd5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 2d677114-7ac4-4bf5-b084-0cd32e7d47d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 c34d387a-c090-4815-b332-7bebabfb5b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 5d40cefc-b62b-45b3-8c13-c8e24bd693bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 f4309fdd-e49b-4967-bccd-a469e4912fb1)");

unit.assert_eq16(16'h6EC5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #501 85ea885a-87a8-47c4-84a7-3afda4590f88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h0A78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #502 59524932-aa39-4326-8443-8cf4ddb3c986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 0380034e-b8a6-4f3d-b414-c23850313165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 f3fa7a80-9f9c-432e-9a98-529429df724c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 b6abd457-1787-4c95-923c-5b2cf4c27abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 4ecd1243-35e0-4f18-974b-f28ca0fdfdf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 1b345c38-4f92-43ab-bb4f-86589f64a05e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 6ebadf40-b350-4b6d-9347-8e6de646c75a)");

unit.assert_eq16(16'h2BB9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #502 1d664e0d-3e0c-4ca2-a738-81119a92ffec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h1000, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #503 43b11954-48b6-4edf-bb40-4f97d60a4986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 5f175b6e-b1bb-42fd-84c8-61586544d2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 81c6d21d-ee43-4145-b057-b83f58e8f94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 395c6627-50f2-4d36-a50c-debea676071f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 f2e1cf77-7ad0-4707-ab8b-56e31a9c7232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 9a623c8a-9398-4034-ad27-5b198281e7bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 7e4a4ba7-49df-44fe-bb88-32e371147391)");

unit.assert_eq16(16'h0244, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #503 518ce7ff-e2a5-430b-a65f-fc6540cf6fbe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'h07A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #504 8b925cd6-515e-470a-b0fc-3fdbe4ab1011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 774adf98-e58a-429f-8371-873b4251d1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 65f41fc7-67c6-45d5-bca5-3b1d733ee722)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 e45b9bea-9630-41ee-8814-547ce1d93027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 ee79bd51-0bad-4bd0-bc4d-51ed66e79b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 b7ee4d22-4fc1-41e7-bce5-c14c365945a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 df8a827a-48dd-4209-80c6-cd10290565ed)");

unit.assert_eq16(16'hBD79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #504 b1cef6e4-d3a1-4b0b-bba9-817bfe4d5443)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h0AA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #505 e990833f-5bdd-40c3-a832-256a23c9efe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 5a4987a6-8e73-4cdd-bf42-1bb9a088de50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 fde95d71-9fcf-4973-89b2-64dafd108975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 9ab8a6f3-165c-463d-a5b7-6888c5ff9a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 e0b6e06a-7497-488c-b679-0f5b3b1b281c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 ea08d79f-d0ef-463f-b3fd-412b687523ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 1c828906-b364-4d35-81d0-f76c6dde3437)");

unit.assert_eq16(16'h2387, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #505 d98bc0ce-ec4b-471d-a077-554408aff7c3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'h0EE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #506 157fb723-9b38-4ed3-bb28-c34f4eacc91f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 e98586d6-acc8-4847-a2c8-3f9624e7864e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 5941dff0-b6f9-4d0c-9162-b3a572b81321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 9cb8ffad-be66-4f71-bd0a-b85620323130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 95e5a7be-2aff-4f53-8103-b97293a9ed4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 4f276c76-bd80-49cb-becf-a368f97d49e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 880af764-eb2c-4f79-8898-1ce241ff8a16)");

unit.assert_eq16(16'h4ACD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #506 7e38ce70-b801-49d4-a9f7-65ac4fb40af9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0520;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h0522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #507 abc22e9e-2702-4717-b014-18657ba0f83c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 b30facd8-5b75-4c99-9bb9-23a15d1d9172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 3ede594c-77b7-4620-aa83-ef6b09877450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 527da550-fd62-41c1-b4e8-8be2ce32bf88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 5752bb66-744e-4761-b478-00b354c42d84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 9cd86231-54b2-43bd-85c1-eff0e7031ba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 a645f1e2-43ba-4cdd-affe-409dc6fba3f3)");

unit.assert_eq16(16'h988F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #507 931fa760-2cd3-48c9-a71e-a0b693b292aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h0C1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #508 94693720-370d-4401-92f1-355d5cb39e15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 7df80869-8899-4303-af53-cd8884f679b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 04119287-7bce-49d6-9a51-702983973701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 afb06554-9338-4e38-89dc-0d1b54ff1e5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 bed1c290-7e71-42a7-9bbd-d29d8043fa3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 018845d3-5194-494f-ad56-b640b02aae0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 7e641001-f867-4d93-a57e-ea67d45a47b5)");

unit.assert_eq16(16'hDFF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #508 74426fa3-a8ef-42b1-9ab5-bbe75c5f012b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'h0A17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #509 36de2735-a74e-4c35-9956-52ba639b0f1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 3e95c607-ab9d-46e5-9fec-613715e8bcc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 0126264c-6a12-4836-98a6-8df71b4cef03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 0b49aabc-82a3-466d-a639-5fcb73106483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 a30112b7-9f9d-4107-bdd3-7f48d3c7cd68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 b20035b7-8e68-4d32-a874-cca1e14855cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 90fd8c76-22a8-4c46-a289-3e687b1eeef9)");

unit.assert_eq16(16'h36FA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #509 1dea2244-390f-4712-8ae2-48c5b1a9c9e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h09CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #510 0afe0755-1434-4f45-9727-d3168c1e3554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 070771ef-5578-4da4-96a9-231169225e98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 7f48c7ac-06e3-451f-96db-136d328d3650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 001809a4-8861-43a4-b372-c0c4b08a123f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 1d8de26d-4a6b-439f-9758-b43cf2853033)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 ee6244c5-b203-48cb-bd67-9a8c68a54fee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 81651094-e7d4-4720-b6b6-2964b22e2623)");

unit.assert_eq16(16'h27E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #510 d4c7fb2c-fb68-448f-9980-1ddc95a5be9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h03FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0745;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'h0747, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #511 d605800e-0f15-4eab-9c16-14b72049da51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 32e056c9-e7c2-4395-9a8f-20a945aaf9ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 d9914425-e0d1-4878-91d0-d75ab22410a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 e65b1162-9ba3-4b60-8af3-6c02e969e429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 182a882f-87e6-4b38-9ed1-ddd9dcc85ae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 f07043a4-be4b-4693-839f-b3abac8e29b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 292e2150-971b-4ada-81a0-1b02f33d5380)");

unit.assert_eq16(16'h219F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #511 3f4683da-29e0-467c-8844-71a6e0d951b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0400;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0404;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'h0406, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #512 4a77d906-e2f4-45ed-ba4a-287fa431586c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 b369df6a-ee04-4232-b58d-31306ccffd2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 2594060f-a373-4f78-86a1-28bebe132024)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 cbea7016-1742-4e22-a073-6c054f1553ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 ef20edfa-bf2f-456d-ae5f-2a5c93a78d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 9c006182-1b7b-4eed-838e-c069a489561a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 23b8d0a9-92d1-4835-8b22-3316233b6396)");

unit.assert_eq16(16'hADA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #512 3009a508-a054-4ba3-bdc3-2d26cca3f22b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0402;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #513 b650a08c-45d6-4605-95d3-64a6fcf233b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 1a03178c-e691-4805-86df-4664a49caf0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 e04aafba-c43c-4a2b-866d-efb178b708de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 b45404e7-49c2-4369-897a-411f8dc434c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 ba50d231-0d8e-44a4-9505-e8864f42f00a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 079329cb-9fd9-47b2-bf7a-8fe2148c4bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 68ffe974-2d33-4eeb-81fb-4f3005107461)");

unit.assert_eq16(16'hDE2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #513 76adb2f5-6b58-4dfd-b03b-e2b3c2ddcbcd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0404;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'h08D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #514 285cf74c-4564-46c5-8896-8b044cf5d196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 3ef6eb3d-81d8-4463-815b-0297f466df60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 5b7de399-9d50-468a-8222-3fbf8a6a968f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 5a94c21c-079b-406a-a7fa-278f49b657a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 f7fe5d6a-3314-42df-a4d5-59385fe6b1ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 8150422e-1618-4077-b4f7-7317a870cfc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 77409004-2a34-46f7-a886-17d0ec0c6da9)");

unit.assert_eq16(16'hFE1C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #514 11982439-34f2-45f8-8b0b-58e293f2967d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0406;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0545;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h0547, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #515 926b5ab1-abbe-40ad-b214-e779d319b8c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 236bfa3c-c665-4b53-a82e-a6e43f82cadb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 4bcae23d-dbe3-4892-a770-580c751365fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 e5b9e8b8-4604-4d31-9c1b-aedc72c122e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 ced67a06-96c3-4c95-834e-abc902a4ab53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 90b5b5bb-334c-4d11-b00d-df3ab681d58a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 b5b85d58-2530-4d5b-80d0-61083c1899d4)");

unit.assert_eq16(16'h2241, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #515 afcc78ca-fab7-49c5-bcf0-9d69924dfe77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0408;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'h0BBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #516 c8fc4f3d-c1a8-4e55-b4c2-d2cf7842b719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 b196c373-b7c4-4391-9ed7-6049bdce7997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 45ef6c94-f53d-4db8-ad65-00a381de91ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 f04faddd-e980-468a-80cd-77678af72b76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 81bfc32c-ac13-4fe7-ae5a-f341027e6dc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 3ebb2544-77e8-41bf-b542-0261c979fa50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 112f6296-3010-4cc1-a3e3-43f7fff9a369)");

unit.assert_eq16(16'h0DA3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #516 67ba99d9-2fd3-43ce-a345-2c8d60eb74bd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0738;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h073A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #517 ea32d0b9-f45e-4c8c-b2ed-8fc3d8a98aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 17b77b2a-9949-4d2f-b15f-3057b2dacdbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 13fce4ab-ab56-4c17-ad86-238bd71614cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 388c0575-fa84-4b79-a384-806eb3578073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 f72a91bf-1283-4547-8ad3-e141071107a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 b152ad55-47dd-4d76-aa55-052a8c854c87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 82c413f8-9e15-4980-ab5b-9a82e6fe6c79)");

unit.assert_eq16(16'hCA43, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #517 989e05a6-69b1-464e-bf34-9d4cb5056840)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'h0B55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #518 32ffd46d-ff05-4d80-a144-87a2f2ba9d27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 e8807628-2fc3-4bc7-a252-8e0e25abea44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 58ac045e-6566-4a05-9e4d-ef542c2d8a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 4aa3f949-42a4-4e27-b809-0cff5786eff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 69055612-9950-4dfc-96c6-dba9f021d646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 7fca51e6-b8a4-441e-b0fd-b314e6e90184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 5a88a4e1-f24a-4175-b93a-901816c6febe)");

unit.assert_eq16(16'h5A1E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #518 425cf324-1e89-428a-b23e-a2ad4aeb7f33)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h040E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'h0BAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #519 b81e02ef-4d5e-4c0b-a105-68ca730f96cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 44704d24-c71a-41de-8169-d31c4bd514ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 f6376ab5-f7ec-490e-9370-35046db6b145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 755a9a02-d2c2-4613-8a7f-6171e3f57caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 de7c98ad-dce2-4f64-a756-14bf18d9d98c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 62af1508-887b-4689-8742-b4ad351c9b7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 d865a669-84fc-4a48-b3ad-8cfe8b05f87e)");

unit.assert_eq16(16'hB4C9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #519 ebf0509c-eb8d-4598-9a05-83b0fb9e0c26)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0410;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'h0A7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #520 6227fac7-6e66-4165-bf8d-4a02afa0ebf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 a2727f23-bbe9-49a0-b336-624c5a6f112c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 2408749b-fbbd-4440-a771-b5200a6e81b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 0a833a06-ee67-4f82-9f91-5c6ef110bd43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 67ad77b8-f873-491f-946c-511db8787788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 f985530e-372e-4859-abf2-d9c43d1d5a57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 342a380d-a61b-4f7e-a813-6acd162ed7b8)");

unit.assert_eq16(16'hA488, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #520 8d16f8d4-af63-4477-8da3-b84509ae7628)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0412;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'h0CE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #521 c3d976e8-45c7-4785-8138-f33a6ac4c008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 4955e997-bc4f-4c0c-9e56-2d5e5ba6ec16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 05520e35-bbdf-4f33-9ec3-e7a28bac2597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 1d4b9927-27da-44ce-ab31-5ba917ab196a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 86c8fe43-3272-4d30-8c6b-80e1a0c39aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 7019cff2-e810-42cf-bf4b-d2ae8fa28fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 ac41962a-6df8-4bdf-aa35-5d267a7bffef)");

unit.assert_eq16(16'h21A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #521 0e5348f4-dfdd-454b-aa76-bc2ec2b1abaa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0414;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0616;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h0618, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #522 f6085a56-c384-4fc9-8fce-de3df96b84ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 987b988c-39f2-4f42-ac5a-9b8ead2c7818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 b456b6be-5832-40d1-b8f1-ce3dc31ca052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 a9fa69af-24cc-4efb-be9f-8a4a97750799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 696be02e-0823-48b4-804b-3c7c80427604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 5405e0a2-874b-456b-8f4e-a4c67d429659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 144b3dff-10ea-4ef4-afab-72bd1dad369d)");

unit.assert_eq16(16'h1476, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #522 565452d3-d784-4c3d-8e82-73e08b53a66b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0416;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'h0A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #523 de4d99f1-a7c8-4396-a745-aac0116d94c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 f8810349-0435-4695-8cd0-cdab2dd1bba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 bae73b98-bbf4-42da-97f1-d91d3524f2d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 12ff3f17-aa2d-450b-9ac1-f653b0279719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 749fee6f-19f6-4d93-a8bc-0a809de61e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 d8511f13-8d6f-4b1f-9c38-99d24cbd9675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 e11d8571-9dd6-4fbf-a90a-6db2a5b902b2)");

unit.assert_eq16(16'hF0E1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #523 065d8ec9-9d0e-4c65-a693-bbed67f7e178)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0418;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h0BB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #524 5f68fcfe-55a9-474f-8d0d-d3c6db0cd58d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 753d030e-2db5-425e-946a-8dcb42b033a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 7d715522-242d-49c9-80e2-7e6ca7fed18c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 40c3b477-73cd-47f9-b1f3-f1d1da887d99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 99938423-31b1-49b7-abcd-30db5a8b346b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 689e0c75-2e8d-47dc-a9bc-948a0d008af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 af99e243-e1c4-4287-97be-738a90bd26ed)");

unit.assert_eq16(16'h18B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #524 b78af7f8-4e79-4bf7-9a10-9ea6180a117d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'h0A44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #525 6dbeb7fe-83e1-4c9f-9a1d-8f81191471f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 480f26b2-ca26-42d4-b616-3cde1ab5efc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 5ef80c2d-2da9-4437-a3ec-8cfe6f63dc7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 3384e8d6-edae-4b97-8cac-38eb45f75e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 e2437ea5-6b49-4763-b5ae-95394e7733d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 826bdea1-fd5f-44ec-bd94-0360774cbce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 616475e7-1d4f-4c9c-9c1c-8209a44f65f5)");

unit.assert_eq16(16'hC43B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #525 3200dc1f-590f-4e7a-bc8d-015416c95c91)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'h0BDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #526 68aaa92a-8418-45e5-80d8-442bd912dee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 d803e955-d837-456d-97c9-8a624130c0e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 927c6325-fb2d-4ba9-86d7-e73a469043af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 a1b7c9b6-e97e-459b-8c8c-f4dcb4bb9eed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 83f4d1f7-9be7-4209-ba30-6594daaeb1e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 f0c757c8-af22-4046-83c5-b44889fd4053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 b893c7bc-faa7-4c60-80fe-7faa595fc7e1)");

unit.assert_eq16(16'hBC8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #526 648dbbfe-39e0-4559-87e1-ef710ffd1595)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h041E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'h0FC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #527 04bbd83a-2add-48c2-b62d-2f03373b85c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 c0e0e1f3-c98d-41c0-95dd-d575c4718c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 a3fe8218-f126-434d-a28d-da394b61183b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 be061281-cca6-4298-af5a-2074e5e4c63c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 7e0fc349-9a3f-4e51-ab67-1d52da6829fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 4a1c72d6-ba0a-4b55-a00e-7400737054f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 bd758f78-1765-4911-86b8-5638f2f2ce5b)");

unit.assert_eq16(16'h6AB1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #527 94fb9187-ec30-40f9-b86d-00d0693f8a09)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0420;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'h0C60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #528 636c2070-e25c-4d8c-9973-761e4c98d67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 34b6a83c-b0bb-40f8-aea0-07782d4f43d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 50e6168b-3c25-4172-82d5-3959dd5fd2b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 76febac6-9c19-4598-90f2-c1dc29a890d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 1d199073-a443-4158-af15-09b04fdf3007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 257c62bd-8938-4f03-af72-ec1e7ff3ea5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 e342fbc2-d099-4216-8c29-ccf72649ed8e)");

unit.assert_eq16(16'hFDF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #528 8ea2fcdf-454b-4461-bf19-25b57cb3deb3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0422;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h07E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #529 ccbf652b-38bb-48f6-aca0-1bdf37f36f06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 8032e4b2-1790-4149-b422-727ad21c495b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 e224b345-0e09-4d23-9d7e-e8bc770ee95f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 19058dd6-78c3-4826-bdce-f180c31d36a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 60121c89-cd30-4019-b030-2ba617c1a558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 71505950-6419-47d2-8a4c-7e06a24988fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 27c0ecbe-49f1-4548-9c81-6ef466768760)");

unit.assert_eq16(16'hA545, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #529 37672f74-4928-4eee-a3ce-eeb41b701364)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0424;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0961;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'h0963, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #530 ba30b0fd-4d69-46f3-8d43-f4f81cbea382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 867b3e1f-2eff-4d6a-b86e-8ec97461181e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 520b01db-29b3-4b36-a0f0-7e1858ba49f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 1983cd3b-6c94-4e09-972f-79a4ac266b12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 f684a1f9-8d71-4f7d-bc05-a0a7e41d8b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 a44aff3a-f5eb-4cc1-99cb-df73e5901676)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 76147736-53ce-4efc-ab04-66af3cad4f6d)");

unit.assert_eq16(16'h8F0C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #530 c3595d56-3bf5-46de-8bc2-5bc33881385e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0426;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h08C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #531 252519d5-1b5f-45cb-a0fe-dfe81554e56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 597b98ca-5d79-4a50-bad3-9d216f520947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 d5caae66-4da9-4894-bad9-7201868e9f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 16b29140-6a80-43f4-aff0-10a76e76d3e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 14e31446-7a07-4420-83ed-3ffefbb006e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 5d31684d-8ffe-483b-8c30-a9597be9ad5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 6420cc97-5daf-4c30-91a4-8837c1432536)");

unit.assert_eq16(16'h6C69, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #531 a988b248-805f-48b4-bee0-43997c2ad770)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0428;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'h03A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #532 05757d8a-f226-404a-a495-a1a60f086d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 eba76b7a-be94-4641-98df-68f410901464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 d78458ea-b328-4713-bacc-e08d06ed02a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 14144b6b-66ae-4fb0-b31b-0c26ddb4eb0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 f31f5bcc-bc2c-4b73-9bb8-9119a704307d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 a014dce9-edb2-40e1-bb86-3252452bdd0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 ced00b12-b351-4034-8420-989b8479e3b7)");

unit.assert_eq16(16'h373D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #532 24add0e2-0073-4f79-8b38-1e3d89e22e3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'h08C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #533 e746a16d-961e-4bbe-a8d0-cd642abdbf0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 7fb59c59-3681-4e49-bd87-03ea429059fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 96d63040-b5a4-48bb-967d-57adedb6f458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 ca5ec036-a403-44f6-8225-8cebcdba5354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 324663fa-6ca6-4ccc-a872-8e04b51bc121)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 0154e183-bd48-4962-bc44-d8d1a6ad08b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 13541610-e54c-40ad-a4cf-74a6689885ea)");

unit.assert_eq16(16'hC0EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #533 003d3a4d-9e6d-4139-a2ca-d49c4050469d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0056;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'h0058, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #534 c9bacd79-ca47-48a0-8f32-9a79c8059e4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 08914763-6b2f-40e5-9a4b-365f3c36fdf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 9f22fc1f-ce83-406a-8daf-321763823554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 c454ca7b-cb51-460b-a210-30a71ab329c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 b29f4fd9-bd94-428a-a27b-1e535a41530a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 e22a8d12-5b4f-41a1-b47f-351c1b51a90c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 a4d04e0a-8673-4a77-8492-f6258f88d767)");

unit.assert_eq16(16'hD9A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #534 077ea635-ce65-4728-87ed-1cf38924d7d5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h042E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'h02FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #535 08b2fc82-fc02-4d48-8e91-033234ae7e01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 c049d10a-6555-42cb-97a3-76a8ee155a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 b06cd26b-0e7a-484b-baa9-e578d11a92a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 d9dbabe5-376b-498c-b45c-cde3cd30d3e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 0cd80819-0862-4de2-aa2d-09aec9559882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 6ee429c2-6343-41e3-9269-462f476718e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 1fa1adbb-3480-46e3-bae1-c01993dee270)");

unit.assert_eq16(16'h49B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #535 f395cd56-0ece-4ef4-a091-4241049811d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0430;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'h0BCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #536 19b807fd-e2ce-46e5-aa37-0ce452920491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 7f44a334-50ef-4aa2-935c-35eb9f1a244a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 113a45a8-49ef-4563-8715-7ea6db1096e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 4a2d4e91-966f-4449-b169-38ebe79d14b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 ef6b7d2f-9903-4500-a4f9-e4b4780b5e74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 3a0d5799-a3fe-4f2b-abbe-4c7b126ce749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 5c32c032-2156-49ce-9126-184febf307f2)");

unit.assert_eq16(16'h6B77, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #536 5278973c-6409-48cc-8a3b-aa9bce3901e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0432;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0228;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h022A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #537 87b06a96-68d0-43bc-a23c-c5e0aa575a9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 ed88ced1-6a32-405c-ad94-84243c1dde2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 d2ec2c28-ce93-4b29-9e35-7ffb2d621aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 0e5d6c3a-06e2-462f-9cbd-6797496cbd03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 7ab78163-9d5f-493e-ad60-7651ad65a2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 50d5beec-d049-4cce-a582-52135fcb44b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 bab42424-b55c-4c7a-b54e-ae495967b20f)");

unit.assert_eq16(16'hFF86, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #537 d60480f9-84cc-405f-a66d-5fe9b5bd0ca4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0434;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0472;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h0474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #538 791be95c-d418-460d-87b5-ed7736979672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 abce612f-ecb7-4441-8087-cf112e2df694)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 b2895727-f3b3-4498-b6db-902828f52cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 4b835378-4c7d-4fd0-9fad-6bf9d727e221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 e803d3a3-e96b-4be6-9dfb-517b9be48f52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 cda8c3e3-7f0d-4e78-ab55-ea340f028557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 7371f21a-5b0f-49d5-8f01-15f510955840)");

unit.assert_eq16(16'hB69C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #538 89ae8e64-a5ab-4ffc-a53c-f28b5b92b52b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0436;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0672;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'h0674, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #539 83189b31-7bdb-40e8-bacc-23318f47e3e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 c2a04c2d-4353-40d9-a203-3596dc2c13b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 b4981d05-1402-49a2-a7dc-bda06c391958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 3f56a34a-e1ad-427e-a7c8-f7d8e9b1da43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 0857474b-bb64-4b97-b322-c80cbb190287)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 40a51e65-6f7a-46b1-ac96-5019a26638e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 9615c352-82d6-4171-80db-3159b06510dc)");

unit.assert_eq16(16'h7656, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #539 24122e6f-9c8a-4009-8871-2355a00ea327)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0438;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'h03C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #540 b3f08532-362f-4cce-ac47-afb027429a78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 9c0d1ca6-da7f-413c-8994-683b7be647dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 1d371027-5984-40b6-83ec-ff85d49d77d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 1cf38136-01fb-45c1-b35a-0760e4b76b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 05c3fcd4-1b44-42ae-893d-8299135428f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 7d32e534-c7df-4755-9640-97d68be18f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 e8101eac-e24b-4bb8-b04e-42faf458ec8a)");

unit.assert_eq16(16'h8031, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #540 451974ff-23b4-4c45-8dca-514ba51ec446)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'h0E89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #541 9f66b3f8-5c29-4619-bf4b-b12791c740b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 ac3059e9-9959-4902-b131-288db6564047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 f3944917-1e9a-497c-831a-b2047c23589f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 448d68f0-217f-4be2-b9be-700dad62900e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 3ee0d76f-813f-495c-b32f-77e6d5deca23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 9155042c-acc8-44d4-800b-8fce0592d604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 1d080a94-a3bc-4e57-99e3-e58390192052)");

unit.assert_eq16(16'hEAFD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #541 0e5a67c9-8fb0-473b-a089-70d034c252d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h005B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'h005D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #542 680322db-3195-45f9-b12f-a9896a2c13f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 8218f873-1691-4849-96e9-0c4ff1a7ef53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 d27056cc-d4bf-4c44-874e-454020fd0be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 f53a3948-1e85-472c-9b17-4492be95d08e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 580a1be5-1fcd-4f26-b62c-38c4c95a208b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 55b9e20a-75d7-4a86-9639-15b641532703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 80634781-41e0-4077-b7cc-22faf46acb81)");

unit.assert_eq16(16'h31C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #542 8dd04ba3-d5ec-4ae8-a2f9-08d6dd08304d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h043E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0342;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h0344, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #543 3b04a82e-3b10-4589-9fb9-82bcbf110839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 eb56941e-4a6c-40d9-a7fb-14dd3f149a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 b7e94ab8-0a4f-4d18-893b-b8d7b29acd9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 2647a7d9-fa4c-49bc-81e3-785558be98ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 b5d350f1-a777-490b-9831-f4c828bcac41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 dcb02f6c-b573-48b8-8579-34a1fb9184c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 a105c9c1-4c95-4509-853d-bc9700501b68)");

unit.assert_eq16(16'h1945, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #543 e4daace2-00b2-44e2-8dee-92f85850dc07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0440;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0773;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'h0775, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #544 9c4279bd-65b4-4ac4-b646-820e0645be6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 804b48d9-7ef0-41df-824c-b0d60712f926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 218fa135-cae8-4d92-8515-d1b569d1e41a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 684e84c2-2c7a-427a-9c6d-6a721426aec3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 5e45d3db-c368-4a01-b5dd-852afadc7f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 a0761e1a-d75a-47f8-a82b-60be333a1fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 b77ce0d9-15b9-4f9f-9487-bd225337bc3e)");

unit.assert_eq16(16'h4728, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #544 00de9a8b-1f6a-4ee3-9c97-a487b3cb8f1f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0442;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'h0FA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #545 22e4bb12-8a54-4d9a-b9ba-d98dd9ffb48e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 d886c429-572c-47ee-a721-648b3ea28ec5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 058fdd03-8cef-4641-b75c-452580eacaf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 ab3a43fe-659e-4825-a197-7971cf4eed32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 ad9d6cbe-4a45-4842-869f-22832f837fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 457c4738-a8e0-43d8-8ca7-a67b25d650f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 681bf5ad-d8e4-42d3-b8e7-d05c503a2d91)");

unit.assert_eq16(16'h4388, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #545 dc39ec8d-c6c6-42a6-823f-d60b1c8b94e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0444;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'h01C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #546 e67d2bb7-953c-4983-bfa6-c3d73c799c63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 eca0bf96-affb-4314-a70b-778b2752fec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 98ac10d2-2681-4f46-9223-f6f01481c46e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 d9316085-5c44-46dd-8962-7c31ee53070f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 b5ba5438-da8e-45bd-a87c-0f76ae18a767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 a001d87b-eee3-433c-ab85-cb9f8a2e113b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 ea855db5-be96-4a4d-a5bf-f33f9f81fe09)");

unit.assert_eq16(16'h8600, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #546 d717ef08-bde8-4541-a814-28570bcd2b54)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0446;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'h063E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #547 5f0de66d-765f-4564-b847-a86d82a59189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 5a193369-022f-426c-8f22-d20eed4b09f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 47d42200-cebd-4791-b67b-319a1ce75dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 cfbe3730-0f45-4d71-98a4-2bbeef601f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 bab9a945-f39d-496c-8b74-e7c3ce4dab3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 b6d317de-c3d7-4adf-b7a7-3cae161ae6f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 73f1fb97-8db9-4fb0-a439-2eb6322bb393)");

unit.assert_eq16(16'h0733, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #547 82006cfc-f30f-4e43-a675-3f14e43c6735)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0448;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h064B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h064D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #548 9c21f800-91ec-434c-ab64-920902c99fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 81010994-d3eb-4980-adb9-ba70f8a10a59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 1447e1bb-a14c-4a7b-94c2-8ad6d29aee15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 42d55449-28de-40c3-95ce-59811e7cfcd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 30e127b1-bdbf-4c35-9c66-b5bce799c71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 0a944667-4f8d-4c78-9022-728ebf73d692)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 6764217f-8bfe-41dd-b243-b97a321ecf12)");

unit.assert_eq16(16'hFAA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #548 172e5b6d-0680-43d9-b87e-20bd18678fe5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'h0ACE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #549 facbf111-c152-4487-a117-533c809d3957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 65e2bf8a-d095-4fb6-9d03-7196dc994c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 1befa579-bbbd-4b3d-9dcf-036685776b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 599cc91e-8ba8-432c-9ed8-c46dfe140bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 a0494ef2-f0ee-44af-91f1-2cf9eb0e7f90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 69953b42-0d2b-47ac-8524-e43dadbaf9aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 a925d1bb-a517-49c7-a161-dd83bb5c4b21)");

unit.assert_eq16(16'h8690, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #549 2ba2d301-1486-4ad5-9fde-291ee046c28e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'h0A16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #550 77486cce-a2be-4f26-9553-9d08dbc86abf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 32effafd-e7e4-45c6-8444-8af7c7725ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 72197acb-8e7b-432c-a6c6-b87b854965fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 af963f63-5b03-4443-8f87-5295b3713c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 8e8e3f12-af58-4a1b-9ba4-112c164631bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 6eebea3e-ba0c-48df-bad4-f9eabf041dd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 8965275d-bc7b-4b4f-be54-9ef0027e4d80)");

unit.assert_eq16(16'hFAF8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #550 34bd0e18-2d3b-4c33-9df4-95d41ea9355e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h044E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0917;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'h0919, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #551 206897da-3e58-4296-af2b-d05811a7b667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 01c5f00e-0a2c-488c-ad3b-b526073bf79c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 a0611b29-3c93-4542-8ea5-be345c687c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 bdced167-4f80-4216-8366-5bc24059cb7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 672ea5f2-94c7-49bd-9bab-e80391070e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 8d0964f2-d3ef-4a80-9a5f-4ece900c1e9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 9e51e375-a37e-4b51-a1c6-4184cfaeef08)");

unit.assert_eq16(16'h3E3F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #551 023834f7-992e-4853-946e-b023a545be8f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0450;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #552 51cfe553-a823-43a3-9cdc-672790878b1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 099423ff-4de3-478b-9d80-727a591cfdf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 6193f6c9-d913-4b98-a5f0-2361979c1ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 ee93b3f7-a856-44f7-9d47-b9ed5d99d78f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 1bad0d93-a141-4a16-92bc-d4dda21bf7eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 366a8bcc-ada4-45b7-9c0d-c592435e1e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 8dc40988-ed7b-423a-ae50-eb00dc8d246c)");

unit.assert_eq16(16'h9410, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #552 dd334319-884b-44bf-a1e0-35efbac54758)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0452;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'h0DCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #553 fae1ab3e-2599-428f-aa87-8c5464e75ea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 390d556d-03db-4fc9-9d0e-fc872695ed90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 16564cbf-b1e7-4b40-a60c-371e4e776f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 328ce48a-70a8-4c21-a7a2-2ad509cdf105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 0db612a7-1c4a-446a-84af-208923679404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 4b308bbb-42d0-4510-b297-7597954d9986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 1c322076-3297-488a-9908-7cd7645fab74)");

unit.assert_eq16(16'h5FA6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #553 36854d3a-38c7-4dec-81cf-cb80d55c9460)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0454;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h0D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #554 c9ebd636-2cbf-44a5-b5fe-afe39e26ee04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 acc40683-f619-4947-a728-6513ee35cccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 e1adfbac-7fc4-40b7-8fdd-d36caafc2a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 0b2aa828-1377-4692-b33e-c92faca43491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 20d118a6-5487-4ebe-8854-8f6057b9b20b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 f6791f7f-1cab-49b8-809b-45c5b9d48710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 8bd8168d-fbe9-4a4a-9779-ac979ebd5d32)");

unit.assert_eq16(16'h2F94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #554 77001989-9650-42b7-afbc-840a334f0bec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0456;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'h04FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #555 b7a039ae-a006-4203-9e58-dd3aa5844dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 2a30bd2c-84aa-4da3-a476-71b8cf25110c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 8daaaacc-02df-499c-8107-3e99a3d0812e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 87a2eb48-634b-4a58-8091-9274a132bda0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 627f6c5e-20cb-476a-b8b5-26289481fa78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 8bf27df0-bf5a-4a4c-a70f-2c8ce84f20ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 ad779ef6-5de5-4a06-a869-42e5275d7b8e)");

unit.assert_eq16(16'h4AF7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #555 e1070a5d-ce90-498b-95b0-6a8e1f273f9b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0458;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'h00F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #556 3cd99890-6779-4033-9b69-c88e62868a55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 938993d5-610a-47fd-a48a-105bb567867a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 54c19f65-92ea-48be-b50a-75e854fc972c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 b2501b85-6f59-4ced-af92-3c7d85ed33fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 470dada4-2fdb-4ccb-9246-5ba1f7d2845b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 078244c6-a541-4899-bb14-f2023c4a695f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 8a8775a7-3296-4e95-8dab-3415b854c75e)");

unit.assert_eq16(16'h5BBD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #556 04831fb5-39c1-4eb4-913b-cd2d1b019afa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'h03F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #557 1f63695c-e6fe-4ce3-be4f-a323bbad6f7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 3250b5c4-1a1d-452d-a1f8-e9ddf3e860b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 2ed41598-9c19-42b0-94d8-87e313a2b013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 22f6a143-933f-4c94-a997-d63fa278e417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 bb7573bf-f5b3-4f9d-b27e-4c338be1bb88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 73694d34-2adf-48d1-8de8-76fe6f5e124f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 5aa1cf63-a3d9-4ba1-9be3-007852bfb7dd)");

unit.assert_eq16(16'hFF3F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #557 abd821b6-2f22-4f3a-b36b-77542b840a9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0074;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'h0076, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #558 638dbc31-ad9e-4e27-b628-7960ac27759f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 71f489be-ef94-4063-ba2b-01f95376f47f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 c86884a1-a7f0-4bdf-9e8a-13b359bf8444)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 2ffde4b0-5941-4d78-9268-5bd0a6d3c842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 d896a2be-2819-408b-be1e-825e538c1b83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 a51022ad-f8a5-43b7-ad5f-f9302a6972b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 93c98964-cc4e-4366-a6c4-050c32b1fa17)");

unit.assert_eq16(16'hE629, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #558 4a0b213c-73be-4b1e-83fa-58518e1ffa11)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h045E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0110;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h0112, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #559 a6f48a89-75c2-4fd9-ab64-2360c2ee4c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 7fa1bc7d-41b8-4494-9cd8-27decbb13d55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 259ed295-4108-4f6c-b093-1e2369e9a531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 09a4fd47-a91b-4a31-bb9c-48701707f4e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 f66bfdce-f2be-434b-9af4-4c138f755fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 a31d10a0-afef-4e9c-848e-80a597cf9165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 da5fad56-9274-47a5-b70b-35268a50b296)");

unit.assert_eq16(16'h62C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #559 c152c576-166d-4921-b5f3-076aff176d17)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0460;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0065;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'h0067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #560 2f760b89-4ce2-4073-999c-3813ed184de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 b3561e54-b3c4-4cd4-b703-23a12a7eef76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 4af19ee2-4809-4f65-8506-f4768f632df7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 5e814edc-a210-4891-8625-550b38fecc33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 d99fca03-94b5-4678-8392-48cd20135ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 c0ffde37-b588-4e8b-a341-ac761e2b28e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 7b85bf8b-440a-47af-ae8b-0d3b03d618f9)");

unit.assert_eq16(16'hC924, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #560 80e125a3-7834-4033-94d8-23734e4d2a25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0462;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'h0B44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #561 77474c21-11fa-4943-861d-8f4cd061960d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 948dcb70-b7d0-4a1a-a83a-c67a0fd4b6b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 9794f8e1-a9a9-42c2-bcb9-9e8b0da8167f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 78128d97-2623-4676-951f-6aff54422d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 4ed98888-c9d8-4b4f-b0a1-ef0d0294b675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 bad35adf-77d5-42f0-9fc1-cb574c37cc66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 0ea4a95b-b9b0-46e8-913a-25d203a3e7ba)");

unit.assert_eq16(16'h1D38, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #561 9d316a8b-e3cf-41d6-bec9-f284df642dee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0464;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0910;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'h0912, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #562 2a1169f7-314d-4812-b4c8-44111b2449a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 059eee29-e36a-42b0-b597-665498344d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 97460ed1-6b80-43a9-a413-de54c3b4db31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 baa309d5-562a-493d-8c75-acf91262e4b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 df6f1215-6640-4dce-be28-5c75e178cf21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 f6e0742f-4eac-4561-ac27-2fd068453034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 4a6db282-6646-4f3b-9ab8-ac794c1771be)");

unit.assert_eq16(16'hB6C9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #562 e6b21929-97f3-4134-8664-5dd997e43c20)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0466;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'h05AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #563 31803398-6d21-4938-bed2-d48325cfce0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 ac86d523-7ec2-4dcd-9821-e58bb92ad414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 7a0c5467-ea0d-4705-aed5-f208c29caa22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 3103a0bc-052a-40b9-b9d1-c3ad70d65688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 5f7bf1e0-cf3a-47d2-b8d6-1983cd7faccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 4c620317-9f39-4cd0-ba72-9ec1acb03b6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 70ec9021-b351-4b39-9d87-743b7a2e5ab3)");

unit.assert_eq16(16'h5201, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #563 51687b33-27ee-4ca4-85e7-62987cc91a0b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0468;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'h0B35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #564 696ce483-41d4-4fc5-a7d5-03dfc914b178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 8bf0e944-ce6e-493c-b74e-a52596af5f62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 ef254cb8-5177-4ec1-8259-a75657268e53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 43c8a6d8-f257-40fd-a0c4-9f57df79d0e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 2b43c3cb-4c2c-4b14-88ee-fb205bd20a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 6ca6cbbf-d881-423e-840a-48f329fc19b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 0accb3c0-3f84-4da0-ac26-8de7ada964ba)");

unit.assert_eq16(16'h768E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #564 043495df-7f81-4ce4-9329-44094cbffbc0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'h02D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #565 2ff147a6-e1b2-4930-828d-6410cbcb6b2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 b617cede-b1fc-4875-b3a2-894d041d11a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 e42f83ff-5966-4037-b1ad-ddddd549ded8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 069d29b0-5aa9-436b-9654-0992958dd234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 087a0a9f-5c14-4f44-b732-511a01986840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 40187996-0b67-48cf-a9db-2d2b214032b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 ab5e48da-2781-44ee-a95f-65afa0740993)");

unit.assert_eq16(16'hE416, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #565 5d3c6581-d1aa-47e8-b9cb-0fc5831b39f9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h04DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #566 007a95c9-a0da-417a-beea-be767e9ade4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 3bee29dd-2cb1-48e9-add8-ccdea98f1b70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 f58724f9-ff2e-4348-b172-c3fea72d4916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 38985175-1b8a-449d-992a-23c07f40b7f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 18a3e7c1-feda-4a09-9c48-4d1f4a23e48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 f383089c-5f83-49ee-a0e3-419951801a50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 9df52f8a-ab2b-4e3f-bb51-26a041dc3ac9)");

unit.assert_eq16(16'h061B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #566 7544a8d0-7377-403f-b5c7-c93713fc0ac7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h046E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h07F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #567 921103a6-f67b-4e02-a4d7-7d06798f77ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 6404de86-3367-4a11-b5a8-c51cf385833b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 4f20e44b-0fc1-4b3b-9612-092d20ae26f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 d6207b1e-5257-4bf1-9f17-2a4ca725c36c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 73e489ae-dd3a-4562-a198-01779c3fa65a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 334a603d-e0d1-45e3-9bc3-829cdd1222e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 005028ca-fa49-4f17-9ccd-a9d8c2482528)");

unit.assert_eq16(16'h415C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #567 d0a3e8e9-735d-47c0-92af-4ee3ca6e54b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0470;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h03F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #568 571f156c-ef7f-4595-ab8b-9bdd78b3143a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 819003cc-b267-4500-a733-0dab9bc244eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 3c262d39-4acf-416b-9e04-f242effe50a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 b82c28b5-9014-43f4-bbce-9ee6d49134f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 f6ffc77c-89e2-434a-b253-2dc06fcc83bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 28e9777a-a72e-4307-9eb4-71b6e91db0c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 3670ea5e-ec1d-43fd-b729-4f990b344637)");

unit.assert_eq16(16'hFB42, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #568 9050ece0-6dab-4f8b-9a52-4cbd6d9c988d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0472;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'h0A04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #569 ea67b5ad-b9f9-4df8-9a5b-d9095788150a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 8854d1df-97da-49cb-94e1-37a2ba2589e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 1f870283-23a5-4963-b1a2-52a059653cf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 6d24b304-3e5f-4ebf-99ef-38228b95a2ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 2f67d770-7e09-49a3-882d-4eea5cbaca53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 f1629005-fe56-4775-824a-c5553cab0b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 aa62c210-725c-44cd-93d3-dc44431e9263)");

unit.assert_eq16(16'h7778, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #569 84178441-0b58-4568-a131-a26f7d093deb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0474;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'h0AB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #570 9f81cd23-e19a-41dc-ac10-f8fdeb130b94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 4a5b1797-ec88-4b5c-b914-c8c51c3629eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 454979ab-0005-4d8f-8925-d7f94c12032b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 4f769fb6-8fb2-4039-bd08-69ab6f1ad034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 276d6f18-0da2-4bcc-afee-99efd976e933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 85b4ff66-ef6b-4558-b6d5-6c3e0a826816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 72854d56-dc4f-444c-bc75-5f230e30512f)");

unit.assert_eq16(16'hB56B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #570 3f1e4b0a-fbe9-4960-b7b2-0dd1c3f41734)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0476;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'h0F13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #571 1b7bf342-c1ef-499d-87ba-36f0f7abe30c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 ea09fa06-942f-46c8-8b8b-525ee50e9f0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 c65473e1-ca40-442a-b695-99e153576491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 f1e3e468-b2ac-4382-91f6-d290fdf6d30f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 34154173-518c-4c30-b0ca-d7e0d54db374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 04f5c2a5-d936-4d7f-87e2-4adb6956fa15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 2bce17b1-a855-4c9f-86f1-72f2b4f4fc89)");

unit.assert_eq16(16'h9403, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #571 ec3fe090-afec-4f99-82b6-62fc6aeda26e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0478;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h0C04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #572 fe6f33cd-5627-4eb6-b659-a34feb52093b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 124fdc84-c47f-4d85-9d36-f08b04359343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 88705f3e-2881-4812-b952-4f4fdc22877e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 64404d2a-4bd6-400f-827d-84c905c6dc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 6e3acb1f-6899-4789-9675-48a6a280f559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 dab3d096-61cc-4c22-8477-56425df0a81f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 83010d2f-e71a-4595-96cf-3293c26272aa)");

unit.assert_eq16(16'h0012, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #572 bd159885-28a3-4a37-a38b-2520855a015c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0111;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h0113, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #573 c6aa2072-2197-4585-a56b-32f92d6ff47d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 54caa4a7-7625-46f4-93ae-23d791c58fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 a6ad4c71-73c8-453b-a5af-e5924b61f46f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 3e2d1372-08f7-43d1-ac25-6c8890af06a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 192261be-ef49-4027-8fa7-fdd80a3d2cf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 0a5a5cab-b487-47ec-b3ee-43bf1ea79390)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 e47744f3-3f75-4181-8d6b-ce48f554ca57)");

unit.assert_eq16(16'h0C62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #573 0b670ef9-5582-46c7-b997-8aaa3e92711f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'h0A48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #574 7c32af77-4840-488e-b878-c76773b5881a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 e19e0c81-881c-40d8-ba45-05a8268c15fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 7fa8b38e-28ae-42da-b244-901adcba5649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 e989f552-427a-4db3-86be-7974d9b03332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 ff31b21a-f047-4dc0-80e1-3cde679d9e13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 b3a58be2-7de7-4efa-bf41-b204f5e57ec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 3f767e2a-5ff1-407c-88fc-b28a7464734d)");

unit.assert_eq16(16'hC47E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #574 95eff80f-e3f1-459c-9220-f70424d99f57)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h047E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'h0D4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #575 37ae12fd-75ec-42b6-86a5-5fa6a4789d4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 92dd25d4-ad16-4786-b40a-db450115840e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 0e4eb402-deef-4593-9d0b-76afab5b21d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 fed96669-79e0-41fb-857a-aac238da1555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 cf53f428-e12f-450e-8b08-104b18686486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 ac6936d7-d7c8-4ee8-af83-91aaa26dbea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 de39f2e5-2d77-40dc-ba3f-7c384f9cd74d)");

unit.assert_eq16(16'h2E25, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #575 da998c49-8813-4115-a8e5-e7404fd848f1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0480;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0111;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'h0113, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #576 9d16407e-7cb7-4161-a25e-4fb5dc2ddcb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 ab6bf194-fa1c-44e6-b4d1-427a5d65f9e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 1f833249-fb36-4e51-b39c-13ee4fff2b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 ed7bf2c2-3af7-4503-a945-62ea086ae5d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 58654ed8-b680-45a0-bbef-4c4bcbf0dd01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 951327e7-60d3-467f-a78d-0c06fcf19527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 80db7a72-e842-484c-96c8-5d95d9cf600a)");

unit.assert_eq16(16'h0C62, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #576 0c188440-f188-47c8-924a-a03854b7cd1f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0482;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'h0B46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #577 35a586b8-c48c-4961-89cd-6413da4db3e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 ec897ff3-42e8-4884-8c0f-4abf3ee34d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 ba97dc76-81d1-43be-b219-f4f2fdda948c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 e8405b3a-cf7f-4386-950e-7bddf262b72d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 0c74ba9f-9284-4180-84c8-0ff73d7aaf52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 e8782b10-9957-4b87-b449-2583737a5cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 ce5b0842-5623-4c25-9782-a749a16c4fbe)");

unit.assert_eq16(16'h8EC6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #577 eca289fe-44a7-49e0-93da-998f728d33ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0484;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'h0CA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #578 0c53b577-91fe-45c3-ab29-5545c6478055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 770a7fb5-05ac-472a-896a-11c6140fa7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 bb597e7c-35b3-4eba-bee1-0dbc3cf0d280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 2bba72f6-2744-4c48-9946-8952c469509e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 42327772-3d1b-4bb9-8cfc-8cf2ce9b7af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 a0d91283-bbee-4604-ab46-04356cc1647a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 40e20b13-ee4d-4b74-b1b8-3f3e8371126d)");

unit.assert_eq16(16'hE9C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #578 d5eeee95-e420-42e9-b31e-741fc540ede1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0486;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h087E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'h0880, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #579 3a3c31a9-5e41-4c3e-917a-d68a42c16cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 af710309-e16a-4e82-965f-143803afbd6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 69691be9-87be-46e7-bf0b-087a63ff88d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 fc5efbfa-9f93-4170-bb11-de4effdc2c37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 5930c117-411e-4f7a-92a1-4ad6d90cd922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 dd929895-780e-4549-b1c1-56f8ff04496b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 1b079dfd-b674-4cea-8314-a94d290aa052)");

unit.assert_eq16(16'hCEAD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #579 e2b16036-6b8a-4057-acdb-1dc7e5b2b0e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0488;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h02D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #580 4fc48dfb-87b2-444d-8d30-f8949d420c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 9a5bc951-06e2-4de7-bc86-421058382289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 41d23aee-1a35-44d2-898e-956de9317087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 44214c7a-c48f-4bf9-a6bb-daf23e578ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 ed50194d-5b8e-4e56-b064-8e520ec91cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 1dd89d50-63b7-45c1-a85c-519280c1988b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 7abfe1ab-36a2-44f7-8877-1763899dea7e)");

unit.assert_eq16(16'h168E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #580 63467552-6166-42ee-af16-0f955a6a4052)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h0E59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #581 a9b02656-8d68-42f1-b201-aa8f6a0cdd02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 fb21fbfb-4202-4eaa-94c9-1a23677d9b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 6f6d5b6c-c817-45d5-bb43-0a356d1b7416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 9c1ed2f1-3326-4e69-b45a-2fa3a51cfc25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 fe37150f-0251-40cc-ae4a-65281269a66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 10b16c9a-05df-421e-a4f2-a99201335c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 6aa4daf7-9331-4c6a-9f41-708d3a4422ec)");

unit.assert_eq16(16'h85A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #581 ba1f6928-c18e-4984-ba0e-c47d1724eddf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h096F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h0971, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #582 d8bdd3df-d491-4f58-9373-e2fe03016464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 28fd58aa-3e4f-4ab2-99b0-bdaec0497339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 db428967-1063-4cc0-b312-8f173fa08998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 ade17fcd-a777-4192-898f-ac4545742bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 86c0d77d-dbcf-4890-b98e-73420b38b5c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 92bfa096-ca8a-4190-aff6-e8ea11e30e61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 bf900248-93c1-4060-8798-e9108da8aff6)");

unit.assert_eq16(16'hE0A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #582 4b3381b0-a3a2-4f94-aea8-8b2d5d2c2114)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h048E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'h040D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #583 56138511-86c5-4af3-b27b-02df6f1784b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 93c99573-10d9-4147-8156-ecd0f648b25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 62c5661a-31b1-42d6-8504-405a8478f096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 6592f447-3185-4b16-abed-08a653c74b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 e9d9e4b7-c44d-45d6-89e9-eeab63aaa967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 c2fe07b6-35ea-4702-90ec-385accdeaeca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 237e9b4f-0ecf-4f9a-a656-ce9cf3535734)");

unit.assert_eq16(16'hAB3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #583 01329046-686c-493a-9ae7-aef1017b9262)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0490;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h0E5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #584 708ec144-2c48-4753-a521-5b3ef81936b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 489ebc3e-0506-4a1d-994d-c584b6387e21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 0ef1c702-f2c7-4719-9529-b8cb93440e45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 eb34be2c-d89c-4a5b-830e-08678fde6141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 ebca87ba-317c-4f4b-a66f-9579bde407ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 bbb2238f-50af-4120-9cb0-aecfbc3295e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 a9e3d1d7-3f97-4dfc-81a5-310e6e7e7c5a)");

unit.assert_eq16(16'hDB43, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #584 ff84b476-04fe-4130-bd96-d57dc042b272)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0492;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'h063E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #585 99787b68-7408-4e59-a3f7-d2d1d669dbf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 ec0cf5bb-6a92-4c54-839d-ecb7a9f0e73d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 f23ece45-ec04-49e5-ba7b-07f5e6fadf10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 34578c24-f129-485a-a341-ca9026a36fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 d8014a5d-bac1-4a61-a8fb-87a72b4ddbf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 cd576196-b814-4b13-8965-8e6af33a2f2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 9d748fc3-b9b6-4a1d-a1d2-b2332a793953)");

unit.assert_eq16(16'h0733, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #585 5421358d-d5e4-4043-8763-9b49012ff689)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0494;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'h0DC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #586 85546b9c-c76a-4372-b2fe-305ffffbdbdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 99614b1e-683b-4601-9ffd-e9a9d2f2128f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 72728da6-056a-4013-8ad8-6dbfbec44428)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 5f8b49d5-43f0-4224-9a49-5958c088f70e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 033e8590-57c5-4569-bcbc-6bd11bdd8c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 e7589b00-a0be-4510-9711-2e7b6394410f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 0b742f66-9874-4b65-be5d-ac3b9e63b2c3)");

unit.assert_eq16(16'hB0B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #586 cc87e6c4-eea2-4345-a3f3-575dd8181bc6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0496;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'h08F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #587 635bdb99-cc8e-458a-b0f6-2f55449425d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 b229b103-e194-45f5-b2f5-d0ed6c1ac74b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 f9db3f99-f6af-4efb-b5fb-77f52eb7a858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 f123e258-fd76-4747-9acb-217827d0275c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 2e57d069-15a5-4663-ae91-be6c1e893463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 4136e4ed-2f0f-4886-b2e4-16a4df8c3cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 2200d06f-551c-4367-9cee-7a781ff633e0)");

unit.assert_eq16(16'h7A1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #587 75d0ced9-69a7-4c25-b89e-8edd1236cbb7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0498;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0342;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'h0344, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #588 d88ec5b2-4fb7-47a3-87f4-a4fc85e41e5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 d1efb2f3-64a2-4c28-95f6-7e23afc5a97e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 f666dd66-9da0-473a-9b6f-1ea189dadd97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 d16e4c54-c13c-40a6-a0ef-23efed97e114)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 26885671-c3f7-4a75-87b8-dc002897d18d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 348eaa38-a7fe-4ff6-9992-4104fb03ac84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 56001ad9-11c0-4cf5-92f6-2f796a3a51f0)");

unit.assert_eq16(16'h1945, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #588 cbde725c-3834-49eb-9247-b6c6df8359f5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0071;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'h0073, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #589 d34dde0b-7803-4793-af86-430a7682146e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 faf74858-5d5f-4244-80eb-93e59ae0300b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 c7c9f2b4-4ec8-4e22-9ff4-0fa64ec215cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 7f6f8840-1826-4d86-a677-7e871f513bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 71ef46a9-0563-46fb-bb1b-e2d400c2862b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 66f4c3d5-1c0a-4c1d-adf7-09754090fe25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 6c19ea17-2443-4b67-af31-26995df5aefa)");

unit.assert_eq16(16'hB212, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #589 8f3a3cea-d604-4969-82e0-4a5f36631108)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'h03ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #590 ffd50524-5fec-4844-a4a5-b08542c735a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 8f0803d6-10b9-4dfb-9820-2942d05998d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 e0c444ea-ad00-469a-8aca-78df12e22241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 de1c2397-7015-4dbd-9ee6-8ed45e0d0932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 cb23f860-1ae2-40c8-bda4-0ce40270545a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 a172c0df-17f5-48b6-bb8d-ca47a2b65bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 8495c956-0e0f-4a78-9e2f-82ff9105703c)");

unit.assert_eq16(16'hFA8C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #590 1a308c13-7bd3-4d02-9f30-80c71dd0f0cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h049E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'h0FA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #591 0a8a79a4-c5a2-4b6a-b5a7-cda9b29b3e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 2dd2ac19-a175-4c8d-a9bf-d1507069855a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 29169175-9989-46e2-89a6-29a5deb19559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 b3d8114d-63c6-40b6-b58d-989d6cbd1784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 bb835e71-7b95-403e-8a55-b40e0fb69d75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 cbf3390b-9300-4671-9f89-2ac9a2048439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 052b60be-3c4c-4d76-9053-a8d991581e96)");

unit.assert_eq16(16'h30EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #591 2411eed8-d736-431e-a746-a75ca33aab93)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'h09F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #592 5f75e48e-570a-4d53-869a-11ba52167170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 e9264e74-ab4f-49f8-9f5e-9bb5b929479d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 5b9003a5-bf67-40ba-92ed-82c273717db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 61f86c6c-1eba-4895-978b-4470dea602b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 a6f719d9-f32d-4203-8da1-c66423dea5f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 92098a81-bee2-444e-8a01-b54c74a057a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 b2e0a42c-c93c-4d40-8e0e-7facd0d391e7)");

unit.assert_eq16(16'hBBC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #592 f954fe15-39a2-4687-9256-8cef25249f5b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0445;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'h0447, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #593 5613e18f-a9a8-4eed-9c81-ad1df3f2f8aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 d4774fa7-6db4-4051-a7fd-2e0c6ad400b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 44c64428-ff6a-43e1-ac0c-ff93904ff440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 bc8a53fb-4b92-4115-b334-585e8770e925)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 67c2bd23-5d9d-4bfe-848e-ba18092ae013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 a5e4d2eb-84ef-4d96-a762-8170326cdaa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 37535e45-3e00-4740-97a4-9666529fa4b8)");

unit.assert_eq16(16'hE419, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #593 1715aeb8-aea1-45ce-90d5-62f40fc79048)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h054C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'h054E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #594 63da0f3d-bcdb-4877-9041-0d35569b9f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 c071ee80-4234-4a4d-8e29-29c43104ce47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 3dd8f093-7b33-49d0-8c68-9dd0c795ef57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 f66e42fa-686a-4022-8446-560c3b3e51d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 7b7914ce-9974-4d8e-8445-7aa03b52c460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 5c412ec0-b534-4cd5-96f2-5cc2649e61be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 1399bbdd-5a47-42a0-8b9c-4815a03e786d)");

unit.assert_eq16(16'h6B3E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #594 fdd715ce-baa2-4b8c-8eb2-cb0707c46bd4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h058F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'h0591, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #595 484b9829-f0ed-44df-93bb-8e32455865be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 92e9b169-51d8-416d-a460-7b6dfe9dac54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 4293de0c-571c-4a34-8d5a-fd0ab6d4cca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 40881c82-c6b8-413d-84a3-91e36f8cd7fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 057bea6a-a7d1-444c-96ac-420ceab6530a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 7e4a5fac-9f06-47da-9097-a2fd662c15ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 ec2f1412-3ec5-4768-85c9-01e3439e317e)");

unit.assert_eq16(16'h0412, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #595 c2dc8974-026f-4018-9a59-314baa216170)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h068F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h0691, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #596 9a55b5db-eb91-458f-a2e8-abc19e294e87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 85eef31a-d9d6-4c4c-a0f7-42eb5ca5adbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 fbba358a-89ca-44be-81bc-e31eeb2a575e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 f40c1475-0fa5-4bf5-ba4f-0303c8720da8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 0347d73d-a99b-4853-9676-3d82d5072b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 4248a8bd-7e54-487d-91c4-71f0ea19cf45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 47bf8c8d-94e5-4b2a-9753-1960e7c1ecab)");

unit.assert_eq16(16'h8D6E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #596 1cd17d1c-9945-4f6c-9778-31582097a866)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'h0D41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #597 455b47a0-6932-4f73-ba2a-f61d7ad61106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 4f2c214a-72ee-4f4d-aba2-ae00b06ee736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 6af6db1c-281c-46b1-a333-8221d536f6d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 591ee5a9-907e-41f4-9bc1-7b744f76c1dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 b0642c9f-5011-47f4-a8fd-31003fe07a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 2a607953-8adf-4684-9553-19e05962976a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 e33e1457-a8ff-49de-be25-78fe81eb1d61)");

unit.assert_eq16(16'h9862, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #597 211bc0f5-cb40-4c36-b2e2-649eeaf733b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h0B34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #598 5a1ecf56-7e67-4e88-b337-01638734f4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 21886d52-d7d7-4ce9-89bb-4d48e5ae8004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 c1ec828e-dac3-44f4-bff0-1ceeb1e4d0e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 96cf007e-2399-452e-bdd5-b959a5c171e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 d5860a18-c06d-4942-8667-bd1a1c417a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 a8217a7b-ad1c-4a3a-9569-f731c2cec238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 f0e1ec58-8ade-4724-9c27-f7a9580ea778)");

unit.assert_eq16(16'h8EC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #598 435c6b7e-e3aa-41a5-bd0f-91ea1f379ce5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h0F83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #599 155a0f67-61da-4a91-96b0-95b8899bddbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 0b9fe900-87ad-4066-b029-700712fb9cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 397c3997-f20e-4beb-9cb7-41782295e502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 444e12a2-8985-4e04-a52e-9a76cbe037b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 a9386462-0f1d-417b-9ce5-2f323260291e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 b7da5e26-6a25-420b-8ca4-29146ce0fcda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 6417e90e-3b2a-4a58-b080-1bc3d169d745)");

unit.assert_eq16(16'h5D82, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #599 325bca46-01cb-473a-8d22-91ae6372be90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'h0B9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #600 3ef59019-01b6-4159-96cc-17e287ae697f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 e0a09729-ebf3-40c7-9207-63d9726d8241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 e7c6f143-eb7b-43f8-bcf6-24b6f64bc7b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 99486e6f-3ebd-406e-8785-3061cede4745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 ece4d95e-0f92-44e2-9fac-08434c65ca93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 a4607918-d06d-4a9b-ac64-1e690157026d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 71d110b4-e7a7-4f7d-88b6-35153b3bb4d7)");

unit.assert_eq16(16'h5822, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #600 6c38386a-541d-4dbb-988b-f54ce46ca08e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'h0ACF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #601 ffa6f84b-89ee-4a60-a7fe-bf538c47673a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 0787c6e4-84d6-4d91-8ed1-63bd568a3b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 d8bb356a-eabe-42bb-9d8d-7401403a4684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 5bbe55b7-3dbe-4807-a806-d572597724a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 f6b81d0b-ee59-446a-aa8c-c224b2684ff5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 9432224b-0f11-4581-b2f8-0db0dd9bad19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 c25e8094-435f-49f8-a6d9-00ec896faeb3)");

unit.assert_eq16(16'h1986, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #601 8dd745f9-2eef-4ed4-9bee-eee70fe1b15e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'h0B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #602 7cefc108-ec9a-41ae-a7c5-2715cd6dd849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 ff5346b6-6563-4b0c-951d-1888df64e045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 7e496156-b3d7-4bfd-a4b3-183567116d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 ca14c818-3cd8-4112-8072-c9da016b9a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 97017a81-dd99-4f83-bb78-960008aa5510)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 2805a5b0-9b35-4dd8-a1ee-0c0dd4f79a1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 66290d24-f94c-4589-9963-b5facf5e8e4a)");

unit.assert_eq16(16'h5A79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #602 68340d76-dedf-48c6-9f2a-8af2d049d377)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'h0D4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #603 0596af09-8e07-4c3e-82fd-3161fc4846d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 6d8df018-e3f2-42da-b46d-f31a220f3087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 033df3b7-b9bf-48f1-972f-8591a38200f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 659ed9de-7d7b-474b-af83-5f796618fc12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 96308be1-5c8b-44fc-88ea-9603783fd756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 f61176bd-07d5-4f08-83d3-7fc315d059d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 d08a0460-a2c2-48fe-b2c3-3bd6fdf8db1d)");

unit.assert_eq16(16'h2536, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #603 d3444793-16c5-4727-abea-7f4c048d805b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h074C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'h074E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #604 bcf0342d-040d-4bf1-b650-c087aafbd971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 76565b50-64b8-441a-acb3-e0d65c82bfc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 598bd192-147c-4a03-afad-b0b88264efd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 42e4951d-d479-43d8-9f36-c3445c7178ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 7b04f623-cc41-4e03-b33e-626abcdf80c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 d9a7bbec-5eef-42c2-8efc-f2e62cda2e0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 7e7fedcd-09db-419e-8cd7-f0a46b4a7f40)");

unit.assert_eq16(16'h3AC0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #604 a0c06e5d-8140-4cc5-9fc2-517930b9d8e1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'h0A9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #605 dc0a8984-5e4a-4f48-bf49-3075aeb8b098)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 3052bc05-89a9-4194-82c2-1de09db86aa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 e030edc5-6697-41ab-9867-243139090c89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 0d24ffec-58ae-479d-a327-548381d7927b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 2f28dbfd-bee2-4549-bea3-c2fbf2b31617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 16167aac-cc50-4c97-a8dc-c781b889b617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 77b063d7-d7e7-4627-bc5d-8bdf7baa0f2a)");

unit.assert_eq16(16'hCC67, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #605 5eb6dd09-f7cb-4129-81b4-54d6c4f82ba4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h01E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #606 6ab0defe-45f2-4c54-bb3a-dd30959f41d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 6781645c-5f03-421c-82c2-e314d4373657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 c1f99472-1c6a-49e4-acfa-58a87cf30ff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 9a4040d6-020b-4899-a5a1-cb165b9da259)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 0e1e16f2-3dff-4e71-af42-d66aa5c5ed5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 69c61ff6-fc7c-4f43-996b-531fa2a4c183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 781018ea-62cc-4ee2-a720-7ede3e3915f3)");

unit.assert_eq16(16'h9D4D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #606 04453d89-b195-43ca-b7cb-79d0e5aad636)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'h04A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #607 f1899c03-5a53-4a32-9495-652d17dac003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 e3534e8c-2a7c-4e39-afa4-c65876105fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 0795bb70-937b-4c16-9f96-867a4cf5b957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 ec1db625-b685-4e82-94c0-5e4985f3b828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 9300a1fd-cc77-4679-bf58-d0f3fe164fcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 e9c1ad50-2d70-46da-98b6-47c17c8c56bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 ea23e4d5-17b6-4a6f-a550-4fb4fd3e284f)");

unit.assert_eq16(16'hED92, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #607 86acc1b0-5c2d-40ff-b1d0-90bd1b56265d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'h02C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #608 e89588a6-4f06-47be-9bb7-739b5c80dc9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 3d0134dd-7c05-4e04-a2aa-a2a83cbda1bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 61138493-fba9-4217-8d47-eb9e4d469936)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 d91d0ad9-3827-4a2d-bc22-99f204435f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 1c4b39ba-1284-4df5-b72b-71ac5335347a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 fa1cca82-7913-484b-80bf-c61c56a0fede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 40043683-0b24-450c-8f05-93c183a8301d)");

unit.assert_eq16(16'hA4BC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #608 04867b33-dc8f-45ba-ae7a-55a457417b34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0204;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'h0206, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #609 1d58be3b-d736-4bbf-84af-ddf4ec81eb46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 085e5a60-d993-4a91-acb3-660b3a6d267d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 e589d520-bdea-41a6-bd73-5daad4b25fa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 d2f1afba-5b38-4c06-9aba-b1b901b79aa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 173580fc-d80e-4f6c-9798-0367a058af2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 b9796769-07bf-42f9-a3e3-d2009c016e8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 6ff18df3-eb80-4609-8931-95360763dc45)");

unit.assert_eq16(16'hBAAE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #609 66f04bc2-f0d8-431b-9065-2bb87ccc5f6f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0491;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'h0493, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #610 4c8c05b2-d241-40ce-a39d-d61db77dd99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 4620f254-126e-4de7-aa82-4ffde870aa9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 df633a48-3a89-4e37-971d-729dba70ff35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 2929a7aa-7d7c-47ae-b84c-3ed1fa0f40f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 883fe381-751e-4779-9e91-32a67198e08b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 92a9caa4-51cf-407b-964e-b27424201ce3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 dfc6f8ac-d790-4b10-987c-df3b74d15ca0)");

unit.assert_eq16(16'hC233, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #610 245e6e0f-9099-4ece-a825-65335482a51c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'h0F30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #611 d8d9444d-3376-4ffa-ba10-565b2f8cddf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 722b1a9b-1c24-4b8d-9c72-dd3659b0611a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 8f9e2df3-89c6-42b9-b366-a9229e8c4958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 fd30c6d5-1668-4f59-a353-fba2feda629b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 5b5d098c-45e9-4e6d-9706-9754cc5a3269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 c90beb9b-23ae-4be6-8a13-8386ec9c2cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 677fb94a-e632-48e5-b83e-1d619690f017)");

unit.assert_eq16(16'h3E11, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #611 0441ca4f-09ae-49ae-8e49-a9d44fb4bd52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h077A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'h077C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #612 c14b32a3-7aa8-4be0-8fbc-ba082c1fb401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 9b512279-803d-42cd-826b-c4c4e908002b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 a3b28a9a-7f01-4918-958c-483fec6d3ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 5182a6d4-0234-4e10-b8e4-bbaa70e2b16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 da0b0192-86bd-4b36-ad74-de59afd98a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 b60e0f6a-abb8-4163-8a8e-a6852c8d27c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 2a662372-3168-4b8e-993a-f7354ee5721d)");

unit.assert_eq16(16'hDBE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #612 d5f59a08-9fce-4dc7-92c8-d246ad4ff966)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h0A1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #613 6a85ebe9-0bf9-49cf-adca-0ff9e1d38dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 2d70a88a-3948-4bdb-8a91-95ca98fd4165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 0a22b284-6a1c-4a26-842b-9f4d58dc983e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 7c485e26-1866-4a18-a40b-9b693a48410a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 141f6e07-7a71-4fde-8cfc-f9341ed95514)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 dcced423-34a5-4bb6-80ae-17cb80c5dea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 20f10386-3935-4562-9690-1e4fbacf854f)");

unit.assert_eq16(16'hA5E2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #613 7dfc24e0-dba9-4bc2-a2f1-d4eb61d755fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'h0A9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #614 496e6311-adb7-4e9e-ba78-455c003aaaa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 40a9314e-33bc-49bd-b220-160ddb08572b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 c35b2e48-3fc0-4d8a-bced-7b4f74cf3d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 16262106-18d0-4353-965f-5c1df7e43dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 8c31a315-7987-40e5-8bdb-2780b2c4eeaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 0dfe472d-4fde-45d6-a694-ba20d339a109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 94f9ddfd-198d-4d83-b2f9-ed1d0a704391)");

unit.assert_eq16(16'h6787, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #614 d1315f29-2884-4e0a-acaf-e46ca40b1299)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h07E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #615 c5e06059-4b9d-4bc9-8d8c-65b39a2b2aa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 a81d1bdc-5897-4853-b069-3445a4c64c7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 6b7319ce-3554-42cc-b159-d5ad3010cb69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 56bae6f7-1fc9-44d6-b286-a9ecfc7b2107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 b08d940e-caa5-498e-b0e7-d168f711a5c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 5e0611b6-28b5-4977-a421-98f64d87b1de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 dfdf5753-b948-4c4a-8415-f1fa5063a003)");

unit.assert_eq16(16'h85A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #615 734670e0-6c42-4afb-b301-91802a7f728c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'h04DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #616 22415d38-8c43-490a-b915-7583af892ab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 a8248498-2b79-4aca-8449-ebb929f1f477)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 94d27d3c-0549-4cc3-ac99-37b343ba3d33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 577b8b67-9ff0-446e-a337-2e0f756cd976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 ff7ff82d-5b9b-4002-bda3-4ff5abbeb67d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 e6592027-2b17-4409-a13c-ebdd40588641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 8a1b487f-20b8-457a-9352-f64513fd3c62)");

unit.assert_eq16(16'h061B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #616 ffa787cb-b9e2-49e5-baae-5d1420e22044)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'h05FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #617 244cb465-1a3f-456c-810c-6aebfe198804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 77f7f7fa-72d3-429b-83d7-9527273cbc9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 3a592865-460b-442f-af38-26d810668406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 e3a06bd5-f1f8-483c-8abe-f7abc81e6f6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 b64b6184-7641-4af5-9398-01437f31e4d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 53a925fd-8a10-4fbc-a7f7-4d8ce5682496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 08e349ee-5b30-4079-b12c-faab0721db12)");

unit.assert_eq16(16'h1DA5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #617 53f19953-1f6d-4012-b40f-cda5c9288406)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'h0F5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #618 d9880625-66ce-4461-9c81-a4a0258911e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 778cd364-22d2-4c79-abf8-c919f53bd7eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 3d052db8-8dce-40c7-9e98-fda611cdb6cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 0dfb3a41-1591-4c80-a83c-655f9efdb03f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 a1f33186-465d-40d2-a500-7f155be75272)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 2b192a14-585e-4030-b5b6-c2a42bb5f986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 86e9c7e1-e991-4cda-af49-ec041afd5760)");

unit.assert_eq16(16'hE7D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #618 452c5ea1-c8a0-4de6-bf8c-2d24beaba648)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0359;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'h035B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #619 0e84b5f9-cede-485a-beef-b35ce9950df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 16432743-1c7c-42ca-aac5-fb2fca342039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 bf061c0a-100a-4e00-86ed-eff845e8e9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 b643269b-c7fa-4592-8803-dbe15d38a54b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 883365c1-1343-4795-8fec-2e7c3a04b00c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 03391599-4c72-409b-89b7-c30d0be14054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 be9bf602-dc16-459a-b543-c99fc2076bc5)");

unit.assert_eq16(16'h187C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #619 f6e375c2-e74c-4a10-a18d-db571ad029c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0528;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'h052A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #620 67479c2d-ed4f-4984-96f0-2f5459d9c61a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 552d997f-1bed-482d-9e06-fd8ca677dd95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 830dae18-ac18-44c6-a208-0f87f05b9eb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 ccaa445f-05ac-41d0-95da-446c752b4d6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 73efb713-47e1-4588-a99d-1b057d8f8dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 70b8152e-e59a-4cd1-bdb9-2ce41841c0e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 7962317c-59b4-416e-98f3-f7d44cf8ae50)");

unit.assert_eq16(16'hFB20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #620 1767930d-4bc6-4442-8d4d-56c942bcf80c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'h0A86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #621 802868d3-0f8d-4ffb-bd72-5c518deb251a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 60e63fda-6724-448e-8d21-41f5d22c91b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 29172827-e25c-465f-8ca3-d66a91cb17fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 2d8a3bbd-7a30-49c6-8568-cd075002cb3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 f9e1d380-db1c-4ab8-9a91-2b434bc382e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 939ead43-4db1-4be9-b176-89ee1aab8390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 1a708535-7f17-4c98-97e6-18fa269125ba)");

unit.assert_eq16(16'h1B20, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #621 16437ff3-ef7f-406b-a61f-da82bb22f80f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'h09F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #622 87495a4d-c90f-40bb-b4f0-8febdd0cef11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 5a8e48a6-9ce5-4c2e-bd92-b9e675af7e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 4a2ae084-b929-44a7-bc84-34ced0260a8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 ab4b96a1-5547-4c12-a585-ff3623ef154f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 305e71d5-832a-41a1-ac5c-2b40b177fa53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 2bff0171-d28c-41ec-bbe7-8575e9568775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 02603b10-b12f-46cc-8968-68f268c799a3)");

unit.assert_eq16(16'hB362, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #622 c872fe39-8b59-4123-80ef-752c758b4c25)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h0BDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #623 b91ad684-6ef7-48c1-97f7-218e050bfe28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 5dce4f39-d955-400d-a46f-fd1f60636855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 8fea2caf-2d89-4f4d-9369-d3af29dce232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 6d5dd7d2-e740-45c8-9cc7-6ca7b7298aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 934cb14d-0835-4d17-87bb-c3432812fffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 06e628c2-8e28-4e12-a33d-f0b9b1d457f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 6cb2f520-3b31-402e-bb0b-5061e0e92d28)");

unit.assert_eq16(16'hBC8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #623 0e21a480-acbd-49bf-9ea0-465a122519c9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'h0C20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #624 8461b91f-befb-4944-88a6-4546eb082c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 a5e0bed3-0ac1-4b99-8485-34c01b07ed5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 d643beb9-4a50-4282-a8ff-59911ff54c2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 77fc0c1b-eeea-46c9-90e5-eb82f101d61b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 bfe0bba9-a29e-424c-a8d2-54d781fe7d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 2d67621d-98af-4847-a40b-029d46eb7625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 fea18dfb-e8b7-429c-830a-54115b44595e)");

unit.assert_eq16(16'h9F74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #624 c562f981-4445-4409-8318-d746997b49f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h0540, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #625 fa84883f-53e4-49aa-b221-367b29a603e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 1827597a-a2e3-49d3-9604-9b17c7abbc3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 72a0c2b1-f6c9-4b17-8314-ba8ee11a16a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 47e0b160-ccb0-4419-8861-84e579f7fb3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 39f6953f-d8fa-4d92-a80e-7125b91f4fb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 773753ee-0f60-48f3-89f8-c78435ac8974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 786d00e1-d22e-4719-a34e-a06c729b9911)");

unit.assert_eq16(16'hD8DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #625 349cb8e1-e33a-493b-9da6-091ea2aa4faa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h018F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'h0191, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #626 ce85a09e-bc62-48ce-8def-e7c686b6fde9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 0d6b1374-0c7e-4d89-b074-799ec4022916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 2b56877a-3e40-4b94-94a3-4420111d93bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 a53d82dd-1e6b-48c3-b03b-518c1050acf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 b397ffed-2128-465b-957e-3f7c2d5af484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 e1ff8c96-18a8-46a8-991b-2b757369db89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 cf51073a-c415-4259-8426-b786d569de96)");

unit.assert_eq16(16'hE900, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #626 6c69d580-eedf-4f68-9c4d-4f74ea1fe87a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'h0DEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #627 7201b82f-f1e8-4e83-addf-24b5a94cc3e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 373d187a-f3c2-434e-820c-38e50b5f9dd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 4a65fe25-28ea-48c9-a442-8e4b0b7843fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 739a1009-a0b0-4403-bb45-5c087e59cea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 c3185799-0840-4749-859b-60d7e2dc39da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 443cd9b3-174a-4178-afe6-d579af295002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 e9c97f50-1303-43b8-bc05-57b5feea8f55)");

unit.assert_eq16(16'hA11B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #627 1a865345-3ba5-414e-8d3b-e8d9a09d84c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h0D0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #628 137cb698-be15-4830-81c7-5a1ef7fa436b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 5ea356ed-57eb-4f46-9f42-38acab9c0cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 8ee86b40-04ca-4a08-9eb1-700b41a25090)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 985e1057-a636-45c2-a7ea-02506a887b31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 050dec58-8855-4305-a651-968a96f9abc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 da243639-8376-44b5-8a96-66bcc8409f73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 500301e4-fb57-4d78-8416-a3ea5562ae35)");

unit.assert_eq16(16'hCDCC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #628 60a406fd-ba63-41ef-b04b-8e7350d7b493)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h043E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h0440, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #629 91e3d1d1-0132-4e16-918c-859eed53dd86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 af2361c6-ab63-429f-9fb6-09619a09ede6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 1e36bd9c-8c82-403d-92c1-cb65a665c08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 70eb21d6-63c0-4e8b-aa6c-6a07df669a74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 2299873c-5f7f-419f-94d6-9846b851de5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 0d98b386-7ad4-49c8-b0e0-3987fc601aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 381cc538-f571-4b9c-a911-48d84f2ae8ea)");

unit.assert_eq16(16'h3ABE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #629 b9137ade-ca7c-4f88-8356-2c9ca7b52001)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h0540, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #630 4f86e532-0e7b-4830-8ff0-ee9d28d0066b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 0c85ebc0-9265-4469-b72a-f0ccc2008cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 f8f6f90a-2d9b-4d21-9083-29c14ab41030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 3ffccdea-df2d-4a6c-bf71-115570a801bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 fd2bbd35-f6b4-45bf-969a-a5ab3ee51ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 447600f1-1fdd-4e0e-9aa0-b786c84ec4d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 af0b4df9-9ca2-4cdf-947c-a8b681bd844d)");

unit.assert_eq16(16'hD8DE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #630 3415fca8-4aed-418d-84c9-09f6ce091861)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'h04EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #631 527fc2d5-5ddd-499e-b586-efdfc6037147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 1b821a5a-9b98-4ae9-baed-a37831d61391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 0abc7077-62cc-41ab-aae0-92307bd16160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 51f20817-eb3d-4da0-92c2-bcc5d89327d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 e03b5e0c-9649-42e7-92af-96aa5a68f75d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 3c3fd673-60ba-47b2-9fdd-6869261b9abe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 1674f117-ac26-4a49-9c82-6ff229225aef)");

unit.assert_eq16(16'h6A97, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #631 a6d0cfd3-f45b-4dac-9fe6-608db19a4346)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0025;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h0027, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #632 ae35a6de-db79-4e80-9d30-ebc12ae8bc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 aeb06d49-dc80-4160-95c2-dad2a7ca9aa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 a923603f-2bfb-42aa-93e0-d49372b9dafb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 a40a7d8c-db2e-4157-9804-4c3909934d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 f0f80c1a-b5a8-4862-be9b-d1f733fec149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 c0713ef2-f8ed-489b-a60b-6e674dafe265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 f83138fc-893a-485e-9ecc-5522cd989e07)");

unit.assert_eq16(16'hA0B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #632 c5e4c0f2-6845-4891-9398-66d7094492f6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h029B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'h029D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #633 2b101e3b-4e42-43d9-92fe-fb1e24520f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 c7410edb-8845-4142-97e6-46b74d47ebf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 5b832401-3ffe-476c-95b6-a0a72c4ad179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 4c036b1c-1f70-45ea-a2e8-832cb9f2a211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 44cf1f34-d042-4452-9000-595545ec07f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 f19ea4a6-e385-4a5f-a397-670f13935401)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 c2c33380-03c2-4c11-8fcc-e5c80182201d)");

unit.assert_eq16(16'hA8C3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #633 3cd5d801-0a1e-41f7-a912-40be18a7c758)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h074F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'h0751, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #634 c816a498-6b7c-4488-ba58-fe18a29a9f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 eca49369-4ccd-47d0-b674-ac7ca74cf433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 dc2d6b08-931d-4071-bf7d-7b3ea5183a3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 4df930fb-f54a-4e68-be5f-1acd447fe422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 27150e5f-234c-4e77-9aef-58b7e44a1938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 a5ca3584-3942-4be0-a8cf-551893943dfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 de81ff00-8358-4e2a-84b6-7e8543ffd9ea)");

unit.assert_eq16(16'hDB35, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #634 da6c4b53-c8b6-485e-9460-53ceb58925aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h045E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #635 17b4e868-ea3f-4b09-b9a5-96218f52074d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 233af666-9816-4139-98c3-18c3e891f8ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 91bda7bb-e089-402b-8efb-95afb5eed323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 1a6b5aff-9f43-438d-b70c-f25848a3b7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 195554e1-eb51-48ac-b525-52bf12d29e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 78b13472-003d-444d-87db-364053cda56a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 65653ac7-286e-44fd-a7a2-aa32ad637fbf)");

unit.assert_eq16(16'h6D6B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #635 837dbbdd-5175-4a1d-8a02-fb2d0d759da4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h04A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #636 f53b1ca6-c37d-466f-b43f-d7d33cd7e9a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 7ef36c9b-a1d8-404b-9605-158b933a8e1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 a51c88a0-3f2a-403c-aabd-b50fa4f4f15b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 bfa24fc5-2802-43e4-bb4e-5fe1c5e7aa4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 274efbb2-5a06-46f0-b290-df2fcc351ac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 b1186a47-b31c-4dd4-a287-b553adc0d07d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 43b69e44-18c3-437c-8240-ac1217ccd3c2)");

unit.assert_eq16(16'hBC61, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #636 e95d3b54-46d5-465c-94c1-bb850409823e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0197;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h0199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #637 ad13388c-9bc3-492c-99eb-66caa9536964)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 fa9fa75f-3d7b-49c5-8ee5-97ae96c17255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 c34faf54-175e-4c86-aa44-216f25945c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 e2644b41-7277-4bd7-9f4b-2fa93aab8d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 921a4e14-ed75-4c3a-8642-16313b5c0946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 4f8556c8-aeb4-4c85-a298-23aa77215cac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 9e7e3559-a011-4c59-8614-121c93485b1d)");

unit.assert_eq16(16'hA9E8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #637 4b71169c-9fe2-4aca-93e4-0b985d7719b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0246;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'h0248, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #638 fa2c7182-2007-43ff-9750-2f13a6537412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 e0961471-0daa-41cf-bc00-673be5b03240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 a8a32813-aad3-4853-9e63-b2ae4b3a1a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 02ba938e-3652-4b68-b0df-8dfb9b90e695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 ea3c41d0-08a3-4055-b759-d749996ef9c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 5b7ce737-e5b1-4512-9429-256e2ed3f718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 e007e8a4-500b-494e-9e13-e8c3f87ed44c)");

unit.assert_eq16(16'hFE2E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #638 8ec9e978-26b6-4148-8d76-caf374dfb227)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h04FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h09B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #639 4fe58041-97fa-4402-93f2-0e291516d77a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 cd92d32a-89d6-45ba-8419-7cfe0e6b8bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 437fc8e8-4aca-4c0a-a59f-c556d9ab5d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 49f1d8ed-e4b8-41d6-bfba-91812f0d1dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 f6350cb5-e140-4428-a834-dbe55a425efb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 d84e616f-98f8-4a16-8d81-e260dc2fb31e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 55d7dc3d-e885-4d32-a9bf-612b1f793133)");

unit.assert_eq16(16'hA3D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #639 cc417eb6-9787-46f6-8758-405f378ea51b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0500;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h075A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'h075C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #640 2620cd98-f576-401b-b8b0-ed1259f5bd72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 7028478d-dbdb-42f2-8dbe-b5eedd2df7f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 198fb957-93e8-4e48-b131-71422a6050b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 bb43f813-c023-4bac-9cec-c96342177335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 deabc51a-96ab-4953-a14d-5ac7fc066b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 448e5999-0f65-4a49-bd6e-7f5c34a9c231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 00d5937f-65eb-40bc-b74f-84be07e9865b)");

unit.assert_eq16(16'h3D53, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #640 49aac279-dd1c-49d5-8234-76e0ed9c227f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0502;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h037C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h037E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #641 119e4e09-8e92-471a-8232-dd7d7897a9d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 f8b2c690-e266-4061-ba38-50b6ac6a77f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 dedf8e60-ac2c-4b2c-a78e-8b10cb3c87c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 d5fb7b57-07b1-47a3-ba0e-7d7391a0d04b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 0dd68bff-7e6d-4336-a821-35c62e07c07e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 94312e25-895e-4ba2-8dbc-8647ade2ef3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 8ddb188c-6ad6-4430-bc2a-bee0f154f7c1)");

unit.assert_eq16(16'h5AB9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #641 28eb93d8-503a-49d5-9bc2-229cfae8fb0f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0504;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h0D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #642 1c13cadc-4e02-4d37-9559-df7288b0705e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 54eed947-79e5-4d26-9ffe-21c2d630d346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 859055e0-573e-431a-bf29-580c4f6d92d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 1b957e0c-52b1-409e-aab3-88cc92acf270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 ec722188-8840-455b-9cd9-9c73deb4c734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 90f1624b-5bc9-45aa-bcb4-2ad71dceac9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 6facf422-15a6-4c3d-b75f-9ec674ca0551)");

unit.assert_eq16(16'hD824, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #642 9b600941-d055-4d37-8145-f6061cfdaac4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0506;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'h0410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #643 38ab03c8-1b73-4a78-84c9-204ae4bd80ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 e56f58f7-03a1-42ee-b5fc-d87473be1e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 c5e58487-80a3-4995-9399-27255828a7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 7e59fc8b-8f5c-459e-96ba-ad342e3af6c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 8372ff71-4dcf-40ae-8276-f5d4abd1c74c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 c02eb33f-87d1-4abf-9098-d1aed4c0daea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 3f7c15d2-c973-4f49-a09b-7ca2b11e085e)");

unit.assert_eq16(16'hAF2A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #643 879fc78b-1acc-48b0-b8d3-3fa7e61c3064)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0508;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h063F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'h0641, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #644 89f27d8c-b0e8-4edf-8ec4-a04b6ef7e4dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 c8839252-925a-41f8-9f54-b666db0f9986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 e253b220-b77b-411a-ae36-d69ad2b70a57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 091f45b6-355a-45ad-bafe-72fd25517750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 ee5fca78-3721-4b25-bb59-9143baa27322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 7e564069-2bb7-451a-ab4c-e7b070e1bf69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 9e842312-d4c5-43e8-991e-d4cc20a1af05)");

unit.assert_eq16(16'h2B59, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #644 1be96ab4-b36f-4cf0-9677-62fdf5660c3b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0567;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'h0569, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #645 58e98a08-73c7-4b50-9d71-cd52af6ecd2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 4a3ed020-d1d4-4b2d-a723-4c7c939e8966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 bb39e90a-07bd-498e-92c8-193051d2f050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 b9e0130f-0ff4-41c1-b4b7-bb6f41a25040)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 d5bcc6d1-3ea7-4083-9dde-b713751abf3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 6c741f5a-a307-49e0-b288-29e8d8001f33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 f5094a94-0381-4e71-8da1-b1e22871d6ac)");

unit.assert_eq16(16'hD546, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #645 c1858d64-2285-418f-95f2-f1f7ee8e8c32)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'h03C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #646 a6a48f08-6f7c-45b4-9dea-fbad485dde07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 80c6bb79-1d44-4f91-b3ef-23682064430d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 32a177d1-2663-4c31-b18f-fac6d09323a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 a2c076ac-6975-4090-b929-5ea7f806105c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 1bdd7505-3f99-4544-94f7-74f068659326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 f9901ef7-7ede-4d6f-8959-de0016feea26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 7dff0c4c-b90e-45d4-9be8-fa6e9d785912)");

unit.assert_eq16(16'hB9B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #646 1cfd2e9c-d12e-4392-952b-8740f3a99499)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h050E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0468;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h046A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #647 88121ee1-9277-4679-a81a-4b2d90e1366a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 9c98cc67-edeb-4d6f-beb0-1ff935c1eebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 5b7d1bd6-d662-4587-9897-05daaef24070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 b8be6906-f4b9-4bf6-9da0-a07419d8e893)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 45e4e548-9ca3-45bf-9c04-3264a8bfbe47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 50127de2-bc84-44c8-a830-3062b30c5907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 c7543807-3408-4b8f-a8c2-01e25428154c)");

unit.assert_eq16(16'hD107, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #647 6b5f9437-edb8-4700-b1aa-32c953baa102)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0510;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h01C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #648 d457d5e8-279c-4dfa-aadc-53c8bc39e09f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 1fb97c2f-7e8c-43ce-ab89-e5de8a22c4de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 e2ef78a3-0fec-4f6f-8ff0-43db324d6ca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 2a8f869d-543d-447f-9b87-d57d1500523f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 14d66e72-ea95-43ea-ba92-31bce0746456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 da52490c-365c-4a42-b189-c836364983a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 c1ff611b-664a-4e69-b33d-f08734325c28)");

unit.assert_eq16(16'h86A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #648 e21bcd01-ab53-4ed7-a12c-755ea0eaefd9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0512;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'h0987, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #649 91307050-8304-48bd-af3c-0fc336a8c7e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 eda516c3-1e99-447d-a217-43a79c1c677c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 15ed430f-d498-44f9-821a-5138f9b75487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 3d92a315-6041-4299-97fb-53419b51385d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 eeb5c565-0c96-4019-b23b-eda5147a95b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 5d371e22-b929-4620-998e-d270039928f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 89df274e-e095-4a0e-952c-71f2d478c47e)");

unit.assert_eq16(16'hD746, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #649 66a9db46-ccbc-4590-85a4-5040e480e176)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0514;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'h02AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #650 a6d5a7f4-bd9f-4b31-bbba-4580a17b4e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 3eabd747-7259-4b2c-ab6e-4b9cece7f5c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 233991bd-4530-4395-9f37-00f3eb85f76a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 4a797534-d147-4323-96b8-66e504ee2e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 aa665955-63b8-4489-b1e6-dcf9ca296a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 5e230990-78b1-4f3c-8ee9-d7c9e5560511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 e6b7a28c-dff5-448b-b1c9-9b82171c9aca)");

unit.assert_eq16(16'h3D4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #650 01f39ee7-441f-463e-939a-5995f1cb1770)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0516;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h016A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'h016C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #651 80ca51fe-9716-4ad8-84ea-dbd204428c5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 fe04c76d-a466-4628-a7d8-a8e2e08cde88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 40727c9f-80dc-4c9b-98bc-1c3594c3e90d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 1ea3bef5-eba6-4999-8d09-2f2ec37008cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 53b24974-076a-4b44-b816-5e30f8cc909f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 e41fde71-9b5b-462b-b503-4048ff9929c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 438bfc82-3f75-43ac-b77c-782c4c4858fe)");

unit.assert_eq16(16'hAAA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #651 7c7f7597-dd2b-48fd-935e-2416fa1f28b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0518;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'h0C33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #652 81deed27-ee37-4784-a48f-e54d19862ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 3ac4acc1-7e45-4607-adbd-41fbc38563df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 b842614d-10f6-415b-98ed-a7792c9397e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 50a3f69f-aca0-4504-816f-29d356d75bb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 1419b6cf-fd29-4cb5-b8dc-4172ec6d3177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 531f9e49-c407-4daa-aaca-52e8f5da9cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 4cae67d7-1ae5-49fd-b52c-32feef1327e0)");

unit.assert_eq16(16'hA705, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #652 c1385311-6c71-411f-90e0-31610e98539e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'h0B98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #653 03dfc53d-55f1-44e2-8ee2-e44ed83c08af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 176f1f40-abb7-4e10-9196-88966d0b24a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 c47068c8-5cd8-4e3c-a44d-49110a0cd05e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 04d4d04a-39a8-4846-b56c-864730c5565e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 88ba12a4-dba0-412e-a5df-122184466adf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 03ea8cb5-fb6d-4699-80d0-b6e7287d1326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 1e0b6eb0-8d2c-4b9c-8d05-3ee77adabbf3)");

unit.assert_eq16(16'h4360, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #653 efa00888-28df-4ce2-9db5-78332a579d36)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0708;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h070A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #654 6037e672-5a10-4dc0-9db9-6961a89bbb57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 8468a6f7-91df-4f8d-baa6-65e06a7e88ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 5aec4bc7-553c-4813-8414-5b1229f9c3da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 639bb3a5-93d0-4a18-8e6d-d2c76af83c3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 86513681-c516-4ac8-b5e7-c13e5b387c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 a63b6647-0737-4855-a907-300be43cbcc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 2c8829f6-c408-4bbe-baad-922d1d15192a)");

unit.assert_eq16(16'h6EA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #654 b245b6bd-d5f8-428c-ba73-c834d817c500)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h051E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0211;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h0213, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #655 93e469cf-f68b-4224-bef9-5982ccea54aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 6cd61124-a1ec-4a44-ab03-3b341ecbdb17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 274b6167-c2b0-43cd-bb61-1382fe078350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 24f91774-846c-47cc-a2ba-64b0370d0c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 f119a14b-4ea6-4f85-bacb-0da56cc44a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 dff2f83a-92f8-4a91-993d-2b78997a170d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 e02f0a60-7ae3-4e78-8a40-599922075961)");

unit.assert_eq16(16'h525C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #655 3bda48c4-2004-43fe-850c-0fee1881561f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0520;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'h0C57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #656 95fe270e-e6c9-4fca-a1e1-7c7994f13535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 21cae56a-919e-4073-8888-8ec9aa4cc469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 a66c443e-1b29-4322-b962-996666b6d1d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 8d5cfc2c-591a-47d1-8f23-de1a62e67d2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 a096aae9-1d03-4327-9816-be5d6edfa8d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 bbefa934-50da-4dc2-90f6-9eb6a531cf0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 114725cc-e872-47b7-b1bb-199d2b1b811d)");

unit.assert_eq16(16'hAEBB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #656 165dcb20-973c-46a0-9791-01d895576ec0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0522;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h0FAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #657 c877ff2b-b4a7-4748-a929-e243645e6db1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 8e46d6ab-c922-4240-a9eb-44b032d1fad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 57ccec7f-6ee5-4d82-bb05-b443fe094304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 20c0f436-b0e9-4d74-b9a4-f12b5372851f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 673d2577-2e6c-4601-bd07-ee0084741a79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 5059f7cd-497c-4753-96c2-a2716b6f535d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 059379a8-5731-4b6a-864f-f410760e099c)");

unit.assert_eq16(16'h1D7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #657 2b29692c-9fb2-4cb8-99c0-5bc08fd027b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0524;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h0F89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #658 3a10a283-ccc1-496e-a556-918eb66fa46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 7959e3e2-8f8f-4d1d-98f8-8c1d07814545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 aad2c027-422b-465f-8df4-3b99dbc665e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 3aabb2b0-87a1-4ae8-be4d-09363470beb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 02e8b6f3-66d7-4814-af0d-cc866d50ebd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 f9824843-97ee-426d-b138-85b6e6ba4eaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 c70ca9d4-83a9-4848-9796-7cc46236c66e)");

unit.assert_eq16(16'h1916, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #658 219e2493-0ed2-4b76-aa51-491e38fd71c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0526;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h070B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h070D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #659 aa4e37e7-33b5-40cb-83b4-ba3e03de3b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 fa8f007f-409c-419d-b90d-122ac485b298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 d8a3ebb8-d092-4349-8002-6dfbdd31c2bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 61207da9-99c7-4b7a-87d4-87d16d49f5a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 9bbe4cc9-a7ee-4841-aaab-f48916c0b115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 276d2711-7851-4b33-8685-e6d21205af11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 843b8cff-5895-4727-b2e0-eb86975121e9)");

unit.assert_eq16(16'h9FA0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #659 12fffec8-f6d3-4795-9fa1-e4f138d5cbd6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0528;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'h0CFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #660 3342c331-7e6c-40b3-8fbf-f10167475b13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 e05baba2-667e-42d5-ba73-0007595e97c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 8668b2b8-e10c-461b-9d39-8f14bb02352e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 5ebe2d25-61a5-47af-91d9-01920acfa42b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 22c051a2-ac00-4976-856b-58539586675c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 12fe97ad-5e73-4028-a9d5-1cc9bf93cdf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 e52289a5-6c9d-4c53-84e8-9731f6381dfd)");

unit.assert_eq16(16'h24FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #660 e1a595af-a680-4d4d-997c-6ac0696d023d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h008B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'h008D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #661 2be6ccca-f490-4340-aef0-e41a6164ccc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 ec9cae3e-be75-4070-ac3c-662417ca8071)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 f46b71f9-4a6d-4df5-bddc-6ad3d3f06d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 b1606051-4f1e-47b7-9032-511938e269e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 f8010461-7822-46ae-8477-1f6b5ced5155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 2e0edcb8-9099-425f-815e-77e72c4d5aa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 c6aa36c0-ba9e-4f93-bdda-bda6a24edc73)");

unit.assert_eq16(16'h5F66, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #661 191ad4c3-2485-4adc-a253-e2061ea12fe4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h0FC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #662 f5d291cc-8749-477c-83ca-8031c842d31f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 5c055697-2ff8-4b72-959a-36c429b5ce3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 51396af8-b332-46a2-ba4c-9d851f0ac101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 d2d7ee0d-e434-463f-b26e-2bcb89cb753a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 a31674f1-3a4f-4252-9b11-321bee8ee0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 810383f4-3342-4d5d-823f-c027abae276c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 c370d37f-34e5-425f-8c01-c6a7c42e8b0f)");

unit.assert_eq16(16'h6AB1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #662 44e9fff4-ee93-44db-b3e6-329f38bfba58)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h052E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0436;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'h0438, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #663 bd35168a-db44-42c8-ab76-8cd75cba08af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 a04a933a-5177-4b86-b04d-1de0deacf96c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 339205cd-c101-4781-beae-a580b8852fc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 52a6b513-acfc-47db-a1cd-1ec3a6fb3c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 56bf1289-df5a-4354-b899-ec4ff601b8e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 e9f840cf-6a11-4d74-b02a-cdbcbc7ca128)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 5f66e49b-45e1-42cc-9a71-c9e75faee8f6)");

unit.assert_eq16(16'h0C1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #663 4d31768d-fbd4-458e-b192-e4971b6127a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0530;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'h0C47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #664 2d81e539-7d3a-4615-9497-41a2e14b83a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 a892fda8-3e6b-446a-bd1b-3c7f3bb80518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 1ea29be0-017a-431e-8cdc-113ef28382bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 c17a3e0d-f196-49d0-a500-32b886500bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 897379de-cd2c-4197-86d3-eb94f052bf1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 d7771f5b-8ce3-4a1d-810d-113e5ed7ceb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 a3ce6a22-42f2-4ad3-bd45-6ae1bd9208ba)");

unit.assert_eq16(16'h4798, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #664 441f103d-032b-4367-aa4e-8fa8f51d4d7b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0532;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h0CAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #665 25a102c4-5cf9-43cf-a8ad-677c40d91056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 d7462547-f618-4a34-ab08-f5c3ca1265b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 11d07806-5098-46a3-8850-23b972dfde07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 f30a9b69-fea9-4c01-a4d8-3cad827579e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 4772d42e-2889-40e3-8be7-3515b1eace09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 1dc9eb85-3dad-4642-b3ed-1ea32b4e2b71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 c9ae0a0e-5cc9-4a74-b4f1-62d62b8b17fb)");

unit.assert_eq16(16'hF42F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #665 c3f63024-b462-404e-9952-999c5cd2c2bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0534;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'h02BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #666 54ab6a8a-07e3-4260-8048-df79dc10ec9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 f6a75b3e-377a-4c2f-90b9-245d779db28d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 9094c63f-6a37-41e4-ad9e-eae8b2dee4ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 4d06b1e6-9402-4b6e-bca0-8b10966c3f5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 840f0b15-7d45-4bd6-bdf5-6b37c69716e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 fa8ceb3c-3b2e-4af3-b274-d60ca380d895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 9e4f96b3-6f43-4ef8-8a33-fcd565f6b547)");

unit.assert_eq16(16'h8C0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #666 3eaa53f1-8808-44da-9aa3-54a4cfb9436c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0536;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h00DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #667 bde6eee4-fe54-4b07-a5bc-d218ea4a8bfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 6a078d03-828e-4299-8778-bc331496adcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 93f619ac-6887-4a94-a519-d509b133e275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 43e38f2c-18ad-4c89-bd01-8b8980bd401b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 e91b0b15-fcd8-4498-91ab-e6fa371b89f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 a0358e2a-7948-4f18-96ac-19595bb80846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 20159894-5fe7-4d56-ab46-55163141b617)");

unit.assert_eq16(16'h29C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #667 be7710da-d7a6-42be-b091-78be406ccbf3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0538;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h04B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #668 2a27387b-89d9-4e54-844a-5454e59eea17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 94d7a874-a80e-4b80-995b-c305a3b1c826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 642d0957-0edc-461f-ae85-1fe7a9ae5333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 8167694f-a0a6-4ac6-ba9e-76506e8fc544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 bd81709f-723e-458e-8eb7-b30992f8bb11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 38f125ef-8313-4e19-9f00-fb6198bd9ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 8d2c70db-69f4-4b7c-9568-b4c72482a022)");

unit.assert_eq16(16'hDF33, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #668 dc210749-9924-4687-848a-770166a96a73)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h0F59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #669 fc53aa84-33f1-40f3-b196-d52de8070055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 ccbdc21e-bac6-444b-8f33-4c55f60f9029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 305b5d7d-947d-475d-a94d-f1ba5d240393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 e77716eb-048c-4759-96be-f0352e4b977c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 3691df6a-6e23-41b2-9c6e-cdd22e5661b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 4389366a-f16d-42c4-8df3-ec7e06318160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 77c69544-e618-4d74-88cf-bf8e97c2d595)");

unit.assert_eq16(16'hD225, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #669 ea0dec94-0008-4092-a286-7a446721b9c9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h0BD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #670 06db02d9-62ed-4092-9a54-233a782e07d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 151fbaa3-572b-47b2-bded-ce53215bf622)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 5a360550-d6b3-4d9f-8506-6ba99578ef9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 f83944fe-34d5-4691-802e-c5b5b0d30b8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 429af308-6f61-4394-b854-216e5dc1def8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 614e539e-059b-420f-84be-acafbc9083cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 94aadaa9-8feb-43ef-b3bb-c1e15ddb3ef0)");

unit.assert_eq16(16'h3A96, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #670 b1c34d45-39a8-4f18-809d-b7f8f246d7f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h053E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'h0CDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #671 540c133a-9a58-44f2-9ad7-2ec2f3e35cca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 9bae63d2-5388-4632-875e-cf4aff1ecb52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 92518ff6-1b73-431c-adfb-2e57184f3020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 d4d03d2b-5b26-49d9-8b26-bd384f64d5b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 ed80833b-bd67-4876-8ed3-a749b8dc47e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 81b257a1-015a-4ec1-8dcb-e45b6e97e866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 ea54c067-92e6-4d5b-8583-0c3abd932eb6)");

unit.assert_eq16(16'h4517, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #671 b8e0e63d-2027-4a0a-84aa-bdbe3c9ada2f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0540;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h0F24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #672 c8a5d4e1-b317-4b7a-9661-a1b18c86d85a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 5f3bc251-1fe0-4d2a-b82d-25f95a69d921)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 0de91136-4933-4948-ac51-017d5fdd82b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 4ed3dcde-6115-4d8c-8f96-cd10440e54b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 43d66db9-4e3d-493e-8c28-b2fdffb9ea6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 c4e581c6-89b7-46f5-8310-652ebee57bf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 8e501876-2419-42bc-b3c5-c487003a7563)");

unit.assert_eq16(16'h1A18, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #672 56c17933-7f91-4b2d-8e2c-fb5ac08dc19d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0542;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'h07B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #673 b14df6df-4c71-4039-8006-03d7fd620333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 282e558f-084a-4405-a2c9-ab31719991fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 ebeec8ad-5f7f-481c-8fb3-ab328b31e64f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 5c07b3c2-1a06-47d5-bb98-24651f2fe0bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 08df172c-7322-49b9-a3d3-dd6b15cba2a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 a610fd14-bc70-411c-aefe-4f0c795d9aaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 d69a5ab0-ba45-48cc-a0d9-51c6a00bec99)");

unit.assert_eq16(16'h5B19, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #673 185dd0f9-40c0-4f9e-98f7-2bf791b186f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0544;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h0DE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #674 a252229d-b913-4d4a-9048-9411baea0d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 a8865007-09d7-4651-b360-77f050feb7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 dce5fbe0-3b1c-46f5-98b1-43aad4a4e805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 78468390-602a-4895-bd85-40841638f55f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 7ced7baf-e889-41a7-a456-539c731c147c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 298e1f06-2727-4d4f-afcf-9d73a956950a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 c46244d3-e2ed-432c-8b8d-5d04a46bf822)");

unit.assert_eq16(16'h0A18, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #674 5d706015-fa41-4f6c-8688-6c494f158cec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0546;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'h082E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #675 02e018ca-eb26-45d0-aa58-711cb31d2cfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 16477551-0c35-4394-9935-08f7ef7019c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 a0736599-ec58-43d7-a5c5-32fe7d9d115f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 08291558-ab80-4c88-bc62-e01a99e4c938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 ee44d76f-6b20-4b28-ba92-b379ebcd8ca2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 eabc5f33-f0dd-4650-8c25-f4b822c3525c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 f91e29b0-37a6-49f3-b04d-44568650b400)");

unit.assert_eq16(16'h70B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #675 8e0ec35e-a19b-4170-9e69-b993a16c9962)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0548;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'h03AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #676 57acac8a-cca1-42ce-86b1-b35eb813979a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 e744a53c-048b-487a-9e29-50489d0d43e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 5093e2b6-3556-4e91-8dca-3a0fb681ba63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 37dda005-60a0-4bbf-8a25-283512574df8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 cafdc73c-a7ba-49a6-8246-9d847b3ae859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 2ad5090a-de97-472e-a834-d5a4098a5811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 f232a52a-d1f8-40e8-9d70-5ee2a1da0965)");

unit.assert_eq16(16'h48F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #676 258fbe26-2c08-43b7-96f7-9a313c39519a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h0F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #677 9e152d71-a5f1-4e59-b285-09c9ba3193bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 2d258d37-a67b-488b-a134-5d7f28ebd332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 038a2e45-b362-4d36-9394-1fc6fd611497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 9848873b-6090-42a9-9b38-1f91f4e7f933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 3a9194ec-ebd3-4ddf-b67c-55af1f6a3010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 6a407ea5-3fab-4678-8e91-2a3c451e5edc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 eeee5e90-430a-4219-ad00-282ceaeaa618)");

unit.assert_eq16(16'hC753, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #677 4902d438-7e0b-4a8b-a803-aee041814b8f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0718;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'h071A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #678 f9e0b9fb-9fc2-48b9-a69f-aa6f43b91b67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 cc18a899-db30-4f72-a5ad-748ed6c1c43f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 2879541a-9bd1-4cae-81b9-354e97a12fd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 0475c7d6-669c-4ee7-a078-b3a0e4c82905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 6ef767b6-e778-4bf3-b88e-0cebdf9e3283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 62eeab99-c756-4df0-8c86-a59209fc1d4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 51372979-facf-4df7-a501-2e757a7c579d)");

unit.assert_eq16(16'h2C54, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #678 ada8ed23-052f-45ac-8323-0924486a60ac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h054E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'h0B58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #679 4e2e2f9a-58bf-4581-8c68-bf4450f38704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 e92bac17-4512-4644-b78a-fbd334c759af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 7d1fc9d8-c251-45cd-bafe-a959bfdc8e32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 6ce58f6a-b773-4b6d-b12c-4f8dba82cf58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 1bde65da-69cf-464d-9d5e-85f7e13bf96c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 ba15539d-24b5-4703-9574-126e71e7ea83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 5c16ee04-1879-4e12-9a67-b99faee8bacf)");

unit.assert_eq16(16'h36CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #679 9e1c0706-ba96-43fe-814b-2d8051bf1039)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0550;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h0B45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #680 ee70ddf0-b232-4439-8401-24a606b73d78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 e69c71cd-c4b7-480f-aad5-bd52a3996d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 8b874d5a-3edc-47e3-80be-81f224eb731b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 afc01d6f-7236-40b7-b0bb-9a412599a558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 0bf3c0a1-488f-4c4d-b7c6-3548da56517c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 ba688ce5-f046-43e8-b491-4d06b74fa452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 98a5dacc-99fa-4bcd-a9c3-61332eda86cb)");

unit.assert_eq16(16'hC61D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #680 b1c07d3b-b1a1-4593-9d07-40e5725067cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0552;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'h03D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #681 d8a678dc-a99d-462c-9024-b7f1fb34d821)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 e5436093-7376-4ce0-82d0-2bf327602581)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 ed35a9d6-4979-4753-8a87-3e2b81799a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 6b279868-ba9f-4308-95c4-edf2726cf188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 bd5e1a62-da69-4c60-a7b2-ec0f1cb82708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 ea33c2a2-4eb7-4036-a059-887a59b4641e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 9691036b-8b4b-4289-8ade-aa14b4868bff)");

unit.assert_eq16(16'hCBB3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #681 ce0503fb-e1c6-464e-916a-9ba7ca51e13e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0554;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h053B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'h053D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #682 37899671-3e91-4fba-9dd5-be372683dd4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 85c7d8ac-3d62-4d2b-a87f-3ce8b30b594c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 4c916a28-557c-4e6c-902a-f8b8712e0d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 9b7f65b0-ea4c-4fc6-8340-7e226d4f142a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 d6dae920-7050-407e-a76b-2e65cb7d2a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 9c14e95d-d844-47c0-ad81-d4d741069246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 e81da267-1b98-4611-8c7a-2a2837e6d6a3)");

unit.assert_eq16(16'h07A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #682 17163f1e-c928-4e3c-8fdb-d48a65c17463)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0556;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ECC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'h0ECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #683 5b8cd01a-8b2d-415e-8441-49827f038595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 a46a0361-bc4f-4649-a90b-fc5078cc19ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 d755e8b2-2ba1-4d43-a016-29272c95f300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 42508e80-5932-47ce-b004-1c8c4e1a5cb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 544e358e-83a8-43ed-bdad-2f8d1b3d6cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 2f2a9230-868f-4be5-b685-d8788be09e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 d95e78bb-81c5-4694-8d6e-f37dbf22c2d7)");

unit.assert_eq16(16'h7614, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #683 66c462ec-3a8e-4569-828a-f7e97ff01ab3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0558;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'h03C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #684 de7297f0-f3f1-4f95-a0b8-62e584a1ca39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 2867256e-4231-4a76-a0e7-3265373a13e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 3ece2200-9c31-4952-8ff3-4594a7e85d8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 a6222010-7aee-47c8-8cbf-f75e66c01645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 b8c2f2cd-3c90-4da1-a7d1-9781d782f475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 36c3ba51-a09d-41ce-b65c-1c2729870ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 113b9c4d-9c8a-4abc-a08e-bdcce0672820)");

unit.assert_eq16(16'hB2F2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #684 3ee8cc8b-e1dd-4b9c-bf0b-91f6c9a52b97)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'h0B3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #685 4f3b1f85-e3e1-40ad-9441-d5dd75d81e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 35d4ae96-cde8-4311-8cb2-d7e065902f05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 af75f3ac-c9b9-43b2-9c4a-e85b23606401)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 844efa08-8e68-4274-8a08-a6f13de90a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 6d79c3e4-4760-48e2-95b7-ae22caa3f30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 96a08e0f-d3ef-42b4-b6b9-0ba226175f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 06d8bd0c-3cef-4cb7-bc08-7ac8a78c8481)");

unit.assert_eq16(16'h174F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #685 1b440250-9431-406c-9b37-d4e5e9df78a3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h03F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #686 8f200350-8fad-4e0d-82e7-12752f78f661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 00c82b7f-f4fc-4c6b-a8bb-17b0ca1150fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 8def3015-8546-4d65-a77a-bb96931ae020)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 5f429949-adc3-4ddb-b199-177982ec00da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 ae72c2ca-04ac-4b4f-9a3d-444999d1cb28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 db689079-da1e-4a87-9bed-7c15e0cfd7b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 dfd516d0-a523-448d-8a48-7052c66bd06c)");

unit.assert_eq16(16'hFB42, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #686 dab6bca1-51d9-44e1-8a8b-6da115fd4204)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h055E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h0DC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #687 3ee791df-6db1-4d8b-b66b-f54807e7418c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 cf134e72-a86f-4c0b-83b4-e61fb2ea8d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 16ea815b-4c54-4ac7-aa2c-731bca08f387)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 9e0a07c9-dbaf-4763-9f3b-90a2736bb513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 fcb49d07-68f8-4fe3-8ec5-74dc473cb576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 ccfd8d4b-180f-4b2f-8077-af20d603c853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 1d32b528-4082-45a0-98bb-c6ffda686827)");

unit.assert_eq16(16'hA668, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #687 fc53d7a6-42e2-40fb-859b-687e3d49c7ab)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0560;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'h049C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #688 4ede0502-8e10-40f6-a528-92abc3cc5529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 2a38c59f-7f4e-45e3-b8d7-cd757df88d6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 782475b9-9019-4258-8c50-ff84b5c4b51c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 65812a50-ee08-4a56-a7e8-bc5219e0c142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 62fc1a43-b1a7-40db-87b5-37f0da4a071e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 d7ea81ff-77f1-499b-8ffb-1e3330702c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 39630e52-b34d-47e4-8507-5f207e42c375)");

unit.assert_eq16(16'h55EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #688 ae503179-b043-4b89-be51-69628ce7e072)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0562;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h0B49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #689 c0e73e20-74d0-4318-a512-fffff1416042)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 fb710d5c-4436-4dfa-a947-a43b296b266b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 8bf0b1cb-ce47-4fdf-8ce1-22cc026d7938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 728a0d09-3a78-4c7f-a950-00fbc2679078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 b77eab73-025a-407c-bee9-89d413f8b8a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 4220bc93-acf2-415b-a2eb-bbcbea22e946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 caa47448-b671-45b7-b5cf-ad4b315b3c94)");

unit.assert_eq16(16'hDB8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #689 cdd71c93-1ef9-4fa5-99de-c88719a515b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0564;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'h0C18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #690 c2603589-5197-447d-bd4f-cc7892eb234e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 70d23760-8419-42c6-8046-f1ab4c74669e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 8492ddb3-9967-4f01-8aea-66a15ca06443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 d93966e9-e13b-4658-98ec-9514a289bf95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 8a4fba78-1526-49a8-80e7-64736715205a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 72b65bd0-c375-41ac-af40-c05ba7f4cc5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 d4a6b01c-e2f2-495f-aec7-cd96daf030ec)");

unit.assert_eq16(16'h8753, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #690 f62d5082-8f25-4fbb-ac73-f57543744a7f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0566;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'h03A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #691 93ebf30b-c6e0-4101-b6fa-791afee39a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 3bd0f8dd-04d0-4097-931e-05fc4e59e10d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 5c4e88c9-6ba5-4b07-85ed-5ce500ed3492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 488f3a23-584e-4b71-980c-07d259fd7d84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 c1abbca7-9e43-45d6-9a77-22c385132c28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 87bea5c8-7a6f-456e-ab9e-aafae82b739f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 e83b8d98-099e-4774-b700-5b33b877b277)");

unit.assert_eq16(16'h3781, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #691 8bc83e90-816c-4aac-83bd-1da7ee777c34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0568;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'h0A61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #692 84206cec-be5f-44cc-9967-b15fe1092525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 bc0bdb05-c634-40bf-bd64-6fd48b0a726a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 71691d0d-8f5b-45c0-b5ec-479254a09099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 26dbdcfa-8054-4ba6-97ac-d7f8a9bf2ad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 84913870-e436-43ee-b5fa-9ae255261231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 2a8a07c8-8b2b-4057-9707-d97970f7f150)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 8db273a5-d1c0-4029-a4d4-d9278de7b329)");

unit.assert_eq16(16'h59EF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #692 0ba50fc1-0c70-41da-a740-fc0e38bb9444)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'h0A8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #693 62448231-abda-4a7d-9ebd-2df15a1d5bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 413c193a-8633-4ef0-a997-dca0aae0ea35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 2bfd5f98-d3d2-440f-bee5-e4fc8edcfea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 8596dfdb-e6cc-4256-ac7e-ece06eff80b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 2cda595d-b48a-49c2-838e-9ac15c47ce99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 b2a8d1e8-2063-4f10-bbd1-86d6ccacc144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 52482918-99e9-4eb2-ae35-86c04ec0e5c7)");

unit.assert_eq16(16'h7078, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #693 b290e267-f08d-4351-9c56-00cfb4be509a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'h09DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #694 0ef30c86-cab5-445c-8214-61643bc69243)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 94b77eac-8284-4b7f-8f06-5077860933d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 96bd8f6f-bb52-48a3-bd4e-f48e9486e5bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 29907b66-c00a-4da5-9168-8fd4731bda1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 8e4e00f0-7dd5-4334-a064-147b46b2a882)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 b15fcd09-f176-43bc-8d20-7e5f8b63a622)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 08f09b03-8af9-4784-bbd0-6e1510ffa693)");

unit.assert_eq16(16'hB0F6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #694 2ac3eee0-a69d-4ae6-85ef-f4ddab000b9c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h056E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'h00BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #695 2df7fe9d-706f-45ae-8470-26d0e1751212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 74feea8f-bdc0-4ab5-b196-bd23c7c38ff5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 9b4e7b3f-58af-4795-aa56-ed5412cd4c42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 ee897a46-2e7f-4f47-ae40-e394a1e0d4ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 5981cb11-5a86-4337-a4a4-afccf6df4f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 4f862700-b6e7-49e1-bcc4-73705c7542f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 adca46a9-f515-4c45-9fcd-938a4b149e1a)");

unit.assert_eq16(16'h08E5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #695 0fc5b3a7-31be-42d0-b74a-2ce318b1abd7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0570;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0010;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h0012, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #696 06de2af4-cec6-4981-a937-def29161a3b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 526b78aa-f30a-4f7c-b9c7-fbf633d97585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 b57005e5-3875-4c59-91de-12b6a3ec0013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 61b07ce2-14d9-481e-a1cc-3fcacff4d796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 acac98f0-9f31-48d4-b37b-732e030c8bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 ced24286-6104-4817-b0d4-e370c3e3bf8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 81b67087-3b4f-4823-bc64-abd32758eaed)");

unit.assert_eq16(16'hD37E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #696 9368fdf7-6bbc-46cc-aef1-383427451651)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0572;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h099E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'h09A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #697 2c551500-219c-4a6d-b371-be1613054f52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 bbee8568-0ea8-4d0b-81b4-7e7012d6b2a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 9ee1e97f-d2a3-4eb0-8d83-75d172a2bde1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 d9a98bc0-0bac-40e6-ab01-4eeb961958da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 f773b10f-9734-49b7-9e6b-88eef8b7e9bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 bb957717-8803-4190-8b21-522530a2d295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 ebaf4c0b-dcdd-4346-9c6d-63f27174d6d7)");

unit.assert_eq16(16'h3DD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #697 004c7fb7-8225-4177-ac53-5151ce57ec15)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0574;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0460;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h0462, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #698 9e847e7d-8715-4661-b2ca-7480bd6a5570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 a2c47494-1f24-43f0-b29f-d69a79123a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 fe9a1c8d-9d61-4f9b-97a6-4357c6cad231)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 13c561a1-14c0-4f59-a383-ace7cb1f0f28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 f63bdfd0-204e-4144-b914-bb6df5c15dbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 7a9f87cd-6142-46eb-8d84-526bab7a628e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 0c9ba099-2bbb-4a08-a0cc-13265016dbf0)");

unit.assert_eq16(16'h2498, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #698 5cb69aae-a103-45d4-b1e5-92262f8db5f2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0576;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'h0C51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #699 10dce691-cf73-4193-b64b-022a4195ed82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 f6f1bb84-23a5-4074-9f0e-4a4952796107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 b0bbdeac-2772-4dc3-b31e-09117f63179a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 ace05bdf-a6c4-43e3-bba3-06a17f343361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 f9c0b3b1-2628-4721-a068-1f41612ae2b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 818bf9a8-a0cb-425c-850f-241c5ba959b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 eec4f275-94ec-46b6-9e4e-58dd39e2314a)");

unit.assert_eq16(16'h1113, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #699 fef2ea55-126b-4606-8d17-5869af5d717f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0578;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h098C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h098E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #700 93f0b79a-c9c8-4ded-b929-ac4d20e81350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 930f2138-83af-4656-b11d-e5695fa68938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 33de760a-1e73-48e1-af1b-824973bf8c80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 226769d4-bb65-44e2-9cd2-0e5d0cb45e1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 04c6811e-fba3-4b30-bd98-1f12fbf770eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 9577bb0d-6e15-48b8-919e-749e02f5f0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 5a96739b-e90d-4954-a673-452e8adb78c8)");

unit.assert_eq16(16'h6C63, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #700 4505dfaa-f49d-4261-a370-3dd85b7c7ee3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0401;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'h0403, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #701 1f412bc1-6313-49f5-8e08-86d7358aa902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 272c2690-888f-4fff-9bc5-6317fe9ce98e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 8690f2df-9ce5-4cb6-8984-1ae71bc5ccbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 eae7d9f6-d0fd-41d3-9583-22ef5762795c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 49cc9943-9163-441b-aaea-d0ec80bbcc60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 d039983e-3545-48f8-800e-39a0c7befa3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 e74224db-1029-428a-ae86-8bfdb2e8d539)");

unit.assert_eq16(16'h7702, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #701 7bf3065a-e633-465c-92be-96f6ceb835a9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'h0C93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #702 17a20814-35bd-417a-b9c9-e80ed8e004e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 877b4d84-561b-4375-9e6e-497bbaa14da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 7431c2f0-666d-4b78-8b8c-04a3f97db5a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 29ad3401-ece2-46bf-b595-f7a47fd2d164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 36e279ae-7971-4c0b-a90e-4a92f08b3551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 f87ee48b-3f11-4ec6-98d2-0d5d8e9e08fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 8dd8ef43-676f-4b0f-b6ab-49e20894a916)");

unit.assert_eq16(16'h384F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #702 d31d4386-433a-459e-a748-660d84ab2cc5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h057E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0156;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h0158, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #703 0842a2df-b5c5-49c0-ae3d-da3f478d157b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 33842d9a-97a7-4fee-95ce-312c961efbc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 32e2f9c2-5f4f-4b67-b06e-9c1bf2863dbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 472d17f9-ddc9-4641-a9d2-a54a9f07a8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 289a3d68-42e5-49ad-990e-c11ac6a20c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 8a7f0e82-6856-4dc5-a623-89a13bd0575c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 b3798900-a949-4ae1-91d1-87093bdb94a5)");

unit.assert_eq16(16'h81BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #703 99360c25-de86-4a13-9836-14e186ce458a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0580;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'h08A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #704 e61feba4-d582-47cd-bea2-2bb40c6d203a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 f8a5fd2c-fad2-4928-b132-d1fbbcb34003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 bd4044ef-444e-427b-a735-4f1d86b25331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 2477b8e3-f823-4779-bf8c-ec880947f137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 0719a572-7256-4d28-93e0-a0d45ba2bfbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 df238558-bf1f-4743-925a-5feade49f5a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 bce0757a-7f23-4ff3-8331-838b0bbc6088)");

unit.assert_eq16(16'hF870, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #704 da6d172e-56b9-46e5-b8be-7d5984f93b4e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0582;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h06BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #705 a0842d75-0b4f-48d8-8934-082ce1a0c8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 da383ac9-afc4-4deb-a083-e414fd1e588a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 8b825ab6-4bf1-4afe-9f05-6a9bafee9eca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 0d715649-905e-4eac-a5d1-7a9231bd7d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 a1a10b6b-2702-4449-be97-19b3eabe201d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 9cc46109-6c49-4a19-8033-4a0e4fa3804f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 0cf29b81-eee4-4b37-9698-05a720f38e88)");

unit.assert_eq16(16'h3CD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #705 401e7643-9a8d-41a6-b25c-983edabd6457)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0584;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h00C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #706 aac1a7fc-d2eb-4c24-bb5a-240c03a6879e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 0d65776f-3c46-4817-9d80-dbd40293de98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 b1c17d3b-4537-40d3-b6ac-c5f1127dacca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 e8495a7f-c93d-4a7b-ae1f-226cc1425745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 84952367-289d-409d-9c52-c1ee5fc0eb43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 5deeb6f1-9a74-4852-a4fe-c3f2a333224e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 8ed83f25-b133-4134-943b-de2718f2425a)");

unit.assert_eq16(16'hF899, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #706 4fa82925-b748-455f-8426-3421368a336f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0586;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h0C92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #707 520cf4a6-4739-41ca-8225-d774d42257f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 fdb05224-c2b9-4cff-84c1-20980c1a1091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 47c6b96b-34ca-4bfd-a6f4-1efc90c5439e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 d1311ee2-e6a1-4949-9a4e-eb7b1ce48ecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 3654dd25-d7fe-4e73-af1a-ba1f4e9adc20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 bd525ccb-81aa-488c-840c-9485bf3e9669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 6aa6b11e-384c-473e-b959-cfd973250c19)");

unit.assert_eq16(16'h4FE7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #707 7e600fe8-14ee-4acb-9b83-88b9fc4aab76)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0588;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'h08AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #708 45831c27-0305-47c0-89c5-8101544e8d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 61d08094-fcf5-4d32-8f68-00f930f1fdd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 1c156c01-d744-4f8c-8de4-e3d502a81a4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 33d64228-a7f3-47df-820e-0f3bc28140ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 6246efdc-bbf7-4ee4-bee8-bd674afabcbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 6ad802dc-5f49-4867-bfac-a220357f70b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 d77c2e2f-8a39-4b50-a773-ed3a99262409)");

unit.assert_eq16(16'h0CA9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #708 879ef233-c2ed-48da-990b-d73e4ebaff42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'h0A5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #709 7e0cf17f-62f2-4fb8-bead-f75fe3bbe761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 b16331c6-cf5e-4ba3-8466-b658e0c9c42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 b1b239fa-84c3-4331-9f50-0f91d5bd7970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 15cb1ee6-547c-4792-a6a2-27ce86d5ba11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 4177d8eb-7a5b-4a1b-929d-8a4848c9fb81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 0451b5eb-57e1-484c-a706-58a42d6b9292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 e8689707-37bc-4cd9-9299-c9ebe8c6cf4d)");

unit.assert_eq16(16'hD04D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #709 021398fd-8a19-4bc9-b228-b4d7f6d020df)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h047E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'h0480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #710 a53fb8a6-7ed1-48e2-9f28-91a9f6c5fd8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 a23c45e4-3dbe-436e-bfee-055de33bfc20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 069a1864-4779-4f29-aeac-694acb7e23cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 2b97c15e-635b-4771-8395-2e4c7f9c81dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 734170b8-4e62-4cc4-94c8-39ccb7494de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 db84ba2f-be47-48b3-8909-d8ea848e8269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 31af7464-f71a-45ec-9d78-c2388f812449)");

unit.assert_eq16(16'h9F5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #710 0d579a85-3680-428b-b173-1abb0726de66)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h058E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h061E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'h0620, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #711 b311c18c-c374-4d5a-86a2-2f6c621b3733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 10a1daac-709c-4a38-861a-f06047b22d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 b283422a-2dd3-405d-bfba-d1102a3842b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 d7674486-9481-4d2f-94e7-891e0dd04504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 94edd923-56b5-4818-971d-b6b047f9cd42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 ef41cb8a-1767-4ee8-a9b7-1ef24f376dbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 6de97de4-0d00-4a99-bc75-cad784ea0fd5)");

unit.assert_eq16(16'h1AFB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #711 76a097e9-9154-4275-b180-35aba78eb654)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0590;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h070D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'h070F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #712 d2ceff54-c7c8-434d-aede-353b8479b1cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 7057ae10-639e-4827-bea2-71dcfcfd3708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 93a7782c-fc10-40f1-914e-16a6577bcc14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 07d855d1-c613-49fb-9fed-e629577cce96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 5ddbaa76-247c-43b7-9175-cbacf8fc6c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 289f85fa-0a4f-43b7-96db-38b155111cee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 cba92c7f-cc86-4df3-b918-9d98a1b2f13c)");

unit.assert_eq16(16'h3F24, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #712 ccbc352a-a323-4209-9da1-828d764bb123)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0592;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h0785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #713 afac7e71-9c68-43ff-b28b-1d7f1564715f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 d60230f0-820f-437b-80c8-edfdd7a95378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 0a193f8c-e868-4c7f-b9b8-c5d1ddb36a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 5e6b64aa-704e-4d24-b05c-2c7a6234913f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 b4aa36fd-19bb-4e65-b6c5-ede76538c48a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 79d2f244-cac7-4719-aac1-d88f5984e9da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 c68e715b-9613-4a74-a705-7bf6d659b95f)");

unit.assert_eq16(16'hF8B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #713 b13c3eba-4a9e-403f-aa71-d5fc2f53e8b9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0594;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0471;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h0473, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #714 1e6f1c56-55c6-4d8b-82ad-0a50737d56d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 6bf71ea6-8e05-4860-8eab-5ee7a988d34f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 220d71f7-4321-41c7-b646-741075eb0856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 171d35ea-9f81-4d23-a307-410f41e26495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 09a50c56-d5d0-429c-95de-309ff3cd1802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 a9fdc690-8fe7-44d8-8353-7644d55d35e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 19134a75-7fb9-4bbc-a0f7-5b2015a39094)");

unit.assert_eq16(16'h9CE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #714 65357e0e-9c3a-42ee-b6c2-4fe2c9f3388f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0596;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'h0F84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #715 96f72005-1e2f-4021-b3ba-6023ffca6534)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 517b6a17-b053-48ec-ab6e-23d5ba12f426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 500c1ee4-0376-460a-9c1e-c97b179ab05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 336e5f07-76d4-41d0-9411-37d85c3cdea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 34e31022-d73f-410f-8e02-01e9ef475f7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 d67f5cfe-a148-47fa-b5fa-7985c13cdfcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 b8a09e6a-793a-4125-bf79-dc372d662931)");

unit.assert_eq16(16'h315D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #715 24d88d35-be9c-44a6-af3b-3fab06d00d5a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0598;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0785;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'h0787, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #716 5c5f2ae8-20ea-4b37-b37f-0fd6711b1295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 7602cb7d-276a-4aae-94c8-17989afdc053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 2ed93ae3-34ba-451f-997f-9e1032cd76df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 34002fb0-0c51-40ef-884a-30107a770538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 712cc74b-6995-4f49-8e55-8dd6d1c5e1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 f839ff6f-71ad-494a-a07a-93c3296551eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 a9c676ce-895a-49f8-aa00-1d260f0f4d39)");

unit.assert_eq16(16'hC6C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #716 ad3a15b8-41b6-4b8f-95f7-0fb7dfbeb971)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'h05E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #717 23758a30-e45d-4647-a69b-484c0cbe3169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 6d2255eb-cffa-41ce-a93b-08a75ed8cd7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 077d67fe-7dd4-425f-b953-1ee216eaa110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 0eeef639-27b5-4927-8d67-7c0846387010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 154ce072-bfe1-4eef-a0df-6d2abffc92df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 041c75f0-bf4e-43fe-ab4e-6acba574a09c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 8b3b61e7-4c67-4113-84f8-1934735514d1)");

unit.assert_eq16(16'hA45B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #717 187dc132-9716-4b9b-b0dc-d1db8ae1806e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0132;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h0134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #718 956f086b-9951-42a5-8e94-702465e7fdab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 d5fe265c-686c-42ed-937f-87c60b32297e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 d9275017-250f-4e08-a1f3-e35ba03073e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 d60195c1-782e-4764-b3c7-2e00fdde5edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 6607290e-13bc-494d-9652-db2993f663c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 7b655111-998e-4673-b69b-66d17814bf8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 cf59ae25-6948-463b-b3d6-05eac485ef50)");

unit.assert_eq16(16'hC77A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #718 df2c98d3-0f56-46b0-b818-920a3f38d075)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h059E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h0B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #719 a6a9b279-c09c-457a-b85c-97f892a1428a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 d85127fb-1453-4599-8e82-c87ff3dd7964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 61313e58-8e31-44a1-90f4-5cdacb1a68b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 05438872-60d1-406b-9cd9-30a36a2456ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 6e48b072-1ae0-4448-8a3d-1d1fa5c33d6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 4660ea73-2810-4f60-a18f-844ad8bc0e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 15a5fae0-5c3a-4692-892e-17714e1ad37d)");

unit.assert_eq16(16'h0C4B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #719 f282c298-ece5-4f62-b0ec-a3909f51d83f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'h0E7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #720 168106af-50cb-444a-8f2a-06020e8470dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 95ed3bb4-7224-43e7-b937-91ce141711d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 ffb231b2-e418-4ff8-a95c-a864177f6359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 1fd58f17-da08-479b-925a-89632a150613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 4ed5044d-d1b5-4b0c-9205-14bd51101926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 8d8e8744-09f8-4b8a-ba08-269b3b882e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 58c5237c-2033-492b-becc-1b9716b21b06)");

unit.assert_eq16(16'hFC71, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #720 c28ba131-5169-48cd-9f8b-33a021d48197)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h0F43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #721 60a88f0d-4681-4ffe-a081-672e2ae34a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 ea9127dd-3ac5-44be-ac2e-c9c684b6698d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 a53f5d12-a7fb-4702-a415-c110bb1e06ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 18050020-b7e5-46e4-b527-b8fc49b5d5e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 dc453fa2-f423-46b8-9ad6-c10abd7a6735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 dcdce659-a997-4984-b13c-e79d53c38f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 f3a6d4c6-165e-45f0-aa77-bce3eb1320fe)");

unit.assert_eq16(16'hB5BD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #721 59550b2e-d19f-4977-bec4-c951a25bb16b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'h0FEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #722 1dd7e224-5925-4bfd-8d7a-27e5faf37068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 05ffc959-7b7a-4f73-89e8-f50b81ca7976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 3f2008f1-aa22-40b1-8944-70e63f55402a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 90f0a32b-eb7a-4ba8-a7fe-b82eb1413cd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 37bc7e72-aa13-443d-969b-a36a34c3b29c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 758ce627-40cd-4200-9801-e1ea93ce17de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 a73eca32-21d1-4d06-8c84-8b29a55ec871)");

unit.assert_eq16(16'h0B3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #722 d9696b46-b45c-460e-a5a6-a0bb90fd034d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0245;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'h0247, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #723 e1af587e-3d8c-4679-9006-9a81e51e6be0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 a751d9c3-91ed-4740-98bd-931c794c8637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 09e382f3-047c-4b79-9346-82ed72a03b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 c7deae27-3fef-4126-8186-2fb0cbc820d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 4f8fda62-0690-475e-9af0-bc96f0c309cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 d42cbc61-8bee-444c-9503-9080082c520d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 ff3755d2-686e-4ac0-a9a9-4287a2fd1e80)");

unit.assert_eq16(16'h2E90, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #723 24d3f114-1b2b-463e-807e-cb8703f1260f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'h04AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #724 7f0b45b3-a8c5-4e8b-843e-dcd8f9b78349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 e8ec4492-bf1a-4c2f-818b-8797e2cf1613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 b2d0f278-b40f-4687-8aeb-f8bfd7392dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 fadba67a-1d5b-4a45-9fd1-84a7d2cb3b0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 927e8254-3dbc-4015-a9db-acf386905089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 52898d87-9b47-4b6d-bdd6-9e1a382be347)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 b25fe448-8a7e-4d44-ab4e-cc1f1609db97)");

unit.assert_eq16(16'h9558, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #724 b533c4c8-925b-4af5-a0ce-0a752633d672)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h043E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'h0440, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #725 8eb61c5a-320e-40eb-bab3-82a361044854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 3c5b334c-8f35-4945-972e-c07a2da1ae24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 d0ce09c3-d94e-4cc6-a9a1-d97e5defcd4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 58c2ae0d-3968-4ba7-ad5d-e234f241f996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 a0f47d9a-d63c-44af-b492-08e2f017acd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 2fd62583-8212-404a-819c-e04b0c253be0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 25e2fba8-b043-442f-b808-3f4c9188790e)");

unit.assert_eq16(16'h3ABE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #725 0a9c09b3-3e7d-42f1-98a3-71de55061a9e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0474;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'h0476, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #726 b99556b8-80d6-4dc2-8a44-b6338208b6a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 8f972723-1e27-492b-adc0-3e2edfd25bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 207016b3-1661-4db5-85f2-190e53fdf89f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 b2ea7d7d-0d7d-49d2-aa6d-bc30f956e88c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 26cd6718-7c58-4272-a934-37ad46bce508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 67646b86-686c-4435-ab5b-168e32515d7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 91a944bf-aa17-418d-b3b9-1d08beec7d2a)");

unit.assert_eq16(16'hBC91, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #726 9e985e62-4475-428f-b9d6-3d45f7d5c3a1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h0CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #727 52260201-0693-4bd1-9d20-96af527feea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 6d836333-d228-41e8-961a-f383719d7f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 8ac3f5c6-86d1-4d55-bb83-fd79135dfa49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 3fb02762-ef48-4a06-8342-515c71c832fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 a4362cf3-9989-489e-8ddf-a4525ac624f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 c4d01b81-2420-41bb-b380-3e723b49d479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 acceda55-37c2-49e1-85f0-95208954719c)");

unit.assert_eq16(16'h0603, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #727 d8963b96-0acc-448f-a5d6-62e0529ad255)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'h079D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #728 c9db58c9-0f5f-4770-877c-2adf99b2d7d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 71fa614d-462c-464b-b056-fa54089038fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 aafeab30-9908-428b-88fa-d67e724557d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 e5dd0d42-2197-4250-91e5-2571d6927ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 232a38a4-1a90-41ae-be55-b40ef67f92a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 1ad8ed9d-9bb6-40d1-b43b-2fb48a36fe80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 247ced77-2555-48cc-8579-8699a4f64b90)");

unit.assert_eq16(16'h0DED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #728 a876174f-ba06-4149-87f2-ff6fcc569235)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0579;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'h057B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #729 d2d10953-c444-46c9-beec-cc8a30a01d6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 67f918d4-2378-4146-a853-2d609f514f95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 ae129369-d1c1-4682-aabb-b2d3a5f38db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 7a48e0e0-58d7-4b03-bdb8-5cadc4dd589e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 7f727a2f-b0b7-48cd-848e-75ded9f0ea11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 8c844939-3fe3-4043-a485-777ef88f5b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 93586095-f6ca-4e46-a24a-89437aaf0877)");

unit.assert_eq16(16'h4A11, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #729 9c818a07-1478-4129-a54a-a44b44aa821c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h0BBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #730 db4828bb-caf2-46dd-afe5-7fc6ab8eb64b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 fa8d27b6-4e2d-4f9f-9f4b-77c168fb2cbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 9b7f3623-15d4-46fd-84c7-63b02268a57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 f8ae4df7-8a6b-4f0f-8845-0aea42cf2a65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 9c434c35-7ff0-4134-8abd-8bd27c67aa6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 e9359ccc-2d6e-45d3-873a-1af4b1054cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 820245e9-28eb-4c7d-bb21-f615b9b03a14)");

unit.assert_eq16(16'h2C0D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #730 66b7011c-0079-4d52-a4b4-55f5d42320cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'h00AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #731 bafa8b71-2b85-4237-a14c-01bf98c48707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 a2594573-ef71-4653-b0d4-120281c06e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 217cb2b2-b666-4590-828a-e4f55c6ac1a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 402d9e48-b963-4026-8e3b-91014b5c0776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 c1278304-101c-4eb0-8d6e-aa3c7c42a91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 1c419673-309e-4312-85bd-44b0da422507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 0a4d6535-b20e-4572-9fbd-7aeaf938c33f)");

unit.assert_eq16(16'h168D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #731 74581c26-0e75-430e-9516-097c22fb0ead)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0531;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'h0533, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #732 c7320fe8-6ed7-4bc6-bdd6-3c2426962039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 511956b0-ac85-42d3-adad-e68fef6d19aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 9b534314-582d-4a5c-93ef-1a847528bca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 544b6416-9670-4f2f-a430-8b85a11269b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 000b5fa1-d2fc-4f10-aea7-dcc4d3a87607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 329afb8b-0923-4774-8273-1b3581b8b5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 d954abd6-10a1-41f1-b3d4-1d4a3d022f75)");

unit.assert_eq16(16'hAAD9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #732 ab1b6ad1-7ccd-4bac-b1a8-f88585003f54)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'h08DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #733 d04b2409-988d-4175-ab30-1a458dac2070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 0393857b-8f74-4e61-81e6-fbc05573e21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 6bb11a5f-b45a-4517-9ebc-5ce955c62338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 ab97a154-ce11-4548-b6c2-904ab31f1b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 73be636a-07ee-41ad-95fd-fc616c2f7a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 68d4e21d-fbc8-43df-979b-f11e8338a09c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 9eb0df85-4fb9-4eeb-bf88-eadf9b787c01)");

unit.assert_eq16(16'hD288, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #733 fec8baf9-9757-49b3-985b-46d6e691c1a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0482;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'h0484, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #734 47919cc4-8de8-4d6e-a5b1-6d2cf9998153)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 2e407041-604d-493f-a3d0-fbe4edb0f803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 8ed53299-3514-47b8-ae5b-90d4e88fc5ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 630320fc-09df-4f8c-9c58-e1c1933aa1e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 eeebaabc-be8e-4d48-a648-97ea316ebeca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 fecda35a-6d10-4ad7-a149-03937489f442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 56c08d7c-a402-4a53-a467-91cace405ad2)");

unit.assert_eq16(16'h4047, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #734 bbd5c69b-8001-4c53-9e3a-1f2bdbefff49)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0488;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'h048A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #735 1eec94d9-f09c-4419-9c07-e0f9cfb7bb51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 758a0663-bc3f-4092-b904-b23ef0c32df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 023242b8-72ab-4262-886f-9790d494dc03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 e6315355-1e75-49c1-98a2-296e11240b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 f7d8ad32-777b-4d0a-b106-93db4531040a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 374b8f61-46f1-4031-b24e-1bf036e3f0d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 f0cbc96e-dd95-479f-8623-993edbcd949c)");

unit.assert_eq16(16'h1051, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #735 e2e92287-93f8-4499-8f69-84b0defb2eb0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h080A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'h080C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #736 a274b5c7-5e4a-46f8-b67b-67a3987b6621)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 dbb13d07-8913-4fcb-bf4e-fa6d8017c043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 ff4adfba-f4f7-4309-8bf0-e312691d85ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 c04247ff-61f9-4a09-b024-65076047b25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 3f12cd4d-cc5b-4999-ba23-37577890c1f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 e1fd6775-6021-4eda-920f-f6c187391906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 291eb683-c7d0-4b14-9eed-6109a1e33a90)");

unit.assert_eq16(16'h7281, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #736 c3249b4e-fe3b-4ef3-8eda-cb8693e859f9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'h0B15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #737 60da8fc3-cea8-4f6e-9fb5-98d76088cfac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 5fdf756f-ff00-4ee6-b95f-0a215ac56e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 4c39507d-ba71-4fdd-9c0f-69318ab42857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 cdd37536-4f80-424d-904f-52c5e6121a20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 b262f919-cb65-484d-a0a2-a5c19f39e463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 fcd539e4-5895-4ef0-a6ce-1332046773e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 5c055dda-038a-48bf-9f92-a22056bac186)");

unit.assert_eq16(16'h31AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #737 787d468a-a157-4672-b4d5-538d81067bed)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0809;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'h080B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #738 60e09c4a-849a-4c47-b921-f97f80ff92a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 f4145ec4-c358-4f01-ae2f-348cbffabc8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 032e0178-26b3-4392-9477-b48a863da8cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 6b38a6d1-c76a-42ce-bb01-dace1da784e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 d3f5bcdb-a01a-4191-8092-86d8e069b512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 9c18ca83-5451-4614-82e5-80ac2fe1af26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 39bfe27c-e8a0-41ab-843f-85de7de9ce32)");

unit.assert_eq16(16'h8117, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #738 f63b1df1-4edb-453b-9208-6a35c60b3059)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'h0E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #739 9b9e6209-02ef-46d3-8be6-4b5fbe373370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 c19d1cfc-0e3c-4817-a85b-3f4c8cb1efea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 adb74f57-576d-4917-a67d-6eedba62595e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 9f489431-6f72-4f79-83a8-cecccdd55dcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 9e24e7da-5bf7-4f59-b9d4-321ef1279792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 cfbe3dc8-8884-49e7-9ffb-0f22c1f0f312)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 e5a197ef-b191-40b3-a5c6-680d9af51181)");

unit.assert_eq16(16'hD095, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #739 59cb5fef-dfab-4109-a45d-7ea8869a39cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h0BAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #740 fabbb9f9-d8f0-4980-b9ae-d075894a25c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 76080a14-787c-4e4c-92a9-ea60c98fe694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 ec7d08fe-e1ad-4ec2-9e6c-46c1e40ef6b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 d6a0d82e-f6ca-4536-b289-dee233f22a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 1759c9e9-8dc3-4948-b685-25695be5861b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 428b470e-5cc4-41b5-b4de-0f9f459a1b7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 809361f6-3136-411b-aed7-4cc58cb40bc2)");

unit.assert_eq16(16'hAE64, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #740 47afca00-f26c-4b87-888c-52929896c0ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h0DD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #741 b9ef2a8b-bacc-4625-b3ec-44aa50b239dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 9ebc849e-68c0-4d6a-bb82-8a7765011df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 b707b2c3-874b-41fc-8289-929a713db39e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 87078a35-31b1-4559-ab17-35da2610a2ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 19c3663b-a55c-4757-a05c-5b76351b7ec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 e96789a7-6f89-4914-a22d-ae3e5b251a1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 a720c4d6-8451-452c-ae11-c224fa0d4fc8)");

unit.assert_eq16(16'h1151, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #741 a456072c-3196-48e7-a751-58003c0000bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0085;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h0087, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #742 286c4c21-9fee-4baf-af1d-c96a68201e30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 1d9dc741-99a2-4e7a-b01d-c558f1dc2d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 40415fff-5fd4-4b6b-bf50-1edd5912fbb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 939159f5-2ab3-479c-9673-a344e81241b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 b5b5b337-bc67-4105-bf8f-96733daa2f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 8e5b5cc1-1018-4027-a0c6-e239cb863609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 9b3c23d9-a887-4de4-93dd-704a6c06bc4e)");

unit.assert_eq16(16'h02B0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #742 ec30c1a4-77d9-4431-93d0-6a57cfe48089)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h0A5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #743 85df8b68-aaf2-4448-95db-ba01629bdea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 5f0139fd-aa4a-4a41-a0f0-fbb4a71c9d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 2319973c-0389-43e9-8787-207a00f8cd16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 40978d99-e747-4d50-b971-df31b5d6cda3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 206c081e-6f62-4b41-be51-4142b5e40b3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 4d71ddc9-68c6-4221-afee-2246f61b612c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 eb0417fe-c01e-466f-b029-3a160eb8c235)");

unit.assert_eq16(16'hBC80, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #743 7934868d-deb0-4e28-ab08-50d71fc185ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0481;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h0483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #744 0657ac3a-6fd1-4807-88c9-a80e9b82a731)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 5e29f963-5b04-47e1-ad95-b606018e50a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 8151ef61-b1e4-409a-a2ec-a2b22e1608cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 3eb135ca-460f-4589-bcd7-5417a23a8512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 a4dc6568-2552-4bea-80f5-b61a0ad33d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 1c6c9717-6849-438d-9c24-4abed92d2a1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 46b34599-39eb-4619-b69f-38931d703b79)");

unit.assert_eq16(16'h47A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #744 df24161a-19d9-4ed2-a205-7babee6c3f43)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h0C0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #745 7ff27d98-798b-4164-a565-b162b3837458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 6092f2a0-d09e-4eac-8686-8e7058d2fa40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 d8d57e9f-e106-4cad-bf90-cc2fa28e7dec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 6be771bd-b598-4f97-936c-cdcb1f6cc575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 cf7f4ded-a6cf-4db3-9922-1c28f5f776ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 3f34bc4e-d277-445a-a5b2-5f8ffb3d79b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 f0646358-79b0-49f7-9757-c595839a03cf)");

unit.assert_eq16(16'hA30B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #745 f1bcadc9-5653-4748-8e5e-86c134f4fd26)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'h0D8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #746 8d6f56a6-db1b-4521-a18c-3bfa29473e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 798e2f0e-ab75-4a7e-9549-d56732c66297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 33f17899-ee65-4b71-ba75-19a6f9d82bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 ecd2a59f-53ee-48e8-8322-45ce58aab8e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 0ce33449-377e-44e7-b7b9-ab807405f462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 811883e8-9e33-4aaf-a794-12df8b458e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 e0fffafc-d488-483f-9e91-3f9840a8259e)");

unit.assert_eq16(16'hD3C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #746 554b2486-abcd-455b-b52d-1717cdda5939)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h091F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'h0921, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #747 9b06a4ac-e7ba-488e-b60c-04b1ca18f62f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 27d49c69-8d45-463f-98a2-ffbc8ff2a547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 0ff8278b-5ff3-44bd-9436-412fbfad1402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 5b5cb663-793b-47b2-a3fd-0afe3886faa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 9e083fce-3db1-4338-9436-a1bae59c7c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 e64c82f3-7a39-4772-8ee5-41bf8f268ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 bb8ca537-8514-4b2b-ae02-efb39e9f1869)");

unit.assert_eq16(16'h5071, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #747 6d642775-a57b-4d87-8109-702de9fb4988)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'h0FFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #748 fe88de09-12c7-4474-b09b-42c368029b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 3f5f26b1-f587-4292-baa1-ac926cc0f981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 e66709f0-4e67-43e9-bcb4-1e874e61c288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 9bc04f59-3c18-4906-ad20-66d2d9560ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 9c316cfe-0774-4eb6-a54f-a1c8ca588172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 ef5763c0-d459-45ae-a341-2f84e8b3c1ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 2933be74-9185-439e-a887-5c737cca9314)");

unit.assert_eq16(16'h98D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #748 d7539d6b-0a53-4bf7-8a28-aeebe88afe88)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h09FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #749 e45d17d1-ba3f-40c5-9c17-d391f4c37c05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 a5b1c1ac-3cfd-4b47-96d2-92a4d1ca3549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 a7fc897f-f5ed-41e2-8671-61a44c22196d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 358659cb-235d-4174-b3a2-33aade771eaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 0b2c9a89-0200-4964-82e6-eef139ea6790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 5db6be0b-47b3-4e94-9af4-f7bba22982be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 d92f6e67-6df1-41b3-a8dc-f35fe8a588e5)");

unit.assert_eq16(16'h9DCA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #749 128acd95-c2b1-4383-aed0-1f874c0a0729)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h082E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #750 5345fa0f-b362-4fc1-bd63-70a6583d94a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 b40c0d15-346f-4c67-91ea-7f9df726ffa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 ca43864b-e9e2-4c00-a2d7-a819a1858eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 16d7f102-5f38-41db-a14e-28593b038a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 b9876d01-c2e8-4ce2-aa5a-0c4654eabb98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 59476eb8-9827-4ae9-be6b-605bb3e5500c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 70cc7ab0-53b3-4d76-9aa7-38f43f37c07f)");

unit.assert_eq16(16'h70B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #750 90b1daab-00af-45e1-aece-061b6d5228c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0469;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h046B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #751 b90888bd-e121-45d4-bcd2-4728426dbd29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 982b8b8d-6851-45f4-bf8c-9e7fa327dd36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 97a50094-6a3c-4365-aaf7-396dd9ca8561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 296aedab-3fcc-424b-8b38-4e3fd3513be5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 fc65096a-c22c-4a9a-9669-d8f7a98be2d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 67ba81e0-4595-435d-8d17-fdcc76e0aebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 981019db-b7ed-4d0a-b391-411a7f937cde)");

unit.assert_eq16(16'hC4D1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #751 424b5244-09b4-4502-b615-a77995b00058)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h017A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h017C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #752 5e83b8af-8839-4ec4-91b8-84abe0c5da07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 573761c5-bc31-423b-a0ef-1ea40805617e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 1675cb84-3865-4dbf-a957-09703300e4c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 88dc56b6-664b-43af-ad27-7f50a6edf034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 1f1585dd-8c27-4066-9bb8-f6d36896b07e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 34b5df71-4515-446c-a69e-413653fee32f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 23f8c69e-e4dd-4049-aec5-506c1c37c709)");

unit.assert_eq16(16'h81D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #752 293b9592-34a5-4b52-a626-7088dda22e5a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'h09B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #753 3db99df0-5d3c-4514-a15e-44e0f49a0b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 e2dcd72c-d77d-4552-8386-76b98f0b29c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 5e832f99-0df9-4e08-ac24-c27cfe2aadd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 deeeae09-41af-45e8-93f2-dc5b0fa88397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 88d7d4ad-08f4-44ae-b4aa-21bc0dfb7ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 7957eb71-348a-4441-9c91-1d05abb530ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 e894ebb7-7937-4a3d-9ba0-c6812e485de3)");

unit.assert_eq16(16'hCC21, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #753 2716cbc3-bc35-468b-beb6-1a20e4866b90)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'h0DD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #754 8e080a75-0209-453c-98e0-56923d652e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 65016241-8c8c-4122-916c-8797b2aafe49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 52500204-1a3e-4b08-8925-da6ddf11e4ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 1d8f5454-7ed2-40e3-83c3-cf2f5c574d2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 02435d10-4953-4c43-b947-574752997b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 d5f3581f-2844-49a7-bbde-fd75a2ffcf9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 ac38d515-54c2-43d0-9849-c74c1a4b6639)");

unit.assert_eq16(16'h8178, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #754 b164c933-ae80-4b24-b90b-4cd9beb85a85)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'h0DF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #755 fc8105aa-34a1-4b15-afa7-befaa9dd7935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 d5d88c32-c6d5-41ad-bcc3-37dec7823d38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 fc976b7d-be17-4ef7-b4c4-ea85a6c443f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 46c0debc-c4f5-4813-86a1-f4c46b7e6453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 94190dd9-6730-4ba4-a61b-4736ec89b155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 8ee19779-b75a-4fce-a530-70ac7dc1b2f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 989bb4e7-2fec-420a-a49a-edbb5ae3cc0b)");

unit.assert_eq16(16'hC20A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #755 66233491-eb37-4514-9447-8972c8b99974)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0334;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h0336, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #756 3cc86c44-b51b-4136-88a7-7d26dfe67227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 2c237602-0b65-46ea-b964-a594e8562303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 3fd283df-974e-47e5-9521-683e781a3f4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 d361b29d-62f4-40f0-ad00-13faedce7d88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 063b2dfc-de3b-4f72-b1db-e0ecec2c3f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 6dd49c77-b604-44f9-ae5f-006268bb7c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 4c35b2eb-c8ea-4c25-9df2-2d2b2097c57b)");

unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #756 3b0c9a1d-bb48-4d27-bf83-ddb5ff143744)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'h0FEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #757 17f8ad35-f730-459c-9d93-37a20aa7cc0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 a3410113-5c51-4279-8c61-62d562e4c68b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 79802b1e-f2c6-4fbe-b70a-1209d2faef64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 b9a41267-fc2d-48df-810c-8dbdfd2ce819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 0340d649-b7cd-4727-a4cc-d47d7f8a756c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 3ecc31a2-a895-41c8-9c03-94e2e0cf7b37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 f2e62728-e19e-4d09-a8d8-a60cbbc61904)");

unit.assert_eq16(16'h90C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #757 22c6f595-43ee-4bb0-ab72-3170f9c6bc75)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h036D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h036F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #758 c4af2e1f-6cff-49ed-b2d8-8c84ee17e4e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 03f4e4e0-02bb-4393-affc-d4594deecdc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 5ee1f899-f458-4645-a4e2-078082b5496d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 b85a75f0-ab5b-4af7-b223-e3457e1da47a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 692e8977-01ce-4bf4-8630-961605f8eeff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 317ca6a2-b3fe-46a1-816a-ed2db65fe585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 0e32c75c-1b33-4b6c-883a-f4e60dafb937)");

unit.assert_eq16(16'h91F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #758 16095f64-9531-453a-b4d5-3a09c775efec)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'h0B3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #759 b4e07c3a-66a6-41d2-a7b8-9b29ff7874e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 5b428b8a-9ccf-4d28-bc93-067d2531ef31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 72798de0-2067-4830-a8f7-5038da6ffba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 67020c83-7165-410d-9e63-f87772c89529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 97c3dc85-7bc8-479a-8ba0-44d6586693d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 ce9595d6-e952-41f2-b4ff-d743db850320)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 3747f8c4-a450-42ba-a92c-9b5742e8c95e)");

unit.assert_eq16(16'h08A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #759 fd647e22-aa90-4a0d-9097-aa310503491d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'h0CC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #760 75cef814-74d4-4b8f-ba7b-f6ddd5ba00f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 08c93ef3-7540-4185-a316-d3df431c0f27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 1b7c42ac-ba7d-4b89-be65-8c164cd2e936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 f0590397-88cf-4b51-9a33-e264f4373713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 8240031e-3150-4bac-8f5d-f1c766584acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 493472fd-6246-4356-b45d-c8832847dbe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 51eec5e9-f7be-46ee-9629-c7a8068f912a)");

unit.assert_eq16(16'h096E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #760 f06e2e6c-e3e8-4560-8245-ece3fe636753)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0666;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'h0668, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #761 4c887ea1-a0d0-4c87-91f6-56367f4aa7d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 26f99abf-7a35-423a-9b84-3b39e08e59eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 ef1e842a-61a0-4513-8965-4958d469bbd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 073cebce-2250-41ec-a882-eb95e48d834b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 29131ad4-c375-491f-9d1e-e8da351c31eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 55014aa4-59c5-4f24-82da-bd7d6dd28e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 f12da8b3-fbff-4f4c-8651-0ddbaab451d7)");

unit.assert_eq16(16'h1A46, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #761 903d5d8e-1fa1-424d-8cfb-4af22ce5416f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0053;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h0055, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #762 1eb32b15-776f-4ef8-a239-b584538cb90f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 fb7ac583-f0a9-4961-85e9-8f52b5bcc0a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 dbfa74de-c848-449c-89aa-57cf1414f713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 f8602d7c-d620-420a-bfcb-b025acdfef86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 39b2ce1f-969a-4890-b79f-9f6b00d0941d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 e4c6f23e-53f1-4f1b-842c-bbc0bbc594fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 f6022877-3723-488c-bd85-2ceefb43ef04)");

unit.assert_eq16(16'h4125, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #762 b7c3f04e-75c3-4138-9838-5f87d63524fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0855;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'h0857, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #763 a9de9d52-32db-4a90-9456-960e582f3bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 9fe9c903-9474-47bb-b1bb-eac3aa994bb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 4487638d-c1ed-4e9d-9c06-84945be42685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 eec4f688-b141-4ac9-ad88-71d41ed6464b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 8204fa9e-f6ad-4d76-81b3-5a95595af258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 a610ffca-2a17-4142-bfd1-9fa430002caf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 fe9845cf-7517-46d2-a20f-212f479e212f)");

unit.assert_eq16(16'hECEE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #763 8e0e234e-157a-4a11-a3f0-86bb0bbb1ccf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'h0F4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #764 a4335030-d074-47e7-89b3-736c6b910ddd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 1d4247bd-1018-4269-bad9-a8f362c93fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 c896e236-5b01-4db0-b25e-ef782b9090b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 f3efef23-1d40-4ba6-b43b-24598edd8a9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 00db3a1b-0d91-44a0-8877-23fb7a6c4dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 72b15e5f-701f-4abf-917c-ca4927d19bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 3d43dbe8-e3cf-4e10-b76a-f5322618a350)");

unit.assert_eq16(16'h4CC7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #764 a60b5397-fba1-4fe8-8b51-cc1c5b8a2d89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ACD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h0ACF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #765 1dd30e3b-6dc4-43e6-b35d-b89b4ca40f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 3dcfd77a-fee8-4d56-8944-262ba39659a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 b74531dd-8b00-4848-94e7-4cde6fd74f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 2ab5fb4b-0987-412e-8a92-eb6d7943e8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 5c21dcb8-d359-4ebe-ae10-fe827c26adf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 d7437c24-4bda-4145-9586-ee09f5479d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 496e8dbc-9713-44eb-a2b4-11f91eb72e7f)");

unit.assert_eq16(16'h1986, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #765 11ce31d3-903b-4eb6-a3cc-b7dc7bf3b2a6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'h0AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #766 4e201d6f-deae-4721-bb5b-f1749b330323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 a0c67b27-d737-4774-91aa-a7ce7ed2c1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 2a587339-d4a3-4e24-8cdf-b7d4951c0f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 d69ac8ec-35dc-4e65-96ef-918fb0d1411b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 e8330dc9-c84d-4b77-8913-65cc196dc992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 fb381376-973e-4de7-b172-f4cf80070ae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 f26d8779-e658-4d65-919e-425768112271)");

unit.assert_eq16(16'h5B3C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #766 d9b6aeeb-8c60-423e-8bef-9e117d626b77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h05FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h0C77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #767 9ec3813e-c41c-4391-8b4e-fc436ccacdc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 5599ca65-c21c-4907-9483-8617f6831988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 93cd24f4-4995-4f40-8100-121cd9885d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 b3610791-904b-4717-bc4d-dd7aae15760b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 7442ad68-f0a0-4838-87e3-e4052196d774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 6a31f894-da1a-485e-9781-9c115ec36d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 f6d93815-28d1-4a6e-811d-8ed2dca78e38)");

unit.assert_eq16(16'h3D68, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #767 d9ecd5a4-f094-4b8c-ae3b-e606d4070409)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0600;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h030C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h030E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #768 89c0f547-340c-439b-92c4-6b599a51aa9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 1312e7be-c437-4918-838d-c0f1ce676966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 e72077fe-4598-4df8-bf2d-433197b13718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 bdbdbc2f-a1ad-4e56-bf8d-eb69b9ccd7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 aebeac64-e097-405f-90fa-3591a50997ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 aa7c985f-cf96-43c6-9cdb-6eeb952b348c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 82897dc7-df51-4521-a482-7477da360d97)");

unit.assert_eq16(16'hD401, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #768 ec62c112-5ed0-40e8-9ce3-68b3b1ad44cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0602;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0546;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h0548, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #769 71fb2c94-3c3a-40a5-b785-bbfbd9a7ca48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 1fb96020-5dcb-4f95-85b0-ab6f5e6c4030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 286e9ac3-58ee-4701-9ec1-defab2458c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 0df1f3a0-1973-4100-9375-32355993219b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 f11bcb9c-0a22-4e9a-9326-697158f9b112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 aaeeddb1-054c-4578-880d-aa218b11f9a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 4c5d9ecc-bca0-4479-8637-8cabc9c08759)");

unit.assert_eq16(16'hB122, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #769 326ebfaa-84ea-47e1-8554-b4ead2f397b8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0604;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'h02E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #770 6e5f62fe-a93f-4630-86c1-85616ba699a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 48700bd4-9cab-4498-a841-f89664214070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 c0ce7cd6-0ac6-42ff-8de8-ca63d1b34b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 c4850715-7773-4996-a508-e816f55a19f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 283693b5-f796-437d-9cf5-117bd316463f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 fac89ca9-c646-479d-988a-6b82eeaf27d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 4a96acd2-3010-498c-8838-2c9abf495a4e)");

unit.assert_eq16(16'h45EB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #770 506e61ce-34c0-4e4d-adc5-b7ce3911f984)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0606;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h095B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'h095D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #771 b7c91719-031f-45f4-b23a-23bb4f61be43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 66831af0-03d3-4d3d-ab40-7e665372a59c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 2a6e1e5a-0723-48c4-9747-fc7ededddcb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 1ff58589-9584-4308-9bf8-72fc8f430477)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 71f0f401-da92-4ad7-acd2-cb8eebe6e843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 5f12a9d3-25bd-4f47-90dc-1e69f52c9608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 77a42943-c1c5-42b8-86e7-5bb3b70076fe)");

unit.assert_eq16(16'h06D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #771 e6cd80b6-c542-49fd-9c8b-696d13c54f63)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0608;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h03A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #772 361a120b-2772-4f4a-91b6-450eeb515372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 4c212946-5fae-4c7c-a59b-381ba7cbbf75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 d5293255-2a30-4a0c-98f0-edca1daff7ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 8b50caee-d19f-4691-a8f6-eb0cf221bf4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 1be3cd1a-7e9a-43e5-bc32-2954ed085378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 44d3e685-e3f3-49bc-81c3-3028288585c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 eb621d28-4a1c-4443-af74-4cfb00b5d5dc)");

unit.assert_eq16(16'hC1EC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #772 8238f4f5-f321-4f63-8cd0-95fc7a43b65a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h00B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #773 e67426de-d46d-4b6d-b147-26c1c0b68667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 d1fad801-44a2-4692-8a53-d47e08295485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 7eff48b9-cbe5-4378-82b8-6e3d56294b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 3c9bdfff-0ad7-49bd-b2fc-66ce43728508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 ff0bfe17-fcc9-447b-9f65-5a3b16a203c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 1578fdef-3c9e-4ec3-8dff-c6705637c534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 7dba3ec7-c3c2-4d3d-ae15-14c3ff536ffa)");

unit.assert_eq16(16'hAFD1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #773 7aeb6b93-2e45-4e12-83bc-e308498c7240)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'h06F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #774 fe2cd17c-4c7e-447b-bbd3-ceb43c9743ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 12604ff0-2f18-48d8-b8ef-b870fe7059f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 a6c56d8d-cbfd-462b-a21d-7b5699076d01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 51e36389-fd03-4a4d-b6c2-0b152f0c8ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 ece3ca1a-1569-41c9-b661-b410a6c3522a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 5c04b429-0924-4331-84d0-da543146f76c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 61b23471-d6d9-4823-bf3b-441d650e289d)");

unit.assert_eq16(16'hAC5E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #774 45a90cbb-ee5b-4e18-856c-66b742a0b20c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h060E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h010C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'h010E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #775 a1dc7e81-6705-4d2a-9b26-76d3cebc19a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 d61c9b18-7b64-46f6-ab84-28735f55ebcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 1c579ad4-e2a6-4d42-81b9-d34c8246a6f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 36295314-268f-4c4b-854d-279f573c0660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 56f3554c-c6d3-44a0-84b6-14c748b67db3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 7d23225a-26cd-47cd-ab6f-8fc4eaeb2a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 dcb557b8-73aa-4fdd-9d68-329b78e2ec81)");

unit.assert_eq16(16'hD108, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #775 8b4c6c70-b822-4de3-9171-e41e5ef1434b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0610;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h0C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #776 616b2dc3-d8d0-4c34-a230-2fda39d7c5e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 2b04eb32-75fa-4ffb-8fe7-5201ce77aad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 54e6ee6f-1263-4cd4-b247-3d209edf04d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 04db76f0-5b48-4f0e-af9d-75fc5c0d1297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 c010265f-0caf-4ff1-96ac-46689df2ab6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 1b161778-8be0-4d03-97fa-b1ec4ad4a7cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 1a7db9cd-77ea-4eaa-bb65-87e8f10865dc)");

unit.assert_eq16(16'hA314, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #776 1dd27d6e-ab54-45df-b2c8-9d30431b5fa4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0612;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h0E5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #777 ef6699a6-90ef-4ee2-aaf2-fdb5eba0b6d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 10e5e6a9-5398-4a7a-bea1-c8bce4dca8c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 cdece8bb-74a4-49c2-aa14-fb6a4fd772bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 ed034f75-6c44-4e39-a01c-2dc06eb3d6a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 51abb492-be6b-4399-b67c-39781bf83e63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 dd26d06a-7de5-4f87-a89f-3fc6989088c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 d425ad3d-6870-4f20-8728-392a8761058e)");

unit.assert_eq16(16'hDB43, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #777 6c62dfee-f178-4240-8a89-b060d8e3b890)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0614;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'h0B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #778 86c7444a-37e9-4f42-8603-1c571484f56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 9b760a6e-519b-4076-a90a-aaae1fff8ea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 8140a901-50cd-4442-aa84-0fa799628225)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 28c5b3fa-d392-413d-a4b7-8a39e1ed1c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 b36cf960-90ba-4cb2-b15e-2fb11086af1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 2757e31a-859b-4675-8fc6-b18dbfa3956e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 7dd9fc43-158b-4125-a4c6-0f0564c11053)");

unit.assert_eq16(16'h35E3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #778 870893dc-3a2b-4623-8406-dde948d9c92b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0616;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'h0DE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #779 9447332b-64ba-463b-84e8-cea9824cb5f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 04ed0ab8-fd1c-4d82-bae3-98b93fb4d7c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 1ececfe5-071c-49c8-9990-ea308483ce9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 6152ed87-086c-486a-bb45-3b2f723c4da8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 d442545d-ecf5-445b-8236-b152a31d6728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 b766b499-3406-4ef4-afe9-f04cef89626d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 53dd1b3e-5cf2-49c1-ac4a-a19376cd3cb7)");

unit.assert_eq16(16'hEB7D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #779 55b19702-d0e8-4e26-a4b2-d7457cf508bb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0618;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h011C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'h011E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #780 100e64f1-dcc5-4d1f-9725-3891ad4895c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 75348111-913b-4a09-a4d1-5cef20389b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 7939598f-4121-4a7c-8bcb-3cf89e1c20f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 ec94e650-078c-42f9-bece-a1283a83aabb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 4bd25fd8-6275-4077-a311-01ece0131924)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 de60f2d4-e570-49e0-af38-ab7227dbe95f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 c9e17532-cd7d-4f5d-b99b-921060135e60)");

unit.assert_eq16(16'h3E7B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #780 cf5cbb27-a9c5-4ef3-8c8a-7812d628d248)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0044;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'h0046, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #781 650c3a86-0434-47d3-95c3-06f5500cd951)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 5ff482f9-117b-4492-8d9f-ad9c8193a589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 16c64d37-9bbd-4757-a9d3-3e65f512fc81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 41053a94-fcd8-4adb-9c9a-e2c193f466d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 8b87ebdd-3617-47b9-a609-54f08d3f0116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 b5460488-2bf5-4ecc-9a5f-8d16019039e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 ba55d411-ad18-44a8-84b7-cfb742b329be)");

unit.assert_eq16(16'h3033, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #781 fabc9ef7-839f-493e-b653-ff2b3349b30f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h035F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h0361, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #782 c9909f0a-b7e2-4ca2-bacf-3eb03c1e76e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 f09f794a-1dba-45aa-82bd-43d91cf6571c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 9df405b3-3025-4a92-85e3-b02837ed2b32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 2d8da124-75c9-4fde-8811-d3d919524d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 3f4cdc6e-eaf2-41ef-b71b-a8afd11e02e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 f575122d-aea1-493c-8684-70eb2de01f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 a9b8d182-1f18-4464-8f2f-5823adf54abb)");

unit.assert_eq16(16'h8FD8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #782 e48f758b-cd7a-41e5-b265-f5ca9ee5d2a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h061E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'h0CCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #783 7534ca85-ec7d-4d0b-a23b-3b9f5a46d904)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 a4d6f7ca-02fa-4086-b000-58e38ff4ac0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 d8f1a600-4d3a-4710-ab82-83d898c4be2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 fadcd22e-9079-42df-96e0-3afc40b2d1b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 4a868e02-ab9a-4be8-813b-91e0af4e7533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 b9f41cfe-7650-4155-bb5b-2f35cdbafea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 d4a0c583-47a9-496b-afcf-1e9cc9dc476f)");

unit.assert_eq16(16'h46BA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #783 0429d868-82e5-4d0c-8e37-1cc18ffa1d21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0620;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'h00E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #784 4544a033-b1b1-488f-b7b0-8a136bb9dc2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 f1a3a4e5-c0e3-405e-928a-b090b8fffa8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 5166b9e4-ffff-462d-a192-c9e7db300e42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 7bd3448b-7329-4b53-962b-621957a959ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 b11813b4-655e-45aa-b265-d636f607910d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 e79c7e3d-3bf1-4bb1-b715-96a099b3c45c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 e66164e6-b3f7-43e4-b44b-a3b00572475f)");

unit.assert_eq16(16'hE545, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #784 1106396e-3360-4491-83d2-f5cc84aa3c6a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0622;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h0FC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #785 f44d8b13-712f-4fb3-a541-92d125321bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 e681293c-f1a5-468c-82ad-31aa0a04ba0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 90f93818-df6a-4259-88fc-837d5b81e9c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 7b7646e3-5102-418a-b3db-b84ec0c19272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 0842b945-49c1-4fe3-81a9-7967ad676ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 ee8542ca-115c-40b1-a070-6106a29580f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 3c654174-7853-45d3-ac1a-a3efefadc409)");

unit.assert_eq16(16'h856A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #785 9b76c1be-4e1c-4e02-b626-b8ae8f52f9af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0624;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0621;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'h0623, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #786 08f9f1df-5bbb-4db8-adc6-9e9409272149)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 a805fe80-52a1-47d4-a04d-873ce62dd86a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 1ccab7a8-f957-4efe-8c34-0703437b4080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 ec87fa2c-52fc-4286-8f72-92c3fbddd2f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 26578c58-770f-4ae4-9b82-a57c629595d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 c36936b7-5f10-4d96-a705-38b2288dede1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 c237d8e0-73f9-47dd-8aca-a72bb67790f6)");

unit.assert_eq16(16'hF4FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #786 7e6efd52-2ad3-4102-8556-a6bf7b820e0d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0626;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h030C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'h030E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #787 8def07bd-116d-4f6f-9812-1cf40b3ef068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 a67a0b65-5f8f-455a-a58a-015317e4e08f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 f56db83b-55f4-4ce5-92f3-9c1374751515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 a4a0a2aa-4e01-4241-a2ad-619f96ab45d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 383b047b-cd45-4748-a148-b4439f219e39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 b27e6b82-431a-4bf3-8055-ca9e83587c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 f679ff26-de8f-4121-9517-291c475cedf1)");

unit.assert_eq16(16'hD401, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #787 cdbaf6d5-32b7-4603-864a-dd3c53b13e77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0628;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'h0F2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #788 e084e650-8e8a-4533-aa67-b88ff1682d9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 a6e50b5e-3523-466a-bbc3-bae45d5394a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 7d94c2de-a975-4963-b64c-268b2fc8ccb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 c385a204-6af3-46c8-a5ca-5f6896652f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 ca1ebac1-a683-40cb-81e2-032b447dce1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 b861477d-5867-4a38-8efc-77420ca82697)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 e2936cb3-4c99-46dc-8599-0cd00c48b9e3)");

unit.assert_eq16(16'h83DB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #788 40c640e0-b3a2-43f5-9c52-a08a5c6ba371)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h052A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h052C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #789 fc3982e8-b2cd-4a23-a252-006c91335afa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 b67e7195-2df6-47a6-a8c7-37ee42b88461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 4c3ec423-3692-45f3-91cf-dd0525d7b84e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 84693f4e-a605-4488-a97a-6791a45384e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 9e62e0e7-93c7-4cad-a017-c6289392ec56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 04ef1a90-bde9-440a-90ed-398409cf5318)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 498f3f6e-a471-4db3-a6dd-b23907dd33e5)");

unit.assert_eq16(16'hB21C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #789 09204282-b203-4da0-aabd-e85ab2f1b555)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h089B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'h089D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #790 fd7bb63b-9caa-4c9e-8164-c04822153f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 6724de7c-ccb6-49ad-8a80-7061a2ea3cee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 e7183ed9-827f-49a7-a4db-01683e1f5e16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 17441757-94c8-42fc-94a1-a83955b9ab22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 5516058b-776d-4e63-b89d-f9bc3cf30aac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 73f0c61d-36fe-4458-b82b-7210aacd2eb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 231e5dc1-22c6-44c7-b39c-621b25184cfa)");

unit.assert_eq16(16'hF1B3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #790 7e7809e9-073e-4b28-afaf-819ebdd22145)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h062E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0002;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h0004, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #791 5b5ff13a-f9f0-4b13-9548-09830b01dbd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 67b92eaa-ff32-4ecb-87d5-d638487e7418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 e09865ed-20ea-40fd-a5f4-9123648367eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 4846face-582a-4749-8975-416063243dd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 b0720e46-1c56-4f42-9721-bd4daaa7fa33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 1fa315b3-1a60-472a-b169-25b2f1f3aa7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 32539644-fba8-441f-be16-af3f8da195c3)");

unit.assert_eq16(16'hD355, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #791 d47e9b1e-bb48-4170-aa08-b2e824900567)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0630;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h03DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #792 c2b6f318-392a-4243-b5d6-b20341035c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 80020e44-5664-44d7-9d54-c3199e6c8c9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 d7c1617e-58dd-4b12-946f-8fca21b9cf49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 8fd78aad-47d6-4996-8866-5fde18b5b637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 1fa03da6-a833-4fed-82ed-d86f374dde81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 54de5140-6862-48e5-93c0-add63a80ce2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 18a377ed-522a-48d1-9370-a672cf8c817b)");

unit.assert_eq16(16'h5646, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #792 da34808f-ac0f-492a-8b2a-c998d0e73798)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0632;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0095;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'h0097, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #793 6ee0e13a-0cd0-45e1-9a43-0d7768163c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 00806721-3afd-497d-85b6-1d255c6f789c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 3553514b-3a93-4891-8c32-3217c12628f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 16ab693c-1df6-4f38-82bf-7ab94a107b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 b8d95da0-2f5b-44bd-833a-3c6b6b2b662d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 a3f5c879-8164-429f-b793-31c16bfca5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 51922341-7e7b-4a7f-af12-1265c51a72a0)");

unit.assert_eq16(16'hA4B1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #793 ab7eacb2-e0a9-48d9-8aa7-01f3ac055d2a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0634;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0598;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'h059A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #794 a5f9df56-c531-46e8-9c02-4e66431e4c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 04ff1a6f-642c-41b6-8678-513b36a24182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 53ac363c-4e58-4837-87a3-a1c475eefa7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 ab35b4cc-e42c-46cc-9edd-ceb28f3fa4eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 1307aba7-274e-47a1-abb8-926331161d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 a8ab4086-bbbc-4418-8c98-9b1c8d852dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 3d6f9346-fea5-4e73-b4d4-da276aee7ef2)");

unit.assert_eq16(16'hBBC8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #794 745041fd-5d92-43dc-afb5-6dd74da239c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0636;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h091A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'h091C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #795 119ae5ad-6a8d-4c76-987a-b7d1f8576a9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 d63f64b6-b313-4713-8226-dc1f649bdc29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 83abfdb7-13af-44fb-b6c6-37a111f4b97e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 b880347d-683b-4ff3-bd3a-75b82eb46485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 bb01ecac-4d9b-40cd-9142-a7b2707ea290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 7f6a6fa4-d027-4546-bb1a-9d202b128918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 aeea95b0-6454-4e6c-b5ac-bb1c5d08aeeb)");

unit.assert_eq16(16'h3046, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #795 fa733a01-b22d-40c8-a2e0-80b7c921c08e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0638;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h077F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'h0781, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #796 08430fe7-8708-462f-94fa-cd5a9e83a32f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 657b24b0-2ee2-411e-841d-df9539ee9985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 33cad31f-b774-4569-96b8-e9bb29513801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 18665b5f-d78d-4bcc-a64d-91f5ca877457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 a7473350-14be-4563-a135-e5df1262ff50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 f4c6b5c9-7235-42f5-a79a-936723d67686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 70ba5ff2-dfd1-44f1-b3ed-1df6b407e15e)");

unit.assert_eq16(16'hB4AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #796 36d6a811-b77f-497b-b2ea-a27390b47c42)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0511;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'h0513, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #797 a16b4c6c-feda-49ad-a0a1-af3a7fdfd21c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 8f791a92-82d3-4d14-b00a-a3128f885b50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 87d02c1a-bea6-421b-b19d-0c3d4812fce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 604ebd81-4c38-4434-96e7-4af24abc370c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 8f173401-325f-4eb9-b0a4-51247928d864)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 08532ade-01ff-4a2f-ae6a-b8e4fee05038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 de7c87a3-6939-4241-bb3b-44696c2453e2)");

unit.assert_eq16(16'h3504, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #797 0ecc1d02-8744-4805-80e7-af1c9b8c6bd2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0821;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h0823, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #798 72fea7dc-6dac-4a34-88e1-4a0afec9956c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 83834438-df38-4578-8eb4-0caa05269cc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 882f26a7-870e-46a3-819e-02cb5f62c92b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 42a3040e-d6c8-4932-9aa6-afde7763ea02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 9214d6ca-94e8-493b-9b6e-9ce1763cf178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 0e67f94d-37a2-4ddf-bf61-a86518083a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 347cc438-f49f-4df0-b653-982874311c37)");

unit.assert_eq16(16'hB871, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #798 49548918-0741-45bc-b69b-190894db31dd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h063E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0161;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h0163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #799 86a9ee6f-dcad-4e50-924c-c27e22651588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 718cb449-8c15-4241-8dba-0ff196338ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 542756db-bb30-4bab-8f78-389d143bacb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 79ea0dda-f540-4173-a49d-f9a36161bbc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 e36c3a0f-e8af-4ad7-b9da-19080a2e7b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 37abde02-fa7f-4b2c-b863-cd7dbd2107f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 05e18b6b-52eb-4f94-ae19-3bc4f905a20e)");

unit.assert_eq16(16'h213D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #799 8d117644-bf06-4f18-8e6e-9d368583e5fe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0640;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'h05E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #800 69175503-57e0-4d5b-a301-1e6a5557a96c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 68be4852-cbca-4669-8bcb-4d396b6c65d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 143ad969-beeb-41e1-8e45-202fe9a1dd85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 ac57d0ea-d431-47de-aadb-d430722bb7c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 f37c6295-8756-4428-afe8-c905ab91549f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 faec956e-5d10-4709-b623-1d4858739340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 2d3fb7c3-b07c-42f8-b0b7-8a6fbf4a69d6)");

unit.assert_eq16(16'hDC05, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #800 5ab6b5c9-427e-47ae-a42e-ac2df8dcf939)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0642;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'h07CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #801 4bfc4d13-c1fd-41d6-8085-d9ff5bc677af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 94774e3c-7765-40b4-b461-c280f3a4a2cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 04d7293f-6080-42b8-b008-a4f08ba7d594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 0075d804-2cfd-42ec-8e47-0608ff459516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 0a342b8b-df05-42e8-94d9-74e584e7ee1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 409395aa-802b-4bcf-a909-c9e2ead9bec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 3ad6a5a8-fc72-4841-a60d-8c3dc1a3b6e8)");

unit.assert_eq16(16'hACB6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #801 622d1bec-7b0a-4231-aee9-f1f8738d7711)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0644;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'h0E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #802 763cdbb1-8a30-42c5-8717-207e55aaa42e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 ec84041e-dc48-4805-be42-aeecaeb2a1c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 bc2fb4df-e812-4c43-8d83-d3f7651b1e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 97d5a83c-22dc-445f-89b0-e3e5457119d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 42d464b5-e7d7-43b3-adf5-77ddbd797095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 38ba8e07-f35b-4c7b-a830-5480bc8517c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 7ae64a7c-9a78-46f1-91b9-47f178930e38)");

unit.assert_eq16(16'h690C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #802 c1a56727-4934-4ea6-a179-b7521b32853f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0646;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h0A1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #803 af6720f2-5be9-4b4c-9ccb-15c215fbf4fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 efc72248-a9ce-4f5e-b922-2010822ed832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 1ac60bc6-0c07-4f73-ac08-061f3e47cc88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 91077a14-839a-40bf-a173-5ffe2d71235a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 1e003ca4-d296-4ef2-ad1c-552a87a5a9ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 d17987b1-73c0-462b-8f0f-7e7c4ad08749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 f39cf5bc-991c-43cd-99cf-2d4a3fde205a)");

unit.assert_eq16(16'h9C2B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #803 4da696d2-cb1f-4a0b-9fe1-cc7505562d64)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0648;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'h0E7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #804 3b770738-5927-4cdc-ad4d-b7101f98849c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 bd29640e-aeac-4094-8a7d-e0424b37527e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 39e41e0e-1122-4ca0-83b5-1ffe78c441b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 1344c0f1-af65-400d-8189-fe7f789f9420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 d890c57a-a504-44e9-bc69-2298f8ac702b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 9e8989f9-7be0-4004-97db-7395d193c972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 c1610bcc-3163-43f0-808b-97d169cf5d5a)");

unit.assert_eq16(16'h716D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #804 597b3846-05d7-4400-a117-6c34768ab7e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0201;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h0203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #805 65dcc116-c309-410b-a1fa-a1ef922da2d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 2ddac9a7-f6db-48a3-b645-957002640b62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 f77d8fe8-2ab2-4e50-87d8-0d02de0066f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 ecf78b93-0415-4492-b8cb-6bb501e03aca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 ebd7b8ab-0a7b-4ca0-b7c0-7636ac6979c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 45c13b08-5bc4-467f-b9c4-ebd082057d65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 8afd384c-9dbf-4f31-a965-c1b4bf5ce81e)");

unit.assert_eq16(16'h1B7A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #805 e271e8cf-d282-49da-a4bf-3ea42e683745)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'h08DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #806 c6790e9a-8a07-477c-a1a5-69a439c64bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 289a66a2-a398-4d62-80b1-e4bbfb08ed5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 a6a4de6d-b4ee-4407-aa92-886ce89f5e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 5632a674-339e-409f-98d3-8a81c50cb26d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 42f5a1f6-1f1e-42eb-a2c2-01584dd6db0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 b94f30a9-7003-4669-bae7-d9876a5a38c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 53443146-202e-4c8d-bfe3-7ef3c30c0066)");

unit.assert_eq16(16'hC9D2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #806 8e8c6a18-d744-465a-8a2d-c73a392e448a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h064E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'h006D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #807 c80d7bfb-7c34-417c-af0d-41e5ed41de85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 dbc56be9-aa62-47a1-8906-4c21a222343f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 d63e2cdc-9f66-40b1-b3cc-db9ff0c2fc62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 a4d3d430-5335-4a84-a57a-9bd6e0029089)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 9bb43b92-daf5-42b2-a87e-73e008f06b35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 4a391ea5-860a-4877-a668-ee203399edde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 b06e6b6c-1e1f-477e-bff4-d6340c820d4b)");

unit.assert_eq16(16'h23BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #807 835cb8e5-df1c-46a8-9325-d6e302b3cfc2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0650;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h036A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'h036C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #808 790da2e8-6d47-4dd6-8358-c99325c4b22e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 e52eb3a1-d88b-4cc3-bb53-2a481581deaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 86af9833-115d-4219-a780-d1636aa63f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 251762e1-7e7d-4cfa-b03f-21500149054f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 621b10ae-7470-44d7-adc6-9d221c56615f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 4652ff73-61cb-4b62-a569-d701ebe8a52e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 48f0e585-e55d-4732-b2c1-240920147315)");

unit.assert_eq16(16'hB523, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #808 cf136070-5d18-425e-acef-8af6f8e9fff8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0652;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0996;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'h0998, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #809 9e4d8ba2-a440-4903-84a9-ce5fabbbc887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 1f4521ad-ed4a-473a-9d20-c5a0783f0507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 2cc37cbb-9389-44cf-a598-779c296d0b98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 d7af1ae5-8cf3-4afd-84f0-c12fbf33c28a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 5446adfd-c792-4f4d-9021-0b4e917bb98f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 51089cd8-7c47-46bc-86f8-4710b0fd5402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 beb672b1-bf82-4ec3-b73f-c134808ec30c)");

unit.assert_eq16(16'hF781, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #809 a48cabfd-5b2f-43fa-8506-5f04ae7183aa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0654;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h0C56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #810 e94b81dd-7209-4433-8859-6ab644ac71a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 b09b140f-a2b4-4c78-ac5e-e2e89d1f03a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 a09d7f8e-cc40-4fc9-b854-d4132ac38aa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 64cfb5ca-f6f7-4676-8fb3-397b6dd485fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 ae353732-2faf-46e1-afb8-b553ffdd94bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 a4a56c9c-57b4-45ae-9342-a50ec1713279)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 862e6e03-8b11-4a3a-bb96-7b156798571a)");

unit.assert_eq16(16'hBBE8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #810 df4f8282-3fe5-42de-a539-8c42b1810999)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0656;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'h0F90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #811 32f3ec66-2bc1-4c7c-bd55-6e2d1a59149d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 2cb9225b-31f7-42d3-b6e0-4cd763ee45ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 7470ba08-4cc2-4bab-bb32-a7d0a2a6a1e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 ffd2f5b2-b27c-427a-9393-64ba073eaa1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 4b50e95b-37b9-4e38-b086-bef3e9512b26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 b603a088-57cb-44a1-b422-e17f6f9a002c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 105f2603-d78b-44cd-930c-f6e6d68fbbe4)");

unit.assert_eq16(16'hDD56, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #811 c3bc7490-bab4-41f6-9a69-2e5e2b1f8c07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0658;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h0F05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #812 e4a6e5a3-e99c-4484-a9cc-48828a12345e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 9c7d9f98-8424-4e7d-addc-dc81d65c2675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 2d20a496-e598-4d76-a50f-43fcacce6647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 94f89ae9-845f-4949-8b1b-69edca07ab39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 dbb37033-f5b4-432f-9c0d-7540a1955e77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 a4dc5377-ddb5-4eb3-ba75-a5113b1c1b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 4ee66f86-5f07-4dcf-855a-010478e86e8e)");

unit.assert_eq16(16'hB7F4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #812 ebe650f9-ff9f-4143-a037-33296e5c54cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'h03A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #813 9b6fe6d5-982b-4ecc-a7fe-11f74e7c15fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 fe5abf2b-2d7a-45b0-9360-924452ef5ab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 8d291819-c0e4-4a33-b5a8-99422eb1fc06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 abc7772c-17b7-402f-97c4-ff6c9002bb7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 cfc8ad56-3186-4d8e-8a7b-dee514c8bfea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 1b52b414-f596-470a-9945-2f15d71170f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 e89ef6b6-351b-4407-9ecf-59b9c92f3b3e)");

unit.assert_eq16(16'hEED9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #813 e3157a08-431b-4489-8620-c84a51e46d3e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h0D1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #814 214bdb3b-2a07-4a83-b404-3a0c91777cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 bbbbbdf7-9bac-4815-a19f-6dc07fc8fad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 e187e9fa-baeb-49df-8c79-56f82106f1b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 b8a63036-7bd0-4b4f-99ed-7636b6a6cc43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 d6bb925b-12b7-41db-8620-2f2b066dfede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 d52e8f1a-f747-4a97-b1ab-325f71e21e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 69242ff4-cd50-47a4-94cb-d9f2100c203e)");

unit.assert_eq16(16'h568B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #814 cb35f161-e3f6-4eea-9029-1ec8e5f4d3a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h065E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'h0D78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #815 98002c26-0e99-4578-8563-26adf5ff8e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 6ca272c2-2ad1-4829-8354-309255186ce6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 c4209cc1-caa5-46aa-ae51-a7aa0d8e9ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 21f9918e-35e8-48a8-9874-b80fe4be966f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 32c94b54-b694-40da-94a2-0dd093cea58f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 ed1a9a51-90b8-425f-b666-94971be2b7c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 00d085f5-7785-426d-98bd-35cf85393658)");

unit.assert_eq16(16'h53FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #815 8cee46ff-2c2c-484a-a102-0fb0cda5ebc5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0660;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'h0B5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #816 b8f25332-c81a-417b-a194-a79956c41a5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 a07f122a-0809-4220-8cf1-785afe5d9939)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 25feb2c8-8b8c-418e-8690-a90811ea0bb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 19849a8c-1c6d-4ad4-bd50-93775854eeb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 299825fa-4b87-4dc4-93d6-1378b3fae17e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 a87e0f98-05a6-48c7-bce7-8c5bad68f63b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 d6e2460b-3d95-4dbc-a8e7-f8851bb9bad3)");

unit.assert_eq16(16'hE7FB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #816 a8e6c517-439f-4191-a99e-8eb2bcade32d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0662;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h043B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'h043D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #817 da09d050-a094-416f-9d80-aefe306e7e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 6808ebe3-b796-4295-bdf7-4b6b9e9a2438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 40ee7fcb-62c2-4592-93ab-b20a0634cd07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 4de8edea-b392-4f7d-998b-45aa1a8dc834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 457619e4-7331-41bc-ab01-5a3b97098abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 6cacef9c-a1a2-4fd2-992c-eea26825f891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 aa5f0f8e-6a24-485d-8231-db61b14e55ed)");

unit.assert_eq16(16'h1C6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #817 14075d4c-a8a7-4f59-b32c-650f750a0252)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0664;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'h0D1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #818 f4c3ba58-e024-441e-b3cb-f00c93029f32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 0e07daaa-a03d-4268-990f-b5f95882c890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 adc39fe4-5144-4b2f-a2fd-e13ded471ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 04f3af2d-9c20-43a1-b7aa-eeed82cebce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 5d35a681-a676-49d1-9e6c-125848a11bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 241d89a7-58bc-4ed1-99ab-2adacd7b093d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 875a2f23-27b7-4f67-95dd-5968602190e0)");

unit.assert_eq16(16'h5923, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #818 cd7298d4-54ae-4c2a-84f6-ac60335198d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0666;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0916;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'h0918, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #819 5c26f974-dce5-4cb4-b65d-ac70428ee328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 adc3ba51-e3ea-4a70-9fc6-2e6aebdb3a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 b4463784-9494-4736-8141-0909e50e7eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 159a0458-5714-48d4-9c11-991017f96c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 8ba7b99b-7ddf-4d80-b9ad-a70f328eb495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 0e9f1dae-c64b-4473-9724-7df26d404c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 1a67aa41-ba1f-4451-992a-7ce35acb30fc)");

unit.assert_eq16(16'h3F5C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #819 10e2dc31-de9a-4b5f-8ca9-fba37e332f3b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0668;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h0F2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #820 fdf2df74-331c-497b-8ffc-3f2b56a7e469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 f85a3b1b-7f0c-45a7-903f-79081c5dc17b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 fa8449d1-34ed-47c4-b62f-876495525d57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 0e5df8eb-9535-4f8d-aa9f-dafd6fb9943a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 e2ddeccd-3cb1-4692-b484-f8626b14df5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 5b31ee37-3277-4126-a930-884d07a53657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 c5736a95-4e35-4e0e-9edd-99fc704d02ea)");

unit.assert_eq16(16'hB583, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #820 529e5271-f32c-4922-a06a-061cc2cf280f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h073B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h073D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #821 71aa00a4-ad18-4727-90d3-8e96686ed9b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 c5cfd13e-5074-476a-9b0f-3138de62a541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 8fc9a036-1a55-433a-b9e9-b73f79f4d935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 c4101180-f3e4-40bb-b2d3-e731d2252555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 afb93f2c-df44-4e21-ab21-e18cc5ddc9c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 6e0fa426-60b4-4748-9a25-ddd8a29ebec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 16990b0f-144a-41c6-be32-9e705f1e3bf4)");

unit.assert_eq16(16'h265E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #821 0a9f508b-9e26-420e-bb6d-391e8b861c7e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'h09A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #822 e54a04eb-faee-46aa-8b14-c37be9296ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 90690d40-14f1-490d-96dd-b0f176c9eb49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 d60e918f-c571-488e-8c19-d34fe964371c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 44adb5ee-9c5a-41da-b713-5bb8de9539f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 15b91135-ac29-4afc-b02f-35fb738012fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 391814ba-fca1-4c13-8a3c-8c365d7ff1eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 17159422-720b-4bba-b49c-0c55a419c683)");

unit.assert_eq16(16'h2B8F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #822 ac13b8bc-a184-4da7-9529-e71ee09a1a9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h066E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0779;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h077B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #823 9e0cd51e-14ce-49b0-bb44-8e0b43d831ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 79e1b4c0-07c2-40f7-9f9f-97b7becfdfcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 e0611a7b-bf0b-4ec3-bbae-5d11fafbf5b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 369ff38c-b8e2-440a-9e5e-74536fdc09fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 37705df2-0981-45fa-9522-a66c1d70170c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 002089fc-ee10-4cc9-87c4-555b261ae74d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 2ce8dcc4-c06a-430e-98a5-1c5e3834021e)");

unit.assert_eq16(16'hE856, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #823 88ea54c2-268a-4994-a1f1-fc189d53b620)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0670;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'h0FE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #824 5c0580b5-9f9e-401f-ab16-82bc10300f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 16125bb5-d8da-4d89-950a-5030671fee38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 87196f4a-c91e-42e9-96bc-b3f263d3f695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 7f460d49-ad93-4320-a40e-44b326cf907d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 13a4b4b0-bcad-46c7-a0f5-f92866ee217a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 db5d699e-6045-4614-88d2-1b39c805df3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 56106e0a-4b85-40bb-b5d5-9bcd26253d20)");

unit.assert_eq16(16'hC214, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #824 40cb2993-9604-4061-a856-9c77ab497230)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0672;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0087;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'h0089, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #825 d525d9c2-3ad7-47db-8f5f-8f9b59c00f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 ed7ab609-3580-463a-b00c-09d91ffdfdc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 7c228328-35c4-4294-87e7-312859ca9ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 6e0fe5f4-5d37-442e-a825-f7f4ca0d5ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 1c0d042c-4a2c-4bf1-bbcc-98f88441574e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 636c9fc3-48d2-4fe4-b6d7-b3b5499ab18e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 22ce308f-0471-410a-8344-68edd3d018e7)");

unit.assert_eq16(16'hD83E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #825 da16627c-9d31-4dff-923f-b6dce0563b48)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0674;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0033;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h0035, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #826 7148d762-f749-411e-8b94-18a22c8e5111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 70a3abc8-86d5-47fa-ad94-f92bd4f6ec77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 aacb1987-b6b6-4b4b-a40b-662eaea206de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 91d34247-8c32-4428-9d2d-fdf7e4bf4141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 0efade4d-759d-461c-b6bc-a0f01dc5de34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 a6030c3a-8a49-4a72-801c-a2b1f63b903e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 8149fd69-fef3-4e49-985a-9ee7ed3a8586)");

unit.assert_eq16(16'h32CD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #826 399f6e3b-a56e-45ee-9623-303cb405fc1d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0676;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'h0CA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #827 8aa06c59-3b44-4493-89e6-6a0434b6ae77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 a7bd28aa-48a9-4cfc-9c5a-fdce7efae71b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 f451bdb5-97de-4cd7-aab4-1d443ed83337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 ead0e4a6-4d24-454e-a5a5-151917098a8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 cbf26eeb-e69d-4281-a173-31414515634a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 9a9afc0e-752e-4148-9cd2-e8f4d4cabc58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 5263ca28-2e99-4107-ae62-e2393cddb909)");

unit.assert_eq16(16'hF3F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #827 a316d843-7c11-4e89-9bed-fd299c88116f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0678;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'h01EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #828 8dd5e548-b29d-4042-8b4d-57d7a5ff81b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 48d785e7-d084-4c35-b753-369a4ac99524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 4206d2e1-2fc3-4051-9c5f-5c80e9b8fa22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 a314245f-5bc6-48d9-b960-623394ea719e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 18c4d27c-21aa-4abe-bdd5-ee3153722070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 0b368c59-b1b4-4851-894f-1ccd301c0c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 92a14982-5f1c-48ec-b9b0-dfb940b424e9)");

unit.assert_eq16(16'hB741, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #828 6e18d4ae-848e-4585-84c9-6bbcdca5f3e0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h09CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #829 ae149150-8b67-481d-a037-0eb4dbf6a923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 7e7adeb6-d353-4df8-9330-81976d636893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 ebf84f2a-7e46-4509-aca7-3b86f39f569c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 da9d2d9b-5562-460e-8b49-f0074c22c2e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 a8af8e62-a5d7-4cf1-aa10-985fe08973d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 97d85803-28fe-41a7-a677-68773988ffd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 fdbcdeb4-cb62-434f-ac3e-e27b40ff1ea6)");

unit.assert_eq16(16'hF10D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #829 d14d03dd-3cc7-4a8f-8f05-99d5d8f34bd4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0708;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h070A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #830 eef482aa-5d15-41d2-bfde-c72a09f9b343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 0fdb8a90-6458-4e0d-8212-d1150f732ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 e749eb9b-e847-4908-9b01-d085930cba4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 955b5767-3768-432a-a397-f030247b6e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 36290b35-a55b-467a-94e3-fb40cde8f67d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 c4d81ae3-62f6-4126-b274-3a90aa5dbaab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 04ef0bce-62bb-4871-a841-780db2c4c6fa)");

unit.assert_eq16(16'h6EA8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #830 a888dce5-8344-4fda-8d5d-c258f2fed4ce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h067E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0986;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h0988, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #831 c0c6930f-8ce1-4cab-8394-bc265fc865ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 8062c68a-cd34-44d1-b7da-350b0f6f339e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 7bb5a4b9-7fbc-4438-bf40-4261328b0b19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 917b8b23-f95d-4032-acc2-e9428eb43be9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 423cda29-839e-4ac2-ac10-2f390983dc53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 c1055da7-9cf5-48e5-a120-fa5a53152c78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 9709a750-525b-4c5f-9598-1de14c093d4e)");

unit.assert_eq16(16'hD0D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #831 418c1a69-bcdc-4808-b418-440fae52c921)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0680;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0148;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'h014A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #832 70b3672f-4296-456b-921c-e964d5e2ba1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 0033a7d2-eae0-4e7a-94f0-16c181921aab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 6c7797cd-1496-4b65-a343-d4aa74ce6325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 a8a1da76-fa9f-4af8-8615-7432d0b35bf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 a6f52303-d3a6-497a-848a-0bcd17353222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 9dd55c77-1176-49d7-abca-899ccf1d8e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 af3ea0a1-0146-4725-99ba-7e2c12f6ba67)");

unit.assert_eq16(16'hBB57, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #832 e2be0729-2343-4312-9281-2491a920378b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0682;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h045E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'h0460, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #833 6df53950-251b-42d8-8b4d-ac22adba70b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 8349eabb-9f56-48f5-a4c5-f37b37a9778a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 e7510905-0751-4248-ac0f-08229dc0adb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 fc13a837-5634-4ec0-8f10-7f1cf5a4d523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 8a75f155-563e-43c9-aacf-c6d37719a24b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 b4b1e44e-8155-454e-a3be-e03ff95d13d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 1efc0677-fd03-48da-940c-aa7e23b23dc6)");

unit.assert_eq16(16'hFA46, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #833 9d97ecf8-855a-46bd-96e4-d32e865b78ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0684;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0276;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'h0278, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #834 33189d2b-e7a5-4124-97bb-aab7cfb6f083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 e65b7424-0f03-4162-b8ce-96ee8ce4da49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 2faf044c-1731-478e-90f4-e1db8ca6c887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 f2031178-941a-46b4-8acd-86a6e6156d8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 59419139-fe68-46c6-8fa7-0d6f56f15454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 204f4cca-8863-4665-8bd1-ed4fdf8d97b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 fa9e15be-4a17-4f5b-9bdd-58dfb0f5c7cd)");

unit.assert_eq16(16'h10A7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #834 9c50a49f-40fd-4eeb-b1e8-afa73efdafbc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0686;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h05B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #835 ea256ae8-8c8e-4246-b77b-ce2dacf0613a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 63e4284e-829d-42aa-898c-05b68c703bbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 47fa11c3-1935-4684-be91-9c483ae5334e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 a2490967-fcc7-4efb-b138-3941ec845123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 3e7a3a4f-74d5-4d5d-942b-a36fb89a69c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 0755e5b3-4a7a-42b9-8551-d9ced90594c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 772e2dc3-392d-4411-8708-242d0ee318e5)");

unit.assert_eq16(16'h0A51, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #835 37831215-e589-4055-9653-b9b3c11f3ec4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0688;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0775;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h0777, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #836 5c0ad167-e23f-4933-bff1-604d068954f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 23f4a310-3d81-4065-a73b-5f4a224dec03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 9e26b269-6926-46b7-a52f-184e43d214f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 ca512984-cf95-452f-bd0e-b20107757162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 1fcc11eb-4ddc-4254-87e1-caa20b0cbaf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 5fe4522b-3e28-466c-9bef-590e0ab1e121)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 96a48363-17e9-41ad-b423-c0972317bb1f)");

unit.assert_eq16(16'h85B9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #836 1751ce5b-02b6-4c53-a47b-b5f82436772d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h0AF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #837 c600dd2d-4dbb-4dfb-b2c9-b88139402da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 f712ca36-685b-4417-8007-0d88c20e2e59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 184c7c5c-680b-41c4-8ca0-c1c2ec576660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 b7c7cdc6-7089-4e14-8cec-84fba5519edc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 dc1c7aed-fbb1-4376-9fe7-0d40cf85a7d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 bccacc01-c544-444b-80d2-d257fad110d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 35b188f8-e83e-457d-9f52-13c0d47ca0ae)");

unit.assert_eq16(16'h6B82, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #837 148088c0-ab19-4729-9ed0-9f5d5132965c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h0EC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #838 5d06e103-1603-4110-a3da-18821a7bd160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 14e5e281-cb5b-4772-bc7b-7d186eca06e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 6248b381-fd83-4d27-93a3-39cb5fe5a9af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 df0e12c5-490f-4b93-bffc-2d232302cd10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 60a8bd47-5830-4768-a22e-9fbc70fd32f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 cc81c36e-4e6b-43ac-9f3e-e39cfc211d21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 b656e42e-0d43-413c-ac9d-5d8dbf5ba320)");

unit.assert_eq16(16'hEE8A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #838 ae14c2e6-ab23-401f-b200-c8765cd2c7cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h068E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h03EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #839 e0baa24b-8146-4a39-a26e-94b13625f475)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 d5d274bf-7009-4d32-8c8f-25b6e1998c88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 076d4829-1c14-4c1b-96b9-b403bee08fb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 104ff177-bb7d-46d2-9db2-a2eb47eb3971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 51a80c41-94ab-427a-b5cc-497345c6ddd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 11e96a72-9c27-4894-b18c-62ee4fa0793f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 a83cff0d-6b72-47cc-892f-99dd80e8ec92)");

unit.assert_eq16(16'hE7EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #839 bb95665d-55df-4922-ade5-0f7adfa7961b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0690;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'h05F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #840 c62671b0-8c9b-4403-8ff3-bcd8f061bc11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 d65d22a9-d71c-49ab-b03d-762c1252cca4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 0e333391-e39c-4c95-b48c-1e000038cd0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 ce9ca25d-feee-4ba5-9bab-d969d4647d47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 a49bf9b6-9c66-483f-a7f1-69660b1ba5e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 2aad2fdc-6f22-4787-bbf7-de2cc14bcb00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 27f27f7d-734d-44b1-aa09-6862fb6d5d35)");

unit.assert_eq16(16'h7346, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #840 d957fdac-d041-41b8-8d51-fec3fa040baa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0692;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'h02BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #841 159d507c-be59-4904-8268-56080003f60f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 d66a8f32-7fa7-4480-9818-a9b5da2bfe3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 9158147d-0d9b-4632-9809-a617bec4c866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 32d96308-a66e-4ccd-b802-92c01baa3f62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 9571e9a0-88d3-4cbd-bdbb-16bc663ff335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 f2b3ec2e-9c44-4c3f-834d-a7e14178fded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 2faa29db-8811-4c39-aee5-4cf92846f99e)");

unit.assert_eq16(16'hE3BE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #841 4fce639b-eff8-49d8-87d2-19df7494dd34)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0694;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h004F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h0051, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #842 6d98f232-6c53-461e-8801-4c5dade41c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 93661523-2c0e-4671-be60-1ca909640490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 bde67134-7967-41d5-904d-59a76d8754af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 43195839-183f-4ad5-a082-4eb513be7ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 de8fd3dd-aae3-45ee-86f8-aee99c14a6db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 3d2ccad0-9abf-4f35-894e-a5265b28f55d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 cfc71934-6843-4bd0-8a3e-1d84b6aa499d)");

unit.assert_eq16(16'h0E1B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #842 164bc598-31b4-4b8e-bb2c-803a74e26a6e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0696;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h0D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #843 4b0b2d04-dc05-4ab4-b918-f5e8749c5cdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 4cc1178a-5d39-4591-9b61-ded2ec3acd64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 0f93ba97-e0d1-416f-a46a-4feb9fc24c82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 51c78e3a-0819-4342-a7fa-12ec0b6a44be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 2a35101e-0010-4e7a-b203-0428883c8dbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 5d6fa5dc-6ecf-44ca-96cb-3b5e909fdff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 db75c44e-77a8-440b-a76e-4dad415e8171)");

unit.assert_eq16(16'h2F94, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #843 d39be2a2-82ef-4495-bab0-9c641b275056)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0698;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0900;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'h0902, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #844 00f81022-73c0-46d1-9003-d26ead91b371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 46aeadc3-2157-4006-b2aa-2f2fa49e863f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 ace65d9f-f400-4514-bce7-bfe60d615b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 4bde8c68-f747-4a83-9ec9-7e04e21a4950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 9d0dc58f-7276-41e9-9965-d1f1a8987ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 b0b6e83b-b935-42e9-998f-474e4aa85e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 e7c5d888-059b-434b-9cd9-3b71f803dd41)");

unit.assert_eq16(16'h3AC3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #844 4584ac1e-2575-4cb3-b9a6-3183083ce732)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0815;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'h0817, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #845 266ba435-bded-484c-83e4-ea9a37a566ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 176092f4-747a-4fb7-8719-42914f377c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 3cc7e516-6737-41e1-91bd-05d5842a6922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 e56807da-8e97-47ee-9864-fb980e9d9923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 e02073a4-cb76-4060-a5cf-b6596f87b320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 903659de-ecb4-4056-a6d4-989f04f65b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 88c3fbe3-5c88-452b-853b-6d23fa4f69d5)");

unit.assert_eq16(16'h6AC2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #845 cf617870-e415-420b-860d-219016eae3be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0075;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h0077, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #846 044018a3-4447-4eaa-9a9d-d569548bb830)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 d70b7e7a-253f-4c68-a021-e320b30b1f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 869e8c5b-5212-4f27-983f-b09b0717b4f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 2c15a9ad-f48f-4660-9071-a9a177ae53ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 965473c6-cf2b-4701-bf59-10f7550c5e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 72341317-00f4-4d7f-b877-0dc6d7ac7982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 1fd9e331-834b-4dd9-b28d-35e83d57777f)");

unit.assert_eq16(16'h98E6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #846 2b00fc0f-4a38-4c8b-bbe3-22a521d2e11c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h069E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'h02FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #847 75d16ae8-6e9e-4e48-b5eb-ff192084aae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 d939b934-b3a7-4436-bfa6-bf00bf8eae36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 ac185041-2c57-4ea3-82eb-0422297c4c0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 ebf9f911-d1c3-4a7a-ac11-c0adc66eae36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 73fc3f0c-bfd8-4191-ac9b-7f6ca2498e01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 4e8b3b87-9116-4837-ad88-fc2bac8c5096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 478bef63-3d8f-4fd6-8c18-e306d2791304)");

unit.assert_eq16(16'hC9A9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #847 666df202-2f4d-4fef-a47d-76defd1cc5b7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0009;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h000B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #848 c0426f53-bc49-4e92-b107-df2696fc1554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 8d283092-10e4-447b-9b01-3666c74e95d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 c061ff82-9558-4127-897a-36c6730b3d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 e0c3ffe2-18ea-4823-aa0a-6779bf55a388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 c7836d3c-5872-417a-941c-22b5ce60ed7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 ee601e47-20a2-4c31-baad-813441d275ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 98250fc7-9210-461c-85b6-e66d9fa1143f)");

unit.assert_eq16(16'hFBEC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #848 aa1ac905-2c22-4b1f-aac9-28eb48d95369)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0545;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h0547, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #849 35515709-49c6-4bbe-a991-840e19061f3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 4dec6452-51c5-4d95-926f-84e6f95daefb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 058cdbc5-0cde-4c30-b832-aa1afad0d08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 fd9d5533-3576-498a-affa-a86e8d0db899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 0fbecbb0-2563-4964-98b3-7c22dfaf3557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 0dd30cec-7975-4f76-852b-7387f6b8afa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 e83037dd-3a43-4418-a558-57d96cb0eaf5)");

unit.assert_eq16(16'h2241, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #849 1cc56c0b-1c16-4401-bbf5-ff5cc73aeccf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h065C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h065E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #850 b50ec7dd-3b22-4a7f-80f3-d2984ec26e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 53b1589f-be1c-40fe-99ab-5bce8fac9495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 2789da53-bdca-4a10-9ad1-f7a61c6ca083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 d866e0d0-1491-473c-aad5-8980da5f990f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 f3009af7-6f9a-4fbb-b19a-42cf819701b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 b30ce552-07ce-4ecc-bade-7c66a25cb4ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 55ac44a3-dffb-4cdb-8f5d-6bbaab7a0ccd)");

unit.assert_eq16(16'h4B1A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #850 74c9b3b2-52e3-493e-a6bf-520908a6b8e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0997;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'h0999, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #851 6837e614-2268-43d8-bc15-3c2cbb5bb1ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 c7c1d3c1-ed4c-4c20-a9c8-7e786dababd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 c53c50ef-df2e-4b7a-906c-844470d74be2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 1370200c-6bc3-48ca-81cb-b0d67dbf79b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 70d382fb-03b8-4229-8b35-132e858bae11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 21f02f2c-96b3-428b-80c4-4670876763db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 02ecb38b-3c13-4a4a-831b-b932c1c920aa)");

unit.assert_eq16(16'h46F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #851 1bf19748-7789-45b9-ad29-8dabfea6ce92)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0827;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h0829, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #852 59d02d07-aa94-4e3d-868a-ad1ce05e1f36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 7a0afc30-cf65-44f1-a808-60e60d4fb6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 409ed65e-2e9c-456e-a88c-ef2c71967c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 42ae352f-9f18-4f1e-a254-54829df5c734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 9b487303-170e-444a-aaed-3b87b0a46d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 5598d456-9cb6-4390-a04f-9dd7b5b86bd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 6bb85751-5d73-4d93-8841-6ddb41e380cb)");

unit.assert_eq16(16'h742A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #852 fb8478f4-02a0-49ef-9c2c-ec749c4dc90c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h08F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #853 31573ef2-4e31-4ca5-b880-be906e501a90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 50662a55-545a-4ea7-a330-c16e3d5fdf83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 9a0c4dd1-a0ee-4b62-8ef8-bea9b71ac5c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 440f7634-a154-45ee-aaae-55e1016802fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 ea639604-e454-4f23-9883-f9bc7306dacb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 2c5a30af-ba92-4f5b-86f7-93de2bc2a64e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 f645fe78-a3c4-4ed3-839b-47e11af1fc0e)");

unit.assert_eq16(16'h06C4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #853 ccb7e529-f08e-4010-8102-d43e163bbb07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'h05A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #854 6e7b4e6e-8ca2-42f3-8644-b621fbf2a3c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 ceab7b4f-2791-4e20-848f-3eaa833b1113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 cac168c4-9509-4810-818a-373085031ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 f7e1286b-b6d4-49c9-b69a-d71241bb6cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 cae01358-8704-4a59-ad91-01370de95c80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 13ac5e29-acb0-4ff7-987f-84d0a87f832a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 60923bde-92db-4b7d-8aba-514e5b189464)");

unit.assert_eq16(16'h346F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #854 a51a5ba3-5e90-460a-aed9-a2857f206192)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0162;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'h0164, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #855 d33d6713-f962-4d59-a088-0b337b07f45d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 d1715444-809e-4d4f-8cc0-91e2500639d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 ef75b3ab-d957-4d06-99fe-15daa16b824a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 25dba455-7ff6-4912-b0fd-1632a17ae1a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 4574e5f2-d8d5-4c4b-88ed-013f9994f4c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 c357a5e0-e5ff-408f-ba34-b3c5015aac9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 61035dca-989a-4ecd-8cf1-069f29aec047)");

unit.assert_eq16(16'hB621, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #855 fd62b1a0-29d1-4446-8ef0-a90cbde0c5e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h0BD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #856 40f90bfb-a3ed-4e3b-96d1-aec4459b16d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 c8d4214f-3f3e-4a04-8e8a-47b20715da77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 20fd5eef-b990-4914-8ec2-a528be19ee26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 57b40c21-942a-4d01-ae4a-126b2d07c6f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 217be984-7af3-4397-9437-7c53aa93aecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 76a02003-2afc-437a-bdf5-ae18d57f215a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 aadfc850-84e9-4fc3-bda9-8ad64b57cb5a)");

unit.assert_eq16(16'h8533, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #856 31256dc0-d566-4de4-bfb7-a0c070259956)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0334;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h0336, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #857 b6cc564d-0b2f-4002-8c81-87489a6a8ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 b5b641a9-921d-4fb3-b4f6-4e6cfa62cc68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 57eddb5d-b465-45bb-b290-0b4e36acd1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 4232e22b-52fa-4115-bda9-39bd7cf07206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 53cdbb1d-aec3-49ea-9cfd-922f2f3237ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 daf0ae4b-8969-48b5-bd46-f4eb212a4c4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 61d0c162-e7da-4e69-8318-c43717b09167)");

unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #857 cd373ac1-f3b1-4512-a214-1209c4567449)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0865;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'h0867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #858 01853a8e-d3b1-4402-9575-1048afcd599f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 8f29bbce-546f-4e40-9cb2-63f0ed067d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 358bb27d-e0ae-450d-bb41-f98f71b8a5d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 b0784fc7-6aa0-4beb-ade1-d163ccadad28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 26d17c25-606a-4787-8391-994cfe05ad25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 77ce2480-ff63-4994-ab60-06b7465f6f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 b23006d2-f45a-40aa-9e7a-121edc25b89d)");

unit.assert_eq16(16'hF5AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #858 d5c4df8f-addf-496a-b8a9-116ffcaba729)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'h0E2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #859 fc482387-d7ef-4a76-9857-35036f90e81b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 1504ee66-eda4-436e-8807-0cf916776c4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 62a706eb-d69b-4411-8733-3dc3b4e586d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 40043f46-26e0-4905-b6ae-a6a98bd239dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 2b9ebc5a-5519-4f69-b7e9-3fbcb2a11dc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 ed96bae7-0ee0-46f5-b78c-22b84a499ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 8343a58a-f8b9-4997-a958-f03295f42a8d)");

unit.assert_eq16(16'hB05F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #859 55ed4675-984e-47b5-95f3-2bf8f402442f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'h0BE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #860 26735466-a327-466b-ac01-a8dcd4afd9dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 0385c2ee-a528-430b-bdf0-da363cbd98ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 55ffc9bc-107d-4e25-99ed-1b376632a4c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 38de7fcb-5910-41d8-b9d7-e3c51805f3fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 badd82e8-6a2c-44af-8b90-85f869ee3846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 55ffabdd-1516-4aec-a932-cc9c6557d866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 24c120d9-e055-46f2-818b-5ac7449a6b1d)");

unit.assert_eq16(16'hC174, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #860 44854d0f-c7a6-40a1-bd34-0a6c59fc0fdc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0511;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'h0513, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #861 45284954-9f4a-4b6b-8fb1-930bf94986c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 3ac75a7f-9217-4b7c-99cc-df64def641d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 57bc5cd2-8e71-423a-88b0-432649488252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 1cb9dcd8-f1e2-4510-8d1a-7e96025eccc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 e2bc7328-f691-4392-b7db-0beb55535a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 35b13d1b-809b-4fb6-b570-7c53017b118c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 0728a8c8-f4c9-42f5-b376-5a38ca440020)");

unit.assert_eq16(16'h3504, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #861 40062c11-6e62-4e00-aee4-14e9591250cc)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'h09C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #862 e72e0a2f-13a7-42e3-a2d8-743f68b9aa1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 a244b5c8-e49d-4d04-9599-363c8b9ecb37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 53a51115-a294-4c05-8a2d-8ce62818c038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 c9ed3034-47b2-4dd7-bb76-4af4f01f11dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 2ed48a88-4b1c-4e32-b94b-b8ab578b2528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 dbe54ac8-93cd-4c30-b5ff-0d5832845369)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 349aeecb-178b-4fe4-9f90-3b206dfed186)");

unit.assert_eq16(16'h0A7F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #862 0f450491-b827-4fa8-9ef6-ebf0ea3df889)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'h05D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #863 4d34a985-ccb8-487d-b6dd-16cd71a80a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 7b3f4bc7-94fb-4ab1-8675-bf31e23cd1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 73e31384-cc41-4261-a24f-38a7c106cd4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 5bf3a5a4-7838-4a97-902d-96fb08ab71cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 7e7d9a91-e703-450d-92e4-a4280be2e718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 69cdc99f-ae66-41c4-939f-89a39cdb80b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 251bc671-bbef-4687-a215-3f158a8842db)");

unit.assert_eq16(16'hD4EE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #863 e7735e18-e608-428b-b985-7d880ea702fb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'h09D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #864 0be162f9-cbe9-4acc-9e24-36e46aba3834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 60af5da9-8de0-482d-b8ad-8a472b43dc6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 357ccd33-fac8-46ed-a6ce-2613f69c4719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 30ca8ffe-6db6-40af-ac90-66195f278683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 04dec2dc-9558-47f4-93e3-59ddf0ed3027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 b2dea63d-4531-4a60-b743-a292d27dcb5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 6771e30b-9c32-400c-a5ea-1cef4e2303c3)");

unit.assert_eq16(16'h6FED, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #864 ae279a61-aba4-402b-bd81-b0abc1fcee0a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'h05BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #865 f59b4a32-a81c-45c6-a487-b6371bf43469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 f9c2e3e0-21f5-44aa-bbd2-d4677b908130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 2ea696de-c4e6-4044-a7e7-3490b44f9057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 f3bbe566-d9a9-4880-a2ea-3da2ec38fa73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 abcf1d0c-02f8-46b7-a946-161aae6bfbe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 832b1535-f66d-4894-a206-1f12fc847479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 71eece62-a748-474a-a3c1-50b4bb67ade8)");

unit.assert_eq16(16'h4661, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #865 f60d4de0-8079-4611-b32f-01ae68a20d7b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0673;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'h0675, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #866 44e943d9-984d-49d1-a2a7-5a6eacfbd1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 f29262b0-c497-4264-ad07-df8298f38c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 cc87bb0f-e016-49b9-8e84-18d60c0ccd12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 fbcdf292-b0ad-4b4e-ba4d-e6f9d02d9927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 7b170003-9cbe-4227-a09a-c8085324739c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 28f8e642-3a97-4a60-8b15-9f48c253bdfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 8779d6d3-8489-4d8b-a77f-89cd792c0280)");

unit.assert_eq16(16'h3C76, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #866 a47604af-a91e-47f3-aa79-12537e0102fa)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h06FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #867 989eb118-62a8-4eaf-a658-2322e8fc6768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 5c54e970-1d64-4976-826f-7bfa89c61bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 8baa0466-c379-4ffe-8d8e-35e47c5ee94d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 1e992140-38e7-488b-a7ef-37745834f130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 b9c75e56-14ec-49a8-8a20-dc8d0fd2f1f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 fa420503-bb4f-43d5-9a5c-7e294b2b060b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 8f9cb4bf-19b0-4760-a51a-1db42a3ad873)");

unit.assert_eq16(16'h07D5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #867 63c2910c-b89d-437b-9918-28776d01649f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'h0E70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #868 adceea69-2afe-45a4-8a3a-38aab4727a5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 f9644fb1-e28f-4aa8-a1db-ddc8cac9d19a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 38b31ae7-7205-44d9-a79b-51c3f673a4f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 de59f676-e429-4dc2-bbc3-a080541bea39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 9b3468a7-9dd3-4d06-930c-35ea8c6195b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 3a9eba07-5431-4b5e-a49b-f3519bfaffb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 95b52541-277b-422d-b16b-5445991efec8)");

unit.assert_eq16(16'h953E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #868 40a6c1d1-d80c-4cf9-82d0-5a66021ede5b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'h0EB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #869 c6a1982c-9112-4171-8c28-2ce56486379f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 3905fc45-707e-4ff3-9570-38e66ff9a039)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 9fda201e-1016-4fe8-9ef3-e08fe88dc5e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 ca3a4740-6075-449a-835f-8d4c8953f1e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 d1cdc0d3-8313-49a9-9e4e-a75de656fe9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 d20d6cd8-1d3d-47be-b476-154cc8b31607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 15c37d1e-6a29-4c7b-bd7d-a90552d93af4)");

unit.assert_eq16(16'hF7AD, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #869 e28b2cdd-9c22-4f13-97c2-2397b01a17d7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'h00BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #870 bae11506-7f83-445c-8a80-ef6c71543fe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 0b8dc40a-57b9-40c3-94ea-6073cbed75ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 18e788f7-f3fc-489a-bdd0-a1a53b741c3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 21043642-6ec3-437e-aeb9-600dfe9da255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 bbfb460b-3df8-4ed9-a5be-9223720d2625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 2328021a-4a35-4ba1-8f10-185f3d7c29b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 6320e095-95fb-4716-9dee-cf8b7e6af7f4)");

unit.assert_eq16(16'hB817, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #870 98978649-47c9-4fea-b1a9-8de8cab05e30)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'h04DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #871 7d789b8d-eabf-4120-9c62-5b0b0e550da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 99bbf567-4f8a-4926-afdd-e16f639c8d51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 4ea68995-ce9c-456f-a9d7-d9ab7dc46e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 ca04d226-5e65-45c9-9faf-cf6fab26d650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 69fb7676-395a-400c-9025-c93495d1f11c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 dc85ea8c-f4c6-4483-8df5-e194939ad1d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 aca72ac3-19b6-49e8-ad60-f2204ed3ef96)");

unit.assert_eq16(16'h0E9C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #871 3f6e1c53-2d41-44aa-9f61-04e7121e945b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'h00F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #872 048c7353-775e-4509-ae3e-37f0536c687f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 53ac9a25-0133-4ed3-b7ac-0ddc205f7bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 dc783b71-173b-4962-930a-59690b3ab5eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 ee5d0f7f-6b6a-457a-bf11-925e3070cce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 f70d52db-ec24-4544-8657-7cb3ff0f2aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 b5f05a98-3560-4848-97ee-3416c912c59e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 da6c9658-834c-460c-8333-308ae51935fe)");

unit.assert_eq16(16'h2B17, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #872 20b3fbca-9d77-4f9d-8c83-1050cc0a9817)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'h0034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #873 c29999a7-e7aa-47a4-910c-a0703a9ab85a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 54bb8c47-45dc-4172-b513-bd2e35193af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 72af686f-f419-4500-8cce-a4bf192a94f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 4773418e-7832-44e1-a017-1b6e7a340072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 613374bc-d199-4f20-89a4-df8b06496908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 0ae233a9-7afd-41c0-8e09-4ecf30afb19a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 df3f2616-d04a-4036-b0fb-0661afeacd43)");

unit.assert_eq16(16'hCD27, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #873 3b663f7a-13f9-4ba9-92e9-a5f25f7f315f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h04C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #874 fd9f2d70-7318-4229-85af-5fcff788d0c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 cbf431e2-af90-4cfe-be85-3e6a2a0c8713)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 904f5e20-83e0-412a-b9b2-30a29355d2a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 9be18933-bb5c-4b86-9afd-ef8063d5dcd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 fb78e34a-6bb6-423a-a32a-aaab42f982db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 06fb8d11-27d2-41ae-8d64-ae0fd8a79c4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 498781c2-27e1-49ca-a361-c8073436d903)");

unit.assert_eq16(16'hF008, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #874 e87337f4-069e-44e1-b621-bb5bd01298c4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'h0DD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #875 fe3ead94-8122-4a0f-8f73-d37d1b192021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 e849e773-c3f8-41db-8a45-bd957a62c0a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 d4464aec-9901-402d-a5b1-8793791072ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 bdb2accf-514d-4025-9a25-768cf5babd41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 eb1bcb1f-0f68-42fc-b610-9b7be9ea4111)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 0d6dd134-8156-41e8-aef5-907e09a48415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 d8f5eee9-4d4e-441b-a55d-ca730a74a092)");

unit.assert_eq16(16'h784B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #875 fbdc0f08-6aa1-4541-a11c-4f7f9e4446b1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h0B2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #876 73e74268-f878-45c2-be7a-844bf71a58e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 98c8d833-edf1-4225-9469-bc8ff4c0e732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 b062ed76-0bc7-4a87-9b49-1f718952ad80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 0c056b87-cf1c-4ce4-ae21-722cd9de1480)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 17dd4f64-94d7-41c9-90ba-3723a49ff4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 c25654fe-2de9-498d-b9a3-264b5f6bee2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 1b8a157b-3db8-4786-8084-1b99f5cf7e1a)");

unit.assert_eq16(16'hF690, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #876 b8ab9f4b-bf5b-4840-a442-c815da437dfd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0849;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'h084B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #877 14b9cfe6-27bd-4a7e-8958-a41ac9f5447d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 049708a6-21dd-4b17-a8c6-c3678234ae24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 3eec6575-a3f1-4cb9-a7a7-546f059fb58c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 c11f89eb-450d-4a99-820a-d71874ca92ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 f91178d7-31db-484d-ad0d-fd1b214dc0e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 90a2216c-b741-4a2d-8c3e-7bfc43c1e9d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 6941c9ad-a816-4b23-8fdc-659cd3dbcc23)");

unit.assert_eq16(16'h8DBE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #877 14371b53-01b9-406b-b4d8-528763fb5381)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h052B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h052D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #878 f12daa50-5b3b-495b-81e5-a13c97d91675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 3bc5244e-1b58-4f2c-9dab-ef9bcd43e506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 b35d1745-f48d-44ea-97af-7b1e9bcf11e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 9059cf39-b6fe-4118-b4a5-76b11d77b485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 e9fd63b2-1a12-45b4-a7e3-0674ff7e3c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 d76b5d6b-98b8-4277-9b2e-e155d17b707b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 0c36b4a5-3d98-46ab-87a1-7b267becdeeb)");

unit.assert_eq16(16'h6CB2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #878 77d5da53-d1c8-40fc-b086-eca3949b643f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h0EB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #879 97cca2ab-9621-406d-bf7e-600c8a57699f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 ac699276-80ef-4643-996b-694925444de1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 8ab12535-4813-4c93-8ab3-ac122ababca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 674e86c0-d0bb-48f1-a585-07ca489201bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 83c60619-4d50-4411-8300-d8954337defa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 cc23f517-3299-469f-bb5a-6d7e2421cded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 6c74d092-3f63-4b99-9bd9-e99d7af7600b)");

unit.assert_eq16(16'h5099, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #879 223e98d7-dfd2-4c4b-a8be-e9890aea64be)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0747;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'h0749, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #880 aa9c807d-05c6-4fd8-9987-00ba770f9c3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 c4b1c7f8-6164-42fe-97fe-b6974fadccd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 cb356947-0ced-436a-a564-c5d28d84ac65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 b3eadc13-a80e-4195-9eca-e724c33e1ac5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 9f4930f5-6a66-4343-9f18-ef80a0243ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 1de9d2e8-6e50-40b9-9fbc-21d9c798fd1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 44edaedd-0008-4403-a688-0e23be7913c5)");

unit.assert_eq16(16'h55FE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #880 980fda4f-00c3-4875-b549-da172ab62534)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0450;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'h0452, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #881 914c3a5a-77d1-48aa-bc3a-0a808bb04d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 e6d9044a-3041-48ac-9c3c-d3f4ec85fe18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 c164ba9d-7853-4fa8-925e-1e26b5d06dcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 71a558dd-fc97-415a-a7a7-fd051eb30367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 9a8085d8-be78-4ccd-aba7-0c7ca8416fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 ab62ab8d-173a-4847-8b99-85ae21b1feb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 c236670d-dbdc-49fb-9bd8-fb18d1cca84f)");

unit.assert_eq16(16'h3021, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #881 3fcc46af-1d30-4ee7-bbf0-736307a7ab50)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0406;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'h0408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #882 f87e090d-fd25-40d9-b07d-4a8f309e4b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 8b6a8273-3df7-4847-95fb-57914e00a74f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 212ad55e-4276-4068-8ede-1386efdf4e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 c8e32f28-f359-4e7c-a6c4-8217caf22b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 12a074d0-3850-4d8d-b47f-0537070bc21a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 11180350-8185-4c47-9836-7244c5ccd795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 5b1034b1-a3ff-47b8-a3e9-8a85dd70c261)");

unit.assert_eq16(16'hADF6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #882 94436ec5-bb8a-4a88-a721-f260570d1475)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h0F41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #883 5ea8ffa7-1b87-46fd-8cfe-d6270dfcf43c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 23f49c6e-fdbf-4b11-bd19-58bbbde5bc87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 ec01a3bd-1308-4b65-be55-d3bc9fd759cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 dfef7e6c-c112-4d03-9a9b-de2b6558f661)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 dd4ea30d-f880-4050-ba51-f16deb11eb62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 fc469639-ad5f-47c5-b359-4d5328c8aa06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 de857ca6-3509-4f4d-b649-cf589c33af87)");

unit.assert_eq16(16'h69BF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #883 c45dd73c-bd02-44b1-b2af-280ad94834af)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'h0F21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #884 4355f8c2-d3f0-42e3-b7e8-65300f3e96af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 7bf81c3f-4f78-4ef9-b622-9faaf1a7aaa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 abc158fa-eeb4-46bd-b664-ed94bef43e23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 104650d2-8e38-4191-b675-d876117e42e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 5a5244af-6ede-41a0-84ac-e500c591a1ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 97ce6ac2-9fdf-4fae-ad36-06a739ff1237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 8bfaf8a3-1e93-4700-800a-0e51e897abd2)");

unit.assert_eq16(16'hE2D3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #884 674d0237-ca02-49b7-9a88-9ff6135583a8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h09C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #885 a2052b87-3f7c-4e3d-b813-38ab8f6f519a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 cfccc77d-28ce-4db0-b17c-3fd0094dbfc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 6dec690a-0ac6-484a-9d13-15dc3a7c1bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 d68b8ba6-f6e9-4f63-bb3e-033a35a30456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 c33a5b94-95c6-4b0c-aa67-c94f80d957c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 43ab4f85-eaaf-49de-a632-e478d7d3d2cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 1ca3b0e4-9389-4d55-8765-77a96bd70999)");

unit.assert_eq16(16'h0D07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #885 7a5ff8cc-b8a3-4a08-aa9c-8efc974314ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h0FED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #886 1a2a88cc-1532-4617-ab15-4f42b1238987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 0ba61b12-2751-40ef-8501-76bc267fef0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 bc72a1fb-0a14-4eff-a9af-1db0f6be849d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 398aec8d-56d4-40c4-83af-56140f1c313d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 d133ac37-9f50-472b-a67e-9147e987333a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 3752c865-2090-4ce1-b567-17655f20b1b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 e775dde7-fad9-44e5-94d8-e2fd4b7c49ea)");

unit.assert_eq16(16'h2C0B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #886 43db3659-4874-481f-91c3-c30362c0b8bf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h0501, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #887 dec04152-7d0b-4a79-81d5-531b82a7e329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 54cf6f7f-3b21-489c-9b73-fa03a0533213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 ed249bda-2f20-434e-bed7-373082e3da23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 d46480b1-ec3f-4abe-81ef-dae8c6b9a346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 2bb2e594-87ec-406b-a8a7-efa789aa35e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 a451fbae-4e8e-4375-b6fe-061ee805a0ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 d15868ab-26d6-4ea0-88fb-2b7bb6487780)");

unit.assert_eq16(16'hC734, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #887 4d3b59a6-ca16-4e01-bcfe-e09572b70857)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'h0930, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #888 674b1d3e-db4f-49e9-915a-9979f1eb9782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 472bc38f-8f2b-4b99-845e-b80f87cfa893)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 7b670e7d-be29-421d-beea-1a1030f12f56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 33dbdac4-3ae6-4860-8dd2-8337e5539612)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 6b4696eb-3184-4ea9-83e4-49008e84fcf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 f895d005-44a7-4566-becb-2b64a721d703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 e49070f8-7a32-4eea-8c2b-6c383c1a429f)");

unit.assert_eq16(16'hF2F9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #888 58358e90-737d-4711-a62c-b7e73fedc3f4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0477;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'h0479, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #889 73cae085-ac76-44f7-9689-ef0422d29515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 87e6548b-bd8a-4f6a-8c92-7cff2d7ff5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 8df9f807-3a06-474f-a773-b719e087e129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 ebc0715a-7227-4637-9702-2ba6690276a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 c6f58f70-27dd-48b4-964c-4c6e05212843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 fcdcd314-e3a1-4b09-8b0d-9a01d34260f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 172abd94-3247-4b34-bcb2-190364cad7b3)");

unit.assert_eq16(16'hF38A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #889 763bdc69-0767-4593-bb7f-839c966758cd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'h0E93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #890 ba5aa83c-9f5c-46f0-a4ef-1f6b192f6bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 7cdd5050-1fa0-4939-9a6a-1528c3c253a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 98078462-2f82-43ff-816b-5a70907ff523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 f5e5c19b-ac8c-4343-ac21-d00ebb75e91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 30ce49c1-b7a1-42cf-82aa-bf956506c541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 56baf34e-e2ea-4785-9139-93d261d7fd1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 c3950bcc-682e-4139-b22e-1ce1e0f4961f)");

unit.assert_eq16(16'hF7BB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #890 9db67d7e-f3da-44de-9619-30d346ccbd3c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'h03D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #891 a9537559-51ae-4ee0-85a6-03bc1a7fc247)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 884a3074-9a1a-47c9-94c4-aa2a076a2881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 9615314c-bb6e-4039-8dd0-f3b392db08ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 6a0a7d81-12c4-4ea6-a23d-4b2c5bbb392c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 5149eab2-58de-45e7-af78-4db58377f291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 ec8e748a-7406-4051-b6c2-a60ab86c608d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 430fd09e-0c09-4bcb-962e-b56cb2932b77)");

unit.assert_eq16(16'hB3C6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #891 71a70b9f-6331-427e-9119-749d9db58a68)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h00CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #892 12433d00-4b4a-4c1c-9ebe-0adf83cc6cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 99efc1c2-fb47-4d82-bc5e-d620bc677a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 3cc6f1f3-0c7a-434d-a683-02068afc18b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 eac45b5d-6526-4a7a-a38a-cf550585f030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 fb2cf2b8-0190-4877-8d8c-2372b682a256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 b291eb73-8a71-4591-bffe-20884be8688f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 4677becc-d310-4fc0-8882-eefc968d71b6)");

unit.assert_eq16(16'hBFAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #892 77b229d9-3f2e-46ac-9c31-0f1f8ff7b8d1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h013E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'h0140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #893 20f4dfba-bd8e-47b6-b467-03162fdc9498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 644681e7-c45f-4691-a071-e7bbde0cc30b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 d65e5e0d-7f5c-4105-bb33-768d22b4859a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 0470bb7c-35c7-43f6-a56a-45bbb3ef414e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 15cf2d9d-24aa-4dc7-a963-f023f89f4be8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 efb756e5-ae24-4d38-9e2a-84bd58580d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 6fa6cb07-878c-4419-9be6-61289e4f0b87)");

unit.assert_eq16(16'hCC9C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #893 e6a1c277-dcf1-41d2-8625-f8682bdb2202)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'h09BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #894 9e949bc5-2b4d-4103-a228-7a25bde3e00c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 8c90e69f-1df8-4f20-b12a-347a37bf97db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 ecd4c19f-8d29-4cbe-8243-7e03c60f1204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 ddc6ecd2-0d9b-429f-88fd-03b1828cc71d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 766023d9-f7de-4b59-8385-87303949b4f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 2559bf05-ad87-49ce-a068-4fd1505f047a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 02a7fbfb-2af4-4d69-af44-ccef10415619)");

unit.assert_eq16(16'h426B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #894 8281bfbd-ebbf-4120-a84b-bc1be75daf21)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h06FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0305;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'h0307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #895 eaadfbe7-bcfb-4c57-b495-d304a2c0af57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 873d6ac7-f2de-4f75-abf9-f2884e664e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 ccd4e1ba-2d7b-4b8f-a711-c9c1e02e22b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 bd06c818-9854-44ee-9b61-1da5feba897f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 81f33943-c7fc-4f5d-9014-f38c319491e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 619c04c6-091d-41e2-9440-453a9a016d7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 d0023adb-85e6-4eec-abcb-ef38daf954ab)");

unit.assert_eq16(16'hAAFE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #895 cac60ec8-3b1c-4a54-b88b-f663294e0b52)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0700;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0287;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'h0289, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #896 aff71bab-d6ea-4e74-a04e-34b73dca005f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 8899178d-c2c3-4796-a1bb-c5cf8114facf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 54fde41e-752f-42d2-8d9d-f1c4c40ed868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 841e1fc4-4922-4943-8895-7bf60de57c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 bbfdfdf0-5b82-4f99-b659-72603530743a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 248faf2b-b6cd-4a52-bcc5-e500f033082d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 7b4f5f76-4d8b-4460-ae51-8f2b6a68e440)");

unit.assert_eq16(16'h97C7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #896 1410f44c-997f-4978-bb4d-c754d782162c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0702;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'h0B85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #897 a6fed376-f41d-4eed-b9d5-c2976618e0fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 d17b3195-1039-4fdc-8bb0-812c6e819d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 4b94e530-7cd3-4fec-8d89-32cede76ca40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 ea760d86-0073-4bf9-9573-0b1bf9c80e44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 827ddaa3-05c7-447b-89ff-228b774c39fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 1103df3d-7afe-4713-ac18-7d463fbf291c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 47f2a73f-42c7-49f7-9fa6-5a61d0fc5213)");

unit.assert_eq16(16'h1E74, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #897 1d668c14-8c52-4765-98cb-d46bd7e14bd2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0704;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0348;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'h034A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #898 7f9dcc23-52d1-4dbb-acd5-5eeb7ffd9a52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 c99702b7-b822-4358-8a4c-1302bcc531ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 6b98d0b0-9382-4582-b9d1-370bc1a2da4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 a2beaef4-2974-49eb-8d77-215f7e566e94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 cd424815-1622-46ca-a6f9-7e767c5bb6ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 e4c4dc5c-8a86-4063-860e-75b6334da6ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 62719ea7-ff20-4bf7-9b47-1bf8daccb6b3)");

unit.assert_eq16(16'h71F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #898 dae9088b-a49c-4e27-addf-d950cda899da)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0706;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'h05E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #899 7230034c-a974-4526-ada1-eef0ea405480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 a16c7651-4b55-471a-a363-9442c9eed870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 4f6011c5-9773-45af-b118-91e14da59508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 ba6e09ea-b3bc-4b51-8494-b67a4b607694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 bc43914e-7887-474d-b507-748122bb687a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 1244ac32-cef0-4c80-8dec-dc37b94737e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 398917e0-0db6-4827-8a97-2468fce2fe1d)");

unit.assert_eq16(16'hA45B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #899 61eb164f-9ce4-47eb-9f6d-065f3e9718c7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0708;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'h0D3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #900 02156662-4575-4e6e-9627-eea2f98f981b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 c6eb3b9a-0a08-44e3-8a16-a5d5296aafcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 e036ac95-dde4-4be0-8978-dc484768dbe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 6f3694da-9943-4938-8213-4adbd2948bcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 c4efec49-7dbb-4eb2-b091-55bd0c5b93a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 f5749cd7-1029-48ec-b5a2-94e82450c574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 ef9f98b3-a6c6-4bc9-bea8-5be45852c2f2)");

unit.assert_eq16(16'h81EA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #900 f50ba96c-40bc-4c52-9b5d-65a6396e1dee)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'h0CDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #901 2e8e2826-9b19-4be0-9b27-252f7f20524f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 d1d6ac36-0805-415e-a4a8-e289eba08552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 505a7acb-0830-45ca-85b7-ae89f13cc45a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 7c88f03d-b590-4d05-a323-6dab559c220b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 fa0f1f1b-9cf1-482e-8551-f7f31e26f2d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 b0c42142-31f0-4e1d-9618-f6ed10defaa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 b4606ac6-b9e4-4752-be8d-942ae2f1a96d)");

unit.assert_eq16(16'h1765, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #901 399a110a-d2b5-4cb3-974f-7cdad607c6e9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'h05F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #902 496c13dd-c305-4e5c-8df2-1999704a9da3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 2106728e-4b72-43cc-aeee-dda34cf71573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 9c05a631-706b-4b55-a8e4-7c2a03d2fcd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 584fa834-dda3-43f0-86df-721d34073267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 972b8cb6-06e1-4e37-b21e-246b25178212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 6b1b345d-619e-43da-ab3d-ce296c7b3cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 d575c662-508e-408c-a651-204d5b5fac4c)");

unit.assert_eq16(16'hF9B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #902 5540af81-2b29-43f8-a6ff-37e471e2d3ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h070E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'h0BAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #903 a0ee6c43-e077-40e7-917b-58c3b6b4b071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 e7fb4091-d27d-449d-924d-c83147204a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 83fc6123-e13d-4753-9b77-9927155bb073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 cbad11d3-d8ff-4d50-ad5a-53b4b90c196c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 9f719287-bb5c-43d2-a290-dea31e832448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 9812081c-38d5-4272-b85a-3f59026fb9c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 3e863eda-f0cb-4ad5-8a6e-0895406d3114)");

unit.assert_eq16(16'hAE64, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #903 88b6484a-2638-4443-bece-76ae8c4a20a4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0710;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'h0B93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #904 963fdaca-9111-4782-9399-5e0166a1d0b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 f0482c79-495e-4814-bc9e-93d6e84439b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 0328f171-9288-4df3-87ed-8911c5cf09f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 83c42438-218f-4cd6-abcf-4903c68710ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 d26f215a-f466-47e2-a18d-0ca975010cc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 679aed83-fa11-48d4-9ede-81c48d45aefa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 f512175e-8096-477e-b619-e795695f7286)");

unit.assert_eq16(16'hCF80, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #904 a5f07880-c39c-4744-be97-cdccb6157784)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0712;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'h0BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #905 a8f0bffc-a302-4c4a-88bd-8e9c824d5c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 0733bdd2-79f5-4c3c-aa95-fa96efaba9bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 ca79bc4a-0ec9-40e5-b747-1d8583ab514e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 dbce900d-c712-4e15-9b2d-949352d46120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 08e1ea05-748e-4af0-8f1c-29eb423f2624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 396549e6-6a6a-4752-bfc5-c8fc2d7308bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 d536c661-3da4-4816-81e1-5e61b42be4bc)");

unit.assert_eq16(16'h51C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #905 419dd3f6-4ece-4a44-bc98-0fb1f054425a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0714;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'h02DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #906 e502734e-4421-42e8-ba4f-a770c382304b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 c1ab3da6-6323-42a7-9145-6e0d05bd46cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 0057a8cd-d83f-4c73-ad30-e4eac5b4b1eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 b6121076-e7e2-4bf2-b137-25f24faae64b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 45fd31c5-effd-4dfc-803d-7a009f3f2e94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 cae869d5-4b95-401b-b0d6-10a473f68072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 999a6ba7-4265-4f3c-882d-8d6f50b189b2)");

unit.assert_eq16(16'hCBC1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #906 b937e7b6-2fcf-4133-b561-bfbf397a55e4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0716;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0323;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'h0325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #907 80f4dc92-7e65-43d1-a625-7b6a58040ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 8c4c8ee3-7a6b-4011-a4bc-b6509548fed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 7da4d0e2-0c41-425b-bfd1-2143be4c6ae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 8465dd28-24cd-45b1-865d-22a106274cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 ea810d2a-3a0a-46ff-8c06-fe638a92ae0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 6d060c3f-a7b8-4398-aeb2-99330d465ea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 911a952d-2bf0-4a80-9571-06a8b681147a)");

unit.assert_eq16(16'h47A8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #907 1b3bae93-03b9-47cc-9a0a-7e720598ae04)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0718;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'h0DFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #908 b3b95c5a-bd43-4316-90aa-40bbc63597da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 0f130c60-0f19-451c-9189-e93726f64b9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 a01dbce5-579a-4e64-b988-a8004abbab06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 c9fdd915-aea5-4326-be45-3770f9802de6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 4f6a27cd-3521-4bf3-9015-e884048a6dc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 da873f8a-ebf9-4f19-8b13-44f4412a6e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 e324a5de-13bf-4164-a470-0d6bea298ca6)");

unit.assert_eq16(16'h9507, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #908 3e17b849-4e4d-46f7-8194-e007cf4322ff)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'h0BB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #909 6cf092cb-57ed-4401-908a-2af1703e36f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 99cfef31-73d9-44fd-85b8-da90ffeb5dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 3e45550d-cb54-4348-84d2-ada938965372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 ef313ae9-09b3-4d0b-99e2-079e5a1d729b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 bc3dd2b7-49af-43c7-9646-da8ba2519d39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 fb5fc3ed-8057-4d5a-849f-f1a6603f7bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 a424e159-9ec1-4ce0-a2e1-822216bfa484)");

unit.assert_eq16(16'h18B4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #909 8bfd7ac6-ec97-4c29-acb6-a3812486e780)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'h0B81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #910 9b44bba3-0c46-4ab1-a774-dc5bc2d0513e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 475f03bb-55d4-420b-91c0-9a68d7872917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 b67df18a-9be2-4197-9854-9fa47ed93696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 a1e35039-1120-46f6-8bd0-807a1b90a54d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 7804a374-40e1-42cb-94f8-19e0ad0c7b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 26d69c66-5890-4ef1-8ba3-c61a2ed80714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 ffd8a4af-5ba1-424d-926c-d00142ae9258)");

unit.assert_eq16(16'h4378, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #910 63fbbea9-ba33-4dea-8088-7c99dc488800)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h071E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'h05E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #911 ae565b85-8116-4ab9-809f-2b248ff58808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 6117eb0f-4fff-4f3f-8062-c230cbd53194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 f114120c-9ee1-436f-8e03-1eca86c614ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 5a5fdf9a-468e-4d86-82e5-a32a5fb8818b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 ad0856be-cf84-4b2e-a86a-21e87f1535d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 87276c27-474a-45e5-a3a4-437ad24bcdcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 7ff29195-9528-4d7a-b426-094e48f338c4)");

unit.assert_eq16(16'h6279, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #911 eb68234c-fc14-420d-8b4a-3ba015851498)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0720;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'h0E4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #912 5e612b83-5783-43a9-a2f9-0a5c0f9206d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 bc96783c-bf4d-4c3a-a76d-ce12146b2cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 eb5574d8-4883-4dd3-9df7-ce1a0424c79b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 555f820f-8a2c-4d5c-8860-d7221b7d4407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 4c33ca1f-5ad0-4483-818c-7007246e4ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 e294d0e8-4d68-4f09-8f85-067aa5885e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 7b6c73a4-ca8b-40c2-9950-3ed310cafe53)");

unit.assert_eq16(16'h13CF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #912 8d825279-0188-48dd-8f35-72a4e6b6cb67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0722;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'h0A73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #913 94b03c61-4a22-4762-a4f3-8482f222168d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 49e57142-65ca-4903-a79b-75a147f30fc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 3ae981f2-bcd4-4464-97aa-ff46e00655f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 cbce5891-dd30-45b6-8354-682c7985c0e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 b2c37e9a-aa1a-4a6d-a38e-34dd7c4ad390)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 b4bb2f11-3594-4be4-8d3a-ffd80997b401)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 78a00e26-d386-4ec4-845d-d1cd98cb3980)");

unit.assert_eq16(16'h449F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #913 5cc6c44a-b0be-48d2-b799-7cf2f5234ede)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0724;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0456;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'h0458, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #914 354502ea-3fe3-4584-bd3a-dc5940420178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 b1684064-4262-4640-a975-3e98941ce29d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 6df84961-cda4-4288-a539-b37442aa7acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 0cbdcfcd-166c-4d84-9de8-b7b843b19b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 e3740f31-058f-4c31-81b6-4bc24b2b18e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 6ee1f179-ef49-4c0f-8286-6f38fe4a53cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 47b7cd81-0463-49d8-8967-bcd6133639c3)");

unit.assert_eq16(16'hC494, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #914 45335b94-67bf-4160-a2ec-88d1857e2c2e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0726;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'h0BF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #915 47ce4159-0467-4d70-ae5c-49dc8d512b59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 2450b726-e685-437a-81e0-8774e04911aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 7200ce71-fc97-468c-b84c-4960fd0d7ae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 d5a69070-583f-451d-8f41-b4f3a0bcaebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 7c1872d5-52b9-4dd8-9ab0-fb4bca37f13d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 feb56f26-f856-440f-827b-a9614d68b8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 816cba70-7a36-414e-be5e-35425a2d2824)");

unit.assert_eq16(16'h481D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #915 92594bc6-4d3a-43c2-b4da-0a2d9d7e2c6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0728;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0340;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'h0342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #916 56cf9b1a-92cf-488f-a6ff-12c4d5f2d0f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 b47dab69-9bd2-4a73-aa1a-d3f37d30db98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 8dd8c498-7984-4ebf-835e-ec47d6b6088a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 81eb3f54-2bfe-446b-98e8-9e76a69689f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 ec729856-964b-45d8-aa2a-f3f8263d31ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 a327ca6c-13ba-47b1-8687-3f03eda1a789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 d47a148a-da3f-4e86-8e96-bfacad90a42f)");

unit.assert_eq16(16'hC824, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #916 d7b8612d-7c18-41b2-821d-50d6c884b3f9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0925;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'h0927, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #917 377cda31-5a86-4e09-a411-10ac9fe897dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 a79caf25-b137-463b-b41d-a16971a94d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 29fc5a41-862f-4dc2-8440-f067e3521532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 33cd4a8f-d811-4c50-9d04-d8ba3196d55f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 593dc8bc-03ce-4ca1-8862-9df7f5b33f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 7280f434-35da-4057-8945-d5229d673f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 f0bc2ecb-7df4-488a-90b3-6dbed36c43c4)");

unit.assert_eq16(16'h1D99, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #917 eb23f271-3c4f-47b1-8b59-aa515743a3b4)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0619;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'h061B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #918 f51f0baf-8f19-46b7-820c-d167e9c17d80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 8b502e43-cca5-4e7e-bf83-0827e4e44155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 24f4f00c-686e-4d22-9d5e-7cd22ca3a0ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 93476fa9-a56d-4971-b851-24fccfa5eae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 033b5151-b514-4f13-90b2-5c22ca54cd87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 7f2de137-ca54-4eb9-9a15-93027cc17ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 c11148d2-ec7d-4182-84d3-dbeea0caf5a5)");

unit.assert_eq16(16'h4043, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #918 48a7619c-b969-4ae9-8a76-f9608422a775)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h072E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h039E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'h03A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #919 bf8440cb-231b-42cd-832b-4b70a0f3a004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 7c034166-e860-4790-8aff-803b3639922f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 2e76a4c5-2840-409a-b0ca-c3dc28a77b9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 e900ecec-55c7-47fa-a763-68bb9a8c41e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 29e866a9-06b4-450b-a16f-7672c7fcbe4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 5ea5f6a2-38ad-4b79-a74b-7c613508867c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 fc071939-0900-4a9b-b67a-d3f29ed9abad)");

unit.assert_eq16(16'h3C52, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #919 3ae1100d-8eb2-4bd9-b76a-c39d428bd62b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0730;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'h0A6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #920 25f32271-19fe-42e5-b1b7-cf294e09fdbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 07e3d5af-9a23-4bf3-82c4-ba6bb4485765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 02b1cdb3-4ab4-4246-987c-4de96eaf2c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 ba1ca1c1-b900-4492-858b-efea94c47a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 7aaad6ff-44bf-4cbc-89e7-0cb6bc98a2dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 5b31c713-0c45-40f7-85d5-0109cc091acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 2c02b8d3-3063-413d-819f-d45c413078cb)");

unit.assert_eq16(16'hCE02, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #920 c8fbf0f5-b70f-4e71-9d1c-76c1bacd5d6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0732;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0397;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'h0399, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #921 56262878-c2b8-41c4-9416-42d884073bdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 5d4150e0-c755-4f90-91c8-2edb058b26aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 5ead30fc-8e1e-4641-bbd1-f7c8f1149698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 47e79e03-b108-4c9d-81cb-5ae2a2f9fef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 1df1a432-919f-423f-9d8d-c2dddbe27965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 24756f85-e3c3-4a8c-83fc-ebe05da5e061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 c6e91133-8566-4890-b742-a2d5d03b8f1f)");

unit.assert_eq16(16'h3214, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #921 3fa741f7-0f6c-49dd-825d-8a9a6c04316f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0734;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'h0A47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #922 c86a83af-1064-4936-b797-0225d8e108f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 aba53c94-1cc7-4a2e-b6cc-a87a12652967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 68ca11c8-be05-47a1-90de-f86af9e2a375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 d1740e5b-407f-4fd2-b780-df7bce2af1f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 5061d006-153a-41d4-a4e3-4a9b844067d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 a7745b23-0d1b-4e41-818b-b8152553bd2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 23515588-16f9-4637-b858-4a042a63d089)");

unit.assert_eq16(16'h7E07, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #922 0e86bd27-7cac-4202-b583-37ac32e37771)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0736;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'h0E9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #923 a565c2b0-51ae-4f4b-be21-1c71d44428f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 19093f69-731d-4f53-abe8-ee1c2dfb5683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 7434fc7f-bfe2-4ea8-bed7-c6051688d0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 f645f35d-72d1-4b66-82a9-6a0b1d3cf13b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 f0dcc328-af88-48a4-9eb6-f9e26c52c249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 862a4fed-4071-4e36-8479-f77428ac886a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 d50cde38-5fb4-4a2a-94b2-349b15dfab83)");

unit.assert_eq16(16'hA2AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #923 3f0077bc-e177-43a9-93d7-ac7f536d912b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0738;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0600;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'h0602, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #924 98db5d77-2e0a-48db-9ded-30b23ad971e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 1caca2b7-35a7-40ee-a662-12822138a254)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 97a30c55-23ea-49d5-ad2d-fcf86c38a9db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 30a019c6-f357-4d4b-9e97-d6fa4e9fc63c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 7938b6c5-915b-42ae-8c61-e231acec731c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 bb938b23-f8a7-4c86-882f-6ffa50763949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 441ba89c-2ba2-475b-8801-ec00c255fa49)");

unit.assert_eq16(16'h691E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #924 f1f139b0-ed46-44dc-a4ff-db80b397d625)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h071D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'h071F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #925 e7221a69-17b4-4020-8132-675e2d36146f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 3b6ceefe-5cf0-4587-a94b-61e64add2b17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 9214467a-f1d9-4487-8081-6fcf23edf115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 7117bdd6-755c-44ad-8ab4-548e142c83b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 bbc108cd-e1a3-4d93-aacc-6b8fcf6d90b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 df8152de-9994-4d6a-b788-97c7dbe77d66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 a48b1622-37ec-4262-a32b-c375ae81e99d)");

unit.assert_eq16(16'h84C1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #925 a9689099-32a5-4608-9b03-c16ddf98fd27)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0184;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'h0186, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #926 695ff160-520a-4ffd-8646-f7ca6abc440c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 b37eb894-8b02-4abf-80e0-0af02fb2c38a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 89d227a2-6cd3-43db-a4a1-7615a846d85c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 d716ef64-35a6-4e57-9a0b-f5f8a4acdd98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 70a76a1e-69c8-4177-afdc-4266cd5c3d16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 ba26c10f-c350-46d4-8e77-dd3fa56c53ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 4ba49619-96bd-4df2-8195-72ecabba9196)");

unit.assert_eq16(16'hAFA2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #926 c0dffce2-d080-4e0e-814d-fe3e59adbe11)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h073E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'h0AE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #927 da3f45c6-2cd1-45f7-acd7-6cb367dd23fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 ad797ad8-c59a-49c1-8ac6-6bd75b1b8cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 c9b59f87-b07e-48da-85f7-4ecb17dad623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 abe7c98d-573c-423a-a22e-49d3cd5f98d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 c877515d-db82-4c28-8e72-8229b602a1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 eab9cdd6-05ab-4f51-b8aa-e731dcf402e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 b03cce6d-8a13-46e6-bfdc-8c50f9f79d48)");

unit.assert_eq16(16'h4CD7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #927 3c03895e-302b-44a1-bf13-1f20ae0cdc07)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0740;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'h0E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #928 e219f0d6-71e7-43d0-b81a-1fa050afc7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 8864bc2f-4615-44f7-a8d5-b47c3f44ccce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 12fb04bd-2796-4e1e-922c-6445a35f9c86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 6269d8ff-8559-4eb6-bfdb-a45f5bba9a00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 a1693d29-ad0f-4faf-a16b-eb955048f1e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 36826ca9-72d0-454f-96e6-a91fd7be6a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 b2273daf-bff6-4b19-8b22-881b10cccb51)");

unit.assert_eq16(16'h690C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #928 eb6ec0ee-e582-44b3-a8ee-2bc0f1f048c6)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0742;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'h0DA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #929 3f510b0b-2001-419f-add4-22f82973cec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 9db0a612-4d5f-42ab-bd80-59f774192bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 c3b28bd7-072b-45aa-8760-d6d74180a543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 df084e7c-4d6e-4fe8-8e2b-4803e0059db4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 47a8475c-f198-47a9-bab2-523707ae09fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 8439b1f2-20d5-4154-baef-6c6abf5ebd24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 f4160958-886a-41f5-ad98-9e1d3c17c3ae)");

unit.assert_eq16(16'hE598, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #929 a53250cf-1491-47ca-803b-84bb24c44069)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0744;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'h08FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #930 530b3f3e-c396-4a89-b02b-dcd320f430c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 74e22336-3860-46a6-95d6-27b30e988a88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 58be15bd-5714-4617-a517-becd8580be27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 af6e8d06-0099-4dca-b2a7-44a4b69f9026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 31642d43-d43b-49d9-b579-b02de091736c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 4fc93ce8-d972-45e1-ae08-4ba5e40fe166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 eebac9e8-80e6-4ea7-82e4-a40eab7cf67d)");

unit.assert_eq16(16'h8B34, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #930 0baf464c-58d7-4bc0-8a2f-5c1e36eb34cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0746;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'h02C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #931 98c98003-48eb-4ba7-b228-775d21c6a9dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 b41745ec-1dc9-4b1c-801e-750a33c7b8b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 063976b7-6af6-431f-b711-0603100a10ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 d0a078c9-89de-4c16-8c94-8022292987bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 8efa357c-7b41-4518-a26a-6fa961eb10cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 eb0c5b4e-dd73-4e32-a5a0-92380dd16f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 9bea84c5-23a4-42b4-8762-3076945ee3c4)");

unit.assert_eq16(16'hBC15, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #931 fe6e961a-c14e-4583-9b7e-7e144af0577f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0748;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'h0700, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #932 7c21920a-e199-4442-8e4f-0a5bf55c29e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 f2db7245-9a25-4f4b-bfb0-e91bb2e10d0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 490b3dcd-a15a-4bdb-ba2c-b4eb791ae09b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 8a7ead0e-6aff-47bf-8fd7-72dd31b992b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 b5bbb0f4-f319-41ed-86dc-140da28b45c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 663725b2-641e-4a21-a3d3-00bde6978b78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 25fa991d-a684-421a-8417-2f1e399fbfdb)");

unit.assert_eq16(16'h273B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #932 856ece3c-aff9-4671-82e6-f7b886f0ea77)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0778;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'h077A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #933 a46c5729-48b6-4a12-87af-56351ce12e97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 85df72a1-a80d-49e6-8139-321d020bae13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 aa74e27a-bace-4f9f-ac0a-081e6081e57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 17ea2ee5-02e0-40db-a362-7a00e3848300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 1ffd2637-cabf-436d-b061-0ce65eb9fb00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 9301d93f-65a5-4634-bf74-20f90476b86c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 0a56d809-bfab-49af-9036-8e36cc0fce83)");

unit.assert_eq16(16'h5684, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #933 a626424f-3058-4f9a-8c7f-07bb53085bfe)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0161;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'h0163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #934 5f6729d4-14c8-468b-8e43-36d9fd65d48a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 e6a0d8e1-2f2c-406d-8efe-d967a904f885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 719cfbe9-fdde-4e56-8fad-9b4e3eaab783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 cc4d966d-e434-40c4-89d9-77b806968a6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 2eec3265-b0f0-4d0f-aa0a-ca585fc0083b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 2ecf9475-b16c-4cd5-8799-bea8334fe8d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 d136754e-4e61-4c76-99fa-ad80f0ab0c43)");

unit.assert_eq16(16'h213D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #934 ea080b2d-3e49-4d09-925c-e6f7fdc41ac8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h074E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0806;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h0808, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #935 65db4bab-eac9-4d75-8ce5-670c965cea61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 360f5231-5f5a-45ac-961f-080dd1ea689e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 1e634cda-90f5-4c7f-9d58-53ecfa57f698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 e9494bac-149d-4b0b-96d8-ab2cbb0838a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 afee7c6b-4103-48dc-8d3a-be25542ac2db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 592c4142-e13b-43bf-b136-47784ca56124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 5a94da20-cfcc-4022-8efd-6eb78dda4531)");

unit.assert_eq16(16'h33A6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #935 2ccc4dfe-bed1-4868-aea8-38c0c1150efd)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0750;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'h04DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #936 69fc838e-6788-460a-884e-94b747152ece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 e1fdbb39-9ddf-42d5-9c22-ec170ed5ef4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 5df987c4-a907-4b8e-8a46-e680bfb4bc1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 734c945e-36ff-4557-81ce-9190f01b57c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 721e6478-c8d8-49a7-94b8-afce99ae2b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 b104067d-d88f-44f8-8716-01e92517f2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 9efac314-6be8-46be-837b-96bb885a1702)");

unit.assert_eq16(16'h5D06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #936 3d7b0039-e03c-4a21-a868-c9510b62fff5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0752;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'h0B0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #937 dbb7053f-ade2-40ae-ae4e-542847aa1ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 e0b0b408-7e88-4233-806e-4ffba8979a15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 41c9a484-c625-4fd6-9e4e-f024901df5a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 65a39010-ef3f-4319-8383-4ce5b7f527a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 8e9e0657-258d-4042-b209-da5dfd8e1850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 94a9ae01-9249-4865-8729-52e4c0f1172c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 15161d5e-5257-4fe5-99d9-83275d5e6f31)");

unit.assert_eq16(16'hE1B2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #937 98ae88ed-4bb9-48c8-abb4-e5bca9b0ca3e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0754;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'h07AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #938 cf238508-aed1-423d-a95f-4dde137b77e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 32295b3d-bf8a-45c5-bc96-e631b53e58b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 03545a90-cbf9-469b-8e86-8b786b825984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 8e3d5fcc-e03f-4e3f-b956-df06f01b4079)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 a17a98e2-29c8-483d-8684-666ec039fe0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 80aa4234-85c8-4483-8ebd-4dcf8c3a1930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 711db1bd-7971-4293-82c6-3e51bbb8db0c)");

unit.assert_eq16(16'h1650, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #938 648a4349-9318-43c1-be5a-00b6ab5162ef)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0756;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h00B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #939 6aeb5f49-ab60-4a89-b4dd-8d81d5691426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 57b2cf08-b7b1-4b60-97f8-7c281358e6cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 a2f12ba8-f7d2-46f5-949e-5c845f905eb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 59030927-4315-49b9-8d81-4e435c62efd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 d41aef34-4371-4f06-8140-6b3fbbd90007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 00e9d085-0132-4a68-a888-f5847c0f9bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 2261b028-b84b-4f68-8ec1-317f260146a5)");

unit.assert_eq16(16'hE6A1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #939 0538248c-e77b-4429-a06a-a6f11bf29e0d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0758;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'h0C8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #940 36570649-7d83-4dcb-96d0-80c04d827faf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 28d26a1d-f79b-4bad-9fc0-39124e563f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 fd9dccb0-9b7e-42d6-bc86-58260281d64e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 e05e3e2d-a0dc-4211-a7c7-303eb1f91b03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 626e3f1d-91cf-4a9b-b9e5-f6075b139851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 baa550e2-9b8e-4ad8-8874-9cf7fa204ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 2956d22b-59af-4215-bc58-0ea732e2aaf5)");

unit.assert_eq16(16'h4F10, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #940 eaac689f-a47e-46a7-90f4-d5c967b4100f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0028;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'h002A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #941 9ce6c67d-082b-46fa-8a1d-ac57b9505121)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 3cf4e404-291e-4b95-ab54-ad250c2c14c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 d2f8ed11-74ec-4ca5-a894-34ebc2d94755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 e5c61a61-0df1-4fa3-a8d3-e355f4835216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 23777dc5-13d2-4d84-a4e7-dc39c927dee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 d4a4e03b-2bd8-4ee7-b433-4c196e243e14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 bea8a796-db00-4487-9584-5bb733a4f10d)");

unit.assert_eq16(16'h15B6, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #941 af2b12fb-aa8f-4ed6-89c7-8dfc3e6bc56e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h051E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'h0520, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #942 565f54e9-024e-41c0-8dba-8b581802c127)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 9024c5ee-34bf-41e9-9ace-8485558743af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 0be5c5d8-4846-46f7-a1ab-492be3d76371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 f5fa1342-da58-4a2f-9426-42e5dd72d511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 519673fa-ff0f-4308-9dba-49c6e27302c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 62990bae-b25e-4654-82e5-39b6a3699555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 5f4dd115-0b7b-4469-91a3-0835802e9672)");

unit.assert_eq16(16'h5B6C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #942 c870cb76-5be5-4f31-b86a-6e160d0d7627)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h075E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'h06A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #943 dc88afde-0622-4db0-ade0-a1c19b37c698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 b4d97693-1dee-49fc-bd90-96df1dbe41da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 92676328-d414-45d9-9700-c51d520a5f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 a362b114-d857-4213-93aa-b59aa04c4d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 e3095fc2-a448-48c3-895a-d9fe4b35cf0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 efb00081-104b-43ce-93b3-f7e8fce4f91b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 10dd1867-28a8-4df1-bcd2-db08e16be1a3)");

unit.assert_eq16(16'hB4D7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #943 42d4c853-c80e-49c7-bf2c-5c781eb5810f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0760;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'h02EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #944 ab08e775-1632-49de-bc26-1f75b4c53e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 fbe7cef5-0c14-4b9e-84b6-b93936f4fdbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 d8904c87-39bf-4705-97e1-d2a8f88dd3a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 ee54413d-6d1e-4bf9-8556-142ac5271283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 762f3521-f41d-4026-9d6f-7e8dbd1d894b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 92e10d91-bd2e-4484-960a-1e19f09f4899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 7b924748-33f1-4d22-8200-65bcae49b0b5)");

unit.assert_eq16(16'hA5B7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #944 40f751ff-c29e-4bc1-b0af-701ec9a29cc2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0762;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h088B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'h088D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #945 5db359d3-4afc-49ac-a205-338e21fa2d80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 df072552-bcbe-4fad-97aa-ba451e31c225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 e96e49c8-b95d-4278-b008-ce76a0a4ebcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 389a8d78-d26a-4840-82bb-a84c0cbdacc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 f134147f-efcd-4455-839e-1200def5c154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 4523d960-e266-4b4c-93d1-aff9cc8e47c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 56cb9789-b359-4a51-81e6-018be418d930)");

unit.assert_eq16(16'h297B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #945 5e84c5eb-a7cf-4a88-82ae-5caa3867f408)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0764;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0218;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'h021A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #946 2e296897-c4a2-475a-bcc4-652fe97bf027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 54369863-3709-43f7-bcc7-1b524e7681bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 a1c57ece-e02c-4c82-90d6-61d3658aef84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 73d1343b-142c-4559-bd73-9fe586e87d5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 24117b39-71f4-49b3-8776-351d89d550ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 3fe38365-b385-4f12-924f-324f9c5b5106)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 c0c9eab7-346d-4a49-8394-70d5b62f1ffe)");

unit.assert_eq16(16'hC00D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #946 c400a6d6-64fd-445d-b763-7d304cef77a9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0766;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0416;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'h0418, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #947 b2045a68-b38d-4b8a-8536-a6b773db62c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 4b749254-228a-4059-8cdd-0d00821b9fe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 5c3573de-4a49-43e2-b786-4a8d6f42df14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 81f51fa5-6318-421c-a54e-e019e145daaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 5283513d-486b-45b1-ab89-66c4f9ace72f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 1ffbb065-7d39-4e1a-a5fd-622be6c4329a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 5bd5cdfb-08ed-44b8-b5ab-84d8c06682ce)");

unit.assert_eq16(16'h5537, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #947 cf9c1631-509b-4a29-aaa9-cf45a4ce2bdf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0768;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0132;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'h0134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #948 fbbfe163-9526-4f6a-8968-6b0db6d0a9e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 f98a4b6e-8b45-4f89-aab6-2dfb6ea81cb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 5aa4f899-fae0-4823-9de0-c2d5ec0d7fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 d28ab552-63b0-4906-906a-ca4a17b2a379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 1a1f40b2-f4cb-4409-b03d-2cc916da6734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 a296f1cb-ebd3-4534-a629-0b614c8c1ea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 baffc263-d5e4-4c8f-8a64-1ffaa11bf7ae)");

unit.assert_eq16(16'hC77A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #948 780b6f0b-3892-4a25-96fb-8c4cb3cbe617)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h006D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h006F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #949 f7a5a162-76f9-4614-bbb5-a9fc926a44fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 5cdd43f8-83f3-4eba-8891-e1399829b1bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 e6bdae12-63fe-45f2-b1f1-e802ed2ad29b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 310a2cba-203b-4148-8a9c-69340e86660c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 59611bba-0b47-44b9-a2bd-72d1f21086a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 6c5d42d6-3805-4ef0-8a3f-2d8a1da21479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 b072ae70-d11c-4f4a-b9e9-ed79fe83a51f)");

unit.assert_eq16(16'hB197, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #949 abf20ea9-d796-4ef9-9820-fc1de8fef00e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'h05C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #950 bfc61eb2-e78f-4301-904b-bf947bc53261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 d12c4b99-379c-44ed-9d63-b32a21258fe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 f7271c7b-7026-4103-bb94-d914585c7616)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 4cb191cc-6f30-4073-91ba-81b8efc76334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 25cd7b3c-a470-4543-ad46-5ff9107ff838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 d5c84600-70b1-437d-9418-f334308934f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 4b5b4cca-500f-4241-aa8f-716479c48cb5)");

unit.assert_eq16(16'h3BB0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #950 dae8e1af-f9c6-4ea1-8a3e-68c8e45a5a95)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h076E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'h08B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #951 f437ee5f-0927-4248-b321-290e3da14842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 843c9f5e-ab0b-4038-8427-58f2308517c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 0f426c8f-42d7-4657-918d-d93008ed774f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 696fa020-3eac-46ff-ba6c-aa3805df439c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 de6a1e8c-c26c-46fe-b1f0-cf7dac5e660d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 7dfa5d02-1a0a-4cad-ac14-95eedeccf9d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 93502370-44e5-4e4d-aaa1-71f5ef3bc51e)");

unit.assert_eq16(16'h464A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #951 6f4ab5d3-d287-49b8-b216-315f78a668ac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0770;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0397;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'h0399, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #952 e2a25406-698f-4784-91a1-506709e6d157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 67e6cb76-1b26-4f9f-bbb0-3f66803396ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 a6feb82d-23cc-4cd9-9cd9-2aca82bedbce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 1d84d835-4c6f-45c4-93a3-399b47c681c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 e5790cb3-86f4-4717-ba0b-63478ec3b63d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 712f2cfa-d233-4342-9968-4223bc59922b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 8afe4d83-9f33-4db5-86a0-3b39e82c5c35)");

unit.assert_eq16(16'h3214, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #952 24cdaef7-bbbb-41db-942f-f6a7035fcf66)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0772;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0872;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'h0874, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #953 b49dfc9e-f4c5-4925-ad20-2c9afe672411)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 2cbc1611-c2db-49d6-8c7f-b10fb72c4d39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 7a5d6ec1-275b-4c93-8a3b-ffd5254f6b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 c42148fd-7514-4e6a-ba60-05266a88224b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 b7e4856c-a96a-47cf-8be0-ebd463fa7ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 ccbd408e-6a15-4666-8efd-29e4f2bd7af8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 c36f9638-c77f-457d-98fb-ace92270fd43)");

unit.assert_eq16(16'h4B9A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #953 e46c3ade-ac00-4e4e-8ad7-47c4b3299f23)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0774;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'h09AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #954 71ed4f74-64ce-478c-a9e0-952d1e5361b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 510711de-9d90-4f8f-a004-28fd9625bba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 4a51b26f-e81f-4ab1-beae-bdda9f9b0177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 8cbe6e9d-a001-41ce-8fcc-612981a32300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 58ef84a3-b971-4aba-b092-b9d22b147660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 63bfc83a-fbcb-4b23-b3ce-c64e8d09e3ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 b4bdf419-2d56-4376-b41b-6612bc95791f)");

unit.assert_eq16(16'h3FF5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #954 69199f52-a07e-4d76-af64-f16f44696fd8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0776;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h08C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #955 22fddbd5-047a-43ff-99f5-3230892ac204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 dad6adf0-7e25-4c5d-8455-51c9a15bfd01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 b498ed0b-ecb7-4539-8da9-ebdc894c00bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 33c5f125-fc88-4ff5-9bd9-34290d90e61d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 3018d587-960c-4c70-bd6c-b6a61f152f7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 60beced2-907e-4cef-8ded-145a44cf5dc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 2c5ac486-28ab-4ca3-b8e1-85f160e171e2)");

unit.assert_eq16(16'h6936, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #955 4779ffc0-0ce1-4346-b9a7-0d0d8d915080)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0778;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0914;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'h0916, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #956 be0dc0b8-fb8c-4b3a-95c0-d4b9e9307461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 1b62c7e4-fd12-4f68-9872-91491e9f3725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 32e217e3-4ab2-4fb4-931c-4e662d838a49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 0fc49992-bae6-488c-a7e7-c869188d4e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 a0bb92f2-7d4e-464b-abb7-386698c1e6dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 4682eda5-0fd7-4b63-aab3-4fc35380dc62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 325f31b7-dce1-45d2-8666-b4712bcf92bd)");

unit.assert_eq16(16'h49FC, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #956 79681b41-bac8-4457-a7f0-9f95a5e4be6b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'h040C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #957 63f3c281-9441-413a-b6d8-c87b3298e128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 035090b0-0e5c-48d7-8ab2-ff4f2152f7cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 57c5e0f8-f430-4ee9-8ceb-8c2ab3f3f862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 7a86ff72-4474-433c-a9ce-5ff2f23ec6ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 e5d59f48-eed8-4396-80bc-0168dae5745f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 b665ced7-1934-4378-8610-c9bb39f3c80e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 1c5cabb2-c207-4094-b90b-a3450e5bf595)");

unit.assert_eq16(16'h3DDF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #957 a7172b62-4f4f-4737-beba-761a7ec9dd1c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0516;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'h0518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #958 7676186e-8273-42a6-b530-cf5e9ea203be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 b9bdb570-917c-4583-9229-0073c4473dbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 ccfa7f5f-4222-4803-abf5-60a68c1c4f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 e4d4b4bf-73c4-400a-963d-aa676d709bea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 c94d9dd3-7266-4300-9d4e-9c77d8c44ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 3cf95502-e53e-4e72-886d-0ef2ae9d67bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 675126f2-e586-47c1-bd6c-9ab13c3e19aa)");

unit.assert_eq16(16'hCE06, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #958 be07348f-9370-4f26-a482-c0eb0e4aaa9d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h077E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'h02DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #959 c90339d2-d54d-4b48-8ba7-54afcb665589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 abe827f0-0a08-4198-ab88-e8dd1dc0e8a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 c87a57b6-a0c4-41ad-ac66-820b476bcd28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 c9496ca5-05fc-4cce-9755-8f85a7ca5844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 b479f76b-5dca-4985-9acf-b7efb9d48dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 55256b78-5201-4917-91c8-aeb738e43a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 7af9946f-f9bc-490f-8c48-40266490dd4f)");

unit.assert_eq16(16'hDDE4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #959 1774a518-273f-4442-ab0f-0dfa9ba4f37a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0780;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0597;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'h0599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #960 695fa552-1bf1-464a-89fc-ff3d7b1a0f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 e1a4f441-ed0d-463f-bfc3-92b01fd9b3f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 70b7585e-6c21-4124-97d0-0c1f3753a680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 7d132c92-cb09-43f0-81ef-01906567fafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 b727c3a9-31a5-4b93-84e4-9d77930344bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 17eab166-0293-4f88-a2e2-31bfb2de83ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 516e7d18-cf24-42ca-aaa5-4e3ce1d9ac8f)");

unit.assert_eq16(16'hC820, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #960 26c217f8-c7f0-4f06-a53d-3359d976d32d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0782;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'h0AD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #961 99620814-a5a1-4ef6-bc9b-ce86cd6dd94d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 8ad79f78-118a-443f-8e6d-c9839c03e91e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 a9d23458-30a0-46d9-910f-1f7f9b1722cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 3a09f0fb-0bbe-456f-a533-ebab8ccda536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 102248e3-848e-4140-8c16-25abc4d3d168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 c34f5ddc-b031-4a64-9675-131e4cfa28b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 e3d92cd6-c92a-4c1d-8753-12fbc88eb68f)");

unit.assert_eq16(16'h0A8B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #961 c52cbee5-2c84-4679-81eb-fa287e51f830)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0784;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0286;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'h0288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #962 fbe1c0df-c184-41c2-bcf3-35ebaeb7b80d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 6796eefa-945a-4a76-bc21-fbe17d2bf4ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 99706a78-857e-4f8b-a775-bb14d18fa109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 f3b25ea2-eb8c-4f79-97b6-9cd5d92c86d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 1c508bdf-8fc1-4edf-ae55-16a359976167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 5f20a887-e6c4-4454-9239-6bf6e561a998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 674f4043-b659-46f4-8332-d01dd3eced64)");

unit.assert_eq16(16'hC7B8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #962 eecc3a3c-a425-4aa6-967a-51020de4016d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0786;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'h0A90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #963 e2407573-605f-48cc-b2a7-e37abe9a2d40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 747b1f64-0d87-44a8-a554-a48afd1d81dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 e05a16d7-13d6-48a4-897f-fc31b6f8c906)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 1c73960d-e2d7-4417-8611-f564086d4520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 77420475-917e-4867-914a-533d659ef110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 f754b59a-ea31-415e-af05-1ecb1f22cd42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 17f3f725-34cd-4069-b4aa-92856e142573)");

unit.assert_eq16(16'h7DE1, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #963 fc12f8b5-3bd2-4eec-9903-6bf51abdc969)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0788;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'h0CE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #964 f80ecfb1-c580-49a3-929b-3098205235aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 45424dd9-6acf-409d-b7ab-4e363a455be0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 b832d1b1-439a-4fb9-824c-d9181c690f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 b2564105-1204-4292-a544-62851291acc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 af634581-abd9-4c1f-aa54-135242da78ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 16402c7a-1f15-4227-a35f-c4f4c1d099b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 ad76f91e-265d-4751-83bd-45cd9792c949)");

unit.assert_eq16(16'h21A5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #964 f45f2ee0-bf51-48a8-b969-65c31cb1f2ce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'h0E65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #965 6395f1bb-64b7-4139-9cbb-913d8631b3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 f06bdf59-4bb2-486e-9a93-1c0993000348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 2e3b8c64-ae6f-45ad-ae77-573ccacb1604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 94a6aa04-7856-49e7-9e82-7e8d6801ac6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 7c01fa3b-e3a0-4325-9a92-507d74adf601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 14186a14-5056-427d-bef4-106ba7a5f3c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 d7830422-07a0-47df-afa6-6bde8098cb89)");

unit.assert_eq16(16'h4A69, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #965 5d17326d-22be-40c9-a718-a0f93d9581b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h0BFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #966 d0e2bab8-d757-4a0e-8652-e2197c46bdf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 ce628c15-0fd7-435a-9525-8afa63a0899d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 f44517cb-a18f-44df-a755-bf0cef51f37d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 cb0dbf7c-00cb-4ecb-871c-db143563d009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 7b291d7f-d6cf-4486-8445-521c8ad77743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 670b189b-241f-47be-8129-915060ad303c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 45917d7d-cf74-4936-ac5b-72d98181d6c4)");

unit.assert_eq16(16'h8A4F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #966 d1229673-122d-4495-99f2-1b89a8f83e67)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h078E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0338;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h033A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #967 858fc508-56e5-45dd-b3f1-bda03828bdf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 c0f65950-a42d-4f1e-9995-118309053d3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 28e676c4-03d1-402f-a890-10f3beaa518f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 c31ab22f-3233-4cfc-a6ba-5e59f2a8b74a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 83212386-067e-4a2c-9684-4c2eb9d8c20c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 260243fd-44e2-48c8-94b7-9f235f62e453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 83a85ce9-0ebf-488c-b303-542118bbdb25)");

unit.assert_eq16(16'h1355, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #967 0db22965-047a-480b-8560-dbf8b7b985b0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0790;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'h0BE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #968 e4f23b44-fc4c-45e3-bcce-97858d753b04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 816b7e2e-8d4a-469f-b021-7966a2ad04c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 987f87d5-7622-44ef-8a4b-5234296b9c66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 c14f7217-a8e5-4c65-8df8-1e38d11b532d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 86a82c49-b56f-415f-bf3d-c1ff9cd586be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 5b4547ea-72ec-40c3-8f4a-8b600fba7e14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 edf420e9-95d0-4c5e-ae3f-44081c5d2a4d)");

unit.assert_eq16(16'hE085, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #968 df4d8388-395f-47d9-b2c2-62c8f38032e2)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0792;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'h0B28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #969 929c845f-bdf3-4f1c-8092-fce6e5818145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 df242fd9-8633-446c-8b34-995c3468df92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 71452e84-a40d-4b37-a088-56285caa1deb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 6c00cf10-1547-4586-b261-d4f4df3a9d97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 f3529a81-d932-455d-8b58-71954a843020)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 22dc48fd-8fc9-432e-b85e-ca2c55bdf015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 1ee46d47-d543-48bb-9929-4634f1f0b249)");

unit.assert_eq16(16'h2FE3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #969 51081800-f4ad-499a-bfdb-a53f11cae8c0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0794;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0393;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'h0395, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #970 a4f82844-fb86-4000-8437-c78c2e66ae51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 a4b4a9c2-0e18-4d53-9223-c66f553efe5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 66b92446-4429-4878-bb24-5c4f46ce94f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 740b57eb-38a7-447a-8641-8ec742418286)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 fb7445c1-f786-42cd-840c-1a09a6c74214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 25d7623e-2b9c-4d2a-bcd2-10d5fdd43417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 44efbc4a-8231-40bf-a943-374e5e514908)");

unit.assert_eq16(16'h2414, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #970 d2082c2a-06d0-4b9e-be59-df78c2903e48)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0796;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'h0F97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #971 2e43b265-2ac6-4302-86d1-b42c721911e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 094b0107-c3c8-46a6-a663-f52e1c077bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 2138c19b-a9fa-4f34-938e-246b760cf17f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 dc4c0a8c-b3a4-473a-b327-d71d30c957e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 3de09ad4-fa67-486c-9a4c-e481931d5608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 f014199b-9ba0-4c49-8ae8-e570027a13f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 13b16887-6b18-4136-9664-e17805c3c989)");

unit.assert_eq16(16'hE7EB, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #971 8df10fab-6e45-4e44-a0b5-f14151e7a48a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0798;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h0D85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #972 27e27a7f-54e5-4701-81c1-6a7902dd2634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 d04bd61c-fd66-43ec-b902-98291c448afb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 bf8f1e70-9172-452f-bfde-b5c47be33e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 0ffb77a8-fd44-47da-88ff-0e39ad90bb16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 55f47b31-64c4-4e3b-8d83-b5633080a070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 304ce7a6-29ff-4306-b65c-c6a25d91ac36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 cfdbc3e4-f46e-45ae-9f4c-b6844c5f0f18)");

unit.assert_eq16(16'h2E4E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #972 06100494-1b06-4d7d-b98e-aaf691720d49)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079A;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h05CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #973 6bd0758b-d8f2-499f-a99d-b683064c2c4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 0b80b4d1-f251-4d0e-ab54-c95646806eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 c532be24-7967-4d18-8055-598fbd3b390a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 346a0b12-e9f0-48d1-8e0f-92457b59b690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 a30f35b2-cf03-487b-bfa7-54a077101620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 bb2e3985-beac-46a1-8215-b01851e7e7b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 6f4328db-2e48-41c6-99a0-7be4e63fd4b6)");

unit.assert_eq16(16'hFBAA, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #973 712b3398-7c2d-43c3-a51d-a002b214ad5d)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079C;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'h0FEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #974 544a74e2-6316-41a0-9313-821787e4a0ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 b938247e-8fb3-46ca-9064-f2e82b546e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 84b2c355-6f8e-4e55-b7b8-ab18b2859dd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 8fafc94c-2688-4796-a0f7-1e517d9896a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 1e2494ac-3bf1-4b91-b3e7-ee94bc5a0eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 32a347e8-1803-4f3b-8ff4-11501f04ca40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 b71f57ac-a476-47b5-808a-9b4836469d5e)");

unit.assert_eq16(16'h0B3D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #974 a15989fc-1c1a-4692-a59d-024f830667c5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h079E;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'h0C87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #975 94958455-ed7c-463e-8cee-91eef0cdb7ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 e8d127bc-c11b-46e2-92bc-13dde2a0672b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 0efeeb57-b6a3-44ae-82e5-ab0fba71246f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 f128352c-07b7-4808-a38a-13e57227f3b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 eade2ed5-0f4a-494a-8181-799e718cfc9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 150438f0-ff19-4231-8689-c6e9da881771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 f19e2155-a8cc-4217-9b9d-c176150bc97e)");

unit.assert_eq16(16'h4D5B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #975 ea807bb5-d302-460d-b6b6-dd683c7f0160)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0722;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'h0724, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #976 7dbf106a-1e0f-4ce1-9288-d22414f9bea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 40b3853b-e107-4d06-b874-57163564d43c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 f2943412-10bd-495e-994f-7d074d2460ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 7031e114-9e1f-4fa1-9727-56c845edfca6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 b79c54ae-d2d7-42e4-a30b-8358a48c36de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 3255f92f-caf9-44c4-9902-0d87a2a97d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 f628879a-36c2-4af4-81de-f9371e117ec3)");

unit.assert_eq16(16'h4478, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #976 deec1799-7177-4526-a486-a1b76e1df7d8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0292;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'h0294, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #977 907a09f6-f9f0-4e08-b328-042cce418a48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 609ec637-4a8c-4990-b3db-7d653e01b81b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 0a0d781b-28b1-49bb-8857-a0d51633f536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 a10e6435-12e6-471e-9bb7-ac2e755be299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 13c2191c-5543-429f-bbb0-7ae602475a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 6a30afcc-32a2-48f4-9c03-8bbbeafbfe85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 cc887006-2c6c-4850-836a-332636e9ed88)");

unit.assert_eq16(16'hB208, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #977 ea6f5f8a-fbd9-49bb-b9bd-ab67fb46cad9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0765;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'h0767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #978 f110acaa-1db2-4062-be8a-d923e53fd16b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 4e38b4a5-7813-4365-aa09-08e0d1864328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 5efb573e-73cb-400d-8530-c2b5f874d3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 69d6f6d0-ae1d-46ef-b55b-1c214b3ddb22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 706958ca-4fa8-467e-a9d4-9ca94587221c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 70e4bcd8-cd81-4417-b568-3a1c3f45fc65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 e2734a26-ee30-4bff-9fe9-5a14fde3f2b4)");

unit.assert_eq16(16'h54D0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #978 1fb64122-6c4a-48dc-8a55-a2d5cfd2890a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0890;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'h0892, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #979 4fd39316-3ea0-4d69-affd-2d3a9c721dae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 885d7bc1-18c1-4b9b-b3ba-b7bf04e55b27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 1d163832-899f-47e1-bb1d-f5c6afa5349a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 5c86576d-29ec-4eef-ad5b-a11a872c14bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 24cd2af2-92e9-487d-9c8c-fce03c4667de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 f783e035-5ec6-4188-9e0f-857f3295d8c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 4cb2aa26-3bc8-4135-984c-64331dd4992d)");

unit.assert_eq16(16'hED77, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #979 45cd3479-54ee-4b28-9321-b3a1ec134dac)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07A8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h0EDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #980 0f58b920-c2a5-4f20-b99f-b32ffa23019b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 0ca5ba94-f1be-4dfc-bdb5-e2a1ba94a358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 f7be4586-b12a-4f5a-8fd8-70ab714b7dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 5385b2b9-6240-4e16-8cda-d2baa89863e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 957f7134-4155-4f23-8e95-0559a9831c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 808a40f3-4b20-4aed-80db-20fafc5924af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 ff2d13ef-eff2-481e-a773-baded8e6959a)");

unit.assert_eq16(16'h8ED8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #980 830ec108-d6a6-41a7-b9eb-99fba217c9f0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h0C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #981 a3f3169f-1451-4fe0-8ba7-79791781f947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 316e434c-b65d-4661-a867-346afd16d9ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 85a8d9d3-2a75-4416-94ee-b5ce6cfe4856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 39811329-eb0d-41a4-9d71-f8e967a83879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 c3eb2de5-5a1d-4047-9099-79cbc18ffb00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 0d339287-324f-41a1-a1f5-6c2c47feb32c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 28dffb45-6f6d-470a-9deb-22822f2fde5d)");

unit.assert_eq16(16'hB582, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #981 1e279bbe-d457-4e6e-a193-0eb200fb6905)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0214;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h0216, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #982 60a30a4e-3b55-4f25-83ed-845e11971205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 d9d7ebe2-2e1f-46ef-86ce-119c91d463c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 dd4c61d8-24e3-461f-b4f2-13de61c9b0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 1f4c4ede-ffca-4bf1-b2ed-6fa7dc50cf64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 671540e0-6510-4bfa-ad30-d0d03f9744e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 36a462c0-5ac9-4527-b958-90e2011c2020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 54eb0a5c-ce43-466c-9a4c-99ad040d7a0c)");

unit.assert_eq16(16'hD680, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #982 1b9e1207-8496-495c-8efb-ba14c4ea6d11)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07AE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0577;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h0579, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #983 4ddf2d7f-a67d-4269-a27f-085b00677eb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 a5174b1f-8700-4750-9196-c803d2789600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 c5ddcf3d-f5d3-43e8-8cdf-8391151b16c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 ad3564e7-741c-41f9-8fc0-56e2ebc84a29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 12289cf5-cc4f-493f-8aa6-97f4681829c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 8be5c402-71c5-4bbc-b860-03528973fd02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 5eba29b2-2b36-4043-b9e5-b162c1d624bf)");

unit.assert_eq16(16'hE635, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #983 1ca0b9bc-e944-453a-a94e-ab95a7db379e)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0151;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'h0153, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #984 17de5c37-97ed-42d0-b666-68ee25e027f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 1178533d-9b18-438b-aa18-9520d6f2e33b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 49eff1c1-e7e1-4362-8618-dc160f3f9b19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 f12540f9-9e75-442e-a0f2-c2dd4f11f849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 6359ab2e-687e-44d5-9f45-51ca6d5edddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 abfe1590-2690-450b-a958-681d8a9a549f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 57a44405-0a94-486d-b9df-b66730d6ce79)");

unit.assert_eq16(16'hBCC5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #984 062f5498-0825-4e7c-8771-96570833db0f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'h0FBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #985 468cc21b-b27b-4319-9c39-53abac081efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 4ce630e5-523d-4b37-846d-046a9f9a6e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 7a24f94d-4cd9-4860-a145-052f8284af29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 94e034d9-46aa-41dd-ae77-ece1c87669e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 53a5e5b1-9dfa-4563-bf94-5a2002261978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 27682d2a-ab57-49de-b736-4d921ff2fe34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 1db03287-c15f-4410-9410-55db8dba8825)");

unit.assert_eq16(16'h62AF, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #985 fe0827a6-f735-457d-bbbd-385b6d785048)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'h09DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #986 5b0bf4e0-59db-4f58-96c5-655cd9b11d0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 d571a5e3-1868-4625-b4f6-1a872f837f19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 9c956661-2187-45a0-b397-51b4bc034fbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 af81c41f-ae66-4cda-9baa-9e5625cd8e0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 361e9a14-2ed6-44c0-bf8d-227e33c24270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 b15fabcf-4225-4398-9303-e129f42c37c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 bc605003-bbf0-4108-a46a-51d2853ec8d4)");

unit.assert_eq16(16'hA7E5, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #986 edd323bf-ffa6-413d-b0bb-1edfdb982a93)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h062F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'h0631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #987 c69f0fda-da5e-4820-b714-8a9cf58a6ba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 44a507f5-9e5c-4833-a64a-81d74dc69570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 43840867-7bde-4cc5-bd13-d11cbcb1868b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 9a112bca-573b-41d8-bd7f-21aaff57941b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 1a508347-c6c1-4b6f-90c4-9a0011b88e8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 26d8aacb-947c-445f-a7b4-79b9d48bc466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 c102ff8c-f787-4f9f-91fc-ae0b6524ed34)");

unit.assert_eq16(16'hAD19, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #987 1daa1f9c-57ba-460e-a033-16b32029ee63)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07B8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'h08AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #988 39296797-62b4-4740-ac74-b2dac76d5722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 79aaca07-ad59-4a20-b004-52ed17b1426a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 9124e246-6500-4755-b986-a2536f99c48c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 e28ed743-d078-4798-b61e-9ce8b2263950)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 7f89f7a9-c104-4420-8b0c-7b445c20cfbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 50e92775-3915-4e4d-8879-3b1495b4dee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 bf073d6f-3da7-4ab2-beb1-96bf8995b2d5)");

unit.assert_eq16(16'hDE2C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #988 2fb0ebc3-dcc9-47a4-959e-307c1636c728)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h00AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #989 d9a84b22-af66-426b-b6b3-146778f98087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 07e9a842-1113-4be7-a580-bffca266600a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 3814ae31-838a-489b-bb01-e370f84e4fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 2ee19094-7b6c-4c1d-8a0c-81f05dc9aabc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 602bd041-bd05-4578-badc-465b8e425707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 ece7d1a9-8e79-4bc6-b5e7-baca5e4d454d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 dcb9bc87-4ad2-4afe-8600-aaad79260500)");

unit.assert_eq16(16'h8DE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #989 f25898b1-52ae-4835-afe3-68a69b95a676)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'h0E28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #990 773c67be-1b61-48cf-ade3-7d279fed96b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 377e4238-58c8-4e7b-9caa-d0ac40eca5eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 628ecf1c-790c-447e-8e18-d7b67b180c3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 66810321-4219-4753-8c74-584a4f3664f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 33a76dcf-bc53-4d45-a457-21354fa08cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 0df3f4ef-7747-43ed-9177-7333babccb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 965451b8-c97d-4a7a-a6b8-80a8695b2016)");

unit.assert_eq16(16'h2A58, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #990 63d5803d-0c6f-4d4c-bfef-3933bc424a7c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07BE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'h0A88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #991 80ac4507-63b7-427b-ab9b-0defc9991475)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 11f1a235-234a-4e9e-b49a-98c6787ed52a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 13e9f8c9-4aa1-4216-9dfc-a98b857475c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 dda151f6-792b-4cfa-83d6-9ede3e2fef8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 85fc1c60-2376-403a-a680-f16fc3b1deec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 e79ff52a-bfa6-4fd8-8745-b2bc25299496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 0b001f13-18ec-4ad7-87f1-43aba00bc411)");

unit.assert_eq16(16'h8B7E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #991 229effad-af94-4259-b566-c1f201d70367)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'h0A67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #992 3a2bbc4e-191b-41d5-89b1-007e97b2744c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 8262f2ea-6db2-44f5-8d9e-ad8a1be27425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 b157f785-3684-4a34-bee5-eaf9647b1fe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 9ea4cbe1-ee5d-4a90-a955-b25e517c08d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 7438e9c2-9077-45b6-9c95-8ef625883121)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 f651627d-1de8-4ac9-87ea-3033324469a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 53261cd3-c5ae-4fc9-aec4-f7cb23c90791)");

unit.assert_eq16(16'hD0F3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #992 8de3d3b7-6949-4651-90a0-9c83d93cb07f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'h0E9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #993 a47af3d0-2f3f-425d-8edf-9f0014034366)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 9ec2b639-3879-4e08-ad60-bebe4a3cf440)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 19b464de-cc80-460f-bd5f-f754b0e3b239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 b9aa2e55-7d4f-4ef1-9c3b-ea3a73161000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 aa3fe9bc-a79e-41af-8020-12692b3935a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 b9ce8e7b-aade-4df1-8ee2-30cb47920c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 7e9e347c-a204-45df-b63a-e621be80edfb)");

unit.assert_eq16(16'h8368, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #993 683afdc3-22c0-43c0-9021-089b4dd51f18)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'h07FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #994 9cbcf82c-6088-44cc-8f39-d8a9276ca2ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 f67fd8d7-4844-49eb-9024-f759199cf93d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 18245b4b-6d3a-4f63-9c16-b74caf33cfd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 80a73e97-0ebd-4aa9-8b17-62f347700cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 dd0789fe-6e5d-4667-bf8c-a0bc6f5bc610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 7daaed5f-41d6-48a3-b829-f29abbf50a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 02dda9a9-dee2-4fa6-887a-2fbae7ca7707)");

unit.assert_eq16(16'h88C0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #994 b7db3d1c-b870-424a-8560-0630168b0bc3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h034D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'h034F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #995 8a84a5f5-9f93-421b-97f0-7a52c3296018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 9b9f130c-821c-4726-8d00-4aa52a489266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 0f457736-8b2f-4800-ab11-023c603e600e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 e5e6f7fc-82ac-4345-a003-8d32a3695a46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 86d7bab9-3649-407f-aca1-3030a9b73a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 0e8321b5-a2d9-4440-b258-e14cf01f6e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 585b3c34-afb9-4b4c-bc93-e3aa6348bcc1)");

unit.assert_eq16(16'hDED8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #995 18e6e729-49ed-4e83-b82d-8cf0cff1e9d9)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07C8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'h0C14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #996 0a3ebc56-4a1d-49d5-b296-27c086724a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 1c342da8-082c-4919-b1a8-dffc222436b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 2d311aff-48d0-484c-afec-d537785b5f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 bc69b4e4-299f-4f8f-a211-edb30ff1646e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 5d9432b1-39ee-498a-b19b-9b9ebb2bf632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 965e15da-68fc-4396-82e7-e25540fed261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 9a1a5857-a36a-440d-ba04-9c8f8a3d930b)");

unit.assert_eq16(16'h4133, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #996 adbea691-73d9-4db0-9d25-742e4571380b)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h067C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h067E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #997 82768ca3-e301-4f7d-bca2-03ac38aa2f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 38ec70b9-89ee-4a75-9d0d-157ac40be5c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 eb1da517-e653-47a6-b89f-a5f65e16051d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 a35aa8e1-432a-4470-bff3-dfcfd00e007b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 d1d4591e-4ced-464c-8b7e-84a98cdb595a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 ba6e9201-a196-458f-8ea9-6e3c4987ab94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 4906fc64-3455-452d-bd2f-53221e8dea84)");

unit.assert_eq16(16'h0DD2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #997 9b7d4840-3d8a-4ec5-abf4-ab2cdb21e5e8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'h09E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #998 b8aa0588-dd5c-4fd7-a676-28994ca372be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 5aa3e050-00e5-41aa-9dd9-a79004a9620d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 5083557e-fb35-4c34-a482-7293f86ba5bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 15b8d805-cd36-4cc8-9a80-fee5413d7ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 cd9543fa-4831-4ee5-8322-45e110267635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 18274c4f-836a-4326-8ee7-a50216361357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 ca735414-1aac-4cf7-b25d-7f75d6b674b6)");

unit.assert_eq16(16'h4555, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #998 1b31ab49-866d-44bd-9308-94c06119cf84)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07CE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h0EC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #999 88848a40-3f3e-4078-bdd7-18e3fe762f05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 01670984-05dc-40b2-84d2-4162d1314c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 0ca0707e-d8bb-46cc-b8a8-31623d409406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 2e21c1e9-7b4a-4618-bc83-362afddb4bbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 3555622f-d1ab-4a30-9028-e4a23290ab8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 a8a6af70-7a2e-4030-b431-a09023ef6226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 80a044f5-9cd2-49bd-9f3b-3ee9b28303ec)");

unit.assert_eq16(16'h163B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #999 53cc473c-b560-47d1-84ef-7db72eaca010)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h07A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1000 45b02555-24a5-4bc9-bafb-f237393b322c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 b64c7c16-f6f6-4269-a72e-ae5208d6f833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 bd487d0a-3699-4418-a7e8-97464da97824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 c0c5a6b7-75e5-417f-9cd5-91d86d973158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 1c6f2b82-39e4-4c3c-81b9-cd2efd9c1fa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 1ced16f6-df0d-448c-b280-873fc63c020f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 8c93443c-198a-4bdd-9f9c-e3422251346f)");

unit.assert_eq16(16'hBD79, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1000 7760a3d8-6011-4305-a7c7-bb8a55192dc1)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h082F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h0831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1001 16bc8890-7cb2-46de-a0b9-0aaee92c94f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 c0e4fc1c-b5e8-4f73-bca9-bfb44f7c1e9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 f7fa99a5-70aa-4a8e-ab71-fc383a05c17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 e79ccb33-ee08-4543-8c50-877ecd31008c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 9950056f-ab8a-4646-8809-285a5f480a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 a47e8f4a-5dbd-4f58-8671-b23a0e28b708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 5a99549a-e4a8-4e4e-ba95-baa9f7568c71)");

unit.assert_eq16(16'h709A, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1001 32cd9b4c-2ff0-408f-9b90-cd9bdfc807ce)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h06BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1002 9ffece08-90e4-402a-a77e-47015e1e2905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 1991b472-4698-4335-83ef-7e6ca9663205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 838d9ce8-dad9-4c53-86fa-8a47a93bb857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 c6039eaa-b7e6-4a75-8e73-46b6d7f8a5e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 38df3417-92ff-410f-8439-5ba28d2f5f16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 5b660f44-e4ee-4536-b295-d014ed1c65ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 7fdebd9d-ecff-4dfa-b728-4daabea3905d)");

unit.assert_eq16(16'hD85B, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1002 f3159203-0771-4e8c-aa79-b283ac095448)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'h07F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1003 cf652c41-a409-478f-861d-332ab6d7a396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 b4f8650b-528b-43c8-b62e-4decdad8c7dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 52d8b3d4-cb79-4163-987b-6a85aff97f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 288956bb-12e3-4a27-bd81-e47cc7338d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 165272a1-9570-4b5b-b2d1-d400ff473f61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 ff1715c2-1e63-47ac-a284-8794ad1ec549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 baa39620-8409-44c2-a988-b19b29563de4)");

unit.assert_eq16(16'h415C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1003 93179094-6dab-4303-abb1-d252dcdc65e5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07D8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h0C5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1004 74e3c61b-bc7a-4a20-8f09-f8b6322f31c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 3e002a39-b45c-4719-8052-18b3d8401a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 43b354be-5604-4c24-b5ee-1a6348b53dae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 bea6976a-ebc9-47d1-ab50-21aafe18350f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 76b7518c-331e-422d-9b3c-d5e5a2ed9488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 36d6c673-8901-4cca-8178-b56b834e6729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 d4b18339-cb53-4f78-a577-53ee6096b1fe)");

unit.assert_eq16(16'hC4F4, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1004 99129b07-6048-4ab6-9295-d900c3c4593c)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0240;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'h0242, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1005 657e8bca-4cb6-4234-8538-beed8e654e97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 5ffd823b-2b80-467f-9d22-a316a79d576f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 067c742a-38d4-4c61-adf0-b07060c930ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 674e367b-eb0d-405c-83e2-5f8a2592e8ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 e703b8b4-5d5c-4fd7-a953-b9ecb4123253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 01a938fd-96ef-4996-bf68-12b70c0fbdc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 205902b1-fa86-48c9-a6b1-5e7181db439b)");

unit.assert_eq16(16'h37AE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1005 465358f2-8759-4cd2-8ece-8f49f543fc48)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0505;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h0507, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1006 608bc5ff-5930-456e-a635-a8b5b8f7a2ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 fc5e2552-7094-4172-bd5b-381d72de2df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 c1fa6eaf-df4c-46d6-bb13-be61f49e827d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 7872bce7-4b8e-4635-8892-a08815cedfdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 fc5cf9a8-fdc3-470d-a9ea-54f4f4ce1846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 b1f97ea7-9818-4add-b39a-b03e2dbb3756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 0db51319-3023-4c3d-bdf0-43ed1e8849d2)");

unit.assert_eq16(16'hCC98, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1006 33b6f47c-57d5-406f-9a57-f571d7d6e876)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07DE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h0BE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1007 f87e3000-361c-450b-a5d6-96aba49670a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 706f3b57-de47-431f-a35f-b9c1d6f983ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 a78fb601-104b-414f-9266-aade6582b64b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 64b54ae6-5468-4cd2-8f17-de702c17421d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 ea5633c5-6a6e-46cd-861b-98e48e04e9f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 7a2900fd-254d-420e-baab-792b92f94404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 92b9c890-1662-4fc8-8490-1a9a2342619c)");

unit.assert_eq16(16'h6FE0, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1007 a88a8184-c6d6-4894-b180-92510ee9c4cb)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'h0C8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1008 02d30c19-9349-4dcb-aaeb-1d6729484c5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 50200763-2d25-4802-b810-fcb043a12ccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 5b5863cc-b77d-4ef2-8ce4-19c555402fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 070ae3f7-cb10-4776-a2eb-0a60daa9192f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 7820442c-4c72-4627-8865-ee63630647de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 128171ef-3eed-4fb7-8e86-26ff34eec42d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 6d953633-3197-4c57-bbb8-cc6d603777f8)");

unit.assert_eq16(16'h27E9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1008 67ac19c3-caf8-4256-b523-2ca0c0113265)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h0B3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1009 e6003d17-2c53-4bc2-baff-0e63ca31780b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 f634de7a-c6a0-4f69-bc67-ef884bb6389f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 0b2e81e9-a3b9-487d-b2ff-05bb593c4663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 ae0c51ad-5d4f-4968-90ce-533b9049bd36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 b8d586c3-2aec-4e44-b0ee-8304cf494bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 68218dc0-0b3f-4211-9b23-a0f1dc13a6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 1e45fcac-21fe-4726-b6cc-02e5069cdf7f)");

unit.assert_eq16(16'h4F44, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1009 7b4f90f3-df2f-444c-a421-901ec73ab8e7)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'h0519, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1010 6685c990-ac51-4db8-962c-7840fc549285)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 35503620-26f8-4446-a9fb-7d6e8a627b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 0880c46b-112d-499c-96ee-8063723dfbc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 c0aced56-6de6-40d0-bc30-a05ca6c00082)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 05137950-425a-4f08-9caa-ff6f91da79b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 c7fd78bd-717a-4716-b3f9-f95b10d5128e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 3fda6e8c-63ae-48d2-b93a-501a4353f2fd)");

unit.assert_eq16(16'h93CE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1010 4c55f8c9-1b32-446c-8794-ae6abfaf56c8)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'h0A76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1011 fda4317e-b4b1-40ed-a5be-51af65a08c87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 de5ce36a-da6f-46ee-8924-ba0f0f3c0192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 77091447-b6e0-41f5-822b-fd1769edf90d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 da18d25d-d124-4e9e-a44a-972d3a47ba11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 920c5dc8-ae4e-4fc9-b7af-43ba9841e64f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 d00b5100-ecb7-4031-9289-3fc1455e80c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 d4ae0395-0a46-49ec-af5e-4803a6f5f5a9)");

unit.assert_eq16(16'h6A9F, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1011 ea73baef-9b0f-45c5-8fd8-dffdb3ca7af5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07E8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0633;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h0635, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1012 4fdbfdb3-dbba-4a3a-9d2a-3d2d82625b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 83cc5669-b19d-4bae-b364-2556b3e2b470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 57e5060b-0064-4240-85e9-d5ad7833cb11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 fec11aa5-4297-4ed8-a961-e0149cc07b76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 30ab6570-71ab-4312-9d05-67b2cd6be9d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 72e0f42e-ab51-4202-bab8-de80c684826c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 3ab93251-94a7-42e6-b876-e9a28e374d04)");

unit.assert_eq16(16'hE368, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1012 e1d099da-a9bc-48da-b02a-9a35bcc181b5)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h0E03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1013 002954e6-5fd4-44ec-b961-3e8267359ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 425fd07f-ad08-4f86-a984-65278c18ac22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 b8e809ea-ba4d-4bc4-b85b-28b39048e2b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 384e0fd6-20da-4f48-af2f-4f29380a8a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 061b1a49-6b2d-45d4-89cc-d96ad08c3983)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 b2991e43-9e84-4a1b-be72-a5993f9c2d8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 673978b5-25e7-48d6-89fd-3b4640487419)");

unit.assert_eq16(16'hC26D, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1013 d3edc6d7-b8a0-4399-b8b6-e942c084e45f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h06AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1014 e9e0c915-b917-42e0-a317-6507f1e10d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 0825ad80-7eb6-41bc-9a8d-5d7275977c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 eb6d2e96-32a1-4537-91ff-fbc3de29ed2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 324b091b-3205-456e-8663-818a8f17ad10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 28e122f5-c124-4c2a-a01c-8728f7e7c7b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 b16561c0-26e8-4960-8b61-a66b7031eceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 d11630d3-8656-472e-be75-1c29f6b5fc56)");

unit.assert_eq16(16'h73F8, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1014 55898cde-205b-4267-bf7f-6fc34edb1ff3)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07EE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0ED9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'h0EDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1015 f252e446-2aa8-40df-85ba-d06995c4164e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 9ae3d460-a500-4f4b-aeab-548faa695589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 52b45c24-d1e6-4fe7-a6b2-964180edd4a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 3d11c03a-8e23-423d-b793-5edaffd519f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 f0e01450-11e8-4066-ab6e-2fa2a5889759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 1d540f46-e68b-4f19-a730-de340df0f012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 00b664bf-bad7-448a-8f4c-44c17fc121a1)");

unit.assert_eq16(16'h488E, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1015 2fb5fc80-e583-4279-90b8-0c2626d1c9a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F0;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0800;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'h0802, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1016 72e69df5-0b45-4ff3-a940-c6e41786893b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 24669550-3b46-4187-8d2f-47cca514c6eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 9e3a0b04-afca-422e-88da-11810c21ff77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 0d7429b8-404f-4e90-ba9c-8946230f148f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 4377f0d1-8e6b-4ba9-b3a2-beea3955f96f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 feaa0ca3-e0e7-4d34-8173-58e50d676d11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 f35513a0-e12e-4a35-a5b3-5dee3f8dc5a9)");

unit.assert_eq16(16'h324C, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1016 3c338bdc-0d83-4b81-8b13-fc598b279a3a)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F2;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'h00B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1017 c2713cca-43d8-481e-a437-653210df90c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 2a66d378-84d4-4000-9478-0cecd78bf6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 ac832a7c-4c04-4964-bcf1-494281ab98c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 182fb094-de12-4021-a3f8-3829471d6c4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 923956b4-7bd0-49e3-a744-75777c15c2ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 13de766e-ad72-4455-bb80-22d9d5ba5848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 bff0fcc3-cf6a-4ed2-ace4-76b95760a4ff)");

unit.assert_eq16(16'h30F7, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1017 e16591cd-c93a-4d37-ac47-8807c19f0c12)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F4;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h0BF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1018 b0ac9511-cbee-4cd9-ae3a-4568f41f8f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 a86d59f7-20fa-4059-871e-e354b401aebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 946b751c-2c07-4ac7-bf01-d7c82ecf7fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 8dd1ec42-66f8-40d5-a51e-8f754583db6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 6732118e-4751-4414-a796-494f2f85a7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 0a9ee225-896b-4d15-85c6-9c3baa26142c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 5209a091-fab5-423e-a39a-4b691c4f21d7)");

unit.assert_eq16(16'h1DF3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1018 ae9149c0-a922-4a22-81c4-2858ae48628f)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F6;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h0C80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1019 a4aa88a6-760a-48d1-99b2-649f5c2cefb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 1bc31fab-8b17-4d81-910a-a810fcc2a5d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 2b5630f3-bf17-4c8a-8c17-36171aea3314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 b1c66a2a-f0aa-4570-9c47-c50ffc1b88eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 364eb8fc-befd-47de-991b-0d6d59dbf9a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 fbcad70e-1105-4b13-8aec-150f51fb2fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 5fa2a45c-6e8e-4b14-a6f2-c78319f9b4dd)");

unit.assert_eq16(16'h52A3, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1019 5bbf91fb-8766-4066-a199-d519eaee2b89)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07F8;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0685;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h0687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1020 beff6463-3e8e-476d-90ea-027ed86bad31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 fdfa875e-aefe-473c-a32e-80cbdaeea515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 a1cb80bc-ea71-4d47-9c7e-7634499eaba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 f69af4da-0fd6-4cf6-826f-94b52ae7ac07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 509eff5d-35de-4606-a44b-eaabf9cb6bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 c862efdb-ce76-424e-a531-a8ca566ca65e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 c3b37907-4e90-4f73-9b04-f423dd240a9e)");

unit.assert_eq16(16'h1CCE, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1020 9952df63-3452-44c2-b002-f2732fc13732)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FA;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0471;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'h0473, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1021 a0179235-c7b3-4d2b-be22-92d555a9f408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 35037541-02cb-448c-9fd3-331f8ebe198a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 202c91a7-11ca-49f5-92d4-fe4b2ee50290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 f771a6f7-b299-48d8-bc73-3d36456c638f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 fe77c36e-cd62-460d-a576-246dc398acb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 8e212172-86ff-42ce-bf8a-c8a02a30ce2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 a9b0bfc6-b172-4b11-80eb-b30eba91ed78)");

unit.assert_eq16(16'h9CE2, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1021 f7eb9f7d-c74c-4af0-9f9d-fe4cfce96d46)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FC;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0429;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'h042B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1022 634c9430-75ea-4fea-92c7-fdfe547ac03d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 e0e8abe5-d23e-4958-97f2-323c8ff2d785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 fc779f17-322b-44db-91e4-6934a7d57c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 d3d9364c-26a6-4f4b-84a1-c61320ee0b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 0827e33e-205d-4351-8cd0-4e344e79e664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 b34e30ec-82ea-4684-b657-69d9956d5d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 6c80c3a5-1e41-415b-a96d-96688af87b5a)");

unit.assert_eq16(16'h62D9, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1022 6a941e78-f3f2-42be-a778-41d094ad97cf)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h07FE;

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'h0E4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1023 f127d7ab-eb6e-4eb6-8f59-663bdb62f9f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 516f0d7c-803f-4887-91b5-bff60be5924a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 9cdf5fad-103d-4aea-aa56-bcb93a94b32a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 aeb9b83a-0ab4-4574-9dbc-6849c3bc1d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 d16bb464-b657-4028-92da-12071c406cd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 fa209074-9698-4330-a647-c0c61dd259a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 33a08d6f-7801-46b3-b657-4f77b933556d)");

unit.assert_eq16(16'h7B29, top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q,
"PC (Testcase #1023 b26297ed-9a5d-4c8c-96f9-679a68fad3a0)");
top_z80_i.z80_i.cpu_i.datapath_i.reg_pc_i.q = 16'h0800;

#(CLKPERIOD / 4);

unit.finish("callreti ('(RETI|RETN)')");
