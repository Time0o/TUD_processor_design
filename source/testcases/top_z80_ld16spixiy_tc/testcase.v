unit.start("ld16spixiy ('LD SP,(IX|IY)')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE924;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h484A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'hE924, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #0 282ee32c-8b3e-4e81-a918-81069ec9c5f9)");
unit.assert_eq16(16'hCE07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #0 b600a1c4-c0fd-4904-a09c-5101fce7b420)");
unit.assert_eq16(16'hE924, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #0 d6acda26-724c-4ff1-a00a-b9bdf1b9f6a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 bc3b39ff-b09d-4f53-8ad5-99b8d0e12c3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 327051a2-6731-4578-9789-3068de64bd1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 5b28b214-9b84-401d-b256-c7b5db564cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 41b229ce-8018-4efe-a84f-219c39276b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 fee6aa40-78f6-4434-9be0-700a638e651b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 42faa2c8-6196-4b8f-ad8e-befbc2b13900)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0950;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8759;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'hE359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1 c870a036-ad02-4301-ab8a-fc89fe7635a8)");
unit.assert_eq16(16'h0950, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1 3ff57dc3-0185-47ef-b956-485a6d398567)");
unit.assert_eq16(16'hE359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1 01c6e5fa-367b-4257-913f-4d6fa24f8b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 6167d4ed-f3c4-42bb-a0a7-7856973ebb51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 dfeea0a6-8104-459f-88bb-8f6a34e57d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 a1998d4b-465a-4e93-88ec-80d3fbeddbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 f0b3bc64-7aa6-403a-92fd-063b8ce049e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 3497bca9-db29-432a-8b05-d778fe576e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 aa683a29-5b68-4174-90f2-e4571f377ce7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF45A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5121;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC9A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'hF45A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2 aff7b994-2de1-449b-b64c-27bc796202c1)");
unit.assert_eq16(16'h5121, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2 a94486cf-fb99-401e-a900-69726fcd978f)");
unit.assert_eq16(16'hF45A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2 1df13c49-4b85-4bc9-bd2d-34e57f17a59c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 7fdf9de6-6498-42cf-a422-17e54c5a55ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 2a2d0c45-7710-4627-8aa9-200358a43aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 61d9da03-323c-4147-88db-4ff8f8b762ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 687196d7-5438-44ad-a559-ab96c76b4a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 bc1ccc30-efc8-4849-a399-76384ecfb8a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 bf182b14-818b-405c-97ee-fa4a6cdc9a87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9825;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF46E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'h9825, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #3 f2643281-cd53-4ee6-a445-e3c1876ef342)");
unit.assert_eq16(16'h68AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #3 610dded8-801f-440a-8029-8e9d456ce043)");
unit.assert_eq16(16'h9825, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #3 801b9519-86b5-44e9-996b-41e07f403679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 fa249120-83fc-465f-bf15-4c5bc97cd6dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 9c1be601-2e0f-410f-af80-77dcdfdcb388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 e91ae321-1f3b-4311-ac52-ad069fbfd7e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 62235263-6df5-43df-a8ac-3fa1d25a6558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 f9d109e3-5c72-42e9-8f9f-002a80c00c7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 7dd39f6e-c641-426d-86f8-b733753bd3c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAC23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7FCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'hAC23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #4 f7234c91-dc08-4795-9267-c7c63cf7f539)");
unit.assert_eq16(16'hBF2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #4 66761f12-9afc-48a6-aa00-b761b0482522)");
unit.assert_eq16(16'hAC23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #4 bc9008d7-4e8b-4cd8-acc1-be933246b0fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 3838147e-c21d-4f4a-8adf-ffcc1923e884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 2b07fc16-110e-47f4-88ae-e2bf4e775730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 e8118fa6-5c96-42b3-b0a6-c2422e2a9dc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 8a87d9cf-5d91-42a4-a9a6-247e51769efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 1dfefcd7-3d9a-428b-86eb-5b105007ea5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 b65671f8-a1ae-4851-931a-2e99b4bd30c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF0BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1616;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBDB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'hF0BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #5 ddaf0b3c-0148-43d1-b0b7-b98702ce986a)");
unit.assert_eq16(16'h1616, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #5 9753390a-6d0f-49f8-a104-720c7206f235)");
unit.assert_eq16(16'hF0BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #5 74d29db5-d48b-4501-83fe-3b4870a5893f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 35d3a346-6534-437f-9809-2362d48e9fd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 a987d12a-44d1-44dd-a525-2f6a91a75780)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 c0e44bfe-0b9c-4138-8459-0ac22f3510d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 5b156d37-97e6-42f8-9044-a931219a927a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 228fc387-4c1c-40c0-8005-6b7f7ef69127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 713214f3-ae50-4324-9930-75557f4cd80b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5BE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h28CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h2E31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #6 7f3908dc-31f5-411d-a9e5-93231b9a47e6)");
unit.assert_eq16(16'h5BE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #6 4c2316e9-7292-4501-a0ae-b4ea5f2bc540)");
unit.assert_eq16(16'h2E31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #6 b790cf5f-2807-4775-93ef-e2981988fe34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 347ce76c-b099-448c-998d-821b79322171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 2f649836-ab91-42f6-bbd9-e51ff3953178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 de45b487-0393-457b-9043-c20da0a3aaba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 caf7648c-175b-4304-b9db-a560ff025c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 7f46e106-95f7-470d-a5af-f27002126f2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 3f07f89b-3e77-486a-ab87-f1ea1f9aa0ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0715;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'h52E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #7 80598da6-28f4-4ee3-a7e1-bf9e52380b23)");
unit.assert_eq16(16'hEC21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #7 c306d0d1-f29e-49d3-b191-3d3996d72eb4)");
unit.assert_eq16(16'h52E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #7 21bed71a-15d6-4dca-85fd-55960d7d6e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 baacfe6c-aed8-40fd-9d1b-962c722388f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 dde3dc0d-8c15-4fa5-9900-2420734b3ea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 701e2c08-a322-4173-b891-34d93c659b20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 3c0d6af2-0ff7-45d2-a574-533bd34f4496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 f54a2e08-1ead-4342-9526-bf7346ca5c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 cff354ba-068c-46a3-a48a-50cbfee969c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC47F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6983;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'h52F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #8 7e9bd5f6-7e40-42c2-ac3f-4a2820fee601)");
unit.assert_eq16(16'hC47F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #8 cbc7bd63-3140-401b-9af5-2f6a18b8683e)");
unit.assert_eq16(16'h52F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #8 b5b63e4b-e13a-476f-b683-4086757c6117)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 63abf1b7-6c36-41ca-95a4-1f8765a71dd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 22f4c71e-b911-4e19-a2a1-6a7a558f48fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 4332a246-d630-4420-97ea-604ce961ef05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 8b85f9cb-e929-4045-b9bb-258b6630a5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 d6912824-b802-415b-938d-573bc18b6f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 bb5e0e2f-7837-4c70-96f7-2f8b7862f07c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD7B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF66C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'hD7B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #9 4be0e8ea-a7ec-49cc-99f6-b2bcb2fed09f)");
unit.assert_eq16(16'hF66C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #9 66240b02-6aac-4790-b6a7-c04daf37473c)");
unit.assert_eq16(16'hD7B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #9 830ea0b6-4b47-419f-94ff-697d8e0bff61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 7eeb3150-edcc-483f-bae5-d07621bc7632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 97ddf00d-833e-4596-b16f-2152167f9795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 13955438-8d02-4894-8a13-b9a61591299a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 473ecb6f-d91a-4361-a6f6-3be800991b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 e545634e-f54f-4d21-a7a8-3f54f6ea3a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 be64dda0-5eed-4a09-a1bc-f32084c093cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4436;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF258;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'h4436, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #10 0db27dad-c24d-4bbd-8b05-6e1a61af0b48)");
unit.assert_eq16(16'hF258, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #10 4afe4065-78b1-4942-92ca-48aae9f0ee64)");
unit.assert_eq16(16'h4436, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #10 95a75a31-5ce7-42f8-b989-b9e54f422b11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 b73659c5-e297-44ee-9325-10adb676697c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 b1ab7bcc-ac62-42b6-b21a-60b29aabefca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 f4824ced-044e-49aa-be2e-b43e78ba0c64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 0d969965-d8f2-449b-afe9-3fda1b3c78fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 88f14f79-93af-4761-9282-3fa037667740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 aad2fc55-aa75-414c-8d7b-e677b9bb1b5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDCF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h2D17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #11 e8f9e1b7-1c25-4f27-a307-5ba48a660636)");
unit.assert_eq16(16'h8DF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #11 f2d649d9-bbad-478c-a26b-77365c42fede)");
unit.assert_eq16(16'h2D17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #11 67e5f7fb-cd0c-4f28-8985-5cf3c50dde61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 dc1abc8b-1f4f-4618-a689-9a57a823ed6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 7b9311ea-3626-4d5b-9560-db5ba457605c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 1d7c96ae-7661-417a-96d2-e40f18a2be45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 d68a5b4d-5cbe-4962-9790-9a673d113cf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 b327c48b-2475-4a69-a4d6-0a90743496bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 7a7de117-00e9-4d27-8208-f491ccb9c997)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8656;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7766;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h75B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h8656, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #12 2237d2ab-ca0e-42ef-878c-b0ef7af59ebd)");
unit.assert_eq16(16'h7766, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #12 b9dfa443-71c4-40fd-95af-30a02ebe2197)");
unit.assert_eq16(16'h8656, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #12 26c54893-35da-49af-88bc-8d6c43620bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 4987cb38-7254-4b7b-a119-d84113c433bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 a68599b9-10f8-4d83-8795-3d680303b288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 9cd97f2b-327a-48b3-a3fc-c0d0be6f1915)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 ee19d9f0-b604-42e5-bedc-f2902b7a6de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 e3212415-b6fc-4421-a0f7-01e59136818e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 38d901bd-324a-4c37-ad93-6a353241f9b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0525;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1058;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h613F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h0525, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #13 4bbb3b65-3e1a-4153-9176-929f87cf134f)");
unit.assert_eq16(16'h1058, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #13 965ed44f-320a-4009-b884-fde71faa6d14)");
unit.assert_eq16(16'h0525, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #13 ba36d503-fcf9-4820-aa38-24338c3294a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 9505f621-66fe-4599-98e5-0e9291ff01ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 9c204cdb-ef45-4f7b-a988-9e6f18ea579c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 7c47bf27-316f-429f-ab85-1396e8829051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 5dd302f2-936e-4cc3-bfe0-dbd7124396dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 b83d7458-1532-4b1b-aaf9-21d5ed2b70f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 a6bdfcea-7fa1-4fa6-834e-8177c145844e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA97C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1358;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1371;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'hA97C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #14 efe1142d-3aaa-474e-a8ce-1f8c3ba42538)");
unit.assert_eq16(16'h1358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #14 21204888-d575-460b-b474-56df97d90af5)");
unit.assert_eq16(16'hA97C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #14 932c1333-4d87-49a3-b570-8b6065ac34f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 5e30ffc0-f4a6-4aad-93d4-d3387a9a002d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 3e007cc8-bd58-4dc9-96df-fa6892c5e379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 9e0cf1c1-8bbb-4adb-8e78-8fe662de9409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 0c702e5a-eb61-4610-88dc-e6fe21789674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 3125dfb6-7052-410b-9d46-d8a73e075b64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 1c7dedf8-13c8-4c29-bf1d-b1788f2e7256)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9DA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h601C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h9DA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #15 b4d5dad3-941f-4738-95ec-a8accdede20a)");
unit.assert_eq16(16'h601C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #15 41565b8f-8370-4d5a-ba43-628a716b993c)");
unit.assert_eq16(16'h9DA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #15 36be02e9-0daf-4fd1-a012-c1ba1b411343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 8be6c84f-6d36-41f1-a5ab-d948cf87a36d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 a0385474-6388-4c87-9355-5a2204c868ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 b1e9e03a-0bd9-495a-bfcf-20ca299f38de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 37699bce-b2a1-4077-930d-bd1dc0a2c4ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 3733ed93-ca38-4391-89c0-075102f5b582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 665c3345-7c22-43b6-a78d-2dcdc0ee07ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC9E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7352;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'hC9E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #16 b796331c-ffcb-4f08-aba1-9c64c3e827f9)");
unit.assert_eq16(16'h7352, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #16 6aaa0418-7c74-4b5f-8676-1873e72f93a9)");
unit.assert_eq16(16'hC9E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #16 a6098402-b019-4615-9732-5fc50790b281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 72863869-5af3-49d7-8a9a-1cef55490d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 9395ca27-bcce-42db-a051-de8b727534d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 03e44713-0b52-4b4a-898f-4db239d7c5be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 2b919072-57bc-468a-94d6-6c279da97a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 90137906-f9c4-414e-9277-c9dcab5b799f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 a772a6e2-c79b-451f-a93d-c5f6ccfc81f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0682;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBAA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'h0682, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #17 d0a396db-7dfc-4f66-b5e2-fddaec1a7cf9)");
unit.assert_eq16(16'hBAA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #17 2f8b8888-42f9-4e43-b359-24843c80465e)");
unit.assert_eq16(16'h0682, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #17 57454d3b-b645-49f5-af18-cae21d0f0a40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 edd04d20-9f23-4b63-aa89-bd12fbb23356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 83cf6a16-53c7-4bba-ba5e-5689fdbe52ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 71bd9e73-4d37-4655-94b0-e843c0f23cab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 ce0928cb-07f3-4130-ba45-84d8397b8375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 f18dfa4a-ee77-4f8b-9540-b37b4c15699e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 a0fb9b58-91c3-4289-aba3-102c27cf88f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h3B20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #18 76e788c3-d179-40f5-8aec-fa824cbc01be)");
unit.assert_eq16(16'h2E80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #18 29f5f3e3-5c9b-4f69-ae8c-2e7325b9b871)");
unit.assert_eq16(16'h3B20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #18 35fe92fb-e7c4-4d36-8eb6-1613daa9f03c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 3c378f4a-ea87-4568-b02e-b05be06b07db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 3b920811-29dc-4efb-b96e-5d2b7a34fb1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 14c49e3c-a65f-4423-bc93-2dae5d00b708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 73d551c1-dc35-4132-aaef-6aac7d7b5c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 6dbcf5bf-b9b8-446c-b886-571f70e67575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 2aa2a59b-0c9f-4250-8598-4ef31516d61e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA723;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6EF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'hA723, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #19 3d5ee1de-5ccc-48a1-9421-8e45507f5101)");
unit.assert_eq16(16'h2BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #19 764e9eab-1a84-47b5-bd34-76816fd2b4a5)");
unit.assert_eq16(16'hA723, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #19 5614ee89-35b2-4a8e-8b8b-b15ca84fed9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 cf4d8aa0-79f7-42c3-8272-c4b0665d12ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 630d3393-0356-435d-8d5d-116882833aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 309f615c-1f37-46df-ad24-652acfa3b5df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 3cd2b09d-be10-4fbc-8109-f13b471d3267)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 4ea9f926-530e-40f9-909a-57a35f6e1b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 a5127242-6aa9-46a2-bd35-d8060ba8bbf8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA4F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC61C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA0AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'hA4F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #20 c6c320c3-821f-4b65-a529-3506c708bec6)");
unit.assert_eq16(16'hC61C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #20 a43f8934-b25c-4491-9d43-fc8b62e6d7d7)");
unit.assert_eq16(16'hA4F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #20 c3ed0ed0-6ce0-4525-b5db-b40df5dc4d84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 53c28626-3189-43a7-a971-6f69ef915559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 02429dc5-a2c0-4b8b-9245-10fb9b455c01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 cc2db73d-4bf8-4cc3-ac9b-651333c6c32d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 28080f33-b862-4039-af9e-1b3df4d98a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 30b141c3-d80d-4e1c-a6cf-046dd64ed828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 94aea3d0-19f5-42c7-a933-4fd2a181e263)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h682B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAC3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'h682B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #21 d28840fa-ab44-4c02-ad82-540a75a1507c)");
unit.assert_eq16(16'h72C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #21 69875a10-9659-4baf-8f2d-3992a869c768)");
unit.assert_eq16(16'h682B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #21 f86bf77d-d86c-4737-bc38-e40b68ba5657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 d2353beb-5b50-48c8-871a-6c84fb7f9749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 7bce752b-e888-48f2-a8ef-6e1f7ae9b61d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 ebf6b756-07b2-4592-b8d4-bc602eb55514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 e2410529-7f60-4c0e-b674-3424dcbf3514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 c2b4b807-620b-4d8d-bbf4-1af22b8f3938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 07b5dbe0-b477-4e02-aa62-954b4a1e560c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6681;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'hDE2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #22 6c79b8a4-db5d-4eb6-9f12-45ff06712188)");
unit.assert_eq16(16'h7B65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #22 9ba852b4-bedc-47cc-ad7f-d84e81b9ddae)");
unit.assert_eq16(16'hDE2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #22 1a240577-9bd0-4c83-a84c-1b0735464549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 b1d0a8b1-df55-4964-b5fb-26d234151b30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 b8f330b1-9a50-4586-af68-1a72917946b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 17a98b70-f456-4010-b099-88fdacf3fad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 17a100bd-2854-4d1d-8059-3e82dde0c321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 17c272a6-8210-4a55-9876-36bb40596704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 d3f801d0-2b57-4027-9363-bc4e7d55de9a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5320;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA06B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h5320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #23 0a468b23-7d44-4aa9-bc0b-9b0c0e8548ab)");
unit.assert_eq16(16'hA06B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #23 ac1c164c-8b45-48ef-9491-2cf88a028790)");
unit.assert_eq16(16'h5320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #23 169125cb-1aa6-4cf2-8d18-593a69688502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 17cbb778-8597-4678-a031-585ea10e39c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 70f0edce-4a36-48a9-b812-e6e017d59dfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 37cb4d4e-816c-4a4a-ab20-b2800c74671a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 5cfe6ff5-564d-487a-b3b7-034d94788167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 347c04e4-b01e-47d0-9370-6800c7cf1d8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 c1e59db3-d3c4-4f5d-8237-ba0414535eb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD358;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF3AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'hD358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #24 a03a3489-b1a0-4faf-ab21-c62088b83b34)");
unit.assert_eq16(16'h1D93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #24 24ceab8d-b31a-44e5-a80d-6a0f8a7431be)");
unit.assert_eq16(16'hD358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #24 dccf4a67-d551-48f2-9f3e-d396e64931a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 4c2e5c8f-8652-4513-a4e6-3ca4d8df3538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 6b6febc9-0c58-439b-ba70-13987838e102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 0ddc46e8-8449-4e55-b611-c4572e162a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 7ed6d2ee-1cbb-48a5-bb4c-3ff4aab6e65f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 6fdc0f9a-dd60-4d61-b258-1d420064055f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 6e54d781-97bc-4154-80db-c023acf2f3d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEFB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3643;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h737C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'hEFB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #25 6ccdfbea-175c-4274-897b-158337e0af6f)");
unit.assert_eq16(16'h3643, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #25 6cb87f55-5b97-4828-a10f-5064cc1f604f)");
unit.assert_eq16(16'hEFB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #25 8b772014-1d3e-4de9-ae42-7edccec13c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 527816a9-76a7-449b-a55b-97e1859d80e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 dc1b472b-0543-47d2-99bb-28adc72fbb63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 84842f88-cb43-4f76-987e-f2a88e1fa4dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 dce41d53-da64-4abd-ab83-ca9f99217b10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 40eb5b0f-4aa1-47c1-abf0-1a94e218c21a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 1551a471-1782-4f54-a5db-48bd8628ca28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9045;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3FCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5124;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h9045, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #26 2fececd8-7e71-45ee-80e0-9f430698f35e)");
unit.assert_eq16(16'h3FCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #26 b1a9db2f-4c32-48b0-811a-6dad1db09442)");
unit.assert_eq16(16'h9045, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #26 dc70fb7d-efb0-4d9b-9da8-0a0d79c9987c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 d1e7e17b-4a67-44c0-85ad-53912daf5068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 a4b2e875-8254-4cd3-b42c-f436d68f0c7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 d582197e-918e-4ca6-b418-3732d8f4f257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 468922b7-4f43-4ccb-9b8b-8e9302c31c42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 12568eed-c949-460d-ba25-572f50ed556d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 98471408-c5b9-4cfd-b787-19fbc21e6a8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF538;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF277;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h038E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'hF538, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #27 fa09ddbe-a3f3-4cd5-8aba-086c816d99b8)");
unit.assert_eq16(16'hF277, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #27 c3d5b6c3-a5ad-4840-b8c5-d8b2c8f16a7b)");
unit.assert_eq16(16'hF538, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #27 c985516f-d762-44e9-871d-1e66ed67caa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 398eb872-b122-4f43-aec1-f0092a0aa8b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 018508cc-09fb-4de8-b06c-b6c279bc8616)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 ee670f08-93bc-463a-a8ed-40aadb73efa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 63531365-b415-4989-93b3-a47736f17be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 7ad246d2-ad28-4da6-ba02-542dd3ec55e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 e482fe63-a58d-4ed9-af38-231d5c3aee87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA861;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h364C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0200;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'hA861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #28 a9238638-1d4f-4244-9686-9e72944f9683)");
unit.assert_eq16(16'h364C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #28 fa459c40-0007-41af-aa50-29431565f417)");
unit.assert_eq16(16'hA861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #28 27d777c7-f07b-44d0-9ae9-7e6e101f9272)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 91579238-d4b7-461c-a19e-01e2793f05fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 8bb816ec-0a5a-4db7-9e31-7056c198e88a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 2b5b52bb-d60b-4b61-b03c-9eadd0e4b155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 8777b2b6-bb0e-4110-97e2-7452d31b90f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 f6eaec1b-95c3-41e6-8d0b-abfe0ffbf5a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 933241ee-1b3a-4a57-a25a-3289121c7cc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1997;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h1997, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #29 5e675566-7d13-4343-bded-6795f4ab1105)");
unit.assert_eq16(16'h48FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #29 104d222d-d69f-4108-9a64-9c0ffd13dc57)");
unit.assert_eq16(16'h1997, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #29 6dad36c9-5b13-4f18-9691-68eebf3db943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 16c4a1ae-4664-426b-b6b7-73f03122c385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 48a25b11-97be-4905-9d87-bc9cd5dddbf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 ff241ba4-024f-402b-9f5c-2f912385ccc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 06569ea7-a5a1-4ffb-98a8-a834fa4ca211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 e492a445-d063-46dc-92cd-87bd0c90a341)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 06c665b9-8e98-433f-ada9-ff862417d23c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1CF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7697;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFED3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'h1CF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #30 1bd17028-f6bd-4e15-8202-77ced9cb69f9)");
unit.assert_eq16(16'h7697, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #30 f362f58c-9701-493a-a0e3-d17ff81a57eb)");
unit.assert_eq16(16'h1CF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #30 a0af2ab9-d681-4f56-8c48-49d2c71a3b70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 9c101c88-70e4-491b-bfa4-aacceb431eb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 ac4edf78-91a9-42bb-869c-31eaf9b532b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 486bc66d-66c0-46f4-bc70-e401116fbd13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 e835842e-a2c8-411b-b617-ddfe871656c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 8b0cb084-3df7-47df-838f-7b3ba50f4c9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 58bdd704-54d8-4e74-8fc3-71dd4f038e08)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD6DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1055;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h75CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'hD6DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #31 628a9fba-c96f-481f-a451-70242de3f3d7)");
unit.assert_eq16(16'h1055, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #31 a18fbc69-c6b8-4609-b5ef-44de27489852)");
unit.assert_eq16(16'hD6DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #31 8271e104-a18c-416c-821b-4a90e1e54f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 6f2c5add-ac90-4dfa-929e-7a1a8b35e41c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 e396e71b-39fa-493b-bbf1-2fb43121d102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 ec0093fb-b372-4dbd-b74a-74c24d0071a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 eddbfd50-b8c1-40d8-a382-eb96f6ad273f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 7a20f652-68b5-42e1-8f23-37cc215794d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 1bd3bcb7-5df2-4bbb-823e-187a43657398)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6CF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7495;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5059;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'h6CF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #32 50b89ad9-b89f-4339-aa04-9bd0257b6435)");
unit.assert_eq16(16'h7495, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #32 54774895-8d17-4e6c-8ff9-929ad1527307)");
unit.assert_eq16(16'h6CF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #32 b098b107-8f55-40b7-8623-3523dbe65085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 f2d26937-2b94-408b-a089-01ca44c3a4ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 7bd6f886-8943-448e-a3b3-b034fcc7272c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 5cdecca1-dee3-4722-91c2-ec276bd87397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 04a79fea-446d-44f4-95ff-69957be8a864)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 84db7140-d874-4460-806a-e80631bfd4ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 76ab9d5f-230f-4b57-bf42-0fd9d52d33e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCCE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'h2D3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #33 2c8f9c02-ccbb-429e-bbcd-423cbdc0c1da)");
unit.assert_eq16(16'hD1AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #33 83ee0a8f-2220-4d38-a420-4427349365b8)");
unit.assert_eq16(16'h2D3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #33 8239c4aa-4438-4f76-8dcc-5c498bb1434c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 62af37f3-4b38-4823-9ebb-ef8c1511ea7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 b1f727ce-0756-4ce3-9be1-e9fb3d93cb9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 f75dd1e5-0382-4ab8-9060-7bdb01b37643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 76b0227e-37a6-4aaf-9bc6-974fb2505b46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 9f21776d-e62e-428c-b147-96bde6af0d6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 971ea7ba-cf93-4aa0-9157-d55b9d347548)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h20B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h33FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'h20B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #34 849d16ff-1683-4a89-8eae-6fa9a9bc9369)");
unit.assert_eq16(16'h2F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #34 8502326b-4f58-4d13-9cbd-65228b3c697d)");
unit.assert_eq16(16'h20B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #34 9cfddaf2-eef9-4671-9fb3-16f5278d557e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 5c437523-069f-4044-a2ad-b7200ed59a0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 a4b06b3c-68f0-4e67-9534-fd2846ee396b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 fa96b345-f51b-4628-b865-da3f53a08a67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 d61aa840-ffe6-476e-9a97-615585c6465b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 89bf91d1-b11c-4974-9243-8a95eaa01850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 9111991f-d9eb-4cd6-b432-ecfdef1d54ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD963;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h125A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h912B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'hD963, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #35 6dd4a9d6-ebab-468e-9143-899e4272c5f6)");
unit.assert_eq16(16'h125A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #35 a57c029d-1290-4134-a825-8883c7bb95e8)");
unit.assert_eq16(16'hD963, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #35 0d0b3131-af58-4269-a973-cab33b4a2fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 ce5d8763-ca74-4056-aff8-34c16c53a38d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 9d3c2113-43c9-4f80-b934-aacaba1537cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 3de40d26-0fda-4ebe-8fa0-45c424302662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 10718e14-62fb-440a-8b48-46e74ee0de2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 eb378536-8283-4a90-a11b-974aa057f5dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 0efea58a-99e9-457a-8d0e-526e3957deca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0741;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'h3C1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #36 7675bf64-e191-4a37-a1ae-b85855281510)");
unit.assert_eq16(16'h9A42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #36 7e061594-2a6f-4865-be55-c14e2a150421)");
unit.assert_eq16(16'h3C1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #36 4b4618c3-6207-4e22-8391-041fe4b9d6d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 1f35de63-da35-4e89-bb7e-1adf8d9c46ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 68efa42b-1462-414a-81a0-082baee16072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 4d098701-1a33-4294-b3c1-762b5c8c4161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 21e57cde-5e98-4253-aa18-f5458ef33778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 a2a7b08a-1d7f-4ab3-b2fb-06240bb7b578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 7cb9a5b2-1cf1-4342-8390-409eb1caa421)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC2D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'h9F84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #37 64b93c2a-89c1-4d3e-8878-f2a48cbea1cb)");
unit.assert_eq16(16'hF7EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #37 f6958077-6e56-4278-b3bf-21fb1a9905b6)");
unit.assert_eq16(16'h9F84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #37 4cac3e52-df48-47a6-b07a-ba4025ef7222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 b3850255-e24d-49ba-a697-85274c863f88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 1625550e-6ee7-4e8c-a92a-ecade2c9548e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 a8133cf7-03b0-42c1-829a-2c28a4e8370c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 d3305040-6bce-435c-b06a-2b6f30ae94c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 1b28cb45-e868-4314-96e0-bb599770cf69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 7685d21c-3921-495c-901e-946446868edb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA53B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD0BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'h44FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #38 c2d6f5b1-3076-4076-9cdf-f0be922485f1)");
unit.assert_eq16(16'hA53B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #38 98dfe856-1eec-4122-a7da-e768146cc2ef)");
unit.assert_eq16(16'h44FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #38 d0a031d0-415c-4028-a70c-e70d7428ea85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 e7f6d5ee-78ee-4d2a-99c3-2643ebfb5c08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 b863bc24-7555-424b-885b-c421117e207a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 3fd78ab7-4327-43c9-9793-158e2bc8b1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 de27ea00-5d78-4682-aeef-571fdb23e0ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 258ad4f5-1f17-4e5b-b0f6-2ce50906fbf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 9cdfbbbf-3a54-4b8b-8523-67ca7788ad35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h993E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h826B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'h993E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #39 a1a8b146-9e52-4821-88c2-37587059c130)");
unit.assert_eq16(16'h826B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #39 4407cedb-f18e-4f81-91d1-0cd34f760ae7)");
unit.assert_eq16(16'h993E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #39 ba1f1e3c-895e-4f58-8aaa-f264e5a81f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 20efd004-e0fd-4a95-899f-244a685741a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 f0fe9bce-9f20-489a-8dda-5bf577e077d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 96eb930b-2d5d-4aec-a3a5-de3bc0aedb14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 94db393a-0fe5-4ac4-8148-3cf45ea77317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 0e39a00b-0009-4a72-bf0f-86d620150c17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 cbd47688-d83c-46bc-9a1c-c0cf81c14531)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC2AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFDEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'hC2AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #40 0f3d4176-2680-4f63-a6b0-2f7b4874b331)");
unit.assert_eq16(16'hFCE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #40 471aa027-d050-4122-b5f6-2786793499e5)");
unit.assert_eq16(16'hC2AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #40 f8d6120c-46cf-4c16-9d95-2d6540306fef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 466698a9-64cb-4fe2-95bd-e56fdb60d0e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 7f842284-02bd-4125-a5ee-b97922f81d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 f61ec79a-7f64-4c17-af51-ecc53fa50573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 02286b00-6fea-4e35-8ad8-8ecdc749f435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 b958e2f4-c555-4c67-b1cf-ed46a7d8cc4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 ed443fb7-b6b7-4879-a625-9976b7e19056)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h442F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC773;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h442F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #41 855f0d35-b99d-495d-a82a-3a1cfe8546b2)");
unit.assert_eq16(16'hAC27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #41 46464181-8ef1-4b20-9ebf-76760d1d395d)");
unit.assert_eq16(16'h442F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #41 5b201a3d-bf39-405e-aa30-29f0e4a81142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 bf5cfce3-52d1-49af-83a3-e671ba9ae7b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 af153afd-5b2c-4991-848e-d656c775ce02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 9fae1395-3cf1-49c1-a8f3-2aefc9e7767f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 48b1f12a-d181-45e3-86b9-c81927c0c052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 3bdf32c3-fdf0-48ee-85af-29b0c430dd2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 6a84ca44-c6fc-4a1c-a2df-f77a6eaa4dfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC393;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0228;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'hC393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #42 cad8f317-a629-4bba-a279-f3ceb9ec8ca7)");
unit.assert_eq16(16'h0228, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #42 ad7b219b-32ab-4e56-b6ea-0d0446c4b848)");
unit.assert_eq16(16'hC393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #42 c4c58448-5c73-4b85-b629-a8824b21fff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 f6c81bc2-3233-423e-b3f9-2598503aaa07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 abb706bf-6b6d-4638-9b09-73ca00b35076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 351f04fd-c8b0-44c9-8cd2-4e321b445c85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 cc8ee4a2-ce01-43cd-8337-f19a2aaffe18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 1e8e26cb-8d44-4a7e-97d1-140d7b251d78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 46cbbc8e-371e-49b4-bd38-d02bbe3abc33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF1A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5B6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'h7C7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #43 589fa143-a810-43d8-b893-535022070205)");
unit.assert_eq16(16'hF1A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #43 de8ddf4d-c761-47b1-a8b6-19c6b08593ac)");
unit.assert_eq16(16'h7C7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #43 03372a27-85f7-4904-bcf5-047071928d2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 263680d6-add7-4bea-a149-bc33e6f1b002)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 983d6822-5950-4c92-93cf-9b400fbb6835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 24b374ce-0d9a-4c14-b618-67a85fcab751)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 7de36003-55ee-4604-851f-508063254d7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 38ae610a-e67a-4ffe-80f8-418e00ae9bc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 76a2f8e3-10e9-4881-94d9-f8829b2b28ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h27F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF007;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h27F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #44 c3983352-8b60-4d0a-a3de-5347abc15dd9)");
unit.assert_eq16(16'hEA22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #44 5ed2820f-720c-484e-9dd7-586dcdc42d3b)");
unit.assert_eq16(16'h27F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #44 3e6cedbb-b9d7-4897-9601-a6040d86b4a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 94050874-c38b-4893-9a16-739fae30c5a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 0f546bb2-8991-4eb2-8c86-ff8737cd0c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 ec4c0b86-c4a9-4c98-9df2-b94cef4087a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 08d984de-f5f9-4c4a-bf75-0733799c97aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 20e95df1-2d33-4e1e-bfd4-f580fc9729e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 b282ab9b-7b72-438d-8e4a-cd891a232bdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF2F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h0D5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #45 bd092ef5-c89c-4724-a7b1-05d002a2ba76)");
unit.assert_eq16(16'hDD77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #45 2acec486-8573-41e5-bbe1-aa8979d4ebec)");
unit.assert_eq16(16'h0D5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #45 77b9c8ae-8dee-4c8f-aa0e-5622153f6cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 796560b2-ae20-4458-b173-986b178e0e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 4d4f9f3d-b226-41d9-a824-c818887eff50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 510f2b6e-8167-4a12-999c-7c29c1115861)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 7e617b2e-e095-4963-b065-fafe1ee7f1d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 0b2a47bf-4fa4-46f9-85b3-9649076ab8c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 b560e2da-5947-4d12-86b4-fd1642ed3ae1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7147;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB6EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h7147, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #46 ca870027-3f3a-431f-b569-c71eebc16a2a)");
unit.assert_eq16(16'hB6EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #46 04f812f3-b7ee-4656-887a-82a3106aab58)");
unit.assert_eq16(16'h7147, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #46 b81e1237-e567-41c9-a451-0fd136dc2255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 7c451b03-56f5-4b0b-a46c-05b209555ee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 9acb05b5-f1ee-4b86-aef8-1f6e89809464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 9b3cd13b-4424-4d23-a951-49d37c654f41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 a4420b05-9624-4937-ab15-fb9d424d351c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 1282b0bf-03de-467d-85a9-9b044cd7a9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 8d686fc1-b3c3-4563-aada-e85bb4552ff0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6109;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2E7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'h6109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #47 ac4890ac-f49e-49e5-9e81-f32bfe7aa99e)");
unit.assert_eq16(16'h7B8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #47 189d74ad-eed4-4115-9015-bfe38281f189)");
unit.assert_eq16(16'h6109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #47 55ce5ce4-db66-470e-b3d9-9ebb120ca406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 3064f1de-2a37-4d86-9fa0-7da6a09d15ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 c7823d59-a236-4666-85ab-caa3650466c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 5c6d2136-ef5a-42eb-9192-e69e396df744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 ce60f6ad-0e87-485a-8dd8-f46fae128bb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 a4166e5a-2e5e-48d5-a8ce-6360fda5e42c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 ac320551-2a4a-4ecc-9dc2-bb94c2d9499d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB6F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC139;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBEC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'hB6F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #48 79b936b9-9aff-4fe0-94a3-691f9af45144)");
unit.assert_eq16(16'hC139, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #48 303e160b-d98f-4f2d-ae31-ab4947968b70)");
unit.assert_eq16(16'hB6F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #48 81fcae8f-8af5-4fc8-8bd7-261a023f7dd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 56c8b6c3-30e7-4763-b2f8-d500ae9844d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 5d59c354-ad1a-42d7-882a-1760ecbdc16f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 9ee3db90-63eb-4b28-b638-3ea59109e1b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 23e630fc-7fab-4aab-ba08-a699276b67ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 704bea66-7450-486c-8a6b-39ba04aa6ad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 fa159aaf-820a-4cab-93e3-2b9867ddc7d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9AB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE041;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'hE1A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #49 66d1166d-a859-4243-88a0-269308e2824d)");
unit.assert_eq16(16'h9AB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #49 42d44e0c-d109-4e13-8294-1782be07a016)");
unit.assert_eq16(16'hE1A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #49 990a7a23-79f0-4903-a8ae-bbf3d2bde865)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 3c71d962-bafa-4bf6-945f-9d97e1c26989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 7dc623e0-949b-4fc7-a2e4-f9246145316e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 d9bdc1dc-776f-41a5-808a-61510721da7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 cd12b09d-b345-44d3-b42a-f0eb14bceb2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 2f0df3d6-461c-48d1-b06f-4298cb716521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 f31541b2-86a9-4370-8336-ade472733cab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5435;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h315D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h5435, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #50 3f53924e-23cd-43d3-b348-3ae87639878b)");
unit.assert_eq16(16'h78AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #50 d6c291b1-fd3a-489f-becf-ae9615676057)");
unit.assert_eq16(16'h5435, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #50 6b918b17-25e7-4428-a0dd-bd1174c52244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 5d2d52e3-fb1f-454c-a96a-8f03439d84c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 c5a99f57-474b-4322-beb1-e9cdce576501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 672c4f91-91e6-41bb-8f9c-78122386aa59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 a49ca6b9-cdde-4887-a466-3453df304803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 b9914179-ce4a-4b9d-a47b-d76bef728c19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 91c5f5a6-5da0-421f-9d16-9ff0ab6250c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC059;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEC24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #51 5ffd7495-21bc-45b5-aa6e-2013905a5e7e)");
unit.assert_eq16(16'h08E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #51 2b948ebc-8080-4ae4-9ce0-5028de544000)");
unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #51 75567ec5-1369-453f-b8d8-022c9b1edeb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 33189a3e-4a9e-45df-b63f-a127ffd6d2c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 cd93a3e2-c786-4a15-b5b6-e27e9908f810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 5d2b2908-ed6f-4117-805f-859eb9651fe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 27c539db-9821-49ee-8e53-8783c25168c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 1bd6ba9a-1e44-4215-95b4-7dd164aa4fbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 246ab507-29e4-46b1-bb18-4482e016815d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'h78C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #52 5ac71db3-1331-4f5a-abba-c697dc4a41d5)");
unit.assert_eq16(16'h0A2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #52 5d102771-e6d3-46a3-945d-f2eb280b4894)");
unit.assert_eq16(16'h78C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #52 6c8ee81f-6ec1-439b-af2f-bfc23325ddb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 0cf8b39c-9126-49ef-812c-4d1e527cbe4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 f3b7444c-cca1-412a-945b-6429b5bdb32c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 0abb1d03-fb9d-4931-a5f6-3b80c9f59ed9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 dd134831-0e04-4472-9f90-2c5dd260ad7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 1bf91bf2-2996-4301-9758-78855eb69ec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 35bcd349-37ac-476a-ba49-499dca02472a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h77F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD726;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hACF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'h77F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #53 9801ca9d-3ada-4855-a126-88e18aace7d3)");
unit.assert_eq16(16'hD726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #53 610be7e7-83d0-4fca-9e74-246931efaa95)");
unit.assert_eq16(16'h77F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #53 918446a8-9b63-4204-90a7-a503b6452649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 9d4c5acd-b447-4f9d-964c-669d7b4db49b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 386a23ff-6fd4-4a39-ad50-12e208c98014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 4cb38eb7-8855-4402-a9fe-415d57a41f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 4269745e-8a8d-40fb-84e5-1c683bd0c14a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 76ce9cf1-d3fd-4870-95fb-277a74cb00ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 128479e2-49d1-4d16-8502-21421a9a26ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h629A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h12C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h629A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #54 ab23c2af-08a5-444e-9cb2-9d9dde08ffe6)");
unit.assert_eq16(16'h89E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #54 137f4f41-f661-4fd2-ba17-73d8b2b1d409)");
unit.assert_eq16(16'h629A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #54 8533cbe9-dd36-4261-8d0e-7bbd8c935b03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 f93707c8-53a9-443d-986b-155f4efb2a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 91f47445-670c-40b9-97d0-ef634462eb0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 8ad211d1-26b1-4a47-8967-2fe1504c78a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 610f2123-7045-43c1-ad4a-f075d566d7cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 33b6e53d-b0a8-4f4e-8b8f-d4904fd15865)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 e8fae643-97d8-4aed-8843-512dfe497fa2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD644;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE81E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'hD644, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #55 ee7d20a8-66b6-4ed5-8928-ef969ee0602a)");
unit.assert_eq16(16'h6D19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #55 5ad7f53f-fa35-492c-8d10-92cebc5046bc)");
unit.assert_eq16(16'hD644, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #55 5888ec92-849a-4659-977e-02186548de3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 4901eca7-7740-48b4-ad93-783f3ec3000c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 a307c639-1b73-4570-bd73-b94b9a20a19a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 ff7595df-badc-4ffd-b548-b30c029ea42a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 d821491b-ce91-470a-93c7-be300651172c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 e4377702-9444-46ba-bf58-fa459cda5bb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 f8419697-fae1-461f-91ab-e0ffc8ecb645)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6227;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA08B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'h6227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #56 26c20e82-5258-49aa-a0e5-e64fb8df2a54)");
unit.assert_eq16(16'hA08B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #56 f0586e6b-1d4a-4363-aaa7-2e2d79d71960)");
unit.assert_eq16(16'h6227, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #56 ea6c8781-b7a9-4c07-9bf7-41d23ab78151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 000401bb-ac5b-4fba-a5f7-7a763147b948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 15fdce60-6692-4dc5-9f7e-f9f533ad901f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 a7a27b9d-a36d-4933-b500-de0371a7688f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 9841f344-abf7-4a7c-9c18-5140015ad626)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 32f1f039-1256-443a-841e-2f1a864ee5dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 500f2113-b237-4fe6-8ffc-4a61ba2e6a17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB025;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h706E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'hB025, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #57 8cc2ac47-69fb-4a6b-b774-2a317dfaa56b)");
unit.assert_eq16(16'hFF22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #57 59cbf900-ea46-457a-86e2-4b34a21cd349)");
unit.assert_eq16(16'hB025, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #57 c941d2a3-ea63-41bc-9ef4-d31abde668e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 0aedd804-45df-4701-9eb7-3b02a265fc79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 788e2771-d0aa-475a-808c-9f8ad41891a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 c51879f4-4cd5-4b6b-8bd2-0d5c372de6fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 d3983b6c-b7e0-44e7-9956-ca71d0629db7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 efc40fa1-8acf-4d0a-ade5-25c8d59aab35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 6e061c0a-d16e-4580-8043-10cdfd28b337)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDBEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'hE1D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #58 461b9a08-a0a4-499b-a3db-b40fc6699b42)");
unit.assert_eq16(16'h66D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #58 552f711b-8fcf-49a1-a976-19b7ac32b6d3)");
unit.assert_eq16(16'hE1D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #58 4e6d4e40-9576-4792-8ded-485a4b7192a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 5c415500-3782-4074-a521-f2c578fb4c01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 65cbfee2-9121-4a08-9679-0fed0ba9584d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 d5c8b0cc-c352-4ac9-aa53-b7c3ed666a7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 51d246bb-6406-41ef-bd29-aeaf8ccc3a71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 6e45ea3f-ee40-4f0e-9982-1d23f88d2e6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 3a187e81-3830-416b-8cb0-78c51650f142)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'hAB6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #59 7703b7af-0ec6-4e65-8442-3fb782f0ce6a)");
unit.assert_eq16(16'hBD29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #59 169d66ac-fbab-44c8-8e5c-81d87b375ae4)");
unit.assert_eq16(16'hAB6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #59 a239536c-12f1-4d8e-a906-9adc2a30f81a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 3a482b60-ba8f-466f-8c81-5cb141499809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 b8f57f9c-68a9-43fe-bd6c-093953b049c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 1449d2b4-bd3f-4bef-a859-fabfba87b7d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 4bf5ee14-bf4b-4d88-a6ae-514907cbacc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 289e8c5d-87b9-4870-a65c-9fff7adfbb06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 f16fc875-107d-4209-8c9c-afe56756c97c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8682;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h75EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #60 18450fb3-7697-44cc-ad37-b2ccbd14a9bb)");
unit.assert_eq16(16'h0E59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #60 4470b792-7a68-4f12-9eb0-4386f4940f28)");
unit.assert_eq16(16'h75EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #60 f891784e-8276-4bd6-bf82-1c5754495ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 e92948c3-0893-409d-8e32-07deffd348cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 3db45b6f-a76c-4570-b270-350ae783aeb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 7f92ee60-84ec-423a-a435-3be52a6b0e4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 a9286abd-6e3f-45b0-a625-d777c3484b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 6c1a920d-125a-456c-9745-14b72247200f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 585c81ee-9858-4251-bf2f-26a2cf6b7ea4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2383;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h097D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'h2383, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #61 85993ef7-e696-48a6-a5fb-adedc34a156c)");
unit.assert_eq16(16'h097D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #61 10ac899c-4fca-484d-94e4-9d61e3c7df04)");
unit.assert_eq16(16'h2383, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #61 ff739d30-d2cf-427b-93fc-af13a27ac812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 eae9f5dc-0855-4bdf-9f89-da9b6a955610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 8d7cc371-d554-49c5-accd-a4ad15cca8e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 3470b609-c80e-445e-9216-c3e7513cdd15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 ce1deaf6-ea8c-4ccc-b736-bfc1a8ef7ef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 82974dbd-2e93-40d6-9b64-8c26c9415a5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 c09303e5-9bed-440b-be26-bdb3f4227d8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3923;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h434A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h3923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #62 c63bc83a-32b8-40bb-9a09-0ca53927854a)");
unit.assert_eq16(16'h434A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #62 73b74885-2180-419d-96e5-6620a86975b3)");
unit.assert_eq16(16'h3923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #62 6482bb36-a9b3-4bee-b841-725ddebe7b8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 e4f5a10c-e36b-4ada-8d9d-3835e5d67abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 a9110fa0-3341-4f8a-9485-d2d0897cc05c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 072ae6a6-2b5b-497c-ba8f-6245b82e9e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 8520884e-3c3e-46a9-b696-f3ee48fb321a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 15e1b0d1-27e6-4adb-b3cc-09faf4c7c45b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 1bb8ce18-ec67-48db-84e6-16b9a25fc1a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5542;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h892A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'h11B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #63 6cbc791d-830c-4f18-a0bd-0d7488fb3c5c)");
unit.assert_eq16(16'h5542, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #63 5a09a538-8f30-499a-854b-14151f8c76fd)");
unit.assert_eq16(16'h11B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #63 a7ac9cf0-539d-4ab0-b887-14ce2850bb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 c34600a8-fd2d-403d-b0c7-15727961ae3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 08787011-d43c-4167-acd0-23c9cca0886f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 23282b91-d03c-4583-a3b5-91444730077d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 29d260db-cbfe-4efc-8783-794a8cc1b2e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 bd45cd05-03e5-4a4d-8f02-f0b95b6f1954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 7fa7d543-8f6c-430c-a352-3889b762d796)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF12A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB887;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDBE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'hF12A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #64 a94f015d-a3fe-4813-b4ce-4767a9b734df)");
unit.assert_eq16(16'hB887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #64 247b7a26-076c-4aa6-94d3-5d3e1e5c0e78)");
unit.assert_eq16(16'hF12A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #64 53296182-bf0f-4dfa-a2c6-8237822ea9a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 b46453fc-7530-449c-b789-651adacd743a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 82902c66-ae5c-416a-a6af-7ca70c979131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 4c899e1e-0cf3-475a-abcc-58d84e1d62df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 b85d96a6-ae4d-416d-807a-e12822f76fc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 d26f60a4-b6a6-4cab-ba10-eb0630398f78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 991b1998-ea2c-456a-bbc9-750b44000c06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5BD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h191D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'h3F28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #65 ccfc726f-6207-4bed-9409-6a38a5d4a006)");
unit.assert_eq16(16'h5BD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #65 714f5367-d525-4f0c-b905-00eac5423ddf)");
unit.assert_eq16(16'h3F28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #65 b7d6256d-dc97-4570-ad44-c2f7697dcbda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 60ab1cf6-0782-41e0-99f8-077f15af91c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 b16a9289-6e2f-47d8-b9fc-8c7a9e061ed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 8067d96d-6f25-425c-9e0f-2504e9ee0842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 cc4264f9-f9dd-4033-acc9-8cdec14bca16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 f003d8ea-5a38-47d4-83b0-cc83086d7b1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 bb6421a8-b623-46ee-85fd-96651999e062)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC641;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9488;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'hC641, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #66 cecb5528-8ba3-4c0d-9026-35b4e1bedd17)");
unit.assert_eq16(16'h9488, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #66 f230f746-741e-49b8-bed6-0b6a03f041bb)");
unit.assert_eq16(16'hC641, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #66 eb20f14c-c653-47b5-a408-9330d8e851b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 88ff044e-e296-43af-8eac-07a7f2779c9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 a3d06f5e-a0ad-46b8-979e-024eac400811)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 24f6b1cd-c7eb-431b-8bcf-8eb6b0988505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 790d76d4-65bf-4f69-a12c-ed5685560b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 8f3b8861-fffd-43c5-9b88-6f0ca33fd6cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 90c70f41-7cee-4216-ab0a-d521907f1a62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5068;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6CC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'hC6C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #67 e2056946-3f86-4d7e-a04e-3a7c3bb51696)");
unit.assert_eq16(16'h5068, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #67 eae927fb-5da1-4df1-874f-fb2fe568a38e)");
unit.assert_eq16(16'hC6C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #67 a296297b-98f3-4232-b8a0-5f49ced965d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 2ce61406-a3b1-44b5-80e9-024537dd920b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 ff41978a-32e2-43e0-82de-bddb794758ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 65a8a080-dcf2-49e4-82b4-dd2856063297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 7b37df7d-411c-45c3-8591-fcf00da089ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 dd00695b-73a0-4c80-acca-389f329a63cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 c16be459-b101-46e7-9536-9dbc53916460)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAACA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hADB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB056;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'hAACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #68 8dbabc6e-f143-48ac-a162-e9f62b57fbc7)");
unit.assert_eq16(16'hADB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #68 41b26411-8953-4667-9897-cb4a45b26910)");
unit.assert_eq16(16'hAACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #68 61156f01-9b8b-4df4-9cda-4f3e03484e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 4a3a0398-bf72-4d5e-a911-f10594b7e567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 0decb5b0-a5b8-43b1-bb7b-cf237be75bca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 98268fc5-1083-4614-8434-917473135041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 75a4d071-e6c6-4888-b3be-cade6a05c97c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 1fd3ef90-d943-44a8-baa9-e8497187e655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 4ab4f5c3-48a2-4897-a33c-ee4c3209d773)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h99F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #69 aaea9bed-3bfd-4570-a126-c851977e8503)");
unit.assert_eq16(16'h54ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #69 29d3eff4-7a84-4846-ada6-001495d19836)");
unit.assert_eq16(16'h99F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #69 83ee7411-3e59-471f-8cac-62945f33429a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 79804ded-c5f0-4f8f-8351-149815205611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 4e8f6ccd-e72d-4f93-bb72-f58b66c1e0a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 d5f065c2-b8fc-46ad-926e-6bb3f1b92c0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 00b2c300-d797-493e-a701-8b5ff7bba08c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 ebfc3b1a-a9d0-4b92-b458-c3daa20e0f27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 a101a230-55ea-46e9-82c9-c254a79635ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF105;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h93A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA09B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'hF105, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #70 d1b1fe0a-b7ce-4fd0-bc08-90d95dc05faa)");
unit.assert_eq16(16'h93A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #70 13bc523c-3203-444d-bc3e-46c6538156ae)");
unit.assert_eq16(16'hF105, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #70 f9327d5b-7031-4163-990a-151499a8e745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 0e6fa4d6-d579-42b4-80bb-e50b65a3cd02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 73d79631-30af-4ebf-aa7e-111764e1ad37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 c0d125c7-7d4d-4787-a213-30083240b242)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 f0a02ea0-2408-4092-953b-0889d9c89109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 e28a476e-2aa2-44de-9313-62ed5e94c94f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 0c55fbee-ef7d-4307-bc52-8001a8d64452)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE32C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8750;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDB9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'hE32C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #71 8c590083-4d99-43fc-890b-3fbbf2f07d48)");
unit.assert_eq16(16'h8750, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #71 040dfdf7-73eb-4318-bcbe-497da76f29f3)");
unit.assert_eq16(16'hE32C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #71 a7694666-f48a-4919-ae03-1ca4bc54aef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 1c3f9e18-f3fc-4639-9f25-b44c66b0ac51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 479e9253-7b28-44fb-8ce7-a76be81ea0b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 68584e96-2b4b-4d97-a845-e70f777b6ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 1823a881-1f3b-4842-9c4d-39698aa422df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 5ba26bf8-d701-400d-a8cc-c77620124fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 780fe26a-d205-4de5-ac48-0f356a1c83a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7A4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'h7A4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #72 fe88d9c9-0fe4-4e3f-b7bd-81dffb26b9fa)");
unit.assert_eq16(16'h10CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #72 5b325246-f219-44fd-8733-d58ee813bcad)");
unit.assert_eq16(16'h7A4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #72 91e32d5f-0527-4a3a-95c7-aae52a083df5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 b1264a06-2578-4fa4-a825-1863a32ac5f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 90ad4738-2607-42b0-8c93-22e1bf40e32d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 78e2d54b-27bb-4859-9d98-c046ef9cd741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 8ab1c5d9-651a-4eef-9c43-41d642dc6375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 0a2a900d-5c78-4342-8bc9-f69fb584006c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 7aa70473-cf68-457d-81a2-4a1c984f2943)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5CFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE324;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h5CFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #73 1d5e292a-0d62-4530-945d-d6a47415bc62)");
unit.assert_eq16(16'h68A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #73 6dc85fd3-65fa-4b2d-b921-11a58fa107a8)");
unit.assert_eq16(16'h5CFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #73 06c620be-1283-4ee1-bd55-64e7bbf4c921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 8f9e632e-6465-462e-b074-75191463bf0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 162a0968-341f-4b5a-8bc7-67bf58e7293b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 bd10a574-f10b-4ada-acab-1fb2ccc5e36c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 4387dc7d-59b2-4dc3-9dc5-711e6c6ed70a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 cdc054b2-90ee-412e-8582-e533775de151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 e84eb29f-f158-47d8-b9eb-9f97c57ffb45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA6D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1764;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0398;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'hA6D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #74 9ff2d9c3-bc1b-4b5b-89d7-dde4d5b8fa2d)");
unit.assert_eq16(16'h1764, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #74 173b95bd-6bc6-4c49-86e3-51d954f58d0f)");
unit.assert_eq16(16'hA6D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #74 4662acd2-f70f-4500-9ab2-50f28194093a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 cdac6768-070d-4649-9d12-50f6e43ff3ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 94bbebfa-956a-42e5-b066-bb8ca3504b20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 4f5157a4-8ce0-4f9f-a12c-16a4a4af1909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 5b8ad936-a29f-4da8-ba05-3e9cba7adef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 73e19d36-5ff4-4857-be12-872f9c8f3365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 592fcc26-f0ec-4f49-9fcd-43413fbefcd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9275;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h9275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #75 6bb23c50-8e20-484d-a205-599504d2ff17)");
unit.assert_eq16(16'h2375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #75 09521a85-7951-42c9-a1de-45397a1a44d0)");
unit.assert_eq16(16'h9275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #75 52e71cd9-0267-469c-a27a-0a84baf4bb69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 86fd5b74-1dc5-4651-880c-b748e601aab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 d35fc02c-534b-4a98-9cad-6e8f66041b7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 d95edd40-cbd6-471c-a6f9-fa30b5a528a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 35e35381-dca7-4d84-a754-d757469d7fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 f55c5eef-6547-4f4e-b104-63bec9811e22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 53e97706-23c3-470a-b78e-1f0bb2be5a46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4270;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6140;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'h4270, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #76 a10d2958-a8ad-4c0f-b4d5-a08090c0f210)");
unit.assert_eq16(16'h6140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #76 de5a7071-d70e-4a01-a65b-336780489fa3)");
unit.assert_eq16(16'h4270, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #76 eee3f74e-5541-40dd-8f4b-cb2bc64216da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 9781eabb-7370-49b9-bcbd-e5f9d720d3f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 6aa081f1-28b1-468b-a7cc-9c2ac67c0e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 920a67dd-123a-4b46-9092-f4ec21ffefa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 be963ee5-0c1a-4533-93c4-37765284c575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 8acba6aa-282b-49b7-bfc5-5d12e4e7009e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 ee11a038-21d4-4f0c-99fd-ff9da83e760f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8EA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h22E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h7EE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #77 b1efc200-4970-4685-974a-052a035ace23)");
unit.assert_eq16(16'h8EA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #77 cabcb9d2-658a-4230-b9f4-8362caf97530)");
unit.assert_eq16(16'h7EE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #77 0549f12c-630b-45c1-aefe-70a67ee4c03c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 6f434fdf-29a6-402d-bba5-d6842c485689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 86948e38-07af-4b12-8dc5-3eeff1b27cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 ce5f2c69-de9c-47c8-a4bd-b40ca6364fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 8bd3468f-cfad-4c87-9f05-0829d503e144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 dd6e590e-03a9-4d62-99fa-43e585d6deea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 616acb0d-6c85-4302-aff5-5091a99c40fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h96F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7044;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'h6D7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #78 6b9043be-f39b-44ec-9f90-e2baa82eeaa2)");
unit.assert_eq16(16'h96F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #78 6b7b5ac3-dcf4-447e-bb37-ef706c6ec5b3)");
unit.assert_eq16(16'h6D7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #78 785f806e-c8c3-4fd1-8a1f-546251b0e03f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 6e8efdcb-cd90-4982-8b75-47275271f7ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 8dfaedb8-98e0-4103-a346-65ae1eb2ecca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 01cf028f-aae8-4610-b5ed-bbf00b5f313f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 d5b15752-dc7b-44d8-ae0d-7f87f5898d3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 76dba64e-d715-4789-8c80-9b0309ae09ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 5b59a6e4-ad89-41fe-81f5-4233b6dd6cee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFED8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'h2EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #79 60606250-5248-4d78-875a-c6820dc669e0)");
unit.assert_eq16(16'hFED8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #79 3f859783-517e-4dbf-8811-51fe879e8286)");
unit.assert_eq16(16'h2EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #79 786a28bf-11ee-4e05-a0b6-2c99b22b06aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 b0df2306-bf93-4c39-97a1-72050e54f20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 f42f0c12-596b-4a4c-bbf6-08ba5344287d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 0154d923-87a5-4416-bb3d-1c9941e2afa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 b6603b9c-2213-4095-b586-97f16bcc5be9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 b8f0991d-5534-480c-8133-71ab973061bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 a6209b4a-0b00-471e-876d-ec2d7d6c88da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'h8C88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #80 f8f091bf-a3d7-4b58-a95a-16ede38eb0c3)");
unit.assert_eq16(16'h64A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #80 3884b951-7644-495a-a209-56efce2a3a4a)");
unit.assert_eq16(16'h8C88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #80 f0241f14-99be-45c4-9ff0-c854761e5f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 ab418174-8dc6-40a2-b1e5-ed506dca6225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 781db7d0-6fb9-453e-8cb8-a96f826fff36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 0d72f90d-be1b-4d21-9f46-74b4f7d82f2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 e4f93e1b-66d3-46b7-ab77-08639b37766b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 75736298-7587-4708-9d5d-2981a0bb64e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 3cfaa191-0075-44a1-84f6-7c889006f596)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h19D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'hD5F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #81 0c3dbfc8-7fcd-4e30-830a-1ca7ba197ada)");
unit.assert_eq16(16'hAB39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #81 2bb5bca2-43a7-40f8-9f32-0805dba01f75)");
unit.assert_eq16(16'hD5F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #81 d8c2a038-3d1c-43ca-a8ac-e5bbf1f8dd39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 cc697290-158d-4720-a11b-4a527784ebcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 0002c71d-863a-4ad8-b4d2-d456bc56084c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 6668b0c0-1bc0-48ca-add7-160980fa8849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 41bffc86-8a62-489f-9ef2-938606fee13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 85015b4f-8940-4803-9181-1f6fb7c4a2dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 c83a4b3c-4525-45f4-9dd3-19094f36a895)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF69F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8836;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h71B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'hF69F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #82 78bedc5f-7c55-4684-ab97-b49b586e779f)");
unit.assert_eq16(16'h8836, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #82 abfad941-90a4-41a5-bf7d-8f049beb25c6)");
unit.assert_eq16(16'hF69F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #82 d7533af7-5b66-49af-9429-5c78f9e2dd56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 85008cc3-b893-4243-977f-414d45220bcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 72d0235f-3cc4-4638-ac52-1a405cb7bc8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 3277df83-440a-4b23-bf0a-25e3f4a2fca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 0454f05f-9d57-4ddf-be86-68874464d6ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 cc540cb1-e98b-451f-a9ae-7794ec9701c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 766af38d-bf4d-41fb-b86a-fc441af3eb3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h65DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE4E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h10B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'h65DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #83 fcffe21a-0f07-4e19-8702-6f1f9834aab5)");
unit.assert_eq16(16'hE4E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #83 85a4a68f-add8-447e-aa2f-85c408bec16e)");
unit.assert_eq16(16'h65DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #83 07136f26-35f2-4ad6-8e50-0606c637c81f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 7fa436aa-ff0d-42d7-af61-7002c4cc84ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 03b77fb0-045b-41ff-8401-6d5f385ae36a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 7507f3f8-096b-489d-bc72-14168020ff39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 81d357ec-cd98-4ea7-89bb-fa1e23bbdc04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 2b15d361-8272-4c99-a503-c93c0a64eb33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 bc6ac038-c165-4bf6-b39a-d1dd64c6b4ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA250;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9ECD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'hA250, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #84 461b8147-be6e-464f-b4fb-a0dc647e4cf4)");
unit.assert_eq16(16'h09C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #84 5ca690cb-02ad-4056-8e92-fe9dacf85284)");
unit.assert_eq16(16'hA250, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #84 1ecdddc9-0442-4183-aab8-27bc15ec5d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 4bafef0d-79e1-4479-a74c-66aabcc32338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 7ff0bee3-abe0-48e1-9d1f-71a942629f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 06a68a0f-6661-451b-9ab7-43d8bd5f45e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 f792817c-981e-4661-8fee-3a064ac98c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 28545862-5d35-4b82-b335-31e3f61ba5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 38027349-9728-404b-8f8d-d00084a8756e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h523A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h47E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEFF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'h523A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #85 8bec75a8-9a90-4069-9327-36f9868e985e)");
unit.assert_eq16(16'h47E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #85 68301b03-ae21-4dbd-85a3-91e83caf95f5)");
unit.assert_eq16(16'h523A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #85 b5894c48-fb79-4419-b068-8122998c822c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 f299449b-7cd1-4e2e-904e-5c0b877f2146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 06c5442a-c5c1-418e-a092-ea5e4d000f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 a879a41b-1593-4c12-9744-d1cff750e1dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 49f09d69-b4fe-4eca-9049-be2c50822cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 24484893-9a63-447b-adff-2aa2e0bb08b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 a8674de8-ab8a-4803-a714-5949c95ec69b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'hDDA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #86 4cf4c5b0-406e-444a-bbbb-72dfea1c57da)");
unit.assert_eq16(16'h8C14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #86 43843720-e889-4a30-9a41-153ef5fbb795)");
unit.assert_eq16(16'hDDA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #86 0972ce48-36d1-4bb9-8c88-07924d21f69b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 26a23458-2453-4b8b-b12a-5a113dcdc571)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 3c2bb50e-8e10-485a-aa80-8b79bc267f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 17058e2a-4cd3-408e-8588-d371873e51c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 ed26015a-de36-4902-9721-361b1807476d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 36e4c107-8d49-4e13-bc14-a149c52c1d93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 136aee76-cdd7-4c52-bd13-99ee7edf347d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF062;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'h0FDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #87 85c705c9-059b-4879-b240-a87f3682eaca)");
unit.assert_eq16(16'h01AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #87 acf74403-b7ac-4c12-b10b-61f02a7d9064)");
unit.assert_eq16(16'h0FDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #87 fb7788e4-3659-468c-9578-0d230030b3cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 6bff42a3-0c09-4f60-b7ef-378574ad5b47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 fa14e799-de00-4f30-baa1-efa72bac19bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 9e3adb63-6d97-4911-ab0c-03f64d4f0458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 6cd423db-61d9-4819-bca3-e3b90ed12fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 b7368c5b-b4a2-40cb-bdee-673bbc7e8472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 dc8a6f72-3945-4b79-ac18-6d1d6ea19eec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7311;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE889;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3A6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h7311, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #88 f80f76f2-af9c-4504-a10e-4e7257d9e92f)");
unit.assert_eq16(16'hE889, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #88 8554c364-6a3e-438f-b26c-f5a6d8c5e753)");
unit.assert_eq16(16'h7311, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #88 3d13af03-288c-413e-9873-168842cc5fdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 e57b1b92-7afe-4fc0-8a3e-fca3f9bb6b9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 e766e3d1-40bd-41b4-b8bb-57b966ae5f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 bfb949fe-4691-48e0-b0cb-455b41d223c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 c9058aeb-5c7f-4f4a-a098-c802831d26e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 8de0512c-63c8-48f4-8878-98d0ed4cbe36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 c74a86e1-19d7-459b-9014-68b608cf696f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC9C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7266;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'hC9C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #89 0d3c231e-77dd-4f2d-8af2-4aa4163f0631)");
unit.assert_eq16(16'h90A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #89 93ac4374-719a-4aec-9cd5-c5c20a920504)");
unit.assert_eq16(16'hC9C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #89 6ce173f7-3c14-4ad1-87fe-ddaae7771725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 1394b92f-6dea-4bf7-b2cf-ff5c166e081b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 a8e16b18-4468-46c9-a535-466d427de8b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 b7aea132-541d-4555-85fb-2b34c248b98b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 3154e5c8-e981-4f12-a737-7e77d988dbe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 021b7b42-6382-4825-b94b-d90527733b14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 3298f4cd-8304-406b-9b2e-0a7b0324d880)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF207;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'hCB2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #90 addaa3a1-7025-420b-8098-9947fe12aa26)");
unit.assert_eq16(16'h6B8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #90 814ec4ee-746b-400a-be9b-bf30e7320b22)");
unit.assert_eq16(16'hCB2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #90 2c3cb385-10eb-4a01-b60f-97889261a115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 f570d8f1-ee6d-4586-988f-cdac48e2c8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 18e984a9-ce9f-4268-af48-e94b5c9f11d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 3857a8c3-d864-4693-896b-5876eb947f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 ce18a8d6-e739-43bf-9640-f27e8b307d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 bad92dc9-aa97-4b20-8593-00fe874e2885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 abda2bab-6c6e-443b-9883-ec5993eb3212)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2FCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8A9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h70CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h2FCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #91 15e4bec7-17b7-4e26-893b-015614daac09)");
unit.assert_eq16(16'h8A9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #91 fc52bc1d-01fc-4a69-b650-a43f8c969009)");
unit.assert_eq16(16'h2FCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #91 4039be5f-833e-42a1-aa76-db0bf0261e06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 a33aae42-d0d5-4ae5-b945-99f25be17119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 3b083a0b-118e-405a-96d8-0b01c6403280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 607b22c0-b9f1-4685-bcdd-f430a443faec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 c7718dda-0051-4942-b802-5e7a178f3a5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 6044b13d-572d-4b1c-8916-454f390dada3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 f4a3ca50-8071-4702-bc93-c14a1ef0c7c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7130;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'h44EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #92 a396940c-5774-4cff-8b72-45ffec2adcd0)");
unit.assert_eq16(16'h7130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #92 da2d245c-971e-4a0f-a5a2-20cffafedfc7)");
unit.assert_eq16(16'h44EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #92 78a82b8c-4c41-4ba7-a22a-30c9da30299e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 58da5bc3-441f-4113-b73c-eb15deee2b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 ee5c7057-7dd8-4d1d-a066-ab12252ec249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 e1b58915-3acf-4cf0-9c29-cbf8016ca7cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 0b8d63e9-337e-49d4-b3a9-21ee08920ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 227ea18a-88f5-4735-b6ed-a756edd39777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 af0bc433-036d-47ec-9d98-011bf80b827a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6ADB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h997E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'h6ADB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #93 aba8c1cf-867b-4e95-a088-f46937306965)");
unit.assert_eq16(16'h8C2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #93 6cc611e7-1a37-4226-be53-0cee35d18ca2)");
unit.assert_eq16(16'h6ADB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #93 740d848a-5240-4bbe-86ec-5530721cf895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 1081051e-ca00-4e1b-9319-8e795f8c5304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 71f6dbca-f1be-4644-a206-09f792b9a1b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 028248f2-a633-4dd7-851f-77728086e02a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 55a6d60b-8b22-478e-ab83-664be345dc47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 6978108f-6daa-46c3-8752-fa8b3ff09218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 4df0065a-5fae-4038-b2ef-2b8f25b3ec86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h009B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h76BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #94 773b0e34-4796-4e30-a1d8-c81ccc31584b)");
unit.assert_eq16(16'h009B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #94 15be9aca-59aa-4fa8-b61c-4cb8e660bd38)");
unit.assert_eq16(16'h76BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #94 b5a33387-5ca8-40c1-8764-30e07248ac05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 93d9ffda-370f-4694-b77d-a19f8dbc73f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 818c1c9d-3c6b-4574-acfd-aa5d4532e7e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 3066d40a-9cb2-463b-972f-3df43bfb7346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 b72b64df-f977-4067-aa79-10e2fd224f96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 797e7caa-dd7f-4d5f-bf12-bd9187de697e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 3746cc7c-dab3-4ffe-9600-b1d2bd33b3c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0655;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF937;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBFD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'h0655, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #95 b684091d-61cf-4d31-af1e-354cfb78a5fa)");
unit.assert_eq16(16'hF937, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #95 14d29bbb-670a-4f60-940f-d31f2274b50d)");
unit.assert_eq16(16'h0655, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #95 1ca29a17-5a4f-48dc-839f-bc28b68e04f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 a7d740b0-369b-4db1-a091-8cfec36599b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 c1760922-145c-41fe-b9b0-834dc9a84cfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 55b3cfad-b325-421b-b6f2-743024c1119f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 8f72b100-733a-45d1-9d1e-657cd16eb952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 664bd120-3d6b-4cfc-a94b-cb3dc1ffd2d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 442e9028-f2d9-4fd6-bdd5-b7e44499a40d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5085;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h040C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h5085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #96 5d1f8662-1fec-4755-829f-b0e2796d27d1)");
unit.assert_eq16(16'h040C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #96 f888d5c0-0086-417e-975c-f567a629d6e2)");
unit.assert_eq16(16'h5085, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #96 dbbf1c73-bdf0-4e4d-bcc7-626b7cc39c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 e3ea905c-3c63-4b97-afb4-7a170a4f05d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 a245028d-c8d3-4b80-8ec2-6e3e12f9c2f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 ff2e296f-db42-4f88-9ca3-3b7c71072781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 5d89c159-7ad4-43b3-8366-8f88cf3d8210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 cf2a645b-a14c-46c1-9041-dd3bdb5eb25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 4639be57-1b16-4a9d-b280-8aef92bf9282)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hADA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF98E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE459;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'hADA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #97 43d92a11-3344-42bd-980f-4608a8241a08)");
unit.assert_eq16(16'hF98E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #97 b0757e49-9de5-4532-ae04-9f70c6327b31)");
unit.assert_eq16(16'hADA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #97 b494b7b5-e2c8-4426-94ac-3e71b0254fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 08061d0a-af63-4fc9-8d9e-d96ba72d6934)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 ba37b5a8-3d68-487b-a6e2-f2c947e30386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 810c6d80-d5d9-42d4-9d1c-3b6c8e791c71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 0a4cdac0-3779-4d23-a8b4-a839ace8d667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 4ddab75b-211f-4e29-bf13-36a3ed913f21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 669b22c5-d18f-43cf-bd12-773a74e7d3c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA718;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF0C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'hA718, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #98 302ef21f-57b2-404f-9fc1-e3918398a602)");
unit.assert_eq16(16'hF0C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #98 8182a749-2bdb-4ead-95bf-63423e9d3893)");
unit.assert_eq16(16'hA718, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #98 7f4ece82-11c0-472a-b658-4090dcfcfceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 ab6b40b0-bb18-42ed-8dbc-4eab666ebdd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 e43ecfce-c544-49ed-a0c8-1f8d9b51c7bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 de034893-75ff-4365-8c86-9a8342a66c72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 c1336bfa-224f-44ff-9aaa-e4a3a3fbdafa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 e16376a3-b45f-462d-97ef-01376c0840c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 8db9ea17-19f7-48ac-bc10-6c6781336eb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1033;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC747;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEC1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'h1033, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #99 94ce97c2-f1e6-4175-b6a8-edfb12261e0c)");
unit.assert_eq16(16'hC747, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #99 434e1931-d422-4bcf-9bca-5177f8c03145)");
unit.assert_eq16(16'h1033, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #99 3ffd1072-cd67-4383-a6d4-de17a14185a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 f0a92fc9-3a2f-4878-b507-6effb3984ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 c502fb12-1e07-458b-831c-9e814821e122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 e495b805-dd18-466c-94ea-3c37fb8ddb3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 2dcd4806-5c7b-43d1-bebe-a4b3968e62ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 c70ccf79-9dcd-4c70-95a2-c1f1a0037a3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 fadbe3d7-5074-4552-b1ae-3098680d3d19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCFD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD9F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h1DAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #100 ce17bde4-9984-490f-b341-9ca33b584949)");
unit.assert_eq16(16'hCFD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #100 6c131d52-8142-46b6-afd1-026e219abcc4)");
unit.assert_eq16(16'h1DAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #100 3df22011-967e-4188-9071-b226e7e1e2ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 3aef20bc-4b3e-489d-952b-85560346edfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 81962d0a-fc8b-438e-8725-8d87fddb511a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 8fc617b6-e24b-46d4-a70a-fa149c652c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 e10d2263-e111-4af0-aa47-ace315a3bf07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 0f8f3a0d-363c-4921-8fbd-c21765686feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 b1e06212-f0cd-4186-af6f-e6ac6c9d0773)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF225;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCEED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9DE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'hF225, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #101 dc1e2e77-6f08-467a-b305-b961c863f95a)");
unit.assert_eq16(16'hCEED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #101 ef2eca14-277a-42bd-b607-ca9e9ad2134d)");
unit.assert_eq16(16'hF225, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #101 a283fb3a-cd91-4527-9fe0-7baacb37c296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 ff388d90-2d7a-4339-bd24-33d8f64173cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 2beaf32e-e84e-48fb-9462-9fa30c907b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 0d0b3e09-487d-4f70-ae42-92f2be8da3b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 785e7df4-ca7c-45c7-9780-c8ffec6dc130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 a30a07ef-d52a-4cc9-8e99-b5c097425886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 e3fa6bc4-37c0-447a-b691-a4f35fce2788)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE608;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC96D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'hE608, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #102 90387bfb-5be4-4661-accd-57a14f651b0c)");
unit.assert_eq16(16'hC96D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #102 19792328-e65a-4e98-bd83-14cc55667c86)");
unit.assert_eq16(16'hE608, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #102 3f719471-a649-46ce-9b3b-a98468e7c610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 6a962d9d-8595-468a-b640-0a6cb52ef263)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 6dff5309-8dae-4c8e-93b3-11173d0cd918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 698e9fc2-97fa-4b5f-8ee1-df494515470c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 9393c104-82f2-4e1d-bb36-054a4d3d9143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 383a9943-be1c-4f20-a567-2eed1c9ff9db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 4dfb0553-33b9-4c23-a7d3-6f13957f10d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5157;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9210;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFDD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'h5157, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #103 bb9335f1-96ee-41c6-98c8-e31e7ba3ae64)");
unit.assert_eq16(16'h9210, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #103 c100dd38-59be-43d3-9e01-d78da08a0025)");
unit.assert_eq16(16'h5157, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #103 b1405a57-b145-4d63-a7d3-965b458893f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 b2e98403-add1-4272-8a69-96e12436a60b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 b2c89834-9ab2-4c12-a3bc-8390a5566443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 840dfae0-512b-4503-9ad6-5c2a8be9859c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 fc967eac-628a-4fd3-b28f-f6a98f425622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 8a9326ca-761e-42fb-b8b2-1137dc7546b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 f12e0fae-f0a8-4147-b0b8-90a102714561)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h609B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h95BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5CC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h609B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #104 6121a3af-010a-4b6f-aa8f-5dd35c4d5cdf)");
unit.assert_eq16(16'h95BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #104 0a85b4c8-83bc-4f94-a444-495c5525439f)");
unit.assert_eq16(16'h609B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #104 88e41800-ddd8-471a-8527-61edebb13bcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 1e00c9fb-5273-4e5e-86ae-42f05040dcec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 a5eecfa4-402f-4259-b2f9-2de54cbb63a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 d4d42aab-7b70-44fc-881a-31ea655bf417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 3cd89220-fdb9-4520-968e-9f5015e46ee3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 bf27de0b-e181-47f0-81b1-a68e1b5be551)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 cd6ca529-850c-4418-90e5-1cc4ff169a6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h772F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2BDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h772F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #105 dd230e8c-9e43-43a9-b0ee-d4bd7f0fb4ca)");
unit.assert_eq16(16'hBB66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #105 a415d6ca-48cc-4ebb-bdb2-efe67dfb6eb8)");
unit.assert_eq16(16'h772F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #105 6fdbe081-1072-4078-b66c-3d60985ab979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 c2e20c61-3ba3-4b28-9ea5-a749feb47147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 df91e2bf-5592-4cee-a5fe-887c172cc2e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 05f52a28-15ec-4965-99a0-9512f565c2bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 d4cb7399-1b72-45ca-bc4e-87703220c6b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 cf41ac49-5bcd-4bfc-bb7b-63fc2a4475cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 3cb097d3-3bf1-42c2-82cb-46e7212e5ca9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h544F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5454;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFFAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'h544F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #106 0421d627-6908-4824-8b03-29965639961c)");
unit.assert_eq16(16'h5454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #106 5617ad80-37b0-4009-a2ab-9372fcb0c1d6)");
unit.assert_eq16(16'h544F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #106 12763c5f-119a-40a8-8802-1a286b9c33e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 0202c5b5-de12-40b6-a968-0a17ca4501b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 2867c1de-4e8b-4801-a845-18e6ada08ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 cd6e5078-f106-40b5-aba3-a127ccd72958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 04ed9ee4-17bc-4c07-bb6c-8ca6e1c0524a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 d5bfacb1-8baf-4f79-833a-54c81397a5e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 a7c8c833-3117-4a92-9774-7f5fd0660718)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA3D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7FA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'hA3D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #107 39ac6422-7c45-4839-b9fd-8a0b79239281)");
unit.assert_eq16(16'h7FA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #107 5a44d552-7bd5-4349-8e6b-f063fe7c630b)");
unit.assert_eq16(16'hA3D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #107 64e82bf0-30ae-48ce-ac78-c263adabab9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 5499b1be-1d2b-4b00-b3ed-a472b5b2c7d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 f4178c89-b24a-4333-a2d7-992e9f0709bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 cc61553c-ecc2-4d32-adbb-ad5b1746f81a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 eb6067a0-1052-494f-b9fd-874c1db3b591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 2e2cc03c-df6e-47c1-bf0b-180512a06127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 d041cc28-1605-4b9d-b825-7ce02cfee3df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8A75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h4B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #108 f0db4feb-6232-4839-b0b2-3774d22ce372)");
unit.assert_eq16(16'hDF7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #108 825c5fff-288a-4860-82c2-eb817ce7bb71)");
unit.assert_eq16(16'h4B7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #108 cd191c77-7a1d-4282-b71c-9e9213b71c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 6d5173af-2329-4ec7-945d-afc27a9eb79f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 dd57a80f-dcbd-4b9d-8a40-c740c9d1beb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 3d7bd3b1-f547-4e7c-a741-8576f0d77f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 17b48fa5-f28a-4727-b6a0-43bc9a44da6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 6850c8be-0114-4025-9a75-388ee929616a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 5f036683-f965-4b70-8cf5-424c68cfa2b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD35A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'h5F47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #109 5fa5649c-f54f-4925-8684-37d9bd622ba4)");
unit.assert_eq16(16'hEC73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #109 5fd4676b-7f72-42f8-b3b4-e253c56f8c1a)");
unit.assert_eq16(16'h5F47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #109 c55895f7-9763-456a-a649-37f451368db6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 8e818bf7-343a-4f04-a012-fed8a5b9b858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 fdf4177e-0721-47e7-affe-ee146bdcbf4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 793987f7-48e6-4f3a-964f-f3bd706b27cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 e41bd9db-455b-4deb-b650-3f2c96086270)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 65b0e7f0-c55d-4827-bb8d-7d118a376625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 055c545d-0a4d-42b3-bffc-418568e9be81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5159;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4F6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5AF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'h5159, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #110 d4ea3b9a-f471-44c2-9c02-5ff6fab803cf)");
unit.assert_eq16(16'h4F6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #110 b58821e3-0aea-4a91-8143-0f3af52a2f2c)");
unit.assert_eq16(16'h5159, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #110 e9024247-30d3-46e6-8490-410ed1960553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 eb693fd4-0447-4e0f-a274-f9c2a0fa15fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 f3d157aa-36a6-4c38-8aaf-e2fb556a5b98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 3ff8b879-0f48-4b53-849f-4ca28b099a30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 0d7c7e2a-c195-460c-8d39-d15d5702cd14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 35b69da5-1897-4a66-bed2-00d49e4e9fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 8249399d-bc71-4dc4-8e5d-03bf9b903ac3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h37EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0EA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'h37EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #111 c2f60528-8610-4a4f-aa90-e12fabd291b0)");
unit.assert_eq16(16'h60DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #111 f86ac18c-77f1-4bfb-8c00-64f4e8c5f091)");
unit.assert_eq16(16'h37EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #111 3726e5b6-bbbb-4a79-96d0-769e294d5c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 73924ded-088d-4332-9c78-ccfc3933e34c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 6ef30f25-70c7-4841-b750-1e5f1b83fd9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 3569505c-fd69-421f-92cf-42118d89aedf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 3b488f25-12cd-4f3c-8591-7f02223e87cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 86e94503-d436-4ad9-9765-6ebb98df4167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 c74fb08b-3044-4b54-baf1-f1e76693c64a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF0E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h71A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #112 dbe15be9-8439-47ed-a8d8-dbb7ea29f4b3)");
unit.assert_eq16(16'h90DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #112 26b1f28e-ce8f-4b0f-921b-8cd62d6c470a)");
unit.assert_eq16(16'h71A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #112 2e27a9e3-ebe4-4b0f-b3de-b83c2e222ccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 2ae7b690-73b6-4b77-a700-3e9d42d800ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 6b99be0d-51ff-4eef-bbd9-d1132ae27143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 1a514e71-e886-49b8-99f3-e3aaa3f8bcc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 1897b6b5-a9a0-42e0-a664-898fd6b735d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 c0ae8769-f96a-47df-8992-2b13968c9f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 063778cd-366e-43d7-a83d-99618250d68c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3778;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6617;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE169;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'h3778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #113 fb746ec1-0587-4ec9-ac53-ee97af7403d9)");
unit.assert_eq16(16'h6617, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #113 29ffa600-45ab-4543-803f-f713ae1d45c4)");
unit.assert_eq16(16'h3778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #113 aa389040-426a-43f3-8225-6204f36c9cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 0c0281ba-05fe-47e0-bfa2-f948305c29f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 19a050bd-4d4e-4e75-a5cf-2015ec38939a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 272f1279-428a-41e0-8fc0-c3f6f80dadd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 98cc342c-61b8-4076-92b2-47460bd6986f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 d462d46d-9769-4e2a-95d2-de5c0f07332d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 21a2cdfb-83d6-48ad-990c-9bfd0039a856)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE21E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'hAB54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #114 549922ad-4fe8-4971-8226-44561b97550a)");
unit.assert_eq16(16'hE21E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #114 53d39eb9-c88c-43dc-8b5a-0ba92ed37cca)");
unit.assert_eq16(16'hAB54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #114 b6294b57-8a42-4e36-a09c-d1aa7fb4fe64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 7796ed35-fb5b-4fe5-a0d2-8cfe22dfd4ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 36c3f586-390e-4b54-8933-c6d6887d68f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 45d2bd87-4b1f-43b9-a077-ff3822e70991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 c5976f2d-c2c2-4a82-8141-136815023e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 1caca1af-4923-43f3-a68a-57c5ac23cc3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 bbfb4a19-ded5-4e17-871d-30ebb6d2c9dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8905;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hABC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'h8905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #115 d52948be-dae7-4f36-ad91-fc70c58fc045)");
unit.assert_eq16(16'h5F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #115 6df9d6a1-b683-415e-a355-15e6e05ffcac)");
unit.assert_eq16(16'h8905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #115 5875c16b-5c15-4496-93b0-d20a4d5fd47a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 359e8477-412a-496e-9962-f8168faba251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 c65c8c50-cb8c-4672-bb28-b8bbfe555f1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 9c684efc-53b8-4ccb-b7cb-d7fbaf449979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 48277d19-730d-49c7-b44f-4969618ec08a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 1934e289-9e33-4199-b813-3c04fe9f3fe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 588ef826-3245-4e9a-afbe-72da83e645a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB21E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h0EB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #116 c76bb64b-ec26-4fce-875a-467e95ee8bfa)");
unit.assert_eq16(16'hB21E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #116 e64e9d84-cca8-4a12-962f-fc494c4fa6d6)");
unit.assert_eq16(16'h0EB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #116 718bc669-ac6c-4983-b0b3-125b85f821b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 af7c2537-1f4d-461f-bd45-77159b8807ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 82f22864-769a-4dde-92d8-7cddb525ff79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 8283f8e9-4c57-4b50-82a3-b3791a6bd45f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 348c81dc-aada-40fa-bf74-a11a6c9146bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 9180e26c-2952-42f4-a0bb-ad6b833ea1b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 41d748d5-00e8-4f5a-af50-7f14c09c999d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h359D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2FD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2794;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h359D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #117 157e9afe-2fb9-4552-8431-46cfbf5acf4e)");
unit.assert_eq16(16'h2FD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #117 0bbb9cd4-7233-4578-9b53-2e5d26058557)");
unit.assert_eq16(16'h359D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #117 57748b6b-f0e2-4e2d-9475-7eb391a4a298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 43dd7e7c-9d59-431c-a503-c77c0d767921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 548e99f0-a3db-4fd0-ad6c-335b9f23bb87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 d679469f-7e55-499c-922f-ad70aaaa938b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 d1301a04-8900-4aab-8c65-fb37f52ea035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 b03ccf8c-0248-4198-b50f-18907e94377a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 d1b6d899-725a-4d2a-b907-f4d754b3f789)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE962;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6982;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h91F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'hE962, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #118 adbbf8db-b41a-4de1-afde-d4554f200e09)");
unit.assert_eq16(16'h6982, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #118 814f3a89-e78b-41b5-81a4-cc77ddb56cef)");
unit.assert_eq16(16'hE962, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #118 d2906bc8-d813-45f2-b3f3-6fe6f5abad1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 ed5dd892-f2fd-4e90-860b-b563123cb437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 5df174a0-a178-4715-b777-e68f707e7960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 3fee3c6b-9c23-4ed7-85cc-a0bcb0bf72a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 e6b29752-46f3-4cc1-aeb2-445695bfc6b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 87f5111b-77de-472d-a030-fa3bc3630fc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 5ff53ee7-0927-47c7-808c-9ed547e8c9cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hECC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBAB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'hECC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #119 7cfef318-8579-48b4-afb6-e826bcca71ed)");
unit.assert_eq16(16'h03F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #119 41f37fb6-8a6a-495b-b899-401caef89b1e)");
unit.assert_eq16(16'hECC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #119 53fce1a2-d925-44f3-ad17-103f60d6a49b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 4b28b8e9-f239-446d-a30b-b20cf8ec60b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 cadaf786-9211-49c0-8908-a3418a97d4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 b01c239f-80d2-4af1-8277-da14626ec085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 abcd1286-105e-46c4-a676-18e842a38d54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 8a673410-1798-41fa-986c-25ec6bab87e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 abe0754d-6978-4362-824f-3d8d7296d76e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0FEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEE72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5220;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #120 4eb6a25b-b224-4086-a1c1-dbf7a8f0d084)");
unit.assert_eq16(16'hEE72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #120 8c4d1191-8ee7-4afd-bcc3-ad5fb2a1d9fd)");
unit.assert_eq16(16'h0FEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #120 6c4296df-1bc6-4ec0-9a9e-6c35963c4928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 6d6f4deb-d821-479f-b827-65f08ab91450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 4158777e-56e6-40ff-931f-cc84c9069151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 cb80b993-b7a6-4ac7-859e-adb143620649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 dea339da-e943-46df-8e36-906242391f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 75ef511d-922b-425d-93f9-f7d00745bc1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 0a92735c-016f-4987-80f4-8c627e34ef56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1D69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3322;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5309;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h1D69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #121 7dd00ac3-6051-4820-829a-6f8a5cdbc429)");
unit.assert_eq16(16'h3322, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #121 7bc60a8a-09ca-453c-af0a-9bc1056b3157)");
unit.assert_eq16(16'h1D69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #121 0e9cc1cc-c51c-40fd-88d8-9860d985a927)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 dda4d362-f4ee-4c70-ae28-fd82d0efa8a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 1353d5dc-b4d1-420b-a204-858c675ccc97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 ca62f034-6460-4c76-8baa-8537a577e916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 b27a64b0-6700-4572-bf5a-19dd8ad7536a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 ad376a39-3afe-40bf-a5a3-9b73f0ec2f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 ad18b1f9-3ce8-4891-9824-6db570d69c07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h503A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF28B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3475;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'h503A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #122 a67b1843-8e3d-41fc-87b0-65d3d4a9f582)");
unit.assert_eq16(16'hF28B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #122 b101499d-30d3-4912-a717-8d73c02cbed5)");
unit.assert_eq16(16'h503A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #122 bd4534f4-421a-4aea-aa75-25395a9930ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 cd9dfbab-2cff-408a-ac2f-64668b42f78e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 c4a46e61-d031-47a5-8766-26fb639d7b18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 dbefb86e-7e19-4a2b-9489-832bfba65c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 99853143-95b7-466e-9864-981d2823284d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 3cfe4379-4a38-497a-a8ee-1b50e4325856)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 0114d8be-0e00-4d3c-b2ca-990685aeb66a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD62F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0129;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h51A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'hD62F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #123 ec5917af-086f-4024-a6c8-e257af179ef1)");
unit.assert_eq16(16'h0129, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #123 daf3ee2b-6031-4e11-9fb8-adda63e3dfe7)");
unit.assert_eq16(16'hD62F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #123 b451c791-f081-4d25-954a-ac9275770365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 60ce6a9f-31eb-4d77-8974-31c796b8f8aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 93b320ec-d681-48e9-82dc-d2df8a107885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 925077b0-393d-4607-8fb4-f2e5c27e6b49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 a397aaff-29ab-45fd-b7fc-b068116d1e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 c1dcbd95-e619-4466-8d7d-7b1c55a7f88a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 e9810b4e-6677-47d1-a080-17030f3e4e53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h48AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA6B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h48AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #124 715cfb12-c458-442d-a7ee-4dc165b02c0a)");
unit.assert_eq16(16'hA6B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #124 a8be717b-5d17-494e-a03a-7f531fa71675)");
unit.assert_eq16(16'h48AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #124 14a50d85-23f2-48ff-91a3-f4266154ace1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 2ddb7d18-25ce-4a45-abdf-61fcdf7edf87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 ba29de8a-d003-4d0d-9be5-d5fe0b1d5a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 08be570f-a309-4eb4-b44e-4ddd1c8ca47a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 da69555c-0e55-4d5f-8548-64acc2c6fdf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 d99efa3a-1087-4bb9-9d8c-bae7b226e6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 0c070095-2764-4e48-a3c8-661c4f593679)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDFAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB039;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'hDFAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #125 4bedd4ff-6883-4ed0-9c72-2bbd8ff66ad8)");
unit.assert_eq16(16'h89AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #125 145d3d74-571b-4bc9-8724-7effaa98039a)");
unit.assert_eq16(16'hDFAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #125 c574b826-8b9c-4218-941d-2c5bfc3adaf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 87fd9705-89cc-42d9-b8dd-d72b0d589d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 a5649a5a-7491-4791-bbd2-d9064b593b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 7dd5eac1-1f50-4445-a78a-ae81d4e3ccbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 324b7c7e-bd6f-4e92-afd2-01a86b12d5c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 43e05f99-49ba-45d0-bfcc-92d411f0effa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 c52d4ecc-9531-443d-b6c3-b0f8fb6680cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE747;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEE11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB055;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'hE747, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #126 791b3f18-d167-4e84-aa00-526fa75ae4f8)");
unit.assert_eq16(16'hEE11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #126 aa4ac190-42f2-4e62-b16f-5e5323baf518)");
unit.assert_eq16(16'hE747, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #126 1f1d2584-5c13-4b9a-bcba-57e516bd9224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 c2a3a7e3-cb9d-4702-80f3-fe1e3b7650c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 8472b543-d04a-4257-a485-5caf342a6ea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 63a0d647-1288-4572-82b0-b633dd59096e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 17995211-14be-4156-875e-db14ac7d2955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 8a3cdf4b-2c8e-4e8d-867d-c15483967c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 a20e517e-d783-46aa-8aee-cb7dc1153077)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAA0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h9B6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #127 717d3d81-250c-4a38-9115-669a541c499c)");
unit.assert_eq16(16'hCAD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #127 e93d50fb-4620-4a0f-a586-0903ac63fcb7)");
unit.assert_eq16(16'h9B6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #127 9cfd5798-d90c-4276-a720-2c9d250d2e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 5a6d9655-68da-470e-8c4a-821bb81784b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 e15ba765-1c7a-4145-b17c-23554531b7e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 947d38be-50ed-42f5-afbd-525a24a54b9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 96c5cf84-c52d-414d-9f4e-14119aa46add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 8a119184-3139-43a1-bdcc-042450269653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 d71b867c-aaa5-4f47-8f42-e51e55dbe917)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1511;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h10FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'h4B63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #128 1ce5f1e5-5657-4763-9e46-83d182a1e525)");
unit.assert_eq16(16'h1511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #128 300643dc-7517-4955-8d67-47d0822ad9b6)");
unit.assert_eq16(16'h4B63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #128 5e9e963d-e76e-48cf-86ca-c31c09c9506a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 53726bc2-1851-4b33-92db-1117768389e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 413a0b91-f692-4734-b841-a9c970b5d7a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 1d4d4e42-6ec9-4539-bfc2-eb29a5301f4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 8307d880-d778-4058-ba94-440194a23767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 309312c5-2f18-4bcf-a4eb-577f93959005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 a59de60a-e62b-431a-bb8f-1b2a2894f62f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFF53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hACDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEEF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'hFF53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #129 e47ae56c-d19a-40e5-a3ac-4749c18d6aa6)");
unit.assert_eq16(16'hACDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #129 c14a4218-4298-4bad-a746-cfe682889984)");
unit.assert_eq16(16'hFF53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #129 d064275b-a49d-46ac-b241-8c41a8a1ef6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 a8d9112b-124e-4f53-85dc-e32abd1a7d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 12db857d-db99-44da-8b86-08050353fde8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 b3108fc9-90aa-4127-a67d-0b6af39c1f76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 4f7accad-db15-4a35-93cf-d457699f8ff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 62d16070-ae34-4305-8bc9-35a9291f4d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 0c0ee429-2df4-48da-9c52-74407074ba76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9C53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h9C53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #130 6e0ae423-66d1-41b0-87d4-2ef80d429b28)");
unit.assert_eq16(16'h8D06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #130 4d2a5aef-2266-469b-9ff3-4614fdb354e2)");
unit.assert_eq16(16'h9C53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #130 91176e53-8980-4d8e-a944-e47ed6aa8f0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 b507d91a-fc1d-4e65-8a02-88d602795f2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 69bc617e-6ca3-4740-8abe-fdaf786ccdb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 a9a1e2d6-3786-4d70-bba0-4b957ed920d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 9bdda82e-47cd-4087-b65b-9e714b7492b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 e9b05088-346f-4587-b789-bdc3d2be37bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 b61b7333-8c18-4258-9ebe-30d4cff09be6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4617;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD370;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'hCE99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #131 c9ddcd35-2612-4d42-afb7-0392a6fadc79)");
unit.assert_eq16(16'h4617, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #131 f2916c60-278d-4aa4-a32c-4a5eca66f170)");
unit.assert_eq16(16'hCE99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #131 c8518807-d94f-4afc-9cc1-fd658fcc66e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 e959026c-752c-401e-8e8a-00e60c009376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 c44a7019-7a80-4d05-8bfb-b673b8f4fec3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 658a4fdc-543d-4963-9b55-34239e078bd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 c638852e-08d5-4219-8e8e-b1a8b55e2665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 61662282-e443-4751-bd97-6a92dbfee6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 74b18acb-0d82-446b-9b93-aa92917226a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2522;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h30F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2649;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h2522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #132 f4aedb8c-d8da-43ca-a90a-3ac0f2f19c4d)");
unit.assert_eq16(16'h30F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #132 e073dffd-02c2-4cdb-ae26-1ef89c043fab)");
unit.assert_eq16(16'h2522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #132 b3c0a3a7-2fdf-4e93-bc86-39a99fb9d2a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 4890531d-eb0d-4151-862c-fde8b6722381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 6acc1e8e-bd78-4b83-bd3c-db6d29b4a3c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 c92115d8-46a6-4d9d-85b1-328573692bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 ba086c0f-e7bc-4594-93e1-1e58142b12f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 e21fc1d6-c631-458d-8b6c-76d4b400c0a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 5600e4b1-4e0b-4754-99fe-9bafb317404f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5950;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB1AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h5950, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #133 79dabcf6-b701-40aa-9ab9-32165ce6175f)");
unit.assert_eq16(16'h2F70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #133 191ad221-37cd-4ef2-8daa-3bfa99ae160a)");
unit.assert_eq16(16'h5950, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #133 ed97e536-6604-4ca4-b8cc-5006f7fe06c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 1100e9f8-93c1-4449-870a-ef2a6f339ad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 7e2dc446-e765-44eb-8040-497fbc9cecee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 01253953-8110-407e-ad67-54040e4780c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 a3fb5d3e-1cd8-46b1-8fac-877db778ab0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 89d5028b-7f2c-46b8-83b1-5bb4c2a17625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 d1be1476-fe95-4327-b9df-c8e93dfd0fad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1D8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4183;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5EF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'h1D8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #134 55e63b0b-6386-4aca-baed-01faf220a552)");
unit.assert_eq16(16'h4183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #134 87db482e-8a05-404b-89ad-88ef1ad5a345)");
unit.assert_eq16(16'h1D8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #134 f3e47e88-6337-4473-8dee-3c830e00417f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 5691f6d0-4de9-4a67-9c3d-2351cd137a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 94df782a-e136-4163-81e3-b9568cf71409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 ea5e49a6-d7f4-4a94-a2be-ec989813977d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 91e8412c-0b2f-4db7-b602-45e48efc1244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 446b111e-d538-487f-b650-5ad989466114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 7a9fb100-2f30-4034-80ad-2eb9f9af35d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB482;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5492;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'hA0CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #135 ecbbeed3-7005-4f79-8b17-1d012a560b18)");
unit.assert_eq16(16'hB482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #135 79c0aee3-8435-435b-8dea-b4ba6d5306f3)");
unit.assert_eq16(16'hA0CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #135 7aaba2b5-9a81-443a-b2a5-f727f38030a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 221472ec-789a-4976-9f1c-4ad81e23b4f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 884abba4-748c-46e0-9cc2-ab036719d592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 ac3c21d7-3042-41b8-9811-de77db4dff81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 f58d8ca3-ed37-4cf6-bc75-3444c373652b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 b80994bc-6aca-4e4f-95f7-3d05ada14dc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 d83e94d8-f16e-48fe-9ca9-f375a0d6c04f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1FD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'h19E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #136 02c28ab6-ed78-4157-bae2-46a942b061ea)");
unit.assert_eq16(16'hD4D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #136 c86f9f76-40ec-465b-9184-6961f2a59a90)");
unit.assert_eq16(16'h19E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #136 01b0c9dd-3684-441e-8b82-ccdbc5039eed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 1c5fe1d5-6a57-471b-a8fa-dd33cebdd6d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 0f4d7a6a-66c3-4655-a1cf-adc7a2c3bb97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 2dda1470-8885-43d9-a019-61aa48dc9c75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 b25e57f5-6095-442e-a6bf-b5f9dfb3af4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 a563493a-6ab6-49d3-92ec-0ab33b650211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 c66d4da8-176e-49de-9520-40b07d1a453f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE25D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7108;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h940F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'hE25D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #137 0a6eb903-83c2-407c-abc1-59cd76819e40)");
unit.assert_eq16(16'h7108, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #137 ba5045ad-3966-462c-83b8-84b47f9259c2)");
unit.assert_eq16(16'hE25D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #137 aae0a41b-78a3-430e-b8df-6ffd8129faa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 cb113ce5-d28c-40fd-96ad-7f798b039063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 87583aa2-aadd-438f-83df-90dda059178d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 2ec4fa4b-b2c9-4a26-8865-3f3bae7e9f0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 8b27539b-ebe7-488c-b3ca-9e8605c9a8de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 da4a5d2b-61ba-4968-9784-371ba368b277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 561d6cd4-c861-424d-9ea2-4f67e262f866)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE20B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD009;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'hDC57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #138 72f1f550-e16c-4092-96bd-94f24aad2ffb)");
unit.assert_eq16(16'hE20B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #138 8c814b4e-4492-48cb-be06-1987957bfe09)");
unit.assert_eq16(16'hDC57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #138 34ba616d-f272-4613-a403-52cc325202d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 61198751-6786-49db-85c3-1670c05e36f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 fb57e9df-c7e8-4c31-8e4e-f011026e9b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 29635c1b-2319-43f7-aeac-c796f0ca79a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 4a940e8f-9eef-48ba-bdbb-0d9d1b57c276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 8cc04ed9-7d09-4391-95f9-d6771e792815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 9a49dbea-f0d5-4923-8466-10c398e9747e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCFED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0387;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'hCFED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #139 6ddd2f8d-5a0c-4eac-8655-5cd9f0129e11)");
unit.assert_eq16(16'h89B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #139 347d7b74-eea5-40bb-99ed-838fe86b46d5)");
unit.assert_eq16(16'hCFED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #139 66d48841-2c6d-44de-9689-f95dc410a9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 25531401-4db9-4cee-9286-f3768dce13c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 391fd1a6-c5a1-4ba5-84b6-63ca5ce6ebc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 d3f9b16c-e25a-4eb5-9598-56df62e2c6dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 8578abe8-4c0b-45b0-8f12-b2c012ebbae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 f1eddf3c-c7d5-479a-b111-aa4f5018df27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 e1fe95e4-1918-4beb-9807-7d98f5a7a2f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h69DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h18F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'h69DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #140 fd5486a7-55d8-44b4-b3af-60ec914280e2)");
unit.assert_eq16(16'h92A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #140 0f0d9f3b-3d6f-48cb-8dc0-5a6307b649d1)");
unit.assert_eq16(16'h69DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #140 763d573e-8422-4295-92d1-e9cf523f4e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 7c1bbec2-99c9-4cd5-ac7a-bacf4f0eea02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 dcc9c406-678b-4521-ab35-649b2cad6d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 752c251e-9380-4e46-b651-5deabfa0ecde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 1c7c39f5-9f53-4e25-9607-aa0568e9a6f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 a116b6d4-40eb-4d1a-b837-dcb730657e34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 98a1bdb6-d5d3-43df-aaa0-2243a3e50b61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD067;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC32A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB965;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'hD067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #141 d6ee4f8d-46c1-4592-ba45-1d89553a324f)");
unit.assert_eq16(16'hC32A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #141 b2409d81-6faa-4a86-b56f-f16aa51f1816)");
unit.assert_eq16(16'hD067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #141 b258840a-4dc6-4f71-a9e7-775ebf24a1df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 8b9c6327-ad7c-4624-9cfd-a2abf928a2f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 54ee7396-d015-4d6e-aecd-230d481c4c3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 dec0eb0f-f6f2-42b2-a2fa-9734726fad56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 624af9cf-c8a6-41f0-b918-2f1dd968b636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 cf2819d8-9793-4331-89a2-e381346cc4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 d350f1ed-b737-429c-9a56-5a8cccd78a1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBBE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFDC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'hBBE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #142 6aa70fc6-ab94-4b5f-b4b1-aa4b1604883b)");
unit.assert_eq16(16'hECB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #142 62c5038e-2a71-46ae-9e8b-50f092a0e6ed)");
unit.assert_eq16(16'hBBE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #142 2fbfdc6d-1d2d-41c1-ae39-e0ee4c8a8914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 032e1cad-572b-4526-bdb5-2b7d387d9501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 1c8381d1-db5e-4f78-bb94-b7a5339f48d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 b5661970-3b30-4e03-aa9f-a358aa8cb3b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 26c9c428-5fb9-4d5f-8968-8a8b3d6f77f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 2f7cf12f-99f7-4632-9f56-d478531bf30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 b8898ea4-7b1e-437b-a5cd-d639ded41330)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h88CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5883;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'h88CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #143 30fee54e-8c7f-4397-91a8-bcf6acffb38d)");
unit.assert_eq16(16'h68D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #143 03ad84a8-ec17-4ee9-8063-d6a3d1b47fcd)");
unit.assert_eq16(16'h88CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #143 e1dba106-eccd-4df7-87f0-5f33394ca59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 2f6bb5d4-4865-450a-b0c3-536c27637025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 dae83762-9287-4bdf-9c29-655ad7f6233d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 3553dacb-9452-4885-9a4c-c0471f4f63b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 50147ee3-05e6-4adf-bec7-0fa242439744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 cb1f07d0-dd4f-40ec-87b1-5e7c9b7df6a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 78ad34f9-734a-49a9-bdc8-64c4e8deb711)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD097;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9120;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8549;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'hD097, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #144 1e54a15a-3809-4bf6-97f7-6c408c9c2f49)");
unit.assert_eq16(16'h9120, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #144 6f68a39a-2825-44cc-aa68-6f7e14c256ec)");
unit.assert_eq16(16'hD097, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #144 b52cbe21-b243-434e-bfed-306d1676ffcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 c53a82d7-a1c6-43fa-94fe-bc76fb720b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 2e4e7717-6a8b-4d5a-8674-07be5053e3a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 3dca8f28-da71-4e16-85ab-6e8247f9688d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 91626f56-93e8-45bc-8c95-2a330d81be7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 018fed08-e8fc-4910-a916-8016c815b7d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 4b16e202-bdce-491f-8f92-7cc972d119e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB44C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8CFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEC0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'hB44C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #145 5007710a-8a4a-4f2b-a929-e15b4d353c6e)");
unit.assert_eq16(16'h8CFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #145 6f6ab05c-3591-46e9-b05e-8082da509d43)");
unit.assert_eq16(16'hB44C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #145 9f142459-9152-4ef9-ad52-06b6ecafa9f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 8a8030fa-e3ba-44ba-98c6-94148145157b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 4c026c36-04a5-40c4-942d-6b3df0b4597b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 8afdea84-8adb-46f1-a57a-12b9cebb0c2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 eac123a8-b822-4c3e-94b2-51b0e6bfb53a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 b8dfe450-d866-4af0-b424-33d4284a85e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 9ab376fb-9b4d-461c-8e17-5c7a67df5f47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBFCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA17D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'hBFCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #146 8e0d0bc0-bde2-49ad-9b7f-82ae3aff53f1)");
unit.assert_eq16(16'hAA59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #146 8aea7d9f-572f-476d-8d35-f126dc45c4fe)");
unit.assert_eq16(16'hBFCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #146 061663a8-aa5a-4c61-80a5-9cda39d63d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 b05456e4-f7bc-4f70-af5e-28dd6f73abdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 e69137e6-42d7-4562-8064-3bf6c79a0bc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 a4319c40-b0e0-4a2f-a7a0-3b945bfcab04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 93aa966b-b362-4d89-8cc4-0eda2ae9e746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 e6d61197-26b7-4dd4-a968-3b89fa817da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 f018c9d0-8b87-42ee-9b58-e274d8df6c8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA47A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h95B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'hA47A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #147 fb615d17-d12a-4619-84a6-7bf3dec96192)");
unit.assert_eq16(16'hCAC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #147 506af8e2-924f-4cc9-8e9c-195791f98030)");
unit.assert_eq16(16'hA47A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #147 d796ff13-b1ad-4160-aad6-b6841cfae764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 c5c5b842-e458-4758-9bd5-6e91ba29577d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 41a90417-d243-4047-af7e-4421095e9bda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 74c94a86-bb7c-4f45-be17-e1a6bb93593a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 2be61ee0-293b-44f2-85c6-ae275b8ab776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 85ebff45-9b60-4aca-8404-1e92e84f4555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 0bba8935-1d0d-428b-abc8-1f3c155585f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC31B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE8BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'hBE38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #148 ab494830-cec6-4a74-afc6-6e5f027000ba)");
unit.assert_eq16(16'hC31B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #148 a5607d5e-9c3e-476f-bfae-7254a19e6ba8)");
unit.assert_eq16(16'hBE38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #148 cc640d9f-329f-4797-b6c2-da2bb028b093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 c2c8bb3f-1284-4561-9f6d-4f74dbf6af17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 4edb63a3-9475-430f-9fa6-f2c6e0427cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 c20052ba-2197-4a10-8ac1-d606bb68d56d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 abb48b67-e954-4f24-b54f-3829f66f743f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 4e5741a9-3c8a-4f23-9ca7-082088e14909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 eacffa56-dfba-40b4-9865-d5762e192d13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF34F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD635;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'hF34F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #149 f00534e8-c653-40a1-bc0f-d7cce4120af9)");
unit.assert_eq16(16'hD635, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #149 c1f0ac88-99d7-4680-b49e-e49ae569aabc)");
unit.assert_eq16(16'hF34F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #149 42e7701d-2150-459c-9a91-58baae3c3ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 cf1f5bb9-d194-4e3e-b27d-2e1730c8482a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 121f10d7-94e8-47c4-81ae-3a65c6948eb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 04ba16f0-ada7-438f-80d9-9ba7b4a89b41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 1710c54e-6bb4-48e0-9da3-ec8ecfe2ca3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 d3196842-92c9-4dae-85ec-e0219c3db32a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 36e3c3d9-3278-4448-8035-a52c84145f36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4FD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC59B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'h4FD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #150 aa57c08b-d7b3-4ba4-b032-4d8121139707)");
unit.assert_eq16(16'h5C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #150 15504e74-39c5-443a-a084-1dc91e8e252b)");
unit.assert_eq16(16'h4FD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #150 4e826ab7-6719-4d33-aeeb-96c48da424b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 68376fa6-449a-422c-96e9-aa2dd79eb6f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 85e24c86-1b4b-409c-893a-e3a768f6b360)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 063974d7-9f02-40e8-8193-ddc7c95936c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 dd783e34-a5a0-4658-9f53-d14e2638ad92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 27a73b05-8612-4572-97a8-41189765b2d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 152a0f12-7b63-4def-b73c-d7752bb796f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC106;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0CF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'hF7D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #151 4cffaa44-c53b-40d3-b8ad-d98faee48bb8)");
unit.assert_eq16(16'hC106, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #151 f1aa1b43-bae6-4438-9cbd-e9786aed1fdb)");
unit.assert_eq16(16'hF7D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #151 5a8136cb-4e14-4333-bdf7-a9f5cfa08289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 c8174e0e-8fd3-4c60-b1f2-bb33d8a5f4a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 c93db4cb-f116-4f7b-aebc-4a0ce068355a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 14717ff4-5957-4d59-8657-ec012b20e29f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 a9b0f895-ca09-4045-94c6-a34f7923dc8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 0ed5b12b-5cc5-4a0d-829c-743b1fff6596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 da04e058-a5fe-4bac-a7ed-96dbacf8a253)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5932;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'h71FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #152 a71805e5-8910-4a05-8557-f70f15ae2530)");
unit.assert_eq16(16'hD375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #152 6243fbc1-61d5-446b-b47c-b2edcb8c2239)");
unit.assert_eq16(16'h71FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #152 27f49ebe-1e6a-4451-8019-ad88a7e67f77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 4a8e7b73-5273-4363-9120-561a9c8e31fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 41b1a097-f411-40cb-893e-bb96bba544b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 ff6c0da4-a237-45a0-b91a-807d86611511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 15eec75b-e79d-4c9c-acd0-1ee1be2fa178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 67ee2adc-88c2-4293-8e6d-3d1c386851cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 c5c62806-4962-44d8-aa5e-216cd5015b8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD35E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0B0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'hD35E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #153 f49dd720-f1fa-4406-8598-6750a0e7e5cb)");
unit.assert_eq16(16'h6EDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #153 e125e02b-cc8e-4ddc-a064-f3388656ef1f)");
unit.assert_eq16(16'hD35E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #153 bd862f7f-9fb2-46e9-819f-f56c164eaaa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 4deb1b30-3e45-43a9-b03a-54215fec988d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 6eddd9b5-bada-4a4c-a2d7-d3b0c0cfe662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 8ca3e717-fd31-4cd8-a5e7-319664adb96e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 1ad6a54c-113e-4bb0-bc3b-82ea1f806418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 edc10247-22cd-4237-8507-ed286e4348e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 a03200e8-d1df-4b38-80e2-c9f1ee02af20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9927;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h40F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEC4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'h9927, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #154 4ed3e183-f492-4f3d-9d59-a6fb6b73db6c)");
unit.assert_eq16(16'h40F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #154 f1a1998b-0147-45c4-90d9-14d6ca109988)");
unit.assert_eq16(16'h9927, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #154 2c0ac1fa-b29a-4633-aa78-de8fddabe58b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 aec25b6d-d125-4478-81c3-58233faa6659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 2743a4b1-50c3-4a11-91a2-a7950b2a4501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 00fe1c38-692b-4bd3-895b-4766505a201e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 2e5c57f7-9fab-441c-ad97-74a86e620419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 a640b23c-8b8c-4eb0-80e9-92b05fa288c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 d8e1ad83-1cda-458a-9345-c1f01248ae96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h960A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3AA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3AE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'h960A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #155 dbc0cd99-a716-48a3-9f5f-2cc06a5cb34e)");
unit.assert_eq16(16'h3AA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #155 d31989c5-86fe-4a62-a508-b6417c730b83)");
unit.assert_eq16(16'h960A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #155 ac5425cc-91af-4165-b6a1-d37c391c9c17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 447c3db4-ec56-427d-ae5e-c81b069d5737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 b7215088-abf8-462a-a244-e3a81c5ae38e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 466a8548-ba6d-4d83-b9bb-5577af65bed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 cb4e37d7-a417-437f-916d-aa8ce5ed488d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 19290ac4-d566-4f78-a09e-313b3cb69fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 9f41d76b-b581-4c5d-beaf-2aecdd554b69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6142;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4DDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h74C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h6142, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #156 faee0f3a-103b-4f6a-b00e-6a90a91685b3)");
unit.assert_eq16(16'h4DDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #156 e3af3675-31ae-4a3f-beab-3a637c4f4854)");
unit.assert_eq16(16'h6142, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #156 292ccdba-35be-45d7-86ec-2aa497288283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 77604825-9609-4e7d-840d-67c00d9ae0bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 4bdf27d1-d790-4a63-ab02-8069c1f23b19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 6d72cce6-6120-46b3-8041-c0061316213f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 f78e8398-9cc4-4ca0-951a-3ddf7ac93596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 16f3221f-35c0-465f-9748-814fef3caa64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 8d72df79-3205-48b0-b065-2770749270e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDCF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE97D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h152F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'hDCF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #157 af393715-fd02-4bce-9b92-66f16d07bfa7)");
unit.assert_eq16(16'hE97D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #157 5231a4c4-199e-48c0-b1b5-d11609e0d519)");
unit.assert_eq16(16'hDCF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #157 7cb2b0bc-386d-4ab9-9e37-735074ce1790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 d697ba4b-04a6-489f-802e-45b4f3b8e225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 92305c66-9f55-4449-958c-3e8b4ba2d197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 521ea5b5-3b24-4069-abba-b1307f89ab61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 c1725515-4e09-4482-8a76-1bff523fe4d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 c8283fbd-a821-4291-9477-a674c22748a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 fcba84d3-1b0a-4432-b170-61a368602389)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF266;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'hF266, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #158 3ca8c079-533d-4c32-9673-3cb21843cd66)");
unit.assert_eq16(16'hCF46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #158 18fb98af-c795-4c92-995d-fb89be7d1452)");
unit.assert_eq16(16'hF266, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #158 07b24798-2256-4f3f-8209-57a6e0c6ad36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 40c646ef-8074-45a7-9445-f91dba8ace60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 f294c42a-8744-4d1f-82d6-e9ca8e7493dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 0370a0d7-e4a8-4708-9d97-d320282a3d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 b7ae0954-550f-493c-a6ab-d665cbe786da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 b2452c9d-5369-44cf-bc5d-27a00108d3c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 af40503c-8101-4e5b-aabc-4ebfd6a247b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9110;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC484;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'h9110, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #159 aa1e0f21-baef-457b-a004-32cff894e76a)");
unit.assert_eq16(16'h5E10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #159 5c5582f0-6db9-4a77-92b8-fe316d6681ae)");
unit.assert_eq16(16'h9110, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #159 d2183631-fe65-4056-bce0-20f4b7d79063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 831bc9f9-4dd6-439e-a598-008c5b001f07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 d6b8b36e-dd32-42f5-a3cf-8d08a9a0c1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 0cef5b74-5866-4533-b043-ef6362e0e0aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 84e2f950-c428-484c-b21f-5cb835a92cca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 03423aa8-6149-498d-8b90-519d2ca218b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 b6521465-89b7-47c0-85d5-ea8b851b4e7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2274;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB566;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h369B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'h2274, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #160 2e96c09e-8825-483c-8285-72faf53d3097)");
unit.assert_eq16(16'hB566, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #160 c1f41908-b09b-4d12-8357-13505043afae)");
unit.assert_eq16(16'h2274, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #160 c6380a72-62aa-40b6-b54c-387e89ba6c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 9a147e5b-3ee5-42a5-b263-9d7c5e36ce9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 4e7cb7e9-a158-455b-8ad2-3c1eb84a8eb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 20cc3eca-38ba-4ce4-ac6e-8b1258968484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 23e09625-d812-4b23-86ff-e8fbce9bb7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 425e70b5-4770-466a-8e7a-4d3ca68c6a20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 48ac5f52-5d03-403c-b896-890e038aaf22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3514;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'h3514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #161 1448f98f-f595-418e-b126-252d5c601b1e)");
unit.assert_eq16(16'h3E20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #161 9b615f3c-c256-4c8d-9448-a2e312e0dd22)");
unit.assert_eq16(16'h3514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #161 ae09e19a-7e77-4674-a304-6d9ba072cc3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 42a88b7c-3dfc-4b17-bd69-865dcac13b52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 515e319b-098a-476d-b058-4d2c446cab26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 6669ddcd-c6f9-496d-a4c0-f796c105ce29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 b6d3937d-271c-41ef-91e7-604afa1b1709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 4b2e0cdc-a630-40f8-9b3c-506b77efc1b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 3dcdf5fa-c608-4dd8-ad55-f169a18649a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h70B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'h70B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #162 5c597d6d-b227-4d77-838e-97c44465904f)");
unit.assert_eq16(16'h36E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #162 803b6ead-def7-4ae1-b78e-1117bf11aa01)");
unit.assert_eq16(16'h70B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #162 ea523c51-ff55-467f-aae9-d5fe000dd532)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 d5a26f1f-a69c-4678-a660-bb121e921b16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 72b7a0af-3c7b-45e9-9aaa-4cdf1501efd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 7ffe5c8d-c85e-4d11-9fb9-67af4bdb4481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 dd1469f7-6e39-4587-aad5-1a9f171931f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 c82c69bb-22ea-4552-b264-1d6727e88754)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 5ab1668d-16ee-40d3-9da0-5a847469f3bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF762;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6BF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2CB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'hF762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #163 415ba2e9-f897-46e3-aa25-12fff2c28296)");
unit.assert_eq16(16'h6BF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #163 bc5a018c-dc6f-46f2-aa78-9087993da166)");
unit.assert_eq16(16'hF762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #163 5586cab2-befd-4f62-9f96-3f92fb77dc35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 6b5d3a29-9f3d-4f4d-8f23-b87bf4f0e57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 08f0c296-6422-4e3c-9834-c160378477a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 935acb70-8d6a-48b2-81f2-b825e7fcd47d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 ed1285e2-5b1d-4907-a24c-bb4c38360c26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 37163a99-f1f8-427d-98db-91d5150d286d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 929859d6-bacd-4832-a6f3-d269ca725ef8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA597;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'hA597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #164 5e916978-6077-49b3-9cb4-ef1f0a28139f)");
unit.assert_eq16(16'h09BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #164 7799df33-ecf2-444e-85b2-97043b166eca)");
unit.assert_eq16(16'hA597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #164 be53422f-a35d-4ecb-9b78-f1f31923929e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 eb1b21fc-2888-45a1-975e-cbe045248f72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 5a5ff8fd-c5b7-42b1-b2c1-58d37e09422c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 f26ab6ee-95ad-4d60-882c-68de8c8a4e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 b2ecafb7-9b81-44d6-a3b7-de5c17503d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 448d4d86-dbbc-4db1-950f-eff2920b72f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 f18ec83f-48d9-4fa0-8d58-b6ce2d1ed7a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6551;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD92B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h6551, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #165 a9a342c2-de15-4cf8-97c3-07f15b0cc10c)");
unit.assert_eq16(16'hD92B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #165 70f5bf32-5572-4afc-a90d-77d0654564fa)");
unit.assert_eq16(16'h6551, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #165 3edcdc44-f276-4315-a2d8-f4850cbc3f62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 90bd951c-637a-4941-8f4f-a7ad1158a3ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 78b14135-723a-464a-8678-11ef19af07d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 50210407-1a1d-49f6-af23-626c156cacd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 68580146-2a00-4e4e-b251-59ab7b072d99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 46b831dd-e371-4bb2-97d1-ff795ba1a6af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 efcbdbe0-6426-4987-81ae-264b2ce85c48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2685;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC44E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFEEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h2685, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #166 c3d37799-cb9c-4f93-a488-4ac142bfd6d2)");
unit.assert_eq16(16'hC44E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #166 ca73aca9-9e63-44a2-a7e3-20c771a5fd9c)");
unit.assert_eq16(16'h2685, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #166 d25dd1f5-abb0-4c6d-bc2c-92aa09094ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 37e10a27-8c7d-4a5a-b2d5-938575851ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 b4779a21-d095-4480-bb53-c4358da50c41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 36bbe807-4b8c-4be6-918c-02456c33dd05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 440cbb2b-9ff4-4c0a-bb74-75561eaf2f16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 000d1318-ee52-410e-9045-e89a3804dc1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 7cf23977-63dd-4f96-a49f-7b018cbb21be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h25E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h47E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h6C91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #167 2271eaf4-8f11-4392-b4de-29ca577398ea)");
unit.assert_eq16(16'h25E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #167 a4f6c03f-eaaf-4c10-8163-59a442f023a8)");
unit.assert_eq16(16'h6C91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #167 66e78a7d-f2cc-44f1-8d04-dbbd0d5cee05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 9050b165-c13b-4110-9519-1bf62e8c883e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 77bc638d-a158-464c-abff-1c2a219924b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 3842275e-d855-4097-b794-1ef4fa08c40a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 f8e1efd5-6a78-4911-9991-3eea1e850044)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 70c0dc02-f262-475a-9486-30ad8de7a270)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 54fd992d-1384-4528-8782-342e0e056ec6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF824;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h524E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCFDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'hF824, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #168 5f84d4c9-5977-4ec0-9af7-720c33bd566c)");
unit.assert_eq16(16'h524E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #168 00fe5d2c-015e-48ed-a4d2-dd5b941efd5e)");
unit.assert_eq16(16'hF824, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #168 5356b89b-6438-47d0-9247-7cacce49158e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 eca9310b-e3d8-48c1-8104-3a26c798e827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 4cb9868c-a6fe-4065-ae20-c2d575c523f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 38b12936-3b1a-4297-9abc-0d65a6bcad1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 3cd8138f-3a16-4d5f-9297-7865a8a56af4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 2310f18f-68a1-46ea-b4b0-4aa7387a834c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 213509d8-5d14-4f9b-8c6e-0794cd26eec9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3378;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6EC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h3378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #169 fb28df3d-2e7f-4d3c-bf74-eebcb47ad631)");
unit.assert_eq16(16'h42C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #169 a08dc303-1734-462a-af40-0fd4bfc9e468)");
unit.assert_eq16(16'h3378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #169 967ad575-3600-460d-a843-1dfc28f64465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 d6ba2807-be7f-46a0-8978-81921f509903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 1e00a7e2-215a-46ea-95cf-182ad1fa40bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 4eead1c9-3923-4db2-aade-3eb59e3e7c15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 bef6b0e8-5db2-4555-93af-62ad45507967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 a40b5a6d-75a6-4efc-90ff-6ddd355f7521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 b854e12b-b305-494f-bd87-50043ebeefc4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEFA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAED4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8543;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'hEFA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #170 8e54a2e0-0778-4e53-828a-aabfa1a5dcdf)");
unit.assert_eq16(16'hAED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #170 99ca0dae-d313-491a-a4ec-00f6c82b4e2d)");
unit.assert_eq16(16'hEFA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #170 2dd58ea3-431e-4db6-b5af-8565ee0b27b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 2945813f-82b9-4ee3-a777-fd5f7872471f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 9c89d60c-abe2-421b-91bc-464221183f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 38fcec96-e3b0-4f4e-9eee-3026230c8d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 5b5ec546-5d57-42ca-9dbd-8b8eb038b536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 8f5b09d1-89a0-411c-814a-945ee0afa22f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 0b35a326-1d39-4693-b444-a77fddc13b37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB928;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h25A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'hB928, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #171 1488949e-df06-4c9d-bbc6-feb51673eb09)");
unit.assert_eq16(16'h6A21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #171 ad31a705-6f90-4cab-916c-27543df87558)");
unit.assert_eq16(16'hB928, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #171 024cdb19-5974-4fc3-b991-37b0c944f2c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 e12c9ce3-7e09-463d-84b1-40179511ef81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 5ff9ac1e-f8a0-4267-8bb7-43d7f70a5b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 a9148fcf-0b3c-4f2c-8bf3-1fb1dc2e63d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 c313b2e8-41f5-4ca5-a373-4d03f2094256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 66ea77e2-4a78-49b6-b7ad-f7d20160f457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 f260642c-a7c1-419c-94dc-c0cf8b4267ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6415;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h514D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAFCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'h6415, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #172 f09c0958-11c7-4d55-9987-f1e3523d2199)");
unit.assert_eq16(16'h514D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #172 33b87a64-c325-411a-bbb1-403af8c9e390)");
unit.assert_eq16(16'h6415, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #172 253562c6-0316-451d-9c00-25b6e9189d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 6b490580-0cbf-4c9a-ad84-581d9f93e9a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 699f522f-fc9e-4ad9-ae2a-5b34da8626c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 a4436c7f-0786-453d-bc25-e9f4f225dcc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 8914f10c-2021-4389-9e15-4f8c64fbabb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 b2832461-0785-4bff-b1ed-3dce5ef1bc30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 b93eb370-9536-4698-bb95-87bd86f11b63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCFBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h8A2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #173 8d78f577-2efe-4947-bc11-0356f86df2b1)");
unit.assert_eq16(16'h50E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #173 bdcb1d3c-402b-4134-a89d-7c417798e085)");
unit.assert_eq16(16'h8A2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #173 4788f0b0-cb14-41f4-8267-530abff875df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 f4f2a625-d345-4ad2-8c42-bee241d9c505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 3c0a07b1-61b8-4a9c-bfc9-772a43590aa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 d311b895-b813-4754-8868-27272a38a34d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 e9baac25-b7a2-4d8b-ae41-d6052dd157a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 dde2cf46-d7b0-4caf-a6df-54457adbde91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 e3bb8c1a-3830-4924-9db7-49af8729487a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC510;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #174 4077344b-810a-4f7b-9087-a8059b686563)");
unit.assert_eq16(16'h2DC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #174 84e301b1-7dd4-48f4-b6a9-5fc444f7a638)");
unit.assert_eq16(16'h0BC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #174 f6b4ed08-9642-4a13-8999-328eb7099547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 97bcc9d2-bf4e-4f03-adce-df13338562d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 07ea4082-67f9-43d8-ad26-ea3c8930f44a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 8297f156-54a8-488e-b5fc-c3222ec7ca23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 890b9379-2b79-4728-b1a4-8cbc11bd093b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 43f59ea2-008b-4ce9-b99d-627735408191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 a3683ef8-a32d-4cc8-b971-7b2939fba71a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE3E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h7F2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #175 b3e0a190-889e-4ffd-a974-b9afab1e75e9)");
unit.assert_eq16(16'h2B38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #175 3088347c-a219-401b-b134-71cb9fa0ad22)");
unit.assert_eq16(16'h7F2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #175 b2689004-bd67-4789-8a4f-2c0f84ca675f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 375d72c0-d70e-4847-bf44-5a5437057600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 c460fd47-3fc8-4358-b65b-ca7303de816f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 7a33831d-7f7d-423b-b62f-cf4fe4fdacef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 c92dfc6b-da3e-4801-9b51-6e2568face9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 d9e525d4-61d8-424d-a246-551d056dfa78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 c1b5efa8-82f7-4c0a-9f04-c4e2add195bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB448;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h58C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'hD5C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #176 e81c5e98-d4d5-4824-8b51-c13431f18ba8)");
unit.assert_eq16(16'hB448, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #176 3da063d6-76fd-4df4-86e5-554862e8e2b6)");
unit.assert_eq16(16'hD5C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #176 a387500d-4ffe-445f-8446-01a647eaa2e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 1104380f-dfca-4f4e-a153-3330c20887b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 37fd44f7-8619-4a4d-99b9-746afad0e5cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 e270e147-92bb-4905-adf1-db9b1bbf69dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 17d36275-abdc-4f2f-bf13-23f75c248813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 8ecfd92a-954c-45a3-8092-42560e6b73ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 e0a146ae-e6ae-42b2-9508-65c52a9b9888)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFDDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD4EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'hFDDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #177 99bfe34a-9813-44ac-b289-afaa1721f2ae)");
unit.assert_eq16(16'h5E7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #177 26411ec7-373d-4240-8069-67be72a1394d)");
unit.assert_eq16(16'hFDDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #177 9a6d4427-be40-4c58-9bca-7b914e8c3ab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 1b5873b5-4906-4aa9-95b1-7d5df61accd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 57b4935a-2484-48a0-b85a-ea028fb271fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 ac9aa898-0d86-4666-ad23-7eef72ea09cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 c578551b-c1cb-4897-8631-1cd37bf7fefd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 7efe3bfe-f55c-4d93-bd0e-b3afffc43cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 cfd4a49b-93ab-4e60-927c-34c1990c613b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h60C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h31BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB121;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'h60C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #178 fd271240-076c-4b89-845d-b755c150dce2)");
unit.assert_eq16(16'h31BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #178 b4ce15fc-6d83-465d-afcd-a9bf166e4de9)");
unit.assert_eq16(16'h60C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #178 e9bd9934-224d-484d-b2de-a1f2f00b3922)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 2036d894-b549-44d9-a513-3d02d59ac0fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 11ec8840-845a-4056-8348-c4b7ef9931ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 c1d10f4a-5d61-4217-8dfc-062ea972d22e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 1fc7cd39-0a3e-4361-bd8a-bd80b6a0bd0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 29822de6-1346-403c-8ed6-6c6dd1544bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 b05fd2d0-4dd6-476b-8cce-8ba9914384a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h20F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB807;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h735A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h20F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #179 1c0460af-ccb4-48d4-b581-8caf573c0dd5)");
unit.assert_eq16(16'hB807, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #179 20eb2df7-4301-435b-b0d6-e5b3fcab71d2)");
unit.assert_eq16(16'h20F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #179 70ab13c1-f4c2-4280-a192-9e1e80540f96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 18fae995-7764-4d7e-9501-82ead8f2a810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 b66adcfd-9738-4168-bed0-938b52c4751e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 7419ddfd-6a4b-4160-ae2e-9c07fdeb9b7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 fdd76245-d4e1-4580-bb79-cc7402724564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 0108c4f8-007e-4c4d-8160-1ad1377ea9d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 c75d8195-8f66-4ae8-afee-4fd32771cef2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6127;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h934F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEEAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'h6127, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #180 a01e31c8-0fad-41b9-91f0-2b0a8c478d4e)");
unit.assert_eq16(16'h934F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #180 4fa1c238-78da-4ff3-bbb4-c3038a59ad18)");
unit.assert_eq16(16'h6127, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #180 afe73643-2a4a-443e-a611-0e74e5709ac3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 2e5d10da-cf85-4046-be9d-a59ecc720306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 195e7566-c63e-46e1-b3c3-024789905797)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 2ac7e0b8-441f-4817-bf46-beec16735783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 eb8ad7cb-b07c-4302-be86-641c5242a3b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 8d5733e9-9d9a-4c69-9138-4c05a68f9ff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 7fe44c63-106f-4dd8-b6ad-26c480a66fe5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9BA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3A17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'h51E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #181 c27f8c28-b0e5-45ef-a3c3-1392e5fe4e9e)");
unit.assert_eq16(16'h9BA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #181 ab0086a6-82c7-4ad5-90ad-bb674ddffb2f)");
unit.assert_eq16(16'h51E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #181 37267d1d-287c-469a-9354-ddc7af3674d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 38da75f5-627b-40b1-bb05-d242b9e9eaab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 7b098779-e2f7-46a2-b029-33b7750a3c2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 60149670-334e-4e45-8376-64a43910ceb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 df8dce64-4fa4-4931-9991-2b45af6698b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 eda7801f-7e3b-4dd3-99b1-fa01f7c86834)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 7790df4e-ba7f-4e65-9fcf-54907ba167a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBAB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF44A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'hBAB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #182 9b944290-8a62-4037-bfbd-3325baf84b6e)");
unit.assert_eq16(16'hD2AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #182 2d74cc47-47b8-4651-a281-9cb9de2c7b53)");
unit.assert_eq16(16'hBAB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #182 a4466737-4678-41e4-8e7a-2b315f4cd099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 452a3a68-bb08-49dd-858a-667e2cc0072c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 4fad4747-fbee-41a7-a8ed-9f75fdf48dea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 0fcdac80-7b3b-4814-a0b6-94c14db0ce7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 21df366b-2ad8-4850-9e72-29d80e92dd86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 e7c0c71c-1051-4583-88b7-b6a5c0db4362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 7d58b895-3a33-48f6-ad95-3fbf82a4b243)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF84F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1506;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'hF84F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #183 b64c8364-e98e-4f57-b290-01537dfc76ab)");
unit.assert_eq16(16'hAB10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #183 191e39a1-aa90-4fd0-b490-b0e095248014)");
unit.assert_eq16(16'hF84F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #183 6fe30f32-ebec-4bdf-96b4-89e38ee0a46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 536e5d6c-ecbf-4a93-8622-36dc38ff5d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 4c83fb5e-e048-45c6-b775-3f029062f576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 0492a879-560d-4590-85ab-8170d5d8adc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 baa7a7f7-08ff-4714-b268-80c453127d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 f5a1f944-6a74-4e11-b442-3540a31a4968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 36d8726f-d2e1-46b4-ae84-3a6a7025df03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h481E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9179;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'h481E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #184 b59e5b30-3661-4533-9e44-df10b68bbc3c)");
unit.assert_eq16(16'h6C5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #184 52d0535e-d61f-4115-b4ee-1592d07f8c53)");
unit.assert_eq16(16'h481E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #184 6cd5ee55-58e7-4cd3-8a80-e12f173a742b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 e35dd1bc-b228-473e-ae8e-df06435a76f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 b0b6d900-15ec-43a1-844d-082a56d71ef5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 5e7c723c-f41b-4684-9ad4-169bbdfb859e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 c68a4bb1-f4e6-486e-a922-ce2c8968c304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 30050388-0bbb-4767-a0f0-fab51221b208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 5fd06c99-1343-4dbc-be91-e22f99b421fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3108;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'hBD41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #185 50debb30-07e5-495a-b8a7-c3fc185b616d)");
unit.assert_eq16(16'h3108, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #185 91c435ad-8a52-4c91-9df2-bab582f343e5)");
unit.assert_eq16(16'hBD41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #185 6f748c6f-5e17-467f-bcf6-2094246287a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 79229f9f-5632-4630-993f-c8d23926d124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 bff7820e-38f8-4f12-b30a-463c1d78893f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 cff9948d-2cfc-4870-8ada-185cc3fb529d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 b1f68b39-d97f-4768-be23-634d82eb586c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 51d3a788-78a0-48d0-9709-2b8e25c850e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 57fe9f38-863e-4fe4-9b33-afa8ffaf877f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7829;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC56A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'hEA53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #186 41975c78-fcaf-44a1-893e-7ce1ade1fb85)");
unit.assert_eq16(16'h7829, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #186 a615b674-9b7f-4959-952b-d45806cfa002)");
unit.assert_eq16(16'hEA53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #186 9f4e0deb-4098-437f-bb45-51aab1230d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 d94a4e95-0b40-45ac-8034-3555c6a4fba0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 0a1216b9-3840-41d9-87d7-f22442d58559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 e3ada800-ab58-4c5c-a57b-39428c13ee4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 ed8246d1-0011-4353-af6f-4dc641478700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 b1e12c18-dda0-44f9-9f6a-b7414b627ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 070cc05b-91d2-408c-af79-d5d6da30a8e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA456;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h35D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'hA456, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #187 a9721127-4789-4c00-aba1-53e0581034c3)");
unit.assert_eq16(16'h35D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #187 dbd53782-14b2-4ca4-8698-4b156ef855e5)");
unit.assert_eq16(16'hA456, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #187 90439488-63a1-4847-a8c4-e83429f1490b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 c84c7bff-5470-4ff4-82e9-14672aee6768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 22426c31-395e-4b5a-aacb-de689bc37e0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 ab72cb16-f339-44ca-9302-afa6881c2e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 e63b8446-743d-454b-976a-de55e0308ca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 0a691bbf-2385-4acd-b940-93b33d1d82ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 8a54f684-fec4-455a-9d1c-8601148a78d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7FF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h914D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h7FF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #188 bad0d3c4-590a-4ddc-a653-f027678f2d04)");
unit.assert_eq16(16'h8B3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #188 8285039b-f315-4976-b44b-59ade7256e64)");
unit.assert_eq16(16'h7FF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #188 b5893f5f-6df2-4a4f-8368-21c4054f8cec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 d8b0c9ad-a1ff-4b1d-be4d-3e7daf1acfd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 c74c3cac-17f8-48ee-8c15-6a3d8fdc8886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 ea71d210-f16d-4753-b82f-425dfe7759e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 1aa6029e-3afc-48a9-bc50-64b675c9744f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 4f2f3a90-1cd0-456e-9768-068590f07252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 0eb24d0a-55d7-4970-8837-be25bb486bf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h51CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'h7B97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #189 9683fb3b-2907-4a17-bcd3-a8426798a619)");
unit.assert_eq16(16'hD2F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #189 9151b658-92e4-498c-8682-902f1929d807)");
unit.assert_eq16(16'h7B97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #189 1d0afc13-d58b-41b0-a303-684620e69326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 3e9f1a11-6158-44ca-a616-2e8b38320a3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 a56efdff-a165-48d3-a4ae-46d7cbf08e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 720b872f-ae24-4ed8-be0b-805aa45c2766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 16db8e10-7746-48bc-8e05-92e43a87e63a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 ab062051-d1f1-4098-8ee2-15664a41acd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 5984b3bd-6154-4e41-bef6-8cec2b935083)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h0B9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #190 118c1efe-f8c5-49bb-a5ba-30d8a663b6ea)");
unit.assert_eq16(16'hFB3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #190 eb3e04c4-6f48-4885-97fe-7cefe1ef65ad)");
unit.assert_eq16(16'h0B9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #190 e63b224e-2931-415d-a0a0-6b6b882dada7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 0c716c89-2339-4f52-a2c1-f70e6069ada4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 18705be3-75d8-459c-8913-e8e9f8c8f331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 dfa800ba-aaa4-42aa-898c-69483587da3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 fb7ab7a4-4dfb-45d4-95e2-04f7290cba7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 5fa1cd94-1c67-49b3-b9da-6311050158df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 9eb8a177-6044-4d98-af8f-74173cc2a10f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h66F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'h66F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #191 656c59aa-5538-4582-b223-b4faf489d2ef)");
unit.assert_eq16(16'h3EB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #191 36f4b5f2-9b8f-48bf-9e0c-d3e056f7b356)");
unit.assert_eq16(16'h66F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #191 e8c0e9aa-d634-4769-9cd6-9a8a1080a7b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 5bb86f96-02a2-4598-9f3f-9c32985f2bb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 3292443f-d41b-41c1-a650-24800bbd688d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 0ca2a7b8-d48f-4e03-959e-c5b5f1211c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 5bf7bb5e-c1db-4ab5-9fb7-6f776238207d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 bee821aa-97d6-4108-82fa-6650df8648bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 21883ad1-effe-44e0-a772-d6f96d293e33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD874;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6127;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'hD874, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #192 ba96cb5a-2252-4288-b549-95b109375aaa)");
unit.assert_eq16(16'h5F0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #192 ec46d9bd-0011-4050-9499-3492e7b3146a)");
unit.assert_eq16(16'hD874, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #192 b34c9901-9baa-4fe6-94e5-33aa01196cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 e0e16056-c90d-4349-86b0-26bd7293b0ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 783b3811-23b8-4e68-91f2-d678db99b098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 ee2a863d-a940-4c9e-ab15-a8bae29f46b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 17710102-b4ed-438d-8e1c-d272bc090691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 4344a4e7-4733-414f-876e-552a50573743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 2c716407-64af-4110-a266-90b5d1b6b996)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE103;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE0C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'hE103, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #193 ee008390-a227-46c8-ae32-b3cd83da25f3)");
unit.assert_eq16(16'h1DBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #193 d63fee34-0fac-4430-aefd-a7fb63557942)");
unit.assert_eq16(16'hE103, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #193 a59af0c2-905e-406e-be36-837797133e51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 05188dcb-f6f7-4491-8a01-f2234473df42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 9a69ffe7-bd5e-4546-abde-69da0d793cf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 caa3e537-6f89-48a1-bab1-f0d82c836d2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 19bf5620-7490-480a-9599-a358a6cdd0b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 1567dd2a-7b6e-4509-8c37-546bcdecf110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 d66e74f7-9065-46c0-8cf6-a0ae58cf5e67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD02C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD924;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'hD02C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #194 a17c1742-1237-414e-9959-8ce01a4d5b60)");
unit.assert_eq16(16'hD924, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #194 547aef10-f5d5-4d7a-88f6-c952cbea26af)");
unit.assert_eq16(16'hD02C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #194 dd178a53-85e0-4ea7-83fa-1abd491fd2a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 65489f7c-0a2e-48fe-9206-69da7cfad10d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 d97abc95-2538-401a-8802-041be6c9e4ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 f169a22c-1a64-43a6-8bc8-154fdc909ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 cde794de-6e69-4c87-a889-fe8c0b0ca8de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 031684e6-f00a-4aca-9864-83236cc4cbb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 4e597075-1efd-45b8-a588-79265aea5b02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC809;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h88B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3646;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'hC809, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #195 a8337b3e-4b64-4a1b-8a28-17ec6470cc46)");
unit.assert_eq16(16'h88B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #195 76a046e7-b479-4475-afef-bd489c9ac57d)");
unit.assert_eq16(16'hC809, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #195 6d9804e9-ab14-451e-a05d-df5cd1dc3d9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 83823a00-c12d-4c3b-8b2c-6e36d5a002bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 b569cd83-bef5-4d46-ab9e-9632d404995a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 7d82ce90-d2d8-4567-ad14-4b6911c4b5b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 b65ae198-c2cc-4a59-acdb-ee774328aaf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 cbeaefca-4808-4187-90f4-e7234e64238c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 59423d6f-d149-412a-b428-3ad3dc09f3ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1BFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5529;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9675;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h1BFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #196 4d01083f-a333-425b-8ed9-4a8c705fff4b)");
unit.assert_eq16(16'h5529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #196 975a1d75-ef09-493e-a18f-511ad77a6ce0)");
unit.assert_eq16(16'h1BFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #196 7369188b-8a9d-45f3-bf07-616fc70aa7e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 c9491d5e-5cd6-48a3-b3b8-4ad34c92b499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 d1b419b6-354f-4df0-bc0d-4279e479b97d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 82edad78-0b1a-4723-b4e4-1bc7a1d4b235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 d5aa5c69-d339-4b53-bcf6-d6ed1fc8da74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 2d2f8bce-7e2f-458e-be1e-48fe64b92dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 75ee8e77-551d-4382-a58e-9fbc3fea0b9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB0C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE808;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h497C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'hB0C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #197 4a7afee3-db62-4680-8368-fba505b34107)");
unit.assert_eq16(16'hE808, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #197 d51afe4a-5f4a-400f-b7eb-1506a606d07b)");
unit.assert_eq16(16'hB0C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #197 dd600bfd-f1d0-4ed0-b34f-1fb114e05e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 3b0acbb8-6a1a-45e3-aa94-132cc30f2921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 0b2097c6-c3a0-4cf7-a025-d0be49a9d620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 b5b57c1c-e4c0-4ae8-8d9b-2975c572e30e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 3e390a74-0945-4e4d-b055-6346662e8575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 d93eb6cb-05b1-4a75-b66b-e9adae406f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 dc6b2a07-447b-4681-b113-85fe481e26d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAD0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'h76BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #198 04d21943-c706-416c-9f5e-9b4a0f7a8ae5)");
unit.assert_eq16(16'hAD0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #198 ead45d71-2d71-480d-a53f-6ed07339af95)");
unit.assert_eq16(16'h76BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #198 ce079872-3603-4481-ab0c-ae8c622d1085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 0e179417-f60b-421e-a52b-a5dde5514abd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 7ecad1d4-1abd-4435-95c5-23943c152059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 23d5f605-129c-45c1-8b3b-4c23992c822b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 f98f5564-2e0c-4998-9a94-3fff021d7de5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 d29c9c40-51e9-414c-a709-d16c0ed37c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 a3bfc028-4eff-4454-b634-998a050d19f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5A5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8FF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6354;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h5A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #199 952c2ec6-b6a9-436b-a67a-05ed4c74828b)");
unit.assert_eq16(16'h8FF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #199 7d20537c-b4cc-4577-bf21-a251e9204ed5)");
unit.assert_eq16(16'h5A5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #199 9ee123a0-e06d-47ef-8ef1-0d8c8f3310c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 797d431d-f052-499b-af26-3251041a8829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 15c42764-6e05-4cd0-960e-37e91c29c9a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 c832bdba-addc-4b53-82e3-ee2f6d49be1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 76bf0e81-6fa8-43be-ae0b-410afe6a9569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 8b172d01-b73f-4907-8d21-7edce6c41b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 35daf72b-549c-4eeb-a2ee-ee7e06fc60bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h109F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9929;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF12B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'h109F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #200 d31c3d29-5051-4958-9a4a-e2d1b9a1ff2e)");
unit.assert_eq16(16'h9929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #200 245e0fa6-4aa6-402f-81ef-57fa3216f503)");
unit.assert_eq16(16'h109F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #200 2a647025-0414-423d-85b6-253a43501255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 742a9bad-377a-4c9a-a2bf-8dc152b6d816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 68061e38-2631-4ecd-afd8-c97ffbc6e630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 5602a093-7d4a-4851-a3a7-28fc8e4a65a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 4783f395-e554-4f4c-a796-34a5ce562c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 2ebb55a7-0d6f-42c5-894f-d671a61f6b1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 89afd64e-5337-48d1-94ad-1526816d7c3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h079A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'h85C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #201 98fc46dc-0b9e-4624-8e28-4986788c647f)");
unit.assert_eq16(16'h3E21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #201 d8d05cdf-9d5f-4a68-a707-c9787310d630)");
unit.assert_eq16(16'h85C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #201 6688bbdc-3bca-455a-b9f4-bf75514ca3a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 1e9b5d1e-82ed-4072-995e-9e02b4caa7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 2395b67c-b8c2-4d60-b678-b17b223c6838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 6f65f5d9-26cc-440d-b6d9-a0b22db75c90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 37585400-6cf3-4a02-a20c-bed4a153f315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 70396fb1-a2d6-4461-8b1a-60b83a96130c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 6d8d50a8-fcf3-4959-8132-4d3f832c9044)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3431;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC6ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'h3431, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #202 2c7e249c-f3a2-4c1b-b9ed-e599f21b8143)");
unit.assert_eq16(16'h4D7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #202 c5be39b4-0e35-4315-adb0-a184318a2ede)");
unit.assert_eq16(16'h3431, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #202 48921f62-d20c-4b24-b4dd-0960f7092113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 df1bc03d-7e50-4e9d-86dd-e06be3e81434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 4a27bd2c-2d55-48f4-affc-a01115f33632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 1b9398f8-0a90-4494-965b-1233a410a8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 42253664-fd7b-4fec-8958-e6ce7e946026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 102f8e1a-e0b6-4919-95cd-0c88a84b044f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 ed308736-b073-4751-89ab-39e6f989e204)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC5A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA194;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD6EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'hC5A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #203 43593948-51de-46e1-8ba7-96313ef6399e)");
unit.assert_eq16(16'hA194, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #203 c5080cbf-6f1c-44a4-953e-b4d2363aae6c)");
unit.assert_eq16(16'hC5A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #203 d75e16c1-cf1b-44fe-bf44-c81b2d17427c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 c2a2138f-d18d-4b07-b7d2-22eb53d6d4e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 af2d160a-811f-4b29-ab19-0b1fb7e15bf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 cd756908-9f66-459e-a2a1-d47927125cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 19548736-77db-47ba-9374-31a51c4c5aa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 6cb9385e-5d25-40ab-acb6-b1a0370cc1ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 28e17766-ce51-49b4-90c4-c0ea2d2b7639)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6162;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF538;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'h71A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #204 6b1976c5-41e0-4847-9c7c-0509a3fce79a)");
unit.assert_eq16(16'h6162, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #204 2f191f3f-d3b0-43de-82b6-7e8d3731ded9)");
unit.assert_eq16(16'h71A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #204 4ddb26e3-6d2c-4dc4-b391-2f6741cdee45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 ecd306e4-a96e-45c9-81ca-746d0607fa27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 93d6b11e-3247-4ad9-b89c-e2c9d285d190)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 08dd2aaa-8cb2-44a6-bddb-af21cc41dce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 8df854ac-b9b4-4ffe-8e0d-9d2bff54cb69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 d4254a7f-1efa-498d-87e1-fd54fcaa04b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 be49de59-3aa3-430b-9cc0-a2c208b05b67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6EED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h6EED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #205 558fe58c-2977-46f6-aa69-c8907546ffc5)");
unit.assert_eq16(16'hB9FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #205 c010fba0-d29a-4258-bae7-f095deb65488)");
unit.assert_eq16(16'h6EED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #205 98ea6446-e5ca-4141-94ef-7ee7e5db3826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 2ac73e8c-b3f1-45da-a0aa-a78eac4fdc79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 fb90a862-a671-46eb-a5ef-0ccd2c15c90f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 0d2a37da-fa10-43ea-9811-2afd217afbd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 c4b969f3-3274-45e1-87a8-30d2b20e4e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 a898f635-a5b9-462b-af10-3e704b2f75eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 ee3c923b-4289-45e2-874a-6521c803822d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8FA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5481;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'h8FA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #206 82417314-36ce-4c0f-a86b-fafaccb4dc85)");
unit.assert_eq16(16'h5481, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #206 7661ae42-9f33-4693-a812-b95ca8b7550e)");
unit.assert_eq16(16'h8FA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #206 256a13bb-2d88-4b68-a201-d8a0f47fad3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 cb9c9f8c-3f48-45fd-992d-ae6276083998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 a8d67c9d-0eb9-4637-8f5f-6fb12ddee84c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 b1317818-64d5-4674-982b-5fae1f2e70f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 9e1732b5-e17d-49fe-8163-cdf5e48450fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 4fa52969-5170-41e7-ab03-263a57813139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 1238e66a-8a23-46a8-bdc5-eb729580bb5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA365;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h95A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC0C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'hA365, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #207 53fa59ce-0227-4002-b9dd-718ae22f40d6)");
unit.assert_eq16(16'h95A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #207 f5254c9f-2074-43c1-b946-38d8ec5f279a)");
unit.assert_eq16(16'hA365, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #207 8d5eaea1-f4d5-4f42-959a-61c999000911)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 35acd8be-5b51-4b0e-84d8-378566036715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 6b2637a7-39cb-41cf-b670-19aee016f174)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 a865c452-dc5a-4741-804f-2fb17fbc7ed1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 db8458d9-ff5f-4a78-b64d-eac270268bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 1c0c67df-8daa-480f-ba6d-82319ae9b7dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 47bd5adb-5964-4e0b-9179-aa34e27760eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9AA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h71A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'hAD5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #208 3e126546-0dc9-4ca6-b373-52bd91831eb7)");
unit.assert_eq16(16'h9AA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #208 ae374fac-f56a-4921-8ae2-3f13acb5f96c)");
unit.assert_eq16(16'hAD5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #208 d82e27c2-dd96-4093-a018-8eede0f2ea2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 cd772d46-5be3-444f-af2e-41784631766c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 ec9a0bbb-5a8a-4014-92e4-2e8e59f7cb9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 23495471-da03-4345-90ab-f437c1af42a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 51f05c63-bc4a-4692-8129-20e0b917b5f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 a3fab55f-55ab-4a91-bdd2-bff299775f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 3b83ed40-1f35-4636-8c6e-ccc0ea9a8620)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA1D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA12E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h2F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #209 8895bc9e-cf1c-43ef-98af-75ebcb90db54)");
unit.assert_eq16(16'hA1D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #209 7c9061b2-dc9a-4e90-8cfa-b6ee66932e0a)");
unit.assert_eq16(16'h2F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #209 930275bf-9d6b-4879-82d7-3c99686573dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 12790d60-901b-477e-a5c2-6b506ff80704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 5a85854b-51e3-471c-b834-3ad0078e0a3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 2c8cdf8e-5eb1-4069-8434-1695c8d39880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 92526348-09d8-4823-bb63-a79a792c2481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 7adc7c33-d764-4b8e-ad14-9da1dcf2895f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 8316b1ae-126c-4506-8c06-9bc4cae66d05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF21A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC633;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5389;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'hF21A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #210 28dffc68-9e37-4f07-a956-48590a4516ba)");
unit.assert_eq16(16'hC633, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #210 8d1e9aad-a19b-4574-a959-4f9b094799c2)");
unit.assert_eq16(16'hF21A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #210 1734af55-5f31-44cd-8ce9-d19f685de997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 00a83a35-af12-4d18-be3c-be9d86c3a98b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 72485767-8563-4ad1-b486-97ef561b0503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 0cba27ba-ff58-4574-a914-a06301faba4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 e8b3bcca-0246-457b-8ebe-74d33541c7ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 e86aedae-6cd1-4f2b-955b-bb6a86cc8fd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 ed9a6921-a43a-430a-918d-3aee9471b635)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC007;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8390;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'hC007, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #211 0b16ae1f-dc64-4cde-869e-c42197842c03)");
unit.assert_eq16(16'h8390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #211 2be976ec-bead-491d-9e0a-cb55a97285de)");
unit.assert_eq16(16'hC007, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #211 64dd50aa-7e55-43df-8a2e-5fd5c3da7647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 0b7aa8de-d6ae-4ab0-a16c-ed85acc7b518)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 516f5630-fbfc-4f6d-8855-da74b1437e85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 89495d69-8818-47b2-933c-54d9f59b28c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 5edc39b2-9e52-4e55-b94d-f0b373df3bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 28a81e69-53e2-4472-ac5b-dbc3169d42bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 3cc94674-bdbc-45f6-85df-885a4b610a73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hADF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCC42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'hFB95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #212 9037a212-7039-42fb-8d64-4d85f212b1c2)");
unit.assert_eq16(16'hADF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #212 92ef0aac-7eb7-4d0f-89a4-68a68a6cf71d)");
unit.assert_eq16(16'hFB95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #212 5178ca0e-999d-498b-876e-ed817af315c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 666d6ded-01cf-406d-a8c5-7d55efeed64a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 c60edfac-7350-4dc9-b3c9-2064d12be276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 7ff73b02-d0e7-4c19-aad0-715f87dabd8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 e955aecf-5e62-4643-b387-f15d9467fb02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 5a8fa860-e09c-4beb-b7a5-0cd24cc5e5f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 4f42d6c4-ea1c-42e2-8f4d-3ce10c508cc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h70C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC4E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h4E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #213 760b1490-7c2d-4188-b466-8fe3c3a548a6)");
unit.assert_eq16(16'h70C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #213 dead4d07-5f6a-4334-ba65-5ea23d97f559)");
unit.assert_eq16(16'h4E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #213 ed5e15cc-a6fb-420e-ace1-5771ba49cf4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 0dbaf8fc-2d28-4a1e-83f3-2bede8724e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 96eca521-e1d0-4b8a-a782-fe447e09dfc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 9421ccaa-1061-44b1-95ed-2fb2e23d1dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 3bdd91b0-d7a8-4d77-9406-4051cdb4f64b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 5b1fc573-3ed0-486d-b7cc-bb17f9d865fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 5a7a399a-0862-44ec-913c-bf42fef7313b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6451;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0195;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'h6451, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #214 a2d040fd-084d-4218-8a58-faf90c0551eb)");
unit.assert_eq16(16'hB9A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #214 3a3a908d-65c1-46f8-9266-7a7a17b1e1be)");
unit.assert_eq16(16'h6451, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #214 5266d99e-96e8-4ecb-9f13-189745725a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 99e293be-8120-4f5a-95ba-2e0746abeb61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 8b5e4534-1fe9-4371-9057-201d2f91b61a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 a76ccc72-b793-4d97-a81a-f020f97b3e90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 83ecbd2e-39a4-4ea3-a62d-90aff3374718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 ef0017e8-a9b0-4d91-bb82-6e6f63570d3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 47a4c155-e173-4ad5-bf2a-a2a5d64eb085)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB477;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7302;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h173A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'hB477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #215 c607fafa-3404-47c6-98c5-e611a2f5caf7)");
unit.assert_eq16(16'h7302, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #215 dd541ad4-e52b-4899-9887-ed6c099a04e9)");
unit.assert_eq16(16'hB477, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #215 1ffeedc1-2ccf-454c-b95e-ff965a2a6892)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 d7cadd11-0d2d-4a00-a06b-01f22ae277dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 0f7ed461-1e8a-4bed-985f-861396dfa57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 0186bdcb-a008-489a-ad2e-accf526aa53e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 ff2817ea-1ded-45fc-9f53-04f14477128a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 524ab63e-18ad-4d82-8ed7-40f972c799c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 31c2a522-220b-4b4a-8164-eb8206025fa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD851;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8EB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2525;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'hD851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #216 e98bf1b7-c95c-4a3a-8c62-4bf6fb185d72)");
unit.assert_eq16(16'h8EB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #216 c2286d43-48d7-4850-b502-a2682451fae0)");
unit.assert_eq16(16'hD851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #216 330ff07d-e877-43c1-8f5a-985a557c6179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 c0327535-3a43-490b-8081-9c5511459479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 33830d4f-a7b6-44be-86c6-00a770e64bca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 7bed493e-37c4-4c0e-bb19-036ded8c891c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 623b9317-205b-4fef-abee-2e53dc059e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 190e4f8e-3eff-456f-bbbd-1e80ff7405af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 f5e33caf-6bcc-47d2-b01b-15c6e55f274d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBBB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'hBBB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #217 b9310372-5d1f-4ad7-98b0-eff36873022b)");
unit.assert_eq16(16'hAA5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #217 11eb4c72-ead7-42ca-9c57-48c777665449)");
unit.assert_eq16(16'hBBB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #217 8dc871eb-41aa-4122-a5ae-2339dde24bd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 9033cc09-685e-482a-8ceb-4937037181ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 214e57aa-6d90-4512-a72e-ca50148eb450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 950ff22d-4b68-4907-bb12-3cf98a2967dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 70d8ec63-22a4-434b-baab-5186a52df458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 9517322d-7762-4cf0-bd23-9a7d693d2d8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 459cb6a9-f1d2-468a-9e38-4945d4ff0776)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h917B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2666;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'h917B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #218 c29ea063-daf7-4767-8178-b6c027ce6641)");
unit.assert_eq16(16'h2DE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #218 3ffc1a65-2e85-4920-a116-c1a9e4aa0a6a)");
unit.assert_eq16(16'h917B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #218 b45da9ff-2436-43c4-994c-1873270f983b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 be8922dc-f391-4461-a0f6-61e71f4f3be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 28b34893-c2d3-47f7-b066-fc1d9867e226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 338ba38a-a006-4cd7-90c7-09e8087d9ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 3922e3fe-8d56-4c7a-938e-7f225b1b4917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 b8276f93-be87-488a-a397-1aa8d36e141b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 98035c49-69cf-40cc-a08e-f1143ce925d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE26E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3DEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h3A39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #219 53cc91df-55a2-4f57-bc4a-8978af8821bc)");
unit.assert_eq16(16'hE26E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #219 114e176c-aff5-4eb6-8156-7c5c7785ec76)");
unit.assert_eq16(16'h3A39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #219 81e68e3a-285d-4f10-a51a-da2887100b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 5aeff992-e09f-401c-ac10-a5ac81bda8bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 5ebd4103-c1a0-430b-a99d-4e0c22e75af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 8c5ee7df-2654-4411-9f39-a3434c57da4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 222da3d2-dd4c-457f-88c4-26767f1a59a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 9c468ef2-a26b-47e0-b8f4-46127b729c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 5641a273-a5b3-420b-88eb-1d48fde74290)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1767;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3246;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'h1767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #220 020eae8e-256b-45e2-9d17-780e9c5de1d4)");
unit.assert_eq16(16'h3246, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #220 3f24a635-2d24-435b-9f36-280b100b366c)");
unit.assert_eq16(16'h1767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #220 1a725d31-7e0a-4c52-8979-7bcfd21e9448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 72b7cbe2-e2f0-4ca0-9f24-be1a720791b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 0d7b3ef5-194e-4431-9d4a-debde7153956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 d4f2ddb8-fc04-4ab2-816a-ff3269d09743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 90dd861c-71fe-4b10-a759-d4e03ee840e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 e01cd119-9c18-406e-90d6-65946f30c329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 6e17b46b-de2d-480a-9f0b-5d3ae9ae8330)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6AF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8887;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB56E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'h6AF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #221 b5d1923f-fff7-4b0b-9d6a-d6c48db053f0)");
unit.assert_eq16(16'h8887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #221 4b2b06fd-275c-4e48-99a0-4d53132e5b7b)");
unit.assert_eq16(16'h6AF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #221 7369cd2b-f3d9-447d-9f89-e503ea95b526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 5f5e4579-ac39-4764-b107-0e0c4e833dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 70db3318-f259-4ad7-a40e-d6f9a0a35ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 d27fd7fc-00fa-4d75-b883-06f76dda007b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 25982672-862e-44d0-8c93-84fd63fc641a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 ae2d3cb6-ccce-4a51-b0b5-6a3176846b0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 e8b37b6b-3a90-4379-9c4d-ba58a52d2bb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h13D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'hBC61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #222 c455ffb7-33e3-4d9b-9674-3354cbcde6b8)");
unit.assert_eq16(16'h13D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #222 b2c0c5aa-3f84-48a3-a792-936ae7383950)");
unit.assert_eq16(16'hBC61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #222 4c841e4f-944d-46e5-a70e-d0983b4961e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 ef134a32-fe43-4071-81f7-be55ae29e083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 136b3407-441f-4f11-b948-bd6ef7825657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 5c9e6843-25ec-4bb6-9ba6-d15c989b8183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 25734b98-6bd1-4883-8c97-75fd12f73e2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 930b1a37-30e2-4a4a-a819-2dc03e8f6a5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 4bed6a4b-73f7-4ffc-a36b-672b116c1f2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6886;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'h6886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #223 193fa02a-f55b-4d37-b309-1360f79a337d)");
unit.assert_eq16(16'h4D9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #223 05151a68-48af-476f-889f-f5a6ef548b0e)");
unit.assert_eq16(16'h6886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #223 edde9701-4b27-4825-b12e-79037ef9a500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 0c0f8290-e5f1-42b2-ab11-e2f8d8c70200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 6dbc41c7-0148-4200-aebe-bbf67bbc2d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 40b29214-50e4-4b08-9511-d61f35124318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 bcc569c9-c63b-40a2-820f-ca0936e5f10e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 a94ffa0e-e9a9-416c-af64-eaa13405fa62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 da516384-28f5-478c-94d2-acde5cb19bca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE00F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7996;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'hE00F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #224 3ff4672a-732d-4e4c-8c63-37bbaff6cd98)");
unit.assert_eq16(16'h7996, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #224 203ea95f-e108-4a23-9989-7591fb745a1c)");
unit.assert_eq16(16'hE00F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #224 223f69b4-b41d-4fa0-b134-14f0b034cdb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 bc245640-9488-4266-8854-f485af708d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 602c3085-7a22-4753-b1ae-cb26a6e858f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 e82fa687-7d6e-4ff1-8b1d-aa98e6c4830c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 110eb992-a6e6-4416-bff2-c77eb2d61dbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 a5ddf866-3af9-44ff-b3d4-97c85e585ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 00a59530-e710-459f-9b38-7b9493d5a262)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD026;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7A06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'hD026, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #225 ac184e9b-bd5c-4efc-9d56-76079ad06970)");
unit.assert_eq16(16'h61C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #225 66e05d4d-6144-4d78-a910-66144645b466)");
unit.assert_eq16(16'hD026, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #225 c55324d8-955a-4c20-a36f-143c8c87af5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 3e6cc8e7-298a-43d6-bdc0-e01a06c4cac6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 371cdcd9-c353-41bc-a318-47ae5224313d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 6ee84bc3-ed0a-48bf-9677-954c286decaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 083e713f-dff1-4cb7-93e7-921efec5608f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 55e14f02-56da-471c-ab2d-8c5e668741a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 d251ec4e-a54d-499b-b3d9-4f23d5295a6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC840;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h9D79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #226 09fb20ae-e70c-441f-9a63-644010f05ccd)");
unit.assert_eq16(16'h7F9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #226 52ae8b55-4a8c-4af9-81aa-bfae0226cf9e)");
unit.assert_eq16(16'h9D79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #226 e6c8c2b8-b88e-4ac2-8828-893ea7e7626a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 de975daf-f49b-4986-9eac-b2574c8604ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 1d4673fd-efa0-43a1-9bf1-abb608f1da35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 1666b86d-1488-4e01-aede-30ec1e3f36de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 08eb586f-032b-4a33-b9ae-1d7406005aaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 f7107a75-a6c0-41a4-8989-216503814f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 0986e88e-5a45-44ee-82b5-0c80b0270e8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD203;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h59A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'h9B3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #227 b40e161f-530f-4e8e-8e9b-0f6a2e08749b)");
unit.assert_eq16(16'hD203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #227 2aeb8582-a8de-49ba-8aa5-ec429ddbb6f5)");
unit.assert_eq16(16'h9B3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #227 40ac1aa1-dd5d-42eb-94a5-b7adddabc155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 08db45ff-3978-4f8a-8995-d84176535b86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 7b99e406-1e74-49fa-9407-d9ad3a5e26f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 c53eb592-a93a-41d4-b413-d690650fad5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 fed1d1d7-0164-4903-a9b4-04ec172b0bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 8fe697c8-d137-455a-be80-fc270bfe767a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 39ece3a6-85c2-4513-a670-296dea3d5776)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3199;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7BE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'h3199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #228 68427f8a-d70d-411d-a55c-edda0d139908)");
unit.assert_eq16(16'h14D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #228 b2464b29-97db-4a44-9b15-c344ec49da59)");
unit.assert_eq16(16'h3199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #228 b593274a-86a9-4b57-ae91-a084caf05a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 e4d4c0ec-2e43-4a44-a939-f134dc3b5b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 7ee068b6-167b-461b-987c-cc64ef527239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 28d4c2d3-aade-4d04-9df5-97bbf384011c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 ef245fe3-d7a6-44b8-86b4-92d1399e6989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 4a9ec923-27aa-48d0-a70b-20ca9103a2c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 84863f63-6b9d-4e17-a6e6-3397717e3771)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'h31F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #229 d77caf90-dd7d-4f65-9ade-7a011367ed8c)");
unit.assert_eq16(16'h5A93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #229 93c323d7-4a1d-4a0a-bb48-2c6bbc8fbd7a)");
unit.assert_eq16(16'h31F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #229 ed72b820-b578-4a66-9833-4996d5734eab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 cf33c773-9559-46f7-a899-3d2cc481b3b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 b0054400-3296-4a4e-8669-f3049793aaad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 50c77826-8f2c-48cb-9df9-506deddf02a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 0d7f0fe6-c410-4954-92a0-e8f600f18681)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 afcd8c8c-16c0-4fb0-82f0-1471a87405d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 d3f84e33-3d1e-4d37-96f0-91e667c59654)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB190;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h55CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h22CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'hB190, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #230 552bdba2-7f4c-4d3e-b944-2ec0fec15e92)");
unit.assert_eq16(16'h55CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #230 dd3c69d6-79ea-4c12-adbc-631a5f48da46)");
unit.assert_eq16(16'hB190, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #230 1f102197-d37e-46fe-9678-7fd9e143bd02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 79716de1-7a97-422e-896f-dde0578f6021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 6ac616ce-56a4-409d-a84e-c1b97e47ba41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 897877c1-8205-40b3-8f11-03a46512ab12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 2f7ffcb5-9b44-4b03-82fa-d43c5d4247dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 a85b1012-5560-4e74-86fb-dfea635a08be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 cb466e76-7614-4cfc-834d-ec977ddb1b73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2593;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7C44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE608;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'h2593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #231 4d79b779-ecd6-4db2-b04a-7e84d213bf35)");
unit.assert_eq16(16'h7C44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #231 fbf7c9e4-1373-4f59-a58a-4f8a62783ec6)");
unit.assert_eq16(16'h2593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #231 4db0ca77-a5ce-4067-bb67-d8f1a2bc4d21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 2cc7b72c-ce32-4b80-a162-1da88ab73934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 e2a94dbf-4190-4e6e-bd60-f6e215e2665d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 aef13772-40b4-4996-84df-616d2857d3a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 ec1a6526-380a-423c-8f24-98a5c33dbbd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 20a4ac68-e8d8-4e97-98e4-746bfc327d42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 9d438b8b-a6fc-4b3d-b091-4fba671d4383)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAAE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6711;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'hAAE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #232 acc1b906-801b-44e2-b7dc-effcad57d01d)");
unit.assert_eq16(16'hAA1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #232 cbc68c53-7f34-4c30-b4ef-3d676708f864)");
unit.assert_eq16(16'hAAE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #232 4d192134-1297-44b8-96fb-f13198dc1c8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 9f680c92-effb-4c21-99d3-5dec5c413687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 872f5227-02fd-40cc-b7d7-7e2160f5d85d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 42277331-7012-42e4-bb70-3a7a33115053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 4630b1c5-7965-4673-bd7b-8f345cde2e8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 a0d72340-d404-42ed-b7f9-1d3b08236bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 0756c82a-42ca-44eb-a7de-d27009a4943e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDF36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF59F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'hDF36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #233 238fc5f7-6ae4-4a3a-99d4-404df0fe3f8e)");
unit.assert_eq16(16'hBA36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #233 9a2781ba-3cc5-43e4-8633-e0dfa255972d)");
unit.assert_eq16(16'hDF36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #233 2a045bb3-acfa-4ec8-9840-4c8cd722487c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 3d4ee701-34d5-481b-bede-01e3df9fa52b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 11f715cc-68a4-4f33-a4a6-490558668eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 0a8f97a6-578a-4ffd-8f03-ad81a3a8bb01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 1b70ad20-29a9-403b-9a69-de28d400ad2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 5989a19d-013b-4491-b370-3999643e3010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 b9d6b025-5ebf-4f33-a2bc-93735d83bed2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF599;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6BFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'hF599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #234 f3cac469-fbf8-4e9c-a816-c94d55f6711c)");
unit.assert_eq16(16'h6BFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #234 dcac0243-4f7a-48c9-8e97-38af7534add1)");
unit.assert_eq16(16'hF599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #234 42c75810-7697-4727-93ef-3aebf4f98c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 3e201d65-3f94-4e4b-ae3f-575858707430)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 bb93b57c-1c09-4a7b-8331-b4e5189b373b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 719b13a8-3451-44f9-b0ee-1b000d6eb5f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 d7e4f0b8-1542-49b3-8b68-a037ea5edbaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 56382c31-3ec0-4e90-a630-dc18639ec6de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 cf0d4b99-2f76-4c40-9c64-c54c29d78700)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h24BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4EDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'hBD13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #235 475aab9c-7edc-412e-b18e-64cf13fb9ea3)");
unit.assert_eq16(16'h24BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #235 ddb43370-f653-4c56-8a48-0ae5bf54cf63)");
unit.assert_eq16(16'hBD13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #235 952d8922-e252-4d25-a439-853d55aa278f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 eb97e7e6-8cb5-485c-a83d-ce0609e620a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 373e55ee-af4a-40c6-83b4-5b848fb2577c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 203f6696-d184-4827-b960-681351ed2edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 ab70fa81-53a6-40d1-8581-3e2b3aaf85d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 c317a5e7-7d12-4760-b893-d997686a2e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 ac3c7bc5-e8fb-409f-96cd-0e820f50fa72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE020;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7363;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF237;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'hE020, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #236 cfa01c42-c481-43e2-850f-6aef94d68e55)");
unit.assert_eq16(16'h7363, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #236 bd24ff5c-b91f-4a21-9fe8-8ae9035d306c)");
unit.assert_eq16(16'hE020, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #236 dfac6f6b-b25a-434b-afd9-d4c8a7961bda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 58db3c86-3d04-49e4-9ea5-08dbb3b6c1c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 d6d5e612-429a-41f3-8b42-de6863a2b4bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 ca4cfe85-ef91-4a25-aac2-c20bfbc93b4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 bfeb74b2-2b03-42fc-b2dc-5beb7b12562b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 9a4ee73e-feb9-4a4e-8d7c-22b4e205f05a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 a0646f61-a859-4b7a-8de9-da0ffc7ec390)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFEB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCFF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'hAD16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #237 1c5eab22-9830-4675-bd60-5116c8d61cc9)");
unit.assert_eq16(16'hFEB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #237 3ab0bfc8-7a69-4278-b1a7-333f843be2f2)");
unit.assert_eq16(16'hAD16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #237 3fe9cb99-87b2-441e-93f5-cfe2c0e86e8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 bcf79892-14ae-4219-aaf0-1e99af653aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 5cee9d2e-99f6-4705-9305-92942a6e682e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 befe3dc9-9120-4284-963b-512cd6664af3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 44b1d691-172c-46b0-a0e0-6d34233e6e57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 3248b595-d55b-406c-9ce9-54801cea9580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 5e132bc6-62d7-4a4d-a1db-d9779e0e74f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'h2A22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #238 8c499d45-253c-45c8-a1b5-23dc276e44fb)");
unit.assert_eq16(16'h66D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #238 437a3cd9-ca24-4bec-a6d7-102e93db584a)");
unit.assert_eq16(16'h2A22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #238 c2a4a0af-7d33-4978-bf3c-424ca841ff9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 4959eff1-68a4-4c99-aca0-6e97e7c472c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 7f6b510e-a7bf-4a47-8a72-ec6631ad04e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 df1936a1-4eb0-4667-a025-ae8faf64b3af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 fcadcdd4-8b96-4422-8b73-f286281938b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 7f850826-38ef-44cd-82e5-97cc508da4fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 780879a5-4d23-4dd0-9594-54c59019210c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h74A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'h5B60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #239 35f2e038-4e1c-42b3-b263-9bda00a62c1b)");
unit.assert_eq16(16'h74A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #239 6a5b7051-30d9-4ffa-82e1-c02b85a895e8)");
unit.assert_eq16(16'h5B60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #239 97eb961f-cf66-47c3-8edd-27b196de3741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 35936ddf-79a6-47d1-ae4a-ac95d80fd24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 099e4b54-3e54-4c3b-a21f-9522462501aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 c1461f94-7ba7-40eb-bb99-a97f6548bdfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 ce059c1a-e793-4094-aaf7-a5288c46331d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 8fd643a7-8155-40a2-bf82-64d7c2cf33b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 cc2c1b7e-e057-436c-9ecc-d1d004d80039)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE452;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5AD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'hE452, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #240 90b58459-6fbb-4192-afe2-0dd3cffe9e71)");
unit.assert_eq16(16'hAC71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #240 d4e51ebd-ce50-42bb-8a81-6207089a5202)");
unit.assert_eq16(16'hE452, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #240 96e774ef-1046-4fb3-bd95-44cd6c2da75b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 67e2af8f-0121-4fd8-a0fa-5b13559cb20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 483eb83f-69f9-4ab2-aa05-f3f8a919794e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 d570400c-05e8-4d29-8f14-c48116ec4f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 eebeda1f-affc-4e41-9c12-6f656fcf21e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 0d238d08-7239-46cc-a102-bab242f98a1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 ee6806e3-f8b5-4396-9c8f-019c38236a21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD183;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0519;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'hDE45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #241 bd6712ec-e598-4bca-8a06-f477ac1704ab)");
unit.assert_eq16(16'hD183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #241 0efe0bff-6f9d-4fa4-979b-b6a7d7eb102d)");
unit.assert_eq16(16'hDE45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #241 ca663e96-c4c6-46cc-8433-12865e8abf51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 81c4e4ff-372a-48f1-8046-fd9c72daeb38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 450f1a31-4ce3-4e67-9184-01d94d393e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 53f8df1f-4bf4-412f-bec4-2ad90a1a2a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 93b609bd-1450-4646-a43c-89a7e332bd91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 4de4e895-b4c2-4a8f-972f-fb0ec5e92b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 c80b4ace-2d9d-433b-bd5f-7727ba7030d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2CC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE4D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'hEE01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #242 1117a586-a1f3-4ae8-975b-e9540c28cce2)");
unit.assert_eq16(16'h2CC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #242 8fa56a57-35c5-4456-9ccf-c543cbf0a535)");
unit.assert_eq16(16'hEE01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #242 2585b49a-5eb5-4931-a954-a07b51682620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 d3ce628d-45ca-47e3-88b0-71faceac569b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 b3fc424c-c7bf-4e13-b20b-2a0d8b2b318b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 bfec32b0-26a2-482f-bb03-3404aa0a003b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 50ca92b1-e165-49c9-8e8b-72d5d28933cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 75ee9ff6-c9ce-4d8f-a0c7-5ee748bcb038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 ab3012a6-b568-4da2-b724-b742d57ae97b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h612D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF36D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1900;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h612D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #243 8b9d7742-1b7d-4b35-bc8a-9f568e3bbb8e)");
unit.assert_eq16(16'hF36D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #243 47eae722-6451-48f4-8e30-eb3032e21efe)");
unit.assert_eq16(16'h612D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #243 bba3b9bd-bd93-447d-919e-914492bd379e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 a432b614-0bc4-41a3-8007-686305484995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 d86f7037-fb90-455a-ade3-d37c3ec56773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 ffcefc11-f915-4a57-be81-d798d092ded2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 c18f02e4-21f5-4849-af81-2113db945ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 9522bd94-d891-491b-9093-fb7a2fcaae71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 20aaa65f-7b69-46f6-a14b-5ae3de86e4ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h700B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'hCCA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #244 7dfb0844-8923-4e74-9a9b-48c98c980225)");
unit.assert_eq16(16'h700B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #244 96778b81-8caf-430f-97c5-15380014c474)");
unit.assert_eq16(16'hCCA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #244 1826016e-e684-403d-a3e5-9f011ad8e07b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 7f9b377c-386e-444c-aeae-ce2a4bf15884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 b3f2a1db-9b4e-4a5f-851e-ff35294fef41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 78b28276-89ab-4e50-b151-3a2ac058b403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 841548a1-050e-4517-9eeb-a4d4e7f1e137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 1665e63e-92a3-4a65-b25b-3c9661e5ca41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 ea0c7d70-7409-4cbe-bc81-33f567ad591b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hADB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h936F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'hADB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #245 c74ae5f9-8079-4e17-b68a-da8fc94e703a)");
unit.assert_eq16(16'h3F2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #245 328b97f2-fcb1-4925-aa56-b5fc4dc5546f)");
unit.assert_eq16(16'hADB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #245 f91fa740-bee3-4167-b569-2a87166aaf1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 f929788a-1383-4e7c-8929-f69008837350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 abfa32da-eb9c-49da-b029-e72f19f53c0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 a322aaca-b68f-40a2-9fdd-8408eefe37d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 b6c46753-16e3-4598-b69c-ee9695ad2d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 e127c01f-fe13-4030-adcc-0ff3540b52a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 58a06315-b240-469a-81f4-086fe328a326)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9CD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h550C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h69C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h9CD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #246 c564973f-fd02-4436-b2ce-614fe49be5ff)");
unit.assert_eq16(16'h550C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #246 4ed91bb8-769a-4f96-a707-7acdf96c994f)");
unit.assert_eq16(16'h9CD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #246 c06cc8b2-d60a-41f3-8e02-d27dccc3af59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 afdd48b0-4207-4c98-a844-e77f2e681448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 15c31580-6d49-45bf-b471-e31e62124bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 70ca76a4-f53b-480b-a3aa-36caa66d924b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 0aa77cca-e4e8-4508-956e-755341ce9a75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 5c031e39-82f0-497d-92cf-558e578c25fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 857d500e-17f1-4382-98dc-65b5f11f6c5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD306;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h98A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'hD306, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #247 f7ee3f83-2683-443b-bab6-21f8b7a6f6ad)");
unit.assert_eq16(16'h98A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #247 63656a24-26b1-4778-b59d-7704f12c7f32)");
unit.assert_eq16(16'hD306, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #247 7dc969cc-df91-47fc-b08d-98daf1afe802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 9f90d33f-5cbb-4f45-9aa4-9e09b68b5528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 fbd22b56-649b-4308-b126-0285597f8add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 e58754a9-217a-47ee-b87c-1bdd18129430)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 7b975adb-54b2-4ca3-bb7c-b7d359cec9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 b60914a6-51ba-4135-91b6-bc8ec1ec0056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 1d005fb4-5496-427d-8904-c6653337aff3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h449E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4BD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'hBF31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #248 a00547d5-7245-4aac-a827-8cf41dd5aea7)");
unit.assert_eq16(16'h449E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #248 1fa0f8bd-b7dc-4958-9052-a7a611bc331b)");
unit.assert_eq16(16'hBF31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #248 ca63a446-c1f8-46f7-a4b3-8401a2c3afd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 4db4e035-7362-4dd5-9f3e-11a807349f7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 58ded33c-4b80-4576-88c0-c463325cda19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 23abd97b-4304-41ca-8cf6-ff38ba0ad38a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 d53df1ec-871e-402f-a3b7-f72ad5ed7b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 18e9d730-7390-4541-89be-a5e980464ca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 cd60c088-e0ba-4953-8399-f3d67b94e891)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6111;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA738;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5271;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'h6111, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #249 1ff5b26e-5efb-47e9-ad15-7bfeb1148072)");
unit.assert_eq16(16'hA738, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #249 b0bb9cf6-a0ea-475f-b694-a5699f86cfa8)");
unit.assert_eq16(16'h6111, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #249 3c0b0344-cb68-4a68-8560-81feb8425c3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 2612dbe1-a7f2-423e-b69b-2efb8c0a316b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 43c1647d-16b9-42c8-8d66-0a17cdc371ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 9e19fed8-28e0-43fb-a7fd-f37e61981baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 8f199793-dce3-4b6c-a7f8-1ad104f6decb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 bcf3a822-f5aa-485e-8cee-26cf400226b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 daca209b-14f8-40a0-b48c-6a9cf965e679)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE9B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2327;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'hE9B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #250 551ebaf3-d7b7-4703-84af-cf7b1db8f3eb)");
unit.assert_eq16(16'h09BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #250 61a4e9c5-2967-431b-9c03-3359a954aaf7)");
unit.assert_eq16(16'hE9B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #250 cebd4400-6b2a-4b89-ba41-03201f2dbd8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 cc2b8a24-316e-43d7-91cb-ceaa856e8c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 1e5801fd-37e7-4bf5-9da0-ac24f8d45c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 17d993fa-e0c0-4b8d-b4cd-e5e6c0762c21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 9adc8865-f961-446f-b95e-08a58c4bfc48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 db446c16-8151-4f4f-91c2-c73d25fc7967)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 5549155a-d664-445a-a253-972fc4c127e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC47E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0AD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'hC47E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #251 d5ac09ea-1d4e-4b83-bda1-70a222ad59b5)");
unit.assert_eq16(16'h68DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #251 7c00eecc-d102-4783-976b-20a8b9b54f40)");
unit.assert_eq16(16'hC47E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #251 0e767e82-3830-493e-937f-81cada8266e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 b098c8bb-eb92-4b1a-8d91-f7d21571791b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 c806d568-592e-4a0e-8575-27821073b2bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 6fd9d278-ae5b-44ca-b7be-b8f5b1ceb93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 d7fc5d56-7a27-4d7a-8c6b-eb7136c433c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 36f8c43b-9587-4959-bb12-3286e1dc2514)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 1b28bf05-f726-4fb2-97f8-b7edca951536)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h17B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h18FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h41D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #252 0d33b4a7-facc-42ec-9d20-9b2b565e65f7)");
unit.assert_eq16(16'h17B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #252 ee674fed-91c1-40c8-b0dc-259f6ff13810)");
unit.assert_eq16(16'h41D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #252 753832e3-25d9-42d2-8f00-bb2c898527a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 982d881e-88a9-4d42-a735-276997d7d0f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 a47e6eed-9c95-4c68-b3f3-0f65cbe27403)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 1b9404df-7c9b-4f1f-ad0f-f0ba0e7dbcff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 24e3a6f1-1017-43fc-8b9f-bf19096be0ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 617d6c1d-6b72-4f59-91d1-03fa71225aaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 52428ea0-c261-45cf-b7a6-778567f7044e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1A03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8CCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'h1A03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #253 a59ef526-c347-43f5-b0bc-e4a694b30a90)");
unit.assert_eq16(16'hFCA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #253 e6b34223-a97d-406b-9925-a226e6deb37f)");
unit.assert_eq16(16'h1A03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #253 9617cefb-d0bf-4f32-9cd4-44f0a44430eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 62c46824-b4b5-4c12-aaf4-25eaab3687ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 0d3fe163-a6df-4bd4-a8f4-c758b0a57f03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 34a2f9a4-6ce8-477f-851d-49bb7b314787)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 587d29d8-ce2a-4c7d-9769-8f241b152f10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 c67d5b79-d037-4e62-9582-45852828718f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 e0008a84-90ee-4828-9367-1cb33d34ab41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF29D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4680;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h040E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'hF29D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #254 62eedbc5-5cea-4a72-85f7-11fec9fb2520)");
unit.assert_eq16(16'h4680, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #254 46d803e3-7074-43c5-a9dc-d13214ee725f)");
unit.assert_eq16(16'hF29D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #254 3a739545-cbe4-4f55-91d2-c2c777665abf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 7a93d277-e817-456d-b508-dba90dc93e9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 71fe33c6-dd3d-4230-914a-36b2311df533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 68129bc9-5a02-4ef2-afa2-33afb2078573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 29a13d5d-b111-4439-b4de-32df2b450946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 670b7bf3-794b-4b63-9c43-68ca0561191a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 53082005-315d-4997-b253-de113124c4a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA6F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD625;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h739D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'hA6F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #255 fede5400-9441-4d2f-924a-05551fc5ec6b)");
unit.assert_eq16(16'hD625, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #255 f4668287-a28c-4029-99c3-e7162e00aad7)");
unit.assert_eq16(16'hA6F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #255 3883eec8-f506-48b3-b3f5-6dbaff329151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 31b6cd1c-9203-4ba8-8bb3-d27ff5010c1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 126f9616-ddd0-4ac6-b38c-fa9184502fb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 42d1eafc-4983-4cd8-b8cc-db0ca5b2d267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 052372ca-066e-412d-bde2-862bbffc4aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 b09f8848-6447-40d1-a16d-e6f9f23644d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 2fffc459-55ba-426a-8716-258bf2179aa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h17A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h17A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #256 27fd2afd-f81c-44e4-9229-af6bbf62c11e)");
unit.assert_eq16(16'h60B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #256 64dc927c-e91e-4168-a0d7-fe0242b07147)");
unit.assert_eq16(16'h17A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #256 4f1b8e98-ef09-4d60-ad2b-9439870ac644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 7e18ae96-b733-4e57-a2b8-da30910f61c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 42325ac7-242b-477d-b9b4-847bdbf6dbc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 72b9f8c8-2ab2-47aa-a633-6e884ed97e9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 626f578d-d3ab-4995-a009-581fff0f39ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 0decef59-d9c4-4e6b-ac8c-8065fff85e07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 3d994d58-3b1e-4c8a-9509-e82f284b2bdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA829;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'hA829, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #257 ca3ed125-b089-43f0-aa13-67dbc9538c5c)");
unit.assert_eq16(16'hD0A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #257 f0764715-a9de-4f06-82db-4c7af13e1916)");
unit.assert_eq16(16'hA829, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #257 c0acd0ba-a30a-4019-92b9-14df504ddbc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 651b8b8b-ab2a-412f-a62d-003a25f20498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 eb2f0336-62bf-47d7-ae64-39f0dd2f35e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 f2ff90e9-9fa1-4646-9d74-6d2e3097d33e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 6a34f936-cdda-44cd-a9aa-a5e1e43eaa30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 4c662b8e-67ab-4f99-bbd7-0120f359fbbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 7c090680-0eec-4706-bce2-1dbba8c81fb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFBB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7B0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'hFBB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #258 6900e2ba-0371-467e-abae-7234a4af88a7)");
unit.assert_eq16(16'hF7BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #258 b8c44b4f-b5bc-42b1-ad0b-8538382f2099)");
unit.assert_eq16(16'hFBB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #258 fcab13c5-8edc-4e30-aa15-5f268a193d1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 2b3ff526-7d6c-44fb-86b1-c0283e607b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 a8cbd6e9-275b-4654-b46d-0e3fdd7c4ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 fb1cc831-0d53-4a53-9d0a-a7fe84d70c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 c582692c-f077-4b4e-a58a-6f12b865a2c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 ddf24e49-2ae1-461c-bc3e-012b076f44f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 47f5a6cb-20a3-4e05-9059-8fc7f9125f30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3484;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE023;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1958;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'h3484, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #259 88595bd9-d113-47ae-ba93-7bca26afefc4)");
unit.assert_eq16(16'hE023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #259 49e3764f-288a-4cab-ad65-36c45788af35)");
unit.assert_eq16(16'h3484, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #259 aaa8ee11-aafe-4566-9714-68f6a283c374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 645f2179-ab15-4437-ad00-c8cea44d623d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 f9577fcb-f05c-4959-a7c6-5c049025c570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 344c4a05-3f19-420f-8a66-63de3ce6efcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 1b72eaab-8cd8-496c-8f40-e69c84c9cf12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 88a96321-27eb-44c2-ac52-d8d00083a945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 f78d5189-d0ca-4c70-b9ec-197d047f7623)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0192;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'hC6C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #260 70e1e347-37d3-4466-a9c0-70abbcdc8cfe)");
unit.assert_eq16(16'h0192, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #260 594f3c1d-4762-4c1f-9aac-8048eb6f87ae)");
unit.assert_eq16(16'hC6C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #260 84bbfe1b-0e14-451f-8942-d1ab365ba52b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 2a4ad0e8-9e4d-4cb6-a083-80eee9330565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 4da33c43-6372-4bb9-8164-c9bca04b8bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 bfcc7ed7-1424-4d1f-a629-6dc7488cce2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 3ef71280-bab1-4557-abd3-71e9a6ac3d2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 5e3da6fb-065b-4772-a4b4-e0692f03fcb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 3fe5925c-87bc-4e4f-868f-65a8c0726fcc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6002;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4CA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h44AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h6002, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #261 ffac11e2-6054-4d86-9d51-151d42e2f35b)");
unit.assert_eq16(16'h4CA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #261 454fa1a9-7d25-4e42-b390-ff9da2529de2)");
unit.assert_eq16(16'h6002, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #261 1a0dcfe7-2257-4063-ad82-077a118d52e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 ab1b8a0b-6c41-4ce3-b705-c9b431ddfc6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 be0c3762-f3af-4567-858f-01d250f6404a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 4550ae4c-bdc2-4845-9979-3433bf3a8feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 3b97e52d-4294-4d41-9c39-c02cb86ebd1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 e9abddd8-fae6-45fd-b5aa-1f45c4d09e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 1060f7d3-d4c8-4f04-9585-baa9a1b20d7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCAF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5816;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h953C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'hCAF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #262 8f7d1d56-0179-4733-a257-662f9c3bf918)");
unit.assert_eq16(16'h5816, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #262 54badac7-a996-4c17-bad6-6d115e25d113)");
unit.assert_eq16(16'hCAF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #262 52b583e6-25a3-4f2e-8895-691aff8c0760)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 c0edc719-38d4-495f-922f-312817b86d29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 02844e60-838c-4089-9fc9-b68b14d37099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 788ee0e4-e16a-4d1e-85b6-b7c710dba9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 23be0a12-3dc7-4a1f-a4a0-ab2ecf187c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 bc98e350-dcd1-4f4d-8444-e899c7d8bf7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 88529c09-f9e0-4f4e-a7e9-25f7a8cf7dde)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9203;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h694D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h31E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'h9203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #263 6375ca11-4614-4ebc-8853-e58e63060a28)");
unit.assert_eq16(16'h694D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #263 44c37c79-24de-4287-b05b-e34346cf6418)");
unit.assert_eq16(16'h9203, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #263 cf75cd74-5f6d-4be5-9978-db08936c21cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 bd3870a0-2120-40ff-92a1-a86bd009f942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 050c884a-69f9-4dd1-a39b-37c5b736e3fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 7d839d8e-4c3e-4691-a8e4-1252ea7b7566)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 9f04f6c9-b6dd-4c93-8171-4d6f1aacc51f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 82743584-3cb9-4a05-a369-a9ac9bc50bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 0eb785b5-8644-4c80-b598-edc5632c4647)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1EEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD43A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h541F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'h1EEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #264 98648aa1-4fdd-4c4a-a4ff-ef8c6bf6fb05)");
unit.assert_eq16(16'hD43A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #264 35e05438-22ee-46ae-a607-0eddb82b8fdc)");
unit.assert_eq16(16'h1EEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #264 5e743c76-b9d4-488d-8208-6c3f1428b89a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 d1f72b3e-b235-4dba-b6e4-edcada79512d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 fbcd61de-8118-49be-bd84-beed6ddbd88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 1372fdf6-8bb6-480f-96e8-05f89adad07f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 065dd367-963d-4a6f-93c3-b0678b8aafdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 28abf7d0-5ffc-4951-b992-8bb5dff3f95d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 9fe32033-2a38-43c0-b46b-ce264913ce2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD287;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'hD287, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #265 6ff7d7bc-1f3e-47b8-a15f-7d6cc66a1fd4)");
unit.assert_eq16(16'h5D37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #265 4f2aa43d-596d-4c5c-9091-14a628c40ab2)");
unit.assert_eq16(16'hD287, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #265 3e7f65a5-ef9f-4609-811d-fc231afa88ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 8859b861-d4c9-4881-bf73-d15a4935fbcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 1ec9ee99-ffcd-44f1-a28c-097329dfc168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 9fc71fef-4541-4780-9a24-29877cc3a881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 a13adf5e-185f-4ca5-9b6d-a040c043ad0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 41bf4d1a-1136-44be-82aa-43dd05428147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 3dea0f41-ea6f-4d53-b51c-cb094115f039)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBEEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8E82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'hBEEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #266 50a2ccc5-bb27-49ed-9ff3-c17da9dc4f63)");
unit.assert_eq16(16'h89E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #266 e491b542-6ae7-415f-96ac-2b462519201e)");
unit.assert_eq16(16'hBEEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #266 a0c9238f-49fd-4525-8fd6-0a0432c080d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 fb199fbe-7c2b-4c11-8525-15202e3ccc99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 62fa41bf-ef7b-43e0-8d14-e82db25a5df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 1998c411-9eb7-417c-ae3d-aaf4c9e3ab0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 96945d85-e55e-4470-9e74-5bb1edc79cf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 270e453f-b07c-48e4-b5ee-28fb715bbbf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 bd3d8ae9-ddae-4e3b-a546-69b448876880)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h907C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD06F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6718;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h907C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #267 5d0a3352-d67d-431a-a141-1dbf7ac3ce6c)");
unit.assert_eq16(16'hD06F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #267 92fd06d8-23e6-4616-ac54-3ffaee9d7600)");
unit.assert_eq16(16'h907C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #267 72c1c4fa-12d1-4f80-b499-3b23cdcc93c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 c0cfe6c8-7bce-4e6c-8d03-447c215efba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 ffa51c35-a6a7-4322-bd99-6c5f2db5e3ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 32bf4150-4b04-49a7-93a8-31638cbc8dd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 2481f16f-6176-4ac4-99a7-70b101ba4bc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 f43aa9c1-4415-447c-b6e5-9ec32963f4ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 c0f3cf9c-2ce1-4613-bc9e-b141d023b450)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB519;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'hB519, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #268 4e20c040-37d0-492e-80a8-5fcbe433cdfb)");
unit.assert_eq16(16'h42D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #268 76de9df5-257a-4039-92e1-60e837a33134)");
unit.assert_eq16(16'hB519, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #268 4bfafc60-c406-4685-9c2e-08608dcf49e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 18a0ee0a-228c-4af3-9832-f1ba986dd9f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 87219a4b-6de3-4d41-857b-d01874ad7960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 dc3113fa-145b-412d-8ab3-8c27d8899463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 32ea27df-913a-4fbb-bb18-5d3840d54b1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 ffe8a356-0f0d-4ff8-9991-057432ad561b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 c8ac1f31-9658-4fbf-a7f4-fcb733e4e646)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h940A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'h7D4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #269 2571480e-a39a-420f-838a-732f0dff9fd7)");
unit.assert_eq16(16'h1E04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #269 bd5ccade-b8bd-4e79-92cd-567d95307ed7)");
unit.assert_eq16(16'h7D4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #269 6ae0f697-4eb0-413f-b598-332bdace611c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 f2242caa-8d91-4f15-86ad-2529c145f6ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 575071a2-c11e-47fc-9fef-6d68e642b1e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 2333f991-e317-492d-bb7b-0ad358f7ff60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 fd6c0c2d-9538-4860-b385-865d9a489440)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 f599d00f-3f73-470e-b399-896aff3bcdfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 b17e8d9d-2a4e-46af-9153-1de8d614a63c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8441;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDBB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6435;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h8441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #270 fcf10595-48a8-49c6-8675-2abb37bb515e)");
unit.assert_eq16(16'hDBB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #270 328fdb68-70b5-4ac3-88f8-e6bd6751c505)");
unit.assert_eq16(16'h8441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #270 6d4c5188-2c9d-4a98-a379-f808e8d16ccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 ac4b8093-2b81-4abb-bdd4-79c5d5c14543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 03a06742-8880-4e97-804a-7169574fef28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 21a9a53f-7a5a-4fcb-b3c8-72c79dceb866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 0e16aebf-02a2-4917-9efa-2543054bffb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 fed12ae1-3586-46c2-ba6d-f1ce0ff333c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 fa681638-cf14-4b64-9aad-e999d8c41907)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h743A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'h6D05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #271 8872f36a-3d85-4126-9448-02c640379415)");
unit.assert_eq16(16'h743A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #271 371a77ef-0dfc-4fe2-a92e-71755804767a)");
unit.assert_eq16(16'h6D05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #271 322c4ad6-8e53-4c53-b245-eca24e1fee4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 83202d06-f4cc-4f6b-af8c-6db07b2a8209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 69e45710-6b6e-4299-9350-a571ea4e12b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 ad821644-6d88-4b21-9c1c-056c8a219679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 9d6a5926-2425-4203-a332-e370e7d5888b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 cfdc79ce-bb6d-4338-be11-2e7a366f314e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 ac5d8e22-8bda-407f-a5fa-bad4c24f0c0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEEA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'hEEA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #272 149b8fac-1847-4278-b58e-19b9576e2f91)");
unit.assert_eq16(16'h54F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #272 122eca6a-f120-445f-80f8-52c0e9e15e83)");
unit.assert_eq16(16'hEEA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #272 ded67167-b683-45d0-8cfb-c59c7d2b1742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 7b52d09b-6f99-4b74-ac82-0907c8d118e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 1fe25da1-b31b-44d2-88fd-09a3ad8e8fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 0764e0b9-7c4c-490c-b38c-a12b2c32a2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 5c3a886f-d873-44bc-b296-effb1ed919f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 8f988b25-0384-4665-96e0-cf51e2e6341a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 4b29fbf4-0225-4f90-bf6d-0661b034b84f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF237;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h34C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'hF237, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #273 b20d93ee-e1d3-47da-a460-2474076a63a6)");
unit.assert_eq16(16'h34C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #273 af5f3a05-8a88-4843-8c73-906abe355495)");
unit.assert_eq16(16'hF237, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #273 3f3c0846-edd2-4447-8061-b1f9139a649f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 3f28f4ae-b732-4489-ae88-c1f16a735c89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 f714a283-d2be-431f-9e07-b7d9e2ca41aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 297fdde2-a6e5-4d46-a290-6eb0f51c6c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 6c9852eb-eb39-4497-bbd1-907d57cfabd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 984fc8b0-c381-48fe-b76d-ff4bf91d13bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 8999ae08-82d3-4252-bc85-027f86c84685)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7779;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h88C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h7779, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #274 b09691ba-bb6c-4349-866c-c19d376b6722)");
unit.assert_eq16(16'h1DF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #274 20efa581-0ba7-4ba7-adb1-d1d2517c310b)");
unit.assert_eq16(16'h7779, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #274 148b8c4b-5b6b-405b-90e8-92aa9b000147)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 32095329-a985-47c8-9875-91c668547745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 b98a0cbb-6122-4d2c-902b-6f0303172e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 a7ce364d-1c7a-4e83-9821-eabdf7a15c1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 9f589eb7-7034-4d32-953e-89548e6f7600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 65f1dd40-654a-426c-bda2-ab501196af54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 3f302e4a-6859-4605-9f53-86ab492bcc34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE83D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h77B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4844;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'hE83D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #275 8eb729db-d01d-4ade-9448-25dbbcab62bc)");
unit.assert_eq16(16'h77B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #275 0d037e0e-494c-44f5-972f-76eccba10ab2)");
unit.assert_eq16(16'hE83D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #275 ddec5956-a51b-436a-a3cb-f2df47680134)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 c537a956-fd3d-4563-b474-b84c9c74710d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 56ecc743-b6c1-424c-883a-1fea3e278f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 b6d27c55-c09c-4f61-ae11-df5258a2a963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 c789e7fb-998d-486f-a677-3622b85b910f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 89e3db6c-ae52-4bce-a8a1-afaa428d7188)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 135493e1-8afd-45c9-99e6-cf4888bb4f33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h456F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF8BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'hF5B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #276 919f0c4d-f28b-4abc-84dd-9e49a27bc4c5)");
unit.assert_eq16(16'h456F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #276 881b48b7-dcc7-4d83-a2bf-6c5fa15255c2)");
unit.assert_eq16(16'hF5B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #276 c44aaf7a-27b7-4707-9316-a0c7a3e5f1d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 6db34d8c-c437-4651-8b2e-94c4cb3ca8a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 de9516ae-bf08-43fc-8397-c0248704bd03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 d5ec57df-9536-4ead-9cae-0f0cc34a4687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 58dc5f19-b04f-42ef-a151-c55382e3cf35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 779625f4-2d81-4958-9f81-bf9c47e53f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 59afbe64-f7eb-4783-8242-105dfd871086)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA2D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA97F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'hA2D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #277 6045babb-3fec-4693-a1df-76da77861e38)");
unit.assert_eq16(16'hA97F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #277 40a004e3-4622-41e1-b586-9bdd3253bada)");
unit.assert_eq16(16'hA2D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #277 e3b13071-78ed-4e2d-b8da-3a0eba785e98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 71092ab6-3e0b-4b71-8cb2-b8ccee6d9826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 dbca509b-47d7-4a6b-a825-12d21be2deb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 385631c0-85f0-4ee9-8d9e-7d8393af197b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 16f134fb-4495-46df-9626-cb6d78536784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 766954d0-0179-4f04-a60a-891c1e741403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 8a838198-2b75-46e8-beae-ab99bf2f3b7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8CBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC9F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'h8CBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #278 30249782-8f66-4bef-b280-8d1bf7dbb37b)");
unit.assert_eq16(16'hCC8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #278 d899b59b-222a-49f6-87d8-00d3b69b78b4)");
unit.assert_eq16(16'h8CBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #278 41d27135-6ca0-4b28-8e85-e5c1dd54b914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 85ab6e9f-ac2e-418b-ba91-9c2a7529e8a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 af9a83f6-f5b6-4af3-ae45-3b89f8db6607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 d2df6561-f89c-439d-ba3c-39a077f64e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 4ce1eac5-83be-4961-a101-398788db9094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 c92cfd03-0825-4572-af32-31c5f30eb7e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 ab928c5e-b46a-4201-926b-096fa53838fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h37EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8229;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDDA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'h37EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #279 56ff4db7-f105-47a9-b400-9f395b00c0c3)");
unit.assert_eq16(16'h8229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #279 68f89405-4337-4618-bd10-e7bd7229d30b)");
unit.assert_eq16(16'h37EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #279 4310d6c4-2aef-42d8-b30e-d6632729ae10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 a27aa9f8-592f-4deb-9503-bac8bcf15d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 1c52649b-a025-4f19-a2a6-fe54081a7eb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 d71818e8-77de-494c-aa33-8934d30f89c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 94b302bd-1e18-453a-aa3b-e265367736cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 9fb01b2a-2467-48ec-9e85-c72e382aebd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 5bb8c1a5-d84e-4ded-a28d-2de84d1a7379)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCBE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB35B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'h2B09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #280 854e3496-ac40-41ec-9cdd-1307747da2ec)");
unit.assert_eq16(16'hCBE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #280 f35ff89a-4989-41bb-9e01-fcbff74dca5f)");
unit.assert_eq16(16'h2B09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #280 279a6cd6-8e48-4462-b7df-4c7d05717f97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 ebd60cfd-3d8c-4782-9caa-a32317a7413d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 4e8355fd-1697-47cd-a442-6c295c3d9860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 35bfb517-ebae-4547-bd66-a3d96ee8507b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 a0ef1950-a079-4ee4-932f-4a7c595f18c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 d0c49bca-5bbe-4efa-9c3d-c461d7cf4b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 960f8079-0fd3-43bc-a85d-5a855a5f4a79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6EA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8C02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'h6EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #281 419a323a-016a-4bb0-8c79-28a6ada35678)");
unit.assert_eq16(16'h8C02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #281 b7af0cbd-0f10-4128-8cb8-f5f8c362e374)");
unit.assert_eq16(16'h6EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #281 937cc286-77e3-451d-a8f9-2788240d7d18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 8293413a-9781-4f64-804e-bb99aa6f6d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 0007a05c-70a8-4f3d-9f03-74da34df430a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 c575e871-c482-481f-82cc-576de64cad81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 c4f544ab-d7ff-454d-9fd3-fcd6a6d6075d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 6fcb6891-7c48-46e5-93d8-75ca2b5b3473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 ad620be6-5677-4b4d-9ce1-a48113156ff6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA179;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA983;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'hA179, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #282 65b32772-0cf3-4bd0-877a-56f231672f78)");
unit.assert_eq16(16'hA983, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #282 be868e98-d3df-4088-b467-aa537a393c64)");
unit.assert_eq16(16'hA179, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #282 25af3236-ade1-4b48-ab94-afa41b0239e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 e11201f3-a8fd-4a0a-97fb-073a58db5a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 b83e2390-a4c8-4c63-be94-51d187975d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 ad7c432e-cbfc-409f-aec5-34f6fb45a9c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 7cefb66d-017b-4118-b77b-20962e64be71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 ac99cb3b-be25-4ba5-b945-d31439a4b407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 2e1e0b34-3c97-479b-bbf7-3518b93dac10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h100E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0769;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1307;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'h100E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #283 3670352a-0f48-44d5-8354-71d3efb6a91e)");
unit.assert_eq16(16'h0769, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #283 67cbe1bb-f22e-4770-abae-f2e6f33d8a24)");
unit.assert_eq16(16'h100E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #283 c6285ab2-ddb5-4e6a-af3a-94013fd31e73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 da876b43-2dda-4420-9225-9c4f5e1571f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 853682cf-80cb-4a29-a3b6-cb5d73f165e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 468cb4b6-1ed5-4936-b6ae-55ff3c0acce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 f0f200d2-1b90-4faf-9918-af13207c5610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 a78e6746-72df-4b19-823b-bbb453212140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 712511b0-ff04-4e61-a91e-059d0ab516fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6981;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h084B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE3B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h6981, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #284 36eded19-2102-41db-86c5-66d923aeb86e)");
unit.assert_eq16(16'h084B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #284 e2d37630-ba8c-4ed3-b2e4-4116862bf266)");
unit.assert_eq16(16'h6981, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #284 50f56824-a73d-4b48-b649-d740592771a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 e65802fa-ebe2-405a-9a85-9d5dfa955816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 85e1f716-907c-4bc8-b702-2284f44c9143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 51064687-2708-4c33-bdac-a68ab0f82b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 f162f8a2-f67d-4e3a-94fa-f32f014bfe55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 4f855e1f-ac33-4ea4-b028-1d89821d5353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 8e0ee1ac-a8aa-4caf-84a7-8407f87004a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDDB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'hCA3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #285 27df956d-e3dc-42f3-a893-71b8a35e2870)");
unit.assert_eq16(16'h9F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #285 359bf9c3-ef45-455c-bd71-bc0068007610)");
unit.assert_eq16(16'hCA3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #285 3b31d552-3229-46d9-b5ed-8dc547443c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 1820559d-4571-4768-a632-a2e62e764193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 ae4b9088-9bdb-4e83-b5e2-02301c4bbc7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 3d97769b-14b3-4228-8ab6-b6f3d94dbe0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 0cecac83-0158-4d72-9815-0e872eeb5ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 10320a42-e352-4b2d-a485-134e5fe8e251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 925eb533-cbae-4ec4-a036-c4d623e463a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h017E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'h8D3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #286 87c54aac-5648-4a11-a855-3be0ba214bec)");
unit.assert_eq16(16'h017E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #286 ecba9963-95a3-4999-81ca-535b2a59ed19)");
unit.assert_eq16(16'h8D3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #286 2711e167-8919-48db-abcd-84cf2199d771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 2f5da018-9cb6-4cf6-bc56-28e8cb848dcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 a1e9ebde-bf6e-4c82-b670-a954e332dcab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 a4ad7dbe-edc5-4067-b27a-9f193fb0fb94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 ea5358c4-3378-4277-a6a1-46ac8efdb84d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 56df07b8-283f-4d89-9e63-d8cb2b2a4768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 287f3db6-bd5c-43e5-81d2-cb2c5fcc0b16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h268F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8A29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA03B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'h268F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #287 1117c31e-ce07-4188-88fd-ab88e4e76ea9)");
unit.assert_eq16(16'h8A29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #287 95117a3a-a828-4814-9aa4-504d0e9cb903)");
unit.assert_eq16(16'h268F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #287 b21392db-b75c-4524-9577-039626f9d8c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 1cd9a8e8-6eaa-4685-a52a-ef37671d38b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 20193ab3-f38c-412d-9f4b-7322bea7c834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 d8de0bda-87b3-4ea2-b158-735bcade2ca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 3d88eaec-2a9c-491d-9ebd-cf5c289845e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 42b3d936-b328-494a-868c-221ed8d49edf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 8890891f-bb9a-4d2c-8610-9e852b9b9ed3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h678C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4118;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD8E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h678C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #288 bb00cf01-fca1-4680-a037-1136b241d47c)");
unit.assert_eq16(16'h4118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #288 0e76cc78-236a-467a-a231-ae605e0b5f09)");
unit.assert_eq16(16'h678C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #288 491802fe-6cfe-43e1-a211-2cba38377fac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 cfe4863a-5e26-4731-88ce-0a8bfd658949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 85e96564-c4ac-4483-8b98-223546bda137)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 e5ffca3f-584d-4727-b4e8-4f79c94c8aaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 f48b7cb6-6e5e-4d27-b1f9-56b174a170cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 4da02af1-29f6-4f30-ab78-a81da6b62b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 d20f9a91-7013-44b8-90c2-4d56ee85528f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h95B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB6A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8469;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h95B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #289 abf53303-37b1-4c6b-8847-0b8673b9bb3c)");
unit.assert_eq16(16'hB6A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #289 72895e31-8351-4877-86f0-9c6c9017c0fe)");
unit.assert_eq16(16'h95B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #289 8699131b-5b85-422c-84eb-600ae6e33d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 af4bfc2a-126b-4f8a-8839-4bd47c26adab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 5d61d18e-198d-4e84-bc53-386037fd8cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 0b936090-b82a-4034-bc06-f04092911cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 f9406d0c-a0e9-41ad-96e4-bc7936ffdf35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 07a6dbe7-6a05-4d9e-8b86-cd6cf16f832c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 38d64b63-9d9b-470a-ac2f-de128c6a8459)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8555;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB69C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h92AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h8555, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #290 c785f74a-6c0f-48e3-b9f5-2065122c424e)");
unit.assert_eq16(16'hB69C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #290 209bfd79-998c-4807-933b-2d0af475a9b3)");
unit.assert_eq16(16'h8555, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #290 8800c4df-24e5-41a7-9b8e-043e0a4a17f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 27f27d49-1c33-4afc-b310-5d40436d9d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 81651097-015c-4c25-9b8f-ea1f7faa2b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 62a1aced-3776-4828-92e8-10100373da47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 36603cd7-1561-4b5f-9ecb-79e147f494b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 4cf69e86-4296-4197-88cc-fefcd41f2081)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 55d93953-a265-4026-a261-771bb2513f07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h403A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8A31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h403A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #291 2810a2d3-fab9-4490-90bf-ee0801dd730a)");
unit.assert_eq16(16'h8A31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #291 723dd72e-3dad-4d5b-9517-0b0baf95d66c)");
unit.assert_eq16(16'h403A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #291 f894e7b5-402c-40b0-991f-bdc38110840a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 348b588b-2981-4691-b4a8-562cb9c89d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 b991f3ff-718c-4487-9dee-529c5c22c330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 621e58a5-21c9-4897-8e31-3f3c075a98d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 47079581-dc86-428c-bad4-26d475ba8c3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 4cfe1657-6568-449c-82ff-4a7895b0193f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 28ed6349-e137-42ce-876e-ca1ff53a73e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hACBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h707F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF560;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'hACBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #292 9eef7263-8602-4381-a482-a4cc927d933c)");
unit.assert_eq16(16'h707F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #292 2dc94ad7-2db9-4fc7-8ec7-6ae0dd7254a3)");
unit.assert_eq16(16'hACBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #292 ff4d5d74-0bce-4d8a-b108-90ed9ef1ec05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 2fba3c26-75d7-4e32-97db-16022f2978e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 57593abe-a4e8-4465-8706-d346dada62f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 9cec2a04-eab3-4c6d-94ef-c36629ba29c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 dbaa1fac-06c2-4e6b-9dba-690fd85ea1f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 3280241a-0d43-42d2-b7e9-e9af93e0a3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 bb47e5d3-e542-483d-9280-ad9a9ba44a6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB8E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h78B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'hB8E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #293 133741b2-2b1d-4049-9ebe-21702993ab1b)");
unit.assert_eq16(16'h1C68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #293 d21907fd-dc3c-40f0-8f43-12f1b68683d8)");
unit.assert_eq16(16'hB8E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #293 c1b58d53-a2fc-44e5-b44f-e42570a9185f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 ad18b490-ae88-40a3-8845-55b1835485ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 e03898a3-2bef-4e4d-a700-78247bad7206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 78650338-1b70-4484-8d32-981f363ccce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 1e95b97f-3045-48da-ab50-4364203043b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 162a8c2c-a51f-40ae-8f72-85f6a303ab38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 fa1461c0-026c-46d1-8838-29e653f9e301)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2965;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5BDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'h2965, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #294 f561e0e4-5042-4a97-8c13-5dbe9b09c807)");
unit.assert_eq16(16'hFE05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #294 098c6f97-8e98-409e-846b-ddce55b4d26b)");
unit.assert_eq16(16'h2965, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #294 2077b491-3906-421f-9e72-4e521b54f0e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 0445354b-3c91-4bea-8cc1-376780ca4ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 9fad63df-c76a-48c8-9adb-8400810d917b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 2c73cb37-3dfc-4276-bc44-216de88d95b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 ec530af9-c5b2-48d9-82d4-40c870086c71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 b4a15e78-d8b5-498c-bccd-d5e78a68f061)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 93ce80a0-27e9-4cc5-8e85-58ddcaa2a558)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD7DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF6CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h795D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'hD7DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #295 734b9592-793b-43a5-83c4-46be123052da)");
unit.assert_eq16(16'hF6CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #295 1e0b9d32-11e4-4c26-99e0-3e4623aa6708)");
unit.assert_eq16(16'hD7DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #295 3c13c6f5-7b86-443d-b960-f1b912ee39d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 2a709439-2e0b-40d5-8b77-9408b121e8ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 591e5a25-9376-43e0-bdc1-a31c3e2ee466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 1c2c1cfa-4ece-49b1-9be9-11254bfefef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 849930f7-1a3e-415b-b557-d8bf9dddc7ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 91d8b106-49c6-4df3-b117-f65274edc829)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 a2b323a5-129a-40e0-9732-58de76cd2164)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'h9D18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #296 f9cd24b9-638d-487d-952e-ced4fd5bfe48)");
unit.assert_eq16(16'hECB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #296 a85df609-36a7-47e3-b7e7-ee7f3f14516f)");
unit.assert_eq16(16'h9D18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #296 46941091-bb8c-4cb6-870f-07e7f3eb4167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 221fd87c-e9d0-498e-86f4-aaf8581bb1ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 7782e631-560c-4bd1-bb9d-918703578ef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 57b30d06-8d4f-4cd2-9748-eb1fda53e800)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 76dc6c37-f055-4e9e-81aa-3328f2e41208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 13a9f886-e9e8-495d-9de0-d1a305e124a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 79f639af-e882-4c02-bc85-bd3198cacdb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCDE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h2A0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #297 20609b45-a2f8-41a5-9448-2b6b2fe5cb5b)");
unit.assert_eq16(16'h0D5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #297 f29b41bb-9624-40dd-9873-1b90109a9a4a)");
unit.assert_eq16(16'h2A0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #297 d9cef504-f6bb-4a02-a316-c73354f5ddd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 2f20cebe-e53f-472f-aace-ed9f4e5bc620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 8fb46fe5-f516-4064-b9ad-fd1516c3b5dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 189a933c-f611-4cd6-864d-6c8439f57e09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 bcc72a07-8e99-4cab-a33a-e686b0d8ec32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 2caa6298-972c-4bb2-b007-902160991538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 26c1d712-5fff-40bd-81d3-abb2d25706ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h661F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h636D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9050;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h661F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #298 b34d2de2-7d16-460f-a661-d76323006520)");
unit.assert_eq16(16'h636D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #298 d38af694-9f8a-4fb9-ba4b-b3eb5142a190)");
unit.assert_eq16(16'h661F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #298 862ff1ec-729c-40bd-9bac-91ec8145a269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 1386c40e-fe89-4278-a5ba-b206e2b12d95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 137942ff-8eba-4e83-bffb-303e1893caaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 0cefc9bf-9f97-450f-a2e3-9e4b7467ee81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 609a76de-1ea8-4ae9-8a80-c299763481f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 7de68cdc-c78b-4fea-9441-a632b4ec626f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 89d56cfa-6158-4f8e-ae2a-9e696cafac93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4169;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4785;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC53B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h4169, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #299 b7754b92-be98-45d9-b012-0ddabad20b1c)");
unit.assert_eq16(16'h4785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #299 43018f5f-9189-4c3b-8d1e-d8aecc997b05)");
unit.assert_eq16(16'h4169, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #299 97480c74-4213-4f12-ad31-c6069e441373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 77664c97-aed9-483a-890d-2fb41bf56cfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 cd8ade91-4ae1-4331-bacf-7fbba08ee287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 73199042-8445-4327-9278-3d9a00953600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 9c3d5dba-3bcd-4861-ad03-d76e35b92c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 cae10170-9418-4c47-ac15-8a7b41b3d47c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 891325ad-03df-48c4-92e3-8b66caadd936)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD685;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h79C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'hD685, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #300 49f00bce-8f97-42b7-8c48-be20449463b5)");
unit.assert_eq16(16'h9A08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #300 721f798d-76da-4658-a8ac-960b707b84f7)");
unit.assert_eq16(16'hD685, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #300 2a636c2e-dc52-4d71-b0bf-a52e6adaddc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 6c39059d-8f47-43fb-b486-57c5666a6a88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 16961725-daad-498a-9c7b-4f29da9bde0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 4805f8db-e6db-4b25-863a-03f1238be87a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 2cb47b92-b2cf-4157-ae4c-caf6edc0c7fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 980035c2-0445-49bc-991b-a770cbeaae12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 7b1c96a8-9ff1-4861-911e-4de1e49ceeb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h67EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'h67EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #301 b1d328e4-b0b6-44d0-8db3-07e27eba41ed)");
unit.assert_eq16(16'h92EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #301 72e36048-21d7-4f6b-b286-9b857ca045f9)");
unit.assert_eq16(16'h67EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #301 1567a8fb-156c-4652-a35b-a94b51478851)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 f8cb3496-e100-40b9-ab70-4f29d950f462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 be5771f7-04d6-4416-bc89-0dfe5322c1e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 982274f0-1fea-4ed1-ade2-5754b76d5220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 76c7ec3f-15e4-46ad-908d-1c6bf3b1d33b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 9cd622d3-4920-49f3-a2e6-847fc5f0b883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 77da9883-d12a-4174-9813-9410d8f3ba83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD429;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'hD429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #302 2a4cb22a-e100-431f-a59e-157513e80073)");
unit.assert_eq16(16'hD1AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #302 81fb04c4-6992-4f6d-99b2-ee7933fbb5e2)");
unit.assert_eq16(16'hD429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #302 698a9dfc-e5ff-40de-a5f1-41a66b5aea5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 06e3464e-4181-4364-a0b6-36d76cb1219e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 9e339380-01a9-4f65-9033-f14dd7d150c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 81566161-3a6f-450f-879f-129501009d5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 ddbd4040-5a31-4381-9040-a422d0adc2b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 5bde0d39-686a-4bda-84e0-7a85642c1a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 4069b9c6-4cbe-4627-8d50-ebbf8df618e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1936;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2844;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'h29E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #303 15b4180e-10c9-42c0-bcb4-e75ccb013a9f)");
unit.assert_eq16(16'h1936, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #303 492b387d-6f61-4ad6-b815-ac83a1d308f2)");
unit.assert_eq16(16'h29E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #303 040104f5-cf54-4ab3-9cfa-dd8dc9f8d215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 0c6df0bf-6440-4f09-91d8-1fa75f74d7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 0e91ccdf-f838-4888-97d8-478a918524c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 3fb97bc7-866b-42dc-9547-eb28d4e5dd01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 c73e1271-4c5e-4617-964d-0cc156b0fd6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 2118ed84-3d83-4fe1-8b99-1ffd37151275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 c494464a-d96d-4e7f-953e-ef7619f0ca1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'h0C61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #304 ceca5f71-02ad-42d1-b43b-446010938db5)");
unit.assert_eq16(16'h57B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #304 99465db3-5af6-4df5-bd81-7e49acb00084)");
unit.assert_eq16(16'h0C61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #304 cb1990e5-1d54-4724-a006-c5c6a54d1cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 2ff7822d-18a2-4d5c-93c2-36f9a0e34ff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 fe662b9b-015c-4f31-aefa-b7e9bf3ae64b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 f598b7a0-dfad-4728-abee-7b26a1236a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 2ba07697-f88d-4bf6-81f4-62b9ba38d329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 ecc93030-dbdb-443c-87a3-86223a101b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 24daedf1-3c14-457c-ba38-fb2c7ca16fee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4923;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6837;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC96F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h4923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #305 56e93c2f-b743-4ceb-b8c6-a4076756645b)");
unit.assert_eq16(16'h6837, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #305 048f865d-1b88-481a-9650-28fb403fb908)");
unit.assert_eq16(16'h4923, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #305 6f66324a-c81e-4af0-9583-ca3eadd8afa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 be3c7bb4-c2e7-418d-8779-bdb02dacf04e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 ea519a29-c7fd-45f0-b85a-5a09e9d46a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 7140e2e1-b6b7-4cd7-8fd1-0d5ed58b6115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 ba593d66-428f-4436-b5a8-0366f2fec32e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 ec884cea-d270-4d63-9dd5-5b335f420877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 b37aed26-2175-42a4-b0c4-a5333569d1a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA53C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h51B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4A29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'hA53C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #306 7b543073-5fe0-49ea-b5be-74a80a82582a)");
unit.assert_eq16(16'h51B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #306 d9d90017-f9d9-48a2-b7d0-c59667f648ca)");
unit.assert_eq16(16'hA53C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #306 4b739760-d349-4ef9-8676-4899898c9452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 966b2631-aa10-48dc-bb85-447e86d32c6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 d1605df0-06d4-4141-bf6c-2c63b52898e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 f1c5f69f-6fd5-42d0-9723-a02b85e05324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 0069f0d3-3d2c-4912-bd4a-75c0e5152ca2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 025a2fcd-5a01-4b66-b628-39d024e2247a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 483527d2-f5c4-4fad-9446-5ef3fabcb9c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAEB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h16B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4945;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'hAEB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #307 0024f4f7-a12e-4bab-9c3c-0edd114beeb1)");
unit.assert_eq16(16'h16B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #307 bea47ffd-2c1e-403d-ac26-13895b8c4225)");
unit.assert_eq16(16'hAEB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #307 c05edaa8-c28a-4891-9f04-dfd0d67f975b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 b298e86b-b369-432f-a393-800d7fb6e7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 aa78fb3a-0f4e-45a9-8831-01d7b1dfdd7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 a4a00185-ffe8-49f3-ba8d-0cb4f1b9f0db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 6406221b-72bb-4967-8f15-aaf10a02871e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 578a6415-ebee-42e1-8db8-905b394eabc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 84373f39-b973-43bd-9142-b6af09383e7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4CAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'h0C20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #308 fd299cff-c80b-477e-a206-7e7a461fb966)");
unit.assert_eq16(16'h4CAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #308 f657a351-1135-4c10-b41f-2750e30a7684)");
unit.assert_eq16(16'h0C20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #308 ecfce3a6-8acd-41af-ad55-83b12627df6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 0eb5b20e-b63b-489d-b9f0-8b4d55051a49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 ffbfe1d4-0127-4c4e-8f7c-cec38b4624a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 0a0c7fc0-6ed4-454f-a4ee-c775e4996a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 7316c6ed-34d2-4d40-bfcc-3376d4690b02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 f2e62e5e-77c8-4dfe-a89c-74329e16de61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 dcd479d8-7ae7-486d-af95-132203deee6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h88FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1023;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h88FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #309 ccbf273e-869c-4d6a-ba00-bbcfe323fa75)");
unit.assert_eq16(16'h72DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #309 6ea3aff2-b758-4457-a5da-cf1a0a4ba31e)");
unit.assert_eq16(16'h88FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #309 2f3a8a3c-baf8-4da6-ba04-57c0615bda8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 61af6e8d-b31e-463a-b8e9-ef21438c1524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 3f7d5604-701c-4ae1-a973-c1da5b7559b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 dd39f790-d67f-46ae-8100-53e676c0c05d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 d04b5997-58cc-4cd7-b203-5fa272cf45aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 37976e8e-8ad7-40b8-9f14-c48419ac007b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 f1eec7e6-2a3a-4a58-ab76-8a38b62ca8fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC295;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD47A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'hC295, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #310 02ee85df-b03c-4241-ad51-21c81f529acf)");
unit.assert_eq16(16'hD47A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #310 3cbf34df-f8f8-4759-8e1e-9f283679aa7a)");
unit.assert_eq16(16'hC295, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #310 0bb9cd9d-648c-4419-a493-ba577dc49ee0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 70e8a719-96f1-4afd-ad17-97bbf54b5815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 8ee77c45-12ab-4df1-93c3-8067ab257f7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 655a5567-6742-4518-8002-63860a94b874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 415a5552-9a4f-4b4a-a1b7-5ea6729568c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 381242ee-f393-4cd8-a2bb-507a90549de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 bdca706f-f66d-41c2-bcb4-26db73fd917e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA6CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'hA6CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #311 6270733a-831c-4017-9c40-e16aafb3ce3f)");
unit.assert_eq16(16'h6E09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #311 c083a74b-ba5e-4118-9e6b-882464f49a26)");
unit.assert_eq16(16'hA6CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #311 da0b2bdb-2166-4d65-a407-5896df06e31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 0764b16b-6a23-4f3d-8318-023670494a51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 c5d47f83-96ef-4f9a-b0bb-5c9ef588bbdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 6ac2bf20-7a2f-4d20-97b8-dd5d693f7a48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 c61f10f4-7357-4fbf-b37a-18bf25d73b3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 19d487b6-c248-4669-af7a-d854b066cbde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 07646b0a-e2de-4192-bfc0-40af62b3c9c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4F89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9112;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h3C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #312 e244ebb8-ce68-49f7-a0db-6c1c086bca1d)");
unit.assert_eq16(16'h4F89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #312 1faa7d3e-3cab-4fe8-9853-9a8e7b33c837)");
unit.assert_eq16(16'h3C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #312 0184b833-5278-4032-9c82-722e177e9cf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 acb3ae99-b202-41b7-ba32-b723abfe7092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 5bf1d8cb-4e37-4028-ac62-14c6ddd225b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 1716161b-4d37-42d9-8569-7c200e4b5981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 8efcbb63-3724-402c-bd30-e2e3e8a48030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 b748cfac-8db8-46ec-9d57-e98817335e0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 31a83e96-12a0-4175-bb8e-287c39e74f53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF358;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9447;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5C69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'hF358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #313 57699066-bf07-4ab3-909d-8cc28e244f6f)");
unit.assert_eq16(16'h9447, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #313 50898992-763c-41ab-90f3-4d6b8aa86bda)");
unit.assert_eq16(16'hF358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #313 11a9c49f-56fc-4fa6-a8e1-5e3e8c848c45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 520d3bf3-55c7-4c07-b14b-f98cff24b757)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 a4b7a1aa-d924-4e41-a65f-2afd6dcf2b53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 8f488d3d-875a-4f0d-b779-e62aa99a38c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 ef70c271-7ab3-4aa9-85bd-19b4993c17ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 c654be39-10dd-4d96-8403-f7abe0d4899f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 1e8a0aa5-4439-49f1-92fe-91d6a0df7244)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF0A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4C3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE533;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'hF0A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #314 b1ab89df-3669-4586-aad2-9f2aa2b3e1e2)");
unit.assert_eq16(16'h4C3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #314 1cead4d4-1104-4b48-9945-88378872143c)");
unit.assert_eq16(16'hF0A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #314 cf66c2c6-7300-45ad-8a72-7288b9ec71ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 2bbf0141-7f81-485e-987e-1b3fc6981e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 843ade70-9331-4e37-b2ae-103043ab2053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 d20265f5-9d8d-40ef-bcbc-40e70d963c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 d8b74729-30da-4733-9584-fb0a075ae2b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 aed88dff-a9ac-4e7b-ba5f-24b276bdaa7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 41167926-004a-420c-8a0b-a1f53d3f1cc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h004C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAD94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'h31D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #315 f1093901-1ba4-4327-b720-8a16aa8e4030)");
unit.assert_eq16(16'h004C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #315 7efc0fc1-d52f-4e6f-b7d0-45b94b2e6a55)");
unit.assert_eq16(16'h31D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #315 30bf40d8-18c6-4060-9543-5d2002c2548d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 139b3a7d-bd23-41cd-934f-9529a69067f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 79822686-b4c3-4329-8304-fc0a9e9f0f84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 55aeaf30-c2d1-41d6-a7b1-ca08f45824f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 988edf1d-fd80-4561-896f-a3604c42bb2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 e4874d99-881f-4f4d-a02c-dbf28f120340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 df06d2d0-d829-4b8a-a1e1-51d5af732541)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCC95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h175D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF8E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'hCC95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #316 e0e111fb-05c6-4f7f-b897-de4270f18c20)");
unit.assert_eq16(16'h175D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #316 8056ddbf-0cb3-496c-8bac-eb3b676129ad)");
unit.assert_eq16(16'hCC95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #316 d51df531-b73b-4993-9983-0209007664d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 0781c330-dab5-4542-a184-b1591be2bd4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 d36487ea-db4a-4934-a779-96e7538863da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 ae120960-9d8d-4bc3-a14a-12d1d26f7053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 9ffbd009-cec6-4ee1-98ac-8f9bb0c55442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 532fc228-4b71-42d5-a7f9-5a254a1b4e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 f1cde009-6a64-465c-aca1-ba09474df64d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8363;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4BCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h8363, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #317 4a1e8a60-f888-4857-92d9-ea3b0006fd18)");
unit.assert_eq16(16'h7A00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #317 f598c96a-d05f-4cff-b44c-19e9994109a7)");
unit.assert_eq16(16'h8363, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #317 25649f6b-020f-44b5-82f2-fe3624d5d642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 96c8368b-6324-4874-8da1-97eaabb1402d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 7c506a58-04e0-4769-8f12-c713c86cff62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 0cce61b8-0da5-4dbe-8a17-9ced7d53b7ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 bdfcc202-6c87-4508-b19f-b3b22f81e9e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 467971d1-16a0-40ce-a80e-ed50c52f1da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 68bf8318-bf2e-4ed3-be63-0accf864a30c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1CA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h29BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA28D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h1CA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #318 a66dfa24-81ba-4f80-99da-993d1344aa94)");
unit.assert_eq16(16'h29BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #318 6a6a9449-4be8-4699-9fff-2c39fd5aa9b9)");
unit.assert_eq16(16'h1CA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #318 d325a1c3-25b4-4dcd-a595-62399701f4d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 1ebf8b62-5dc3-4e94-b627-3d5548212794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 6e730dc9-900b-4d18-a778-5290930f3c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 87446c99-ae33-43e7-933b-989ce78ed25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 9a02d625-baba-4822-b4fa-5166d5d9189d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 aaa0a339-4cf0-4485-90fc-49975ede5ea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 308e07ae-3e79-4943-8aba-2e821e324bc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9285;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h23E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'h9285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #319 931765a6-9d6d-483f-b3ad-01308e2def29)");
unit.assert_eq16(16'h6C25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #319 801de5de-7022-4c6a-820c-ba9dce10a40e)");
unit.assert_eq16(16'h9285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #319 a30ce4e4-61f6-47ff-a146-f67cdf51942a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 474bbbfc-7fd9-4391-904f-e6053776196b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 1965ca0c-8113-49d1-b679-805482190851)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 07574b88-b540-4116-bec5-8c4a81aa7818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 23988e27-f375-4823-a98d-45908d3380f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 68b41ee9-93ff-47aa-9f28-608289d29e74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 37999847-80e0-4d47-a59e-c3b2fd845b21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h14E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2AEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA731;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'h14E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #320 db99596e-3b39-4e98-bd43-de22ac92b1f9)");
unit.assert_eq16(16'h2AEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #320 f16d2a97-2671-491f-8231-4c0c81927786)");
unit.assert_eq16(16'h14E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #320 b14a5812-838c-4985-a453-070c10f0aba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 52760c26-6ff1-478d-a91c-8b691ff3cafe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 c7fe6fa6-e94b-46b9-acef-9a9f4a70935c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 35d6a695-d1a6-4e34-9161-3e723dd51d65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 03c84370-b6c9-4819-a920-44677eaee018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 21752447-9cbe-4fd2-ad15-5abb21de6f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 269e174a-4c5c-4647-b6b3-691513cc083a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE9B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'h4CE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #321 365bc23e-1558-47b4-b121-d002d05f4691)");
unit.assert_eq16(16'h1E5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #321 2d22edc9-3a3c-4849-97a8-2de5c83653fa)");
unit.assert_eq16(16'h4CE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #321 914ee544-4d00-4fa4-9dcd-7f80d3b98c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 2f42236c-f69d-4a21-8509-361c89dc86d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 f7310802-5c2a-43f4-88f7-560b64a6f026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 213edef7-0a5e-4037-b3be-08fc3bd4f48c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 2ed8ce63-745f-4986-a4e7-b9fc26af4251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 e7e97451-1656-42e5-87fb-3ca88a9642cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 cda32682-b361-415a-b345-34939881ccbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC9A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA38D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h99DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'hC9A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #322 35a6f1d0-aab3-4f10-a502-accc29b9ffd9)");
unit.assert_eq16(16'hA38D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #322 abda5133-e41a-42e2-bdf9-1fac40384d32)");
unit.assert_eq16(16'hC9A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #322 edac1ce7-0b13-4eb3-98f3-5f65ea35f140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 d726f67d-6e3d-4b02-8288-342485bb3132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 56a2f841-d8a8-4ca4-8542-7db54a9a7ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 ee654f42-5e48-43aa-aef3-50a50ce20a6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 6f7f7c9e-b684-4f7b-87c9-cd5bb40e157d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 6b3a00a7-8fb6-42b1-b787-408200c4c176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 38ec96b7-5ada-4f10-8a86-2f02f025fba5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h19CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'h3C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #323 f0ec1ed4-6a53-429b-8629-3090645c996f)");
unit.assert_eq16(16'h80DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #323 f06b4af7-182b-4143-b3f3-6ddea30b24b5)");
unit.assert_eq16(16'h3C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #323 45138345-dac5-42cf-b3ed-11895ff0359f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 90f52c75-32ed-4b07-891c-69deba572d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 0e566033-73ef-4007-ae3b-cfa327608759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 ae5664dd-aad9-4671-8a5b-2aee3c614eaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 52c271fe-242d-4262-a57f-e5fd8112948e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 da570075-02be-4990-99c7-3e1fd4922458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 4176ff44-902a-41a8-ac6b-077c75d51634)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h341F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4D82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h341F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #324 32954ff1-04b2-4683-be11-f368e22b9332)");
unit.assert_eq16(16'h4D82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #324 854929de-7cc3-4075-add3-d57e37c3975e)");
unit.assert_eq16(16'h341F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #324 9d301441-812f-4bb0-9523-d9c560c8a810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 f1042a81-381b-4ec2-a33a-98fe2552f474)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 ae99529c-73f7-4a2a-81ed-04d43cd4eb29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 418e1034-3cdc-4eea-aabb-aae1430d17ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 976c8c79-a52c-4d99-b54d-778965761d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 6e501c3a-9750-4c06-b9e0-07dd8adbbe25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 7fb6f1a3-feef-4576-ad10-07f16c6211d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2285;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDB63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h928B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h2285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #325 669324b0-54d9-490d-a36d-57d788619c86)");
unit.assert_eq16(16'hDB63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #325 12ab9566-58e0-4bc3-b56e-d4f2401cf6ef)");
unit.assert_eq16(16'h2285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #325 a2cc1f93-89ac-406c-9fce-66e04328affa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 1303f232-3c84-43a4-b73a-72a46695c216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 ab76bbc0-1871-47b3-b97e-1723663b30c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 8268101f-2513-4e61-8058-8d4ab0d3abcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 08fd71cf-0a70-4e01-977d-8780e772c94e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 1ef8ef66-2a97-43fb-913b-e46a8d9e853d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 3bf734bd-12d7-44c4-ba09-3901d5490ea6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1E2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h34EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h03A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'h1E2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #326 2f023458-0ba1-4e3d-a15a-12413a4bbce6)");
unit.assert_eq16(16'h34EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #326 72653bae-5c73-471c-b1b8-33befd819ee5)");
unit.assert_eq16(16'h1E2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #326 e05e7dfb-e8af-48f8-8a3c-f33c3556d934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 4d013beb-11fa-46e2-8a43-4dfeb85f3c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 7f52ae39-c0a1-40b3-91de-4fb84b92a51e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 c667b919-0c34-4229-86e5-8efe88548fb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 50a3cda3-c23a-4034-8c11-d14f9f95478f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 2a9b5e72-31b1-48cb-8273-f8e9fcacdf65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 21000bab-82d9-4570-894c-9e415bcb6ba1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD7D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAB70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h3C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #327 4408f656-49c7-4be5-91ea-5c4b302f3cb8)");
unit.assert_eq16(16'hD7D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #327 7428f927-f3a4-4a3b-990d-9f39e987cb87)");
unit.assert_eq16(16'h3C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #327 2bf59982-b355-4171-9457-23d7988fe4ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 8cc64bc2-371a-464f-9c54-65c2772010fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 6057895e-e5b8-41c6-b538-a25fcbf3daad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 db3dda5f-00dc-490d-a3c7-3c5d1cc3fc47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 17acaa96-21f4-4157-bcc0-70c3e1ef91a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 b80f28c0-9b5e-400a-8541-14d302922212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 93bac04d-d3c6-4d38-9f1a-03233f7b7a0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h65E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'h8C4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #328 bd8bef4d-5884-4a47-9494-56c661527d74)");
unit.assert_eq16(16'h04BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #328 d2cbf3cb-9560-4426-afb8-525a663e0a94)");
unit.assert_eq16(16'h8C4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #328 e22e01a6-47ca-4197-ba0e-f3c18d3f653f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 8ff96b57-6354-48b6-b8fa-e8c2f6d0055f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 51888070-3107-462f-b454-22597c6e67cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 b5936efb-e6b7-478b-b436-e7ecc1835011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 b571cf6d-3ebd-4a70-9bb7-b335c75c86af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 c0801bb2-8b2e-4620-a741-69de6cd84a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 14b26488-6026-444d-8e48-12d88c337257)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'h80C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #329 437f7629-7173-46ba-b13b-c5705a0d20e2)");
unit.assert_eq16(16'h04C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #329 043cc34c-730d-4785-ade5-a347564b9bdf)");
unit.assert_eq16(16'h80C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #329 20c5cb49-8074-49c2-9495-82ab36c92219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 1052ab1a-8ded-4090-b18a-bf9255d95728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 1c043452-3c6c-444b-95fa-adccf08c9f48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 ccb6fa80-f4a6-4571-b1fb-57dc3355e5a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 f3788be1-dd8b-4778-b6a6-02d73e8dd940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 6320a8cc-249f-412b-bbf0-9d9a7527f62b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 8f4fde35-fd32-4020-9328-ca21a17a2b79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h29D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAEC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'h3C66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #330 a87d1821-aec1-4fa3-9d48-38392dcc1b00)");
unit.assert_eq16(16'h29D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #330 018317b4-2dc5-4e9d-aeae-6899d4685bc0)");
unit.assert_eq16(16'h3C66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #330 15c9f380-e66f-4506-9b46-67466a0f392a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 8a00b98a-8bc3-4d6f-8fd8-7affabf03f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 fa1f914f-6159-4348-b156-8b43513991b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 134f07de-8ca5-4252-bc7a-84296412a751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 69592184-1287-439a-bd23-d8585eec5920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 05e10bbe-e07c-4945-b394-33e939596185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 290345f2-f5be-4a95-853c-7275d0fdfc1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6E6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC429;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3296;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'h6E6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #331 3642b4ca-3ccd-42ec-893f-a2e50974240a)");
unit.assert_eq16(16'hC429, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #331 b97e57ba-72b9-48b4-aef3-c627498da336)");
unit.assert_eq16(16'h6E6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #331 e5ba85e7-cfd4-46b4-902d-21d4106db20a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 32c0df0c-a87e-47b7-9026-b5014009c5e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 27b2af25-87bc-4fa5-9106-2574f4869c04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 8ec61eab-9dbd-4d08-9419-d128a12967ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 a7b074f3-933d-4964-8153-649ba3d0aad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 66345656-4480-435b-b8ae-f7a44605e086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 a2c4367a-2e7d-4061-8169-f763f47986ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE7FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4C4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h27E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'hE7FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #332 d0d303d0-ec4a-418b-8c6f-37b9741d1920)");
unit.assert_eq16(16'h4C4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #332 e00aecc1-d378-46df-92e7-16a9db3df6aa)");
unit.assert_eq16(16'hE7FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #332 6ea99114-fb28-489e-858f-684a4364e112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 bb3da35d-2ed1-4be7-b3e6-fa08de0ba269)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 b4a02fd5-980d-4884-a912-45ccd69a5e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 1791c9ef-6ea6-4477-b57c-83cdf61890fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 43c8f5a8-e7c8-4a63-a528-7e51ab7f523d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 3e0bba9a-2347-4ebf-a519-ded45286975e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 5b8c77bb-2966-4777-aed2-da1ab9da415d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5CD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA343;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3AF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h5CD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #333 eb3247c8-a89f-4c37-a11c-c5836ac42532)");
unit.assert_eq16(16'hA343, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #333 61d9a284-f06e-40e5-b843-032e7616cdda)");
unit.assert_eq16(16'h5CD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #333 dc2f38e9-d1eb-47f9-b8d8-09156367b24a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 3f7fbc74-58a6-49fe-b171-d7105497f7aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 61867b5f-c04f-4d35-aca1-021a178973cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 cd6fd49e-a659-4a1a-b665-fcd8cc94e917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 f04b34b1-633e-42c7-9488-e7cbe4612238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 88ad0f7a-27b6-43cc-bc7a-abd27228c39f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 4680f93b-5904-4ec6-8a31-af4ac4784644)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFAB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'hFAB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #334 c67bc569-86cb-4b02-aa81-2f6e905eca68)");
unit.assert_eq16(16'h9375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #334 541d14f1-f565-4cab-9450-bc9a5d3e4921)");
unit.assert_eq16(16'hFAB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #334 0207fea1-c701-426e-9ca3-eb4704dd323a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 c7fcec4b-000b-487f-98e4-397b1e44cfc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 c64bd9d8-cc2d-44e0-ab57-8a8812b6bab7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 c6639e9b-4e12-4716-92c6-a9b011b92ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 dba555f1-af0f-40d4-9551-4f2fdcac8c02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 9354e468-e86a-4479-822d-7b54f2d2b372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 1512cca8-e0d5-449c-811d-2f3140ed2b26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCCFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9721;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'hF5D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #335 888569a5-cdde-4980-9800-54a62cf07bd6)");
unit.assert_eq16(16'hCCFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #335 d584b5c0-c03b-4fc3-ac7c-7ce7cc3ce4f1)");
unit.assert_eq16(16'hF5D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #335 2aee3375-ff67-42bd-96db-d3747dbb7a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 85d236c2-910c-44f8-86ce-29ebb3fd3045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 1ce64490-4689-421c-94c9-ea0ed1d13e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 9b8feb3b-ff2b-4b2e-ada1-95ed59562e94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 e7359a61-66d0-4e18-a349-e33fdd11cc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 cb6865e9-0b0d-4dd5-8122-08919c92feaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 2f22eaa5-c13a-4ea0-b0d4-482183c79e64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFAA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA2CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'hFAA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #336 ec09f63d-2458-4375-bbcb-2ba8a76fee6d)");
unit.assert_eq16(16'h2F60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #336 0032fbc8-59a4-43a4-9576-4915b72dd562)");
unit.assert_eq16(16'hFAA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #336 e8733421-1c9a-49ff-b328-8815c94d364c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 1f8239a4-40ee-46a3-9fa7-a34ea1b4b401)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 557f4fc1-b5a3-40e5-a9ff-0b0acfbaec81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 748d6aa5-29df-4777-a160-c8fd6992fded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 21c121ab-e7e4-4152-8b46-ac5b206dbf2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 9e1b10c5-b0ef-43d6-8b3a-e92026c098ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 e9a5f805-0696-4d9b-bae7-a04be60a5abc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h07D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h631A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h07D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #337 798557f7-2a09-4592-8953-033537853e93)");
unit.assert_eq16(16'h8DDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #337 b5c29375-b34a-4901-a911-9b00c8018c28)");
unit.assert_eq16(16'h07D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #337 e9f6afee-ca43-40f7-9961-c93c1e3a069f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 05dab0a2-2068-46c7-a1a2-d5d722d2183d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 73081fe6-9e03-4ae2-8c2b-e4b9a1219e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 e824be53-d73c-4af8-a1e7-92ae87ecca21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 0425caf2-5e0f-44b4-9d19-cbd03831d17f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 2ebbda07-a8b1-4938-9e13-6e758de14813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 7dbf1c19-3a76-4f1f-85d3-d276c0761afe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBEB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h4EC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #338 a4d77f71-ac40-4505-a629-aae1d7f65f7a)");
unit.assert_eq16(16'hBEB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #338 44eebd3d-f2e9-42d5-b6a7-b091346192ce)");
unit.assert_eq16(16'h4EC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #338 bd97f8a3-ef7d-49c6-9792-58fdd0f8fd2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 2586eaba-f3ff-4f19-a4d5-0c59f4113161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 caa60396-2628-4582-8067-ef6293868bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 63ee7e30-e26a-4eb3-ab1a-d8f6ab03c97b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 95b05605-bf12-4d0f-a8c1-1da2bb5a8246)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 f9454054-8246-4355-bdba-312efc61b846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 0f87182d-c01e-4e60-a3e9-a6b8b78d39d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h924E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE886;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h924E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #339 1c47aa96-8180-46f4-91c1-55a98c67fa43)");
unit.assert_eq16(16'hE886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #339 f00d428f-84bc-45f0-8336-27293153c2df)");
unit.assert_eq16(16'h924E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #339 7fb4b3f6-84ca-4795-aae1-0818c4a1372d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 353e150d-68a1-4847-8d8d-0bab66c78e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 6b21e5d1-ee18-43ac-a449-f58b2b239fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 a315f2e4-4526-4d2e-85df-8f8e16cfe5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 e92ea05d-ccdf-473c-9853-bad7861219b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 b1d75990-429b-4eec-adcf-240b508806ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 9f9001d5-acdf-409b-854b-c77c0b1fcb5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3AFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8D2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h85B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #340 b7d614cf-6d27-4329-9640-2a3108242f34)");
unit.assert_eq16(16'h3AFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #340 25480be0-dd61-4c30-8dbc-9e59fa243053)");
unit.assert_eq16(16'h85B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #340 0b692c62-4b65-4c6e-b746-6e8884a887fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 7509f063-dcbb-47a1-9c80-16c1068c95fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 2d35682c-05d3-46cd-b2f2-394f811e7849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 39aa5e8a-ad17-49ca-b8bc-c32a46993793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 17c6a1f6-88cc-4308-b751-e7733540c1ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 4885d410-0b5f-47a8-bc56-fc2c5b54f666)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 b4cfb7a3-f209-42a9-a3f2-339262bfc9ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF660;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h51AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB912;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'hF660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #341 703318cc-d18e-4d12-bbe3-66ac5a80c5b8)");
unit.assert_eq16(16'h51AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #341 1978589d-9e15-4d7b-800a-aa509a8566cb)");
unit.assert_eq16(16'hF660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #341 dd17b076-b0b7-4d9a-b07e-d12f4c384d73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 3ff94f0b-d8a4-4c02-9354-89aaa1eac61e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 c6f1bb8d-c9de-40cc-b185-0f5ebe73defd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 00c6bbdd-1bd0-4344-a24d-7d60f1fc12fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 1564c136-991e-42e1-9cc1-c4e77a34a25e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 008622de-1094-4a70-bc4b-5b1e33e9b9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 de8f9901-8c14-471b-a33e-09be338e2741)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h31D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h29D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #342 95e8d1b4-a70d-4614-9f62-7222c0aacd3e)");
unit.assert_eq16(16'h31D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #342 60e7392d-33b7-469c-ba37-ad80daef3b0b)");
unit.assert_eq16(16'h29D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #342 e7b91ec7-c8c9-489b-98f5-a4e1b4d44788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 6aab84dc-cc5a-4faa-a3cf-78e09bb07175)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 27596c9a-b8cf-458f-99b6-ab685575aef8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 dc97b8bc-b6a5-424b-9242-f49bb0a93cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 6ae50b87-d4eb-4807-b232-2dc5eeec8bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 7cae4177-4b60-415d-8da1-89cd5184f6d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 1165aced-1c97-4a75-9331-20e2a77c1bf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h169F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'h99D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #343 356f1b48-eab4-4b1b-af88-5179608a7c9d)");
unit.assert_eq16(16'h169F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #343 be8cf35d-0ddd-463e-9ddc-b71439d85936)");
unit.assert_eq16(16'h99D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #343 fd15a8d9-6f16-4ac5-90ef-6f8b3f33378b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 35cc3303-0fa7-4b1e-98e9-893cd6324087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 432bef72-c5c6-4e1e-b36e-9070f0a44ff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 e7528442-8ff6-4334-b21e-106796daaab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 f8e57381-09c0-48e8-8fca-4303006106c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 e6183377-a044-40db-9daf-81f7b882e49b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 3075c740-9bdb-45d3-a581-15ad71400bd5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h71D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'hB7E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #344 c50985e1-fad5-4ec2-9659-feb1ae0750ec)");
unit.assert_eq16(16'h71D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #344 a223faa4-40e8-4358-898d-c0b1c9099fe4)");
unit.assert_eq16(16'hB7E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #344 fa4e27b6-4a8f-4700-a8fd-1fdab6a41a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 7823a286-9d38-46b6-bb48-491a161ad8f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 1ddf0c90-c476-4a31-bb13-98a7018dd414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 a0daf42b-9cfb-4b6f-a80e-e51dcfbbe6f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 93a65b92-051b-47dd-abab-455ea52e6e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 a94254d3-bc4a-4cb4-a00f-f761ac323c72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 4138a786-ab42-4dac-9df8-5466d95a79f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA533;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h1DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #345 ee7474f8-f1b6-4eb4-a006-93bb67f7d1d5)");
unit.assert_eq16(16'h9A79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #345 b9839d9b-7cf5-467f-88bd-ed23d5759414)");
unit.assert_eq16(16'h1DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #345 8b51d953-df3b-42f6-a115-5120d5738b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 837ef5eb-efff-426a-96f8-415c6a6fad5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 d6669f51-0a8c-4597-8f03-f6b13dd265ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 c2f3e07b-7749-4bd5-8e97-3a36c335e1c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 53f9dbe7-5155-430b-ba50-b62c2b640d7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 e16aaa5d-0fce-48a5-a25a-eb645db74b4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 ea4cbe43-9c38-4702-9863-8bb627c6edfa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD02C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE023;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4BAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'hD02C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #346 b57d7c6b-b0e2-4984-b7fb-221e03f5ba24)");
unit.assert_eq16(16'hE023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #346 b9098de3-55bd-4142-80f1-583e16f0f0f6)");
unit.assert_eq16(16'hD02C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #346 4c0bb0f6-e58c-45bf-901a-ce3ba438e0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 1911c0b4-1b19-4d48-9e9b-a066e90eebaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 5863a15e-d915-46af-bea0-5b71132170b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 a3ee13a3-b14e-43d6-8f74-c1f1426d51a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 938f96f4-b603-4480-9748-bc855f574531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 a1cfcc57-b703-48d6-835d-8c5b627ac415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 d350db40-8886-4493-9678-f740249b9014)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF4E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB14F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'hF4E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #347 007e4fd3-23d9-43f1-9a5a-76d14c8e03bc)");
unit.assert_eq16(16'hB14F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #347 a648b5b5-4ebb-475c-a3ca-1515873a1495)");
unit.assert_eq16(16'hF4E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #347 a8acca00-fa51-4d42-b3db-c8dab3057868)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 baa28f72-c9cd-443b-ae59-24c22a044a3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 d4a294c8-dc1a-4004-9fbf-c5d57565bf81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 c4bcba05-717c-4949-806a-27ba1fe3cda4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 a7d051ff-7325-43f7-95cb-55f0c77d353e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 0b9a4edc-d34f-49fd-87a5-07d648e8500a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 4ea9a3e6-f03e-4c6a-ad28-3f74d113c36e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB282;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'hB282, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #348 5ed1abcc-8dda-48fc-b8df-2abe74916d51)");
unit.assert_eq16(16'h0B72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #348 ce5549d1-68c4-47dc-a0ea-f93180cfa92e)");
unit.assert_eq16(16'hB282, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #348 dbc252bb-33b6-483b-a511-18e976111429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 390d6711-8281-42e7-a7c5-75f49c43d12a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 dc210d7d-23be-4beb-a3ab-586659ed6c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 a91806a1-d07a-46b1-8c62-f7afbfaaf64c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 b87427ad-6321-4c96-beaf-3f9bc44ef423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 d4133c6d-ed11-4058-ac49-aa7e07280dd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 8ed95684-59c8-4a8c-a703-5d19ac3dd721)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1918;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h11D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h1918, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #349 5e515c9b-6e50-44f9-8343-816bb367abb5)");
unit.assert_eq16(16'h1DFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #349 4bb3313b-48c2-44b8-a752-fec0600f2e93)");
unit.assert_eq16(16'h1918, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #349 22e6f3fb-2cce-4f77-904e-09de9ed9cf56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 a5f2b4a3-0538-4a25-9e06-6d6242fa535d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 aabd1150-3c64-4716-b1d6-0dc970b4ab97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 5521a523-d89b-4a1f-bf41-7e68e1063b5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 0a1f9d55-38bc-467a-9c74-dabe40fb5c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 4b4651f9-acc0-4af6-b507-67dc67dc59f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 5a97c69b-200b-4da4-8944-fc7a0483a78c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h847E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h17A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5418;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'h847E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #350 c4bb171b-de75-4f84-80cd-ffe77a1d711e)");
unit.assert_eq16(16'h17A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #350 716e485a-b7af-443c-8720-4eec328cbba6)");
unit.assert_eq16(16'h847E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #350 fb565433-29e6-4ff7-b466-cfe3a6f30e95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 1a72182d-e385-4ba0-a1c1-42d8410019f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 d2263cfc-c012-4f8b-a4f1-53e36ac4f4cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 6ef1a7fa-1643-41ce-ab89-90445544518c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 5009b3d5-1503-4fc4-8e37-247cd7722623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 28f893d0-9eab-4719-84b0-850787d407df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 f0f3d167-d420-40ec-a642-77cfa199a289)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEAB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF271;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7455;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'hEAB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #351 4c28acd7-a457-475a-8040-b02c0c198ee7)");
unit.assert_eq16(16'hF271, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #351 020be2fe-676f-4d77-b306-b6e20f910b3d)");
unit.assert_eq16(16'hEAB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #351 266aa6ee-fca5-4e06-b154-600bded201b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 d19fc7f9-2b37-4473-8da4-eb1b856de58b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 e3951806-c298-4001-aac8-51b54566bb59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 939419f2-b382-45ae-9a3b-a2fb43909ef4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 ba89d512-97ec-414e-91ea-6ec2dbe3e070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 a27c8245-156a-4280-8c82-5b9291182d41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 4b497cd1-f7cf-4f4d-9644-0d7b02f370bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7261;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h0B05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #352 fd383aae-3132-4d03-9210-52c831ce902f)");
unit.assert_eq16(16'h7261, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #352 d3f96508-2044-44e0-bfe4-f12ac79f31d1)");
unit.assert_eq16(16'h0B05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #352 7fbc435f-e7e4-475f-a381-06e900a4f88f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 1440b0d1-1744-4b7f-9863-b7c78316e62b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 096dcaba-88e4-431e-a606-4e923901968d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 3e3d096e-602d-4b65-9e39-92870a72ea9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 c7448f70-a82d-42b7-ba11-44c1efa74408)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 e77ce2c9-8f32-440e-a914-6d2b91bfa1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 6c5f4de5-a7f1-4cc6-bfc4-5ab2f9cd90c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFFEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB50F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF9CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'hFFEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #353 b85bab15-ab8f-42e7-aef7-1efc755d2872)");
unit.assert_eq16(16'hB50F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #353 98a21733-0a9c-40f3-b3f6-9ff36a649281)");
unit.assert_eq16(16'hFFEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #353 c073d2dc-2d16-42c7-9832-325bc33ee21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 425320fc-7f74-44cf-9cf4-1074447b2f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 89fff447-3657-4452-aedc-d51d1886c534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 af0f5a6a-fa79-454a-ae5c-4c21321691df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 96c85689-e45d-4c7b-9184-7f1e3072891d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 1dd9c4d6-951d-4d92-bf4d-c375c9b4179b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 eb78a645-8cd3-48ef-bde3-3e00f7b15c53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF625;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7649;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'hF625, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #354 6e3ed8e2-2a05-4947-a256-62fbc5e7fd75)");
unit.assert_eq16(16'hE031, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #354 876d7146-e10e-423d-8013-c514e56fadb0)");
unit.assert_eq16(16'hF625, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #354 8c8ec152-b3b4-4e2b-877c-fb96d01de56b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 cedd2bd3-4c6b-433e-bfd1-b5eb0a266ee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 e33a9172-e301-4d2f-81cc-f0967cb9bf37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 80dbd6d2-a727-4784-9451-9536f71711ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 86e385db-7aa4-4255-be41-15481f88f5d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 60d66cbd-0476-4031-8952-6e4564e34ddd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 40bf3392-0cc1-49ff-9bdc-f63e75025279)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE657;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB963;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h278B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'hE657, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #355 e71c66f8-3f5f-42ea-a78c-4b5e9298303d)");
unit.assert_eq16(16'hB963, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #355 582b5ce7-42fc-4a98-b32e-ecf42aea421b)");
unit.assert_eq16(16'hE657, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #355 c7b1a2e0-ca5b-44d4-a4d5-69b2289c7013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 da6413bb-f9e4-4614-b66f-751c271765fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 d7801463-1436-445c-b226-87209d5c3edf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 c5ca5300-ee0b-415a-a1b8-173d24d3adb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 e18eccd6-0778-4eb2-87ec-e5443aa10ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 2020171a-8962-4388-855d-7165453dc541)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 2da956d5-5008-455f-81a2-7754543595ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE592;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA20E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'hE592, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #356 cef89a15-a5d5-4b21-a6e8-2485e4941790)");
unit.assert_eq16(16'h7D6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #356 4c08a2ec-212f-4865-ae4b-b60c6ea42c7e)");
unit.assert_eq16(16'hE592, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #356 64d4dee7-686e-4ea7-9a46-4f5bcaaf1a0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 049df28c-565e-4d87-a582-f0f954c32e3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 2aed354c-88e3-43c1-86fb-f8523a605c24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 3bcdbe23-e660-4312-a130-27296d17c268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 ee92d2cc-12bf-4841-9f8f-bcd977e1673e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 d8d58393-734e-46a9-b823-fa21080f8f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 1f8ef36c-fad1-4137-9d23-716c537841d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2815;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h15D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'h2815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #357 323256d9-9eed-492c-a8be-8e73e14a5a60)");
unit.assert_eq16(16'h15D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #357 2c11ddef-df53-4f87-a661-85ea02779c39)");
unit.assert_eq16(16'h2815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #357 71102aca-ceef-4f28-ba61-35f7e8cdeb3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 d94ec516-84c8-4d1d-a387-1560ca67281f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 2ad68348-a7e3-49e4-b600-b16132956a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 91093e75-4eb6-46c1-a66c-eb06a56fd862)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 7a5ff9a3-9031-49b8-a8ea-283ceac03803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 2051bd24-3908-420d-8602-8873fae1b8ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 d9118e6f-b301-4bba-8e8f-e911eab2454d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCEC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5961;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'h3B8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #358 e5a47ed6-6515-487a-ba10-3901fd720fa6)");
unit.assert_eq16(16'hCEC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #358 163bf08d-7233-4754-b35a-145c092ddcb7)");
unit.assert_eq16(16'h3B8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #358 24bd09fd-3039-4f05-94ec-7e8aa7ca90ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 54fcce96-dd8c-402f-a7cb-03add4f7dd55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 96993fa4-ad9e-475e-a1e9-089365fa16af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 ad3c4ebb-3360-45b2-9a17-aa3369ba84c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 1f178c3f-45ac-46d4-abb3-e65859be6204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 6decbdb1-b34d-472d-afca-57c7ee70d5f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 580fd2d3-e112-4a09-94e3-6598e8748501)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ECE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC084;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'h4E9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #359 831cb08b-0308-4060-9eb0-e8bc7f090037)");
unit.assert_eq16(16'h0ECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #359 9b2961af-3f5c-4a7f-81ff-9489210f5d3b)");
unit.assert_eq16(16'h4E9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #359 ab9a4d16-2f7f-48c1-88d7-8b64fdbd1091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 436233ba-7d84-4a01-a192-1a2fc3ff4d71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 1a8e2ef4-b23a-4ae0-850f-73b9c90b3d73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 1bd47424-be1a-4ce9-9c81-1a783e466361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 7fcac67d-4651-4649-aa45-9d2897f016bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 9cefa509-631b-47dc-ae93-c7e6fd501aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 3b65a2ac-aac2-44cd-a908-78d73c01747c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA67B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h49F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'hA67B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #360 f4b7441b-0301-4d86-81d6-0b275d3d81c2)");
unit.assert_eq16(16'h76D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #360 49554bf2-7d59-4d42-94b9-3b9fdc559172)");
unit.assert_eq16(16'hA67B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #360 26b2abbc-9a69-456f-8a6f-02944c7b15a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 0f49f6bb-8a9f-40f8-885d-349d68f99895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 0b1e3f86-ec7a-4560-88e0-60ae97dfa2ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 1a54407e-9342-4de9-973b-772f0940d8c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 3f459071-8f96-4e35-a346-2a4a466214c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 4428a3a4-258b-46d6-a6a2-d4d98ec9ee3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 c240aa6b-d256-4cde-b671-042a2871a43a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8327;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD5CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'h8327, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #361 411e8504-79da-45c8-9547-ae77f9fff144)");
unit.assert_eq16(16'hD5CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #361 4c6c0fd5-2b41-470a-8a57-b3bd03634a8e)");
unit.assert_eq16(16'h8327, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #361 19075b5e-32b4-4e53-80fd-cb25f51dd0e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 40061810-51a0-4700-bba4-4d766c56dca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 4e892edc-cfdc-4a68-b925-1db378f0aab1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 6c637d3e-b8ee-480f-9a77-86bd3c9f9c3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 aca8ca9b-b193-4fd6-ac7e-3f012831451f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 53e55438-3510-4521-a760-87308a6babe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 4f819351-8e03-44c3-9eeb-8600bef954dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0931;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBDC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'h0931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #362 b923fd9c-7574-4f0f-8d76-834673385ac3)");
unit.assert_eq16(16'hBDC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #362 18817936-ebeb-4b02-96c2-c9ababd1730f)");
unit.assert_eq16(16'h0931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #362 a6230768-841c-497b-8689-887b742bedc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 385d244a-c979-4e70-8056-5aa40166c20c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 32cbcc9f-2822-4566-b3a5-da1317a044f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 1542eac9-8b8f-4e6c-a62b-02f3a656a382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 71591490-fa57-4483-8a0c-91ae9196c352)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 3c1d7adf-af1d-4c09-b4f2-83428d5cbf29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 3ba561eb-a145-4a99-b9e8-d9a74cd4b0b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD259;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA313;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE733;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'hD259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #363 2beee572-8010-47cb-9fb0-65a3bff2939b)");
unit.assert_eq16(16'hA313, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #363 91c9272d-99d1-4259-beaa-2920675fa9ac)");
unit.assert_eq16(16'hD259, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #363 a1ef7b29-ca55-4505-926d-24d88a478dd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 8b4b17b4-ef6f-48cc-a763-f5398bfe47d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 e57c885c-34e5-4f59-8969-3d285f615968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 a4f9b03a-d365-4f4c-9896-be52f882bc53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 a1781bd0-5e0d-4f45-b4d9-d3208e7368c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 a2406055-067d-4772-8661-4510ccc8d5b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 67d3bff8-2fc2-4def-b0b5-afcd1dc6c496)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0698;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h091C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'h0698, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #364 1bd1c9fb-2cf5-425e-9776-5a1eedd8caf8)");
unit.assert_eq16(16'h9DEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #364 b9fba8de-d0c3-49b7-a302-f60fa5eece81)");
unit.assert_eq16(16'h0698, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #364 5d6ffbfd-5cac-4894-8f96-9aa0c8132e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 a6087405-6bc3-4f3f-8e46-94ffcb727975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 4c6bd152-1919-42b1-9227-fc49082b4d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 79cbba7e-ee14-44e9-af78-6ea3e8be1c71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 8456c5b7-3f75-407c-a645-68dc014dc8bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 1d0220b5-e0d3-46d0-9b5a-8ed60f09552b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 85be7472-2787-4ca1-a1a8-5292d334eacf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h31FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'hE6B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #365 b0ba70e4-7d15-4761-b3c0-70ad57091550)");
unit.assert_eq16(16'h14D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #365 1ff50517-f5d2-4fb6-af2e-37e62a91b62c)");
unit.assert_eq16(16'hE6B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #365 7da40cbd-7299-4eff-83e4-04529fa4e962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 31487004-67f2-4c43-afb4-a23a4dfeea8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 d2ccefb1-0e0f-4cdc-a6a8-2dd7144d589d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 0704f511-eb5d-4c93-ae45-2d240e7cae33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 5fd46f5b-cc42-4311-8c22-526db37e0f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 fd01cb5c-43d1-426f-b215-68d2d9cef0f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 1dccfa4b-dbed-459c-8988-0371d2febdb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7990;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8A79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h7990, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #366 35ff6a57-957f-4a91-87ad-4eaa5e5ef467)");
unit.assert_eq16(16'h2C21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #366 a47c1de5-26e1-452a-935d-ea3fd4f0bd75)");
unit.assert_eq16(16'h7990, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #366 4ffbd736-4451-4e79-99a1-44bbaebd781a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 5b6ea2f2-5751-4543-ba91-8b705578dac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 b5041ea7-8ead-411f-a6d0-015204f12759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 91a915b7-5d42-43b5-9162-a7b4a010a96d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 9a43f1b4-a303-4529-8d8f-abb2f962b7f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 1081c4cf-6e8b-471d-a7ae-f9541ec1ebec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 8d057a79-10e9-4de9-9dd0-a6c08168a83d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4DFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF043;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'h4DFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #367 ae55a61a-a3c2-4684-bfb2-553ba78e68cc)");
unit.assert_eq16(16'hF043, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #367 ed92e2b6-dbf6-4973-a937-611934d83cfb)");
unit.assert_eq16(16'h4DFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #367 f26a7973-2c77-40ef-8e9d-b6702f1657c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 2a937238-b489-4201-ac8f-14fd4be75b15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 7c2d3249-4c2c-40bb-82ce-8aa1ba17924d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 de6311b3-bb53-48a5-b4c0-537df9678bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 560b96c2-3caf-4c0f-971e-05494e658fb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 8c07d35f-91c1-45d4-83c8-8b686e227f55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 9bab93a1-83fc-4532-9a71-5279a2bd801f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3191;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA3C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'hC0EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #368 da7e08e7-fc64-485a-8f4a-49fd68ed985d)");
unit.assert_eq16(16'h3191, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #368 26df270b-24ca-4a44-bbff-b4181347aee9)");
unit.assert_eq16(16'hC0EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #368 4368cc1e-642c-4932-af41-caa3d6834aea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 2eab9026-6af6-4c99-8289-c2696885cdae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 7d842e6c-1811-4bb1-9120-bf01886a826c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 22cadd40-f973-4729-9cc3-9735fea0267c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 0989c53b-6f08-4758-a6d5-bd3ead359b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 db1b1d84-40ac-4483-b22f-c143a58cbdb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 eff362d9-7e13-493c-b5f0-401a84be18dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h067E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA30E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'h067E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #369 10421ce8-7bda-4a12-922a-eeb82ed0d7eb)");
unit.assert_eq16(16'hCE28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #369 2fa1c716-6122-4736-8a25-d28727fae750)");
unit.assert_eq16(16'h067E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #369 d26997ab-7da4-457a-96d7-7f079b6a06be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 0e99463c-2799-45e5-bb10-c6ff962c5db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 7582deb7-fcd2-4782-89fd-5571573c35de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 eb7a28de-804d-4a9e-b039-ecc81be80899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 73685582-5cde-4e54-8370-39ac298d3168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 c0bba09b-c684-4e96-bf45-62b075892cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 0137bda6-e8bc-4b7f-abda-4a409ee2b9d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0788;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6A97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h29A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #370 6d67cdad-9a92-4d8c-9a6e-8f22c9609029)");
unit.assert_eq16(16'h0788, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #370 87be8cba-acde-42b3-b4ae-d48288d68b59)");
unit.assert_eq16(16'h29A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #370 23ee7666-9d4c-4ba4-8350-9a86402cc611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 b05832ad-4096-4408-838f-fe43961f6a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 b3499e0d-806a-4a31-8524-2d227c5200ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 fb15ea3f-cdcc-467b-b048-5d58f06fd850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 13606cf1-d69f-4ee0-88d5-0c17c0245da5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 7666b735-8668-4cab-aec5-65d4d102c34e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 5147157e-6779-46ce-8125-063be7d8745f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8EC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCFFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE79A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'h8EC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #371 d4818c34-40f3-438f-8311-723e34ee3ce2)");
unit.assert_eq16(16'hCFFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #371 dc4b3eb0-cc05-4b48-af51-253a7e4eb6a6)");
unit.assert_eq16(16'h8EC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #371 5de93d4b-a042-405f-8e4e-5e307d2c0c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 6103ec04-5632-4e1d-b8f0-63139d686f9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 0f7ce6f8-a9fc-4b80-a72f-c22f51e8439c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 e7d51a5c-32b1-4f9c-a79b-a2c1f39ef655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 846340b8-ff81-43a1-83a1-c4f46fe41c76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 c9d58b03-c183-42e2-8398-711c74afe38b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 8ef4f589-3d58-4733-bd77-b0faf641366a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8CBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h53F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #372 821a7b2c-98e6-4d8f-81e6-54e081dfd42f)");
unit.assert_eq16(16'h4FBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #372 7bc1da93-e104-4292-ba43-97fe654168d5)");
unit.assert_eq16(16'h53F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #372 181d1f30-a9de-4432-b814-0b0501638123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 c35c74c8-057d-40c6-85c8-a6076af60396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 19231713-29e8-4dec-a8fc-5e7eb6951aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 512ee95d-a72a-47f6-8dc2-2958462ec634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 f3185fb6-a667-4e0c-b66b-3ebf61b31680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 ef410c37-103e-43db-bf83-384616b0f295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 40bdcef1-b7c0-481d-8ccd-146500f46e47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5D64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7AF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAD2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'h5D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #373 1070f7cc-0067-4b13-ae5a-4eab6fada5ca)");
unit.assert_eq16(16'h7AF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #373 f01f65b5-d195-4af8-8205-571856e21daa)");
unit.assert_eq16(16'h5D64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #373 68bc66b4-1ad4-4f8f-901c-956d31907a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 b3fe47ef-bb58-440a-abad-ad4a98337436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 2dbdde81-ef92-482e-9c5c-1986aeab9765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 952a882e-45d9-472d-b35d-09b2c6b07d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 a3ff805b-92a5-4757-bab2-adf91d8e634d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 74889a2e-5297-4f8d-8045-5159ed8cb569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 6e6b1cdc-600f-4b06-aa8e-faaa743ac24a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF855;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB721;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'hF855, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #374 454d8a9a-709b-4444-bfa0-eb2abb30ba65)");
unit.assert_eq16(16'h08D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #374 e269c976-692c-483b-a08a-734df702f205)");
unit.assert_eq16(16'hF855, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #374 3923d4aa-96eb-4b93-b723-a575911e1d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 e9c1c9c9-6ae5-4be2-8dcd-2d52bebcb0f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 ce390255-9494-49af-b0d9-287f6d253fc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 1cb5f3e7-e193-45e8-bc40-8f225125375c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 b3efcfb0-5897-4e64-bcfd-a59bb81b5b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 d4b27173-2b89-45e5-9673-8dc373f2e590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 f62c3a8e-57d7-46f7-a6b3-4eae15d53745)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1A37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8540;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF948;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'h1A37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #375 f8e468cd-6a27-4c06-88ea-54304d51f43d)");
unit.assert_eq16(16'h8540, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #375 4ee0ae8e-8f78-4ece-9c30-6026989d0b29)");
unit.assert_eq16(16'h1A37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #375 3e29050f-4af1-4919-84d7-ffee982d0632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 16589f1a-ab03-483a-a6f3-c294c697f1a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 b22d337b-e8d4-42ad-a740-e8730810fabb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 b826f92f-3d5a-4e8b-8775-bd47b7250ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 f7dabbd6-7f74-4987-bdb2-67c7add67288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 6a763f2c-e18f-4563-b665-d0499076b629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 bc4a2d57-8353-472f-b18a-c02b90602d9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3206;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0349;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC27B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h3206, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #376 6dea7810-33c0-475e-a10f-0fd64523fc50)");
unit.assert_eq16(16'h0349, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #376 bc4bb1ce-66c0-44ab-a05d-ac914c1e997e)");
unit.assert_eq16(16'h3206, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #376 e725a1b9-d0bc-4596-b5e2-9d74220e13c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 971b80d3-5558-40f7-ad72-394a6807adbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 b10983be-6720-4650-b7ef-d6be93ed5a0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 edc806ed-dd6b-4466-8b46-0609dee5e1be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 6dea97ef-b5ba-4069-bfbb-39a0c7ee6719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 b69dfff4-3483-4d77-8b50-75bfa6d6f509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 49a14f86-2fc1-4dfc-9f37-81a84a43de54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB63D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE9E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h791E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'hB63D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #377 43ef735a-8335-4466-bf39-413d4405a0f7)");
unit.assert_eq16(16'hE9E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #377 6026b5fe-6194-4b2b-adee-545aabf60a03)");
unit.assert_eq16(16'hB63D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #377 3f9c92a4-4a3e-4615-adbc-4c541078466e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 bb5f547f-7977-4297-a07b-e5527f050c4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 dda85476-fc7e-472c-b8e1-f70c7d9e4280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 947e1fb7-dd45-428e-859f-9020a7eb962b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 ce378ad4-a41d-46da-a627-52d89b765eca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 31e04441-d259-405a-b838-8365d3048f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 a50577f9-93d9-4972-9557-5ce1d1deb7d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB282;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD3C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'hB282, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #378 1f16c0ca-7683-43f1-8b0b-26827ac6c20b)");
unit.assert_eq16(16'hA9FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #378 49f20bfa-87c6-4569-ad26-7dc1b1aa8c90)");
unit.assert_eq16(16'hB282, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #378 9c8e04d2-7d83-4625-90d6-3f2c843a0930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 59d11e05-f379-4442-a16f-10dfdb44fdcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 244dfb7b-7a60-4b55-b26e-d48e233362d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 a39e844f-41dc-4b5a-9d02-233cc68b83f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 ecfdb490-07d7-4a2e-b598-ac1f37e000f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 f4978a6c-1340-4eef-a7a5-0ae1aa6f3b06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 56fb6b36-3366-4d47-ac44-8438af13e52e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'h45DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #379 681deabe-3605-4a87-939b-14e4a444e86d)");
unit.assert_eq16(16'h6D68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #379 c0ed3701-7134-49c5-8c6a-591bc11a1ab2)");
unit.assert_eq16(16'h45DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #379 8f89f236-a003-4cea-bf67-13ae3c70f2c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 df18d2e2-8599-494e-b859-8068b7ef3a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 3b73ad0c-4d90-4f48-9a85-8c0e133e5244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 fa726edc-53dc-416b-b5c1-1245bfeb1b27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 3b9e4039-5fa4-4890-a4bd-2d22e1827dc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 4662e5bd-8484-4d6b-8e41-60fd27526496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 6076fbe7-9b81-47b4-ac3c-1d83467cf6c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2135;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB153;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h044A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h2135, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #380 fb439004-f40c-4f16-bcc0-31eedf45e22f)");
unit.assert_eq16(16'hB153, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #380 a44bd672-d4eb-4805-9045-d44ec3e21e0a)");
unit.assert_eq16(16'h2135, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #380 5cdb21a0-eff1-4798-bf9e-2a31637c21c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 e5764edc-89a3-4315-8f08-1a4755b4ccff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 4f34b462-0191-457e-8619-a1ad357c504f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 d9ebe34f-1d66-4f0e-b4e7-5a4de3bdcd44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 9537aa81-297d-4737-a953-89f65b329a05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 f91ccf6d-5ce8-41b1-913b-b522c807302d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 825bd5f3-e86d-42fd-a745-7bf5195f9ca8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9CD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h21DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'h9CD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #381 a641c0ea-9a05-425f-ab0a-d605915dba2d)");
unit.assert_eq16(16'h21DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #381 08ee8108-c73c-4099-bdc8-14b7c1b7b403)");
unit.assert_eq16(16'h9CD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #381 efb69747-682c-4488-bb23-09237a59b757)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 28a03f66-f706-4a5c-b900-b5bdb0ca8a84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 1652b164-b95f-4c81-897e-7025f92cba55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 57ccc70a-7cc4-4dd5-86ac-9492968aaf75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 1aa5488f-cf56-4119-b342-1a2235318b50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 f4f483ae-f5d6-402f-a95b-c639eb455c33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 13e84bf0-c5c7-454e-bf36-c753b151ecaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFFB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0109;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9C91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'hFFB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #382 3e3d3f1e-ccee-4ef8-8520-bda19f4b4ddf)");
unit.assert_eq16(16'h0109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #382 d7320c88-cab3-4488-9b92-6262ad9522dc)");
unit.assert_eq16(16'hFFB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #382 d463ed02-71b3-4d0b-8aa7-768b1dd8330a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 d4a91e2d-7934-434c-b8dd-373db1dd78df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 2fe5b010-d913-4c8f-9760-940041363df5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 190f42d9-c40a-47e3-b3cd-006faa77a2b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 6f3c91c0-c8c1-4054-b4f5-74aec4366796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 58775884-10be-45ed-a37c-9b3ff67ae253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 9deff901-c1fc-4e5a-aa84-ba832b1b8bf3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h64AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC023;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h64AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #383 45e8a2f9-8f1b-49ff-977b-44f9001331a8)");
unit.assert_eq16(16'hFD8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #383 7bce8761-0850-49d3-a3ad-98879147fdbe)");
unit.assert_eq16(16'h64AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #383 5bad7948-d4ca-48ba-8844-94ce1096e6bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 23a59172-a76a-4bd3-8497-c4fe26901d7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 b0891078-67dc-4206-8ad1-b58fc894032b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 04ef18c8-75d3-4cb6-b081-457733d62295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 0769719e-a02f-4b55-8097-b6f4f74af131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 043fbdc7-1bda-4f91-b532-8a8ad013e124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 fcd571d5-1739-45f3-9815-a6b80831b304)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h028F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2420;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF37C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'h028F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #384 b502b489-36cd-4a7a-b7ad-88da9bd94d61)");
unit.assert_eq16(16'h2420, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #384 ee19a26d-bd84-4163-b2ff-b33d1ed26268)");
unit.assert_eq16(16'h028F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #384 25219a07-f689-4bab-9421-faf2c79fbd6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 56b025b3-e728-47da-99e6-a738952fa56a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 1f9254ae-e50b-4d80-96cd-e7d42bf20641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 544c9886-d6f5-47db-9924-dbde834ef539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 8e8a4021-a814-414c-ba7d-08e9793d003d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 6baaf996-3936-4e65-9dc7-ab859280195a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 186600c1-da7c-4af3-ab17-bc61de196e97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB202;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h0DCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #385 897820d4-b8d1-42ba-8def-62bcdf0be521)");
unit.assert_eq16(16'h4B17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #385 3c8a3fb4-b819-41d0-b314-e3d033dbc4c2)");
unit.assert_eq16(16'h0DCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #385 dc01a1a1-282b-43a8-9d5d-dc6c8c6f5c82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 bbec00b1-feb4-45d7-bb83-346cc43cc5dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 a0f9fb94-953c-4a97-bc25-f3e3bf8a9d5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 e7a0febb-1489-41c2-a896-fef3763dd501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 8e781dfa-9d6f-4989-b5b5-7bc1c966a6e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 05e68c75-539f-4710-9cfc-07730b72d588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 8fb1465c-600b-4bbf-a79c-9940fff414ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4216;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDF46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'hDD31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #386 06bc9ca6-f4da-459c-83d9-e0aaeac47cde)");
unit.assert_eq16(16'h4216, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #386 4c448a71-4405-4584-9314-a57b6baf74e4)");
unit.assert_eq16(16'hDD31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #386 5c44e078-c3f6-472a-93e7-1ddb638ecab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 53852818-7e72-4ab2-95ce-b0c03e4abb4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 18980493-fb1e-4f71-b16c-7ef766240218)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 84ab242a-4310-4581-aaf3-3c499509d1f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 38f9accb-ff77-4733-a15c-d014396265fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 20442961-4304-4aa4-bcf0-8d78d89756ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 e64e0dd5-56a8-4348-b975-b2726f3b50bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'h8C94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #387 3aa4ab50-19a9-488d-8d27-a7819d33f47d)");
unit.assert_eq16(16'hCF9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #387 c509ed90-dc58-49a7-9227-4aea632c6086)");
unit.assert_eq16(16'h8C94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #387 be1766db-b774-410e-b599-3ce570aa9418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 202fadf7-e712-4b1e-8bbc-dc341621d38a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 92a565bd-1fea-4f54-b0e5-a97cd846d13f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 21740b57-47d0-4bd8-a3b5-a745b5c895e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 67c90b4d-1a93-4422-a0ee-078cf2c13496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 d5414fa3-b710-4e81-ac6a-65aaad50c573)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 abfe6815-87f9-480d-8d6f-b3123f03299e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h79D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCBAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'h79D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #388 9b372859-5529-4d9c-9df1-8ecf10e77ddd)");
unit.assert_eq16(16'h3D29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #388 5b4e6418-c45e-4a5f-a8a9-f2383c8fda83)");
unit.assert_eq16(16'h79D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #388 c6e76777-14ad-4d7e-86e1-88a76fb12783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 e85c33a2-14a8-40cf-914d-9a63cf59457e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 ccd58191-4deb-4a83-9f78-8e7c74b040b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 6a567a16-eedc-4652-ae7b-619063c0007f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 f8a92a92-8fe2-45d4-a7a6-a9848252c74f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 410f2c50-14ca-40d3-9018-032e62fc79d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 1f38a03a-1959-4222-8dba-750e5d43b002)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h23A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h89A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #389 4b3051ae-430e-418b-a9cc-cbc1b7f2312a)");
unit.assert_eq16(16'h23A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #389 530e5018-b317-40c9-9124-c606a22b3281)");
unit.assert_eq16(16'h89A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #389 b19c1e35-01ae-4e01-ab16-8f716ecec045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 304f6d5b-e84b-43f5-a46d-e4c0674522bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 b5adec35-e51d-4068-a09a-c78e977bbd86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 11ddcc1a-2237-49c6-8ac0-4f2e22e837ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 074f8dc2-acde-4379-adcc-10347926eade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 122f47d8-3d82-4f73-a560-92cc417381f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 2c623377-f9f0-4cf4-9604-8441fef06f0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9887;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB46C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0190;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'h9887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #390 66af6c64-6929-43f9-9d08-e360f22ecd89)");
unit.assert_eq16(16'hB46C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #390 d757aa6b-7205-4e0f-b708-8c3282f17887)");
unit.assert_eq16(16'h9887, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #390 133fdb86-8cf6-4e34-b465-603e0e8685bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 949cc870-578d-4ca2-9c6a-48a08908aecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 05ff329c-a70b-4f27-9e99-ecd441255e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 3897883c-50f2-42dc-b836-fc56adffa296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 cb9bf625-b39d-45a5-825b-400cab0d5ad3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 73a82443-ae11-485a-a67c-0f95360cf48c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 87c91d59-dace-42cd-a3c4-18b26000c06d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hABB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF337;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'hABB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #391 b1f328dd-d5b6-403a-bc58-9aaae7a45806)");
unit.assert_eq16(16'hD0D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #391 90a4be49-1353-4cdb-85c2-05c0993b4381)");
unit.assert_eq16(16'hABB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #391 2369b81f-5111-4f01-bb8e-12344c75afa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 c4e23e31-4fa6-40b2-9e8e-0d72f124ee4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 6a08f2ec-7943-4280-959b-75a426e3bbbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 e650801f-db6e-4fda-896b-1f59a52ed5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 14c0db72-e502-4668-8dda-bb8552414e9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 36253d4d-b0c1-464b-852e-c0fb3ee02b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 4242967c-ac4e-4e11-8c96-c25b75e74373)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1CE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3762;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC9DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'h1CE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #392 e060061d-d56c-42f8-bd56-5bd0501b3e58)");
unit.assert_eq16(16'h3762, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #392 29739663-4691-4b55-8a44-999e17486e02)");
unit.assert_eq16(16'h1CE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #392 700b8ab0-3f32-4c73-a794-0a68e279f79b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 1916ca59-1118-4491-8b29-328b92cf5497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 12d59b23-632d-4b75-b237-017f915d1c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 bf1e3fd9-7713-4e75-baea-a974e1134232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 5c840fa7-6c77-4c82-a37d-8f105f764cd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 97ef8b78-f27c-4544-b242-a1e5317da8d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 8e1d761e-36d8-4962-8e5a-a9f7b18a32bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7252;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2666;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0164;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'h7252, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #393 3746f2ad-4422-44e0-8272-62fe376899c7)");
unit.assert_eq16(16'h2666, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #393 37f8ce8e-9e37-47df-850b-8b6c5c421067)");
unit.assert_eq16(16'h7252, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #393 6e1ba893-85c3-45d2-a37e-6fa074044290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 e4c95dd4-63db-49c1-b762-ea1cbd38a62a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 57a63124-ba22-4632-9265-095b2aed60ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 805aed14-9309-4919-b050-21a95b6f3f14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 d3d68079-75bd-4fe2-8313-102f134201d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 d7fb59dd-f156-4952-a183-34dc66c9d25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 4bd1a759-7c5b-443d-8405-17d25c95a879)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5A85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA6FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'h5A85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #394 8414d745-59f4-4b8c-8c6c-1cb2290ff982)");
unit.assert_eq16(16'hD4EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #394 3970bcf0-2ef7-4660-92a1-8426bbc15243)");
unit.assert_eq16(16'h5A85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #394 06556cf7-fb31-4749-9df0-30ccb41f6322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 e5a4ef6b-3056-47a5-ab52-c4835172759a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 0da9bf6d-16bd-4447-b2f9-ec13cd281bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 749fed26-05d1-40d4-a05d-7fb487fb09c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 906088e3-b77e-449b-a9d7-6344a54872e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 3a74cc63-cae2-4dc9-beb8-79362e319023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 b5d5d60d-fc3d-43ae-a424-17f70d16a270)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h375A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDC35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h73FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'h375A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #395 dd39ad19-8d49-4326-b0f3-f7184bd50b3d)");
unit.assert_eq16(16'hDC35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #395 8e195f33-6509-49b8-b8fd-0bcacaab3300)");
unit.assert_eq16(16'h375A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #395 6bd65536-4bae-4782-a929-b6d82a293cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 7eb051cf-8fb4-4cf2-9588-9948800e65bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 e8b1eb87-c964-4ffb-8159-dc689c1c2627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 63017a38-bef7-4e14-bf5c-37833e18d459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 3e3f15d1-8d0c-4f21-ac92-63df35b57b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 91c4e768-27b4-479c-ba8e-c37b8add54c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 d961e9d1-eace-488c-88b3-e6d9784bc2ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h11CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC020;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'h19CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #396 9f10cacf-6734-4333-898b-5b3dcc1c1853)");
unit.assert_eq16(16'h11CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #396 79a45100-2d94-425e-9d8b-b4ec477c8790)");
unit.assert_eq16(16'h19CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #396 7815e55c-3d2d-45a2-82d8-898b0bdacbf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 1d99c3f2-b8ab-4c42-bed1-63a0fc3bfec4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 42032b42-aee9-48f5-811d-0820657cbcb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 01c8a18c-0650-44f5-a6ca-16fdac9336a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 ca343ce5-c14b-43f6-8304-c7591e7d3eef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 9be35988-bff8-4b2d-933f-b72a03b66e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 65fb0df8-920a-4470-b475-704f50dc3917)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1814;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6607;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h1814, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #397 ec189a00-61be-4ce2-a953-c92761674684)");
unit.assert_eq16(16'h6607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #397 89cd440f-6c03-406d-a15b-6e70bcc9d410)");
unit.assert_eq16(16'h1814, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #397 a8231791-d200-4f09-9b08-f2eae21ce736)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 b82462f1-4d53-40e2-8e19-2f070efab7de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 907bc55d-38fd-4e4d-b803-6dcd83836371)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 7e2a9cf9-6810-422c-bb88-ac587361a5c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 c5044f88-dbcb-45ba-864d-a57eba05dfc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 6b6fd2f0-6511-49cd-b111-f7ced29cbdb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 3c32a0c8-2612-4bff-8e07-7499d8a02a7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3ABB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCFCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'h3ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #398 babf6813-9c91-4868-89ba-fc7db757e6ad)");
unit.assert_eq16(16'hAB3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #398 45f5cc67-5d86-443a-91aa-4acfb0406d05)");
unit.assert_eq16(16'h3ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #398 1549eece-1f57-4afa-b8f3-06531e8707fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 74d3414b-b9a6-4141-905e-c481f34940d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 2ae49dcd-45b6-46f2-a119-4875baa68015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 65a7897c-f39a-41aa-b422-77b08dc17d2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 5afb94fc-4521-45a7-b262-a8f2ab62fe23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 011a2ff1-e931-4921-aec3-296a319652ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 613e984c-9ed9-4539-95fd-fe57b1c8fa3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1588;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC157;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'h1588, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #399 b7c45691-2134-4094-a2cc-23506139e5e5)");
unit.assert_eq16(16'h1D0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #399 efc956ba-824b-4220-bb8d-73e5b83138d2)");
unit.assert_eq16(16'h1588, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #399 7b01593e-7499-4a1c-8772-e84575a05842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 096de3d3-0894-44d5-8742-95cfa2e44b3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 907da2f8-ad7d-4f05-8753-07a02f934109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 73e5a7bf-d006-4377-9fe6-e446882bf78b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 f8f8858c-0b2e-471f-81d5-19b32a1f911c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 6a5fd2f2-3324-43da-bfcc-841ae52ab7b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 44af84be-38be-47c9-9d35-8dc4ae2bb217)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h63FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'hED98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #400 c5193433-4e34-4f30-95aa-f2b1961efb9c)");
unit.assert_eq16(16'hCE3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #400 53d3b1da-3c76-4c35-b7c1-ae8d5a79180e)");
unit.assert_eq16(16'hED98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #400 aa3a339d-1ce5-4d26-99f4-31a94f916ac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 f957df0f-5899-4526-ae98-c7ec349f26d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 cc95ad21-ca9e-404b-a01a-80fc842b2250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 04717b9e-908d-4d74-b374-a9cc92c9c944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 11b6d676-c11f-4425-b052-7f5c1bf717da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 62163024-7e48-43d8-910a-f00042e11e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 0169b1ae-2f46-49ef-90c1-8760e167584f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4BE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA28B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7E38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'h4BE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #401 04fdcdeb-2c51-4944-9f50-eeb341315565)");
unit.assert_eq16(16'hA28B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #401 3f6e8da0-f6dc-4407-a944-4d7b065cee39)");
unit.assert_eq16(16'h4BE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #401 59ae5acb-3af6-406d-a235-47c7b2fec16a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 03147a14-40a4-472e-8876-8d5e8ca1515e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 6b5e3a1d-30b1-4646-8600-7e08718b0405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 445405be-9073-455a-8333-e03205cc0a32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 eb591930-3a04-4814-bd4d-3e6ee21620fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 3d726776-a42f-41c3-b465-cd626223243c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 7f7e09e2-285d-4e4b-b740-c14477730952)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6145;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC880;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h26EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'h6145, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #402 ffbc51da-63ed-4e35-be82-ded527d2b341)");
unit.assert_eq16(16'hC880, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #402 af094a8b-05c0-4c39-ac19-b76df5841c41)");
unit.assert_eq16(16'h6145, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #402 dc149275-e3ef-452e-a607-aa2ccee57008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 fc13e249-1c13-45a2-a9c7-73529e3b5b8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 f69f3add-eed7-4c32-a4ca-82b1479e6792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 d43681d5-04bb-457f-a6f5-e63ced180baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 ef6f6132-427b-46e1-8e51-17277e8a6d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 2db72e98-73dc-4751-a4b3-3245f75af211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 cbd71416-ae5d-43a1-963b-fe114bea4be0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF10F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8935;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8313;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'hF10F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #403 1dd1fa17-e5c4-43de-acbf-ce8f17e8c059)");
unit.assert_eq16(16'h8935, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #403 b3b359b3-e511-406b-a87e-a22b6ebee5b5)");
unit.assert_eq16(16'hF10F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #403 0f61cdd4-193a-4df9-a0e2-f3638886e348)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 401a1762-5744-4135-b01a-7c93f1a33ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 f0599d8a-af7f-41ee-9b50-547dfbabeb17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 2916ae94-26fc-4961-a0a0-ee6305998e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 863e72e3-e3e6-4390-8f99-33d781baaeb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 476f23ce-5ad3-40a6-b893-d7f9e2454e3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 6e74fe88-5e85-4079-8fd4-99576ce74f9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAAEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAD5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'h5F3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #404 18615955-c5fe-4777-b59d-60a17b43f158)");
unit.assert_eq16(16'hAAEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #404 dc08499c-6144-477c-acd2-6bc00115f2ae)");
unit.assert_eq16(16'h5F3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #404 2885c43b-ba07-4893-8226-3a1cc7f664a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 7ab3d7d7-cde1-4873-9673-2a1214484481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 006f489c-39e0-4d0c-88da-7d65eb6224d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 6a2e4fdf-dbc2-4034-952a-f467e5a2eb6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 dc7dc639-2c91-4786-80d0-f72318d39d03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 8daf7804-deb3-41d7-9ff6-62b33c5625c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 fe77e597-e481-4975-9fca-3ce649f5b29d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9FBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h610B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h996C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'h9FBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #405 d27d715a-587e-4de2-9807-95e1b3b736f4)");
unit.assert_eq16(16'h610B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #405 3ff9b668-c33a-426e-bc94-93fa1d2bb771)");
unit.assert_eq16(16'h9FBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #405 835154ec-dc7e-46df-acdd-0c30b4d1338e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 b6331ca0-3fee-4328-8d34-e422adaf36fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 bde293cb-adbe-47bf-8a1d-b096b8b5d3cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 29da2090-2062-4623-b650-43c198e93a8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 191ec3bb-adaa-44e5-b0a9-81c25627e317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 c2f1e339-10b3-4ae7-9c87-531dda033e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 d4ccf65f-6617-41ae-88cd-b2b6481c0dba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9798;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEBB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #406 51504656-5cfa-46e7-8d2e-ef79ae281d64)");
unit.assert_eq16(16'h9798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #406 c078afda-95e9-4df9-b66d-4fc323dc7ed2)");
unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #406 4887277d-5488-4d3d-9c05-ed6121e90682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 38e8e605-4168-4f2b-a824-d0eb1bc407d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 14c7f2c1-b3e8-4404-8649-faa7f4fb06d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 f236584b-8490-4dcf-adfd-06829bc1595a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 1d430255-91b4-4014-b3ff-4eab3ee25905)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 575772ea-49ca-4dae-a625-209704c1b13f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 3c44ef83-affd-4fee-9531-00e134b4c407)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF776;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4793;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'h3C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #407 89288823-d5c5-4666-9239-ccfaacd9e5cf)");
unit.assert_eq16(16'hF776, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #407 abf7d223-529b-44c4-8e81-dc349016f7fd)");
unit.assert_eq16(16'h3C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #407 6447cddb-2fce-4ccc-a077-0496091f7160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 d94de219-3810-401a-bb8c-17d6b74af66b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 94cde0c9-bb20-4f0a-92b0-b9b0e6b525e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 24aaa8ac-25a8-4705-8541-bc8c3af13422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 fd77bb22-2094-4c2e-b544-3959b3984e29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 95e52443-b1df-4eb9-af9f-772bfc612135)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 a8b0da31-e9b5-4dfc-aa3c-33df8dbe4b5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7C26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'h0B69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #408 b75215cb-f226-4ba5-9090-423e4b850f80)");
unit.assert_eq16(16'hBA8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #408 fa9c60ce-73ba-432a-9819-d65965eabfa5)");
unit.assert_eq16(16'h0B69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #408 f5d7ba3f-6e96-478f-a583-ff6374fb5d24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 e08d4d58-7d3b-47ae-9d5a-12575e905bd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 45d10e65-da02-4975-9f4d-9b19e6fb4612)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 d7bc1b38-705c-486a-bfe7-ceac38364f2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 24e386c6-52fa-4184-9394-6b87ea9b7ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 e999d3a9-c1a8-4bc6-91f5-9d86c5c1c265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 83014b4c-e94e-426b-ad3c-ba19db4d806a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE11C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h40BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7B6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'hE11C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #409 399fb3cf-8c0e-4624-aa6f-fed808311808)");
unit.assert_eq16(16'h40BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #409 7e09a434-51ef-4105-8dc4-0c7953bbf125)");
unit.assert_eq16(16'hE11C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #409 e67bac14-0f28-4d70-8b78-cbfde94d4537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 25ba6450-8c27-4da5-b224-88511f954e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 6e393fee-c97d-435d-8ed9-de4434c298fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 173615f6-9f87-4903-a0ef-3b1952c56794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 b7a5762d-3a47-43f4-a5ce-c19f58f6a806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 cf1be51e-b4b4-484b-b945-d744cdd35603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 81ecfdc5-355d-4a1f-96bd-a98ddd461b5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2139;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2675;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'h2139, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #410 90ae562d-a047-4c5e-97b3-6fb33d8b1fc5)");
unit.assert_eq16(16'hEC9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #410 8a1036ba-b320-4b07-9d30-6e5fd03b9850)");
unit.assert_eq16(16'h2139, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #410 074b25e8-cee2-46c9-84be-46b037a44327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 59d1a55c-de80-458e-bb54-5ea7e88256ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 79f83ff2-db0d-44af-a2f5-1230817fd8a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 d4552d6e-2e03-4cd5-acfa-1d997ab9d124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 55c8bac6-8d93-46c4-8030-55497880d2ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 835322ab-e33b-445b-b542-d7f2496578cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 610c0eaa-24db-4549-acb8-3583cdb3d686)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8DBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7B67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'h8DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #411 05050c27-3067-429d-874e-04b1d647d1fd)");
unit.assert_eq16(16'h66A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #411 4cda080c-c88d-4518-9922-8a0ccc493de6)");
unit.assert_eq16(16'h8DBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #411 a46c7af9-0142-4895-b49c-59ac990be196)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 f19e40f9-964f-4d15-9968-72d345daf83c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 e7e03eb3-d7d9-46f7-84c2-c13494b513b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 e0a7d323-7d51-40cb-b27a-d4c86acb6c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 55efa745-40f4-4b83-a720-9fcfbcba2ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 bc0a95a7-accc-4ee1-b0c8-fbe852fc9e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 ce557128-e1fb-40b3-8241-929a2aea3956)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE1D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4142;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'hEB55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #412 17143e37-85d0-4f8e-98bb-f861b32eeee6)");
unit.assert_eq16(16'hE1D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #412 45694091-3706-4292-89ea-b1c97767a588)");
unit.assert_eq16(16'hEB55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #412 1005dbf1-9c0e-4e5e-b44b-729106fd525f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 bb4072ff-12b6-489e-ba36-3e596b018a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 26d8475f-5cb6-47ac-8fef-0772a37194d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 463dfee4-0798-4d85-ae78-b1ea0cea1823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 c232e8fe-e781-41af-a9e4-7fbc0a71b04d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 adeac321-9b42-4a3e-8ffb-682962cb548b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 5cbbab85-29dc-403e-8cb9-714ee6e15118)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBBD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD925;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'hBBD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #413 9973b645-23b7-4785-b951-974a1d1bf320)");
unit.assert_eq16(16'hCF01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #413 40ba109b-8951-4bca-916d-7f0ac7c86325)");
unit.assert_eq16(16'hBBD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #413 2ad8ae5a-cc3c-49d0-bf3d-079ccddc0e24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 3b562036-4bf9-4404-b7c3-71f8d14a72ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 30a2b9d1-21d3-45a5-9ffb-dcf5e285d568)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 cca4d8f1-4ee4-45a6-bf3a-4b8fd0f57fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 beafb151-eb35-4ce8-a8c0-d53d39d94bf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 759fbd42-a5fe-464b-ac14-e6627f6880a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 1d5bc0b3-6af8-46ec-96a7-b2003f4b2485)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h243C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1037;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEBB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'h243C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #414 33d0ff88-7a18-4976-8472-f262ff9019e8)");
unit.assert_eq16(16'h1037, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #414 e0da238e-6c6b-43d8-b320-ee99f467ce0e)");
unit.assert_eq16(16'h243C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #414 23bde81a-7a32-4884-9952-2230c117af7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 1e402065-e3db-4ac8-8524-393c8ec224c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 fe396e0e-6a4d-4ff0-b908-1de1c4adb6c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 a98b3627-9b9a-4cd1-8a24-e77f50d84ef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 c28f968f-1189-4d67-a7e6-2da5fe1c7785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 fd56f6e0-b1f6-4f1d-b101-de9571bf135a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 009b1b94-f8c7-4a71-8107-9ea69b2ac7a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h43B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'h43B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #415 7d8e259a-349f-4708-8df7-dea7c293f828)");
unit.assert_eq16(16'hFFB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #415 c7929573-7bc7-4174-b668-8b7feec45a5b)");
unit.assert_eq16(16'h43B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #415 781416ec-3780-4630-b346-70bd0ba1ddd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 563df609-3f58-4c0a-82f5-428af7a02fbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 03c7159e-fec1-4f95-a57d-9d4be9d08a27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 16683e89-746f-4c4a-b57f-d4defb0abf54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 a8aa6c02-b0ff-4eae-860a-1b2c0929b3e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 87284522-0246-42df-8e0e-26f7694ad844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 1d98a58e-69ad-452b-a8d5-3860f71316a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE8FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3567;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'hE8FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #416 cb714b99-5dd5-4195-8d27-3c0400f61574)");
unit.assert_eq16(16'h3567, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #416 50c2e284-e9f9-4033-814f-3f505ace8bba)");
unit.assert_eq16(16'hE8FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #416 6886d0fa-843d-41f4-b98e-3d620c7869b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 fea36dc9-a829-49a6-ab83-dc453cbfbeb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 a2c4256f-fafe-430b-8bee-1bbc163b7dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 53c90e90-12d4-442b-bba3-e0eeb3028140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 7aae29e2-8a42-49eb-ae2f-627c38f8c913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 3f7446e4-7568-4778-a0d3-85d22dc96b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 3200e270-548c-446e-9d17-4f89abf26cb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB79F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE68C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h26B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'hB79F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #417 7115ca29-5f2d-42bc-9907-a49dcc52923f)");
unit.assert_eq16(16'hE68C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #417 d0585fd9-c043-41d1-a81f-4175ba7986d3)");
unit.assert_eq16(16'hB79F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #417 5b79c0c0-06ef-409c-a83a-233928ac589b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 cfec526b-638f-4951-b20f-428da37145f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 a64bdb5c-d54d-427d-b84e-369015d94651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 0b7ff746-e7e2-4e21-bdc3-79bb63ef3a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 3fa12b28-9ca8-44f9-bc38-ddcc7692b958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 ca4a1dca-40be-4edd-8767-3d079590c993)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 2a717442-c2b7-4d92-82d9-288aaa485322)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0626;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h74C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'h0626, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #418 e816d319-4760-4b78-afc7-d5020a4954a3)");
unit.assert_eq16(16'hDE61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #418 825e195f-f884-42e5-850b-3d8f16ff13ef)");
unit.assert_eq16(16'h0626, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #418 fdb7cc98-920c-4834-9250-5ab8f6561fcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 622d41ec-1218-42bf-8bd7-3020413863d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 b89ac15f-5904-4287-b4c7-1e06fa699dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 8ee89d85-87e6-4e64-a4b2-ad4128d37fac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 d028e791-fecf-434b-9572-8153381ad90f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 1d18e90e-683d-4e7d-9cf6-c14799f7e9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 1bb1ed29-c134-46d5-88a6-ac2f75d0c95e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC229;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5ADF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'hC229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #419 343672cb-4e76-4e2b-a810-06f282bc4187)");
unit.assert_eq16(16'h61BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #419 0dffcebe-be9a-401d-962d-55ca09656cc9)");
unit.assert_eq16(16'hC229, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #419 2ee5dbca-58ed-480f-9331-aac4315c5a26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 a4572a7d-7f0f-4f7c-b77f-5d6904a74a76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 02f584f9-6ed8-4e77-8512-88bbe01be95c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 597577c1-7385-426d-b651-06e598b7d836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 439e8c3a-97a7-4d16-8dc7-32d4dfefe70d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 cc452174-39ec-4d14-a6a6-8435ffd4b15f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 e20207c1-e32f-4156-9c99-30158147da69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2258;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD05E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2093;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'h2258, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #420 6dca0b05-38e1-44e4-ad04-5a6b66bb13ee)");
unit.assert_eq16(16'hD05E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #420 2c46b91b-6440-47f7-bc9e-e05814228a29)");
unit.assert_eq16(16'h2258, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #420 6e796570-536f-46b1-b5ac-007f853f7ce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 e53ffc73-df7b-4ffe-9e9e-275947d19d98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 476f1a85-4c5b-45f9-85d9-e43b7457483b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 117503db-abd5-4c39-9823-41c565acf747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 be4c648b-9009-45a5-ad07-214455139db0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 c1f8d0dc-b87a-4a63-8fc9-6de0563647a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 aa43c363-538b-4570-85f8-ce41a09c3617)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h35EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'h01FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #421 fc279cd0-2a9f-40bb-872d-b968d744501f)");
unit.assert_eq16(16'hD1F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #421 bb9aa406-d9fd-4985-940a-3e6a773b7c90)");
unit.assert_eq16(16'h01FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #421 04b25953-fbce-4a78-a55e-2946afb11e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 b6ed24fb-b5a9-4cb6-9d91-e30261529b5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 cf986f1b-4c30-4dea-9335-a77e4a08db82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 3fb9f821-53c6-4998-bdfa-4d5e9ff825e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 35f8331d-1a4c-4dc5-b3f6-c7c2da7f011e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 b9a1d862-c18e-40f1-a532-03f21a767bbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 cc4d49f3-8c71-47b7-a19f-d8579ceef806)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'hBE19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #422 666fff45-1b7d-41bb-afd7-7ca7573bf335)");
unit.assert_eq16(16'h10B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #422 c1503710-1cc4-4a60-8ef7-869f340b9853)");
unit.assert_eq16(16'hBE19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #422 4261a78c-1686-4ae2-811a-95cf2e1b4d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 eb28daab-abbb-4c55-9b13-f0323b592357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 b63098ce-c63f-4ee4-b3cb-bed5683e8baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 74ff9023-ba81-415b-a671-aa2075996ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 1c9dea6a-8eb2-45ab-9a59-0fbf799b23cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 a39b099a-b948-419d-bbb9-bab75ba60588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 6a5a759b-00c6-4c3d-862d-1d26f7d6794d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA9EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h28FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5BF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'hA9EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #423 bb7e4c0d-5158-4eaf-816a-778473e0951d)");
unit.assert_eq16(16'h28FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #423 adccdf32-b9ed-434c-8bf2-58326fa03dc5)");
unit.assert_eq16(16'hA9EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #423 fe55c7ca-c548-4a47-be3b-9b650e505039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 2e9342aa-66b6-4934-99f1-3f96d16f56c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 b3170742-dc38-404b-a554-89b2b46c460e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 1c28616f-14e0-44cf-82e5-5aeaa9ca621d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 622412b5-a479-4ea9-b83d-83ec1de5c9ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 858c7f86-aeb6-47d8-853c-c4d951b10af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 2ed57484-7f7b-4b16-99db-4af2888d9799)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF738;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'h80F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #424 6efa2783-d669-49ce-b923-46abf6fc7b94)");
unit.assert_eq16(16'hEF44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #424 b3830919-819d-4695-8ea4-765277d60ad1)");
unit.assert_eq16(16'h80F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #424 e3340199-455d-4f64-ad48-a6ccd15c48c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 9da311f7-19ae-4d67-933c-8708bda50757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 eb20275f-20c3-4652-a0af-0cd14593378b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 3eb0ec7f-52b2-408b-854e-d74558cb60b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 0dfed815-4469-4f9f-8433-3f3c194f8ebc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 b26c79d8-73d8-4cef-9350-27098d312571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 16ef4005-3b32-44a5-8a2d-91e9fa4f193a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA85D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h10EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'h3B27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #425 207ceb83-e4ba-4050-83c2-ab9685f74ce4)");
unit.assert_eq16(16'hA85D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #425 937cf887-eb3c-4cf2-b162-ca3dcb18d777)");
unit.assert_eq16(16'h3B27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #425 55460975-d85c-47e5-a7ad-e9e345d07e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 b3ae1956-87e7-419b-8d98-2d2233689dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 471acdfb-46ac-455d-abc1-252ca920443a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 d625b5d1-5cbf-4265-8ed2-d4f13565efb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 7ae38d82-aeed-4c1f-99f9-840ad42a1d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 6c2e181b-9483-4710-9037-e9e7301ad347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 73f45bed-fca9-479b-9911-aee70f9fafeb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE467;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE045;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0586;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'hE467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #426 4434bc77-f700-4222-b544-e99fc9715444)");
unit.assert_eq16(16'hE045, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #426 29ef183a-3353-46a8-8add-0b1e66052b79)");
unit.assert_eq16(16'hE467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #426 cf686715-feec-48d4-97fc-04031faaa488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 658719c5-da38-498a-82d2-cda3e4fb827a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 6a719254-a8b2-4b10-b47e-48309f9c030c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 f1d92d8d-0544-44d4-9309-673e94aff84c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 c8e77c27-1fd2-4588-b223-9f13b09e15ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 4a995129-94fd-462d-9435-5ff3b782ea4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 5a61bcee-fddb-4c87-9e47-31f8e922b018)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF975;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4257;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'hBE55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #427 e6efa4b2-8a54-48fe-b369-1922f292dd39)");
unit.assert_eq16(16'hF975, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #427 eb163849-616a-41d8-8a82-e3eded6babaf)");
unit.assert_eq16(16'hBE55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #427 0163cc28-8b28-49ab-b189-30926a7a5f32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 a4388ced-b7c4-41df-a5f8-d2ed3869a8cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 2bf10438-0a48-49f2-b435-4d22d816146c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 0b665b56-14c8-4114-89c3-d435c40b3898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 78db359f-c28e-440b-bf90-99da769ffdbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 24dd6a68-55f5-4acf-9209-49bd190be479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 7aaa7e1b-ad7c-4ce6-80ce-e1d96bb2c374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD888;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h142B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'hD888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #428 8b845058-de1d-4d7d-89dc-0cbc00bc87ff)");
unit.assert_eq16(16'h142B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #428 316491c4-f107-4431-8cec-720411171422)");
unit.assert_eq16(16'hD888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #428 374283df-76ca-4293-b909-9b8a6b14a6fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 d734596a-223d-4229-be24-c99b1f3be6a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 99287a31-1dc0-4457-bd63-981393fff480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 0fbc55ac-5161-46cf-913d-9f05e22fdd2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 1d19c499-c816-4043-887c-002cd97da870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 8f8479f6-ca4c-44a9-831d-a55e656c1c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 8c630921-e5b7-4159-a3db-2e34cf76735c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD51D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'h45E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #429 d686750b-0c03-431f-ba9d-e810ff4aa5bb)");
unit.assert_eq16(16'h6C8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #429 26a9d1a1-a74b-4ba1-a411-56777b4656d5)");
unit.assert_eq16(16'h45E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #429 2d25caa4-1843-4020-98ca-e613247396de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 9fe6a482-02cc-4d06-a2a5-1b1243339652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 ed68c4bd-097e-4e04-8324-5a77ad568fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 dc9ce994-3c93-4cac-adcf-e556e80074bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 df4d6506-1b0c-4012-a26c-103ec350e5a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 18da834c-0e13-492e-8e05-f76bb545799d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 773e9a50-3580-42a4-81ad-d3f9c2726f50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5EF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'h5EF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #430 a3bb7b82-a859-474b-82d2-671a355ef9c5)");
unit.assert_eq16(16'h08EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #430 ea6955a8-9208-46c3-8db8-5b068b9c9b8d)");
unit.assert_eq16(16'h5EF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #430 34bdbbc5-d1e3-4992-aeba-3784ebfcc4ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 8352e91c-20ce-4bed-9cca-0d0d887dce45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 8f065edd-d6b4-452e-b400-57a1a38f5dc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 ff958982-5db4-49de-bc92-0f6918908143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 f8d2f1c4-0ff2-4a2d-b82c-673822520f48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 ee06f7fe-43b2-4e97-8308-11ed88ba1802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 838aaa82-629e-4ae4-b05a-81a96a3216d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5269;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h847D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'hBF77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #431 5038f935-b373-4736-be19-a8039854eb5e)");
unit.assert_eq16(16'h5269, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #431 17080b3d-c3b8-4a9d-a3f4-5bd59fe42e43)");
unit.assert_eq16(16'hBF77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #431 635844ed-fb30-4108-9399-e91ff34cea86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 6103bbba-b6bf-494a-b4a3-43e46546fc02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 5fd08c2f-6883-48fd-a943-9d169c1f03b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 09dc21a4-4219-47d6-99e6-586b4534563b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 34f13401-6e18-4415-8883-f7f46ab4803d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 2b6892e1-8177-49aa-8df2-fe9b40ba83ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 2fd61bfc-b62f-413b-a33c-4dfbc6be5c39)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD042;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCC21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h4CA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #432 0f619a96-6e33-4c9f-87d4-31c2784b2f57)");
unit.assert_eq16(16'hD042, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #432 f9902a9d-8cd0-42b1-9761-f67c0eaed758)");
unit.assert_eq16(16'h4CA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #432 02630672-3e6f-4370-85d4-793e992f507e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 415b5dce-7b9d-47cd-bbf7-7fe471ba26c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 af1be01e-d873-41aa-9fef-98f5a5fca212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 fd3b6ffb-6160-4064-bc94-c0891dee371c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 e36672ce-f907-479a-a635-8354986505c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 b6928df0-923d-49da-a5fe-2ee0a3d57958)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 66ce6220-0cbc-4148-b32a-f342143441bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8F4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC1FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'h8F4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #433 bcffcbd6-0569-43a1-bf22-d0a8e26ce31b)");
unit.assert_eq16(16'hC1FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #433 cff00b59-1b06-4bdc-8a69-1ccb429d93b3)");
unit.assert_eq16(16'h8F4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #433 742198d9-4aa4-4151-ba1d-8d13656ca5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 0ce1fcfb-6b9e-4e2c-8ee1-3ed4098f8a36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 47061fbf-e040-4dc2-b98f-4adadeb1862d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 fb26a79e-1e72-49a3-9f8b-169989e688eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 2ead7c3a-d836-461a-8a11-5b4f1cfd8795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 1e05a9f7-5ab7-414e-a592-dfc1c1bf038b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 66845af9-0002-4897-893b-903086d238fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5389;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB635;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'h5389, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #434 627f3d98-2668-4768-9296-92fb1a04e540)");
unit.assert_eq16(16'hDD2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #434 6d8c66bd-da74-4ba8-bb85-2d3f74cb3d25)");
unit.assert_eq16(16'h5389, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #434 52dda18d-d9a3-4b94-ac55-9bbae3b9cbfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 71e74a63-24c0-4157-8e27-ad467b5b25cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 906badfd-f2ff-461f-8b3b-e40e6d7f5e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 f2d67625-376e-4758-95b6-3dbba404e7da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 a5edb56c-95d7-4112-b6a4-b9b0bd8e1d62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 d3c6572a-a366-4a52-8a27-2f975e205b5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 f40fb710-c7c1-4c6b-9b60-80794f2ffee6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDBBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h98F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'h2BA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #435 c45ef5dc-215f-428c-98eb-90a0485e6a16)");
unit.assert_eq16(16'hDBBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #435 1eced707-22e8-42cb-9ab9-bdca2bffd435)");
unit.assert_eq16(16'h2BA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #435 d454ae3c-a168-41a1-b9c2-7b137ae0bc4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 a98dc7e1-cf12-48ca-ba5b-74b905037e90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 93ae712a-f85b-40c3-9f76-67fed4921083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 929dbfda-7a9c-4ae6-b744-1863112da244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 99f77076-bdf0-477a-b443-eee76c7fe0a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 fc4b6daa-0841-4752-9ef2-3697172f9a5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 fa1b5ace-8753-4d94-885f-fa30be17bc4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3CD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h968E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'h3CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #436 ce5197e0-f0e8-4525-be49-7c2f3deda003)");
unit.assert_eq16(16'hE7B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #436 7a4732ef-4e8b-4db9-83ee-332f5b050ec5)");
unit.assert_eq16(16'h3CD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #436 4600d0c5-e123-4892-a485-5a763aef709b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 8f8b0e00-3030-45d2-96dc-94364b597a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 177537c8-3e49-48d5-a37c-c6a742b0c864)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 e9426ed9-fefc-4841-852e-497295f03cf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 83c22e8d-4ca2-4ca6-8b28-32d2a5e83a8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 10910f06-8c15-4be0-ab3c-e415ed398f1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 e5b16e48-15ef-427b-9f23-a56a150b6695)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF9ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'h9F2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #437 5a9b7317-76b5-4ea6-b85f-8790c0188de3)");
unit.assert_eq16(16'hF9ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #437 b19e1941-4d67-4813-be14-33e4ef583b79)");
unit.assert_eq16(16'h9F2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #437 e49510d7-54ea-4e23-b7fe-c418eabe135e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 e7028087-429b-44cb-91f3-168260a4592d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 eaef51b2-f13c-428e-8ab6-334bab47df5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 24bc5ca1-3d58-4199-b345-dd4f751b99c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 d36c28b4-c02b-417e-85ef-4e4ba244f42b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 f74bdc02-f07d-4928-89e3-19f94ec112ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 b34fd507-c830-4a10-beef-e8c02d4726b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h12BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h091C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'h12BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #438 85aa3936-8876-478f-b6de-b44ea6251831)");
unit.assert_eq16(16'h091C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #438 793fd083-5d52-486d-92f4-9e609fa54290)");
unit.assert_eq16(16'h12BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #438 8aac1ac3-50a9-4882-9209-a394cb9d15a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 6e69ff49-c8f7-4056-8662-df6718c6e1a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 c26718e8-692d-4997-944d-d4773f010c22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 76714cf1-0f6c-4fc9-9060-eae0ef0745ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 d5c39a6f-2648-4d32-ae03-d57496d07256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 2cf1a37c-7860-406b-8e09-d4711c459b78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 dd52f131-a38d-44d1-963f-d569e81521d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9812;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAA1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'h9812, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #439 93214ee3-d805-4fa2-a87d-82198202bd40)");
unit.assert_eq16(16'h5A31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #439 dc140abe-0f19-4e76-a9e2-73c8c6ca3771)");
unit.assert_eq16(16'h9812, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #439 9fc0f0d8-a2a3-416e-93c0-3c6cb951962a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 e92dc4cc-acf7-424a-baf1-6cd8103de197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 88e90028-7a45-4b16-ab5b-715f76e53479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 af42bd68-30ac-4cc7-9b05-58d4c41e9e4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 d3076841-2247-4d5b-83e1-0f4c5c3296d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 0743b699-88ba-4018-acf1-b2ccd4d638a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 e17b8711-5f1f-4cb4-837a-4e8c77f2cd9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC61B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h81BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD6A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'hC61B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #440 7156a6c6-b776-4cca-8ba6-e766c9f602a9)");
unit.assert_eq16(16'h81BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #440 0bd88641-b3e8-4816-89db-aea7d3ba3519)");
unit.assert_eq16(16'hC61B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #440 4d42c512-2791-4fef-873a-4c31a3f5d44d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 25949a67-ae20-462c-bd70-c558ea086d8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 7953aa96-f48e-4416-906a-f9f51496146e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 4ee10f40-ed80-42f5-b2f6-8e97b26c84c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 3d35c0dd-3811-49a9-984b-b28b933c7777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 de4da2dc-ab4d-4a96-a75d-a9e5804a169c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 dd4df98e-0a94-409d-8964-3c2bcd660552)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9AE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE5C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA0B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'h9AE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #441 e101f648-8316-4df9-9b92-9debeadc667b)");
unit.assert_eq16(16'hE5C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #441 2f2fe87c-d4d8-4f1a-ae65-a209024b617d)");
unit.assert_eq16(16'h9AE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #441 0c7e1f4b-460f-4098-8e0b-59a417ff335a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 022f9b40-141b-49d8-bca3-b82a448acd17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 7d0b0694-0b10-4d56-8ac6-cc2c5307ec27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 384d9bd0-e00a-4cb5-9738-3c96d17724e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 6be05b6a-0da3-4bbe-bf87-30cc2d6d08c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 2ddc36a9-ba4a-4f2d-aff1-879577da33b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 a32313df-6e69-464a-bf7c-4f9201efb8a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEBA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE633;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'h4090, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #442 9e2d2b02-9c72-4c21-b448-a2919df135ba)");
unit.assert_eq16(16'hEBA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #442 29a9b241-d288-47de-81b2-17e793173609)");
unit.assert_eq16(16'h4090, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #442 8f75688a-7225-4c18-a40e-05501067eb28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 72d773a6-3528-40ea-ac11-3f8a09975359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 a0ac587a-53e3-4450-a256-37c4bc0cc2e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 8b56b092-c5ce-414c-86de-b4c5c0b6459c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 85f761ab-0d8b-47c7-beda-9244c2a42b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 fb794a4d-caac-4218-a7b4-a0f4f1a1cace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 ad4eaf74-6c7c-4725-8a8e-7edf6867a402)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h59B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9AFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'h59B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #443 06260fc5-4e0d-4ec7-9a18-c6e490a9583c)");
unit.assert_eq16(16'h9AFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #443 535b5789-0ed0-436f-8bcc-30e3addf0588)");
unit.assert_eq16(16'h59B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #443 f6951a83-8efe-4330-b6ae-8babdaeba0fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 de3ce305-102f-44aa-b97e-8199fa7a2885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 82a0918d-0a1b-4c79-ac5a-af264ecad0aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 418b2e42-8bf7-44fc-982f-62dbe1a182a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 17c865fc-dfbc-4b1d-bee9-772da2ebf531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 72f38e1b-463b-42a0-8434-35a020c422e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 9fc4ea2e-8ff9-44b5-b639-3d83215128ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3100;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'hFB9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #444 72a78dd5-44cb-483e-87a0-050e3b094893)");
unit.assert_eq16(16'h2E50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #444 7637a627-fe6a-4fa3-a894-c70306d2d769)");
unit.assert_eq16(16'hFB9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #444 7e5c7615-4cd7-4f02-95f2-5c0a60718fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 7c3f6221-36b2-4c12-9586-edf018ac98a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 da2a2561-6a2d-4819-a0f9-0a38951ef995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 11091704-528f-4d49-9dfa-db4e1de23c66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 3611efb9-67f4-4201-aaea-2a665ee1babe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 5f692393-6296-4959-837a-149a61993585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 fa0571c7-7d69-42ca-b953-a7c1bb7f3831)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h307E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'h8D1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #445 6f27ad5d-0183-4cf7-86fc-ae806592aba4)");
unit.assert_eq16(16'h307E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #445 2c53d0e8-a342-40cb-b415-8fe079427ce1)");
unit.assert_eq16(16'h8D1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #445 89484167-e843-4070-9133-f3b51bc96989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 92eb205b-1069-4e5e-b93d-0d98d940e404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 29711dd5-2669-489d-958c-ae73e3fe16ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 07450c0a-dfb3-406a-9cb3-def9021296d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 4812a47c-da7b-4d8d-9778-c6244280a9fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 19de02d4-180e-495a-8052-8037b3236181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 4f1c512d-ded1-4ec2-9a59-11947500e75c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCF72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3986;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8976;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'hCF72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #446 10da4ade-2a72-49cf-9a2d-a7fbcfb7b48f)");
unit.assert_eq16(16'h3986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #446 e9e823ce-cb34-4c93-a951-2ee1aad07063)");
unit.assert_eq16(16'hCF72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #446 de280b59-703f-4186-81dd-ec482bd8fd34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 70ea71f9-bbca-47a9-b753-4298fea8ebc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 dc3704f3-807e-4c3c-b937-2c642131e482)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 ad6bfdec-a195-46b6-85ac-a82047380392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 7a5f2fd2-3ab0-4528-9c2e-854f904b2ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 9d89547f-d3aa-430e-af89-20aaec6cba7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 1f526f61-baef-4685-88b6-bb4be60515f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h90F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h535B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h90F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #447 82ddb3fa-4c4e-4744-bb7d-7ca36164528d)");
unit.assert_eq16(16'h1A58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #447 66ccffc8-d1bb-4f39-a9c7-e06bab8b5835)");
unit.assert_eq16(16'h90F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #447 86b89a7f-777d-4ddd-ae1b-7637907fe38a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 ec5e0690-e0db-4924-9d51-1621e6d97ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 6df4e3f1-74b4-46d2-a7da-c0d137f781a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 ab2cade8-354e-4e41-ae50-69fecd9dbe29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 f9082c51-0e0b-4da3-a206-2c2c4a244ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 c3662524-db3c-44ee-ad88-cfc957ee3720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 37363a25-a558-407e-a9ef-4674980c39e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFA6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9CA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'hFA6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #448 5ad6248c-fd0e-4d3e-b0bd-50454428dd03)");
unit.assert_eq16(16'h9E99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #448 accfbd3c-d412-4f00-80ea-fa1c7a9370d8)");
unit.assert_eq16(16'hFA6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #448 dce22369-a23d-46c0-afc5-8a7c4192057a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 10ebff27-00f7-4c89-af3b-6df915f9ebc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 3f96054c-6b2a-4cf8-adec-5b0441b05252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 9c82eb0d-6e2e-474d-aefd-c4f8978a5591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 e05cedf6-2cfe-4773-8f8b-f5955476b34c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 f2314322-239a-4344-b0fc-ee325bba6789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 89aa76fd-1dc3-4260-b04b-03cb4291a70f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h10CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h247E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h10CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #449 93a266b4-6d1d-405f-9571-266d868ca401)");
unit.assert_eq16(16'hF4FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #449 5b305f32-2021-4455-9741-c0c9a7fb9a72)");
unit.assert_eq16(16'h10CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #449 0fac5dbd-4be4-485a-936c-0498a19009ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 a9ebe947-e0d1-400c-9ac6-d56232b7ce74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 ddda3299-a434-4c6d-b974-47ab37976143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 aba68d28-de8f-4a69-b010-9bdd121963d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 f1f526fe-f26e-4fc9-963a-cbe0f638ad22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 3813e0e0-8ad6-4511-b880-e669e2294cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 c9eea1b2-ac55-4923-8300-c5c90720d604)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h351D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7402;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h31A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #450 6c09ca4a-4009-4943-b56a-f2047286f1c5)");
unit.assert_eq16(16'h351D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #450 7d585680-06ff-43be-b80c-7e18e16b74d9)");
unit.assert_eq16(16'h31A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #450 6bb29def-a482-4a6e-9ffe-97c111d48545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 5b0b8e35-56f2-4c3c-8e3d-0154d8f79957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 9d9830ed-98ea-407e-8168-0f88a31b2255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 b6cd4f0a-b58d-4d7c-aa5f-83acbc64d42d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 20b941e6-d4c3-4be9-825e-8d3f7b80b4a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 b25942c1-427f-4383-84aa-e012c397e01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 cf340f53-e692-4278-9ce0-5e6612535d1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h323B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2729;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h323B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #451 2f693dd5-fc80-47c5-93a2-a2571185ada0)");
unit.assert_eq16(16'h2729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #451 cdb4718c-8fc8-4ada-84b1-b0e689a6f6ba)");
unit.assert_eq16(16'h323B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #451 3fc4aee7-335a-4965-838d-4c6d8d9e7962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 7149f562-679e-499d-8965-e585e8fa04a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 210afd82-388a-4d61-81ec-712715c4525c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 6afb38d2-1fdb-48ee-b3f2-7bf72bfe3ece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 4b0b6809-35e9-4280-85d9-536be83f2264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 50ba68a3-7367-4690-ac90-cbb5706bba3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 8bed7ee8-a8fa-4dbb-bc77-f28494a26e0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC3A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3075;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'hC3A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #452 298a24ac-a388-4421-aee9-c316e602dbb9)");
unit.assert_eq16(16'h6FD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #452 11e35f3b-4f9a-4f93-ac7f-cffd26d3ae96)");
unit.assert_eq16(16'hC3A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #452 00163a09-7323-4410-b7bd-5e684e32ae85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 88074f39-2b65-4910-8e30-6bf1d0f70a3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 085ccd0a-894a-4a31-9d94-b5615bcb0e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 75ce7dac-c4cd-4344-8e55-bfe06337e4c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 2263ea4e-146c-4906-a40d-30157eb14288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 103eeff5-0b18-442d-b242-cc2d09f0b5bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 81ee7474-c433-4cdf-9b0c-cefb58ed0a06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0905;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h978D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h0905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #453 cfd2e5f6-20ff-449c-bd1b-b4002491a784)");
unit.assert_eq16(16'h978D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #453 7a014acf-9fa2-4af4-bffd-d5d4cc378a20)");
unit.assert_eq16(16'h0905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #453 993fbb2f-3faf-4979-bc03-cbc51b6db818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 7ae6ee77-f21a-4899-829e-76a786af5f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 011ab62c-198d-42e6-b3c2-69d9fdea9911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 94ed95dc-9a50-4d2f-962a-3b691dc00be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 4a789c29-99de-46ef-b24a-be36789f23c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 ed8342a0-6eb7-4765-989d-0717bef95cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 ddfc4b1f-9cc0-4516-b033-da6a51dfcb68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h73BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF51B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'h73BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #454 7eb69304-d0ad-49a1-8894-3f5442f53d91)");
unit.assert_eq16(16'hFDC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #454 2881a499-43f5-4613-88fb-0119c60bfb6b)");
unit.assert_eq16(16'h73BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #454 e588a66b-029b-469b-b702-9a619f909c3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 d6d29c6d-e79a-4dc9-b893-6bf1214c375a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 405440d4-5ce4-4a31-8fe4-e149c5219e55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 e4e332ed-b9d3-449a-a9c3-ef3d6b8dda9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 e2e39634-c67e-4276-a0b5-3ab348fe3d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 17a0edb1-17f3-48f4-b2e2-2eba74d3e194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 6bad5433-4f3d-43b8-8d1a-d0122da07fff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h22A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB82B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF50A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'h22A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #455 6ac060e9-c232-4314-b087-ee83e3362119)");
unit.assert_eq16(16'hB82B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #455 1c8400e5-f777-4164-be71-0d7a3beea624)");
unit.assert_eq16(16'h22A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #455 2a03fcd6-aecd-4c03-9e3c-1107f365a49b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 0b986ae9-520a-4bee-a1d1-968e6564fb77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 2981e793-70c4-483b-a78a-433ce0957ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 4cff57b8-f54a-45b2-a686-046173330190)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 8b4ca1e6-3cb6-4c53-b64f-045590e4c637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 fefff435-e643-4ad2-8240-f6f179ccc170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 3a55bf49-985f-476e-86f3-7e64abe8a6a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5A2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'hC8A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #456 e71ce8a1-2721-4c1c-9d3d-b31c4e355a77)");
unit.assert_eq16(16'h68B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #456 58d97c24-4844-437d-bf92-9b10a1eff413)");
unit.assert_eq16(16'hC8A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #456 f2378381-6679-4d41-b446-ec2ea90b80b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 a0d01a2d-ae9f-44a3-b622-2651bc2ea9ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 ba10d16e-6550-49ba-8d6d-a04d9468eaa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 39cf37b0-9409-40d3-b13c-883f269b2cfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 4e7ce965-377d-49be-9922-8c1e29ddff20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 cb532e75-9bc3-4ee7-821d-50ff0a8de251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 a70b67aa-729a-4cbf-a1b6-284a013bd3c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC54A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2AFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h723A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'hC54A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #457 c1215c6a-143b-44bd-bf2f-8e2c60c31ba8)");
unit.assert_eq16(16'h2AFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #457 c9290c20-6914-497c-b8f6-a78e3acc1612)");
unit.assert_eq16(16'hC54A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #457 1cd5b310-8478-472a-bd33-5877c8d0d55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 6f638ed5-ead9-4541-8b76-23ed0d69d672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 22380655-b6e3-4f0c-a394-c02bdf23a1e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 99bb11ea-a4dd-4101-b59f-52111b5663e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 e156ec4f-3283-466a-a4c1-2b672f28abd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 a5afeb39-8ddc-4f2d-bdbf-2cc01d4b80f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 0bd3d803-0dc5-4902-bcfd-a7003d580b98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0017;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8326;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h0017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #458 e249fb1c-71a6-4217-a897-6a1ce64d0edc)");
unit.assert_eq16(16'h8326, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #458 72c65f46-9221-43c8-b700-76f70613b924)");
unit.assert_eq16(16'h0017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #458 9bf569e3-7298-40b0-8100-b1ce6aadcbe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 0d41fd75-83ee-45fc-b098-d49a89eea4a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 856b2c40-82bf-4f87-b795-850987aeb55b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 7208e17a-e5e6-4529-928d-6cd3218b20f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 23314ac9-fb9d-4efb-819e-7d055330faac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 cf3c6596-1447-43fb-8ec4-2a70b50b592b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 762dfe49-5134-4842-b89f-d1dff4d7e67c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA632;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h21B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h531D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'hA632, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #459 df2a91ad-5cec-45e4-b3c5-9a963f49c9b8)");
unit.assert_eq16(16'h21B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #459 0885aee9-eca8-4687-973b-d24671dd885a)");
unit.assert_eq16(16'hA632, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #459 bdfd94e4-156f-4c80-a3ab-3fe9a5bbd91d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 0f89a181-9898-4322-a3e3-f2a67245016d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 b2259e11-8cd3-4181-9117-8350ab940e37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 5a022cc3-76c8-4d32-b2ee-2d7ad78797ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 dcd4c957-ff07-4aef-ae20-e53383e5fb2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 fd11e3a3-9070-4bb2-b5c3-86059d0c012f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 6165b6a5-dfd2-40ef-8888-660a6c855650)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA310;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8F0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h36E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'hA310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #460 0a4e9c89-ecbc-4cf5-89a9-9e10054f2c01)");
unit.assert_eq16(16'h8F0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #460 a7f279fa-d926-4fc3-94f1-dd343ee9c5b5)");
unit.assert_eq16(16'hA310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #460 38747ff3-a3eb-494e-8b92-5d72d2b06235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 8d4b0ba0-7021-4ae3-91cf-01f1645cb9e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 31b3f354-4bcc-4edb-90a0-6ff89cc1498c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 51ee5bc2-5c58-4f59-9deb-c1af0c171067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 78908ba6-91ff-4811-8393-ba637eceeb46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 1b81680a-e7b8-46e9-9dcf-2433a4a4acef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 d24eb886-dd92-4823-bfb1-f1f1086bffd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1BF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE580;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'h1BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #461 212a33a1-259a-4d88-bc5e-065638f605a0)");
unit.assert_eq16(16'h9DB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #461 7855c8d1-8aec-497f-984d-08ef81dc4c2c)");
unit.assert_eq16(16'h1BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #461 c8645333-8b16-4918-ae20-a0c766bb217f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 274243cf-8e7f-41a8-8ebe-b6f642d463ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 ed8e967f-1cda-4cbc-b3b4-1015b85dde42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 34dda521-8ecb-483b-ad61-7f15e5af293a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 c84228bf-afb7-4c44-9bd1-e07a0674089d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 dc875189-31bb-4cc8-b644-a2d30a02f6be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 8fffe52b-8d98-456b-a254-620015e30931)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h58B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h16A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h51B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h58B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #462 82a98007-ffec-4a58-9848-37a8ca595a49)");
unit.assert_eq16(16'h16A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #462 89402aaf-1164-4524-a029-5ea355c3bf3a)");
unit.assert_eq16(16'h58B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #462 13ea4d4a-51e7-486c-83d0-516cc24357ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 205ecb5c-b965-40f6-8f94-da31c520ce07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 1d705fdc-636e-4cfd-a580-9bf18e62de96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 10388b65-4ac5-4fd8-859c-cb8d1d28b2e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 fad56bfd-f04b-451d-ba71-502aeadbb5cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 319bd2e3-7ce3-40e6-b284-1c9e72b3018d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 b9a6c70c-614c-4a26-9333-de6309332b06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4BE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h764E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'h4BE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #463 e4f336c2-c444-4328-a910-c8b1143784b2)");
unit.assert_eq16(16'h764E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #463 7909b453-1355-4942-86db-7b1ad2a1129a)");
unit.assert_eq16(16'h4BE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #463 82d2439e-00e8-4783-8815-4923e4417782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 6c8ba752-18d0-4795-8f96-330e37ba08b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 b2e93651-cbb7-4a00-9fb9-3d845c0f328e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 41ea7e3d-8af0-40ec-be75-5d5a34429d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 d64ca33d-40ef-413f-87e1-cd4453bd3af8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 feeebfde-875d-4086-b31c-7bda5c134849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 f7406247-36f2-485a-b0d4-6a6b3af5e536)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h114D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h32EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8932;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'h114D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #464 66e01c7d-f5f9-40d4-9666-6b09e19f9f0a)");
unit.assert_eq16(16'h32EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #464 5be8450b-e1f6-4e40-8bf5-efde2547e2f1)");
unit.assert_eq16(16'h114D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #464 97fe6da1-2746-4ca8-b38c-269002b7f519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 c0d3eba4-4a1b-467e-94b4-7415a2ed604d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 f0ccb21b-2aad-42fd-8750-3a3995474384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 b21f2bfa-4ae4-41a7-8812-f3a57fbb5822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 78fec96a-4923-439a-b952-513b444264b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 fc100890-8213-4a1d-8d40-42340437be0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 39c2e84e-c20d-46ab-bfb9-a13d26c199ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7320;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h40EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9F8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h7320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #465 b4cea278-2fbe-47d4-a42a-a687585bddb0)");
unit.assert_eq16(16'h40EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #465 32957153-072f-4551-8794-7297eace513f)");
unit.assert_eq16(16'h7320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #465 9ff7e721-b0a5-41b5-bba4-2da349dae532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 73aceb4e-c2d4-4777-a019-6c981c16873c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 350ec2ed-8499-434a-9797-36df18323822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 20fcc974-f5ad-42ec-a0aa-2a0c16ed1bc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 77168e93-f6a1-4b83-ab50-b18f8969a5ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 ddd8752c-3c0c-4fa3-a2b7-1906d0c21467)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 ebd33a44-6a0b-4fbc-9ed1-0c120fbadc30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h73B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h73B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #466 873e1c12-c7cd-4325-b144-91c6805ba33d)");
unit.assert_eq16(16'hE7F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #466 72b71d22-fd2e-4c9e-a303-40522a186278)");
unit.assert_eq16(16'h73B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #466 ecdcdede-fe51-420a-80a2-d4ed9169081e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 aff8d68f-4484-4e0d-beb5-981afd1e7d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 0faa3887-e65e-421a-a708-b0a521fccd92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 0e566cb3-8811-436c-9d44-ecef84b517cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 2333fce8-2f58-474e-8e66-7d56fc84d24c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 df524be4-aa08-455b-a36d-d4de9694729a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 ab3b7ac9-2a62-4108-815e-ce8ca3f40e24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB3F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF900;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'hB3F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #467 6d315f7f-113f-4ed3-903f-87257c39c752)");
unit.assert_eq16(16'h0FB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #467 17476ad2-b66c-4665-a5fd-daf4a3652f75)");
unit.assert_eq16(16'hB3F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #467 8048a5cd-9b4a-438b-9bf4-150f9575e66b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 15b0a45f-1c37-4f9f-822d-08707cc3cafc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 87a999a1-6d97-4a60-a713-46b9dc295c4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 c87692f8-635b-49f4-997e-fa41844c2bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 493aa2af-9e81-4a42-8a96-24c2930d26ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 3fee71c9-2ef9-499b-b80c-e4d3e0b5306a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 999b804e-e5e0-445f-bd39-3f3e96f8f5da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h167B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h370B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'h167B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #468 b800a69d-6cc1-49c1-a4b6-af810101ac85)");
unit.assert_eq16(16'h370B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #468 79a3ad25-2821-463a-83fd-33715b351448)");
unit.assert_eq16(16'h167B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #468 c87ed739-b424-457d-9f58-e1bde623927b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 51b00468-588c-4d90-88dd-91eff91dcfa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 80bb0f34-e956-42c3-9c04-1ef0f475f0c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 f4959240-516b-4760-bb60-1ef778dc648b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 e9ba72ae-38c3-4e72-869e-432725183e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 eabb1150-1cf4-45a7-9ddd-0c9bd06cbdea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 eeffc897-c589-4a6f-b557-d7ec783be2f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h651F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF041;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h75C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #469 9cac9c98-2e4e-48b7-8e16-c8a2ae930c80)");
unit.assert_eq16(16'h651F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #469 fe1fb67d-94d4-4854-a402-ef3f08b59e8e)");
unit.assert_eq16(16'h75C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #469 8319ab4a-7d54-4da6-b4a4-c5195ac6ca49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 ec013f6f-405c-49d0-bc88-4b2efd27aab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 489f9383-dc99-4070-bfa5-d0b83246ac9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 7a9ec3ff-d87e-4893-9a51-a2485d610845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 773506d4-ea9b-4c42-932a-cc774c82c77f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 64ba809f-0022-486f-bce7-8bc5aafcb3e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 e21e2940-661e-4f91-8fbe-1357077651b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6272;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA290;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'hBB1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #470 133320b5-2337-42cd-b495-e7f875b69c1b)");
unit.assert_eq16(16'h6272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #470 442f0dfc-7249-4755-94ca-e6865647068c)");
unit.assert_eq16(16'hBB1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #470 e41ec8b9-5ade-4b16-8e2f-f7d3c7ff77d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 708f7686-30e1-4cfc-a6ca-2db2e3f45f12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 1b9860c9-dbaf-4a0d-9bfb-523e6884feff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 0353eefb-cb66-420f-ab8d-54f9f026c823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 5a41e11c-ff59-41a4-843f-9fa3600d9c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 b814927e-44a2-48f5-a919-581fe8c5197f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 8a6829d1-26c9-44c3-a54e-042c9ef591a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6E97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'hD5DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #471 ac7d1b17-dd4d-45a6-893f-2041542e3b19)");
unit.assert_eq16(16'hABF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #471 92a01a69-9e84-45a8-b2b9-b63e37064c69)");
unit.assert_eq16(16'hD5DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #471 7638f4b4-ed90-456a-8ddf-09b673981d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 c13180e5-aa4d-4289-b695-971dcbccecdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 fb6ec615-8e0c-4d2a-b4ab-9f4f5ea9152b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 d488ef44-6f31-4b30-98e2-0b6410cc1f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 24701f8f-0f99-49cf-bd3b-d0e874030049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 291aee23-8a09-44b3-97fc-bc18f6ad4454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 fd4f097c-e7c8-422e-95ce-d05e16a6e107)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCF3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBE20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h144B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'hCF3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #472 aab67df5-d543-4c65-bd55-fa89c7dd4df5)");
unit.assert_eq16(16'hBE20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #472 73b6d017-0c4a-4f6c-943d-5f9f5a4255b0)");
unit.assert_eq16(16'hCF3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #472 2728193a-2e4f-4587-b8ba-4b179da78641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 55de2b2e-3e0b-4160-a76c-b8a07f295188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 80146ca0-7dae-4c58-b310-721823737d49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 f1f89939-274b-45b7-bc66-b5d3f39b995b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 0a51a359-b751-457c-aeb8-c0612e8ec25d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 d8dd3267-db34-416d-a943-8c3a5ddf2414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 e5041830-c93a-4795-a05f-7dd43057a380)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF56F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5585;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h29DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #473 813f226d-7462-486a-95c2-08983b8432bb)");
unit.assert_eq16(16'hF56F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #473 551f389f-8fd9-47f7-8e59-21ce982101b9)");
unit.assert_eq16(16'h29DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #473 2fa17e26-06d4-45ce-86cd-b1cfe7f12f7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 a1a957fc-cf1a-4d1f-87b7-35ef67991335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 c7c302c5-5fa9-4324-ad45-07bc7cb502d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 592168da-d711-47fc-9355-e48549a6cd76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 3d86a322-b705-40c8-86f9-18c13ddf0c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 72854f46-3f4a-45bc-9715-75ae1ae6c9be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 addaac9d-cee8-430a-9cfc-da6e21385503)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h50B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBC8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h50B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #474 ab99aa5f-fdce-45e5-8ead-efc9783222e7)");
unit.assert_eq16(16'hBC8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #474 e68b7681-af70-47cc-92f2-43076de059bd)");
unit.assert_eq16(16'h50B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #474 39518fe6-a16c-472c-9b33-02efc86a2ea3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 c0ac8d30-f66f-42dd-8c43-3c9d4fe0a704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 6ca044de-ed9c-4127-9a7b-ba5595bf8c11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 1c2c0f75-8424-410a-8e6e-f644367bf834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 3dd429a4-4390-4063-acdc-4cf8cc5183e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 2123cdba-fb3f-41d5-99aa-bf90359b0657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 e347a18b-aef1-450e-b0a6-7c39bf1d9ae7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7100;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBFBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6DB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h7100, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #475 630d485f-e097-4b44-9b95-665924bad930)");
unit.assert_eq16(16'hBFBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #475 26425238-0257-4789-b2d6-1e145aeff2ac)");
unit.assert_eq16(16'h7100, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #475 601f113d-f280-44af-84df-9b4030c6095d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 e3e6d530-4d3f-41c1-8d71-f300af4fdb1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 2fea2eb0-62c8-4bc1-9b6d-814f5608bd8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 fe1ba239-cfd0-4ab9-8ff5-f52d4523bc9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 c17449b7-e16b-4392-ace3-406351076a2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 9b01f504-1ed5-47ad-99ee-f43156a5a3ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 60b40f86-dc47-445c-91c4-a2b558d38503)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD9BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h61C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'hD9BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #476 d35514a5-de72-46e7-b1ce-305c645d24e8)");
unit.assert_eq16(16'h04B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #476 884c2bf5-72ea-4e16-81d0-17e4c56afb53)");
unit.assert_eq16(16'hD9BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #476 71fecb72-9d0c-45a1-8089-ee33d9c48e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 522befb8-e5e3-43f4-9f49-870c69f8f4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 11cd288f-af04-4093-a604-67ccf261946a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 a8e4cb68-42ad-4ee7-ba84-69612138c890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 2aa6a82f-2e1e-4024-ba68-a915033bedde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 ba43f7a0-cce8-42e9-a7dd-54ccf2cfbd69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 2c071098-0242-490f-8c1c-f38ba556f17c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4478;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h950C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1378;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h4478, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #477 6f819db7-4e92-441d-98db-00e7fc45f848)");
unit.assert_eq16(16'h950C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #477 ea5852f3-80de-430d-b91d-602300ffd1d8)");
unit.assert_eq16(16'h4478, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #477 d86ff008-69f8-456e-b47d-4e392405d705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 06cd5c69-dda0-4121-b30e-ac1431d93c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 19536dc2-9552-4d0e-805f-f618c51487ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 3b006950-bdac-4a55-85ba-39c53345e01e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 afe0f63a-5061-4c77-9697-e5ec7892acda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 da55ec80-29d2-4fe3-b471-8656f078438e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 f783fbb5-7275-4a4f-bc78-27d2d0dec1dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCAD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'hC8D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #478 4041d8f1-a91a-48b3-a437-dd1d1e3c330c)");
unit.assert_eq16(16'h4B39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #478 37caeb3d-2d08-4b6a-88c0-fb0706520b68)");
unit.assert_eq16(16'hC8D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #478 d60946f2-af49-4d50-a652-f62a9c0d2499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 86b44e23-0ac5-42d4-a7e3-319a616657c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 1d43576e-55ee-4078-957b-b79faa066cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 96e4002a-c9bb-4b07-81c6-856ff4d692c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 058a7e42-25f8-47bf-afcd-b1d675d38515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 fe5361cf-7406-406b-b839-d8e1ec33009c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 46cf6813-c93f-412a-9291-748ad6e056fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'h76A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #479 640d7d3a-0a0a-47d7-862e-cbee37a39278)");
unit.assert_eq16(16'h78C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #479 94605ab6-15ad-4314-86fa-baa5577b976d)");
unit.assert_eq16(16'h76A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #479 b182db49-0f07-4282-a1be-e74ad294b5a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 090b18f7-2f3f-4599-b5fe-86dad921542f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 7ea2f38f-b8d2-4c1c-ab10-c865fae365ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 34e9c5f1-5052-4d11-8d1c-dcf997172643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 70ee2d09-786b-47c7-937d-a1c60db8ad40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 e913cf76-33e2-45c9-8c63-43dfa44bcd6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 43f8c9a0-53c7-414c-9737-262fe5291fa5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA5B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h82D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB764;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'hA5B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #480 94e3e7dd-9c8c-4a06-9ae4-4f138ab429be)");
unit.assert_eq16(16'h82D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #480 37d4e45d-87a0-4c1b-b94b-7b4638368829)");
unit.assert_eq16(16'hA5B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #480 1bdb01e2-46a7-435d-ad1a-8faf68cee180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 f7c0d7f1-ebd1-48dc-aa47-c6a27f16ff8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 e1559584-4453-4a48-86a5-1be495f01bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 3041df42-5de4-4348-b36f-1389c83aa2c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 9d51116d-b321-46cb-a636-2be01cfad1d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 cfb68148-9e29-410d-ab25-a621d1ec8470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 5556d132-5698-4fbb-9a43-38e0dbe5bcbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h981B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2EEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'h981B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #481 ed168d9d-8f1b-44e7-8b93-ccf52e0b8149)");
unit.assert_eq16(16'h10A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #481 e9cbb8f0-f035-44d2-9cf6-3c232957378b)");
unit.assert_eq16(16'h981B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #481 f3e0162e-64f9-4ab2-a0dc-dce17f450454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 f4068ceb-e052-4f72-abcf-eb141d43dec4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 4c236100-d6b5-4b3d-81f8-f0d0f7726754)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 19f31d2e-f467-4389-afc8-0e046827a196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 22f237ad-effe-4564-84f9-54e352402e31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 07c652b2-0e3d-4258-aefb-11a143badabd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 45c041cc-5d10-4be0-9bed-7f97a23ab195)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8739;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0084;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h8739, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #482 c7fc0775-5a52-46ac-b363-c516b5d281f6)");
unit.assert_eq16(16'hFA35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #482 ea268dc7-1e1b-4dea-a5c0-69bfab4c9d4b)");
unit.assert_eq16(16'h8739, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #482 6ac27356-d22a-4be0-9847-59fc972d8834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 996f55df-df1c-4a87-9c54-3a12fccd5b07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 0058f7d2-afec-40b0-a2e2-23a6e02bc195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 c1de62c2-998a-4c38-aa48-40a64f272b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 407855cd-58d1-4333-92e2-c4590a1fd04e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 1b087e99-9917-4bc7-bf1f-25cfb40ba553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 88061724-a21c-4dfe-8166-9668b7f659dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9009;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h45EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'hF3B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #483 2ac1e735-fbcc-4e5d-92e0-e6aa2629f985)");
unit.assert_eq16(16'h9009, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #483 5368c8a5-0908-4169-b936-113320779844)");
unit.assert_eq16(16'hF3B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #483 43c7a3cc-a7f3-4426-a530-c50f852daa64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 379f412a-a119-4879-aebd-bbaf241a2291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 77b2e82f-cf6f-4bbd-8b8a-97e1d897eeaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 4912d23b-9ae9-43c1-b456-00663a366677)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 2a0eae87-112a-42e1-bb2f-f360d52e8f2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 301a0c94-4d2f-4e4e-a7d6-42a2bc6ce679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 feef325e-2147-47c6-ad61-ab49e5cf541a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h761C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB549;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'h761C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #484 d6a23822-ba84-42a3-89c3-6d683b420ed9)");
unit.assert_eq16(16'hB549, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #484 8b27c7bc-7251-4ba7-b634-5214d0d2c032)");
unit.assert_eq16(16'h761C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #484 5f3dca5d-5102-4a18-8105-e980555951b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 a96a79d8-3ad1-4cc7-aa7a-9302f5371515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 1c12d0b4-cc28-40a9-bb3d-b04b8611a169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 f959cf58-4bb1-4022-806a-041ebfc1db42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 3b3a69b6-2031-4f5d-89e3-ea8323be9a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 a9ff8bc4-9e08-4bfc-9422-775142a14366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 30e14863-1cdd-42c2-90d3-f1d91e8fbdb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6344;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h97B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBFD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h6344, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #485 3d2de658-f4a1-4902-b6ad-6e7687bd17a1)");
unit.assert_eq16(16'h97B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #485 35d03352-4afd-41d8-9a2e-797e60d0f756)");
unit.assert_eq16(16'h6344, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #485 112bb152-4f78-44e2-b6f1-19a0069eb0b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 7586745d-6e26-4676-9602-e2a54051b572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 2a98602a-e6a8-4fe6-803c-c191dce86642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 c02cb144-3431-4b32-998e-e80a5e83215b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 42647c97-ea8d-4af7-862a-fdf192ac98c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 738818a7-59ec-4f2a-902a-4cc7ea97cc06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 29467af2-a285-479d-a720-e0f45230fc91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3072;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h71B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'h3072, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #486 3a41ca9e-baf4-4f0d-a678-4513beb42c7e)");
unit.assert_eq16(16'h1B87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #486 fb14c3ad-344a-48ec-8c8c-3d696502ac0c)");
unit.assert_eq16(16'h3072, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #486 7de37451-7743-4b3e-a988-244542e0757d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 f2865eb1-a6ab-4006-8e7a-f7c2456c9f26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 4efdbbdd-9708-4cd1-ab4b-41ebad8b6431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 5ec777c6-66bf-4d12-b2ed-40067d5d1516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 36f62bc3-4827-4511-81b9-4a6b35abd787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 8a4399e3-4714-457b-8f44-9fbd64dcfd4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 1054b273-7b17-45f4-880a-3b06dbd8d035)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB399;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1915;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'hE1E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #487 906ee257-58b7-4054-bad7-616288c62311)");
unit.assert_eq16(16'hB399, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #487 e600b365-26c0-4530-8b11-588094f6e513)");
unit.assert_eq16(16'hE1E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #487 d1d8b471-1f1a-4961-a954-92295bd1c1e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 8e150533-404b-485b-b142-108050202cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 f67c2318-50cf-4e39-a948-17bc192f5eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 e66a6f8f-fec7-4794-bbf6-20712e92c1c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 af5a0057-1e71-4706-897c-4fc3eb9b82b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 9f2477b0-5634-4562-a99f-958e7125e1ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 8bf2b5dd-c58c-4e20-915b-dd0aa71bb1e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0ADF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB47E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h0ADF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #488 98056b2c-41ac-48b2-8bf2-077f232ea73b)");
unit.assert_eq16(16'h08E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #488 fa8b350a-2395-4b46-93d2-231b9f4b157b)");
unit.assert_eq16(16'h0ADF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #488 e9d789b0-ed01-4099-8120-815a74b84190)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 28d29155-a17a-49e5-8ff5-9f600bef1c07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 19f8307f-4b3e-4e93-bb2e-8cbb866a8b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 537829b5-686b-407d-998f-406aea27bfc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 893d4e98-55b9-4cee-a7ea-d875c6b90462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 30db9c25-bccc-4cb0-8852-edbec206969b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 115157e1-bd9c-4ce7-ba1d-20a7714485a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD0BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA680;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0496;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'hD0BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #489 e9834bae-b6a8-4a80-9955-6fdcfcb8c921)");
unit.assert_eq16(16'hA680, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #489 392c4645-f301-491e-99b5-27889d13ff22)");
unit.assert_eq16(16'hD0BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #489 0994ba71-b9ab-4c54-a489-05dac29cdbdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 a0d53290-45ad-4701-8b6b-bfb985454489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 067fbdb3-18a3-4494-9a61-18e63a510747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 d7f79e6a-79b0-48fa-b419-045b229a6215)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 67a4db83-b3df-414b-b54f-8a3e6b5dfed0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 c80314e0-3e0b-4f00-9f18-91881b07841d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 f2d637fe-e8ac-4f78-aeed-00d00eb98b11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3201;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2047;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'h3201, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #490 b8177154-2ef1-4e8b-972f-4ca3915a9e04)");
unit.assert_eq16(16'hF4F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #490 081005f7-d474-4e08-ae24-c069e0674976)");
unit.assert_eq16(16'h3201, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #490 80a22968-3e29-480a-b81d-a9dd87af0b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 0e2db066-90ad-4ddb-b635-c632cd10a47a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 0f71bac3-5214-41f5-8c46-29390f04e56c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 677ed667-a680-46dc-9618-c8766e0f69a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 e82ea675-e519-4fae-9e38-081654de08e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 7c2809f3-9be2-4b05-bc76-4252a12e9584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 3d9694ce-c471-41a8-8a19-8a88abdca02e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h42C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'hDDAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #491 cbe2acff-1331-4451-b7b6-faa6045c22d6)");
unit.assert_eq16(16'hFCCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #491 5352cebe-f518-4594-abf4-0ef9d5a91ad7)");
unit.assert_eq16(16'hDDAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #491 1557e4eb-41eb-4bcf-8875-bff4502f4678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 e3877cab-44b7-4f6a-a87c-be50efac7044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 d6d8f0df-a91e-46aa-812b-3da1f53bde1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 346fe8ce-7edb-4087-a25c-a3a1f7b587d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 b8b9d1f4-8ac2-439e-b30b-fa04c3df3419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 689bd310-b8b2-4752-b264-4d36b2c59263)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 6ce2446c-ccc5-4a3a-bf3d-9b965f151449)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8091;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD563;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC554;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'h8091, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #492 7e72455a-e147-4375-840e-544ba4577b5a)");
unit.assert_eq16(16'hD563, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #492 b7a672ec-7104-4bb4-bf2a-363edf932962)");
unit.assert_eq16(16'h8091, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #492 f95594a1-2cc7-4836-a553-22ae3fe3c859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 69561fbd-36f5-420f-9956-0f077141b65a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 d58b1e81-4150-4569-9068-8d9eca5e183e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 ea1a1117-149b-4d5e-9e9a-cf4fbdb1b5c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 b76333b0-cc17-426c-b92f-da22fd4949ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 e05dbdca-f63c-420d-869b-0ad2daa07b05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 3f222917-bbe3-4cac-95d6-fcaa6378eda1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3202;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7A2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'h3202, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #493 1d361185-5d68-4684-8c40-b77005002f23)");
unit.assert_eq16(16'h0DC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #493 901cd07a-3b68-49be-aa9f-52ec0c821842)");
unit.assert_eq16(16'h3202, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #493 0fe1d107-fdd9-4dc1-9499-f22bce3017ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 abf590a6-498f-4f92-b3e7-c4a0ac1bee80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 1504e959-0aa2-4b08-917e-6abea3f2722d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 73c0550c-1ceb-4b30-92b7-ab25e298102f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 fe001090-4684-4d0f-aad4-8596221c5b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 218e2f5d-3ca6-4fbf-a9c8-645381531b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 57d8f2c6-7656-4274-a575-4f0c5c88aeee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1AC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9550;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'h4EC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #494 891408d6-d359-4225-890e-e13143b305b2)");
unit.assert_eq16(16'h1AC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #494 b236d1b8-528b-442f-bb4c-8b58ab5128ba)");
unit.assert_eq16(16'h4EC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #494 82b26ca0-5e86-408d-9359-0e35fac52f0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 e2bb8b3e-bacb-4324-8d13-b65bf42d0f19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 f1c5540d-aacf-400f-a610-c73f450fdeec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 778de887-8e9d-499e-80bb-57822356dc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 e70282eb-c4d9-422d-b266-90239ce8e989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 f72b7c17-4865-4d59-82e6-8134a07333a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 e8add961-8058-4af1-8f02-7c3f3bba90a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6199;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9883;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'h6199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #495 ab7eb1e3-6a1c-4bcd-924a-8ca927a0a00c)");
unit.assert_eq16(16'h9883, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #495 e9e2ab94-c01b-4918-b82b-aca02c3035fb)");
unit.assert_eq16(16'h6199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #495 1ddb827d-e761-4e7b-b79e-d14aff79f869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 8dcd11a4-a6f8-4445-a785-945ddc491f29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 0a2da183-bd89-4dbc-a06d-719b58bf17d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 94e52c87-efb1-4fe6-9655-89649a9a1d52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 b976b359-29cc-43d1-9cda-d18238ea4f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 61e2e5c7-98d0-4482-9530-fa789c469fe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 fef8ce18-6cc6-408a-b2e2-55344abcb255)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD4F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h84BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'hD4F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #496 5a722630-ec00-41a7-885f-097d442119e6)");
unit.assert_eq16(16'h84BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #496 b676f0a1-3451-43d8-a8ba-c03a03877718)");
unit.assert_eq16(16'hD4F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #496 7d31a5aa-e806-498c-bf7f-fc8e60ef0e78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 c32eb5d1-a66f-4f1d-af18-02cec9d99465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 a1e9707c-13c0-4a19-ba66-6174f7118c74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 9b1eb153-f81c-44d3-8245-de850af465ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 d24f07df-514e-4693-bcdd-54f0f680b543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 76e9966a-1146-4480-91ee-259b608b0e2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 75b60fb1-a4b5-4f05-b98a-f19a99823a86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2A31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE045;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h3B98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #497 238391d3-fb24-49df-8faf-b18951c2ad75)");
unit.assert_eq16(16'h2A31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #497 d52a481d-3b02-4349-960b-dd575e724d93)");
unit.assert_eq16(16'h3B98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #497 3e8b4da2-bc96-461f-8961-fbaa9ed16d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 64ea5696-02e1-4172-98a4-7e62796a01ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 b7598a70-06fe-4f66-8542-658884208f85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 ec353e37-7004-4632-83d0-85e2efdc6f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 bb71cda2-f1c0-4bbd-8a9d-c3bcc85d9a69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 af30cb4b-e58c-47ad-a533-def91a97974c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 c649ba07-4659-4462-9283-ec02ab16406e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE734;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF498;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'hBA8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #498 61bbfe3a-ac97-4a33-8da7-28ba1f1b60de)");
unit.assert_eq16(16'hE734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #498 5763d5e6-6b2b-4d35-90b6-dc0a79c9e055)");
unit.assert_eq16(16'hBA8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #498 e52d11fc-1a4f-426d-bf92-a198713d6a43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 dd7ee665-d010-40e4-95f7-83ca4c1af7d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 a4c13d55-84f8-4d04-9903-7bdc51e2d690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 6e91b30d-93df-4fc7-a1af-39642fd890bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 505d1528-f115-4fdd-8f7d-f176c3589c23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 2d78eeb3-b406-4f9d-827c-aa9a3de8fa60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 1b5032a7-953c-43f6-8031-7063aa489caa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4793;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA5A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h3A64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #499 eec18e4e-555b-46d7-a52c-18da74d7be36)");
unit.assert_eq16(16'h4793, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #499 76d59c60-18e7-4fa3-9be4-56e197b2d3a7)");
unit.assert_eq16(16'h3A64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #499 9e7274b6-17ef-4b40-98d4-816c949c22dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 12392ad8-b5b6-4ed2-9902-09c0ba6e7460)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 b6f29249-e4b6-49b6-8462-d737e01386a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 9b3cdc0f-4c17-49b0-96df-5c91261e37e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 ac5dc740-2ff6-45f1-89fd-3c72fae7050a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 9a86020c-defe-45f9-9db4-8a83487808fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 e8654062-00b9-4ae6-a0a3-1f14716e41e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE15D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7EE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3EA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'hE15D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #500 da575eb0-2848-4d1e-ba95-226c32c2504f)");
unit.assert_eq16(16'h7EE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #500 7bf0094f-4c88-41d7-9ac6-13ee4e09060c)");
unit.assert_eq16(16'hE15D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #500 dbef9af0-bdd1-4c4f-b2d8-a12b050c562b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 f6153af5-882b-4d73-a0cd-4b300a5499d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 d8f06814-1a7d-4610-853b-801bb9fb35c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 75c00953-a525-419a-9af2-9b85e9836938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 5511839c-b936-4a13-b332-da758e7c5759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 8a1abbc9-7832-4af0-b62c-37833e644457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 ce8eda75-1d05-4bc8-9f48-e1e9fde3a302)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h65B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h366B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'h65B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #501 109d183a-266f-420d-af00-99c7e160f83b)");
unit.assert_eq16(16'h366B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #501 4a75ec28-cbe9-4a5c-9d94-f08d2b95f48d)");
unit.assert_eq16(16'h65B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #501 1322beed-586d-4598-a0ea-c634e8ea4f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 85de9e0f-8d9a-43e6-af05-b3025d548731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 549e6e30-71de-464c-9717-2c1b9e65b7a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 181645dc-6081-4599-8a60-40abb383fb22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 d0432423-fd61-4d04-aad9-b5536f63395e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 3945269e-6f52-4c49-bab9-c08ae293dc22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 efe02c05-9028-4173-bb40-54df55d95215)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFEB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1051;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'hFEB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #502 e2568f19-42d5-4d8b-aa3c-f8a584c6fd82)");
unit.assert_eq16(16'hFD9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #502 ef93e8b8-d765-45fc-98e2-d238d3c86241)");
unit.assert_eq16(16'hFEB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #502 897c8521-da55-4059-b486-aa3a56d2543c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 d1ba8d33-5d64-44b3-97ce-fd9857b4227e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 503726d0-9cc0-4372-adb5-cdce8a2122f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 eec9bfe8-bf24-493e-b1db-27f4f7cb9fc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 e64bfe38-6fb0-4100-bbf0-cb2d8e5b2185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 1cfa8b72-7a71-4305-b52f-570c8d714cfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 dbbe2e67-86c3-4f8f-8af6-2deb12b85029)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0701;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h35ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE1DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'h0701, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #503 065ebdf8-7b95-43d4-ae1e-694caf5c3a9a)");
unit.assert_eq16(16'h35ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #503 1af84a6c-d310-4723-a3fa-c698d284b9ba)");
unit.assert_eq16(16'h0701, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #503 7992879a-9e76-451d-ae0b-6b82fdff903a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 44f4e2d0-2f60-4f99-8c32-80b75e1948f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 5def7977-c65c-4dbd-a2b0-b753d019fd21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 1fb95c1b-b4fb-4a2f-ac22-4b90ae08cf21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 7ad0bd10-0961-40ab-a684-7461ac336652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 2d515a71-4995-439d-8dea-db6897fe4311)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 94b5eb94-b3b2-47a1-b3da-866862f442ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3130;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE670;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'hAF3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #504 70cc518f-1866-416b-a4cf-5d88561100bb)");
unit.assert_eq16(16'h3130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #504 a471247a-a374-49c3-b01d-75c0deba4e21)");
unit.assert_eq16(16'hAF3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #504 fb98e9ee-b88a-44c6-87b9-a84be4ae48a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 f3316d6c-f375-4608-9638-dd73213ecb12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 a8d20fd3-debb-49a7-9abb-73530b1bdf2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 d44218b6-664f-49f6-a179-2c762156c7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 8fba2eb0-66da-499b-8935-25f9aa4ac21e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 5a42967f-06ca-408e-86ed-bde6f84de3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 6901d9d0-513c-40e0-8118-237b494f290c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC8CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'hBE1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #505 3cebdef5-a814-4d97-bdd0-a7f201cf7850)");
unit.assert_eq16(16'h1DE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #505 b98bb402-1cf0-4803-807f-0c94af0604f0)");
unit.assert_eq16(16'hBE1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #505 1559dba5-008c-4bb0-a558-71bc689bdaa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 b850c504-011d-477d-a29d-b01c22efe752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 22572d41-205b-4670-8c66-f125003387db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 d0a2baa6-9613-4b98-9097-de2e8c58a996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 e4bb1374-0a7a-4a40-be26-c60b797176b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 6ae7d5ca-a197-4e55-9f0d-fdead7e373c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 dfbc1012-4ca4-4455-808d-af317ca8f288)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE2EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h602E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h76C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'hE2EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #506 29da684d-6aac-43cc-be1a-8866496e882e)");
unit.assert_eq16(16'h602E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #506 462eeb44-7dcb-4e20-a3dc-17641308f98b)");
unit.assert_eq16(16'hE2EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #506 c22599d5-9fd7-4f63-b6fe-3a98f77cf477)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 19aa5bcd-5dc1-4451-b69d-088dd017594d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 ff0b98df-c051-47dd-a382-a66b0fa1e4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 9a1ad8b8-d81c-4f82-9ec6-343b3a27172e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 23d03a56-1f2b-4dcd-bef2-5fcd3590ac86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 05ed292a-3cc7-43e7-90da-768666c3adbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 ce905024-c555-4365-a287-9b073c8306c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7E7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h05FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #507 e00e7c22-bd5b-4d2f-9702-2cc2e1febea7)");
unit.assert_eq16(16'h0FCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #507 ef11ccb7-3e36-4523-957f-fd16ccf81ed6)");
unit.assert_eq16(16'h05FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #507 456f02a5-8c1d-4470-b57a-93d017d7da3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 14f4cfb9-cfb4-4c9e-b16d-a25f8501666c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 6f1ac9a4-fb20-45de-850d-4c2552b26dc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 a236c073-973c-4f3f-b9a9-7975c25151f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 9f08ca9f-6750-41a1-9f74-f6ffeab0ba5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 689c55b9-f71c-4251-a84c-0287d7b22219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 177cbb2a-8678-468f-a49e-d60e93abd501)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3016;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h3016, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #508 8c72b199-691a-4a94-bf67-d0a72a3bd17f)");
unit.assert_eq16(16'h4E81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #508 d66db469-8ac4-41b9-a399-333d3dee9c6a)");
unit.assert_eq16(16'h3016, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #508 2b8d1da2-5ac9-422a-b647-bb975325f42f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 7cad2f7c-6f23-4b8b-b2a9-2ffea18e3563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 0942b403-6e10-4451-bac4-190bf975ffa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 567d9d23-709a-4e4e-bfc7-9621bfe45cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 c003ee56-6df9-421c-b1f6-cd0fbdd9008e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 952edb0a-b9a1-4426-b307-b9b7da81a500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 bcb3090f-9dbd-4e58-a1e7-9a7e9ee61e69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7FFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAADB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'h7FFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #509 f6d2fe53-b3c4-4a23-ab22-c7d3bfe2d101)");
unit.assert_eq16(16'h78DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #509 e2a92632-5802-44f5-a12e-dfb89efc5cf7)");
unit.assert_eq16(16'h7FFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #509 985c159e-a07f-4c18-b9ef-d83245e90174)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 29e825c6-2882-4495-9c2f-448429994e8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 a18836d9-fff8-4ebc-a443-e0a40baf5e47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 117aa11c-5d2d-47cc-a81f-587e7e1cca50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 0589e704-e3fb-451a-99a7-23952fcad16b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 03712f9e-05de-44cf-a7db-c187b92757c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 fc8591d9-c015-4aaa-aa02-fbde199f52c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8356;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h31A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6369;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h8356, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #510 6d7c4b47-5f79-4776-be8f-698dcdcd6aaf)");
unit.assert_eq16(16'h31A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #510 ab29b144-d694-4b7d-996d-7b56a301c3e1)");
unit.assert_eq16(16'h8356, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #510 77905920-b890-417c-b808-b1cec7a7074a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 8ac3b473-9fb3-4e71-a999-deb11d32b8e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 099a28fc-b349-43c5-9e95-52c13ffc3671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 4b11f56e-3258-470c-b0b2-12fa74755f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 9fb24731-f327-48dd-924f-e2af29a1c526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 31489e3e-dd81-42cb-9138-2fb8478991cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 163b847b-07ac-47a8-8c6a-a28b4725e5fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB70A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE675;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'hB70A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #511 24448487-a402-4eeb-906e-f8c2896be0a5)");
unit.assert_eq16(16'h9DB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #511 7abf4073-176d-424f-b80e-c89d38935139)");
unit.assert_eq16(16'hB70A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #511 1e57c746-6fd2-4240-b1b3-ca99583d6b34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 4670f92b-c585-4a68-b852-d91097842f66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 78798e00-c2ba-4cf5-a01b-4707d16a974d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 a9dfcc12-786b-4e9a-ab99-58cb24fb067c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 a05cbbb0-9ab4-4986-8148-9c44d22f4e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 2fcfca7e-d279-46de-aa55-6419ad655248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 f88e33c2-b4bc-4a1c-ae61-c1778622784a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCEF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6ED3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEBA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'hCEF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #512 39c981a6-dcaa-4f5b-8392-b549c7a9fb4f)");
unit.assert_eq16(16'h6ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #512 537c37da-6bc4-4aae-9960-a3399cf28621)");
unit.assert_eq16(16'hCEF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #512 481a6e65-86ce-4192-8e48-f24fa44e80d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 05738be1-6170-4a7b-bad2-1641ff01a5a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 0300788a-11d0-47ff-83b1-8bef338cff9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 6908cc8a-00b9-461b-9645-c5d881eee6e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 613f7c4b-739b-4420-931f-5f3eecc45e5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 674136c0-ab3c-4cb1-acc9-37f853421889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 c4d3b193-7be3-4b67-9279-1f989520d92e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF143;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h40DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'hF143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #513 4c10f7d9-daf5-4cee-bf29-708343945495)");
unit.assert_eq16(16'h0A9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #513 04e8fef4-13f3-4d20-9e18-e14dc6fe0a42)");
unit.assert_eq16(16'hF143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #513 9023e29c-bb70-479d-bcc9-e7114503b31e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 378a4963-31a9-4d3b-a486-3f203d1471ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 2685360c-bb50-4115-afaf-98807586e5a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 70d515e5-41ab-4f2b-abdf-f8311b5f2c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 c8297f59-92f8-4a0d-bef9-7b72da2c9431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 22de0a0a-5d7a-40af-92db-338d84b7d99e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 33466840-9146-433d-9928-52ad0f711402)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5126;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h53E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'h5126, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #514 3463dfca-1640-45bc-8609-a43c185c5cb0)");
unit.assert_eq16(16'h53E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #514 9c3e3091-1fd7-4f9f-8fe3-0f82f25aff1a)");
unit.assert_eq16(16'h5126, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #514 96e0e9b9-cc7d-4dc0-8f48-8b1a224b1441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 780d1668-6ac2-4d7e-a20e-ff735dd01aac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 386b5259-2cd9-43f5-8f76-84dec976fdd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 bf11a83a-fac1-4dd3-9790-1d3cdcc06e4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 a086c1ed-204f-40d4-afe9-c309d13ebf5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 d5955689-68cd-44e5-a2ec-84c74d33ad87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 b96536fb-7cea-4938-9629-9c9f18547ca5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3DA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h964A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h51C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #515 17d6fc90-57ad-4958-a6f9-62bdc7c0ff58)");
unit.assert_eq16(16'h3DA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #515 f697a48b-13ec-434c-af22-eb990ad37070)");
unit.assert_eq16(16'h51C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #515 dcaff44c-cc0d-477b-aa43-c7bcdda03be4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 d4810a73-b319-43ce-8188-0e62823ea696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 bbdccd35-e313-4559-a125-32ecf0dfb919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 a576e442-a226-4762-a73c-4fdcf7d0d86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 c9247890-1457-42ad-98f6-4f774a597419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 0a1f06e3-fec3-4eaf-a631-065a89300354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 25374882-76d2-48be-be82-21c30426ac32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0791;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDA12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'hBB46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #516 391282dd-f356-4f05-b7a1-9bfc1fd32e27)");
unit.assert_eq16(16'h0791, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #516 615b49b8-0e4f-4dcb-bed2-fd1d49bf7633)");
unit.assert_eq16(16'hBB46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #516 c48f7c8d-e6a8-46b4-8b68-047d2c64c42c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 378066b7-0ea1-45e3-b6a4-bc41d16a3d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 3ddfffa1-c59a-45af-bcc7-79b3497693de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 1dde9583-5416-4bbb-a49f-863e908b4ed5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 69b133cc-4103-4dab-a895-28c86371ff8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 4007a953-77aa-46a1-ab6a-f9f5e70965f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 6e2e9d31-0adc-459f-8291-7d11f5653b38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1FD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5924;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h4C9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #517 4c6d8fea-7800-4b42-ae7d-f8f08a3cf01e)");
unit.assert_eq16(16'h1FD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #517 e1689b12-6873-49d6-8f56-ba1fbf901405)");
unit.assert_eq16(16'h4C9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #517 422e01bc-bbde-40b8-91a5-37a876b5cc9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 262116a7-1095-473d-8c6c-d71b45587d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 fdab520c-df68-4511-9ed4-e2e7a59b6a6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 5d3b436b-83d9-4ac7-b492-da18950fc775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 1f75093e-91ab-4661-b894-033e56213a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 a7849cbe-b6e5-4332-a0e3-cdb40596e4f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 d18f19f8-d98d-4fea-921f-b30c30b146d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h56DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBCE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA58D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'h56DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #518 bb4d5f1a-bc36-44ca-89d4-bb8ee1bd7685)");
unit.assert_eq16(16'hBCE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #518 311e0033-53c5-4c20-8d18-a7745481eec0)");
unit.assert_eq16(16'h56DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #518 6ce75fb0-0859-4356-b231-38d55d4ede6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 7b206b8e-4076-485b-8137-b75d48651e49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 522ec2fd-67ce-420b-840d-147b16c0ec41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 73acdd39-6e21-49a9-b642-d5d79281e811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 65dd72be-1793-446f-bfa8-3bdb1b7d3450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 08b2b069-d311-4bf6-8db5-10919a509a0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 cc86499e-5911-4db7-b46e-d7617823bfb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA1EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB9A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'hF3F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #519 f97ed5df-c2e9-4443-9b75-638d22043beb)");
unit.assert_eq16(16'hA1EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #519 3b90cb09-94f7-40e0-b7c7-1bc10ae2f543)");
unit.assert_eq16(16'hF3F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #519 c9418332-f69e-4184-aa94-936866f48560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 0a8396c6-f350-4392-94de-9b194e68d0bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 dcff6367-b669-4a0f-8c04-9f229522ae13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 9ca423bb-dfe2-4682-8c32-ec5f0689402a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 3f12b0c7-738e-45ca-9ea1-423e7958d6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 ca009e55-943d-4900-8ea7-cf5d7b1f2a6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 66580eb6-5e6c-4789-99dd-1aa89d22fb81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6225;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h926F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'h6225, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #520 dfd7bb9a-753c-4ca9-8d45-20362a64551e)");
unit.assert_eq16(16'h9A7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #520 bbd1a1c5-9304-4135-8084-4c05d9b591bc)");
unit.assert_eq16(16'h6225, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #520 74f32db7-e219-4d6b-906b-38aff039baf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 28d7a145-278d-4580-87fb-68bedd5d0d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 63ea3365-19ce-49f1-9da7-fd35cdd3a2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 8f94992e-8d1a-4695-8745-46834b0eac2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 030326b7-6268-493c-a8b3-2a0a243bc855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 b4ad0d49-78cc-43ce-858e-fb0cc66d3b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 ded53eaf-9f4f-4dc6-badd-866c48d81d2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8511;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7181;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD996;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'h8511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #521 46b2ade0-4661-4b69-8ae4-ac532edc477c)");
unit.assert_eq16(16'h7181, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #521 2499074a-8a15-4ec6-82e3-41dda9939e73)");
unit.assert_eq16(16'h8511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #521 a44cd69a-ce87-40b7-bc30-e32c0f9b4815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 68ee404b-5be8-41b7-8ce9-7520289330be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 e4eacd8b-7406-45df-80c1-3038715a70dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 c49a8b22-da83-4937-9dda-745da1545a9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 2c94e934-0d09-4b19-9919-9f2999e3d558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 62f754da-0677-4a16-9254-f7a5b612f523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 626c51ed-6099-4f22-ac1f-c00c5bd16b33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2868;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h99B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #522 ee2aca82-64de-451c-8379-f05a2c1907c4)");
unit.assert_eq16(16'h08EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #522 44e1be4e-2e6f-4dcc-b6b9-98299d5b6454)");
unit.assert_eq16(16'h99B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #522 98c86c18-c1a0-4cb4-8617-680cef83e261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 dfb5f4c5-284b-49ea-b5be-ec4e9209561a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 21aa8250-89ae-435d-8574-089e6953fcdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 b71fbfec-feca-4773-a991-445beb8fbc44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 1f16d34c-ea5b-4928-ac60-8090c16b1272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 c814a3e7-7523-44e4-b2b8-7e99577890dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 45dcad0a-bf78-43d4-8f32-efde7ad7c897)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9098;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4797;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'h9098, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #523 13db3a9f-d35e-467e-96ea-ccc3e0e2a34c)");
unit.assert_eq16(16'h0F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #523 ce1f8569-b88a-4150-b665-03c5947d5253)");
unit.assert_eq16(16'h9098, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #523 1fc4f3fb-0b54-420f-8a00-fde0ae48cf1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 ce4faeef-edd8-4cc9-8957-e54e14b47946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 6df00032-8bac-4fe0-a070-96a90a95bec1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 7230e9e5-600a-4f2a-9347-ec035ea6e0aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 096484e1-55e5-401b-9ee9-de545c03befd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 ae333fc5-c699-432b-9d13-d0c4ca25cfa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 91d81b3d-dcab-4af0-8368-3e74c79381af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h31FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA600;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h31FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #524 20cc9703-8847-433b-9b8a-44ce9e6a767c)");
unit.assert_eq16(16'hA600, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #524 a66c712b-addd-4406-a0be-0f0150596ee2)");
unit.assert_eq16(16'h31FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #524 dd8cc874-8fb6-46b7-8c42-a0676dd04d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 a42cb6da-d2e6-456a-96ca-88ce730c8aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 5dd6fe32-4d7f-47e9-a09f-80527b7aba9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 10c797ad-f4aa-4da9-a331-cd8d492d9b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 d30fcde7-5a88-47ea-abbb-ea8826284a40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 84602c4f-0b5c-4891-8841-d520b9f8bbae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 5cefc73c-9e54-472f-ae34-6eb0517e8271)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h417E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA4B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5676;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'h417E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #525 39fee8d7-f842-49ec-a910-aaf23000fd14)");
unit.assert_eq16(16'hA4B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #525 8f3c02b1-3927-4082-8534-c331b95b33ad)");
unit.assert_eq16(16'h417E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #525 d325e814-4a53-4f45-b28f-399d31213dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 f5dce27a-cdf3-4930-8c5c-6c9481aa4a09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 e414f814-6288-4418-b0aa-9a6069dc8e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 cf33a931-5098-4404-84c2-a95a7d7ffe9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 70d033a5-6ff3-498c-8f76-3de6d2f6d7b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 ac6bd9d5-6dcd-4695-9bd4-9335b2fc3ae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 be706b37-97c2-4553-bf45-79ec2ec17712)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBEAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h41CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'hBEAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #526 11fece49-a6d8-454d-af2c-160cdfd42380)");
unit.assert_eq16(16'hAE0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #526 52cb06da-dd20-4176-93e1-d51013ab94e6)");
unit.assert_eq16(16'hBEAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #526 d489fd0e-9258-48e5-900d-e1a3f73aad4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 a7a07d5f-9a5a-44f6-bc5b-ef5e70b6d69e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 61c08862-ddc5-4e4b-9abd-53d818884686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 9ed645e4-8295-4a73-8638-0cc548ca59c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 9f79fc2e-474e-4574-bbd3-66e4b887f509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 b591c1c9-c549-49f0-ade0-6484c4c15c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 1d900291-8239-46c1-9326-f517af0dc67c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBDA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'h8D56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #527 81af314b-70fb-426d-8909-f5794c0d103f)");
unit.assert_eq16(16'h75CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #527 57afe8fd-82ef-4ae7-82d0-14f77adec0ab)");
unit.assert_eq16(16'h8D56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #527 da134717-663e-460a-aa10-3b8dc6bf948e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 b8e28c84-0e37-4f3b-9f8f-68eda322ebaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 4c1c13ea-1476-4ad7-9391-9c8c7871289f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 7accc7ca-263b-483c-845a-ac7d7e66ee02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 29672f16-e70b-4dee-af90-807c0c4856cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 1f2930d0-361d-44bf-9d0a-0f834b3ad6dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 9d9b03e8-cd9f-4e7b-b362-a01ddb3b2efa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h519E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA206;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE86B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'h519E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #528 a70952c7-7155-41d0-99b1-34c3f433c77c)");
unit.assert_eq16(16'hA206, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #528 a33b0689-dbce-413b-a118-7099b9c142c7)");
unit.assert_eq16(16'h519E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #528 04054d5a-34c3-4bcb-a8f9-72a3df617f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 e0d4d37c-1597-4c9d-b700-8ab110034c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 6c29b8dc-43c4-4386-82af-fd8a60d1cd35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 1319a635-6840-408a-833d-88e72ca7e475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 39996482-e6d9-4871-8a1f-0033478ff777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 ce4d0927-edd8-4255-af3b-3f2b2a4dd785)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 6ec599b8-d2a9-4926-a39d-fd6889e3d21b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7555;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE407;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h4C6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #529 b5a635e1-8c65-491c-b4c4-87a24c37395f)");
unit.assert_eq16(16'h7555, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #529 9502fd64-e9e7-4004-84bf-56706f9a24fd)");
unit.assert_eq16(16'h4C6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #529 1798e919-4915-4272-ae45-58c63727a063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 fd03e59e-44ed-49df-866f-49764505488e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 80e16474-cee7-4213-bf0c-06c346efd4c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 569c9f51-2858-4f57-a23f-d3f7ed3aa447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 6298eaa8-e203-4fd2-b756-cc05e2879a5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 0445fff8-b126-4204-b20f-18ab3160b748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 1b106e1d-7dd9-4771-b6ec-06953b986755)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0034;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7610;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'h0034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #530 db5d530c-0d8a-44d9-b3cc-8912b9a3d4c0)");
unit.assert_eq16(16'h9CF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #530 489546ba-8b1e-46f3-8a66-27a20e7ade02)");
unit.assert_eq16(16'h0034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #530 8502f395-5c9f-4eb4-b35f-3a060a46a439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 d990053c-2112-4d17-8003-6c93bedbf9e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 4e076412-b83c-4465-81f8-c28591d7f75d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 597ccf5d-a55f-42c4-bed1-5f6f0b2af2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 613686f5-aed8-45bb-bbdc-f11ac1c51098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 4e765e4a-7d1f-4cdf-bc8a-c892cd9fd1fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 98123e0f-f361-44b6-a99f-53412c7ca2b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h107F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE703;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h26DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h107F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #531 01f9c4e5-bbf0-45ad-91c0-5fab0f23d5af)");
unit.assert_eq16(16'hE703, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #531 448fa54e-6a43-4418-8342-033da10ed8cf)");
unit.assert_eq16(16'h107F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #531 cf64e269-2454-4556-9863-0ae01bb56672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 43b5a285-7bd4-47a6-aecb-e1ea7abf63b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 715bce0c-76e3-4c72-a609-d1339dd1dd40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 8d5b9634-b3a3-4ad9-9e6c-ce95ac373e1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 d4ac142f-e5c3-4c91-a37b-4ac73fcf8fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 e237b1cd-66ad-4118-8106-2a58da21c00f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 be931ae4-e8d9-4c38-92ef-3b379c075eed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB013;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1542;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'hB013, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #532 adf9ff27-fc4f-4e71-9514-c696e3bfa386)");
unit.assert_eq16(16'h1542, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #532 9a20169a-7896-4c26-8ca8-5e8709b14370)");
unit.assert_eq16(16'hB013, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #532 742086e7-45b8-418d-a228-0378eae03a24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 62bdb73a-bf52-430d-8a89-da63800d2f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 6f90fa89-2809-49e7-81b4-ebe26547d1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 0e5298b3-84d4-44b7-9908-7ae1eb8ff0cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 909748d9-0e84-4ea3-a92c-869ff565b6fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 c52001d1-9089-44a6-827c-e33e3cc3d677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 af3fc43a-9ed5-4a60-b2ee-b117574d8df3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h55CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB78B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA83F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'h55CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #533 01b79d10-aa04-464a-8ed4-d8e7e80bc6ba)");
unit.assert_eq16(16'hB78B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #533 36e51dc1-aa34-41a9-b3d0-96060a1f4e7f)");
unit.assert_eq16(16'h55CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #533 ead0ebbe-4f74-4158-914a-d3e6b4607fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 599ff92f-abf3-4d0b-902a-5d3faec88405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 5d11bf25-d919-4ce7-8108-de78bef0f940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 86862667-ce60-49a5-b65f-bfddbec34acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 6bb790f3-7390-4f64-9f35-e8525e06d695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 353e086c-f2c7-41bb-9a74-5cfc543a3f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 d1f8d877-c963-4bda-8bd2-1edbd029b8e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF6FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFAB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD8D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'hF6FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #534 64499e72-75a7-4c6a-8144-6ecf103354f0)");
unit.assert_eq16(16'hFAB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #534 fda804be-1958-4833-be88-a76ed94f3058)");
unit.assert_eq16(16'hF6FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #534 8e72baed-4f7f-41cb-8521-896e6c89e3e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 518ec094-3098-4cbd-a062-720e5fa42992)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 6d042817-5155-4dff-8c58-83a8bdc0dc21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 5631df0d-6ca6-43df-a3ed-a5242b2a06a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 1dd205d6-7eb0-4951-93ce-3a17156d6030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 3c09f20b-3afd-47eb-bd5a-b94c43e6fad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 daa9ad1f-4ba8-4505-a7c0-aa3a5e821462)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h97C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCBFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC6F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'h97C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #535 b204fcaa-3df4-4ef5-b1ba-76fc000527ed)");
unit.assert_eq16(16'hCBFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #535 1a69fe8d-28a9-438d-b0db-988fe8a16769)");
unit.assert_eq16(16'h97C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #535 7c1abe26-48b4-4a1b-969a-1eeb0c5a224e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 82b23002-87d0-42bb-baf0-20dd37847fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 7bc8b4a7-a442-4bb3-a47f-b6ff410514c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 88f0ea32-9e56-4d42-b46a-e6d48183fb0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 94715635-b60f-4adf-9a9f-87f80d6414fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 ff411225-d001-4c3f-9f23-3ddf0a98e5d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 b8958db7-8890-4918-a477-8eba20590688)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hADBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h010E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF09C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'hADBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #536 08327d89-cabf-4eb2-ae6c-441be62029f6)");
unit.assert_eq16(16'h010E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #536 b97a5a66-ebf0-488d-acd1-fdcf46f4ee2e)");
unit.assert_eq16(16'hADBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #536 c7886e16-a5dd-4d2f-8388-bf1310443d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 af1756e6-2982-4567-aa62-bb8a4d42797b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 3d30de3d-12bb-4fbb-9cf1-300690f12034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 306b2c88-0ce2-40a4-9f42-20919412b318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 a69a557a-6574-444e-a87f-26f5233fa925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 9c2f69d3-d71e-42b2-b38f-173468be8fc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 c0fe0e3a-9513-44d6-909e-617fb4c054aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hACD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h7BAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #537 cbdcdafd-8919-4908-bc8f-01d44b0bc705)");
unit.assert_eq16(16'h48D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #537 1a959312-c18c-4336-8d5a-98fed5c57c4f)");
unit.assert_eq16(16'h7BAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #537 39f38cb1-228f-4a3b-9362-f5a95e81f511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 e7e0a6e3-2cb0-4b59-8b25-3181ed0252c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 8aa833d5-d07c-4958-b552-efdf726c44d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 31da7e0c-a034-4c7a-9e58-28a72b69367a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 62a1f42f-703b-443b-8655-99d5d52491ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 5e08b9aa-cfa4-4bc0-92f2-507339862264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 b69dfd9e-4070-4808-9b46-b4675c78fbfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9ED0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7DC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h369B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h9ED0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #538 28e03ef8-c016-46ec-b341-47830befe00e)");
unit.assert_eq16(16'h7DC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #538 1967106d-37c3-46b2-ba76-143ed8fa37c9)");
unit.assert_eq16(16'h9ED0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #538 267e9c1f-0154-46e7-81ab-b276e77ec362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 c2fea55f-c73e-462f-a655-ea7cd3746f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 01c751c4-9939-410c-8865-cb1df528df75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 bceddf39-ed72-4eb2-b778-b0652695883b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 a3d925c3-fd29-4550-a6f6-b6a574d71d49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 bcf57613-5f6c-40d6-ae5c-792db3a9df55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 02b7aa16-ef0e-4b7e-9092-7e2ab8a4c408)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2EAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC8F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'hF5EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #539 17fb9a34-9a09-4762-8f61-28ffc48306ce)");
unit.assert_eq16(16'h2EAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #539 e300f04b-cc0b-4071-a538-f717338432ec)");
unit.assert_eq16(16'hF5EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #539 368be157-f88e-4549-8919-34c7ea184cc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 fedf4722-aa55-4c7c-82c3-dda718b2c64f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 5dec2c9e-d04e-47ab-8056-96682007dced)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 99f1329c-46cd-424c-8ad1-9a758b19bdaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 43f51297-9fb1-40d0-b472-7b5dcd06d5e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 5eee17b5-040b-4e49-9634-845bc07653b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 2b31d42f-d95c-4f86-bee3-a507ab842bfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h20BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB5F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6176;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'h20BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #540 bc6a7aa0-c36c-44a5-a998-6959fc8143e6)");
unit.assert_eq16(16'hB5F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #540 1fc7fded-0696-4986-9879-f10e9619fea8)");
unit.assert_eq16(16'h20BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #540 83be8dcd-98fa-4c3a-b591-5a7b321726ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 c78cda23-9b23-46bb-b58f-5879521779e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 d8377c8c-e203-4e8b-b22f-40010e0fb6eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 b9273454-6f31-4b55-b3c8-7af323c7b2fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 146d5d0c-f9c7-457b-931d-fcbf0bac13df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 4ab798e1-dd66-4937-833a-a8c9ce7f9600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 7ac647c2-a97b-4853-9261-59f9e376fa2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD175;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF3E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'h8E0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #541 6e5c4e01-7a8d-47e5-ae2f-aa35b2268368)");
unit.assert_eq16(16'hD175, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #541 66d62bd5-f178-41a6-a2d0-b46af3c96184)");
unit.assert_eq16(16'h8E0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #541 6e0f0767-c8b2-483c-a2b9-c953702dbb5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 b21e5b31-563e-4b31-94d0-d3e7aaccaca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 f21f9494-8260-4dd8-b8f3-893d1c9f5777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 5ec7ba50-6686-487b-81e9-842c8da48325)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 b60fe19f-a019-4215-a351-9f49f5d7aba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 6e677630-8def-40ed-b2d3-938e248a40d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 71f119dd-e826-4f74-9476-eb1edf91eedb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h93E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h70E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8E68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'h93E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #542 ffcabbdc-e6e7-4031-94e3-cf5ce7b9b776)");
unit.assert_eq16(16'h70E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #542 f681b98e-d092-4410-93b7-ad56489194af)");
unit.assert_eq16(16'h93E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #542 5775c1e3-3fe5-42ae-8f94-b2c734140c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 37a67add-30e3-4cde-9c41-0921b7dfea3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 0e88e3fa-f094-4293-bfb9-72adfd17c7d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 768faf4d-40e2-405b-8b47-4dd7c0191c7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 6798324c-3d68-409c-9d47-51aed538478a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 c8d50109-9c16-4a55-a33d-b48c384697a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 a92cd371-5670-49de-b605-4d18e7973ac3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4009;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4533;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'hF1D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #543 898d936d-08a9-49c4-a07d-7428977f94e1)");
unit.assert_eq16(16'h4009, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #543 061ab8a9-a4af-4723-8e42-29ba997ebd36)");
unit.assert_eq16(16'hF1D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #543 57e44a17-09fd-4130-8560-df01bf641f45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 c016eb96-18d1-4c3e-aeed-95d6b52d7292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 45131924-23a3-4d91-8db8-9053b45b325f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 62412268-919f-4f29-b996-667e7b99bcc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 4e044510-001c-4734-aadd-45b89fd86576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 201cd994-2ff8-4e2e-993e-91a5c76eaea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 68af7d53-e716-44df-8f7c-7fe62e31452a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBDB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB907;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'hBDB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #544 a3982859-f731-49fd-9ddb-349ed27eed83)");
unit.assert_eq16(16'h6EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #544 9f8a9c64-30f0-4756-a36d-97a9224379e5)");
unit.assert_eq16(16'hBDB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #544 eebf92da-bb91-43b0-a3e3-bd71f9ee0bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 50fb645d-e1e9-440d-98ce-ff1d23371767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 b8af0f5d-70e9-4cee-af11-4929c2d6d204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 26c00df1-cc90-4a38-8a5d-dc67d176a326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 8d9df847-6586-4fd7-95e8-67af38770683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 29439497-f8d9-4a57-b3c2-c5ced61ef335)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 26b2b29a-bd4d-4572-80d5-e1c62a453264)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB856;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD2EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'hB856, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #545 98d110dd-447d-45c5-8dd2-1900ea8ed5e3)");
unit.assert_eq16(16'hE6D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #545 8dde54a0-9cc3-43d4-b36f-d57466da496d)");
unit.assert_eq16(16'hB856, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #545 c40b3e9d-0412-4427-8dec-47b309615b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 74e1c6ac-14ab-41a1-b840-d732aab8c7e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 3c4f2f25-ad6c-4b3c-821e-4abfe9826c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 cb5124de-0f4a-4f6a-adfa-29b4961a8461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 f378f991-eac1-4743-b994-8bb457c1fa35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 77f2188b-8f85-4d94-a2f6-8c68d060acdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 02382bfb-73c8-4119-b41a-5c49da94d00f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE692;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6453;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'hCCD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #546 02dc0abd-61b4-4b39-b164-5e09491ffab5)");
unit.assert_eq16(16'hE692, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #546 ad3c8bbd-9d71-4c50-845a-7f4eccfeb15f)");
unit.assert_eq16(16'hCCD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #546 e101ea50-2fb6-48ef-9f47-5c30932084c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 60fd45f1-fac9-4e1a-9033-09e98bd34420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 4aa9e49d-0cb0-484f-8f42-1edbb6bdd12d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 54ab28e5-c395-46e4-bf82-d28fe6bd53ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 0932f0fb-8f84-48fb-a99d-e7e5c36bba04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 3f71679a-9583-4602-b656-c0983962bf91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 6960b75e-1a5a-4a9f-afb5-fe7442abac3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6027;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA852;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'h6027, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #547 afd9e701-4057-49a6-9a54-f7f4ec315a5f)");
unit.assert_eq16(16'h0FD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #547 5b9e4da3-b4ab-40ad-8485-481e0199c81a)");
unit.assert_eq16(16'h6027, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #547 0a8b0ecc-31a6-4d1b-b859-b132cbd9d193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 61ecc6ce-0b4e-414c-b126-9b43684738d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 584839c4-5ad8-48d2-8bd1-435e92852279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 250e5095-f621-4ae3-87ee-dcc06f3e1518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 d4918ec0-8b8e-413d-aca6-e6aea8c602d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 d8ba3164-214b-4157-9004-f595b50568d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 3f6897b1-0fff-4db3-b843-1f49462e8cc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0345;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h74D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h0345, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #548 d45fbe8b-c1d5-4653-9b89-64dcf1aba5c4)");
unit.assert_eq16(16'h74D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #548 d289261e-35ee-40c9-a800-59e1dff0bdc9)");
unit.assert_eq16(16'h0345, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #548 3c999fcc-4190-4607-a374-a3845d26400a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 e28f7388-85af-456d-bd4c-5e41aebb5df9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 d11a02de-ea53-4603-8427-159a01d6eb94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 a1539956-c768-4327-935e-33461361fa1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 f71ea3b6-13d7-4281-a0b1-5f2ec6dc0a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 c596e0f9-6331-4ebb-8e73-83193577948a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 6649284f-dd9f-4301-be87-32dea428d28d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB34C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4F71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'hB34C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #549 d4fa10e6-4ef5-45f2-8de6-8882873a0a17)");
unit.assert_eq16(16'h4F71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #549 4392cb4e-dc76-480c-a4f3-1f651c6889d8)");
unit.assert_eq16(16'hB34C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #549 371b1019-4777-43b3-8c24-9546d73eeee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 34e19025-c4ce-4e19-a4fa-1557d58c2430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 4d149e38-2ace-410f-9cf8-1925ed10bf05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 b9f2cde3-d24c-4d79-9ea5-b35649503ba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 edd5c838-aec5-43a8-b220-b0127ab055d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 d276ff8e-3521-4d6d-813b-ef01e12cdeff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 6636bbb3-8e3c-452e-8cd1-2c1bea23d482)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h552F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h989D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'h552F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #550 a3bec5e5-5f6d-4edc-b6b7-d54c7dedf7e8)");
unit.assert_eq16(16'h989D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #550 02920737-bc12-46ac-a2e9-1c2dd7b6ae52)");
unit.assert_eq16(16'h552F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #550 0a51643f-054b-440b-9744-f660364742b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 9e158a55-bea7-41f5-ae54-65e1cc653c9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 4fd449cc-da31-43ff-9852-f77a740a9114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 83b44bde-e860-4207-b7c7-e9580c105576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 c12cb265-8300-479a-9842-40de877a0d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 5daf33ef-f89a-4033-9838-87456add41d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 88c7904c-d84b-41d7-950d-72f9c3a4c032)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE854;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEEF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'hE854, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #551 efb893bc-fe89-40ac-a7c6-4f48d23c229e)");
unit.assert_eq16(16'hEEF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #551 a085a4cf-4740-44b8-8cb4-6fb61ace9aaf)");
unit.assert_eq16(16'hE854, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #551 0ec192d5-b4fc-4e86-ab63-57450bea31de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 240acfe9-c09d-413a-b393-35b73a880eca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 e097afd7-075e-482a-b9c0-da7c7a983335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 37c80240-4825-42b3-9a22-51926f2dc8ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 66caa068-26a5-412a-ab9e-f88beee1f2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 7ed1b288-62ef-4c96-9a6d-b74bca58f021)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 2af27b90-b2a6-4949-ae46-aaab4400ca36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB98F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1149;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'hBCC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #552 8cad06e4-e840-445d-a29a-b8085aa5f34c)");
unit.assert_eq16(16'hB98F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #552 8463e59a-fe1e-434f-a6a5-a51f2971f3f6)");
unit.assert_eq16(16'hBCC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #552 b265ea5e-f94d-416f-8509-5cc5745597cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 11c2b1e5-7435-4e19-bba5-da0b8c916130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 887b56ff-80f1-4fba-a6b4-90c14ab93058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 25353876-2a33-4757-9c41-56da43f984be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 fb0209fe-d73a-408f-a70a-f7713aab8c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 e6f846fa-4f3c-482c-9b88-107fdcf56761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 86f82195-19e5-4484-ae1e-5930545f9082)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAEA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE5A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA10E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'hAEA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #553 f10e71c8-3a1d-49b8-83ce-00f570b0ceb8)");
unit.assert_eq16(16'hE5A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #553 c79383a6-4330-43af-8984-3fd6160cb318)");
unit.assert_eq16(16'hAEA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #553 fa6ade51-453a-42bf-94a4-b0e2454a60a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 ed982055-8985-4cb3-ae12-5ea7b9c2015c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 b449ca4d-49e6-430b-9bab-277f3af65d59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 9547bad7-d7c1-4ad0-a802-ef2c50fd3759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 60cc417d-06d1-43f7-846e-c3a61daf126c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 08e0363e-8b48-4ab8-8ba1-c332ca08d756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 fc7b6475-f0d3-411a-bf9b-edfd545465b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h47F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC8BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h47F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #554 0c1667ac-e4ab-45e2-8d38-0d3f7ec03277)");
unit.assert_eq16(16'h36DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #554 2a8dce28-e76c-41fc-869d-bfaa89c0df14)");
unit.assert_eq16(16'h47F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #554 658571fa-2b67-47a4-8593-78290618ad8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 75d3344e-3acb-4e85-acc9-fb3a99e360a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 10fd1131-5e4f-4ed8-a399-315c89cfb415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 e6aa7b43-4cb8-4152-974a-aac7cba705dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 7cefc971-f6b5-4ecd-85bc-8869ecbe9562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 93d33a35-af9a-45d1-aded-01ee169f5eb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 681f522e-5edb-47a2-9413-b6c0f6f4a144)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h616A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3503;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h14B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'h616A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #555 11ff8eef-3b51-475c-be0e-26799a1b82b9)");
unit.assert_eq16(16'h3503, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #555 8a7a1f4d-2b89-4308-a415-4c22561d44a3)");
unit.assert_eq16(16'h616A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #555 daef0cd7-b734-4191-be32-0874e38a10ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 ac85a6ec-8e27-4282-b337-d1d413e0ce02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 a9b212fa-83b0-4a8b-9173-fddd5530e4c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 f4f574a0-48b1-4aab-adfa-d8f361e398ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 9f6aa39d-13ea-48c7-bdcd-1cafa398563b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 3afd1c0d-51b8-42a9-9a2b-8a830aae8de4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 b8058d37-2493-4048-8a06-bd095a335bb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3626;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4938;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6B94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'h3626, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #556 4c084b4c-927d-49b0-8a54-7d2e2e86c9e2)");
unit.assert_eq16(16'h4938, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #556 e9fd9df4-d337-47e0-9789-532964411753)");
unit.assert_eq16(16'h3626, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #556 4e4e625e-b781-48fc-a5b4-cf41c954d21a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 16384ee5-3e8c-4ea3-9034-d2368235ec4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 82fcc68b-58d7-4cd8-9336-a2e7d3fa8ccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 05ad9231-324f-46ad-85ae-a988a9ca3825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 d49d8a63-8bf3-4970-991f-fe3145a79e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 b77f67a7-4cea-4030-8bc2-6d185d8f7340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 cd20ecde-012e-444b-b3e8-7750d3f7cc4b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5ED4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h946B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h81AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'h5ED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #557 beea31b4-6321-48c0-b5bd-87ae928fd1c5)");
unit.assert_eq16(16'h946B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #557 7fbec0c4-59f6-44bb-a5bf-6adc9b6f9441)");
unit.assert_eq16(16'h5ED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #557 ee93c497-90c4-4489-b685-6cae841ba7eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 9a34941e-82ad-448d-a64a-fd21a5fc9ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 e5afaabf-92e7-4cd3-ba96-4009fe2b5b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 fc8f313a-4188-43ad-a438-b1fd25fd5d00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 e7b08694-cd73-4b28-a5b9-526607321194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 3b18ce86-14e5-4b64-a648-79614ae480e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 e2455d40-876d-45ed-8526-f71085dab2ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h86DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD95C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC8AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'h86DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #558 4fb217ab-e6a7-44a0-8aa5-b4347dadbeb1)");
unit.assert_eq16(16'hD95C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #558 d4fcfb26-6000-4281-905f-131c44dcc817)");
unit.assert_eq16(16'h86DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #558 63647acb-4ef4-4453-aae4-e23e98cbf47c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 60374b7f-4430-4d7e-bf7c-d622dc45c627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 a05c5782-2aed-4d4a-9475-7c38243f369c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 0247565f-9bd9-4b61-b8e7-c64e1e0dbd80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 8ef58d2f-05e9-493d-9aea-77d15897cc31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 962891c7-31fa-4155-bc48-5098478265f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 ad6e3b72-675f-4dd8-a8fb-34fabe622af8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9687;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4BC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h9687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #559 a22858d0-817c-43ea-b152-f7ab9aca51f8)");
unit.assert_eq16(16'h4BC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #559 d81fd97d-6067-457d-804a-1145fed25272)");
unit.assert_eq16(16'h9687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #559 f64bd383-828d-4f29-90ce-021133ffd59a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 f5ad2cc2-58ba-4fe3-90f9-d978f162d9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 ba46c942-6a3a-4444-befa-02fd822d8cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 d1726b3c-6410-48de-b6ee-84341c4de69e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 298b3e34-723f-4330-9005-52861ab86f06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 81eb851d-1528-4055-9369-b584cc4e1e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 d3b647e4-15cc-4866-9143-5f69c183c3fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE0E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5740;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'hE0E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #560 3e51ed58-fc79-4bbf-8757-b0f9ec1b641f)");
unit.assert_eq16(16'hC3AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #560 5cc2f92f-d0eb-4129-8dec-1d96b4ef36de)");
unit.assert_eq16(16'hE0E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #560 4704505d-3723-4c66-8022-9d5ce6ebe612)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 92cd4314-842a-41d5-aaa4-d76d6ee08ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 b64008b9-c9f6-4230-8af0-897336d02f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 99d0ccee-276b-4d23-9158-c18754662440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 816f7821-8c64-44a4-be76-09bb2e7cd5c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 93a52993-fd79-49ff-b311-9267d2afb2d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 26743186-2088-49b6-a4e5-a24877de06b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8DFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h94F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9C95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'h8DFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #561 a23b927e-f475-469d-8c06-8cc4c8316dfc)");
unit.assert_eq16(16'h94F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #561 c0aa3d8c-a18e-4fc7-8ec7-5ba58cca1d5a)");
unit.assert_eq16(16'h8DFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #561 c8b0cc45-64fb-48fd-83a3-7a2480fbbf35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 07d4eaee-8a65-4a5f-9bff-cf9d0c7d70a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 5f94c786-ae89-4082-9b31-5cccee2365f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 f9232751-172e-4f1f-9557-e29162dabd8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 22528a1b-15c7-4932-bb26-3c5045100a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 bc8d109b-e9e0-497e-b4ab-5fe0955e3696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 7b0c2e2d-5bde-4018-abc9-2de37a4a9ca1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8831;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA753;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'h8831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #562 c638da35-ed07-448b-b247-50a3a5ba9354)");
unit.assert_eq16(16'h3D58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #562 8c15b761-5106-433e-9242-c43af7e0aa31)");
unit.assert_eq16(16'h8831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #562 167abf74-6a69-4e82-a512-debbd957e2f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 562e724f-f197-4eff-ac32-8558fd58778e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 f0e491d1-4ced-4bf8-9634-0558e90a5fad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 b6604223-29d1-4ef9-89f8-e623b85f8fee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 4576b428-fa20-46ea-9bf5-bee2a6f94a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 96329481-77de-41c9-9ee7-fffdd9d98e5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 7ecff5c9-757f-4e80-b3ae-7ba03b429f81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h14C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6288;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC686;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'h14C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #563 c350d5ad-ab0f-44f2-ac1d-2930bac9d4f5)");
unit.assert_eq16(16'h6288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #563 94602883-1a18-4938-b956-edadb5be496f)");
unit.assert_eq16(16'h14C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #563 fa493c99-e8d7-47cc-b376-c9538c28e657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 eb961040-74fc-47ac-bc6f-7e5461f1b742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 901e67c2-82ec-4379-b21f-04785066d44c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 bc1b20b7-b182-4616-a667-bf425161ad89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 3cf63dd1-3ba7-426e-bebb-05b0581399dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 59137fac-8a6d-4fe0-962d-57c7f89602ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 a1988a39-b4b6-4693-81da-d84e6d108b84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC352;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBAD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'hC352, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #564 f4b940af-2b2e-4bb5-b3aa-c591a8762315)");
unit.assert_eq16(16'hFF88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #564 c61d2215-42d1-47f8-8132-41298cb52318)");
unit.assert_eq16(16'hC352, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #564 eb23e18f-bd89-4b5f-a0ce-2c922d6aed19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 c7ff09b5-4270-4df0-b320-8e6c68c8064e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 660bc822-9f78-4f12-b36f-63ca07052294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 5ab27516-5111-4d23-8200-695236a3b900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 1b15a4b1-6bf7-47c3-804a-b55abe160d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 4f55f925-16b1-4786-ae37-bc7c41933693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 8e3bb7b9-070f-4dbc-b81e-bc5a6002a8fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6401;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'h6D61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #565 d3ba0764-6010-4c36-ac07-ba1584868401)");
unit.assert_eq16(16'h68D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #565 64d6ef63-cbb2-441c-ba2a-c61e43d39cc2)");
unit.assert_eq16(16'h6D61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #565 42ede0ca-63b5-4a19-917e-fa890d70833f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 ab7e2737-d5a7-4675-a82c-c82b508a94c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 8bcdfcf2-b7c1-4097-a294-21f3f31c4f31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 7afa8d34-0ea1-4332-a782-13952e2cc364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 fb46c30a-92d0-4e14-b63e-6cb5ad814f91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 7f76fd5c-d6c8-48b7-9bed-2b8c4371afa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 76059c4c-ac0a-4cca-9b86-bba4992bc769)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0336;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h46FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h0336, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #566 b5353127-4e8c-488c-99d9-c0a254cb42b0)");
unit.assert_eq16(16'h2BE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #566 55221961-3849-45ad-bb00-e981935a8389)");
unit.assert_eq16(16'h0336, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #566 5dc921c9-2aee-42b5-9019-ac9a8204f559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 d40c859a-a9d9-454f-8b0f-31da5b58fe5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 86167bde-8713-4d94-a82e-9d9aa58c6800)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 df3547bf-188e-4d45-94f1-6cc281a9cad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 72536b24-44f7-4274-8a42-f3d71e646707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 4a80e4ca-881c-4ea0-ac2d-c337fdf9658b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 84e06783-f210-4810-9cc1-e1df2c7fda6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAED9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA6F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #567 b0cbf128-1f63-4468-929a-92d6da4f653b)");
unit.assert_eq16(16'hAED9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #567 15f94814-50bb-4b2e-8434-6a4c1543866c)");
unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #567 5107442b-5663-4e50-94d4-fde2cf5b4c66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 8b37c935-3dc8-4752-ac68-cec207dbb5a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 24f95036-667b-4200-8b74-57d6a0fa7736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 a319a5f5-798d-4e9b-bd9c-eb4d305047d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 111581af-1bb4-4e84-9706-61cbf530f065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 3b656b33-a745-47f7-a302-fd3adb67ed19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 aa583d83-d233-4d8a-bc55-02efbb8dc13a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1E74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h102F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF056;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h1E74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #568 a36ed02c-b191-4a34-a44a-f95471bd06fe)");
unit.assert_eq16(16'h102F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #568 3d3c02f1-f24c-4304-9750-ee0fc060fdf9)");
unit.assert_eq16(16'h1E74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #568 37d02264-b33b-4472-907d-8703c151deb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 67c72b3e-c359-4b54-b8e9-74b8649449db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 27dba24f-c103-4387-b988-5997026d6741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 8244f028-c4ba-492a-a1ed-30ba13b96cec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 83a3369a-6482-4f10-aaa2-ba49ac9eca05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 85f1c2f6-a6a2-477c-8b32-1edf68c0a839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 75f0edc5-cf0c-48f4-9143-eb55fa322ab0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC510;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h27FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'hC510, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #569 af0ad61e-09ce-40a2-8bc0-4b3e7c7813ea)");
unit.assert_eq16(16'h2DBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #569 5f7e1e05-8cba-4ce9-b49c-5f95b5437194)");
unit.assert_eq16(16'hC510, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #569 6898700a-6281-4399-9ff4-dee6ede87575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 32a5971b-78b1-49e1-8ccd-0c10a506eec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 b8b62e0d-fcdd-4387-a44f-b4675c671a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 41fd3040-5176-4a3b-a476-8b7b4257292b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 e68b9952-5029-4a0a-bbcf-1d20fbc18a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 1b452f41-3419-421b-8cc9-feef67981a68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 78f4bddc-4da1-48ac-ab8e-f9c6b3ee7d8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4AFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h953C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'h45D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #570 ff0ac5a6-8df9-4f64-8d18-5019710560d3)");
unit.assert_eq16(16'h4AFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #570 912134e2-91f6-43ac-a40c-3cad15fc92bb)");
unit.assert_eq16(16'h45D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #570 352757a0-1253-4eec-bd88-ec3bf375355d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 3e1c42e1-497e-4348-ae83-bc21714baa07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 d6a207fa-5896-4e4b-aea9-d331e4f9be03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 96f9ad60-9e9d-4a80-a602-ba3c5baeae1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 9730aa4d-d926-42e5-8076-0fbeffe8edcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 011a9723-584d-4abd-bb23-82426bb90647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 fd3f20c8-953d-4652-9103-7a931f09baa2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA5CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF967;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'hA5CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #571 15511403-3420-4683-b0b1-01a0dab26fa7)");
unit.assert_eq16(16'hB2C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #571 24837dcc-4d88-425c-bb62-17305c1e886c)");
unit.assert_eq16(16'hA5CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #571 ce8daf7c-a41c-4ffa-b3f2-c7624622dae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 b3507808-3915-4b14-8b1b-4b28a301dce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 5938dc5d-26df-49c2-af4f-12ba0def8c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 644d266d-be67-4089-b8eb-3e6f121871b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 3f1f3ebd-d717-4afd-b9d6-040e01f89fdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 a7fe7b3c-bb29-45ae-9cc9-3dc8cbff8b2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 1ebf0404-613a-4aae-9a4f-64acbb61dc73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD127;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h1B14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #572 457fa6d6-3613-4a71-bec7-ee9f9d92daf1)");
unit.assert_eq16(16'hF3E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #572 6bdcf08c-c083-4567-8262-5cf5bdfba574)");
unit.assert_eq16(16'h1B14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #572 3aa69a64-7c71-4d98-9a34-b7e0d5889ba1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 d9ff0fce-0bd9-478b-b911-251b9e975fc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 441737f3-f879-4b27-9a33-31ae12f67a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 e20d1dd8-8e4d-4e7e-b2da-c0ad881a3148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 2bcbf3f2-339b-4d98-b29d-324a3f663517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 b2b9581c-8427-49c0-a203-28e7c7633878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 30067fa9-0783-494e-8d5c-9e113546e6b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h35FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h11E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #573 3adac9b1-ec18-4636-aa28-48dff14650f7)");
unit.assert_eq16(16'h35FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #573 226c3f7d-61ce-4b6a-8aa0-75eabbb39e50)");
unit.assert_eq16(16'h11E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #573 7f1c01e5-18c2-4d42-bd66-a8171aaa93be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 1a00a0e0-0185-400d-8464-e577f359f806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 ca5885f7-7913-429d-9ed3-f2e0430c0357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 41f48d2a-cbdd-4584-b010-438d734bcb4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 c1737387-3907-4f7b-8fb4-684112967b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 c278fe42-e7fe-4f16-8442-267485a8b5f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 8c7cbd6a-a4fc-4676-b967-a1798680c345)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h277A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD68B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'h5E7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #574 43e4fd5c-835c-460c-b691-517f0746c440)");
unit.assert_eq16(16'h277A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #574 1ae75ddc-459c-4b7d-8021-5173e88d5cc1)");
unit.assert_eq16(16'h5E7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #574 a346e53b-7be7-4163-a40a-5ca7ee954809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 10e511bb-d3ed-4c74-8108-a010fc59fd50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 3e41b400-abe4-466f-a9a4-01aab73782e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 82fa50a4-aae9-4742-b61c-07675b7f3cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 a3c5126f-b3b0-4550-9f74-7aaafc269a21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 2df86a5d-7811-49f1-8dc0-bc28e109d3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 b8d41133-21e2-42a4-b5e9-ca2d6f191d07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1177;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA598;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2162;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'h1177, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #575 1e4da492-6676-4c03-b03c-f3770fa865af)");
unit.assert_eq16(16'hA598, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #575 922d852d-eece-4d5d-8e29-7f41b625a4fa)");
unit.assert_eq16(16'h1177, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #575 c10fe4b5-fa51-4971-833c-9f062839cccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 5ee24744-c6f4-4aa5-8346-3d537b978355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 3d15de44-f829-4d3f-af88-f20bf0bd52d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 ed40dd04-dd94-4b0f-8115-5487e974abba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 673ae19c-fbd8-40cc-9e81-ab5e3247ac33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 7425d983-2a06-4c9c-88b1-bd2b7ddff39e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 af7cacad-1b91-435b-82eb-1dbc79ca3676)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC412;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5056;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'hC412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #576 cccd9f77-d21c-4530-9a06-a4c94db5cc77)");
unit.assert_eq16(16'h1D5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #576 09c37ad3-69b4-4705-9e11-ab76f2a48a37)");
unit.assert_eq16(16'hC412, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #576 fb9f2657-1f22-47a1-8dc0-9739a265f4e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 dbe1aa7e-f27a-498b-941f-4440492d2ae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 39c8cfae-a97a-4567-ab52-fc104070ed36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 e3a60894-7e7c-45d7-b369-afb02e203372)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 01bd3e3c-d8e5-4bd2-9500-5937ae9583d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 3f07f3d7-874b-423c-be9e-aa9b0f2913e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 61cc7c34-49c4-4b2f-b25b-1e269ac8215b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC771;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h19DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'h0B19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #577 15b98abc-92c2-49b2-8f75-4e1fd0291021)");
unit.assert_eq16(16'hC771, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #577 a37dfc93-5b4d-40cf-b2ba-6669aef37a14)");
unit.assert_eq16(16'h0B19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #577 49f0c61b-c82d-4f14-8edf-afc13d97987f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 0edadb46-c71e-4de8-898b-91ad26d149fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 dbe436fa-6087-420d-9ac7-04aba8300655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 87b75fc5-de0c-4f02-819d-964c5090d193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 971bebfc-1da8-4a73-90aa-2a5b939a7d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 8de4214e-87e6-43cf-a962-0d4395a8151e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 038b576b-a2be-4d8d-9ad1-99077eab34e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h14F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2780;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'h14F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #578 5d912e71-b2d5-4bb0-a166-efb0d15e3464)");
unit.assert_eq16(16'hFD95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #578 d54111ba-b26b-429f-8889-c43145713f5d)");
unit.assert_eq16(16'h14F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #578 48ab2be8-647e-4a69-bf3c-188099d643b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 9c3b323d-acae-45c7-b2d0-72a4ebc8cf29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 cd92646f-1cba-4ad8-a2d0-75ce49818e6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 d435d82c-ed1a-4ee7-b5d7-a4744d3a7695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 3f2322ed-6485-4949-aaf3-91cf0eb4af1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 371a7f5e-dccd-43b6-b00f-f6219524a685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 3c3947e7-d703-4308-8749-4339ef4f5c4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h40A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'h85A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #579 5e937959-c986-4e2c-98b5-85263152ac55)");
unit.assert_eq16(16'h1C70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #579 e3e29d8d-6869-4fff-9d8c-dc563c5c7c85)");
unit.assert_eq16(16'h85A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #579 9888cb36-0f00-4a3c-8381-30731525fa56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 ca4379d6-a6ce-4577-85bf-36e4f668b075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 f8284a8d-2813-4b2f-a4f7-6fcf482394fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 5ea8e0c3-64c7-4af6-812c-6762e7f840c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 eea85c19-d143-4c7a-aec2-daafb473d3de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 75d70c22-e6b8-4274-ad00-0c7796ec6768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 188d93b6-989b-42e6-8bd9-cc42d4042b69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3973;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h891D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB3BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'h3973, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #580 5976a99b-1fd2-434d-9b5f-d31da57693ec)");
unit.assert_eq16(16'h891D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #580 4c017cba-6aad-4146-9e4a-8ce266347e61)");
unit.assert_eq16(16'h3973, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #580 8e58424f-2e29-4503-8571-1cb7d36bd5f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 364109f0-e284-4aa9-a316-37de8b111be0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 43f82a84-8f64-4177-b7ea-d01b7daae122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 e930539a-1ba8-481b-8b62-6615724af35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 f2a06882-cad7-432f-b2bb-2b5a6ea6116d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 e132a1a4-ac38-440c-adba-a1b709e54438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 f979fcf1-c7b4-48c3-a594-94d86fb126d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h889A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCDE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'h889A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #581 aba92683-0a6b-4015-97d8-fc9791a2d4c7)");
unit.assert_eq16(16'hECB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #581 3be6726f-ce67-4fe5-b563-d21d5a0ee1c0)");
unit.assert_eq16(16'h889A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #581 483bd3d8-2f7d-4e63-95d9-7d5d12014553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 da587162-7d6b-4bba-b201-331dc92e93bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 15032d97-c8bf-4a16-b9aa-b4f98f28b4e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 eaaa0884-f742-49f3-af0a-64b9272fa2c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 ad296dc4-3eb3-4fab-bf88-2f7b796206c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 daa6271a-d8df-42d4-9bd9-37b9126a508a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 0ef9aa69-9867-4fd0-a701-a9edf08041f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA469;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h69E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE874;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'hA469, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #582 5b3e94ad-de13-4d69-9534-1d985214b1ee)");
unit.assert_eq16(16'h69E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #582 596f7a7f-1b82-4d84-aba7-a3801374cb25)");
unit.assert_eq16(16'hA469, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #582 bf489b30-d4b3-477f-916b-4f5786f30ae6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 b38787c9-9dd0-417f-8fe6-b502d46f74bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 809774f3-0e09-483e-8af6-f5fd3b8c945c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 c406b696-7de1-41c7-9305-773a8c89580d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 c014434f-2d6d-43ea-a09e-06e8ad25a9ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 cea88d3f-0a54-493b-a713-f4c9c7f4575f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 78cfee19-20ab-492e-9ab6-72eef9568680)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h788C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'hDE52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #583 21f1916c-f995-4ffe-bf25-dc4e86159c86)");
unit.assert_eq16(16'hA3DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #583 30995850-93d0-4965-983d-19642e5b5ccd)");
unit.assert_eq16(16'hDE52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #583 f754a0cc-ed2e-463f-94af-123618f52bb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 3dbda7bd-c222-45b0-90e2-ba7930ef7af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 59235869-d666-4d48-9fac-a2d79ee3e37d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 fdf836e6-29ef-40c1-9f6e-4b2b9a61d93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 5f352d85-7285-4bdf-86c0-095dd57c9dde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 41c2507c-cac0-4da6-8359-f3814fbe457a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 b82ad145-c5a9-469a-85ac-bde682e65f9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9441;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h28B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h9441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #584 9a930214-0143-4246-a16c-416d0c8f4661)");
unit.assert_eq16(16'h28B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #584 63d300ca-efb6-41cb-81d1-e34703708339)");
unit.assert_eq16(16'h9441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #584 babd1d2d-7284-472a-b099-ca7a5a369b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 ee38cb09-ec3f-48d1-83e4-911a832da22c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 c0dd7b97-3891-42d7-91fe-64552e4f3717)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 9bc68ef3-1170-4fbc-b76d-09133fd922ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 9f8f844b-9fab-4889-865c-a539e4225539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 5fcaefd9-9f7d-483e-9151-f786e5166ebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 ca7b32f1-df37-42b2-a8ed-366405ab90c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h59A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h182B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'h4EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #585 af94fcfd-7774-4b13-aa40-bd56a2378427)");
unit.assert_eq16(16'h59A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #585 2cbffab5-1380-49f4-b078-421d511cbc29)");
unit.assert_eq16(16'h4EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #585 06490aea-e4b7-4729-8ef6-fb4f2a50320c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 828972e3-1627-4279-a0cc-a674b67b1520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 5ea7059a-d08a-4863-8b3f-9a61786f7d99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 b9859a2b-217b-479b-81d6-0742cd4f5331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 b7f38d11-30f9-4d0c-96bb-399a3b82c229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 7215f777-d570-4427-bad4-916807d7bb93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 f8830116-523e-4720-821c-f22119743a31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB463;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7240;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6A4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'hB463, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #586 a71f10e2-40ba-4015-93bc-e7d18b06a0c6)");
unit.assert_eq16(16'h7240, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #586 a0888110-4731-409d-9ed3-be5712be1ce3)");
unit.assert_eq16(16'hB463, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #586 184de54c-d892-4c6a-9a04-72ec9fcee15b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 575814d3-c0ae-48a7-baf0-125c4791f8c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 784492f8-00b7-444f-b915-ab630f8ca541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 88f461f0-3584-4094-a794-8954f4851486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 e44e285a-c6e4-43e8-96a9-e09c196b30c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 eca6b8fe-4247-4c3d-8ce7-1ad031076d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 3fb0b7ef-3eb3-4450-9887-7f3be8eaeb1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF404;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h430C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'hF404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #587 f95fb772-8c45-40ee-bf12-27c1bc5fa826)");
unit.assert_eq16(16'h08C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #587 4d90acd5-c10f-4bc6-ba58-ca2b710b9c2e)");
unit.assert_eq16(16'hF404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #587 4ea02c6a-5cbe-4ebf-9c40-40899abc40a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 f7afda6c-f156-4307-87e8-d1fa3eb7230c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 e237fcd7-bd5e-42c0-a391-b3e010383d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 6b56e647-83fe-47fe-a186-24f57e38ef09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 409e68fe-84b8-4e42-878c-f7d67e451626)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 97c35105-2853-42e2-b065-12db3ac2c351)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 33ca4666-5cfe-45cd-b8ff-0c4a0fbab8e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9716;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2684;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'h9716, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #588 af8a5bc3-af0f-4d4c-9adb-2bdaed0fd979)");
unit.assert_eq16(16'h0E57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #588 85d5b635-d451-42ec-9294-4c05b6b7dd37)");
unit.assert_eq16(16'h9716, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #588 abf46672-5b23-4db4-b74a-09286c28674f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 1c17ac80-116e-4aaa-86f6-ae7602afa0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 ca9f2a6f-df76-46f4-a0da-c2562f9d0d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 0d77349b-775b-4036-8df6-b0385efb53c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 b7db6255-77f3-4dfb-a5f6-0990d39b78b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 61766d39-2cfc-4d52-a6b6-a62ac778b896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 627da58c-df46-45a6-a256-1957f5a1bf2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD4C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9B87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'hD4C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #589 cc8f27be-b94a-4060-9c88-e09aa36dbdbd)");
unit.assert_eq16(16'h3B0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #589 94801ec0-2df0-409c-8ae4-ae35084c8def)");
unit.assert_eq16(16'hD4C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #589 b129cfab-e46d-4681-b50a-36eef4152a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 bd64dc7a-98b1-491b-99fe-220edba35960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 ccadeacf-f687-4a8d-a6a6-17aba4dd915d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 e5d89032-4bbc-4e75-9ad1-91fb41cefbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 c4deec85-6246-4cf2-ad0c-7737350b81bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 8cb8fc48-d44e-4c02-a559-3025819b3004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 9f004105-9c9c-4e9e-a6c9-6f33e12f96e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA079;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3FB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'hA079, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #590 1813275c-e834-4386-9252-232cec9daa99)");
unit.assert_eq16(16'h78C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #590 07dc76e4-75ff-4948-92e2-d037313c78d7)");
unit.assert_eq16(16'hA079, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #590 211c1b9d-43d1-4b01-86cb-5875945de47c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 e56e52bf-a3b9-44ac-9ce6-fb017e32d886)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 21b72f87-2ca8-485c-8d82-ccfe99272d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 b4c9d226-2b73-416c-b77b-9688a8e60c92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 d6d274bb-182f-4f3c-b241-b0dbb1bac47a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 063da837-3043-485e-b5da-31e60bba3b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 5d4136cf-5b0e-42f9-857a-4364facfdedb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6459;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h81AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'h6459, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #591 bb9b2314-6cca-4b03-9a34-4fc635a34649)");
unit.assert_eq16(16'h81AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #591 0cabc28b-578d-4c60-942c-5f28e74a2015)");
unit.assert_eq16(16'h6459, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #591 4e308629-ec54-41b0-8987-2fc7aae1962e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 94ee22f8-f187-4ad2-85b3-f2d0a7f77ee0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 5f3fe618-3cce-4ec6-96a1-97d51824bc76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 311fed48-e5dc-4b53-90be-408ddfec7fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 5f5a48d5-9930-4167-9467-2b95cbdf68ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 421e2217-df38-43b9-b478-54d8c15c413a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 3403bce3-24fe-48bd-bdb5-5c5d2a3056af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3660;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBFF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4DF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'h3660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #592 9b2d9e3c-07df-4ab7-bad5-d5b9814c9241)");
unit.assert_eq16(16'hBFF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #592 418d044e-fc8e-48d3-a391-43a61a0d3b41)");
unit.assert_eq16(16'h3660, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #592 7ffd1b3c-05a3-46fb-b756-c5ed8071dadf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 a168e4d5-8fa9-478a-a9d6-4382b3515f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 66965c13-49cb-4576-ad7c-ed3831fb95c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 8cf7a5b1-0e0d-43e6-ad1f-7914346f72f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 9d2c92e6-af07-48b7-b482-bd2d4c57f6bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 903348c6-86d2-4f50-9060-97015ebe84cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 bc38c3e6-5d60-4550-8d4c-d02e131ae863)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDEA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h419B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'hDEA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #593 dd243b44-4cf7-47d6-8ce7-717fe57eb30b)");
unit.assert_eq16(16'hD2BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #593 4ae6a2a0-090a-4bdf-ba82-e149abb4ecbd)");
unit.assert_eq16(16'hDEA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #593 68c13046-de91-4617-a754-c64a271e8b11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 73b22c20-203b-4b01-80d3-1b7ed99f3da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 0398d317-2eb9-4bd2-bdff-b28cdcaab08a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 d48bade7-62f5-467e-967a-796c64925268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 66bdf745-4be3-4f9a-9b0c-a25bdb1f4408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 2af51ed1-b843-4744-bc0c-e4396ef40d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 76b5a0ed-4837-4b12-93a6-dd41a38f952e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #594 4c7aea83-8e7d-44f7-b173-a2e2cfa6e67c)");
unit.assert_eq16(16'h6EBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #594 92cadf72-e00b-44c0-a430-9c1d5e5320a8)");
unit.assert_eq16(16'h06F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #594 e962e0d2-fd96-4330-9a45-35ca272e593b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 7126a09a-3eff-40c1-adb0-c48f3724f653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 159f0db6-e5e8-4b5d-9f67-8f72fe71de7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 9cc91f28-8ebb-4e36-a246-c8585628360e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 6e4c11cb-59f0-4dff-a2bb-097fe6052bc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 3f8d6252-f4b8-4d36-95c5-cb79830e1478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 4e2e955d-797f-4942-9937-10620ccacc19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF504;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1349;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h94C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'hF504, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #595 98d19933-43f6-4411-996f-a37eca06978c)");
unit.assert_eq16(16'h1349, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #595 75c21964-8473-457c-885e-b833927d41bd)");
unit.assert_eq16(16'hF504, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #595 5495ef8b-51d7-4397-8c60-8d52302490ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 7a875fb9-9273-4732-857d-abe7b03defc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 0d4592d3-d075-4bc5-9f11-22b453ad4105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 c9192dae-488e-4f51-8865-b68ff8547b8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 726a8b7b-01d1-4744-9848-b33c862449b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 fea93472-2a28-42f0-8a9f-70d4791a902c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 fc675796-90b1-48a2-91ee-7c354fe41c04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h32A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4A39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h816A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h32A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #596 8a86abe2-6ddb-44cc-b8ba-69f610ea69f3)");
unit.assert_eq16(16'h4A39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #596 d4ce059a-2383-41bc-951f-c759ca5dcbcf)");
unit.assert_eq16(16'h32A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #596 0fc921f3-43ea-48c8-951c-ae18687436ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 60165e65-48ce-47d2-8c3b-a28bebaac765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 fe3b410b-c52d-42ea-a46f-0e0088627942)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 f8f875e5-71ef-4a6f-bd6a-5c5dbcc20824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 dd730444-715e-4d21-90fe-f4b05125156d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 86e11e42-2b38-4a85-ac7a-9bbab89f3e1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 96781dc7-a924-4c8c-8814-fa81c1aeec0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hECD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAEE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'hECD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #597 22cb0530-9904-4a0a-9ca8-5eed64de3b81)");
unit.assert_eq16(16'h7BA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #597 8be88452-6e55-4154-a966-2b40f010a8e7)");
unit.assert_eq16(16'hECD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #597 8fec943d-3378-4801-a881-4a08615de6fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 ca531a9b-1318-4af1-8f97-c775222def91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 191bdaff-1bff-4d59-ace5-87f1a4a6bc30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 af756753-72ed-4060-a4f9-7ffe9ae5854e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 3c310b35-1fba-427b-9499-47a45c13a9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 74a95dec-83b0-44ba-9140-5fdc4638804b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 88b49570-03c7-4e9d-9adf-7259a9658a6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1E8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h694E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6526;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h1E8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #598 fb687156-3f23-4322-a4fe-b1251883f5bc)");
unit.assert_eq16(16'h694E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #598 639e48a1-1737-44ad-9c2c-074cbad1af8d)");
unit.assert_eq16(16'h1E8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #598 39bb06e1-24da-412d-90dd-ff0b408a3f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 d33ae1fc-347b-4769-9914-bc5b788492df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 755f4d26-f896-409c-b6ff-ced7f3df2fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 25b0b3ff-51db-4b33-a4c2-8cdc7842a50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 906f4d9f-a94c-40a6-bde2-2347dd2347b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 396e034e-f884-451b-b882-0df6cda49cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 2a77159e-fbfb-49c7-9a3a-0066afc8a8f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0189;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5E3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h0189, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #599 5a17b59b-e680-49c2-883d-c317527711f8)");
unit.assert_eq16(16'h6E74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #599 4d1896bf-570a-44cf-8ab2-f7cf26a6907c)");
unit.assert_eq16(16'h0189, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #599 e88657d8-0727-4fb2-96d1-2785a0ee7947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 f8db8230-6d17-4964-b0b6-323a44aa137f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 b9cb9d00-60c3-475c-a78c-f18ce4a31d1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 af6f179e-3c13-4f34-af50-858e2ad7c0f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 b2e415a1-de05-4447-bc96-2c6ab8a668de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 2ce1d056-9154-4239-8d1e-09061a221268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 58c1dba7-9d08-48c7-9197-bb8274736fe5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'hEF77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #600 cb435104-ab69-4def-84cb-780c46382737)");
unit.assert_eq16(16'h0B38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #600 4b66166f-6e49-4c57-b122-6a007bc4a411)");
unit.assert_eq16(16'hEF77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #600 8fcc65c0-8c4d-46c8-9fd0-8e970637fa5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 1c962e91-cfd7-4003-bddd-2b6d86c8a712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 564be632-e57b-47a3-83ec-382fd28e5fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 7139c8e5-de21-4935-aa4b-58c1a2f4e7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 93250c6f-3d3e-4ff5-a264-3dea8d645340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 c05e4788-e847-4f31-9225-a2193904614c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 f08d8268-b211-413c-bdd5-10f2897252b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFEC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE3FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE890;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'hFEC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #601 88804da4-a0b7-4375-9e98-af7ad8c4dc88)");
unit.assert_eq16(16'hE3FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #601 5981ad48-5f2e-4fc5-9a6b-b3441e9135ad)");
unit.assert_eq16(16'hFEC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #601 6c7a5714-fd9e-4497-b24b-9871e36dd535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 47618dfa-c32f-4029-86e6-86656378633b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 e0ac2eae-d3f4-4a71-ad42-3c5a0734d6f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 12f33283-7a44-4cbc-b51b-7fa7c30da182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 4ed9a0a6-c9a0-432a-a35b-32f223a6e7a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 1b7b802e-db9d-45fe-bea5-99cdee4c7ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 3a5839de-ae6d-4084-99b8-a63f25917d9c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5464;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA53E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'h06FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #602 7672836a-a356-4289-8928-37a5c53a4d54)");
unit.assert_eq16(16'h5464, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #602 979e8811-4c1e-49ea-8813-7935280ac546)");
unit.assert_eq16(16'h06FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #602 65ba9f78-5ec4-4c6e-8448-221cfc586f0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 0f0ac560-5ab8-474f-b86c-f076a73082b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 e693bdd1-73f8-410d-93e6-afb1a70ea826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 946b0135-5d27-4a06-ad51-4913702da5de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 9ef243c9-7ea6-4756-aee6-ceeeb5eef3ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 f3fe2ce5-5c85-4098-88f0-0ae186ba0738)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 da6a20a6-08ba-46eb-818a-02417f08b77f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9E0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB30F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB44A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'h9E0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #603 98dabd3e-ddff-4de2-bd3e-9496414642b0)");
unit.assert_eq16(16'hB30F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #603 25306e46-15d3-461b-9822-486470b02cec)");
unit.assert_eq16(16'h9E0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #603 3ab275f3-d908-4105-b4e1-e3fca762fb05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 c4a971c9-fafb-48ca-9c28-6cdfe7ac7452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 08c63434-bfbd-4597-a3f8-5b55559bd30c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 52781f70-40e6-4afb-a766-eb8fb9ee69e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 8727a022-5a3c-4951-ab5a-0d5d4dbc3338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 99140d72-225c-490b-b392-8a528a551342)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 1637a945-2187-468b-9a80-806eee903c1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF00B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4318;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6C66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'hF00B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #604 3731b457-be57-4f07-8df6-5e71bccd02c4)");
unit.assert_eq16(16'h4318, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #604 bfec12c5-60ab-4634-a12b-ddda64fe2795)");
unit.assert_eq16(16'hF00B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #604 521ac723-2ea2-4d15-9f99-af86d8da0c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 0c424d34-956f-4fa2-9d58-032362183eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 646714dc-56b7-448f-865c-d6ed1e827366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 5ead2069-4441-4685-a2a6-d3ecdf1a3f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 f8fcb9de-95a7-41df-af54-09c70757c599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 2af1752d-6baf-4cfe-8aef-97295c646d8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 b423c800-3b3d-41bc-8a72-60bce55c36ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD47D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3DD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'hD47D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #605 6a04e781-99da-4d46-b26f-5a859d310190)");
unit.assert_eq16(16'h3DD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #605 b3a34123-215d-4bac-8f1a-8302e9abb3e3)");
unit.assert_eq16(16'hD47D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #605 6cdac2dd-1bee-4931-827a-da0589e3e7d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 bca2c49e-3ce7-4431-857b-e32a1f8f343d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 72f0022b-1c5f-4744-b7e0-b5a9c2a9274b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 41222518-6640-44d9-91d9-bf635a87c170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 dcb712ab-02aa-4482-96cd-cab4475675c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 f4ff62f9-ae33-4e51-ab6e-a031b1aa0061)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 328f99d3-0584-485d-953a-bf7a8db56f53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h504A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3322;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h504A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #606 a37ee944-197f-4a49-8e41-e5ee395b3bcc)");
unit.assert_eq16(16'h42BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #606 d418ca63-c945-4519-9fd3-ed7a01894c9e)");
unit.assert_eq16(16'h504A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #606 de388764-5f85-4881-943c-41069e49700e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 3c025931-1991-45b8-a4e9-f8ebf3d2c5a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 db5a52db-d4bd-40df-9540-3872ea3b6074)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 04e29081-7376-47e5-b702-b8213ccd1f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 2b22c8d6-8ed4-4302-978c-487a58abb831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 1051bb9c-cb13-4770-ad91-7a0ec4310294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 ac2438a1-24b3-4baf-be94-3b48fce51d8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5647;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1629;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4299;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'h5647, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #607 c38e5997-0ff3-4aa4-a58e-2b0798fb529a)");
unit.assert_eq16(16'h1629, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #607 28b8b7fa-9557-4cce-8a3c-4958b92c4a52)");
unit.assert_eq16(16'h5647, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #607 5913242e-07ec-4c49-b75f-fd5bde11654d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 7625e529-dfb9-4d48-90c6-e275945d4df5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 53cc373c-9cf7-4997-9554-bd910579cab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 722a3894-de47-49ff-9eee-f83d16638f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 d6ed0061-e5bb-4f09-835a-10757bb525aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 87125721-95c0-445b-9987-d02197b04325)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 dbd11cd6-a5f0-494e-9b80-7160f6a53dd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE340;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h88D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1E20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'hE340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #608 ccb7e2a3-3f8a-4231-8edd-a92587e74814)");
unit.assert_eq16(16'h88D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #608 40c62f8c-978a-43e5-bb09-67953d962d4a)");
unit.assert_eq16(16'hE340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #608 18d47ab3-2b75-4f25-9816-25cdefa4da29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 165f9c8f-e4fb-407d-ba60-7f8a3348ee52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 b63efb73-9c34-4a30-8f69-26afe1e01cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 71f101c3-4f8d-4f94-b249-35c140ae4132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 165243fd-a7e2-48ed-a327-85464ff8b29d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 3a259c59-85fc-4bcc-88aa-d6bfb1e01091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 3a245693-dca2-475d-a15d-18f89f536500)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD705;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB0A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'hD705, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #609 e51424b9-e917-4c7b-9dba-390c7e641592)");
unit.assert_eq16(16'hB2BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #609 4fa4e42e-8cf5-4786-8e39-ce3c832c4448)");
unit.assert_eq16(16'hD705, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #609 cd9c421e-67f1-4843-89d5-e7f7f0a48d11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 aeba0b56-6d61-4425-b3c0-475933fd1ed2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 cf51e179-f30e-4893-a6a3-06d7fbcee8ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 d5473a64-9196-4b1d-964b-1ef0a1e92877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 de973a9c-612c-4616-9b35-3ea9048b9c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 3040cec0-1bea-4d3d-b6d4-7f8f016a05d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 8a727739-c3a9-4225-9d22-21f077e97f38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1469;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'h1469, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #610 b2eacfb4-b6f3-45e3-8f84-694b16d5eead)");
unit.assert_eq16(16'h14D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #610 2d302dca-5a44-4538-a40b-ae16e949c885)");
unit.assert_eq16(16'h1469, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #610 8c7b2569-f9ba-4a47-92cb-a0f3129af485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 1c28a475-ed1e-4fe1-8c2a-27a1776613cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 b7c02c06-de3b-418f-9254-e39f9a7f3b8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 259098ce-2abf-40a5-a0c8-72d7aea191e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 20b2e572-d92a-4cdd-8226-dcdd1a9ad563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 9ee86fe3-e406-49d4-b0d7-7d67ec65a674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 ba67d821-e448-4179-a70f-dc1a1aff618c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'hCB25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #611 44596701-b7f6-4858-a8b8-ee7f8d384121)");
unit.assert_eq16(16'hFCA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #611 02e516fc-4a98-4e03-9538-8f193bd4f4f1)");
unit.assert_eq16(16'hCB25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #611 9e450f09-68ef-4a2d-91e0-f7383994a366)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 9dc9d94a-8bc0-49f9-8fdd-de6be381ada1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 97c02fb6-d775-483e-b78b-d7d3c34085fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 d92833a1-d590-41cd-8076-89ac1037423f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 0ad28cc8-9e8a-442d-b19a-a647ee86f143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 84627c08-484e-4c61-98d8-5edfe4bbf396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 79d52098-2bcc-4b91-95ea-2e138f3b0074)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBA94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h96FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'hEF30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #612 0c3f2507-49e1-4314-a474-6415fa8d0bb0)");
unit.assert_eq16(16'hBA94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #612 43756acf-6309-4d8e-aac5-0f23837ca228)");
unit.assert_eq16(16'hEF30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #612 fdc7dd5a-a2e0-431b-9fc1-5f8357889374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 fe1ed3fd-4c71-4a91-afb9-9ef580685e75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 061de5a3-b4ae-45b6-95ea-7ad45a6d89ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 ed08ae7c-6ac8-4ea9-80d9-38caf8e65b1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 a7ca21fe-4111-41a4-bb3d-48873c021573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 bea6899d-d5ae-4dcc-aa6c-3d472790459e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 403cb9ab-0c2b-40c1-921f-8d11e0c5ca02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h719C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA149;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB4CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h719C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #613 75c6b81a-f3ad-42e3-961f-9b6886d17de2)");
unit.assert_eq16(16'hA149, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #613 4d1874b6-3246-4061-893e-6b399b2566c5)");
unit.assert_eq16(16'h719C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #613 1ea89fc5-72d2-4a88-b42f-af4d1f08aa6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 3bda1069-3272-4c16-81ce-407527890ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 14fb21fd-522c-49cd-8d36-7719c120f02b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 22ecaba3-4566-4759-a638-d457fb9ad809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 ef523e8c-8c2d-4b5b-896f-ab5c10ae2bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 eb39fb21-67f3-4135-97fc-4fe0b3127890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 a7b5c386-2226-4f25-b6cb-9b5a1575d9c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1AE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF58F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2DBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'h1AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #614 5125c504-1d29-457d-82df-06b54e1339be)");
unit.assert_eq16(16'hF58F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #614 6a44f7d7-af10-40a1-b3c2-4fe6a8df4e04)");
unit.assert_eq16(16'h1AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #614 56ea7a08-bbfd-4659-a68d-44d168850ca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 015336a6-898e-414e-928b-7981a9fca53c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 37869848-7876-4e24-a729-d0cdc77d18b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 8830b6d5-a385-4041-baa8-a4454f486450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 7eb1a8fb-bcf3-4252-b962-688a38d7370c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 3dcdcffc-04c1-4d2e-b30d-94f62055484c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 af151271-1617-48da-b81c-7e90fd6107de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3501;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE182;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6C55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h3501, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #615 246ec129-2dc6-4a21-8fa1-02d60d5856ea)");
unit.assert_eq16(16'hE182, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #615 facc7359-9032-450a-9d38-c90c18e718f7)");
unit.assert_eq16(16'h3501, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #615 02f07eff-074b-455a-b044-63efa68b8d06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 7676e09f-3dd2-456a-996c-29169cfcb4b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 56b40524-c84c-4172-8d9f-a291239f62e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 2f6fbaea-e2c6-4b96-bfa9-59aa6124aab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 7b5a98c2-4d5d-4960-8211-91964373be6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 33ae22f0-195d-461a-8972-0095c0e7ae74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 2471be1d-a032-4a84-9d4b-d21ce8d6ffc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h482D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFBA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'h482D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #616 dfc67d66-de36-4241-82bb-fad20b2e26b4)");
unit.assert_eq16(16'hFFFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #616 43e4ab95-538c-4911-93d1-6465654e872a)");
unit.assert_eq16(16'h482D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #616 32c8742b-7428-4107-9523-cf8b49ae46d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 5452539c-1518-46f7-9f02-2aac35d7253b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 7586e123-0cbe-4123-a751-f6b3c4feab3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 9b23b0c6-bcd2-487b-9659-4d73d450f4b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 129d8496-822f-41fb-807e-60f3e8fce950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 78880623-54c4-4b4d-beb9-0d488bee6228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 8cf35921-1bcc-4bc3-b2f0-7af8b83586e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9289;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2620;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'h9289, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #617 b3ffd744-9de8-42c4-926e-38acbb1ce3df)");
unit.assert_eq16(16'h6359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #617 0937af27-43a8-4157-ad3c-6282f152c458)");
unit.assert_eq16(16'h9289, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #617 ebde1674-9fa2-4979-b1c4-8332d8629673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 cc3312f7-12cf-4414-a7dc-6017e0923974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 170d5dc6-0629-4d79-85ab-54a8b2984198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 b9f3693f-48c3-443b-9c9b-1418aadc1400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 fa455846-d588-42ce-b10e-3956605d32c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 5d9376ef-b0b3-493d-ab5c-61761d8c999f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 72d4ed72-61c3-4685-8653-54fab204e315)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1BF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h25F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9099;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'h1BF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #618 e5108adc-f697-4b92-aeb2-40a42068eb34)");
unit.assert_eq16(16'h25F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #618 7a0891ed-af90-4c05-bc46-ca2143ca7121)");
unit.assert_eq16(16'h1BF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #618 5e1fd590-4b4f-4a95-bf5f-6977bff32601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 3ea8d958-a6da-49cc-96c7-4481fc7ba641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 d78d6040-105a-485a-974f-3c44c5b32ff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 a54bf3d3-aed4-4976-91bf-e9c7bf4a8883)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 4e6453c9-74d1-43fc-82f2-e9e0b8a995a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 83d8f11b-cd46-471c-ae1d-287f5e9c7060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 853a0d64-7f7c-4203-b55e-b18ced752d54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCF77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7788;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'hCF77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #619 029e8049-79cb-4626-b73d-a786def8b641)");
unit.assert_eq16(16'h7788, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #619 35e594d7-ad8b-4fad-aa78-6cad40feb395)");
unit.assert_eq16(16'hCF77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #619 4536ee4d-fbce-4264-a251-6100834eb8c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 0ec7b10a-db0f-4ad8-ba94-4c1c39896e4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 2e5898ce-d011-4bcb-aab5-29b8cba539bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 374a4fe3-d87c-488c-a544-396984aa4afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 009932f2-c555-42e7-bea1-46ec5ff1e0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 04e84508-9cdc-46f4-81ed-0ad79975607a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 0f39bd5b-9e39-4868-bb09-434a7b6c9063)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h21B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC0DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'h21B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #620 9d451809-656b-45c6-b210-97b74caba180)");
unit.assert_eq16(16'h0EC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #620 b9b37adb-6072-4724-92cb-e0fe2b649cf7)");
unit.assert_eq16(16'h21B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #620 561df777-ed7c-487e-917e-0520fb024a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 67ced715-fa80-4acb-9807-0421599b9d7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 3dafcdd2-dbc9-4b71-97bd-deb4633c9370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 c2b14aaa-4185-4ff5-9924-152b038f6a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 6f7ce9ff-b785-4f6e-8af8-b29f983258fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 bf555f27-ec74-4eb7-8d46-5f3926ebecb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 6dcfa623-1007-4ec8-aa2d-6e9f380ca2a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD1BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB253;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFEED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'hD1BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #621 afdffb9d-4fdf-4792-ac5c-5fa12f1843ad)");
unit.assert_eq16(16'hB253, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #621 e77608cc-1c17-4050-9fad-f278c78b7687)");
unit.assert_eq16(16'hD1BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #621 f2da18c7-6911-4cd1-94fc-cd8d53e66d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 21e65913-49d6-4c21-8a77-23b5d23b71f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 f8554af2-b774-40bc-b411-e5eabfb04422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 6920088c-c2ef-408b-95bd-252378dace53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 60c63bf0-a68e-4299-a1ac-4aef1e39e8e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 c5e8083d-2a2f-4772-8652-091b3e67890d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 d343d353-bd3a-44f7-817c-9c3108a3bbaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1319;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDBE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'h1319, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #622 89a8a007-a974-45a8-bffb-a1747261e17a)");
unit.assert_eq16(16'h1E70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #622 83d6f51c-0328-4f58-a9f5-4a6d8a86bffb)");
unit.assert_eq16(16'h1319, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #622 66fb3cdf-5d37-4858-af83-00b063dea7df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 0d08c1f4-7629-465e-9c49-90340210de6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 64fc7d77-274e-4bdc-9c95-2d0f69bcd233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 12f4d14d-199a-496e-9990-c79bad6dd48d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 a2e63b24-ba2a-4164-bdb9-03670b95b56d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 8eed228b-5dd7-4adb-b717-8570702b1d3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 f56300d7-1bdb-44d8-96ed-e2ee5830c6d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD2F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8A25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'hD2F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #623 5bcf834c-42ba-4d9b-9bad-30c3e8dcd835)");
unit.assert_eq16(16'h8A25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #623 3926adac-7132-471e-9fbf-b67f4e05f207)");
unit.assert_eq16(16'hD2F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #623 e2236a90-e6e7-4bb5-92b6-87c372297809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 65404fe4-ff5b-4697-8191-f3b69e3b9e18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 c18a92a7-f0e3-43bf-a785-ea75acb0831a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 ed301a8d-6e41-43b4-b26b-b552bd6738ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 bd3c7d54-f682-4d7c-ac6d-8c7cd1c8a9cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 6d037da6-7f28-46e6-ba08-48d6f8d12ea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 f915d84e-4542-4e49-95ec-40766e05ad41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8BE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2636;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'h8BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #624 a34f92ab-05fb-4138-a4bc-87cda075dfd9)");
unit.assert_eq16(16'h2636, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #624 a79c9372-7b93-4d1a-8a2c-c3e63fd0b11f)");
unit.assert_eq16(16'h8BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #624 8b89459a-e998-4cb4-9563-8c4cfcc8451b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 08402905-ec41-48ea-8839-dd6e195de1a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 7d8f6ad7-8a22-403d-8c22-c4d0e0ce263b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 a6c1238e-f3e4-4d0a-aac7-19822a3458bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 37d60ebd-52c7-455d-8a62-d5b5276a796d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 b2bdc756-0af0-4e06-ac00-adce6b5c618b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 ebd0ccf3-9396-4c16-a8c0-7ba8af61f2e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7090;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0176;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9AAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'h7090, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #625 9c5e085b-4d9b-43f2-81b8-0447dd2ccbb4)");
unit.assert_eq16(16'h0176, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #625 08ab71f1-c906-4a7f-9a57-7f9097b10aeb)");
unit.assert_eq16(16'h7090, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #625 6735d4db-ae79-41d2-8244-c14d8200d5d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 a1171052-d383-4d5b-987e-178b959983e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 b3a12fc9-c4ef-4551-9d92-30010255801c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 030cb3b9-ae9b-4f13-996b-c03cc860e0df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 9d5e9587-80a7-4178-b6cf-17d2a2e5e1d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 1706fb83-9390-42bb-a3c4-14b77a1b2b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 8aa15184-c270-4fbc-92c6-7016b7e25b56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h55E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'h8D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #626 8cb35b66-a17f-4767-811c-9315c7172c99)");
unit.assert_eq16(16'h3E25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #626 d40b12a6-712d-4240-9d42-bfc0207ac1bf)");
unit.assert_eq16(16'h8D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #626 695a087d-2747-4d2c-bfd0-56368e23b453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 c901e2f6-b6bf-43ac-ac43-a25de62a2cb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 a8105eab-c17c-4867-b928-547682bcf596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 11d18703-60e9-436f-be36-974fe1d709c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 1d98f654-a95b-490a-bff7-f9d4e954616f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 fef372bd-9da5-4fbd-959d-a5e4a235996d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 7fddae60-694c-4252-a46e-458e0c7d4058)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9337;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB648;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h40E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'h9337, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #627 841983cf-cc9a-4a79-a14f-543eb14662f5)");
unit.assert_eq16(16'hB648, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #627 94744b83-b09f-493d-bc14-2a1f6c4d85b1)");
unit.assert_eq16(16'h9337, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #627 2f84d5e0-7432-47a7-882e-6d88d53a40ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 35309225-8816-417a-92c4-4c13bad894b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 8cbde1ff-ed29-40fd-8c87-99b544cf3579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 5e44471d-31c9-46f5-96f1-7078a060e995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 82a50608-55de-443c-b997-24642f79731d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 cfa260ed-4b29-4b05-98fb-f0d234d8fef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 9b1cb398-b685-4954-8ad8-7237008dad1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h804A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4BA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCAED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h804A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #628 80e12998-94e6-4ca2-8191-8c428c5c011e)");
unit.assert_eq16(16'h4BA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #628 c9ec718b-760a-4462-89e1-bf106526abe1)");
unit.assert_eq16(16'h804A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #628 13ef20a1-ca15-4c20-8ac4-9befa5f86029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 b3e609d4-6daf-4fee-a725-a46592af0304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 537db86f-21e1-44a9-9104-cb033402b9f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 6aea2299-4bf1-4c58-a7b4-7555d7b6bb4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 e4fc1b55-4683-4287-917a-1cfb62c734c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 39a741bb-715c-42a6-aa43-1f08a0ba3bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 7c6eedbc-788b-4151-aee1-213351ff77ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h46D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8610;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h46D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #629 879012af-9988-44fb-98ed-ef6f3dfe6821)");
unit.assert_eq16(16'h8DF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #629 d2927dc1-699f-482c-83ce-edea6339f48a)");
unit.assert_eq16(16'h46D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #629 fb534221-02fd-4db6-a8cd-f65667fead62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 21208eff-371a-4249-b8e3-70e0d6bdd31a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 2bfed645-57e1-49fd-9251-6b1fea89920f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 1198a9ee-4b3f-4738-8233-c32e3935d590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 031243f9-a829-4440-a455-22bc99107d22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 64f637fb-0435-40be-9e44-207240da2aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 1f16bdcd-a270-4a13-9caa-88d12f584ae8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h8A0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #630 1e655b90-d6c8-46d8-80e5-3797e8eaf64b)");
unit.assert_eq16(16'h4FB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #630 17dcda90-8c9c-47ac-b636-da87b5312de9)");
unit.assert_eq16(16'h8A0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #630 07ca7a84-a2e9-489a-b847-ad3ea5d1a0b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 11925c70-6ef3-4ad9-b0e1-24838577ab2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 5afbf3ad-4a91-465e-9e84-e8261be4d4f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 6ea3ecc3-1dc9-4c0f-b56c-7579b35881a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 2235c8da-54af-453b-8153-76a4bbeb7324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 7f34234e-4f21-4da2-b6ac-e44dec9da940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 8271f3e9-49d0-4030-9043-fc637166abdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD531;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA303;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8644;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'hD531, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #631 bd73c458-da38-463c-ad6e-49b91ce72958)");
unit.assert_eq16(16'hA303, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #631 d6d8c82d-01fe-40ef-a87d-8b21ea55f078)");
unit.assert_eq16(16'hD531, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #631 e1032a0e-0f7a-4150-bc0e-3872e4c3cd14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 000db6d1-f658-442d-a5ed-39b2b51e6158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 aee1a3f4-a7cc-4e26-982d-f5523376a558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 e5e1604f-3532-4486-ad39-d70eb45afa76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 442f03f8-57dc-4662-8636-46c331bd0aa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 7075e761-51ef-4d90-832e-b3c9ed54bc93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 14f2fc0a-9439-4d40-93e7-2d13c30427cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE79B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9D77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'hE79B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #632 77f4f785-34e2-48cc-bb62-8de0e59cffab)");
unit.assert_eq16(16'h50B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #632 a31ae168-5ab1-4e12-b6d9-d65933c6e783)");
unit.assert_eq16(16'hE79B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #632 e50082d6-0cc5-4bd1-8898-e0225cdc6923)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 135dfd98-2a8e-478a-99cb-8978cb8a40f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 96bc3a0a-bcb6-4f99-af64-7f873a50a119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 000d3aa5-eee1-4454-8959-08cbad36c971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 afd1a4b6-10d8-4449-8395-99bdd9e6dc7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 3bddde40-4d9c-4f28-aa19-84ca77c4850a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 2bf6d70a-0b0d-41e3-a9b8-1799990fb6e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1CBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC982;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD7B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'h1CBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #633 91fce2aa-fdb5-440e-94f4-4be12a9ec076)");
unit.assert_eq16(16'hC982, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #633 93e1511f-57bf-449b-8961-6510d3f2a7e6)");
unit.assert_eq16(16'h1CBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #633 e47430a0-3e55-4ba7-89df-ef54299185c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 e76d9699-4f85-42c1-8fcf-08581d421750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 d94a8924-d933-451e-a35b-e62b49be7364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 3d030156-f99e-46f9-af80-a623ac4d55eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 fb2baa49-3617-43cb-a13c-6bcec5113023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 1db14c0f-126b-4a58-9cb6-fd94fe87c811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 d3a6c761-0da5-4564-b8ef-6509cf3684f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEFA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA04F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'hEDE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #634 f382f1bf-9a43-42a2-bf46-d7fe3c5097a0)");
unit.assert_eq16(16'hEFA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #634 ee7733f4-2e00-4b16-819f-c9f88b1901ef)");
unit.assert_eq16(16'hEDE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #634 2926dcd5-341e-4c6e-b0e8-6c30812d08c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 a3910c8a-0a4b-425f-930f-377cb8127e7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 51907a9f-d4aa-4576-bd93-d92eb9f90062)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 6be8271f-0428-437a-b9af-94b7ec2647dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 49cf9466-856f-4b22-bf68-bc55917a97c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 4d2abf53-cd09-447d-b1d4-b6bca80b4cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 fd2129a6-5722-42fd-8650-66cda29e9eb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6EFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC73C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h6EFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #635 51378cf2-32a3-4421-b5f4-eafcdaaf8b00)");
unit.assert_eq16(16'h0BEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #635 6070fad7-ede4-43df-a677-983488ee9c7c)");
unit.assert_eq16(16'h6EFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #635 4f2cd839-961d-4300-9e65-8cf428ebf113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 fc6e90ec-d8e8-4743-956a-98a4e7d16f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 e4d95394-3541-4538-880c-f4e46bc43dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 06437913-633e-4550-95e9-8c252f429a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 811689c6-353c-49aa-99c5-1c12aa23ac5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 65a033e6-b758-40af-bd9f-40b5fc4fdeae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 58740e9b-d4e1-4ffb-9d79-9d7e808a2048)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2DB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7341;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1048;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h2DB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #636 e3b4824f-ee1f-4ca2-96e9-f0600efdcfbd)");
unit.assert_eq16(16'h7341, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #636 3c67cda7-f6dc-4291-aad1-82f831fa941e)");
unit.assert_eq16(16'h2DB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #636 80e66e55-92d2-4471-8a21-6c10e939e63a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 351339f7-d24c-49b8-8c4b-a387bba3fe7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 b866ff8f-d991-45ee-9851-9232a9a67281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 5dabcc67-e193-4c13-925e-1c61c92ba2ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 fcfc87ca-6bd6-4aaa-bd2f-cea1285bbe59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 d0b99aa2-73a2-4dc2-b25f-216447d45841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 8c88f6ca-9b66-4a3a-8aec-46325bd55277)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h144D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA8FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5482;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h144D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #637 de58486a-cef4-4065-9615-f4e6b3b8510f)");
unit.assert_eq16(16'hA8FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #637 6be564e0-9a35-4830-a2b5-02db1530588a)");
unit.assert_eq16(16'h144D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #637 c18899f5-5ff1-4ba7-8301-0e6785fe2f31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 fb6f320c-8321-41f2-ad51-21ed280d6b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 8c081024-512d-4d67-a7a0-ed023bc4dc74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 ef17ec86-32fa-457a-bea2-f091ea630b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 9d3e8cc6-0206-4e77-961e-55510b912334)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 36b51d77-3c47-4bca-a991-aa31783f3305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 baac7f7a-9cf5-42df-8b02-85f75712a87d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF994;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8342;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF2C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'hF994, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #638 30a26cad-db92-4c10-be08-8b4e6715b0cf)");
unit.assert_eq16(16'h8342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #638 879a0946-574b-4469-92f9-56c5b673b933)");
unit.assert_eq16(16'hF994, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #638 57b0dd71-5127-4770-af4b-6e7a032d07bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 f631aeb0-74d1-44a0-a4b6-ba0cb5732d9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 2dedc26f-c890-4fb6-b994-9954d3ffeb54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 5813b928-ef3a-435d-a966-1b19b9aa6a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 40b37aaf-d7b3-4185-833e-35db9a4f6df4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 ed64f40a-52ff-4cb8-b493-f9f0a30f3f6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 7e2e1234-3fc6-4193-8f70-ce50467cadc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h74AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'h06A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #639 09f75f3f-4a46-43d6-b1c0-adcafab2f00a)");
unit.assert_eq16(16'h74AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #639 70b1c1a5-c8b8-4fe5-b151-f9e415452fb2)");
unit.assert_eq16(16'h06A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #639 02ab48ff-72f0-4881-8412-422a15af7973)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 fe548783-801d-412f-a9ae-9f2e86887a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 8efa6b32-eec6-48f4-8c25-72219b0cc5e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 64ece9f2-fe36-421c-9784-a99a3eedf3b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 9a4b961c-6a3c-4962-ab11-3d9349e08e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 c97a8a41-eaf6-4dba-a0d8-2b8962a89b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 53df2dd7-78a6-462e-8d34-782423a419a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5094;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6418;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3BEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'h5094, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #640 a1a02776-3420-4146-93d4-e1604caea685)");
unit.assert_eq16(16'h6418, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #640 436b5fce-4207-44a5-8561-008b0cc9fbbe)");
unit.assert_eq16(16'h5094, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #640 242197c4-99cc-4194-8e41-6911d778b4bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 2ee30a84-49d9-4627-9265-ba6f2fd237c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 f3d7fafa-16f4-48ba-acd0-49a1645bb6eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 c4bd9244-28ab-4422-8048-c78ec49bd8ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 85ef8dd5-004d-48e5-98f6-d9a2e17fc7bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 29a882c0-dbbb-4e5e-adb0-fb27ba3446a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 d153dcdc-ba71-4239-bb7d-753d25f40162)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDFC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h45AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h5F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #641 3a2b6c34-972a-4a4b-83fe-845d19cc5bd2)");
unit.assert_eq16(16'hDFC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #641 27a0f33e-1103-4841-bc24-173d0511a65a)");
unit.assert_eq16(16'h5F8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #641 11bedf59-6863-417a-b7ac-2e7d8748562b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 679822ba-c8f5-4c3f-910e-3c188d950d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 597701c7-886f-414f-8299-fb610e944a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 8e067391-9c58-47de-88c1-b931c1868d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 0dd263e9-42b1-4674-b411-668aa47c2f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 fd339ff1-248d-49e6-a5d8-11e9efcaea16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 4030997f-5a06-4e11-a556-381b7c78ec4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0646;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8D15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'h0646, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #642 6f07a1ec-744d-45a4-9cb8-7cd693cbca97)");
unit.assert_eq16(16'hCC19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #642 190220ec-ba8d-4559-a731-e2cf6b2eec17)");
unit.assert_eq16(16'h0646, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #642 581ba68f-364d-429d-9874-3f2f63fbb16a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 75f01624-8b28-4dc8-a3fe-a6051bb65b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 4b8db2c4-3978-4c15-b084-d1ac9c61827b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 6d0e030e-bc6e-458d-8a04-ad800f930b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 054f7b7a-0b05-4054-8ff3-9e3677ad1e91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 d11922a1-44bc-4863-9c3a-882aa756ac28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 2dc4d6d1-eb3a-4eb9-a44e-86cefa01feca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAAFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'hAAFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #643 07e618bc-8f6f-4207-81ef-4db50a422d27)");
unit.assert_eq16(16'h66D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #643 71b29286-be0a-437f-a0f2-5eb6dc43597c)");
unit.assert_eq16(16'hAAFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #643 1dd0f619-b20d-4d0a-82c4-dd0cd8ef81a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 af39a424-b6d0-42c6-9f6a-d53d4e1c9d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 228f8e83-8dcc-4c82-bf09-0c56bafe1298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 2b097e0a-34e2-4444-9041-e5a023c7fead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 ea243bca-6b1f-4f66-a0a9-06a5cd1e5ac5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 cb522fc8-81c0-4a96-9156-2998c7a8275e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 980b6855-ec01-4b43-874a-f29070f1bc95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD431;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h867B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'hD431, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #644 2e8f0b35-efab-4ccd-987f-431060096d97)");
unit.assert_eq16(16'h6D4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #644 909630d9-5e69-4f79-a411-ee25ce4697e0)");
unit.assert_eq16(16'hD431, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #644 72e73649-65c4-4ec0-81a3-f916e0a7118f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 f4c17e9c-b858-41ed-92d1-0b47c33ebd65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 8298e63a-094e-412c-b742-4728f04cab12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 6f882b7e-2a74-4560-84af-8643613abe0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 1637328a-3169-4997-83a1-4bb052ab07be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 c05f16d2-b091-486f-9a70-fa1100273042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 a1f904ca-1e00-440f-94c7-500deaf62c12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAEA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'hAEA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #645 2fa29db7-aac8-459b-b218-c75a26601dda)");
unit.assert_eq16(16'h2D9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #645 03190b91-af1c-48ec-b00a-18ee162822c8)");
unit.assert_eq16(16'hAEA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #645 8f7d526b-0182-49e9-8dd2-083d77f06ac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 4d77f69e-9976-4f1d-91e6-1319b42668be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 9f9028b5-2834-4cc6-98f5-b183e8107ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 26a11d8f-a67c-4882-bc53-4cbd9f5540e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 e723bd8a-ff99-4a48-a1e6-9a9e5b87cecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 59349fed-0bd5-4460-a327-7b045caf0b92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 b567bbf2-cc16-4cab-a740-fd9871a53248)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF51F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8063;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'h5E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #646 f2b520a5-b001-4b1d-ae8a-dc832eb0a67e)");
unit.assert_eq16(16'hF51F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #646 d4b7c2e0-71b9-4249-a695-672a788a9dcf)");
unit.assert_eq16(16'h5E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #646 c9c5a493-b920-43cc-889c-b12b1b594364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 6ac169be-22fd-4110-b7f4-d0e0b17a06a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 2acb93b5-8509-46d1-83ca-1c01eb41fdd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 0eb4c9ed-2c3b-4358-99c9-41b9d1fef99d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 39ecbd58-8361-4df4-98cb-7a32934e1b5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 704db6cd-f38c-46b2-b251-87e1e49cc631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 9b168bfc-2fd9-4a83-8053-6d6c45c80b1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2FA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h72F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7924;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h2FA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #647 882f50c5-f937-432c-bbfb-a1f4621e20a5)");
unit.assert_eq16(16'h72F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #647 66332185-a29f-475c-966b-30cf92a4a04d)");
unit.assert_eq16(16'h2FA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #647 4e4e1b9b-7e62-4c01-92c6-863b7eb95a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 29242d1c-2a3c-4725-9128-1d49ad7e7b99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 15e39099-b8b2-4fa1-aa86-728606c0ddb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 22230168-6693-4a6d-8081-3aee39d4a6f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 e229e958-b727-4a46-b7ab-bca2f325d549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 9b85303b-30d0-47c4-a959-e96a8dadb416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 efed7b7d-1b03-4892-a381-ad5fc916e26e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2074;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'h4C0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #648 75b73e6c-edfb-4d53-8dc8-820661ef29ec)");
unit.assert_eq16(16'h2074, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #648 cf3ac4f2-afa4-4930-9479-1f2a0e27f98e)");
unit.assert_eq16(16'h4C0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #648 96508a08-8881-4846-9b99-b2f2e292c94d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 dda1a485-7c67-4c92-8f30-2923f1b00826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 3c6b39dd-c22a-40bc-96fe-9976ba083337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 558d59f0-a48b-4ad1-b917-bbe411f19c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 497b24d7-0681-47f3-8f44-35067cf15686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 7e9b64b8-b2a9-42b4-a18c-4c318c195177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 99b72ddd-114a-4644-8aed-81447be07bca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA019;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4388;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'h3B68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #649 ebfde6d0-8c76-4f52-b51f-80fc4cae92c7)");
unit.assert_eq16(16'hA019, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #649 d9711b0d-2db0-4ea4-9d47-e290c51afaa0)");
unit.assert_eq16(16'h3B68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #649 096db077-4f0e-463f-82e1-534e86e4cadb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 11658d9b-1c1c-4fda-aa6f-2cdfa1168abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 aa50b543-e3ac-41b2-acfa-1df5109ed3fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 cd88a775-96ad-4940-b013-d6a28b6ac71c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 ccd9b994-ec4d-4389-954d-19ba15abde57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 5bf8e6ab-04ea-4e4d-bb58-fd5d4ae89845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 205b10c3-8dda-4164-830c-16c4a54b8892)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5513;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2750;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'hAF5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #650 39118238-fa70-499f-b3f2-f8ab88b5da7b)");
unit.assert_eq16(16'h5513, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #650 1b3c18ed-0012-4f5a-8ed7-eb5e40dc6f75)");
unit.assert_eq16(16'hAF5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #650 b23a3480-f077-4cc2-97b9-1df4409ea44f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 3dcd25e3-8067-47a0-9d46-20e53a7164e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 d93674c8-e6ac-4304-8d39-ebc3e30f7e46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 f7233c75-9775-4352-8b58-583e5a897fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 2a2d221f-7a16-4f96-84c7-57da40be5b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 a93e19be-8c53-47d6-81e3-b626b0cd417e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 9cee0193-3796-4239-bf48-317a1277cb23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8616;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDEA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h96FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'h8616, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #651 517995d3-436a-4752-93d7-62dffa825f25)");
unit.assert_eq16(16'hDEA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #651 d697b185-9000-462d-abd9-d327ba1acf63)");
unit.assert_eq16(16'h8616, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #651 2547b762-0056-4159-903d-5a8005bcc344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 45909135-8d30-4690-ae65-3d1a1fa1bfd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 2c032edc-093b-49e7-9fb5-254a952daa82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 343475ec-7dcb-415b-9d87-70da3e147dd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 c3468c13-631e-4493-87be-1970e7ff1714)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 6c089e33-f6af-4c0c-8ee2-43ded134f890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 e4b70aa3-0ff2-40a7-9693-e77a5233bfec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h69D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF14F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'hB7D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #652 192edd0d-8b40-4138-a8be-37d9e18a9b7c)");
unit.assert_eq16(16'h69D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #652 bdfe1c21-2933-462e-9337-5a4bfe0cb7b3)");
unit.assert_eq16(16'hB7D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #652 9bc567f0-54b3-4902-9c2b-3ddada0e51b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 2c671714-16bb-43f2-b7d7-b862e908448a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 004dc984-1b78-4a3f-b031-fa6a7c832024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 7d7e27d4-ce22-419b-bef0-777cd136bad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 d42f7a8b-48e9-4ecf-9c93-fac99198bc30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 df6796c5-fa50-4319-88d4-133c2b9aa662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 8409c8a1-df9d-4f28-8ca6-beef627a6644)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5486;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD08E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'h5486, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #653 02bcc91b-71d3-4d98-8e14-4c4485e943a9)");
unit.assert_eq16(16'hD08E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #653 cdde5aa2-a90c-40d0-9148-155efc11148e)");
unit.assert_eq16(16'h5486, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #653 e4af61a8-d8d5-46a6-8057-35d3cd2df146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 c7092f86-9bf3-42e0-94ee-e1bdc0946859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 21b95ce0-607a-4d8a-ad09-ba1b93c77d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 3ab0fe23-ae62-4269-bb6b-fa55ff8a645c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 40825ba6-6459-41ca-bd93-6e1ebe6bff2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 06fff2e3-060e-4ada-8857-22d3fc7fd5fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 6e6643bf-93a9-46b5-9336-cd93c162a181)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2FAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0805;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'h9F0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #654 769dbd47-a3ee-400d-b4bb-ab2686f8a622)");
unit.assert_eq16(16'h2FAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #654 c04cb778-c1cb-40fc-abf8-5592cb76498b)");
unit.assert_eq16(16'h9F0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #654 27689328-09af-48c5-b971-1356a79d99e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 21a920a7-ac50-4f24-bf79-0fabf24fde4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 3636eb9a-b990-4e9a-a24f-7da5e79e8fba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 97475f5d-9a6e-4bda-adf0-d488ab027c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 de1a015f-01ab-4b0f-8eeb-35588aa0aeb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 714bd61b-1df6-4522-9279-12d986588f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 fcfea668-0f4c-4a6b-a831-0117af14cdab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0678;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h23BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'hBD41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #655 debfd2ef-b30c-4c99-9612-861bf71465a3)");
unit.assert_eq16(16'h0678, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #655 195222ff-88cb-44a6-bc31-2282ccbf3a9b)");
unit.assert_eq16(16'hBD41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #655 84bbbd76-34c0-4c93-9348-29f8681df2ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 d9c7ce34-7179-4fa3-ab28-4111d2b5c333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 54a71e16-ed95-4e80-82e7-40a5d64d7e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 d6c76ce0-ec4b-4a4c-907e-1462347dab54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 9638c6e9-3336-45a4-a523-53950fecfa1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 d9e51423-92e8-43b6-84e3-6ef95c5d6aa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 176fd950-4a5b-412c-9b94-4d79d8d345dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5BB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'hC6C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #656 e5c7603a-5227-4039-b967-3a42cb687a41)");
unit.assert_eq16(16'h8B71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #656 598b5f4d-fbf9-4c58-a974-7ffd90aa1551)");
unit.assert_eq16(16'hC6C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #656 3c50eb70-035a-430a-9b35-c82f1b2b68f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 f8231315-4da7-4507-a55f-28f67825f057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 0f2d3b4c-1f5f-4ab5-b613-d321c0b37d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 bc61de37-29c9-4299-9a43-8701e991bcd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 4c1cf414-632c-4ff9-9075-ede911b171fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 fceedd57-e8b8-45e7-957a-8d9703c7df94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 2a988bd2-8d0c-4419-a83f-54c8770f5c8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB634;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4592;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'hB634, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #657 4e85c7e2-7a8a-448f-9d61-42d08315165c)");
unit.assert_eq16(16'h4592, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #657 2e2eeea3-9606-4734-869e-1bc7455baed0)");
unit.assert_eq16(16'hB634, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #657 1ada9d13-d155-4e3f-a03d-76a436443041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 aed9828f-c087-4cc7-840d-6122cbd27483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 b12e11c0-e045-40af-9ca8-3f4ccc9c347c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 bdc916e5-f8f8-4d79-ab91-64feb17c784f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 b9a0bad8-5f18-41a1-b568-e9777a890ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 5926e86a-c23e-45b0-ba36-6f702fbe2b13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 9894eac3-388c-4c14-ad52-8221ff17dfa5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h609B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA491;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h609B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #658 54b1d8be-9fe4-43f6-bbf0-48ff08a51801)");
unit.assert_eq16(16'hFA7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #658 e0d9a427-ce92-40c6-adc4-ea1b962c682e)");
unit.assert_eq16(16'h609B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #658 b459a828-9c70-486c-afe1-ea588bbd6a46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 6670996a-6b4a-4db6-b8b1-e9f55a5c0f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 9106e501-03f2-42d5-88c9-b105e95f8000)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 7f5ebd25-b8a9-46fb-89ac-b19a5b41eba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 2fb8614e-17e7-47b8-aab0-ff60a64fb764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 88389f97-058d-4343-9312-0c77aa357d48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 eee178d1-88cf-4b76-a3f1-deea698831f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2301;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6855;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7BC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h2301, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #659 bab2d580-aaab-473c-80d2-8cb61d7747ed)");
unit.assert_eq16(16'h6855, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #659 d8b89d8c-0c46-4ee9-8297-ea1d11035046)");
unit.assert_eq16(16'h2301, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #659 a780c2ca-bc42-42be-888e-b4ce5ce27412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 7e3b2824-1add-410c-9a6a-085e7363ef8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 a6ebf81b-0eab-4b4f-a60f-280a4ebf7409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 46f2c79b-957f-4330-870a-d88de7236463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 0e2d346b-fb48-4057-9909-8e4df74fe3e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 474aab70-76fc-4478-b5df-909199e1f7e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 7282fe78-d7f1-4f40-a4ea-ea77599bdbf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3951;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9528;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4147;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'h3951, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #660 7187bfaf-dd4c-4a53-a43a-63c2cd3e54bf)");
unit.assert_eq16(16'h9528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #660 359be84c-7334-4512-b6b9-ccbc0479a787)");
unit.assert_eq16(16'h3951, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #660 d3732d28-9ea4-4db9-a9f6-95fabcb0e9b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 7bc046fc-a9da-42f4-8910-1f82c71dc7e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 53b6e7c6-cc1a-4610-b7f9-d4c8ee0847c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 f93e2ca5-9ea8-4a7d-8eb5-d28a789dc713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 7928c79e-6749-4496-a3cb-231116c080c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 0376f9b1-00d1-4fe9-8566-7a5a49cb0b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 588d3b0a-56db-4e41-a016-8b64dffc171d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC813;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'h2C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #661 27c92773-8809-4c9a-98a8-3482c4a3bf85)");
unit.assert_eq16(16'hEA03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #661 e56d977e-e33d-421d-996a-116122b1bb9e)");
unit.assert_eq16(16'h2C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #661 e452de2c-1e8e-4881-a6b7-903b997b2224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 9d318ea7-85b4-47a4-9cee-6ae0da158778)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 0515a4ce-b97f-4473-86c9-b4158217808b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 a54c0737-da96-4cce-8cf5-e34cb25765f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 0fb2e92c-a587-48cf-8b6d-905c86109e01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 69e9fa98-e045-4ff4-af19-094d505e4e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 4ea69be0-812c-4aac-bc41-ee31dbfbbd1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'hCA90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #662 d50f8d4b-00b6-452e-86f1-9c5fb6635242)");
unit.assert_eq16(16'h6E70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #662 c8793c21-af49-4641-a627-b0f0150cc1ae)");
unit.assert_eq16(16'hCA90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #662 6891f512-6c19-4b07-8b39-6e41e3881793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 307d97e7-09ab-4b01-ae05-0be3f72b2ef8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 f4671325-df35-4ea7-b0a4-3c272cbbad6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 c919a28e-0959-4fba-8b5b-d78a888f23b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 4849bdb4-9555-4c37-9fa1-3a4494e56c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 1ee9f994-f1d8-4d64-91c1-21b1c463e9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 abf843f8-e735-4dc1-b26e-0971872a9af9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF03F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAEEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'hF03F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #663 f724369b-9c61-403f-9fb5-50299a3e97aa)");
unit.assert_eq16(16'hAC3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #663 8cb6c101-d911-47af-abba-5ba6365b21c6)");
unit.assert_eq16(16'hF03F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #663 373ce596-ca9f-4e66-92d5-1aabf9e4e616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 d816d0ee-a49f-4506-b7df-17794e9f5356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 6aaa9f84-bf9e-4418-aa82-8b7a723bf2c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 2daf3b3d-e158-48e0-9951-e5080d63b808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 f4be0e34-7e3e-4165-b2d0-f79f14f7f210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 1eb8a0e3-b029-4004-bb21-2f12dcf814e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 45369027-ff67-40d0-aafd-c384a86fe419)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1246;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCEC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'h7D9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #664 d507473d-53bb-48c2-8ac7-8d7f2603fdf2)");
unit.assert_eq16(16'h1246, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #664 fd047cf5-a0d7-48c9-a69e-166edd609e4e)");
unit.assert_eq16(16'h7D9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #664 99ab6607-0c01-4cb4-8369-7e5fea244e2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 483251e4-20c3-42ce-984e-397f610f6cc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 edf6305f-058f-44f7-a99e-b686fb65e146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 edf2f158-e986-4493-aeaf-39c8c44af58b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 01d36956-a491-4c74-847d-6d7280b912db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 f6e2ae4d-afb2-474f-b658-9d54dff2da7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 353b9e8d-f7d0-4e47-9e07-d13ed2a942b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6DD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAC14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h6DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #665 94d999f1-3759-433c-b8e4-63a888c0466e)");
unit.assert_eq16(16'hDA95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #665 150f7e46-0e1b-4a8a-a79e-6922251245c7)");
unit.assert_eq16(16'h6DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #665 fb9c504c-be7a-4c30-9425-5ce02e837488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 51fdd1db-6ebb-4096-a924-b8d6e068d7ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 17988e6d-76f3-4981-9649-caebc00f29d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 5fe8d4dc-ad3c-4804-a550-cb3f3d019dda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 8c9b6730-1552-4698-be6a-986d7e151fe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 05790b00-6f50-4fd5-8f4e-0d1e90cfad2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 0e0b830c-9322-431d-b1bb-70d70d909a07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0153;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'h0153, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #666 5d49ec33-a916-4e84-8d18-7c0d617e504d)");
unit.assert_eq16(16'h6D82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #666 9fd68cd6-b3df-4d77-a6c0-5a02d119ed49)");
unit.assert_eq16(16'h0153, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #666 09ba24e2-3219-4ad1-9d01-766aaddda9b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 bf76f51c-e44f-413a-9ccd-b900741c8d93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 72dea55f-42a0-4e77-be3a-f146d29c1e2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 563fb739-77f7-49b3-8d14-8df263313165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 862e97d4-0d6d-4b83-98bd-cf40110864fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 7e5a3d06-da76-4902-bed7-185dcb083846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 873713a9-3ae6-4501-b2a4-069fa577740f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h680B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9708;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'h680B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #667 75570347-0212-4884-b727-db4d03a98ee8)");
unit.assert_eq16(16'h9708, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #667 fc5d0a10-2925-435f-a423-0883087a9297)");
unit.assert_eq16(16'h680B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #667 807cd12d-41c4-490b-97a2-16ad1f186b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 87e89653-eb56-4901-8a09-59469f940f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 3ddcc472-24a9-47a4-a7f3-415623b06003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 27e33384-f69f-4b00-88d6-a97792a07ae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 3fd9bd31-b2c5-4857-9491-4827a3950197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 00fee583-1170-4101-9216-235976e23bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 1c9ceec6-699f-4abb-96de-c908ac98e074)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5AA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2CF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h5AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #668 953a1e33-4298-4f2f-8cb8-f84fd30be202)");
unit.assert_eq16(16'h2CF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #668 949948dc-e8c6-4be2-8e58-f5c3a8beec39)");
unit.assert_eq16(16'h5AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #668 2119514a-cf4b-47bf-90b0-401f25cdc84e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 d130e855-02cd-449c-bb9e-07e7f0345ea2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 c4066707-b3ab-481b-8343-3b3cf9c5ca94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 0e48b937-1745-40aa-9772-b3fc20ceb79c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 83e94180-6a04-4608-aa69-60b5d19b8057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 bce824ae-1923-4912-b8b2-6b8d8f2b0b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 8548514f-d36a-4f5c-b367-b7473052341b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA669;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h559D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h2A50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #669 bcd3ebcf-826b-4955-b454-62a029115c9e)");
unit.assert_eq16(16'hA669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #669 b78e9841-c496-4606-8197-daa0535d33e0)");
unit.assert_eq16(16'h2A50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #669 ed760ab7-5fe9-4b0b-bfe4-4bd1b0680191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 21a8f62d-d71b-4541-8e74-82cec2cb7224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 f601d33b-ec53-4fb7-bac8-dccc546ca90f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 dca263f6-5fba-4ea0-a898-42cf8249c6f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 49ac614f-3d1b-4103-a1c4-bee7e4ef2baa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 1872bcf5-24de-4c22-8860-a4838b141c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 b4892ad4-edda-4e3b-a0a6-d692c30e46c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h444E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'h444E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #670 76765aeb-4143-4c25-a3b7-913353efabbc)");
unit.assert_eq16(16'hFE0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #670 125ee117-b292-4424-8bd3-db7e351ef311)");
unit.assert_eq16(16'h444E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #670 7b3c11cc-7e9f-47bb-809a-ee7f50103a81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 e85674d2-3ef8-4ff6-9d12-d92223712988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 ec95320f-c154-4e16-89ad-5ecd5129bf9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 e8ea3eb8-668f-409b-a88a-2f9686d3bf46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 afbdc1a7-9db6-4a74-b15b-303a78b4672b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 15cc8ee0-946b-4f05-a1bf-d29019d9291d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 f8ba7cd1-b291-4c70-9a80-358372a1ab03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'h2BBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #671 06340e89-3ebf-4aa6-af03-0009e7c1fe61)");
unit.assert_eq16(16'h2E36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #671 f4829447-2386-4972-bae7-8853874c95a9)");
unit.assert_eq16(16'h2BBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #671 dc6fff20-6690-4919-a7d6-465fb4f583f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 cac7dd8c-ef19-454f-b72b-55baf4f71519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 dae4b349-92e7-4a71-bbea-1144a0b10a9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 7ec7c954-5d19-4dad-a521-f357f741477e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 ebe7727b-60c4-4f99-9b65-fa3f26eecbf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 d78a8b93-7198-4a74-a2f3-a211d25f35e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 c2654e50-6880-4bf1-bd78-f36192d62157)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0CB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE824;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h62FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h0CB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #672 166fb57b-82a4-47a9-bbed-82338c96e8f2)");
unit.assert_eq16(16'hE824, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #672 fdd6e037-c1be-46cf-901f-179f42127bb6)");
unit.assert_eq16(16'h0CB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #672 1ecd83d3-c51d-4feb-9a41-c04e14fcc352)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 3396dcb2-f16b-49e3-a41b-cb3df39d9bc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 66721da6-3634-42f0-931f-e416d38af3df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 63ac93cc-893c-4a3e-8013-249d0a65e79d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 cd02af9d-4d54-410b-9cc2-7464bba42e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 8028ac4b-f3b5-44e0-aa10-8d1cc9157212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 133bd1b2-9d09-4ac4-b452-e0d33f4a956c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h729C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h472F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'hBF33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #673 df4abdb5-4903-46f4-bd3a-627dcf19c5f3)");
unit.assert_eq16(16'h729C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #673 68d61ca4-d7ca-47c4-9a50-5644f5f1231c)");
unit.assert_eq16(16'hBF33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #673 dd97ea31-d392-4e4f-9935-31768b4692a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 a05b62dc-bd42-4ad5-b62f-da75bd78af94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 d3408c25-a7a3-44fc-86ee-2ad85040225d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 8e2bed57-32eb-49e3-8c8c-4b65e52ee8a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 4c11ade2-2458-4016-8ea7-0cccb4df20a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 cd23fa09-3a69-4096-a502-43e481e96ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 a1e5b1ed-03c6-46b6-bfda-96dc447f70e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC38A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h58DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE4CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'hC38A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #674 ba6794ed-6a09-4ec6-823f-36a33895f120)");
unit.assert_eq16(16'h58DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #674 217cb531-9bc7-4978-91bc-d200c65f17ce)");
unit.assert_eq16(16'hC38A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #674 9e74b733-51ff-4d39-addc-c7ff7d9943db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 8471dc8e-253b-4ab3-ae71-880f67fc31c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 75327704-651b-4d42-ba2a-63f3acedcf41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 9012f1d2-cf1e-4608-a69b-474311c26fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 674dcfc0-e408-4d61-810f-804aea31ab2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 981521f2-726f-463b-b169-82b17a249760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 38570ade-ae85-4b7e-b995-672b2b2de65e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0742;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'h4C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #675 c2516b96-4ab4-4d3c-a1a6-e9fc3aa9991e)");
unit.assert_eq16(16'h0742, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #675 aa63dbdb-080c-46db-8ca5-9546d64e277c)");
unit.assert_eq16(16'h4C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #675 28234d4a-7df2-4716-9529-abb596ed276e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 032c4778-d534-4c9a-be44-3dbd86041179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 d2e03343-3f48-4f4c-bfd0-ade0adefcef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 218dfedc-242e-4634-8314-3a03d2207b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 6f05cf25-2db4-4f5c-a2d4-1a95fb06b709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 0332db02-ccfc-44ba-aecf-55459495e648)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 5058112d-a518-4ffa-9e93-7e591a8f813a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFCCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC30B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'hFCCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #676 a184d9f3-4fef-44c3-8292-6a736d0c0416)");
unit.assert_eq16(16'hC30B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #676 6c8d1753-fa1c-456a-bfea-33033000ca69)");
unit.assert_eq16(16'hFCCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #676 62304b3b-5077-443a-b9d3-88b2f5fe7261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 88852625-70ce-41c5-a15e-99d3a61ede73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 c6e0c82d-b239-4174-9b44-2225507eb8ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 c289e2e9-8718-4898-bb0d-1547d20b596b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 fc1554fe-16f8-4e7d-84ed-fea462fbb6fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 32065abf-213d-4f52-b6c6-1c35cefaf1a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 ed2775f5-6620-4920-b4c5-5f7ddbdc43f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h374C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h726F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h374C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #677 3e3fe5b6-3914-4601-b1cd-9f530f08d3d2)");
unit.assert_eq16(16'hC5E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #677 c303c55c-996d-45f6-bf04-dae1695f56a9)");
unit.assert_eq16(16'h374C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #677 961734a7-2d7d-4758-b108-a6378f4c41e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 79ef437c-6ff2-42d5-be1a-cae23bd706c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 6ab5a654-5b0b-4a8a-adf8-2c7bf56d66d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 e8624997-0bee-426c-8b11-c579b19c86b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 638f3913-a2b4-470f-a53c-50a46d6b25fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 44568df0-e31f-463e-b033-2d7f61874660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 aabaf24b-c33d-49c4-9124-9c805d285a9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEAD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'h3A91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #678 3a37eeec-ee43-4dc3-83a4-c6584168202d)");
unit.assert_eq16(16'hEAD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #678 f3506a66-9c7a-4545-b09a-2126743ec72b)");
unit.assert_eq16(16'h3A91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #678 53cb8708-9d42-48ab-be14-28adae729d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 405ad802-119a-47f9-b70a-3ea5c82a0f43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 a1a18e6c-bd75-41ba-a713-9881bbec3ed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 b5e752c3-2707-4137-a4eb-303c49f9fb31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 63f804c4-7b98-41d3-91e1-50bc89e4fc2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 d98e5b15-2421-46ec-bd25-a6cc5b2894a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 283ce4e4-bc61-43c4-a189-d45a05466c96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h70A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8B04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'h1F3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #679 98d7d146-5954-412b-b21e-e0c3da6e2c99)");
unit.assert_eq16(16'h70A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #679 15586208-cbf9-420a-9a26-c7f41bb17827)");
unit.assert_eq16(16'h1F3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #679 7a901c82-7b84-4ecd-9c13-2b94c289a6bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 fc519e66-b1a0-4c29-a286-14afb322241b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 9a425633-05e6-403e-a539-d574b8df69fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 61a8c544-d0d2-4e87-8102-f17fe6635b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 6bc5b782-be26-4656-b33d-94273ce5d689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 324d4f3b-1c8f-409e-bb0f-4b4b7bd25e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 8a0f900e-e6e6-4493-a671-1079579b5aa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC820;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h0EB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #680 04aa1cd0-cb5c-4d87-aac5-cdcae8ad6006)");
unit.assert_eq16(16'hC820, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #680 062381b9-b6e0-4247-b429-dde01fedbe4d)");
unit.assert_eq16(16'h0EB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #680 2d005849-7d29-470a-bac0-480c7735796d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 ceffc690-4926-4109-b3d7-9e1e62e7d7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 4d562cad-b453-46fe-8f3e-44710608c272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 b033409f-dced-41d3-9893-0cec6412dbe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 17b88d85-0292-46ba-ade6-369e5d55d37e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 28504f31-5c17-48d1-9de1-bc6458f7e0ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 1d1912a1-b647-4bee-aee2-9554a1b19899)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD819;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'h0E83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #681 7616b63e-c93b-4199-bef4-c624990ad660)");
unit.assert_eq16(16'h2F9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #681 bf686454-2c07-4ad6-a8eb-68b358fb68fa)");
unit.assert_eq16(16'h0E83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #681 5b7be3b3-9636-4a86-808a-5425a908d3fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 548a0ff7-cc8b-4cab-9ed5-fe773512c966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 fe2ef674-6297-4ed9-9bbe-80b8467ae52d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 65f0299e-8b17-4b50-92d3-120454008c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 e45d138c-8836-4b82-aaab-178e865eccef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 e0b344cc-461f-4752-9806-a26de8ec47f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 3e0e9c52-b0f4-4709-97b3-cd987c1cb855)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h73B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'h4F4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #682 5c9d69ff-5524-43af-900c-743c89118d41)");
unit.assert_eq16(16'h73B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #682 a126d62b-e51b-4b13-8f7e-def099d9941d)");
unit.assert_eq16(16'h4F4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #682 e89ffac4-8cff-423b-879f-22e13b1f8e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 fe94ada5-be35-4c67-996d-7d64ffe96004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 51f80e3d-f545-4639-a584-a3b7f9805bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 3b51ba19-2e3c-40b1-b73b-f9a25e0567e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 9f2c7096-94e9-490e-bd7c-397b3e6a0e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 6ec300bc-7846-4fb3-bcb8-51138b38f2fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 da6b4194-c166-441d-b825-d5ca4cf5b17a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'h03E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #683 4b2355a5-cd4a-4cb2-ab75-185901716b0c)");
unit.assert_eq16(16'h8DF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #683 b1e651da-7f6f-446d-a2f4-e97794644082)");
unit.assert_eq16(16'h03E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #683 ec1935e8-4f57-494b-8ea6-62ad6dbca8af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 f7fa20bc-1886-49e8-b0b7-c4dbf0648be9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 56b775c3-27d2-434d-99d0-43849927a1fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 d8d1345e-c20a-4cf5-be74-2e0a08c86e80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 fbc16bf8-a29d-4dca-b418-5311c6ee0f1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 74b17c01-1064-4605-9762-d032310eccbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 28d67545-f454-45f7-a57e-b4394f3704f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0734;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5ABB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5723;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'h0734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #684 1bf20764-c468-48a7-9876-5205f5bf2a00)");
unit.assert_eq16(16'h5ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #684 3efb8f59-d718-4ea8-9b65-65424c8aa3af)");
unit.assert_eq16(16'h0734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #684 aee570b4-512c-43a5-bf43-7429cfb87522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 86d1f435-9522-4c0f-8680-4cb6296b3b9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 05fc604d-8c03-441b-9d0e-2db2136b67ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 c2b03465-37da-43bb-a718-85f3f13bd86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 344c448e-605a-4a9d-a541-4b9fdaf1e4ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 14874f4f-ad60-4bd4-9366-f62882eafd82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 6980a9e1-1875-414a-9f69-876e25dd21cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7541;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h305E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'hEB38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #685 78db0444-fbc8-4c43-a223-1b1664171adc)");
unit.assert_eq16(16'h7541, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #685 e3a86d65-c81e-48c8-a40b-31a307229e01)");
unit.assert_eq16(16'hEB38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #685 e2c4472b-25ab-4e99-aa87-9b6cbb4d0499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 1c9fa500-8293-4180-8431-5c34233b4b94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 0cc550c6-b93e-4eed-9dd0-6a90428b2d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 f0bd96d8-cc63-4721-b3a8-a201014cba0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 cc2e82f4-7150-46e4-b208-8a80e8ea4d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 69ebf558-8e8a-4843-9054-847ffabf975a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 571b0df9-1fd5-4e61-8764-18d1e705c5ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h83F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9AB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h83F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #686 78d32120-7634-4def-a80d-c65da2979ed9)");
unit.assert_eq16(16'h9AB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #686 2503f73a-fa73-4c7f-9251-b082cb193f48)");
unit.assert_eq16(16'h83F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #686 a6dd7406-49cf-4346-8e32-af895b0225d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 22ba5453-708e-450f-ab81-155b9923c60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 25f216db-2242-46d5-8a65-b43c5423210a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 7abff4e7-09d8-4235-9fe9-ede4882cb316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 163fa430-3578-4f67-832d-1e1fc22d096f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 8aad3d08-3492-4deb-b966-b0b22625a15a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 8b1f09b1-cd76-45e7-b332-93874424ff19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6E55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9946;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h6E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #687 ad768451-f63e-408b-ba4b-4bd21b47343d)");
unit.assert_eq16(16'h9946, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #687 e7a2755b-420e-45fe-a890-b09e48053817)");
unit.assert_eq16(16'h6E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #687 1be4613a-33db-4e2b-8f8d-7653033e3836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 e09fa5da-bbb4-4601-993c-7147aabb2fc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 ef30cc5e-0c96-4a1e-805f-364c6383c0bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 3f246a02-7d13-4c3c-acb2-241a45e02667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 02f1c586-8f8a-4195-8ef3-17556fcbe1f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 ed5b788d-90d5-487a-8b60-5aae849ba7d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 451d206c-aa86-449a-b58d-07ba75841b0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4317;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7188;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'h5B7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #688 a9171707-f757-4587-b946-be84991541f7)");
unit.assert_eq16(16'h4317, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #688 c868c8d9-3874-4e0e-acde-8a3da27b7d3c)");
unit.assert_eq16(16'h5B7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #688 a6899497-7f46-4396-bb3b-7ff345be33cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 f4b609b6-5ef2-4343-93db-6f196d79a495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 86017936-bb4e-4aab-8263-6cbb5338d47c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 ddf57695-dd19-4bbd-87c4-303256728bdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 c225ed96-cb00-4a79-8962-fb27d9540e27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 931f781b-ec44-471a-9615-93ef557a0b2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 520bd300-7a47-4746-b00c-45cc71802878)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6CEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h815E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h6CEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #689 43738db2-0e13-4e73-8424-cb255430ce14)");
unit.assert_eq16(16'h815E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #689 03143a5a-d76a-4514-9921-09ab4adf0b69)");
unit.assert_eq16(16'h6CEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #689 6c4c6326-9d6d-4f25-a9bf-0fbc1e753426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 e44938f2-1724-4215-ad53-c980de6efeae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 10e449b0-919c-4620-bb03-abc595c866e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 011f2ff2-d0e1-447b-a67e-cd0155b32e83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 45fd7ce3-bcb5-49a4-9041-2d5d8fdbf1b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 9dfbb47f-b4f8-4c85-b533-b64acfafe36a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 145d1b73-a187-4a0e-b1df-96062281485d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC01F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7E82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h98B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'hC01F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #690 30989245-bd80-4d92-a227-d9dacf2594cd)");
unit.assert_eq16(16'h7E82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #690 f005c463-8f44-4639-a03e-ffa048c739c3)");
unit.assert_eq16(16'hC01F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #690 dbc1478f-6e36-4ff2-86ba-81b0fec8c57a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 76a1d226-8c9f-48d6-adfd-4e786b7461dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 2b7b84dd-163d-4f38-8dea-84da7e86a4a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 aeba2901-2a5a-4df4-bdc3-dd88d6f39ae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 c125962a-a9a4-44d2-9211-e009dff9aff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 a542c283-bcce-4054-8829-62fd4388b945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 0c8380cb-f538-4e94-806e-3b37ea6cee57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h87F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCEDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'h87F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #691 8eb05b28-f316-4cc8-badb-483538e9c7ab)");
unit.assert_eq16(16'hCEDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #691 205b981d-3b8d-4b83-bd01-e9d42af60391)");
unit.assert_eq16(16'h87F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #691 bc6828f2-3f6e-4048-a30b-78a17b03ed89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 ae5fcc85-e6a0-4a18-9b8f-61972d672cf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 7ccb1909-4bed-4265-aa8c-431a350001cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 1f3a234b-0a31-438a-9471-889cee9a0bff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 8afe4ccd-6ef2-423e-b748-84a3c6403b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 afb6b1cf-0de9-4078-934b-8c15ab7858a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 ad6211b3-4d94-4c16-ab2a-dd75b12bd96f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6687;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB91F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'h78FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #692 81884c15-42bb-41f8-aa7d-f5982aba6743)");
unit.assert_eq16(16'h6687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #692 0d39b5a9-e826-4662-9866-bd586957cf89)");
unit.assert_eq16(16'h78FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #692 9b330a13-4b5a-4d03-b576-03148e0d5b9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 9743140f-3e48-49df-b75c-5923c3f154d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 17fccac0-a969-4e84-8d24-9ed66d669f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 c00cb50e-971c-42b3-992a-0e5df52bdda1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 5f15e8b4-4e13-462d-a8f6-73225f431815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 557f3380-a8ed-41b7-881e-6abe1dafbcf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 f6418d3f-cbcf-4f0b-a5f3-0adc3604ebf3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h939F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h85DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1529;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'h939F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #693 15c63da0-3590-4946-a447-906e8c0cab76)");
unit.assert_eq16(16'h85DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #693 4be2b674-e4b4-4cb5-a1be-ca7848d09bdd)");
unit.assert_eq16(16'h939F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #693 bf53400a-cc8c-4889-87d2-c19d20da069e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 c4b5d56d-54e9-48d6-b678-614b6d3c3f65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 a43ec8ce-3914-476d-a0cf-066c035b93bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 8ee13476-f557-4785-a3d5-e8c0f5ae822c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 7f492a4b-ae95-42f9-990e-feeba21de934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 03c6ce0a-3dff-405f-8577-3df417c38818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 3705ec39-7b5d-4749-8e6e-b52bf3166630)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA5D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h828E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'hA5D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #694 8533ba8e-9cfa-4db5-8f59-eaef2f42379a)");
unit.assert_eq16(16'h00BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #694 c7502d5a-e5af-4bba-a673-8c3f236390e3)");
unit.assert_eq16(16'hA5D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #694 9e070ed2-b2c8-4aeb-bd1c-7f5d801d8646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 86d77fa0-cea8-4da5-8579-3b809c0c2e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 a6350d73-2ed3-4175-940f-11cf34e28fe3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 f6501af9-8ad9-4e80-8fe7-eee74a8b0ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 49a0190d-5107-44b4-aa27-43295cf6e86e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 534ca9be-39c0-48de-9624-3f09d98a25b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 1caff59d-6629-4ddf-be84-163aeef339fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2A28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD8DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'h2A28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #695 6474c94c-92c8-4b4a-826a-fbe3a8071870)");
unit.assert_eq16(16'h0B50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #695 b4d41f1a-47ea-4fd1-b95e-64808518538e)");
unit.assert_eq16(16'h2A28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #695 52274912-ede4-4183-86fa-66e4d3581bd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 cb061096-4095-407b-ac07-1826b74aff1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 2809b998-9f6a-4d72-abd9-a569f092b786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 dd80cee8-9437-4e44-ac99-13c07d19cdb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 dc85ccf7-67f8-4c2a-be6e-ac53b5429eff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 11f9a4bf-ee9e-47d7-9242-4c62387b2f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 90be8ecc-fa1c-4686-8c90-01b5f75caaa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1A7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB4EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC88E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h1A7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #696 36fdb75d-55e7-4f61-9e70-34e3f14808ce)");
unit.assert_eq16(16'hB4EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #696 9de76db8-7d3b-4df0-97d3-6bbbbfb88cd4)");
unit.assert_eq16(16'h1A7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #696 f3e170e1-5a8d-43fa-9478-b6aff193370a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 d61a56b9-e2da-4d63-89b7-349c8dfc32df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 feb6d2ea-c163-4f98-8496-76fe66bdd5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 9716f2e2-f6b9-41a1-be9a-1716663d9048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 7b1d1af5-569e-4624-853c-f1427086ca33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 24409b57-c580-4e36-b550-c3d4b70df171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 70e48853-b97d-45b7-89b9-7f1a936982c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFEF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDAA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAAE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'hFEF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #697 97bac24f-ec86-4fc4-80c8-fe26d75066d6)");
unit.assert_eq16(16'hDAA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #697 9406680e-e4ef-4c02-8d53-b7ae6c99e78c)");
unit.assert_eq16(16'hFEF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #697 0c84900b-25ea-460e-bd87-1a5ff2f2912a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 8dee34e2-bc00-48af-8609-c272c6626e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 c1ab753b-f466-404d-ae98-8c3f6e5b82c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 0753c929-3bec-4c74-b970-50a652bd92d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 bdd4aad8-7785-42e2-a327-ea1356ecaa11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 0ca9d35b-9584-4416-802d-965e4d247284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 d6f000de-72ce-40d4-8e59-d0047119b60f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF2CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6832;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB767;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'hF2CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #698 38e48f3a-b3e9-4a88-b93f-d62688f0eab5)");
unit.assert_eq16(16'h6832, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #698 c1510b3f-cbc7-4740-aad2-800b8a5c0904)");
unit.assert_eq16(16'hF2CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #698 a4971f01-7775-4949-a2f2-f964e9101e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 7f7412dc-c5fa-4f4f-9a86-b4dfeddff092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 2d076b77-3246-45b9-8e44-69a30d1808b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 b0fedd6c-fdb0-4bd1-ad5f-ea9c37e5fe31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 404fc5c0-a628-435d-bcc8-c041a9f5ca83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 ab2db6ac-1241-414b-9b63-5a4019575a06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 37067db1-08df-42a7-acec-189d7da1c5dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC523;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'hE6B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #699 3e0b2296-bc62-477d-90d4-0caf209e6f49)");
unit.assert_eq16(16'h46D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #699 6876fd4f-2444-40f7-9cee-ca7837cf980f)");
unit.assert_eq16(16'hE6B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #699 e001209d-fb83-444c-b700-d6d300203a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 f43f7719-c554-49b6-ac55-138c61791098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 37afa0fa-95ad-41b6-be70-a268b48b23b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 36002fb0-badc-42be-88e9-87137ace2cd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 976a957c-f2d0-40f3-ae1f-3f8193fe400b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 83c8fef0-cf2b-4685-afb6-4e49142eb572)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 8cfc0a9e-1c22-4498-8b5b-619818179877)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2322;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAA75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h2C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #700 36e2de2c-59a1-4407-b45f-b6bc20239e66)");
unit.assert_eq16(16'h2322, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #700 ecf3993b-caab-458e-83b5-8e4145103731)");
unit.assert_eq16(16'h2C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #700 a5933e5e-ace2-4c75-bc16-ec89efe5561f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 09235d95-ae75-4240-8f5a-0f124d6ac4e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 608cfb1d-9f99-45e3-b07e-d63f1dfb05ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 fabe887f-0565-4bb0-9f60-0fe6ec6916de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 8b219593-13c8-4286-b300-3900aee8a9d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 6883ae26-1927-46f1-8751-9367853fa56f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 6ea621e8-652f-4493-8c40-bb07a3c87c0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8358;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h888D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h939C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'h8358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #701 bd7406cc-5f47-4a47-8c19-4b58c638ddeb)");
unit.assert_eq16(16'h888D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #701 c8b2017c-da24-49af-81e4-ddc72f9b7c84)");
unit.assert_eq16(16'h8358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #701 3dabc96e-9264-4b06-af96-879a5fbee642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 c2a2642e-621d-4ccc-8a0e-9784acc4b76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 84b0b25e-c69e-4354-8e1c-b7c457509d04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 ce8587d1-d543-4fa0-861e-6038512723e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 9b544faa-13bf-48ec-b3cd-cadad74b5a91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 44ec56d4-e319-43bf-9c30-381750b2e239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 1ba2cd65-27a9-4213-9b85-c6fb55095143)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2FAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8631;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFA80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'h2FAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #702 0e9661d0-b77d-4c11-959c-b66ea6b15ed2)");
unit.assert_eq16(16'h8631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #702 b39377f2-07d7-4fa8-a7b8-860cb0f7b309)");
unit.assert_eq16(16'h2FAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #702 d8cd48e0-186b-4270-9248-5c72f9c285b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 223f6d56-235c-45e9-998d-81311576470e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 2b093151-336e-475d-a0cf-f4e3c82607a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 713b5abc-a7a5-457e-88ec-586aead9288d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 65e4c110-05eb-4448-a6b7-86c0e44ad653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 7fbc1102-c101-420d-90d8-b569090f204d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 b3f2a220-e271-4a59-901d-a74b29461fc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2986;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h045C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3DE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h2986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #703 c8fc4f78-8f04-4c44-83ef-795b85c02a69)");
unit.assert_eq16(16'h045C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #703 835c44d1-d069-4df7-821f-51b19183a3f7)");
unit.assert_eq16(16'h2986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #703 8708e87b-ecf2-497b-ba17-a1133a18198f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 a0cf10db-bb8f-4bab-ad63-3adfc3f950ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 3ac3155b-6e71-40f4-9dba-95a535fa1d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 563b4de9-2ebe-4742-9cf4-3564d62e64d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 d559acd0-850e-49b4-ab04-8e9bbfbc98a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 9cc6903a-0c58-4500-863b-ec1e12e52c5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 b3727e86-50aa-45a8-986d-1119e5dfc88f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h075E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h518F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h629F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'h075E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #704 65934d3d-9abe-481f-9bc9-5a88cdcd8a22)");
unit.assert_eq16(16'h518F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #704 f7b9268c-3f78-4194-9fcf-3a15623804fb)");
unit.assert_eq16(16'h075E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #704 904cdc61-b1f4-4516-8f74-36fa8173d081)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 0b56f6b4-d7dd-4618-9b32-caaabc1be6bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 1595bddb-6b2d-4561-a4f9-12ff04366ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 b364177c-983c-4f61-9578-a8ac0ce340a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 82fdf170-ab23-4f99-bf82-6226363bbe0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 1bacaff2-6986-4e52-861c-62ed0860a2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 30874969-0d7e-4ae4-aef6-3358e6eee214)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD454;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE2E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h921B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'hD454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #705 0673a48e-e421-4b62-913c-5b61b34c345b)");
unit.assert_eq16(16'hE2E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #705 5c0501f9-f8db-46fa-adb4-70bdf2869e43)");
unit.assert_eq16(16'hD454, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #705 3f9d9de1-6ef4-44c2-99c2-739d3f0defaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 c16b9391-d967-432d-98ec-753cf2899ceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 03dc10ab-bcc9-4761-a538-c62845330765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 09c88b23-2cbf-4b17-bc46-780d07577c22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 94e8cc9a-d4a6-496e-9e98-339cba7e0b50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 fa8c7149-cb1f-4578-858b-a809dc24241a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 d58948ec-72e2-458f-8a89-6f3c5216247d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4528;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4F95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h4528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #706 360be6c6-6b1f-4d30-8395-30821e666a49)");
unit.assert_eq16(16'h4F95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #706 0a3455e9-7458-4c01-b1d5-a389eae9a2eb)");
unit.assert_eq16(16'h4528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #706 c3ef6acf-0e8e-480f-9d13-e6d34b687a2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 f57f95e6-dc82-4c50-bf4e-6c5f74a254c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 ba81ead8-c959-43c2-9766-b2c760fdd0ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 011d287c-f92c-46b9-965b-cd503317f201)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 d5d30094-11c3-4374-9847-d48c9080a50f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 57805fef-9742-48dd-8066-5ebc23f7f2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 d0b4a0a8-0550-49e7-aa59-a7093958c471)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE0C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h939B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD6DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'hE0C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #707 527160e6-3915-49d2-ad8d-790e246693f5)");
unit.assert_eq16(16'h939B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #707 8b9276e2-3abb-492d-b043-b7088a8c77d5)");
unit.assert_eq16(16'hE0C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #707 e7ba5d4a-96ae-4935-b96e-c82d6fb5e473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 641bd5eb-8cf8-49db-842e-534987bcc3e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 eebe1d11-e766-47bf-a390-511aba40c0e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 3e263c97-9110-45c1-b9d5-bfa8263cf224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 a79e020d-d502-442d-a192-e4e9f5e1fb27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 5b2e5cc3-d24b-4358-a864-b45b24470019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 1eecd926-a5f7-42c0-a37d-bc3320373e73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFFC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA029;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'hFFC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #708 387d0e9b-3f61-429a-be1c-3fe70ffd6a09)");
unit.assert_eq16(16'h45BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #708 c961582a-c03a-4277-95ba-c7799de32dcb)");
unit.assert_eq16(16'hFFC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #708 6f820250-762e-447e-8bf4-fd5c2c20f199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 08b28c2d-fa08-4de4-b849-632f9f780df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 f0a1e15d-0e15-42f0-bc3f-e0460e7a06d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 dfe5f641-e316-45ed-8056-07da1104540c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 ea93ef2c-db4c-478e-82be-d767d96d9bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 9f4322a2-38bc-4c99-96d5-8802a51ad2a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 66cc724c-9f43-470e-932f-b6fee6d8b922)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE0AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF848;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h64B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'hE0AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #709 778cbfcc-fd40-4798-93e9-315af0e68154)");
unit.assert_eq16(16'hF848, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #709 953d52ad-ca7a-44af-b72d-c0336190785f)");
unit.assert_eq16(16'hE0AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #709 43d02fe7-d066-47d8-a014-0e1593cbdb70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 52a7361f-6108-4ad0-a6cb-b0f833c39869)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 a997c176-a428-4b8d-aaf2-dd06ab952ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 2076e47e-30b9-4fba-8511-2cea10183fc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 6bc23243-bf0b-4eaf-810d-96f665849422)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 409c7be0-75d7-4fac-ae78-31ab140272a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 400c99ab-afd3-4e0d-9981-1e103ae3b684)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDEDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2A57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h57DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'hDEDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #710 266a0b46-73ed-4d5e-ad56-34d9be33dbb6)");
unit.assert_eq16(16'h2A57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #710 17d8b0d4-4950-4003-b8fe-7b56812b66c1)");
unit.assert_eq16(16'hDEDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #710 63300df4-d056-4464-b442-6b51922091ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 7ab799de-7d72-411a-b9d0-e0f5eba554a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 d5ba0cd8-6457-42ba-8e90-41c8b13ed303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 6990a790-f5ec-4abf-9b98-4ab9de331beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 b7e0c7bc-286a-47fa-86ca-dd7eaf90abf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 9e6d3f08-b683-41b6-81b6-f5e65fa64e9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 a1920e8f-0831-4360-9937-98e373e79f59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h56A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCA79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'h51CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #711 ccac687a-d8f6-47a7-9ec5-3a2a3b2921ab)");
unit.assert_eq16(16'h56A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #711 66ced816-a1b2-4700-aca4-e8c98a4c7a3e)");
unit.assert_eq16(16'h51CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #711 cef4d33c-c56c-46c0-8097-b66a55555363)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 b3f1a5da-cb45-4702-bcfe-cfba8230a8ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 947a6731-29a3-42d9-b78d-3a283c1c4939)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 339d1876-7142-4603-b0dd-1e62723e4f83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 c2261560-e721-4de0-a990-f5db37a93f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 2b017a8c-2a21-4fd5-9111-53eee8d03596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 4bc0fd8f-9235-4e5c-9b22-622afcf6b51e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2395;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEB58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0498;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'h2395, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #712 e9d53347-8d5e-4dd0-9ec3-17a7851c4ff1)");
unit.assert_eq16(16'hEB58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #712 2eea1933-b56a-4da4-9770-769c61f5d9d6)");
unit.assert_eq16(16'h2395, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #712 ecd1fed0-ccab-416a-bcd9-1681ca5b8505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 c2ead202-e6ac-4ffe-82b4-8f6973505b94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 1f90db08-4b9b-478a-89d4-1f672e67cecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 341dbfb8-2473-4398-b3c8-7f2ceedca3b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 a50b4f96-bb86-46f5-9391-70d71afc2622)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 0309826c-d8cd-4e80-8c5a-7ef4c202f69c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 8e11ca3e-901a-40cd-a57b-bc4291b15d49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'hBCC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #713 78bd2258-afa8-44ed-8fd5-2890943c2e58)");
unit.assert_eq16(16'h0CC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #713 c5f12f6d-6f61-4dcf-a662-23f6c0c1034e)");
unit.assert_eq16(16'hBCC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #713 e4041989-e173-4e5c-bfca-f997ca20e6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 ebf3dcfa-5cfb-4f1a-b7f9-5b13d6da714a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 23c50f76-7b42-4b58-9dc6-1b553acc9388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 7935b961-724d-42a2-9123-007ab59fe5f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 8432e40d-510d-45a5-a3b7-f3ab2b58aa91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 5ecac721-590c-4c82-ad4e-36ac769f5222)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 04873a22-45ff-4981-bf3f-e2b33b7447eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h37B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3606;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h37B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #714 32af2fb1-e6dd-4695-84b7-83cf7df97da7)");
unit.assert_eq16(16'h0FDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #714 782404a1-7dae-4784-837e-6138bdbc5afc)");
unit.assert_eq16(16'h37B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #714 d8cb7528-291a-4ac6-bd45-4e036af59d8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 8cebe9d2-8dc1-454c-ba62-6bb8e7b2deab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 561301e2-cc91-428a-a129-7d353ab10e4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 ebdc67b1-d70c-42ae-9c84-e60524e4ed8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 98375a04-b8a4-4060-9bd5-8848159a5063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 5bab3228-e225-4165-80b8-4a70f523f4f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 2664f8e2-17a5-4603-82aa-efa90880132c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h180B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2598;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'h75B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #715 85f800a8-6c7a-4414-a660-f7ef6d198231)");
unit.assert_eq16(16'h180B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #715 550a3efa-5bc7-4f5f-b680-3f2a743ec794)");
unit.assert_eq16(16'h75B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #715 39920c41-e8a1-4d1e-afd7-d85a5f4900ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 9eccba16-e001-4ddd-a4a9-fefaee25b727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 e04e436f-ef7f-466d-ad39-90345dc131d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 50d5d659-f7fe-4583-a51d-a5000080a2b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 554d2919-5b1d-4d94-8613-f73c7d871e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 fe70da74-4124-410b-9249-3036ee266150)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 b21d3c6c-438f-4492-920d-3612ca30d040)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9EB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA63A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h919F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'h9EB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #716 604d7539-9c72-4d84-9818-d16fe98346ed)");
unit.assert_eq16(16'hA63A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #716 c37437f0-8a2f-4542-bfd9-172a389bb62e)");
unit.assert_eq16(16'h9EB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #716 cfd06059-facf-487b-a5cb-bb111fed9634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 8bdbc6df-de5a-4e16-9696-9e1a02af1e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 bb81d97f-f2d8-4dae-9317-ff448710399c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 2601e384-950b-402c-a270-4c071ee99bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 9637f321-d9f1-4b83-8ecb-66787859c113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 b738a992-c200-44e0-8697-d7bb32b8dbb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 59d0e134-6601-4ce8-a3d8-1279b880f0ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7A60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC18C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'h7A60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #717 d7b5f88f-28e0-4d47-93ab-b23f7e080ee3)");
unit.assert_eq16(16'hBD3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #717 3aefa634-641c-4730-bad7-96b7fced0e4e)");
unit.assert_eq16(16'h7A60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #717 7b888e74-6e34-4b7b-8455-eb11f23f43a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 fdeb6ac9-da4f-42f9-b8aa-07c38b823fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 585612ec-c896-4c00-9e98-93684610d32d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 3c613955-aa94-4cff-988f-3b1b2d768d97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 1ecfe871-53e7-4b83-bb96-47cb174bcc88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 c5c2937c-2092-4a56-a3e5-4d0896f89a68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 3b16e59f-83ee-4169-89be-6c7ed11aac07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3A88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h61D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #718 4e75e98c-6bea-40cf-99b6-0dc3a0885403)");
unit.assert_eq16(16'h3A88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #718 cb5e46a3-a8da-4abf-bab8-b1849cc2f508)");
unit.assert_eq16(16'h61D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #718 9188ec65-b84b-4c97-b6a6-46bc85777eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 a1800e12-0a9f-47a0-ab40-c0d1718255b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 f044af79-09ef-4629-97e4-d384757a7a7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 125fbabe-8778-4c81-892f-28d9ec55270d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 820da93e-f24d-415a-9bb1-c90207ff0435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 96284487-a576-47c2-abc6-01880468ae7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 0a3eb621-95b3-4073-8080-cdcee27d9746)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h120A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5415;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h89D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #719 f2379733-83f1-4748-a6fa-a3f29bf00b41)");
unit.assert_eq16(16'h120A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #719 53188369-68b0-4e40-be8e-efa4f33f7fab)");
unit.assert_eq16(16'h89D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #719 534a1488-1845-48f3-b64d-89bc643e23ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 27bd59f9-e07e-4195-8d60-746ebef7da1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 30e0b414-6755-4347-af8d-dabebda087be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 3ded48eb-8fb5-47a1-a4f4-bfe98de59c6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 362a97ff-7d33-4832-85f6-447e22afd550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 2699c2d8-1380-4da0-a3c1-603e1e98cc1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 a89a90c3-6fc1-4bca-b54f-1d850ad13644)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC171;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4F3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC278;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'hC171, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #720 4ae83423-284a-441d-8fcb-17350c1ff504)");
unit.assert_eq16(16'h4F3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #720 0cf842da-1fee-4294-b5c4-a02a7f27a5f4)");
unit.assert_eq16(16'hC171, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #720 ddba826c-a6f4-42a5-ad4e-1e59096d2dba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 57bc76d6-bdf1-4a78-8d36-d8de9aafaf73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 4a37fb4d-a98b-41cc-b351-be42156e4977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 6ea6bdbb-3f4c-4392-beb0-79b38d33d75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 295bd185-301d-4933-bb4d-26b045f7fe89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 d54e00ac-5521-405c-832f-6d85e7a91f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 00bf2fac-eaef-4af9-ae07-a4925909c13a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD94F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB9C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'h2F86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #721 6140731b-1f71-428c-b5fb-3931121f30fa)");
unit.assert_eq16(16'hD94F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #721 c651dcb8-f5e4-4fe0-b716-7ea70b5373c0)");
unit.assert_eq16(16'h2F86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #721 159bb7d8-343b-4548-a20f-1954a51ac03a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 27af7033-3f5a-4ea6-bf34-31c585039119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 10f1ceda-ca21-47e8-8873-39e74b20aa90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 126acb0f-d2c3-4afe-afe0-09d59e034596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 4a5b23cf-27b4-4f18-b1e2-0383a07bc4a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 76ae118d-7ffe-48f0-b4f1-22fbc9a5f947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 55e18f83-8c24-448d-8d43-04b9e399a850)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6564;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD36C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1597;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'h6564, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #722 8b77e5fa-fc5d-4bdf-944b-661b8128bcc3)");
unit.assert_eq16(16'hD36C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #722 6032a795-edb0-470d-b27a-040036f7971b)");
unit.assert_eq16(16'h6564, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #722 94784e20-4972-440f-9b23-9ddffcae7e66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 c887190a-cd4d-47e6-9bd7-034218120ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 cb13e0f4-737d-4658-92f8-e591142cae9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 b60351c4-31c6-4059-99ab-6a0eda56e237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 a247c3e2-d2eb-42e4-87e5-c880248e3cf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 75af3a88-7bd0-4605-add6-ffe06838b490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 b022c1f6-add3-479d-8e38-aec3dc6d7aab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1449;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h28D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'h1449, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #723 20167a12-d882-46c7-b124-7ea6983f13db)");
unit.assert_eq16(16'hFA90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #723 e72bc723-d30d-43bf-bddb-7248b2421100)");
unit.assert_eq16(16'h1449, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #723 c329a5a1-9caa-4320-8e17-15cf78944bd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 5b5d1f78-e7c9-4482-b18c-fa5953f96f4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 91d70e1d-3ebf-4f71-9744-6f741e9b3245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 1ca4f36c-b95f-4bcd-ab0f-fe9d475cd26a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 60abd7b2-32be-4c69-a33d-c617371088ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 225b9646-c201-44d6-aab0-74de63fa8cba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 1f610766-f04a-4466-8c1f-fdb4f29c714e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h817F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h485D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6063;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'h817F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #724 319ece8f-daaa-4b2d-b83e-0907e81b472a)");
unit.assert_eq16(16'h485D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #724 977ad844-749d-4dee-803f-35ca105b9554)");
unit.assert_eq16(16'h817F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #724 a811e19f-8acc-47c9-ba1c-1100567f69bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 9c646541-4cb5-4604-8fb7-cc76c662932f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 b931e878-bc97-44c3-b106-f16296df51fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 f327cb17-397d-404a-b114-cbf87f340acb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 a46d61c4-ce26-4936-bffb-23588ca3a49a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 d0ed5792-6e8c-4d1b-9e38-08823a9c1d2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 c5bb57fe-cff2-4503-818e-6693aea24f67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2426;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA1ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'h2426, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #725 18af3c73-4ffb-475c-aa66-4330fdf68960)");
unit.assert_eq16(16'hA1ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #725 0a4295cd-f418-4b61-8d16-c49743bfd99b)");
unit.assert_eq16(16'h2426, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #725 05910838-728a-4f70-8587-407e077bd766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 9a58e353-8d38-412b-b366-797e2015d3b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 b013bbb6-bfe6-4ded-bd4b-493077f9e165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 bc1df4ea-c1e6-43ad-a0b6-1558c8c6597f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 046a51d6-fcd1-4f97-ae26-dca83dbc73ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 a1565388-98f4-4da1-bb04-405c87ae71e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 3e317431-f56c-4389-8ee1-0bde0877d0e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7FB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1271;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'h7FB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #726 5ae20be7-93c4-47a9-aea0-0afbadf8b27c)");
unit.assert_eq16(16'hE7D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #726 17ee88bd-6cab-4e82-a91b-d79fd90c2643)");
unit.assert_eq16(16'h7FB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #726 2be5e4f3-1613-4935-bcfa-764ab389da97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 23c9bd80-33a7-456c-9f1e-20cd6360af23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 5994ae0a-77f6-4523-92c4-29f61d5818c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 ae4a492f-6011-45cb-a0a2-d10c0f6a3ce7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 75d18715-b897-4123-8abb-a33be45b8ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 8d39b132-fbd4-4a6a-ab55-e1d455873acb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 fc723546-343f-4585-9658-1753bd3bf4ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8310;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB475;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF628;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h8310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #727 5a46b4f7-899a-4ed4-9df8-5fb86aed2988)");
unit.assert_eq16(16'hB475, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #727 e71f346b-f5d6-454d-9309-0334d6b05c85)");
unit.assert_eq16(16'h8310, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #727 9737207e-c803-4478-9306-f1acd060bb25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 eccb0848-1316-4a68-a26d-eab96bfbdc0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 615fd14a-f6f3-4030-8046-e0b7fe74fdc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 6a638303-3470-42f6-915f-4aa5c1965d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 66675535-4146-43ea-a752-ea841d788c05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 60321c3c-f493-4556-a61f-fa805384a029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 c2f7cc10-eabb-4a70-a9fd-adec2c06739a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF193;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA15C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD222;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'hF193, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #728 9d725f78-0c47-41c5-a05c-a061caf98460)");
unit.assert_eq16(16'hA15C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #728 3efc04d8-0743-46ed-86cd-7ece0232455d)");
unit.assert_eq16(16'hF193, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #728 c8b2160a-e7af-4ab9-b57a-2fc3edfcc7f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 3a234592-f5e1-426c-9c02-0e728291f029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 67547581-7882-46df-a295-03c2aefcb5d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 1f4cce5c-c791-46d4-8016-c87ec7d24707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 34d20d3a-fc44-4a78-bc3e-774890156132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 45bbe6f6-f4f6-46c0-9449-ab0ad1edda10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 1b705d59-d9f1-480c-9c1b-5bca3eb3eb99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h715B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD80F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'h715B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #729 f40bb8fa-f2c6-41c2-bfd0-bd8d51f0f361)");
unit.assert_eq16(16'h3E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #729 9163a44c-d88b-418d-a93b-b4d97bd51594)");
unit.assert_eq16(16'h715B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #729 a1f51644-f84d-4703-a724-319b28b09279)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 3412f7c6-302e-46d2-8389-c9bc7c2a2872)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 2d44ad9a-764b-49e9-8786-055dae387482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 8a34cace-31f1-4f84-a241-da6a3a26d49b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 4c086088-7028-49f0-ab29-24057ff6466d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 1abe02d0-4cda-4088-b325-b4db9deb724c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 713bd1b8-a7a1-4ecf-be85-2fe4588531a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6FD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF481;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h6FD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #730 7c48073e-5c3c-4cd9-8079-87db8d4499d0)");
unit.assert_eq16(16'hF481, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #730 415b9fe6-c4e7-49b6-9458-cfe96172e6a0)");
unit.assert_eq16(16'h6FD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #730 c8cc6008-48c1-469d-a803-23fdc40f6cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 80563e1b-e443-4e34-8a48-53bfc5928ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 570893d8-d710-4143-a091-75b41fce5656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 4934efa9-27bd-48f0-90e1-58ca0ee6b457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 45a20e98-9399-4c80-9206-f1f9895b6724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 6b760fb5-b0b0-46ca-9269-f51774d9595c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 2602ff3c-72ef-49b6-bd67-5033eb73646b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4283;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'h4283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #731 6ec88c9b-c7b6-4e55-bd77-2e29a9c607c9)");
unit.assert_eq16(16'hAC1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #731 9d03a534-7ab9-4cb8-b0cd-4e59bc9bcaea)");
unit.assert_eq16(16'h4283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #731 e2b8e60f-7f66-48e6-8e5f-845a4d62aba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 5af37492-2f13-4300-8bac-3e6d820abe80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 98ae26ee-ec08-4130-a9a6-04f5ae0841d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 0b3fd17a-34a3-417a-b9d4-a9b8dfb6b41f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 d6bd2850-3c24-4f4b-bfa0-2b9c3886d3dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 cde891c2-cebf-43fd-8127-3bffe06257d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 1407f88b-687b-4892-af78-b71c9f8f3266)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFDE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE864;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h35B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'hFDE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #732 e3981dfa-adf0-4a5d-b17e-d8c6c2ca5386)");
unit.assert_eq16(16'hE864, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #732 cf64b61b-9667-4724-b056-54e8cd0727b2)");
unit.assert_eq16(16'hFDE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #732 c5824e1c-c2e2-4fbf-88cb-6835e282f026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 3d5205d0-f7b2-48a0-be70-c0799d7df3c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 47c32dac-65fc-48c1-9339-5c233cd05288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 5832c97c-4aa1-4a00-ae0d-934fb60f4edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 59ef72ed-bcb4-4fd0-aeda-ba82b7ada3f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 01bc5ab7-cee4-4823-9d1e-46e5d32f31d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 97ad27c8-67f3-4692-a215-3a47a22cb24d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4A01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE186;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'h5E45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #733 5b92206e-04a5-4913-a50b-677cad34d9f5)");
unit.assert_eq16(16'h4A01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #733 b166844d-46df-4e1b-85ed-c86e11850d9d)");
unit.assert_eq16(16'h5E45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #733 84463f0c-2b71-4e5a-bd4d-634910568b3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 a39b5f8c-f65e-49cc-acad-67d4b5ff5ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 78665245-df20-462e-bfe8-a583202c8f27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 e879bcd1-aac8-479a-92ea-b605b594f239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 ceed1598-8b2c-4e06-8671-5da34330fdd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 8bd0304f-a4a0-4178-b675-e94312ec7fc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 ebe0bc2a-8a29-4b0f-98ec-001618efd6fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE52E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA64D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h575A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'hE52E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #734 d8d5b19e-4aa0-47e9-8eae-94f28281f9d6)");
unit.assert_eq16(16'hA64D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #734 ac87ec3c-effd-497a-9b4b-ced7890762e9)");
unit.assert_eq16(16'hE52E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #734 ef27fef2-24c9-488f-ad88-49c502e36ad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 b4b7a220-8ecd-4ba9-991e-186a60b79ff5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 160c8bd6-ca3b-4a45-9e06-32db99b60620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 f02e1518-3c21-4834-81c1-82c34f85fe99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 ffbb5175-fe4b-4b1f-a6b5-600a018a7bf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 09815080-788c-4ebc-b172-cd86f0195a08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 1f680ad3-689a-436f-99d6-4de72b6a33c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD19F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE2BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h13BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'hD19F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #735 0bd9f71c-904f-4390-9917-3282c7bb4c1b)");
unit.assert_eq16(16'hE2BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #735 281c544e-60db-4fdb-8ac2-36db5de51bbc)");
unit.assert_eq16(16'hD19F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #735 44f3da33-8643-47aa-95ff-ea20ba0e8536)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 548ea23a-ec2b-4d10-9508-4fb493dd5e8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 72018970-1163-4cc8-8df9-1d320bc2a627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 6e2711dd-f5cf-42fb-bc4c-84d2e0beb225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 acba2911-4298-4b08-b79f-f41ddf555590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 702c32a6-d50e-4cf4-b8e5-b59a0ac64cd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 01e99723-b340-4bd9-ad10-6e5d3e11b84d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h681F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9572;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'h681F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #736 c4fc2da8-e6fa-417d-b02c-5cd62845a8ec)");
unit.assert_eq16(16'h9572, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #736 5ffa28d7-588b-4f3e-ac3e-cb2ff3c324ea)");
unit.assert_eq16(16'h681F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #736 8adca7cf-5fc9-446e-963c-4a02fac304e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 d581c484-1c68-4b81-895d-1b150e5208a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 b6151833-9ffd-4f04-93ff-8bdf2ad63e98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 ffd9040e-71f5-417c-8eb0-fc53e10e4726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 638e9d22-1d3d-46c3-bcef-def69725fe5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 20a28638-6e2d-4f29-ac09-374473ba17bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 08f81c15-8552-4902-8852-510907a92b6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9273;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'h9273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #737 8699d331-44ac-411b-8608-8d05e822a4bd)");
unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #737 a533747f-5069-43f8-aea6-3ec794af3c4e)");
unit.assert_eq16(16'h9273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #737 96aa9b03-97f3-435c-ab05-9c70ffc56fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 935d067f-af0b-4e53-8d96-573c7f5d5897)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 ee7d25d4-e2b7-41bf-90ae-e71eae89cc5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 e3d90cd3-6c56-4558-8076-7017654c794b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 258e3bb8-fc78-4a12-8822-8b7878520b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 c83e9b8a-a99f-4fbd-bf11-9a03c47556b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 e79e01f3-2c79-4d06-b7d3-ae0d33efc82c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDBFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4EDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'h71D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #738 60fa2909-9f39-44d1-9696-0df1cc1ddc1b)");
unit.assert_eq16(16'hDBFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #738 443c8679-5ffe-4cb8-9edf-bd136480bbfe)");
unit.assert_eq16(16'h71D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #738 e6acdee6-2c2c-49e6-85da-a7701001fa43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 a21ed0d7-9e14-47a1-b4ff-1a5b1c712d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 6cfa0ce0-ca1c-48ac-a9a3-6244abc71d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 d060c074-fa9a-4ad5-9f9d-994982e4d223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 c78ca6dd-14d2-4d00-84f7-09894623cc09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 8c39122e-82d3-43a6-a42e-f402a057352e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 37dfd6df-01c2-4a61-88a9-ce9983a14b9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h431F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h44F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7013;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'h431F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #739 500c1860-b35f-494f-808e-84c9d45cf6c4)");
unit.assert_eq16(16'h44F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #739 f7586deb-8e5b-4b96-88ef-57c49bff8df6)");
unit.assert_eq16(16'h431F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #739 2a8564ed-aa69-4153-b3f6-3594a55a6f52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 82702fd0-1f4c-4a6c-ac72-b53caacfeefd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 53f9a234-ce7c-435a-a8b0-0f93455b0025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 c0ff0692-65a4-44fe-9078-3695e3f27d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 69632c08-9ae0-4a11-bd6e-f386e9964ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 98ef832f-fe37-48bd-a7d9-ffefc0ea9322)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 89964aea-b4cb-477d-88f2-247adb8cc228)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC93C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4688;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h9D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #740 7fd16aed-dcf4-43b4-a655-176b1c9eebb3)");
unit.assert_eq16(16'hC93C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #740 e7500a63-7267-460f-9102-82c2422095a9)");
unit.assert_eq16(16'h9D2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #740 b27ea4bc-5d1a-47bb-a3c7-b2e1c0f947a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 374224ab-2fc1-4345-ab76-c60d220c0eb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 beec3dde-e48e-4f1c-954a-2a425e823c8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 155ffc95-81fd-44c0-be22-2ad2d9cbbecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 79ee9917-9286-48d4-b695-511a082b3d67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 224bb066-6d13-4462-82ca-999e95694966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 3a84378f-4a4f-45bb-90d6-67de412d44bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2653;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9430;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCF02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'h2653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #741 e5dead2c-24e4-404b-8cba-30d949c69fa5)");
unit.assert_eq16(16'h9430, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #741 ec902fc9-53a1-4791-9b99-0a298bfa7eb0)");
unit.assert_eq16(16'h2653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #741 c45df20f-258a-4785-98cb-e9850183eac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 ebe86ba4-d916-4e37-b4ec-d175c6a6c287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 cf22e12f-e522-4f28-bd9d-41db9fb0bc16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 9ff17983-d313-4226-9c17-7b612d99360a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 29e31388-53c2-4e3a-b6e5-573c03c9bcab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 58f9017d-b92c-4028-94dc-ee6b8e028d2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 c74e5544-3fc3-4cf2-814f-c5d7d2227d84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h66DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2156;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3911;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h66DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #742 664ce19a-785c-4e36-be31-5a4a845dc7de)");
unit.assert_eq16(16'h2156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #742 fc58e560-6dc3-4095-a8b6-9b5e9b396de9)");
unit.assert_eq16(16'h66DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #742 af0a3dd9-2d24-46ed-b747-4fa1185847ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 1755b39a-7110-4aa8-9b3e-71d66ddc41dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 992ba422-5abc-478f-8bb7-804e64b5c952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 039b0b2f-01ba-4f2c-9f17-8e3ade70c8e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 c82891ca-e351-4792-927c-51d1aacb1cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 0644e4c5-9b3d-4ce3-b29e-b23540a2c230)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 ae6d2067-1250-4d7c-8fe5-dcc2f8323952)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8FF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1551;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h8FF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #743 557b7449-44cc-40fa-9ecd-69adab632590)");
unit.assert_eq16(16'h1551, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #743 8dbe2181-510f-480f-a66c-950138659b55)");
unit.assert_eq16(16'h8FF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #743 da3e129d-f20a-4f03-ae0f-987ef67ad4f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 29050a4d-4f10-4a45-8683-a2c48b2826b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 08d3b4ea-875f-4cac-8d7c-6979c1701c47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 0f3dcaeb-fa98-4845-8e5b-30180436cf6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 1a50359b-6545-4e5e-82fe-4ef2e961ff9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 80f3fde4-953d-46dc-bf97-ea8f0af14f17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 956acacf-061f-4c16-a3e9-dcda4d53447a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA975;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCFC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h99C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #744 650731c9-594f-492d-9384-c31e4c7dcca6)");
unit.assert_eq16(16'hA975, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #744 370c6c46-8bc3-49ad-8c13-752276271ec9)");
unit.assert_eq16(16'h99C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #744 448a3aa0-13aa-4013-9a60-89b2c8caba7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 de977ff2-4d9e-477f-9e09-c1ccf789362e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 a134e667-e8d1-4af7-ab58-7fecebfcd790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 6aa53980-c925-4d70-93e1-795b4b6721a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 28215e59-485a-4e33-b44e-eb137e845cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 03b66b0d-2116-456c-918b-73a8ac028628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 8f3043e3-51b2-4751-8365-f702f4576845)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6674;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8F05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA6B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h6674, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #745 a2858e33-dad5-4ce8-a90d-fadec9bc475c)");
unit.assert_eq16(16'h8F05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #745 15a8b3af-53a6-4deb-984b-163aecf04c77)");
unit.assert_eq16(16'h6674, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #745 c8d7aad4-2d9b-4a70-a144-4e7155b0c86b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 8107e266-5a2a-47db-a10d-49e364be9409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 7f90e076-72d1-4ee4-a8f3-99f5240beeb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 a5f0a757-e253-4a82-b1fe-205e2fa6d474)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 956c5df1-73ad-4bbc-aaa0-cc7c85c0477d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 e95dbbe7-1845-4943-b867-9aaf95537fe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 f6cd1aa5-7d80-4c40-83fc-99bf7827e282)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h36CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5015;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'h36CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #746 023a5571-ee97-404d-8ff8-cc6da5a8dc7d)");
unit.assert_eq16(16'h5015, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #746 5f75679c-af06-4738-9fe3-a8372070e187)");
unit.assert_eq16(16'h36CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #746 062164db-dcbe-4d1f-a0f9-27e359a49fc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 32f8c738-5099-4813-9f1b-25b92176e9aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 bfcd679a-934e-45b1-b2f0-3c034a2de8af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 232b8684-f40b-43ab-8ab0-f72d597b63bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 ed9c7aca-99f7-41a5-8804-6f054f6279c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 13a7aee2-1075-4d99-a5df-797aca8c457b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 81e510ce-66a9-4bee-9968-5f5b777d9a1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD6A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'h4EF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #747 6abd740c-4a6b-4625-b766-8610200bf5a2)");
unit.assert_eq16(16'h0D00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #747 b7061067-b03c-4d0b-82cf-1f0cea143fe0)");
unit.assert_eq16(16'h4EF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #747 3e49157d-b45d-47eb-bad2-457dfa94fabd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 57268733-cd42-4950-b0ff-18a5676d678a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 31f933a5-dc2b-4141-a27a-28c6bcd2fc87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 8d83d3c2-9166-49ea-837e-0d4fb3bf1f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 e060ef68-5fea-4856-a297-b2a52a13f647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 4ea73ab8-79d4-47b6-99b9-b0a22a132a7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 df3b9ea2-6cac-4530-a8c9-626554b0f1c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'hAD76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #748 2444010b-3b2e-45c6-80ff-0154e3085b44)");
unit.assert_eq16(16'hFC01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #748 a5643163-b6bd-405e-b25f-f2df3800b320)");
unit.assert_eq16(16'hAD76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #748 e35c2b60-b5c3-45cb-98da-9fcd5ba90100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 88ef4418-0609-485d-b390-f193caf2f501)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 a6d8dd29-8d99-4a8e-9615-b3e382617e07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 3bb1b9fd-77c3-469a-b224-c00280c543c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 a7e23c28-10c7-49a4-bccf-928b1a99439a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 8e2646aa-8084-430d-bd5b-bc9b4a747132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 9b6b8679-5214-4752-8352-52b1645d9ecd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h70BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBEAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'h70BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #749 fd3bbe42-ebd0-4536-a768-dba777edcbd5)");
unit.assert_eq16(16'hBEAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #749 cd9b699e-ffbd-400b-a2ee-cfb45c6ffaca)");
unit.assert_eq16(16'h70BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #749 b816081f-1f84-453d-a7c3-e72644309696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 2560f853-7b6f-40f9-8e12-e97dbfaa5736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 4b248543-ac8f-42aa-8435-ca8cd868ba8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 f37ab826-1a2d-4fe5-b27b-78c095927226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 312e210c-3385-4a88-9434-ef119787533d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 06db11f0-55b3-44b9-aef8-d484378f55a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 d16eeb7d-ee51-49ba-8891-170a0ded6beb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1867;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB68A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'h1867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #750 22a3e9a8-a772-4fa8-af86-0b0a72b84a58)");
unit.assert_eq16(16'h05D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #750 bb65f325-52df-412f-a9a4-4df1892465cc)");
unit.assert_eq16(16'h1867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #750 5d496f0b-12c4-4523-acb2-9cc82425db4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 0c654729-ddab-43b7-b9aa-a6180cf0f309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 8199118f-ee8d-425c-9f0f-9476d8cd831b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 53fb6192-e18c-48c6-a388-8757640784cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 a25ed74d-c0b3-49cc-ba41-ed6f88c1c5c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 d32d3242-4e88-4ed1-911d-f59b3e420a75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 57a3b878-6178-44fd-a480-ebd9b75112dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h81F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEEF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h81F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #751 96b37f2d-eb3f-468c-be1d-50016e6b64eb)");
unit.assert_eq16(16'h2E56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #751 a159856c-4237-4746-b294-b507d1d16ea4)");
unit.assert_eq16(16'h81F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #751 1eb15a65-7d84-4eea-a478-f27bda0a6276)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 85d8aeb4-ffa1-49d9-986e-b9759a2fa761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 7f5f371b-0b6b-46b7-b8f9-4b8274a52f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 100d2097-d6bf-4918-ba26-eea5a946a764)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 cdc130f8-5a39-43e1-ae6d-a64f579d80c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 42598aa9-3b6f-4f3f-8acb-687c1555c2f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 1c165432-5558-4b07-9754-b7c743440bb7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h17A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6B90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'hBA9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #752 856bfed8-a6f8-45a7-9056-1057dccf7048)");
unit.assert_eq16(16'h17A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #752 5bfacad4-de61-43f9-a926-5530fe90536d)");
unit.assert_eq16(16'hBA9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #752 108b1f57-5e8e-4cf4-b1b9-cada0c3ef112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 ff7a8017-746f-4d47-8752-a2702728b3c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 f00dc11d-69c5-4e64-a7b9-e0282903aae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 deaa56c1-b5c0-42e1-b92c-3eea03345e1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 73d41ad8-2e4a-40c8-a9f9-6cec1b856900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 a2349fe3-9cac-4195-8f2a-c85c922cd97c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 1db9e6e6-f98c-4f52-b551-6b4edcae9377)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h70A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD543;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'hE6C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #753 d382d4e2-9007-4b01-86e0-32a5ccced2e9)");
unit.assert_eq16(16'h70A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #753 f8537cec-f148-4092-a3ee-8171eafb6265)");
unit.assert_eq16(16'hE6C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #753 3e393d2d-44f1-4ba6-aac3-7a2f322a1a59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 adf74cd4-3e9c-4827-a4d3-d63309a93d7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 24446da9-5df4-461c-8235-23031608bcbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 9c8c1b76-b777-4a0d-9253-27ec506876f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 22d63a7e-e3c3-424c-ac0c-fb6251a29544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 fb016992-5216-4e2d-a650-a621872de1e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 7901e44c-11dd-44e0-a1a7-a802880de70e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC45D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD579;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4DAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'hC45D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #754 01a2a9a1-b03d-4c0e-a268-ace4218cce3a)");
unit.assert_eq16(16'hD579, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #754 2e94214f-3580-450a-bded-92c09aa167ec)");
unit.assert_eq16(16'hC45D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #754 4ac442b5-053c-4e31-b245-9d28d4cadbf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 819b655d-402e-4d22-a98b-a1b13470b615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 3a6a66d2-2271-427f-8f05-ffc9b9325009)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 3b54d58b-7140-4a9f-9cbb-f6ae5d8e333d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 446200ee-4dd5-4881-83c1-e9e8a94a6a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 96710bbb-bad0-4b11-9d32-4a742e5ec0b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 ea9c4de9-8a78-468e-b929-7a47b075497b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0F44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5470;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'h4CCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #755 519d0d33-4717-4132-8096-881303c56324)");
unit.assert_eq16(16'h0F44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #755 308e3d75-6ece-4544-bc49-2ebf42d3be89)");
unit.assert_eq16(16'h4CCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #755 04af8f0b-7cbd-46b5-bbff-7307f977d969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 fb67c461-0b5b-44d5-af5d-ac5b90aac8df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 43b935de-8dc4-4e32-8161-45c0c2a5b870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 59a6d65a-6c9c-4b46-87ef-fa5899133ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 3cd512eb-43fb-4783-8b11-ab4c2c9e54f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 534fdfca-b205-4bfb-a684-84c72fa21cfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 46ef36bd-3501-4a88-b1f1-87e3c47b10c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7840;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD09E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDA47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h7840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #756 dfd7f8c5-6434-4f22-bd83-303f5368c616)");
unit.assert_eq16(16'hD09E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #756 2dd855c3-590b-433f-8cfa-8614dc91c3ff)");
unit.assert_eq16(16'h7840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #756 e2324dc3-42ed-444d-a3b8-ff58e88d129a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 2a87977d-7ac5-4f49-b8d7-db6be78ff48e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 0545c6e4-3eab-4844-a521-7ba2844c24e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 216c04f9-9022-4d25-be3c-3e086ba1ae18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 d3fd986c-ea47-40b2-b93d-45c8f00f8e59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 8f515fa2-1bc2-4694-8e95-ab3dbd651b73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 2e77306e-00bb-47f7-ac6d-c83cdc1054b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6CB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'h6C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #757 1ab6010c-d4c1-4880-accd-cd5b8608fe0b)");
unit.assert_eq16(16'h1DDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #757 3b4600d5-2d1c-4e90-bc14-b0b19ee110e5)");
unit.assert_eq16(16'h6C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #757 a0ccf8a9-4bb3-4548-98e6-7ab47c8c5d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 b9eac5e3-ff48-4faf-b6ea-f99c387aa762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 c3f7bd5f-9074-4a66-82e5-c36d704e068c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 c4be1556-de09-4555-b455-e7c10bea6ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 f33f9173-d966-4afe-88e6-a6b9d00a991a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 079263c4-7bb4-4982-a656-1429fceb1e77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 f74e69c0-e7a8-4c79-9619-fbfc28a2fd3c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC99A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDBB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF2CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'hC99A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #758 69b706cf-04c0-42e9-a3e7-5d1073133651)");
unit.assert_eq16(16'hDBB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #758 3b11bdbc-4128-4f29-86be-801f189c9bcd)");
unit.assert_eq16(16'hC99A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #758 064e79b0-b96b-466e-89d0-f5f4d68f2041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 b654cba5-de89-4b3b-b662-e02e55054ce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 ccea2251-3148-4c59-8e95-d8ac4f319e4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 f74d9f92-07bc-4493-9546-5d47ad6cabad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 bdde7130-db56-468f-8e52-7904334c2b2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 455e3561-3c15-4d27-97b0-ede2add31be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 fdb3f54e-e8a1-470d-919a-70ee0b4be774)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA514;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA2F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3398;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'hA514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #759 556172e1-bfce-4843-b307-d0dcc3a30a3e)");
unit.assert_eq16(16'hA2F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #759 f0634a9a-05cf-41cb-a70e-891a6d9b7920)");
unit.assert_eq16(16'hA514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #759 6bbc1fbe-19ce-4254-b767-ab6894c285b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 5f932342-d858-4e8b-9116-0f3c297eaacd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 f8c6806a-c3cd-474e-8a29-a05b0d845920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 3ace82c1-8a13-49cf-906b-df5f424edd4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 c10c31d1-8d63-4821-8882-9acabc19ffcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 48c2bf8e-8590-45ef-86dd-8cddd5ed9524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 335b3425-cde5-44fe-82ad-449dbab19655)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA549;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'hA549, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #760 6564b9bc-ed62-47fa-a01f-3686e43ab2b7)");
unit.assert_eq16(16'hFCB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #760 e53d25c0-dc5e-419a-b05b-30a0d5ab23eb)");
unit.assert_eq16(16'hA549, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #760 80ceabdd-b7d8-44ce-b675-32208bde933e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 25098d2d-330e-4727-b8dd-ae1a443b9625)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 5e9f3c81-d10f-4ae7-b7a1-d236d78a17a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 4d27dfad-a042-473d-9eca-c6569224e9de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 16495094-fca4-41d3-a4c2-69cdbe2f7b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 a6ff291a-efba-4c89-91ed-a37c834eddb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 c9ae1f03-4a96-4508-a856-39f0e7d2b006)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6056;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h469E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA6E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'h6056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #761 132f7bce-0a7c-41d0-8b20-7163b61da64e)");
unit.assert_eq16(16'h469E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #761 efc6ca83-721a-4bad-8a85-e4b1a91840e8)");
unit.assert_eq16(16'h6056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #761 a733d02f-e8c6-4731-b870-d081459083dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 70594c0a-002b-49ad-bfe9-df70c90454f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 92ccca9e-74f2-4970-a59d-d05718f4d143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 41da8759-e51c-4bed-992e-27341af393cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 adcddb49-4686-47ef-aef7-22bc453c3698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 36071708-65e4-4e4d-9db3-a30d1323f720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 3baee2a9-38f0-4b6c-9c57-88ad63f8d0d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBC6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4350;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h2D66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #762 0ba13641-bea6-4d69-ab89-e851b0ec054d)");
unit.assert_eq16(16'hBC6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #762 fd983bb8-6db4-46d6-bcc7-4199f1dbd445)");
unit.assert_eq16(16'h2D66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #762 611beead-9f22-4837-bd9d-a93fdb453491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 f9fb3fa8-7a67-44d0-b37b-287444607eff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 6e7ce955-0592-422f-a673-880bc13a66a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 a9f9ea5c-0260-49fb-897c-b1ee125f2998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 924cc07c-2f3a-494b-a240-a247760b71e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 ad142f23-3852-4be6-bf60-3334acc65450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 590abab7-b256-4cf7-b855-8df48b2dde46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCED4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2E61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h518E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'hCED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #763 62764c57-e73a-4201-a054-cabdbeee7257)");
unit.assert_eq16(16'h2E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #763 2f5c7493-4eef-4290-a319-40a8279de045)");
unit.assert_eq16(16'hCED4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #763 bac639a8-e9fb-4293-af6e-7f6ac06e3d7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 23543e85-557f-4c22-9e2c-ac02bfdef4f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 f0514d6f-d819-4e28-8f51-589cec3a4bde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 79cc6523-63a8-4a56-93b2-02673f074b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 afbeb14c-82bd-40a3-9920-5341d05a8038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 0ce0ac9c-a2bc-49cd-a7d5-c1056f50ac6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 b53a2b1d-996d-4c97-a030-45e36183b7d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE274;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h963E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1305;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'hE274, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #764 4bf0d139-e321-4f7f-9c37-d2b80fe6d47e)");
unit.assert_eq16(16'h963E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #764 b3aa643c-ade6-4ef1-91ce-60d4b535aefb)");
unit.assert_eq16(16'hE274, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #764 a7d3f3e6-291d-48c9-abe7-13f6526c4e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 22a4abb9-9d46-4ff8-a6bf-b09b8cc4b14c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 92f9bf03-7b4b-4609-806d-2766ba1a88b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 73596161-0cfc-4f24-99ca-7ee8909f42fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 52888000-4c04-48a9-a884-3e0f33f9292b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 7b9a0e74-df6b-4cbc-9ffd-a4b26fc0c089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 1adf8175-9c64-4071-b106-faba668ea4bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA188;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h66A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'hA188, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #765 ea0c92c0-244d-4b4e-ad5b-996049c7da7c)");
unit.assert_eq16(16'hD4B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #765 9c2ec2b9-745f-4ce8-aacb-05e9e4a5bd83)");
unit.assert_eq16(16'hA188, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #765 370c7e2b-8033-4be1-a06c-4ac8023b688d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 06fc6f8f-11d6-4a17-9b23-18e7495f00d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 7a118f12-ee30-4b1d-bb96-c57bddee663c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 e6e80315-db21-45be-84cb-e7c57a42b0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 9d1f234b-d0fc-49a4-9713-5af2efc5db65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 4589e7e6-46f2-4a0e-9ad9-f3bd9f00d3e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 fb3ff091-9843-4e61-aa9b-4f1d74c105ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4408;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEDFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'h4408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #766 25f6b57f-679f-4b2c-914a-920cbcc13500)");
unit.assert_eq16(16'h0BE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #766 605408e4-4bc4-4084-b7d1-66df6b5eb90f)");
unit.assert_eq16(16'h4408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #766 7a0771cf-e87e-4c21-ad85-2628f242da15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 d19f91b9-8b07-4bde-ae9d-f5c0a80ea98d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 9819b9c0-36a2-4788-84ab-52bf48ce56c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 b74926a1-cdf3-4596-9874-4705ae3a5955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 b3e330a8-2eef-45da-b5f3-bab8e2453832)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 a55f84fc-d454-4ad6-a2a4-bcde26aac92f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 ba43eeaf-8148-4a32-b6c1-ef3fc8fc6f12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9BB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1847;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9939;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h9BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #767 ce1a3e08-99b1-46d1-996c-691a53f01c6d)");
unit.assert_eq16(16'h1847, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #767 f5f2a4fc-3096-41cf-8640-75c12d65c795)");
unit.assert_eq16(16'h9BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #767 40170ad6-a848-4192-8ded-07d0a365b1d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 0416d9da-e3e8-40e8-89b4-6d1cdefd7dcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 72c8ca08-5bdf-4445-87fb-c4d7043af632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 9ef89506-ecb7-440d-b3dd-3ebb471e035a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 5ea3df59-c829-43f4-8bbc-77c69dc717d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 38653d2c-fc49-4ed3-812a-231052e235a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 748aaa33-da4c-4edb-a6a8-26ebdab0e473)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h43E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1578;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9301;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h43E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #768 d37399fa-c11f-4e58-845b-076d2d9ac899)");
unit.assert_eq16(16'h1578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #768 36760a0e-94a7-486c-a652-c6480f972806)");
unit.assert_eq16(16'h43E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #768 9d04c42b-d2cc-4b46-954c-cb2b4977f314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 9bd8fd43-d837-4ee2-9ee8-d36ee7226cf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 79011496-a27d-4b72-8d2f-521d5f33fdc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 b786cae4-239f-4a1d-944f-a76e002e1f33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 1b3a3304-6d3f-42d5-a2d7-ce48032602b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 5c676981-ba27-4ea2-a41e-39ed914d73d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 ab838f8c-826d-453b-ab69-de35c0a940f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5870;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEADE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'h5870, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #769 4cf63f77-3148-4c0c-be12-33b70a0efad1)");
unit.assert_eq16(16'h87D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #769 47af4484-5215-47ba-b0fa-9ed9ec7d2f20)");
unit.assert_eq16(16'h5870, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #769 62e91383-5034-459b-917e-2a0fd85fb8c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 8be07758-7bd1-4afd-9cd7-d54a4c3830c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 a9a5edf7-9ea7-484a-9dc5-63fa0730cf4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 130632ed-d16b-4043-8e7c-29df3bcfe4f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 af86916f-78f9-49b7-9b71-6f0ccfaf2177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 657ef2a3-3533-4c6b-9e48-c4ab5ffb4189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 58a80996-c6c1-4a0e-9ec6-7105c1c1d57b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDDD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #770 027cbdd2-fafd-4fd0-bbb1-7666e3758599)");
unit.assert_eq16(16'hDDD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #770 c6c3fd90-d697-4fcc-aa21-e5ed14ebe4e9)");
unit.assert_eq16(16'h04EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #770 70b7427a-03bb-47e2-b1e5-af2c87ac26d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 ade303ef-c5fa-495e-985f-038f21b4cc9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 b20da5bd-8b7b-48b6-881c-46e47d56ac38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 798514ef-038a-4b54-99d1-eee97adb578b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 322d1e7c-af5f-456c-8225-ce7dbe864266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 d09de892-33c9-4bfc-b92c-27ccc06912f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 56daac3e-a355-46ef-93e2-fae663a7a042)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDEEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC186;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'hDEEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #771 b5eae8c6-59fa-4c5a-a012-58e576dcda94)");
unit.assert_eq16(16'hAF48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #771 31ee1051-1451-4163-a79b-dc087c8c6ef5)");
unit.assert_eq16(16'hDEEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #771 e936922e-2976-486e-a518-59b89abae466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 a34d738c-7ea5-458e-a7ea-df4213ec31a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 ba33714f-5bcd-4bd0-8670-d43d7e821dae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 5b4c997a-2cce-46d7-a68e-50ba2aab97ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 a6223316-9485-4801-b518-674102cc2604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 0d5bd542-a6f4-45a9-826e-528f0b4bcb3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 7b60c17b-0825-4061-866c-fa85b64ca258)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h09CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1B43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h89DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #772 16048b7c-a2f9-489f-83e8-982b2ac34a0e)");
unit.assert_eq16(16'h09CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #772 f083be46-b315-4f7d-86cf-46b42200d7f0)");
unit.assert_eq16(16'h89DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #772 87671b6e-1776-460d-b4b1-63e44dfbdd63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 301bb2d6-78b8-485e-ac24-35160e26bc1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 a5e608a3-0acb-481c-9a89-7e825d0f257f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 96a2372a-2306-4d13-97c5-019b38c6de10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 d3995272-913d-4bd7-9c10-62c5a63379fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 5ee55f72-2608-4a42-a456-d23adae39d4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 2738f171-2e99-42ab-b162-481b7587be98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC88B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h4D8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #773 7d6f9749-e569-4f41-9a46-0ff8811a8021)");
unit.assert_eq16(16'hFE21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #773 178fe3f3-492f-4ee2-ab9c-b05eab1a7a00)");
unit.assert_eq16(16'h4D8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #773 2fae3426-4b00-41c8-92f3-ea6f05e264ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 91437964-9ad5-4259-a98e-72a827a2794d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 fd5e7791-7a44-4869-a0b6-8718bf1f4ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 d4addfcd-9522-45a8-b7d1-ad476e093d3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 f550f802-b957-4899-9bf1-b1e4883d68de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 78bb29c8-915b-4bf9-9ee4-74705af12348)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 9467bfdc-8781-4ae8-8148-45592ca9fde8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0571;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE23D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1382;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'h0571, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #774 3de8861a-e02d-4f40-a5da-54c9558dc97d)");
unit.assert_eq16(16'hE23D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #774 d4da1fda-bbd7-4014-a7a1-5e6596bfea70)");
unit.assert_eq16(16'h0571, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #774 cf4792fb-0570-498b-93b2-2aa2f8f9b072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 a612edf2-7e02-4355-b0a4-ab06239045b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 05102aa9-6a07-4774-a95d-a028873d74b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 2a10feed-dec4-4e28-986a-4ad4954ad6d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 f76ce00b-ca18-4df1-8871-7ad380ac24b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 30cb8e92-7457-4186-8a32-12db5485baf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 3d6d20c3-af06-4c23-be7e-341b700e9af2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC538;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h530B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h450A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'hC538, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #775 4f97480e-353c-43d5-bbe9-80952c20175d)");
unit.assert_eq16(16'h530B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #775 588b2e74-7347-4945-9640-d049dc93e878)");
unit.assert_eq16(16'hC538, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #775 9043109d-0e7d-4f9b-b636-81bbb8556083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 a987c78a-fe96-4f5c-b296-f3835cb304c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 a0ec20ae-f1c0-4b67-ba02-f2e4b57fcbde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 65a2233a-02a5-4677-b5a3-9238e97f1226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 e337b7bf-c31b-4b13-8b0d-5d4f782c6909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 f53397a5-bb68-4204-9a36-de3d02ee7ee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 5046cfce-35b8-4b7e-a869-2128010c97d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6118;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4829;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h6118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #776 fed980f6-baa1-41cc-8d20-2541a18b9917)");
unit.assert_eq16(16'h1C51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #776 661cca69-c585-4b73-97b0-2289a2ad398c)");
unit.assert_eq16(16'h6118, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #776 c2f3ac92-c0b2-43f9-b11a-44a8515b7fd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 1caff8de-cd5b-41c4-a3bf-80c402030e4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 97620179-85fc-45d3-b024-b939f9f9ce40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 4199b9c2-01ef-4e0d-bf5c-29d7dc9bf726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 f8c331d3-1ce1-4d5a-be7e-7b0e97fc4ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 bd9cc9d7-ce97-48a6-b153-5862026eb478)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 fab9656b-a581-48b3-85d9-727b8528e14a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD821;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'hD821, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #777 d49f3a64-431e-4cad-af28-149008a904d5)");
unit.assert_eq16(16'h6AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #777 54bb5f2c-53e0-491c-ab8c-e1794982b7c4)");
unit.assert_eq16(16'hD821, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #777 9bc71aca-aafc-486e-b8af-2140de1e4562)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 1a42bd41-e4bc-44a8-981e-250dddb70e15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 79ae8125-0148-4a18-97e1-e16aeb3655ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 ea3ab826-cb13-4167-8b14-37ead7725162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 c3c69362-f397-4f45-8c75-cd1d6adee1f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 ae25b5e0-eda8-472e-a36c-18687cd769cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 a69148a6-ea09-4929-876a-2a49a51b3eff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h43F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'hAB3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #778 189569d9-8572-4231-b443-e00024c9fcd6)");
unit.assert_eq16(16'h5E06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #778 7b4dc3c6-81a2-4744-a32d-037b6598015a)");
unit.assert_eq16(16'hAB3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #778 75d3e9a1-3f4a-40d9-8d43-2e3ccb4bd956)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 de829c10-3b6f-4b31-8cc0-2ff2d7896891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 5a0e5f95-20fb-4ae1-95d3-ab7319bdad74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 93f91301-5edd-4f9c-8f9e-e372b0a28936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 8b212641-edf3-499a-8530-79ca64d81f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 6125217d-bbef-472b-b9b7-1be6fcfd1fa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 a8035231-5874-4a82-a29c-762cf4ff0a2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA4A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7921;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB563;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'hA4A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #779 79a4d446-7b0c-4864-b2de-baeb11cf6875)");
unit.assert_eq16(16'h7921, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #779 9e8ca801-2ebf-49d3-a720-3e27155a9f57)");
unit.assert_eq16(16'hA4A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #779 77308cc0-3d45-4e9a-8cf1-a31e046a92c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 028cad2b-dee5-4ab1-a224-1b0f8ec91108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 9bd07f6e-e044-4df9-a871-8b2b28e451bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 4d7663b8-158f-4313-8007-828c13d6a988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 ac500531-24f5-4f5c-a380-2b86deb5d004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 8d10df17-9699-4cb8-b6db-8cbe82afbfed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 70ab1709-0d4a-49d9-941e-fd8604d3a6d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC94E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h322E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5778;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'hC94E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #780 01e18db9-0500-45bf-8f65-feaa97b2d3ff)");
unit.assert_eq16(16'h322E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #780 fd5ddea1-5326-492f-b546-48bab53f5fef)");
unit.assert_eq16(16'hC94E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #780 c9cec807-f715-4b44-a2be-ab408cdfc72d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 069f9fc4-e499-4b39-8084-e3ca01181c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 198c11c6-67be-4601-b0c6-ad93f726b9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 ddf98dff-3814-4a49-b029-e30d39a3114e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 08ac4770-4db3-46bb-9b26-78933d07df68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 8fdd85d6-8cee-4904-b6c7-650abcb11dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 241475f3-9b51-44aa-b21a-ca0523e08d17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4442;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7200;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6AF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'h4442, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #781 2141dfa8-fb93-4db8-af37-d43e9e4bab17)");
unit.assert_eq16(16'h7200, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #781 d0c2b819-6b84-4fb3-9d86-26598f04e962)");
unit.assert_eq16(16'h4442, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #781 b71886a7-5f29-4af9-8c0d-9f722c139ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 3c8e512c-cffa-4aee-adc2-174591ec72d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 ede7cfad-204d-4996-87dc-6b22a0fbe214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 cbdf7d1f-9294-4766-b8d1-0eec4c2486d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 cba59d5e-fe80-4bae-87af-1ac3438a2991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 11fc515e-2d96-4fc4-8384-5acd55c5bd20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 5022c508-4cdb-428d-aede-b0513c7486eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h88CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB215;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA73A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'h88CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #782 17afa784-b43f-4f71-b9d8-127a7fdcbe74)");
unit.assert_eq16(16'hB215, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #782 ab05af19-3bf9-459a-bb0e-9b18cedd1853)");
unit.assert_eq16(16'h88CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #782 08c64daa-d0a7-42ee-b130-6de7fac393b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 41bb9fb1-e177-4fb4-a109-6e56e44a7962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 b47010df-8427-48da-97f5-b3b94738a27d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 669c6573-0f33-41c3-8abf-6974140ad310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 6538023e-6755-4029-bcc2-f5071f05e557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 3fb7f22d-e581-467b-b40b-bfe10ff4f130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 ad007de7-10bd-43e5-af80-18012054b451)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2E9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'hCD9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #783 c6ff36ce-c6af-4d7b-a3e7-ca2f1f9fc96c)");
unit.assert_eq16(16'h1E39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #783 0d3bf38b-53bf-40f0-a0b3-8807f0927be9)");
unit.assert_eq16(16'hCD9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #783 ca583c01-79ba-4173-9fd7-1d5ad1daf557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 377af71d-fa03-4580-8c90-eb4b4381ad71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 c373d209-5f87-4129-a6fd-e61b79ddf517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 b93b54cd-8936-4a74-8e8b-31cb11ba51df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 3234c240-7932-4c11-b6c3-f1c14f72049f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 7ae90446-7aba-44a7-8360-4bb4a7bb65b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 fadb9259-e01d-47a9-91eb-30334de151bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF5C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'hED9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #784 e7ed0649-b519-4809-9b96-43fc4fd57e57)");
unit.assert_eq16(16'hFA42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #784 5cd9b323-f371-4c08-b818-75dfbb5ffe50)");
unit.assert_eq16(16'hED9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #784 6dda7b45-0433-44fe-87c8-bcd80895c7ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 f41daeba-7848-429d-a2ff-dacce00f9a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 68ae56ad-1ac6-4f90-a37d-1333f83e1ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 c0d3616f-f010-4df4-8ace-d6ca895f5c7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 79c6eca9-1ed6-4999-9333-ebdae696612c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 b2339de0-d937-4c44-b196-18173c6de1ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 96059ce9-bb0e-4fc0-8ab7-6d178c64607a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h81B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA1CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD96B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'h81B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #785 e5d68f9e-7c69-491c-9f88-6d356bfa2a00)");
unit.assert_eq16(16'hA1CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #785 79d40e9a-5e49-44ae-8dba-acd9492f8e0b)");
unit.assert_eq16(16'h81B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #785 b1efdd14-16ed-4cd6-9eaf-98ace664c87f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 e6bb47bf-9706-4267-8207-115fc64bd239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 ea2b49e0-edef-4791-875f-1f140c5491ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 26ca0ccd-e270-4c77-bf98-bc697c61256c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 dbdbd458-42dd-42c3-b48e-66e0e4540ea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 74c15ca3-b552-4b33-8f1b-157edddf536f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 ea224b33-842b-4808-bbb7-08f86d9e7bd9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD8E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'hD8E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #786 fd67841b-8f27-4960-b79c-9d817d7f3ddc)");
unit.assert_eq16(16'hFDA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #786 6487021d-8d90-43e6-80af-faf5e7531d6d)");
unit.assert_eq16(16'hD8E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #786 65b625f9-37e6-4d93-b767-145d8a288a6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 420afe28-ed6b-4697-8da7-f522ecd93533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 e6434b7d-6bb7-4b83-80a3-d09336487200)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 085af660-b6a6-4ca1-93a6-9cd03ace61af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 7fe6896d-2464-4ef2-b3c9-a5fddd04a82f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 81505822-150a-4499-8471-32a5c3f116b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 6c87ad11-eece-4129-a071-1cf1550bc02c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6640;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3470;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'h99FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #787 0b68c881-a2ab-40d9-b546-55a61ba7db76)");
unit.assert_eq16(16'h6640, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #787 f94293fe-1dab-42fe-a173-2e75901995f2)");
unit.assert_eq16(16'h99FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #787 3801021f-447e-48b3-8ac3-d494c4579984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 f152fb18-2a1d-4619-b362-6a2eae31f363)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 3bd63f92-570e-4cc7-842a-8a877986cb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 c6574bf9-ae59-44e3-a5b0-78c295e7683c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 8fe35d6e-3d1f-4e05-832d-5afe97317280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 44bf5920-505b-45c9-ae79-e9994826af06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 7f25c037-8ad9-48f2-bde1-6e553288aad8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA778;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDEA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD65A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'hA778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #788 ee389030-43a9-49c0-bbff-24b5af9377fa)");
unit.assert_eq16(16'hDEA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #788 c056394b-d9c4-42c6-a439-2e7929c83ddd)");
unit.assert_eq16(16'hA778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #788 88d2833d-4add-44f6-8d16-1e49a71681f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 27d8363a-6c17-4ece-b9b2-846fa1e6e4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 5ee8a68e-8097-489c-a82a-a8fb2931aa21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 09309afe-67d3-4eee-87b3-996fa5a18332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 57c5aec0-e1b6-461c-8ec4-a456cf715717)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 5cfadb7f-dff2-483b-8819-70adad622b66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 ff5abb88-82c5-49b2-8203-30f87632d06d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h25AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h047E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'h25AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #789 6d936067-a959-414c-a429-edfd888489da)");
unit.assert_eq16(16'h047E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #789 3ea26289-b076-4c81-900a-761829cc039c)");
unit.assert_eq16(16'h25AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #789 771de285-5141-46a9-8a38-ff06c5b3f0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 a7bbdd5e-a8a3-49f6-baad-926d52222d5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 2c681dc1-903d-4e27-9a24-ed5544b7380c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 5f9f7c8e-5da4-4192-a487-e729efac8511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 c44a38f2-93c9-479c-b0c1-4f1189faa9a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 fe0e79ef-145a-416c-bb9f-20ce5e06b9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 7e15adec-b540-4653-a668-83aa1b1df4c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF0FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD213;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'hF0FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #790 8611ec24-94ef-4af0-a932-cdd09eb3f4c1)");
unit.assert_eq16(16'hBB9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #790 10982060-6e4d-480e-9e6c-9542d4a4857f)");
unit.assert_eq16(16'hF0FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #790 82875282-f29c-4a7d-8e48-f5ceef365c8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 f66897dc-ff0d-4bba-b72e-20e363e5060e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 9c895ab4-4dd5-48b6-84c1-b09833caeb85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 f5e860b9-daa2-4024-a400-071c47587ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 d79a7774-75b6-49b6-b9f8-d0f97ea9a4ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 bcc7b1d6-5bcd-4d76-bf12-c5703114aebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 6b34f718-373d-4c12-afe4-0e1bc01c5995)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0272;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD757;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h22D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #791 e993de4b-7bed-46f7-9909-48a4e832a36c)");
unit.assert_eq16(16'hD757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #791 b03cfeae-fd1a-4dfb-be9e-0a74752787b7)");
unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #791 3adf5bf1-eb7c-4933-a975-97755a4c79d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 36891b4e-cc6c-45ab-a254-57dbdf1e59a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 20608081-3ae8-4094-8529-eacc102f2b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 c228cbbb-337b-4f92-8ad0-4da7c4664eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 8a93e664-ef1f-4d63-ac67-c7e4046a586e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 d23da549-c8a3-48a1-a1c9-2f81f656b505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 9d352bd6-c66b-415a-8e34-62a532c5b348)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6371;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4424;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hABA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h6371, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #792 323ecb63-f9e4-4b28-958e-9303608468f5)");
unit.assert_eq16(16'h4424, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #792 17238956-39a1-4228-bd64-35f410a99042)");
unit.assert_eq16(16'h6371, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #792 a4ee1922-5978-4e41-95d0-5f7dfcbf03ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 e83e05ee-08a3-477a-9e57-53505b59dc57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 5a9e8228-42e5-4b47-bc74-d3a9c791a7bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 83c67757-b31c-4db5-9b60-6a2411c06337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 8b1ecf14-73c2-4c38-a4d1-1b513d00decb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 bbac09a3-3b12-46be-8ff6-eb0ff2f36452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 b7f331ff-f183-4945-b297-671073fa3146)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6971;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h34C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'h8D73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #793 27fda72f-1836-4c11-8e73-7bc2c35fde81)");
unit.assert_eq16(16'h6971, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #793 ff96fa3f-4996-4a7f-b452-ca4f72f1e827)");
unit.assert_eq16(16'h8D73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #793 fbf2578e-cd8b-4b94-bb8a-2d5f05702265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 ba9c1496-d11d-4b68-b389-919e900e45a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 28d95878-92ed-43f6-939e-06f9c5264f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 be3c1582-013f-4667-95b9-165642953a0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 abd4704e-ce37-4fe7-9b7f-d9beea34d828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 1726757c-5fc7-439c-b2d2-6e61e7b688ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 84be48a7-fb37-4f81-af41-4ca78dbdb783)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h85C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'h5E21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #794 cbb68cc7-2790-47de-a928-fd5a3798cef5)");
unit.assert_eq16(16'h0B8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #794 7c4aef11-cd5c-4e57-ac97-b9e987fd9577)");
unit.assert_eq16(16'h5E21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #794 96def22c-8fce-4c1f-8a30-de635df1fb69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 d435d530-bac9-44c2-8a1a-e6f6583ff983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 ac5d50eb-b23f-469d-b298-27c70167e282)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 9b1db570-23fb-4766-a529-fa7773f23d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 08e508c9-2aa9-43f7-a17f-7a23797845c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 a4103794-be4f-4bc3-b7a6-3e7a137a8823)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 5b2f085d-cdb8-4646-9241-f00ac58c62ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB80F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2AB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'hB80F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #795 d5c4b618-607b-4cbf-b430-e86f213483b4)");
unit.assert_eq16(16'h5E90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #795 cd4e9a12-b937-42a8-a990-2548387d16a2)");
unit.assert_eq16(16'hB80F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #795 94c8b9d5-0f5c-4c3d-9aaa-4b951756fdaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 d89be829-48d7-4e87-ae53-5ab9edea0b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 0f1ebd65-ec8d-41ae-ac7e-18e1037825bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 b23c03b9-9dcb-4edd-8a68-d0117d2f49d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 9cbc09f5-ad0e-4234-bb10-dbecd5f52f95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 bee78c9a-620f-4745-8641-c671bc1fd780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 65626d43-fe2d-459b-8c3a-4631307c8897)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDAE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5984;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hABF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'hDAE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #796 632fb1c3-d913-4e22-86bb-64f6ec53cb16)");
unit.assert_eq16(16'h5984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #796 3d86f267-516b-496e-b806-1438f5f34e87)");
unit.assert_eq16(16'hDAE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #796 663273a6-fbdd-4ebf-8772-af9fded16d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 96c4ddbf-637d-4eb4-a1d3-ec8213d2ba30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 61382ce0-fad8-49a7-8dba-d58709431223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 759b8976-8d01-4632-b2d7-dad4555fb921)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 b4affd57-42d5-4f70-a3ab-947f413f59af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 b297c22c-80b3-4979-b541-5ecaf7f68c05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 6ce128aa-490c-40de-908c-2b891d02cf26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3FFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9BA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'h3FFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #797 9faacff5-723a-47a6-b8bc-4af686013959)");
unit.assert_eq16(16'h9BA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #797 a8a685e4-31df-409e-b9e5-e6f9c721245a)");
unit.assert_eq16(16'h3FFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #797 a4b9131c-9b28-4eb7-8130-b2204bea4b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 dbe8049a-50a7-4f71-aebe-ec5d06b3b50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 d9041604-afd6-455a-8dd6-73aeeb5f2b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 bc4a3178-87f7-456f-964d-5d51f081c46f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 a24127a7-9e13-4639-9d64-c2782464e904)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 38e372ad-7ba3-4c75-b56a-3c744b8a870a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 ae159c37-0281-4900-9222-7e59efdd6a54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h59A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2589;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h59A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #798 61cfea5f-b0e9-4bff-917b-686fbacdeeeb)");
unit.assert_eq16(16'h5C13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #798 4d1e8725-26eb-426b-b8c0-08b45eb36e8a)");
unit.assert_eq16(16'h59A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #798 4cee5e2b-2e82-4034-a247-dbc1bc6eee41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 6ab72dca-e772-4c87-89f2-4a8fe77e22f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 aa982f57-3c69-46a8-98cd-bab762f6499d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 6f7547a4-123e-477f-918d-6ebbf9dc3808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 8da52585-a12f-4ee9-88a3-79b634063eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 2e3a3c1f-85fc-48d8-bbec-15b20e0003e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 a7fd5b53-d8f5-40cd-aac0-0ddc75498163)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h22FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6CE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9EC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h22FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #799 c6ea344e-644c-4c49-bf7f-261c348d44ca)");
unit.assert_eq16(16'h6CE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #799 f6e17f09-e607-47ac-aebe-ccbf1738a1a1)");
unit.assert_eq16(16'h22FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #799 fb33052e-15bf-48aa-bf60-39c36e71b76e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 9c3c3276-8d9d-4b3f-ae90-9bda753927fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 eaed134d-9183-40f2-851a-48e1aef0da17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 c3c197b3-a972-4301-87b8-8207b0d8c4bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 18ff8edd-339c-4e77-9d00-fad1c0789217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 8757b6db-19be-42ff-80d2-0ecd3cc80bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 d0e4649d-4953-4c9c-bd43-a9d94a88b20d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE100;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h11B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF664;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'hE100, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #800 fdb4451c-4ef7-43bf-b6e4-9b82656c02ee)");
unit.assert_eq16(16'h11B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #800 3acca778-c5fc-4e1d-8304-9e2ca40bc37f)");
unit.assert_eq16(16'hE100, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #800 0450afd9-41c8-4b89-ac7b-405ebd855aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 9bb028d7-2b6e-42aa-b4a0-ec4c58256685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 99e0a76e-34e0-4c6c-aae5-ca04c394f14c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 a238ac41-1d75-4ef7-8bf6-bcb876662f0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 04f57103-4d20-4cfc-89a9-680b8c85a7d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 e5c5bd39-fd60-4530-a3a0-63ad6f6a368a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 faebc396-b07d-44cf-97d6-88d4666f1154)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h461F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3C0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h946A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'h461F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #801 efad6230-7f5e-4b03-abcc-af649353a50d)");
unit.assert_eq16(16'h3C0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #801 de502539-5285-4c1a-a4c5-74f341828213)");
unit.assert_eq16(16'h461F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #801 c8c9a868-05a4-4935-b40a-005816886289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 0dbf8d8b-a80d-4f2b-b834-74d4c60aaef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 446826c1-85ad-4928-a401-e6632fd8d10b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 0a429124-8d7e-421c-bb40-4224fc50aaf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 0384a77f-dccb-4771-8365-af56cc9f0085)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 f4d5755b-2df4-429a-a204-7b85249684bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 c1ade571-5d3a-4076-8a84-4d898a082170)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h336D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFAB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'h6F1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #802 7593f4ee-9f42-4adf-b0f7-197fe8cc838e)");
unit.assert_eq16(16'h336D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #802 58299820-24be-48e0-adbd-1609fbdf5652)");
unit.assert_eq16(16'h6F1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #802 c6112f8b-f7f7-43ec-a236-cde6cc0b3b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 5d50fd56-9f2c-483f-ab62-36f0e3429661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 c1c12e79-34d4-4630-91c5-9aa3d3a54568)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 610f8bc8-3ca5-40c1-8d1b-97558feb80f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 92169b57-819c-4417-931c-6059bb6f9154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 2a328f5e-4682-4d72-b284-e13b260c2012)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 b161af92-5354-4790-bf52-6afef0c29cf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9AF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h7B6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #803 c51d4d7e-6584-411a-9067-ba8940ace1ce)");
unit.assert_eq16(16'h9AF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #803 e8d6122d-50a2-4891-8205-d464d78102c9)");
unit.assert_eq16(16'h7B6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #803 b4d959a0-b427-4a9a-b25c-23a67428ba8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 42930a1f-ba9e-4026-8f6d-0afec92c5af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 a145ec03-b553-4137-b42a-8fa6560423d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 9d5a1aa6-dc3e-4d26-a8b1-5610a7dc65ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 82a7bf3a-abff-4b16-ac23-855fab0d9039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 4194b533-7da0-430a-9d7f-6f2f97d20385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 e44819e7-c625-495d-98a8-14ac52f0ed4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBB5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBE45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB028;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'hBB5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #804 23a18210-a5ac-478c-aee2-3b4a90819b27)");
unit.assert_eq16(16'hBE45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #804 ef58cb9f-0b83-43bb-b960-b899b6c37cd9)");
unit.assert_eq16(16'hBB5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #804 b220c2bc-1131-4026-b5b2-5c1163e42a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 7657585c-c450-446a-9191-a40b3e28648c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 88764ce1-a7dd-40e3-850e-4f806241aa99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 929a7075-8336-413d-9944-440555735dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 793964f3-abce-462a-91ae-53d6f0c5d45b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 1118d7a6-cb28-4fe6-bd61-3c5b163d69aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 48e76f18-5d57-495d-9404-c9710c8a35d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h15CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h228F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h15CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #805 c4da20d1-c198-4adc-a276-ad67e97008d6)");
unit.assert_eq16(16'h228F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #805 0b256df0-ed2b-48a5-aace-c677551968db)");
unit.assert_eq16(16'h15CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #805 453979f4-e176-4d6d-a14b-40e89f888f74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 0d4dc145-974c-4742-9d05-2d14e26b1b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 31c9a5c9-5cdf-4f05-b410-3099f1b0c164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 04dff41c-429d-42fc-a443-b92f849c5355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 eca021ed-5c92-4cd1-911a-f5fc11c61baf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 f6369a34-0134-4119-9a88-bd981f18c88a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 21ae38f5-43b7-4b8d-b985-92b66926383c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6CED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'hEE92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #806 11708089-d92e-4deb-bd70-28ef3967c20b)");
unit.assert_eq16(16'hCAD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #806 516b325a-b270-4c94-ba27-e5be18aec38f)");
unit.assert_eq16(16'hEE92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #806 323d8088-a897-4296-b804-7bbd9cd38a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 ed742c26-e297-415b-b63c-1dc68f30dff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 6934f449-5a31-4090-9b9b-02c740695dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 583ff85e-60d5-4cde-8693-ea09679896e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 47e2aab3-cf33-4392-8887-83082ac1d1b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 80a517b3-2c68-42b3-a80c-d8bf709455d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 2047c745-db0b-4851-a324-e436bc4f55f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFC69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h222E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'hFC69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #807 c5fbcf2f-6deb-4d9e-9c13-bc6bdc0f5779)");
unit.assert_eq16(16'h75B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #807 9b96a11b-0be9-4729-b957-d00b01d19ae5)");
unit.assert_eq16(16'hFC69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #807 f0ecdad5-7208-40e8-b687-36f9bf9bdcb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 731f578b-60cd-475f-b330-df118f44811b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 fb08df0d-8ba6-46fb-bdd6-8123690f0fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 e83c3d17-0ccf-42dc-8eb6-310c638a6e0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 c6d7b587-65f3-4a87-af9a-2ce125a7260f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 07b9dab1-f45c-4d7b-9ca6-61d85fc62de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 aecaeda1-6f4a-4500-af1b-28c2d4215965)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD4F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8EC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBACF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'hD4F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #808 978df36d-48eb-4040-9d38-0da0e4e11a9f)");
unit.assert_eq16(16'h8EC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #808 46f3d4f1-9564-4ed9-ab16-e445fb98fc74)");
unit.assert_eq16(16'hD4F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #808 a6629377-f329-45ca-95fa-38a6b9f1d881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 5da4409f-7882-4203-a7f7-331e0fafba7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 a3f435d7-d12b-40ec-8bfb-ac284822d6b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 41d982bb-8e56-45df-a50a-c76c495e241c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 642ab68b-378f-450b-9179-50fc994fa878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 531faf25-0eef-4eef-80a2-9ff6e42d211b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 372b351a-cfc6-4bd0-944d-0b7df3f73f63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF74B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEED3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'hE6BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #809 871a765e-87f7-4521-9897-de7f4b5d7ae4)");
unit.assert_eq16(16'hF74B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #809 d4d96073-3012-4d32-b7ad-6730b8110673)");
unit.assert_eq16(16'hE6BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #809 b62d873f-d123-441f-ad46-d6e10739f3f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 16117d34-4e03-444f-a661-a0a6d603c052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 aa7c01fb-2db9-4cf0-b4bd-f00140546e34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 5e42b45a-0644-4f51-a447-98ff463d6b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 6862a779-09d1-4e8f-8ab4-caf5010cae15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 2d6bb97f-0719-48ce-9394-1b896cec4d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 c4fc42dc-e4df-42c1-9d37-8546f700568d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h998E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0A99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h998E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #810 eac23d5c-21d1-4b4b-a962-40492234c35e)");
unit.assert_eq16(16'h89DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #810 d53f506c-8958-40f8-acc5-9f67fa5fe915)");
unit.assert_eq16(16'h998E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #810 418f5c9e-b954-46e6-8efc-18c8ca000f57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 80062272-a598-47c7-be6a-1b5e41f974c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 9d772389-76ea-463b-9493-753d7d9bf92e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 3e19b48e-2d30-4a5c-86ca-58dbe54085b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 0c51dfd3-2758-467f-a9b7-1dda4d3450c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 95920d06-483b-4373-aad4-e54b86a9374b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 3257895f-43cc-4c78-9013-a8511cd57c01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h042F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'h5F99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #811 af135e76-16d7-472e-87da-f64eb21be436)");
unit.assert_eq16(16'h042F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #811 2c8f8305-c3f9-4a71-8ff8-ccd52409b8dd)");
unit.assert_eq16(16'h5F99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #811 f0fbf4d1-e253-4c56-b62f-1fda505fd6da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 16438f97-e538-42c9-8bbd-969c34b537da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 55bb3aa9-171c-44e1-9d0b-f7ee0e27ca80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 e53eb182-76cc-4d11-bf2c-200c0abb56ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 6b25dbab-6709-493f-8b13-ea896bbda3c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 a6e04d93-0de3-4b13-9431-7d86b2ee08f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 41c889cb-9ce7-465d-a775-fab5cbf8b0b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5AF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h29F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #812 612786b2-0465-40e0-bca2-4e6b29ca3be8)");
unit.assert_eq16(16'h5AF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #812 4525ea54-f3fb-41f4-b94f-13db50c51b36)");
unit.assert_eq16(16'h29F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #812 2708efa9-8bb2-46a9-871a-337650dc28d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 893b7c83-15bf-46c7-ab4c-af2cb1e4b027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 774d04c8-aec8-4a68-858d-4bf418349583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 955112a4-8963-4511-bf39-fd59e761a5fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 e12a3dd7-a25e-4f9f-8666-c1cc8e60aa1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 56f2f52a-8010-4a1e-b174-bd2dafd14566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 b20b9e72-361d-40b6-b282-eaf76dd33b55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5D34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDC60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE727;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'h5D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #813 5a18fbf3-d18e-47b5-9b19-d5d6144ba114)");
unit.assert_eq16(16'hDC60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #813 420e7546-1e34-4a73-8d1e-ed4c4d6ece34)");
unit.assert_eq16(16'h5D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #813 0ac882e1-2671-48f5-ba52-e568da7ca087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 bf083627-9084-4874-a86b-c40201349f6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 f260a16b-08eb-42f8-964f-42968f69ed49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 0b3f2706-e202-4a1b-8ad9-658a2fa9837e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 34e06b9b-a8d2-4b75-ad7c-5d978b8886a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 7e40db91-6ca2-42f0-817e-87558f64cde5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 4c0cc9ef-708f-48a5-a624-31c7a3d703fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6ACB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h94CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'h6ACB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #814 56a5c0af-076b-4a7f-a076-d8c4d13669ee)");
unit.assert_eq16(16'h0A42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #814 a1167aef-655e-42af-b36d-1d83859cc96e)");
unit.assert_eq16(16'h6ACB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #814 d2cc4af0-db5b-4f85-96dc-7aacb7e62958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 1400f2d0-0244-4518-a311-68c2f3615d83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 110fbb25-9885-481d-9e6f-6b38e662900e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 861b3fa9-aef6-4de2-bb9b-145a41a3b392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 75f21621-3e93-479d-bdc7-dd88e754af45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 a57ad640-b31f-4440-bd40-58859ebcecb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 e598c504-5305-4dd4-9923-2830ef73c371)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC0A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCBBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'h1C5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #815 06ab5534-4501-497c-8e31-6736c3a38751)");
unit.assert_eq16(16'hC0A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #815 2405e521-490c-497b-b78f-c2ef21892eb4)");
unit.assert_eq16(16'h1C5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #815 2c550858-f390-441e-90cf-5cb6d7809d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 c2cf1157-7094-46cb-a034-e929e1943cf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 c3f222c0-bdec-46c1-86e2-b96697e15cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 74313929-ba1d-4584-b438-cefd0ea701a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 d39ecf9a-79ce-40fe-94b2-8c31cd97066a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 420a1d50-afa8-40d6-9b16-50c612ae34f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 6c8a9fb3-3e91-4e23-a478-33bb6bb8a3cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF658;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB656;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h055D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'hF658, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #816 2e5f8f30-4477-4cfa-8fa4-e378c56c3a15)");
unit.assert_eq16(16'hB656, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #816 b0fa9456-10e7-4d28-bb63-89d3df54df24)");
unit.assert_eq16(16'hF658, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #816 bd96d42b-95e0-4ac8-b95a-4d3dd6a2e984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 6c48182b-685c-4908-8b08-744cb66cff52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 65815c39-8823-4f6b-9764-0bddacffaa81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 6ef10feb-8e72-41b4-a985-d3cd831c1679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 be7d3896-6d61-41df-9ca8-ebbd975f3272)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 e5ebda82-7ea2-4ce3-a0e2-4690d2cc8dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 c115f0fe-b9ee-430f-8648-e6090585b328)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h95E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF0BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD10F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'h95E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #817 6b534531-b7a5-4722-9b8e-9efcf0004634)");
unit.assert_eq16(16'hF0BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #817 500f39fd-0f1e-47a0-abf9-466b889b00a7)");
unit.assert_eq16(16'h95E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #817 819e2e36-f695-4742-bec3-a70b70121b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 e4ec96bb-233c-4853-ab2e-0d9c5fd54277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 6e2d8dc2-5784-4638-b581-b06e2f218fea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 65e40779-c815-4a11-9c12-0aaaa1a446eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 b95ebdac-6ecf-44bf-8c57-178192d6d630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 42bc3e9e-66d7-4872-b923-3ef03428f9de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 47b995e7-e129-4187-80d8-bc3081f66d7f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC826;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC4A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7FC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'hC826, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #818 38909561-0fd6-4809-a871-06352d944529)");
unit.assert_eq16(16'hC4A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #818 c6d71620-05e1-4ad4-aee2-1541dcdf67f6)");
unit.assert_eq16(16'hC826, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #818 12b656da-7b72-410d-aec8-0d5ac703a0e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 eba0842e-923e-4ff9-9274-d0c1fd37d76e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 8ed808b7-82a5-47ee-aaf3-8a4d3b940f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 0db369f3-8730-488b-87a8-012c9e3b413a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 66b3f681-91a0-49ae-b2ed-7c99b46695dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 d8cf1d6f-137b-43ec-8aa4-a1529d98a96b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 9f1c6c35-e273-4e43-969f-0d95dcb29e43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3CBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'h8D43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #819 3365a64f-b753-45a5-b6a6-a43ef668bc35)");
unit.assert_eq16(16'hFFD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #819 714a9a7f-d7e5-4c3f-a7ea-56e55db2ffac)");
unit.assert_eq16(16'h8D43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #819 01a9dd72-4293-477c-a222-08bbfc599160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 db900e25-5e4a-48e9-961d-f657dfd05481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 63b3af67-3aed-4c95-9bd1-115b4d912a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 11180bc4-783c-4cc0-98f5-d9469ef00877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 e907a11a-d8a1-4d77-81ed-c85755ae7f07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 a9808a69-685d-48b4-9352-c2bf8a67ce64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 afecccf0-6323-4149-bbf7-948bb326ad3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4896;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'h4896, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #820 9c81af2d-1713-43a2-b9d9-b91afa0efee4)");
unit.assert_eq16(16'h79DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #820 2a066392-ff75-4806-a1c4-e86c24b9b02f)");
unit.assert_eq16(16'h4896, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #820 7483ee10-f9f6-4f66-a287-1cf2689799ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 36e215a8-6022-4558-a1e5-c456e4a40627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 c7fd059d-526f-4af3-b917-117879db504a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 b9cf8900-5cf2-4841-94d5-dc98fa669883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 575d948d-a04b-4d18-bf3b-8b8f5ec8ad2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 39c723f0-731b-4547-85a1-5f3c19a89427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 aac2b980-0e42-420f-849a-65ae4264d3ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1926;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2BC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h1926, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #821 e569f397-8bed-44cf-9c2d-d429377445da)");
unit.assert_eq16(16'hCB42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #821 135b98b8-d558-4d46-8f9a-ae8e3667a3a9)");
unit.assert_eq16(16'h1926, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #821 1458dace-e077-40f2-bc85-a62534137e03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 b42942d0-5a9a-4cf5-a11c-de8f3d2833bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 51390d1a-9cba-4a1b-b22b-852f11cda850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 17bb9757-9e1b-4dfb-9160-4a5f8c80c136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 4c0af2f5-17ea-4248-8daf-434c01aed432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 e7a67cee-7745-4415-972b-2d688a91fcbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 183a2851-b501-44a9-b2d1-55d70681d607)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE686;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF2C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'hCD40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #822 4338bf87-5cd8-4a79-bd15-03749c1bb801)");
unit.assert_eq16(16'hE686, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #822 66dfc48f-bdd3-4af5-9e8a-2715161579a8)");
unit.assert_eq16(16'hCD40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #822 175098f8-6db1-4244-a50c-0a99a1e7808f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 2afc34c4-46dc-482c-b9ea-5e26752bc841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 2b0fe0ee-f42e-4cff-a955-6df30f940e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 18b414a7-71bb-47c1-ac9e-589693995f44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 2bfeac16-5809-4a6b-8edd-97ed705d539e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 9300ee4c-8872-49d5-9920-c974110a6028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 5f2f3f33-a163-406e-b4dc-e59fcf7a3387)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2824;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF222;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE8D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h2824, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #823 6fd49036-c754-4e0b-b1e3-f229c4eb8a0a)");
unit.assert_eq16(16'hF222, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #823 b9bef3f5-f01b-4742-8a4b-cb5d25559c42)");
unit.assert_eq16(16'h2824, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #823 370f8a26-5880-43c0-bb13-5d28cb08f4aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 c823d917-92d9-42d6-8ff2-c192c366f004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 84ff75de-17c6-4c1d-a891-1dce049e2864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 c88c3cac-3c98-4ce0-984d-bbf9a8a824a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 d4d88a0d-a7bd-45cc-a318-9fe96c712821)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 c3b16604-9c51-4a52-b6bd-6e0d2748812d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 b8710a11-0420-41c5-b59a-052a797fb3cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h196D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h647F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'h196D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #824 99bdbb2e-95a6-4f60-81b8-a055ce8c604a)");
unit.assert_eq16(16'h647F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #824 930f46bb-6918-4057-ae4e-345cedb2bf42)");
unit.assert_eq16(16'h196D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #824 a9f6e5a3-978a-4b2d-a33d-bfdc679c0ddd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 10d8147b-9d88-4a44-bb3b-d03c20ff3933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 b6e471af-c922-44f5-b4da-b4cd87c3e816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 e41e78ce-cdc5-46bd-a9ae-89768e1a41bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 bd146c81-a496-4987-a251-0cf6553faf1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 b8fbeccb-ecc3-4e04-849d-f7fcdcc2d6ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 2f8dd2da-a1f7-49e9-b071-a5c5f8f4b832)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA307;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4AB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3313;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'hA307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #825 1f4dde11-0f31-4d2f-8f94-dbfc249197ee)");
unit.assert_eq16(16'h4AB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #825 e56fdbb5-871b-41ad-a0cb-20b51b986925)");
unit.assert_eq16(16'hA307, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #825 6f0d058c-3fcd-40aa-bdde-cf06bfb0e545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 14ff419c-b1c9-4ad8-90cf-4a2344b90a5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 d4402138-aa2a-4666-8157-4567f810904b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 71859a21-5edd-42e4-92ca-b8a2996a3db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 ed382e76-a564-44a7-822c-1cf9e01e001c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 7d0e1971-e5f8-453c-9ed6-a28b7c12e7e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 15bf9f0e-770e-4fdb-9c25-398ef91c207e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h82AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1BE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'h82AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #826 b6f426c0-0f5d-418b-9b8a-53a96f28a8bb)");
unit.assert_eq16(16'h1BE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #826 93dabb0e-d6a5-4a52-90dc-b14e004aea1f)");
unit.assert_eq16(16'h82AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #826 e43aa0d5-512f-4858-952b-7719f7f721cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 e6a3400b-064d-4ec4-9edc-55dc26ce30b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 11be8d4d-9ef0-42e4-a0c2-72d6930ffb6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 d129e89c-aab9-4b55-8d6a-f32bfd6c97c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 38f7ec8e-51b9-4207-900c-dfbde715b1b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 060a6ffc-351d-46e4-9c93-02567737b35f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 9a441511-2e43-4200-a5b2-6d565484893d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB2F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9727;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8B3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'hB2F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #827 c5f32286-7850-4136-9742-fc153a69192e)");
unit.assert_eq16(16'h9727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #827 3d88bc50-83b8-4b4e-940d-cd4f7880f348)");
unit.assert_eq16(16'hB2F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #827 155e3791-f174-4f4a-8cf1-e068cbe3675b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 fb9df84d-603a-47fd-9795-347ba0606320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 1f7aa51f-8395-42b5-a143-b691c3ef50bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 fed924a5-b415-48ae-860d-6f22af818142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 a26afefa-63d7-492d-984b-5753f1bea479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 7326b37b-ec31-4c50-b52f-67ed248fbfe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 8bfb5a4e-6129-4f4d-8873-a7b141673471)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDA45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'h1DF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #828 9733345c-5ac2-483f-b840-2c96872613c3)");
unit.assert_eq16(16'h0A87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #828 3510add2-e716-4607-9622-3071e5a61cde)");
unit.assert_eq16(16'h1DF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #828 fd22d41b-6ac4-44f0-9f00-920617e2034e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 8afcbf30-117e-4f9b-bc3c-090cd828cc39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 eef747a0-b66a-4537-b7b1-66a0d2182791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 2df66b36-63fd-4f45-8aee-7d98c6af8ca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 a01005d3-06ad-4dd4-a3e6-4f08bf6a425a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 6957bbf2-4eec-49c2-b030-2b47ef5c75ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 b3a0a4b2-6c31-4f1a-91e0-386db5ef8a77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8523;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC515;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h854F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h8523, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #829 5855f5e7-5920-4f7a-bc71-d69d5ac496e0)");
unit.assert_eq16(16'hC515, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #829 9df568d7-46d5-4952-b20e-2201cb8a1e9d)");
unit.assert_eq16(16'h8523, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #829 0369ecb0-dca2-4819-8bb4-4574e3d49994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 74ac1f1f-d51e-4fb7-b6c0-96bc22600b91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 c91ac659-da17-47ba-92d9-d09a474d4e52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 d13143d6-8309-4e5d-99bc-2e2584268a33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 68d7acac-c7ce-4ea1-9887-e1ecb1b177b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 89d1bf21-dc4f-4860-aa25-3dfe86210cbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 c8293690-d38c-49df-8242-7825f22896e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h72D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE68E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h72D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #830 273cc952-51f8-4ed1-8db7-26289e13a28d)");
unit.assert_eq16(16'h8DC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #830 239a16be-960f-4d3a-b9a2-8474dba0cb55)");
unit.assert_eq16(16'h72D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #830 f3c1c2c4-c2ba-4e43-aef8-839059a45c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 600170a3-95b5-42e0-bc1a-fbf5419fa5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 f1a2de82-fb14-46ce-a69f-0249f56810fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 821cd190-cf8e-49a0-b538-a5b2f13b6c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 4bc51f90-6de2-4e46-adc6-ac78afa63bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 132d9582-425a-4724-ba59-bd2cbc2e72d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 01a3598f-dad9-4b68-90ba-2e7edf0e73ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1A02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9264;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h1A02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #831 b5238af7-80b1-43b1-a384-2c29691d34b6)");
unit.assert_eq16(16'h9264, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #831 e7e25125-86cf-44a6-a008-68df98c5d489)");
unit.assert_eq16(16'h1A02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #831 480a4c5a-d7dc-43f8-82c5-f7d8a31e35f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 6d1795c4-1d85-495b-b4c0-a12e0d92785d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 3bf9c65a-ef05-4931-8f14-55a42e9a3cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 9698351a-c51f-406c-9504-aadabaa0c6b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 03153000-05b2-48f2-9094-983798cecb9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 bebac02e-fc45-4e72-ae5d-a27d9accc503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 6eb34a8b-18f0-4221-87c7-dabf10334ad8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD192;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC017;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'hD192, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #832 d4ab434b-e5be-4443-8bb2-1fd250c71f64)");
unit.assert_eq16(16'hC017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #832 fc9ba58f-364d-4345-9906-7d46d8e8e41c)");
unit.assert_eq16(16'hD192, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #832 558987cb-e816-434c-bdee-f5db3df2ba03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 61ce736e-aa22-42c1-998d-1827a8ed6e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 d52ea650-2229-40bf-ac06-edcb46dd4134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 cc2dd758-a1e8-4da9-a865-6cef7c3e4d20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 6e11318c-6707-4cf2-8cda-ab31ef747962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 2678a7d9-7e7b-4fdb-9f12-c0e931ca46e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 3e1b0ec1-ad45-4049-82e5-8cb95aa8be12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h982E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'h3F27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #833 09b23ec4-3ef1-4cfb-b57a-1ccc8e6028c5)");
unit.assert_eq16(16'h982E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #833 adae2062-85ee-4bbc-8875-2b3b370bd040)");
unit.assert_eq16(16'h3F27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #833 9d4c9d8d-55c0-4314-a60c-199c1c35b7f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 d2083765-ceea-45f3-83c9-b1be7dfd89d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 df3e450b-3356-4a8a-b1ca-31fbfacd1e23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 39ecfc2f-798e-4dae-a1dc-066f5c3bebc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 8f79a337-0dc4-498d-a362-99aa361860b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 39301a4c-a614-42e9-b69e-4df4b775a40b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 afe7af19-8d3b-4740-a396-dfb59fc5d5c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE853;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3737;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3662;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'hE853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #834 21aadc65-88d6-48cd-99b1-279573320c84)");
unit.assert_eq16(16'h3737, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #834 b9e5e597-0c5c-453d-b6f0-baec376400a7)");
unit.assert_eq16(16'hE853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #834 54d6b5be-8118-4b9c-b724-3f82fe9ba2b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 19e558f9-1923-4617-aac8-90ecaa61ddb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 d015131e-1832-46a4-b165-ba7f375db058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 be2d10a4-8a02-4105-b739-5fb796f3d226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 5c818cbb-46d6-437a-8eee-1472fe6d06e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 33b0a389-80d3-4501-a99b-03e77b5dd225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 82657d03-f66a-4003-8a0f-105066a7af2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'h3C70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #835 34da0906-7566-47be-a352-864b3196e0f3)");
unit.assert_eq16(16'h8D71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #835 d99cd48c-a278-4bfb-84ee-b8298e9b641f)");
unit.assert_eq16(16'h3C70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #835 3f7c62fb-c936-4e7f-a892-461d6856eeed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 dacfbb41-cf09-48eb-b31e-573be0a78921)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 b3bc7517-5227-4d75-ae5d-b91bdcb5a07c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 a3a6cb39-9d55-4a84-b73c-a157bfd85e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 7bac1635-5a89-429e-81cb-f93642906e80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 308f8414-283d-4f6b-9bf3-550d52e5568a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 f404582f-6041-4a9c-a6ca-a8351247e6f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1506;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8B75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h1506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #836 2d32825c-2304-4a04-bf87-1f630c3b399c)");
unit.assert_eq16(16'hEF7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #836 3bdcc9b8-878d-4e73-8e97-a426af6bf6af)");
unit.assert_eq16(16'h1506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #836 040763b3-9462-407c-8369-4606cc086825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 94408358-851a-4df4-8d3a-41dedf0ac3da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 2ae77348-fa24-41cc-b2a4-5e93a54922b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 6bbfff24-dbb8-4599-80e9-e971cd9ce63f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 9b939ce1-28f9-4e81-930d-e6ff784a35a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 8a3191e0-f09b-4264-8179-0c18ac5fa4cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 4dcc8324-a134-4409-bcbf-a1ae6cd5f660)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF495;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF9A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'hF495, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #837 81029074-7e0a-493e-81a8-6d5598be01be)");
unit.assert_eq16(16'hF9A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #837 df368354-7e6a-42fa-bf75-cf811401737f)");
unit.assert_eq16(16'hF495, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #837 d61a40dc-56a6-42f9-a881-e487ba20ef57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 e3e797c5-8e65-465f-b869-21832e9241e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 b8fc28e3-707c-4d30-98d7-34a6a359f18e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 74b51f81-517b-45c0-95ca-1ca7a39faf54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 ba642359-eba8-462a-bae8-d3f6393a1518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 745acabe-fd34-4ddf-86b0-ec350f2ce3a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 86673cf7-64dc-45a7-bae8-217818e6adbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4FC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4130;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h60ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h4FC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #838 7636eaae-88ef-4fe8-8d3e-e8be8a9e51d1)");
unit.assert_eq16(16'h4130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #838 0947daf0-c0f9-4e37-ae1e-b72b938f90a5)");
unit.assert_eq16(16'h4FC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #838 1a3c5b42-bba1-40b5-92f2-a78dcd16176b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 a2a5f88a-f70e-4608-b366-c71d67906d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 42f8d8fe-869a-4f6d-999a-0085ef00640f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 f764d379-dcf3-463a-a490-e3b5d11dc7b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 ac394050-8ce5-4e85-a51d-5034e6efaa79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 a47e1770-f0c3-4953-99b6-d3023cd24e81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 e09c9399-cfbf-45bd-9017-cc040502c274)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF988;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7941;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'h1B4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #839 8699d79a-c490-427b-b26c-557e760dcac4)");
unit.assert_eq16(16'hF988, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #839 ce3158ed-db95-47ec-9f12-69be4c0d6937)");
unit.assert_eq16(16'h1B4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #839 249cb3d1-04af-4270-9dc6-2a074a3d1316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 8db3713c-16cb-4b34-ac7b-2cd15461d006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 2d8dbb19-e773-4f5a-88d3-7f4916aebba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 377fbb35-ea8c-42b6-ba22-9009dc8aa5dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 718f6056-2564-4746-9d20-60985ed96dd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 e876c9e3-ed72-4dff-b7a9-00bfd742f29f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 40048b68-e48a-49a1-b49c-88158984aec9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF77E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h392B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'hF77E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #840 db35e5b4-5ccd-45f4-a878-54b8ff65d8fa)");
unit.assert_eq16(16'h6E4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #840 3e4d0e2c-43a5-4c6f-ba26-e65a807743e7)");
unit.assert_eq16(16'hF77E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #840 89b927d5-3d4c-45bd-9ec1-43da75eefe56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 4e1d286f-5eee-4311-b995-798c6bb648ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 ceccd279-d0f7-4e05-a220-7307afb5e45b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 4a07ceb2-61b6-4838-8341-e647ec854af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 22c8e261-39e9-4649-9a88-bd724423ab9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 ddf35a6e-7364-4686-876c-8d344af2ef93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 1cc6da07-0058-4933-92fe-a05eca6b31e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB3DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFEA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE34B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'hB3DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #841 53f980e9-7405-4a2f-807d-f15d30403f10)");
unit.assert_eq16(16'hFEA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #841 615ebfb1-77a0-4ef3-81de-deff91682975)");
unit.assert_eq16(16'hB3DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #841 d99440fa-6a25-4a43-8d92-15885a23d642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 87ceba7a-eb06-4ef1-9e59-7c94f9115a6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 6130e32e-5e33-4575-8c22-d48ca3512b6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 7a447c14-3dfe-4675-825e-d1308f1c5ec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 3d724109-2608-4959-8270-5b1f105b51e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 bac7bb24-3995-475b-b51d-96dd7e5fdf6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 30852e3e-7537-404b-94d2-9b309da663cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD2F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAB49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h63AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'hD2F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #842 e1c53937-cf3d-4475-bfc1-153d769f1956)");
unit.assert_eq16(16'hAB49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #842 8c545343-7fd3-419b-8379-10ff4a561c9d)");
unit.assert_eq16(16'hD2F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #842 70b1a62b-4d71-4fad-9d16-8f4cb98cb261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 26399a91-c5df-41b3-bfe5-21cf0f84eb9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 be73f360-17c6-4468-8b42-9cadf2737482)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 94b29170-4fd5-43ff-a55e-829e2f50c34d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 25bdde23-a2cf-41a4-9caa-174d925053f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 2190ae9d-d175-4de0-afdf-cdaddbefe0a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 534b0a34-367a-416e-99f8-cd2f26d2735d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7612;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4575;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC47A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h7612, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #843 501f19a3-adc0-4917-883f-aefed48f1022)");
unit.assert_eq16(16'h4575, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #843 47256be2-d187-4607-807c-082d608f4f5f)");
unit.assert_eq16(16'h7612, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #843 4b6c645f-c570-46a4-8573-ca0b89fa0299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 259f9334-d02b-4700-97df-054eac46fae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 aeb24a56-0c61-4955-afb9-ebc89ecc465e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 083ec779-88c8-4678-ad3b-66320f308d88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 ceda8d10-1d17-411b-96f2-d4ce5e150843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 7aa1fd67-1bef-443a-8f2b-bda93c14a46c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 368f86c8-09d4-4fde-a039-30f22d7ebd1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF157;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF05E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3BC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'hF157, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #844 33a956a9-7e76-4ff2-b0e8-54bdf717e0d5)");
unit.assert_eq16(16'hF05E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #844 d2838035-bc2f-4203-8828-f354277a8a10)");
unit.assert_eq16(16'hF157, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #844 3284348a-923a-4808-ad6d-d20da17e0314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 32555fe9-a9ef-4e76-9ca1-973e355990c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 e33ff9a4-3cf0-42ae-89e0-64508ae4b122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 c6a48a95-f70b-4254-815d-972aa9a85dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 3a7e52e0-5e46-4356-8702-0cd23bcf1064)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 568170ca-4b6d-422e-b144-85c08d17275f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 291351f9-9ae2-436c-8388-3dde11a9214e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h50CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'h8B96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #845 93796d42-e236-41d6-bff2-54ff58f9b60d)");
unit.assert_eq16(16'h3031, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #845 03a31966-4672-4a64-be28-0d21e9f4e7d4)");
unit.assert_eq16(16'h8B96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #845 ae23b313-a1da-4755-b238-0a1e8c22c624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 6ba29425-72c7-4679-9174-372aabcb067b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 85716312-9783-4acc-80ee-5ed82387831e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 71f6be1f-ebac-444f-89a5-b6983a27d07b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 54dbe889-f58a-4432-81f4-972622205abb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 d8de69f9-8740-4557-b6fb-61e790065a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 d7f2eabc-2050-457d-8eac-856227863bfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA4BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'hA4BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #846 84cefd57-1865-4a57-85c7-cf871e09e30b)");
unit.assert_eq16(16'h8B09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #846 7ce52780-643f-47ba-8ca1-77965485dd02)");
unit.assert_eq16(16'hA4BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #846 796b6fb8-db8a-4fef-b198-8a0e68904041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 c68d2ebe-d614-4cd3-bbb0-a4f9b00f91bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 36b1adb7-58c3-4eea-b47c-067dc826ee83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 5cbb2e13-5d71-45d3-938e-a7ee656dab81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 b167c13f-a9b2-466a-aed7-42ad9ef36014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 5c536055-aa90-455e-b95e-a6e370b4df7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 b0b91a55-94d6-44f3-9918-46a3bbaedb8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE75E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE5AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'h89A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #847 de287977-6271-4af5-a020-524bf17d8cb4)");
unit.assert_eq16(16'hE75E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #847 4913910a-6a51-464b-8cb4-d9ebb80954de)");
unit.assert_eq16(16'h89A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #847 2d3b5e53-cf36-4ec1-9efa-d3245fad2409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 2e942270-ff00-4827-8d24-89bfdf9770f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 a52ce6cd-eacd-4a79-9223-948b4d14b986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 81ad067e-0199-49c6-87f8-e7a987ed57bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 ce36b9b6-2315-4799-8630-1ab7a87fc32e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 52b1a41b-14df-4a5f-961f-3934f4e8012f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 e0327629-9b78-489c-8baa-e2c82f7aee63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h36D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD73A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFAD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h36D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #848 4eb20ea9-cf7e-43fe-989c-03482542a228)");
unit.assert_eq16(16'hD73A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #848 12d1dd7b-0e0c-47f0-add9-06a8c0d97bad)");
unit.assert_eq16(16'h36D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #848 29e0c365-2f5c-40fb-aea9-139bce98ff2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 e2734b7a-4a6a-4ae4-935e-092380f2e907)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 1a2ed436-9e79-4502-8f1c-5dcbf750c6c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 6d2c8acb-b00d-407f-8be2-d1bbc5874731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 bde5e8b3-2015-497a-8a2b-e7662ed93603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 b87fdcc0-2586-488b-8741-2ab6ef159a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 4612f64b-93bd-4033-aca8-18e76fed3620)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h12D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'h12D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #849 f4177772-80b3-4ec0-a8a3-82719d8cfaef)");
unit.assert_eq16(16'hFB19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #849 645f7913-98f2-4921-a869-2a62c48f38dc)");
unit.assert_eq16(16'h12D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #849 a9dd548d-2645-4dd1-88eb-64e2cb588e03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 6390e489-5970-47b6-a49f-8b09a7b803a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 58901614-840c-4f55-9606-f2a71f32c8a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 218a2474-0b81-465f-ac7f-f6258447f17e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 ffa432f9-8677-4ac3-9abc-b97d9f8424c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 30e0f55c-11d3-44db-b084-8e37f522b866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 329c2258-49fb-4fb2-83ab-92d78e989700)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2275;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA02D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDB5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h2275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #850 567546ce-93ee-4dc5-9a57-cc4be8b4465c)");
unit.assert_eq16(16'hA02D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #850 4756da5a-8924-4bca-9d24-abe6814c7306)");
unit.assert_eq16(16'h2275, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #850 1f3210ae-c46a-44d5-af32-fc9939c0f8b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 960036e6-c4fc-47fb-b345-14e884393da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 25a86e61-e6ce-443e-b497-1f1f24626e1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 48e9e409-7333-48e7-827d-b8afd89d9ccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 5aa5e134-362a-4031-8492-3c4e1be9e185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 48476081-4642-4f1d-a761-6294df86b019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 1ac61728-661f-4528-bed0-52f9f7d43530)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8969;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'hAD77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #851 cdece321-a3aa-4bff-bfaf-b754436ba121)");
unit.assert_eq16(16'h08B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #851 db86b11f-7815-4bab-836c-98f72734c033)");
unit.assert_eq16(16'hAD77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #851 1ecb993a-f27a-4efb-8274-5572cc3cc6dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 3ca4d4ad-e337-467e-865d-ad7302182bc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 77252409-cb3c-4534-b9f6-e6facbc740ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 933a6ebe-daa7-4488-ba1e-9a222a847af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 3c208b0f-75d2-4b60-b2fc-55369409b3e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 8a52b7e9-7a05-4490-b62a-7bd68889f013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 a6cc0753-45a1-4a14-99b1-05a0090736d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h276E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB649;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFADD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h276E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #852 3d2bc09e-f140-4ef2-ada6-3bd000f6f140)");
unit.assert_eq16(16'hB649, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #852 7a95ad67-3530-4093-a87d-6b9989d05678)");
unit.assert_eq16(16'h276E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #852 ec3d4126-3a17-48b7-bcf7-30944d19713d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 283077eb-17b6-4ff0-b18a-a31e7875c8b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 ff868530-dcdc-4f49-8149-515be9420afd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 05affb09-5810-47b7-9d4d-d69e1cb202ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 9e3a7861-c25b-41ea-8200-64482439e961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 52756b0d-00f0-4c8e-85d4-0c3471fbc848)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 8d88650f-5ab9-472e-af68-c5850945ab90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC059;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #853 f606b552-1c18-4f7d-af72-0689c183692c)");
unit.assert_eq16(16'h7D2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #853 c011c5c2-b592-4bf4-b08c-6de670320182)");
unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #853 3e022dff-34a6-49d1-8bd3-f265f193b07b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 69650e70-0b22-4cb2-ac59-4e82c8f748df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 5d2f1afe-ec1f-42d8-9e2f-f4c182fbdbc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 406c809a-7245-4f0a-9e14-fa5497810f62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 fdeb1108-4ebf-4c8b-a596-2563eaf4a820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 22788ac4-d548-451c-99e0-0c0bbceaea77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 f69f2c42-aa93-417b-81f1-0464ac808726)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2403;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h885B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'h2403, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #854 c4fd1c1b-8d89-47e4-8798-0e7a7c0c7e62)");
unit.assert_eq16(16'h4EE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #854 014eb9ce-9ca8-49d9-af83-4edce22acc46)");
unit.assert_eq16(16'h2403, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #854 4d6e8ad5-bc49-42df-8d10-279a15f12925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 34c8c0ec-c0a9-4d71-ac44-629156908bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 254118ef-9e57-45ed-a186-07c93ff4c4fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 de5e681d-9d6b-4fbf-8868-84a4cae32a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 94f9b393-b1df-4447-a568-03cfaf219ece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 62de5291-3c7b-4cbc-aa5c-d4f125f0c71b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 803f7c53-c631-4cbd-b8b9-88e5073a50a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFE2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF3AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'h1DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #855 4a97c7c9-6eac-4a79-aa2f-9ded4194b77d)");
unit.assert_eq16(16'hFE2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #855 151366e9-ab75-4f9a-8c54-4d4e71fd1566)");
unit.assert_eq16(16'h1DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #855 73ce57d2-6221-4ea1-ab6b-a30c898216e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 90248937-073a-4634-a608-d82cf601e5d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 cf539fdc-206f-458c-8196-4f96eb71f119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 d4058153-611e-4bee-8ceb-7e9db0d020c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 d1bf8877-45fc-4545-adba-6a1a2f9384f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 9bf92684-08d6-42c9-9230-7da5083a04a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 d3a8e8c8-9307-41b9-8373-b0bae4fa47b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7161;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h63C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h7161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #856 74625b8c-71f8-4ac8-abfe-4e0cba89faa1)");
unit.assert_eq16(16'h63C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #856 64ac2a0a-197e-4962-a01a-3c7a36f159c5)");
unit.assert_eq16(16'h7161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #856 6d07a3fc-98ea-4363-aff2-a8ea16af8081)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 d92b151d-567b-413e-bec1-32f6c34111a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 908d1238-8336-4430-887e-8c4ad6ef033e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 5eda1b9c-e486-4e11-bee0-bc3a1749541f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 30af1887-569c-4713-ba51-a20e4fd1de19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 60262d73-b32a-4c78-b7b7-ddcd3df3e892)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 e3e6b5c1-4356-4486-b2b9-b83ba84e88e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0948;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF080;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h04B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #857 e1c615f1-01b0-4d87-8780-a027e86fb18a)");
unit.assert_eq16(16'h0948, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #857 b9896541-42f8-411e-9064-4d22c21b5796)");
unit.assert_eq16(16'h04B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #857 05b7551b-7ca6-4b71-9eb0-fd1636a04741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 2e5d169a-c8b7-4e20-8b14-240a1cece10a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 ff775530-b953-48a0-aa0b-5efbae10e0a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 e930afb1-b7a5-4ce8-b44c-0c0e46f83240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 e08f73ac-b6f8-440a-9581-5435a84eb4ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 a5d6f8a9-c28d-4967-8115-d68aba29cba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 58170c94-c62d-4217-bf66-6b93451a4955)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h243E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'h243E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #858 8bd05d9a-0ffc-4582-9145-6245ad7b72e1)");
unit.assert_eq16(16'hDA62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #858 94c4fb3a-70b4-49fa-a91c-9de6ac97f589)");
unit.assert_eq16(16'h243E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #858 ba7ab42d-85d3-4d69-9bc7-34f7888fe881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 7bb57d4e-7026-4d77-a2bf-19e2e1a383f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 fc365041-efbc-48fc-bbc8-f4aec1122939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 3c3e63b2-fba4-4013-8660-7126eca74879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 4be1874a-a35d-430f-b396-b0f0725444c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 efe270b4-372d-4ec1-a768-76f3e6a50b86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 0f64bf62-11cf-4ace-a017-54fa41dffa4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9667;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h24E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'h9667, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #859 5640092c-8fa8-4741-9dbc-c116c11b176f)");
unit.assert_eq16(16'h24E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #859 a48212a3-b57f-4207-8fbe-69b7a747f7cf)");
unit.assert_eq16(16'h9667, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #859 ae1080f6-b3cc-403f-a08e-bd85990872d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 bf3eec7c-4575-42a5-911e-eed1df1dcaf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 61acf8c6-5388-4ce9-975b-c2c4ee46fdc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 c4a5d5ed-5644-46ba-ac6b-a7c6cda4673b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 43425838-91b2-4b1e-a973-06adba8da38a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 f7b30fb2-bb17-4c04-9dcf-d1400aa92e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 ce45015e-1e47-488a-95d0-337c8d59f668)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h46E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1839;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB604;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'h46E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #860 56e83cae-03f0-41a1-8396-d355279b3bba)");
unit.assert_eq16(16'h1839, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #860 49f59d8f-3d0b-488a-a647-aa5eed9cffef)");
unit.assert_eq16(16'h46E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #860 8334a6ba-5461-4df0-9ff8-e9f6a1a87cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 da2b4e69-0d2f-4eeb-8d9d-fc6f4fc5be89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 1f94180f-1a99-4445-ad11-08f5704a6e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 82cf77dd-3669-4856-a9d3-a28e7de60656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 11443626-6239-4e63-b3ec-1e75bb47ee93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 82df01f1-5861-4b0d-a5d9-bf45c75e8f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 8a8ed273-a51d-4da1-b9e6-63f710d151be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6C7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'h1B9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #861 fe9c4bca-a9e2-4390-9128-9abfd4fc8452)");
unit.assert_eq16(16'h80E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #861 96c6c6fc-d174-43fb-8e9a-348fbd70cd6f)");
unit.assert_eq16(16'h1B9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #861 e7f22dfc-faba-49c6-8251-b9d3db314632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 35c93e13-10e7-4074-92d2-f2419cd7b315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 8048659a-4ce7-4dc7-b024-2e176f6e0906)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 72462830-61f1-42ba-92cf-8e313588445b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 3f0d162a-d076-4885-9fdf-8c1d80ab56d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 d6b2431a-c57f-4177-875e-862f4dd77303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 c912ceb7-2d12-48b6-b479-b6c1ec737965)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1399;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD623;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'h1399, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #862 9d86570f-1043-4355-934b-eb1c0afed2f1)");
unit.assert_eq16(16'h6B42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #862 dd6e647a-3672-439e-a714-6b2b05c14972)");
unit.assert_eq16(16'h1399, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #862 e789580b-4e41-4484-9ff9-4db3845c7bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 37cfcbf9-3cd8-4227-b3bb-c2da324c3ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 8e979a52-6ae3-4f6a-8fcd-ee7e5a84f262)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 98589dd6-8af3-4cd4-8b0e-d90ae601900a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 740f4ce0-06f0-4afa-9517-e14c14066bb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 fdcf80fe-8b4c-4b2f-b15e-48fd9c8e23a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 1f9b5fbe-c6a0-40c6-a46f-156b019f162f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h28F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7114;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'h4F73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #863 c51a1684-5125-4fcf-8a2b-3c25ec584c82)");
unit.assert_eq16(16'h28F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #863 0ced8390-a5b4-41fb-bade-422a997ff77e)");
unit.assert_eq16(16'h4F73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #863 26ab77d9-7997-4803-b83c-c68ffce5cbe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 6f73bbe9-b06a-4e96-ba7f-499c38b4fb97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 b6c9e2f7-b83b-4ae8-bcee-46ebacf2c732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 4ba7d7db-8708-40fd-9ac4-1facc32e2857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 de7101f0-d82b-4f52-be73-4a769f1eac26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 7ef12504-a7ff-47d4-bfbe-17f01a122b27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 01045dd9-90e5-48be-bc9c-ce631486030d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h82D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA456;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'h82D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #864 6bc7d59b-1aae-4409-bdde-967fa992d1aa)");
unit.assert_eq16(16'h9E95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #864 98dc5f0b-ac34-46b9-8e6a-dc0ddf63f7d1)");
unit.assert_eq16(16'h82D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #864 979757ce-d3f5-4321-b8e1-fc1dd16b4305)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 ffa4aebf-3f25-462d-9a2a-e6082c335d21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 7d878296-8bf6-4063-acb7-0a8bbd6c0091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 94a8289c-28ec-4aa0-9fea-59c7ad367cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 6573e0ab-4e1b-4aa2-b818-428987f4141b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 a4744fed-76cb-43bb-b6cf-c5cd1c233023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 3ff5c7c4-8e70-4cc2-8e31-b88b3fec38bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC107;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'h8E31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #865 0d0d4302-bc84-45cd-9d80-907f0b743338)");
unit.assert_eq16(16'hC107, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #865 322cf586-2fe8-4822-987c-bd462ecf8170)");
unit.assert_eq16(16'h8E31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #865 0df64ea9-c206-4b87-96a0-e76741d1e23d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 0bec8e60-f465-46da-bda3-3e1ea45d229e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 5ef94dcf-b841-4bab-bb77-a4f890e52716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 c1f05fdb-899f-40ea-9801-907135d4334e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 695a74d5-13fe-4ee8-889f-d7e4cbedf1c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 a2c947ed-3328-4658-a49e-8b359e43a866)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 748210fc-d422-43e1-8d0f-3625112b4113)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2789;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDECE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h291C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'h2789, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #866 74164e5d-3ea9-42d0-b59b-622f87b8262a)");
unit.assert_eq16(16'hDECE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #866 ea4d1d9c-0a52-4dac-a664-ec2499e22515)");
unit.assert_eq16(16'h2789, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #866 4d329b5c-f9bb-470e-b8c1-cbe52c8f5154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 bf05ad60-6e9a-4eac-9db3-6fdaecc454d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 1cf60019-334b-45a8-8225-ee2d09d9d605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 d6322b25-7901-4f4f-bc80-81be2ff0f2e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 124159d7-6434-4576-9e67-3734889f12fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 d322dbbb-bc86-40da-8e53-36d22911de56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 2dd9e005-b8c2-41f8-acf4-0d77dcff7ac7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4912;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h4912, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #867 7657f706-65c0-48ff-b165-dfb4bd2dbd60)");
unit.assert_eq16(16'hEF99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #867 f1418158-d208-40ab-a031-21c3d33cbc9c)");
unit.assert_eq16(16'h4912, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #867 21ad1cbf-78d7-46c8-accb-fc9a5e0a10ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 c9a27357-b830-44ef-8e80-9430e22f2f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 c8e56792-2ce3-4c0a-a827-1b0e5fb70961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 3f5ed50c-f54a-4e5a-b110-19e045908297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 c55cc217-ad75-4017-9dff-ff9c7ead853e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 04f38cb6-9ea3-46ae-a424-fa1497d57bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 5d557d15-5027-40bf-b53c-b8275c18a078)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD25A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'hAE72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #868 920dbe69-0804-49b3-9771-8a0e90c28f8e)");
unit.assert_eq16(16'h2DD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #868 211e7f99-31ae-4610-a212-464714aa780f)");
unit.assert_eq16(16'hAE72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #868 a9cf17b3-7384-464b-89e4-5f8c4acaa85c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 e9aba32c-2483-4ffb-b7e1-1c351ffb5a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 e9210392-a7c9-468f-a91a-fd2ca0e6e378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 cb9fa1f8-ddef-49c3-a5a5-ccf0dd3dfeeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 abf4bb62-d8f1-4af2-a0ae-d043a74d9193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 334ad3f4-53c8-4b33-b4f8-6fd66152e046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 ddb4a202-9b59-4942-90f5-189d5cf7dcaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBDA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h91AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDC5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'hBDA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #869 994f3199-1621-4dbd-a631-8323456dcfc9)");
unit.assert_eq16(16'h91AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #869 275588b1-06e9-425d-9a34-9a2e3a08fd34)");
unit.assert_eq16(16'hBDA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #869 7c8c557c-f810-4e99-9ac0-30ac283480f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 600f7b16-ce89-4408-99d9-bfd5eff207d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 65320c67-eff6-4396-a496-09e6b2bcb8d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 e26c68ff-6683-48eb-8040-3cf2f94c265e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 32e223c2-176b-4ae1-a17e-9829ce267d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 24b05d11-3eee-4579-b8fd-11d464e4503e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 7723ac91-60eb-42e4-9c8b-81eae5fb1ca7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAAC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2A02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'hAAC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #870 685836b3-09b8-4c59-bc90-db14672ca613)");
unit.assert_eq16(16'h2A02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #870 2ecc2907-1dd5-4b3e-bbd8-76bf477c4bca)");
unit.assert_eq16(16'hAAC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #870 30a78bba-af4a-4a4c-82fc-94b04e9786e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 6fd20124-effe-4ad0-b03a-c239fa858c66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 aebed2d0-28cd-47fd-912e-b7e97a04def5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 7a101787-f473-4971-9e8f-71eedcc7fc9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 366f9407-59f0-4288-b0f7-d6056a3d2cbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 da7c3f06-162e-4712-a67c-038491754ade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 15679ff0-2a68-46ce-a697-2e17a861a00d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD61A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7FB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2BAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'hD61A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #871 f81cb01d-3223-41f0-bd3b-3930d96527da)");
unit.assert_eq16(16'h7FB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #871 796c6acd-6a3e-4765-bdff-101742b97ae3)");
unit.assert_eq16(16'hD61A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #871 a9ea761d-e3e6-4af2-aecc-806302352380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 09884c90-490f-446d-8aec-2fe84d32324b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 4ff8842c-2150-45ca-8b0c-59d2c8624f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 8fe921e6-ed07-4009-9f54-fc35629e88fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 3323c95f-f48a-41a7-9666-d5543df5d420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 edc771f9-73fa-40e8-bdab-d57be9fe40e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 9180667a-62a7-4976-83f5-5b4f99873675)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8CCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7CAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2015;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'h8CCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #872 efcf5651-6352-4d1f-8bd1-802352f567f3)");
unit.assert_eq16(16'h7CAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #872 f135632c-46f2-4e1d-8abf-bc36d959a38c)");
unit.assert_eq16(16'h8CCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #872 68225e67-15eb-4634-b164-8c96dbf76ceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 d0197091-c5e4-4588-9e6d-7b0d7d0743cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 00d96e7f-cd9b-46ea-ad3d-44c5a97eca1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 85154ff3-2d70-4925-93e5-93c6c82b1575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 1a3151a1-80c7-4ce3-bbc3-f868a21238c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 eb680b60-d36b-4d5c-996d-1a885ad79ce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 956f5580-d746-4951-9e50-73ecead4877e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA3BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h52CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4614;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'hA3BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #873 548dabb6-f5a9-4338-bb38-c4a4e2b92d5e)");
unit.assert_eq16(16'h52CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #873 f1454131-7c61-4339-953e-a0e7148aaa48)");
unit.assert_eq16(16'hA3BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #873 3775d91d-811c-41e6-9db4-3b188d56ef73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 db797bfd-73c7-48a1-94f8-1e5a17decde1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 ba2ea45f-e001-4db8-a11f-47df1efa7753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 6df2c604-b6e1-4c0f-853b-127069102c2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 326e8c20-e17d-4b5e-80c1-b25f31414f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 8e3b0014-b868-442e-93a1-99bd00fd1053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 c8801db2-52ce-4b46-9a77-e252464e7705)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h368C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6129;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAFBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h368C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #874 96cc6f3d-d37b-48bd-b246-40536fdfa4f2)");
unit.assert_eq16(16'h6129, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #874 797a35ab-c5bc-4b3d-996b-94c61b75e3ba)");
unit.assert_eq16(16'h368C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #874 01f8faf6-41e0-4349-b5c4-bac2171a93da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 576686e9-de1d-4809-bba5-72cba725ae6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 d288f8ca-2f46-4027-a214-36a713e9a558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 46dd7e97-8d30-44c5-8c7c-8abaf46bfac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 9b24b0cc-fa00-44f0-a964-0c22e16933db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 3b994bab-9b7b-47e8-938d-18484490335c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 22b47d09-9232-41c7-a6bd-957ba05f8018)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF802;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0348;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'hF802, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #875 6c6b6ba6-1fab-4118-801a-197aa473aa5b)");
unit.assert_eq16(16'h2F8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #875 852c7519-c478-43e8-93f1-a6802c01ab92)");
unit.assert_eq16(16'hF802, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #875 8c8c8cca-561d-4c62-9133-81605fdf0674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 2f613cb6-16c1-4a11-b3af-16d9c0562249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 e5465bbf-6a2f-4012-ac8b-5d0cc33aed3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 e122e4a1-316d-4710-89d3-730c9ab79d2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 af89c6c7-dbfc-4326-be76-08fe5f5f84ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 83e85df7-8223-4923-a8c0-60e3c349aa86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 a72c9f9e-d000-4f9e-ae57-28b4dc9e19c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCD4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB914;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4603;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'hCD4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #876 dd898478-3ef8-49c9-89f2-4809cf72261c)");
unit.assert_eq16(16'hB914, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #876 f15d4bbd-79c5-4353-9ade-48bb2ba3c406)");
unit.assert_eq16(16'hCD4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #876 7e30e75f-aca5-4ea5-b611-0010d668e833)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 ac54edc3-31d9-4666-b905-8b5601b0021c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 4dd6a63a-aa96-45a6-9af8-c6dd4ad81bf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 46dbb6c8-87a5-4fc5-b244-c8494f9412e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 9fec4abf-1b24-4e64-a36d-4e53f88a9e8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 0cfca5fe-4c3d-4a6f-a0a2-4c7c1cc8f473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 ed7560f2-1cf4-411f-a507-862d9cd4876a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7319;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'h7319, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #877 d7b9f19f-8ee8-4a21-bb0f-04179823198f)");
unit.assert_eq16(16'h8E4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #877 4a55b0dc-1ece-489e-87aa-bfd470f5dc5d)");
unit.assert_eq16(16'h7319, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #877 d9838f36-2556-4f36-8bf1-ece2635fee6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 1ba43eee-d87f-46e7-a47c-e0a3c72cea99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 0625ecdf-9b6f-4b3f-960e-1f0bcf436298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 1759f3a4-b0cb-41f5-aa47-bcaadc8753ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 35b71816-f9ee-44af-b952-2f8290b1c9b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 f890ae0f-8f86-4b47-a92d-5f79833befe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 d304b4ef-23fb-4570-8a1f-845baae1d175)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9847;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4915;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAD15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h9847, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #878 8dcf7a15-f4ff-4b17-bb2b-265cb11218b5)");
unit.assert_eq16(16'h4915, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #878 db21d0e5-2457-44ea-9ee9-521f83b1dec8)");
unit.assert_eq16(16'h9847, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #878 5fcec02d-62d6-465d-aed1-2fb6910014c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 69cd0847-05aa-4db0-b2f9-71454b8025f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 e3f559e1-2879-4129-9641-8065f2503044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 52f53eee-f302-497f-a6d6-94990a74d1f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 4e38cbe4-81a3-48d3-9bc9-6963b4e6cee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 6e8674fa-4bb2-4244-b86a-749f19dbe314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 70170110-df58-4ffe-b553-515685791cd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0016;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF96E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h8D01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #879 13db1369-f33e-493d-a902-66938e11ca14)");
unit.assert_eq16(16'h0016, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #879 4998e21e-9982-4858-ad47-363370cd4918)");
unit.assert_eq16(16'h8D01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #879 7e6d8bf7-aa37-48fa-99c2-13e40e5eeaec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 fd81c8be-b46a-401b-b4ef-47de1da9e9b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 7bdee971-388c-4588-aa6f-39184a64fe81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 ee07b3bb-f48a-4631-a28c-e0d8d999ceaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 6085a449-754c-44a1-84a6-b8f5702e6332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 6dab75cc-9a78-4dfc-8fd7-99f57f06775e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 d8c15c4c-136c-46a9-aaba-d6b678f0c3b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4141;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4DC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'h0F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #880 37163fa2-b4a5-475c-8939-1c0432781272)");
unit.assert_eq16(16'h4141, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #880 a45fea1d-bd33-4529-b489-00cd32a10c23)");
unit.assert_eq16(16'h0F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #880 a5f6dc1f-b9ec-4494-bab6-8c7f296cfc47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 7a2e2dc4-1566-4a81-9883-229cc24fe450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 e9991192-60c9-46fc-9a26-1c30e39ed773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 9ca8c2b8-2ec1-426a-8f92-10ec721cbd9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 667c68c2-9ed1-4ac6-87ed-72603103c02d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 5f2bad3d-5d38-4084-b7e5-cb820ffdb60c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 7809e8dc-2703-4305-96d0-19f3f8e07b4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2FF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1311;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'hC1D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #881 11641b75-cf16-4cad-adfe-49e3e63dc474)");
unit.assert_eq16(16'h2FF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #881 0a8577f2-00b3-470d-884f-23588f042b92)");
unit.assert_eq16(16'hC1D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #881 fbdef9a2-6f4a-42d4-9dcd-d2ec6d156e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 6d8c20c8-37a9-45a4-b039-d52a2aad67d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 ba7f51d9-30b4-406d-8e9a-fc793065ec56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 03c1d267-2e70-4b68-834a-3a0cbd3412e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 9e5acbbd-46ea-4120-9d36-7da25bbc567b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 f774a049-6ea0-4be1-82aa-a878213c5c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 2b617401-f451-45b0-a080-73bf3aa83ba1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB722;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'hB722, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #882 13507800-cc50-4c28-b3aa-8a2e23a4f8bc)");
unit.assert_eq16(16'hFD4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #882 5b0baca5-aa1d-4450-9a51-5ff3d328095f)");
unit.assert_eq16(16'hB722, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #882 5ff7c4f6-96b3-4c9d-a770-d5044040c4af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 9cce70db-897e-4786-b7ef-60eea90669c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 985aba5f-f72e-4b9a-b5bd-790f68f58e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 69dc8005-29cc-4742-b9a8-0e7585a018e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 061d582b-3a0d-43ef-bad7-fe809db68ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 d739aa5f-42d4-47a4-a690-b54a7a91ba10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 e8b41a69-ef7e-4b7c-9ec7-815a7e7e0428)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD0FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h615D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4498;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'hD0FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #883 fa34b017-9c08-46b9-8e0e-7ae6da6fad8a)");
unit.assert_eq16(16'h615D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #883 d8bad7b3-6b60-4bf6-a83b-35c244d41819)");
unit.assert_eq16(16'hD0FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #883 0724595d-201c-494f-ac4d-eb7250757499)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 c7c64a2e-6533-473b-8ebd-3cdd58220cfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 cfb1a570-7190-41aa-a5a9-8176561e693f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 02f05ca9-fef5-4a2b-8dd0-ad71df7b18cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 523707cb-16ae-49a4-b988-90dd74b65e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 e0858e2e-7546-455d-a128-8485d69ece54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 16784997-5659-406c-9cf8-2fa3283d5f2f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF4F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4974;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5FE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'hF4F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #884 20a07e3b-858d-409c-95eb-c46075caff2a)");
unit.assert_eq16(16'h4974, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #884 8a75b879-ac38-4a06-998a-a4f5073a5398)");
unit.assert_eq16(16'hF4F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #884 6111d63a-8419-4aef-9c19-22275009c9ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 4f559082-fc81-4b1b-ae37-b5f6d2aea324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 12940314-41f4-4c6a-a643-bcbfa40bc8a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 63d1d625-27c9-4578-b142-0e21bee73e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 fd35985f-02c9-452e-97b3-165eec63d601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 455148b6-38f2-4f8c-8a89-2b257e6c1986)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 25ed36df-6852-40e9-9597-5b079c0b19fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h93F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5FD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA85B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h93F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #885 1f9428d4-3f46-4de4-a32e-77f4a90bb109)");
unit.assert_eq16(16'h5FD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #885 6bd55386-78f4-41d6-ada4-7b2221df2306)");
unit.assert_eq16(16'h93F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #885 ea74a403-33d5-4cc7-a316-94f8332962bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 8c5eeee2-75e6-496c-be49-ebbc129536e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 24868a28-8e9d-4d4b-ad44-698b3a732cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 16e67c62-e2ca-4dfa-b9d3-392bdcfc3adf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 6148437d-f287-4f68-8fc2-3a744d251e8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 126677d3-040f-4ed9-996f-bfdbdf9448c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 866bbfe0-0f49-4eb8-9a5d-d8bbc8697664)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h398C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7492;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h398C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #886 2d8f12d9-ce31-4a9f-bd37-e39a30fb2e41)");
unit.assert_eq16(16'h3EBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #886 0d8f2918-ca5f-4072-88be-c0aed8f2887c)");
unit.assert_eq16(16'h398C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #886 8ecdb1d1-bd54-46cd-96cb-90fc56a0ead9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 168c1044-5ffb-4355-8450-dfbc425c7132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 a167233b-6064-4e5e-b676-8a5d4c6aa06e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 90dff27f-4e69-4414-882e-74d1539eb93c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 94929b1a-b3a6-44b7-90de-62bc761e18f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 27678ed5-9277-4b70-9801-2a1b21128975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 788e7a41-173b-4093-8213-22d81ebcfe20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h38A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD320;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6440;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'h38A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #887 3b86ff0e-895e-48c1-9759-6798d0a4b0a5)");
unit.assert_eq16(16'hD320, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #887 ed5a00b3-17f1-4929-bd3c-dfa55fbdb231)");
unit.assert_eq16(16'h38A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #887 5cdbb8c4-498f-4d51-9ede-15b9f7e03a63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 e160337e-70ca-483f-b56e-8096a0d0978a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 83bb8e0f-2b9d-451f-97a7-58cc4202825e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 173d6a95-d048-446a-8164-f6f0fb5e9e6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 f5eb2f5f-e0e6-4f94-bbb0-113ccf03bb46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 73f6928a-21dd-4190-8f94-8df087276080)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 51a15dc3-e757-49ff-8f9c-0a3dc62c5eaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAFF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA47C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'hAFF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #888 1155685b-8bd4-471e-af63-c9ded14efb27)");
unit.assert_eq16(16'hA47C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #888 12021965-dc22-47ad-996c-d0de972a0838)");
unit.assert_eq16(16'hAFF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #888 6ac8a92a-5997-4efd-aa71-3bed8d156747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 fd25b398-3bcf-4c6f-8276-494d5651f2b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 2c444b3b-2760-4ee5-aede-360ddece4c73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 727fb26d-faf0-432e-ae8a-7d9f56ab5038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 4f1ba8fa-82ff-4aba-bfdc-941300ba078e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 19c8f07d-d552-445d-8096-07283aa8dfd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 6c77e42c-7f1e-47ec-ac94-50f70459337f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6032;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCD77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'h9B5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #889 785f062c-9c23-4c96-8b1c-46b576f734d4)");
unit.assert_eq16(16'h6032, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #889 4dc698b8-82ad-4b34-ad6f-1f7d171fa963)");
unit.assert_eq16(16'h9B5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #889 ec2ec511-a3c8-4b61-b87a-81204b976cbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 fe359c77-3336-425c-a6b4-80c9d9525d5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 f01df66f-1c4a-4529-971b-e81a15aee785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 1b7268b2-50f3-460b-ab1f-b2acac809b5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 edab202e-3e93-4d6a-9589-b573af915a63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 3b80e462-5c23-4956-b75f-a794919f6306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 c3161268-0e47-4d49-a636-a605da615a61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1744;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h85DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h917B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'h1744, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #890 58e854e4-ba62-4d67-b45c-a4b51c1e8303)");
unit.assert_eq16(16'h85DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #890 dad01d90-f545-437b-bad9-3abe79957329)");
unit.assert_eq16(16'h1744, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #890 c0f35388-4ef8-49ce-83c2-de535116c6e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 c6eeb3a2-1845-48ed-9342-6d0b73f2e5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 e6996d97-e01b-4ab7-aca2-c959a174e0cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 9a1b4110-de4b-48c5-9886-9835a7bdb056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 76208832-6a44-4dc9-be67-192bb98bce6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 6effea11-26dd-4bb1-8dcc-3b7a71f7d66e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 574d0b2a-46db-4609-8750-e2089843c50c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0ECA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5755;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'hDB21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #891 02c94e56-cac2-4963-99a9-14ea8bcfbfc7)");
unit.assert_eq16(16'h0ECA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #891 c14d5a43-5a5d-4e13-b00c-20d02e72e87e)");
unit.assert_eq16(16'hDB21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #891 9ab2afd1-1153-440d-90f8-8bd54d9be881)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 3d44cd2a-0dd4-4cf9-b2c3-eb949bccf2c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 833d3c00-b16d-4f55-b4cc-e24c9cf1d718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 951fe3a1-481a-4f7a-8da7-8880e34ed447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 bce34ec2-0b99-46b6-9796-25d0e7e60acd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 185e5546-3913-4f93-a4c0-cb9f042ffaff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 901254e2-93af-49d5-8d16-e6c5b9e28e2b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0029;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2DD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD0FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h0029, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #892 4d5c98ba-ab95-416c-862b-9bc35e840933)");
unit.assert_eq16(16'h2DD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #892 21a2b3e3-9361-4c91-8912-09dbb84862d8)");
unit.assert_eq16(16'h0029, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #892 73cbfc86-bef2-49cb-9293-c9c4c8719a1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 1a5961c6-9650-4a42-9d11-d4cb7914d99e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 fc1ee474-5837-4b38-bc85-e4d0cdcddca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 641e7140-4d3a-478a-847c-8ed5b3bae237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 20d97876-dbfa-4313-baf1-20fe23b628c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 b8b20f4c-827c-4b76-a619-4834f2110834)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 ae9c3974-7ea5-43b3-ac65-b230c8f958ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4034;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1FCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE58C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'h4034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #893 7836d979-69b0-4b9f-adee-771fa450c84c)");
unit.assert_eq16(16'h1FCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #893 62913ed8-e029-4f02-b9f1-136f5c4f131c)");
unit.assert_eq16(16'h4034, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #893 4e6f8b06-b059-4dff-9d72-99d055f1b472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 be9efde9-bfc2-4d42-973b-2375a3c186cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 bfbec34d-5714-47e9-9711-8cb0e3b6a3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 2c38ed68-8b5d-4c0d-9592-266d4bfbff81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 f54a6700-26b6-46d8-93a7-1ec3e2dbc22c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 07fc24a7-51db-48c5-9f3b-6070779893f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 d62c59ce-c687-4a5c-823d-da36b16f7ce8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD8EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h26CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'hD8EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #894 6b9fa83c-3a73-43bc-8514-7f952f02ddad)");
unit.assert_eq16(16'h26CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #894 9eaf1981-ca5d-434f-b19f-aa34a7b46f7b)");
unit.assert_eq16(16'hD8EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #894 86de3c28-8b29-4ae1-8de3-1e232addf646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 0d6435b5-b2d4-4b81-97b5-32231ca80a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 3c7a901b-a219-4517-8755-b9ab3ae27b6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 908b0fab-2ce1-4584-98aa-161afb8aab5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 81877cb1-a62e-416a-b5e7-0994659ec90e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 8d3244dc-2b8e-4a8d-bbca-d3301e2f1d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 fec00254-cbdc-43b7-88e3-73aed5bb34e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2DD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h44F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC835;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'h2DD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #895 52d880f4-9bd3-405f-b62f-f6a79436ab10)");
unit.assert_eq16(16'h44F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #895 b11449e5-9b20-4a6a-b085-10194d7c1459)");
unit.assert_eq16(16'h2DD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #895 32f96256-7156-4bcb-b9d2-2e63c8148030)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 925ffe00-21b7-4b73-9528-b6dc04ecb0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 29f347de-7160-4908-8561-d8bde73845dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 2ad8385a-2466-4cc6-9404-e638b86c77f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 72eae15e-68b1-4b32-8fec-093c403512da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 36e467a5-d3e8-457d-8281-cf507fcdb263)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 c84d7049-4885-4f21-b7f5-4115d2d50e1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7FC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h504C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'h7FC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #896 47edb0f5-a365-49dc-b6c1-5812835d5fd6)");
unit.assert_eq16(16'h504C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #896 72ae342f-1516-46ff-98ca-ca8aeb8a860e)");
unit.assert_eq16(16'h7FC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #896 4780b338-5d14-4c23-b3aa-81ccf466841f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 df74569f-0242-41a0-a2b9-80593edfa18a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 c537c5df-6b74-4ac1-9305-827b3b04eb00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 05af7ef5-f3d8-4714-9a60-a3eed08b701e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 b7d485cd-47e8-482f-862c-aadffff7f23b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 b31ed0bc-72e6-4001-a76a-c916fe8f1b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 5b0ab900-5ed5-4f8b-8b0d-1ff74a6904fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5739;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA732;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'h5739, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #897 4effbbc5-69d5-4d1b-86f8-cf3b3da07bd2)");
unit.assert_eq16(16'h1D5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #897 64996c31-f5d0-48c0-84cf-f75787c8296a)");
unit.assert_eq16(16'h5739, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #897 ef3c1823-d8ee-4348-95ce-18f33da77128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 35d6a48f-76e8-4332-a113-d2e967ce9cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 c74f08cb-5fcb-4efc-85af-1286af5729be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 640d0662-c5d6-4125-80d8-4ff56b99eb50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 f3a50cd6-d29a-405a-bf3f-ae4e649a47ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 a9d7d49d-27e1-465d-883a-97ecbc81bd89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 343be6e9-caa5-4c5e-a2c5-da085ea24e86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9466;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'h7DEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #898 9eb3f684-0f0b-47e9-9756-c51baeb8f2a6)");
unit.assert_eq16(16'h83C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #898 2324ad5a-c173-40a3-9099-8edafa2db9b8)");
unit.assert_eq16(16'h7DEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #898 cc9c4d19-7883-4d97-9cc7-9224db60d02a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 b1082702-0830-4fb3-9b8d-4da6de9e4f2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 ebdea9ba-c345-42f1-8fd4-294fd207086d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 93e4be4b-e8b1-499e-a614-e0c3a024d45a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 040acd75-a967-4047-ab16-8712c3e08531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 0d3b4c46-5856-4f3b-b05e-baf71b30dba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 f995415d-ffa3-4ed6-86b0-af3115e7918e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFDD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h36D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'hFDD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #899 160fdc90-00df-465f-ac00-6811536e327f)");
unit.assert_eq16(16'h36D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #899 9aa4642d-b5a4-414f-b47d-42d8b252c7cf)");
unit.assert_eq16(16'hFDD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #899 7560e990-cf46-48f9-8b85-4aedc1c1b18f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 69f6e06d-31aa-4c6e-b7df-3113b2a813b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 5010c093-2173-401d-95bf-2124a91bbbe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 37323d01-a54d-4646-82be-e0a8d0984fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 f6845ce9-69a8-46b6-a33d-bc761a36b584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 63f4a593-edac-4a3d-aaa4-b6e3ca42ff9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 63ab2ed8-4d63-4afc-be5f-ecb71627a9d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD057;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1CF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'hD057, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #900 0d0da630-c2f5-4007-92ce-e9a1e9074c20)");
unit.assert_eq16(16'hE6C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #900 1c41a7b3-c14f-4ff7-add4-8651a248f9f2)");
unit.assert_eq16(16'hD057, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #900 0e658174-c31f-490e-9116-b95857408957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 2915e04d-bfdc-4fee-a80f-aa5f9e6dd788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 a69a1389-3ddf-49a1-bd85-9c7b6a07751c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 54a53f7f-f6dd-47a6-8051-1352e9deab39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 cf07f02f-07d8-4ef9-a32f-06f31b923e6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 3938e214-78e6-49d9-a08a-7ddf684b1b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 dcd72b88-d3f1-48c1-a8e4-3ac4227cc9ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB393;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'hB393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #901 4437e2d2-32f3-4f65-ba91-acffc995f7a0)");
unit.assert_eq16(16'hABCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #901 9da1dffe-f2a0-41b3-bf77-d2fcbe28f56f)");
unit.assert_eq16(16'hB393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #901 b51e23ca-e3d0-469d-8553-47d5a0255a55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 3604d0e8-be3d-4862-9e52-abbeb6fce918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 f2a37df9-8786-48de-bcb8-2f67a8a29527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 4b977c35-801a-44f8-ad92-c54c45148581)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 aec9bd67-bd03-45fa-b0be-cd8ddaa106de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 53f5e701-8495-4387-adfe-ff01531c82f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 0b3f39d3-217c-4a7d-8adf-379577a0b764)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h060B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5954;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h15C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'h060B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #902 82e7275c-cadb-46dc-8b7d-5b0d2987d1e8)");
unit.assert_eq16(16'h5954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #902 9667342d-9218-4db0-a340-6146b9636443)");
unit.assert_eq16(16'h060B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #902 cd3cd3c2-161d-4bc0-ac78-1aa8f36e7ad4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 eb206b56-e034-4553-b0e9-a9c754285cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 383425c7-a1e8-42a6-9f4e-486219be76fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 bc46b41a-0fe0-4ca6-9e4c-19c3cd484a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 3acc52be-a1a7-4674-adde-6a11cf1c34ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 8f769a14-c1c9-4f10-ac10-dfa1d712083b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 36ed46b0-1832-44a7-ae84-a6991268baaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA920;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6278;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'hA920, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #903 ec10ec02-0301-4b34-a15f-f18ae74e1229)");
unit.assert_eq16(16'hC3C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #903 3233045e-6c55-443b-a34a-a90564541038)");
unit.assert_eq16(16'hA920, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #903 921f24d2-8f28-4cda-b2b7-5d4e2b034b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 eddc217b-5247-464f-b2b0-cbe710e7596a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 9f69d4e6-1b44-4785-acf8-1b97f56f769c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 bd806f15-ce1e-4752-b259-b6e4b86ec4d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 d3e41ade-3a82-4b9f-9b95-1e55fd0c7e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 9b7ca624-1ebf-4f51-a812-dcc7855e48c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 c6e50940-ee40-45cf-9abc-99d466430c45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h036F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'h11DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #904 5e228c80-c375-4891-9cb3-1d92bd0e568d)");
unit.assert_eq16(16'h0C53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #904 e21fbb5f-c825-4d01-b656-4dbed73906f5)");
unit.assert_eq16(16'h11DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #904 98c7ab78-b27d-43e2-9628-d0e43bc2376f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 5560eaca-43ce-4d3f-9a27-dfdc769ac368)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 fd0c7136-022e-47c7-a0bd-730062c6c613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 99f5e15d-98fb-47d6-85a0-0de6b8844889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 0a232c0b-a147-4664-b60c-bf2cd02b035c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 0a3ac956-b665-45cc-bd3a-5187980ce47f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 503757c7-d655-41f4-bdeb-72e522aaa0aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h230F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB755;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'h230F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #905 64deaa9b-aa56-4487-95f3-8aa8f0b71e47)");
unit.assert_eq16(16'h5F2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #905 a67e12a1-b267-4a02-b692-f154c6b9b94b)");
unit.assert_eq16(16'h230F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #905 ab8e06b3-8edd-4802-8ea9-708a8cb051e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 c7bf2108-3c52-4623-93ca-fc6c819ea849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 03a96e04-82fd-4d33-9b03-884e242657ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 79d2d329-21ea-439c-93e0-f7b2c64bc1a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 31c89eee-a989-45c9-9ee9-1ecc4e870d45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 ab0a64cf-48e5-486c-8114-a339a9232414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 7f8ea001-f17a-4dff-89b7-435792186904)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA6D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2B8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'h7B84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #906 550d43b0-4091-4788-a782-e0d4e26b6545)");
unit.assert_eq16(16'hA6D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #906 32ddebac-4d2e-45d8-a0df-48d0041023a8)");
unit.assert_eq16(16'h7B84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #906 77d3e1eb-523d-482a-8725-adf1c2b8e534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 462748ec-7a7e-4d85-9d73-414057c610ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 de267c2f-0f07-4a97-bf97-77e7eeda8cf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 7e6c0050-4c79-46b7-9096-afdf39d4a017)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 9271cb0a-f052-4742-bd7d-c968517e0da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 338cb749-a43e-4a39-bcf6-e59d34b62753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 9bee90a8-e7bf-47bd-9df8-8a17a5446ff9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFED1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'h1C2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #907 ad71934c-ad5a-41f1-92ce-0e118caa42dc)");
unit.assert_eq16(16'h2D1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #907 cfdfa509-8cd8-4884-bd7e-71e6174a3d0e)");
unit.assert_eq16(16'h1C2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #907 0ed3aa14-45c7-44d9-8b3f-63bb370c47e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 9a476f42-54ea-45b9-801f-3952bf329b9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 4903ed09-9b10-4b59-ae55-8a802d7c41d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 ae417b36-22c2-460b-b090-3b65e369238f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 fcf82f5a-8693-4163-be50-4b166860230f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 9b3e4385-2a99-42f3-98fb-b8a39c8eb5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 25be50f6-1164-43e2-8b15-23c6e2c61bb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE3C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'h06BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #908 22d3250b-5d8c-4521-8f56-b9228b46d04c)");
unit.assert_eq16(16'h1A04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #908 ae521d21-bbb5-4e57-8e15-6ee36452265a)");
unit.assert_eq16(16'h06BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #908 4223c1f0-a5ae-4bf5-ad7c-4facd493540a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 e418dcca-4133-49f0-8550-54db6c038bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 5a66df64-e9b9-4840-99a0-606985848bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 c7851f23-bd77-4590-b582-8efde97a8270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 cb8b1f15-7323-4573-a65c-dfbc67eb71c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 e203ca98-430a-4549-8664-4d06d2542891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 48fa8515-de4e-4139-a535-990147e48280)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD7AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h22D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'hD7AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #909 73e4bee3-a2fd-4cb2-8516-a1c6383df74a)");
unit.assert_eq16(16'h22D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #909 5c4f8e06-cabc-4ec0-8f39-6dcaa72bf514)");
unit.assert_eq16(16'hD7AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #909 47183328-1ccb-4229-9f5f-c54932a5a687)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 5019f831-d3d8-49d7-9c76-ec1399168c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 1b9f4627-331a-47ae-a65a-0a2b87b51afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 34f37d1a-7cc6-43c7-8787-171a7e9bf68c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 f59135ed-66d2-4922-b8ba-cfc893ceec4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 a45acf1f-aeb5-48be-b85a-2376d61a1284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 92d365f5-0764-42e3-b0b4-09070839ca17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE528;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'hE528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #910 97bf3cb0-930d-46ae-98f4-f9c42b7a82aa)");
unit.assert_eq16(16'h9A30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #910 5c91e1ba-0c68-4146-8247-8a797b56ada1)");
unit.assert_eq16(16'hE528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #910 923a36dc-dd2c-4e5f-8ed6-e211db187547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 0be51843-3bd5-4166-b789-b4a1b19a8c48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 e2643dc9-8e48-4081-829f-c6f268419b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 11b57b20-6edd-4a2c-a8c1-817430f37075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 ac4081b4-2c2a-4a1a-a891-6067ef176597)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 2c8835f8-a881-4ccd-bb0b-86e2b4904e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 04e62f00-953a-4382-91be-229cc17941c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA648;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h55BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'h7D66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #911 a5631fc5-8480-4a92-92b5-7c22dd8d71ad)");
unit.assert_eq16(16'hA648, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #911 b66c3d00-e86b-49fa-83a0-1a0c1631964c)");
unit.assert_eq16(16'h7D66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #911 019ba2a8-c8b7-4335-8020-aebe0c7a8ddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 047b3aae-0c09-4f99-897f-7544d22c00d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 1b1fab6e-cd5b-473f-afb7-d37f894cccd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 69273ae6-3e3c-460a-9334-305e3c3deb3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 5a158c53-e09f-42a2-a946-f59399e74c8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 9fe023ec-4de6-44ce-adf8-269016da9dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 2264c7ad-4c31-4b45-be9c-c978b5dae3c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF02E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDF8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'hF02E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #912 23a69488-e92f-4469-ace9-549b874a7da5)");
unit.assert_eq16(16'h0FDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #912 a14ac64c-fbf9-4fee-9aa0-e5ddc49403ec)");
unit.assert_eq16(16'hF02E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #912 881b3469-180a-4387-a054-d6a539ff637c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 63533e3c-9b81-4b4f-bd9e-aca485ffc515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 12b39503-c436-45eb-84c2-95ba3ed958e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 75279163-5828-4a81-8340-56f824be7801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 0cc71da0-a72a-4c20-ae60-c62d4e004472)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 3149db7f-0f8f-4f44-a985-bb2140b60637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 08c28536-2eef-4bf5-97ef-c0009b1a3eb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9CB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h061D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE709;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'h9CB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #913 10ff49e3-dd9f-4611-be8b-dd1ff93ff802)");
unit.assert_eq16(16'h061D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #913 6619bc5e-6646-4e5e-b71a-f9195eb49427)");
unit.assert_eq16(16'h9CB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #913 33f4f0c6-cc7b-4e64-8280-7db7c8586968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 a2d8a4a4-68c9-4343-afe5-aa27a62fd4ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 d52ff90b-8e58-4f2b-8fba-5a8eff8099b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 74a2b590-d758-4780-bf69-0098aa6898d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 202d39ec-a7ea-43c2-bb21-7051904845ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 7cc45017-a52c-43ce-a114-367ce48495b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 d6b8f7be-fcbc-499e-932d-80f974420e8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h335A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2585;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'h335A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #914 a7ae849b-cf5c-4217-9ba1-d0317afb4e05)");
unit.assert_eq16(16'h2585, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #914 fe004988-adeb-466a-a758-3d9cfdd0ecdc)");
unit.assert_eq16(16'h335A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #914 b28783ae-a79f-4ee7-86dc-5e403f50b281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 70f283ff-85e5-43b1-88bb-a7211182daf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 9f6fa7b7-2261-438f-a67f-f6b705f75c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 4da13936-516f-41cb-9b57-94cc71cd4130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 21af590a-ac3f-4cab-b8ad-0379e177954f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 9dbd27e2-e064-4b30-8158-3f5eca103532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 f226eccb-f452-4910-94f7-23ae9a3222da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h722A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA15B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'h722A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #915 97af2fde-a7e1-4b50-ad07-615233aaa77c)");
unit.assert_eq16(16'hB9E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #915 63864f69-061f-460b-8286-571ade341ef5)");
unit.assert_eq16(16'h722A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #915 ea335ac4-859f-4b31-827d-d5941a20c94c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 25881837-aaf9-4766-81b8-eea44f1643bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 73d990ae-1aeb-444e-b51e-39f4fa08e816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 237c0232-227b-4c41-a253-f51e33d04e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 9e31c9b4-4805-4110-9e6c-d75f2549d42a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 202c9efd-366a-4a74-8c35-d0da93732146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 9e221511-aac3-4d89-babc-7480335d918c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8FC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3853;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'h8FC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #916 d5882fc6-125d-427b-bbd1-b6f2c3cd5193)");
unit.assert_eq16(16'h3853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #916 fde31d0f-9422-4b1d-a840-9282e98d3bc0)");
unit.assert_eq16(16'h8FC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #916 db6e1349-c287-48e6-a107-ea9cd66d2808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 29c95aa5-d5a3-47b9-8a87-210ade4a1052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 8cfd6ce5-99e3-49dc-a43f-1780ef9f3f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 e3a0539b-48e4-4464-94f4-64e3b84242ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 78982e16-7ab8-42a4-a91c-b0511128de79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 e0707a2e-218d-4bc0-bb28-7836f33c5bdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 f0d78205-7fe8-4b8a-a108-34501eda3a5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF471;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA76A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7DD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'hF471, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #917 75ac798d-1d54-41a1-b3f3-73c08240a4d3)");
unit.assert_eq16(16'hA76A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #917 e2ed034d-23c4-4657-9fac-056f4324f4fe)");
unit.assert_eq16(16'hF471, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #917 77b962fc-2363-4524-84c0-15c2d5999b3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 359308c4-db3b-4b68-b147-d69818bc1139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 4a1aff94-bc7c-464f-88be-9d450a8d7807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 1a4e082a-e4ea-4312-a34d-5d9f61bff4a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 0b71d875-b992-4057-858c-db745eb8fd7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 b6a751d2-9f7e-4caa-871e-e06b1f2df7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 40feb4ee-07c2-47bd-9d85-739d994f3904)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAEDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'h5E6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #918 ffeccd28-bebe-468a-8030-b4a565c39ab3)");
unit.assert_eq16(16'hAF85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #918 560277ef-29bc-4c43-b9c5-1598c753637b)");
unit.assert_eq16(16'h5E6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #918 d0b0c07a-5988-4470-9c9c-5a69170d3900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 ca295203-7daf-4fe1-bdc0-b0be8d9761a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 afd44ff7-c5d1-4103-85c4-91ed5b97df24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 392e5ff8-47b5-4c2c-9164-c172ecb8bd0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 afe28af1-a243-4d49-a6d3-57f5bf9850f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 c731ca41-96a9-4c6a-b89a-4585cca1153a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 e39b09b1-a384-498b-a8a0-ca284fac9d3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD144;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'h54D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #919 e85f91bf-65ec-44aa-8636-cd22bbce9dd9)");
unit.assert_eq16(16'hCD78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #919 173488d3-9630-4682-a3ef-7c0e7b4d2fd8)");
unit.assert_eq16(16'h54D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #919 28774298-e257-4dd0-96e7-94182792ce04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 31c468a8-9285-4816-b517-b68e47728855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 2aad3fa7-a6b7-451a-8748-d9f8600a7219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 4597974a-9e1d-4e0f-9135-a4c6828fa4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 3aa410bf-0930-474c-9fd8-4a631c72304e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 052d1ae7-e51d-4a9a-9933-e3e1fe1877eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 41b060be-4173-4d62-bfab-c79ff51bc13c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h40C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3A08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hABAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'h40C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #920 9e31b87e-9638-4f53-9eb5-1d7ca3fe27de)");
unit.assert_eq16(16'h3A08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #920 ecc4e5e1-f75a-4eba-9ebb-8701d66b59af)");
unit.assert_eq16(16'h40C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #920 94144884-f2f8-4c10-add8-52bc470e5e17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 f3142a7f-3313-4e7e-8d45-abbc3ec25316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 e64c0c9f-4d5d-4b20-9b14-cce606eafc63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 ad147baa-810c-4fae-beec-a9b1e264be0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 5a9faf1b-62fa-4834-8f24-54f5a9141ac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 7dd09fa9-9a28-4013-97bd-5c2fcdeef60a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 52ecc481-1cd7-4e4d-8a49-b0b70215d1ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4CE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'h6A7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #921 4b232505-9a76-427b-a6da-fac24b775505)");
unit.assert_eq16(16'h6EFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #921 0dbe1e81-183e-4592-aa16-1c389899216c)");
unit.assert_eq16(16'h6A7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #921 df6f76f3-dc47-47ca-ac18-1c73a5fa8ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 2a161f7f-4b7b-4773-a535-7209fdf46f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 a6ff962c-aec8-4294-a99d-8ed78e41df3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 c34a221b-bf2f-486c-8231-516659f1dfbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 2f4038c9-a7cc-4b50-a2fd-5439f44e8511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 852d536a-ef41-4e54-a909-db8c00289391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 ebc7d3a2-b3dc-493b-bf53-e879a7750620)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7169;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF39F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'h7169, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #922 32ee5f3a-65af-45be-a63d-918a2194581e)");
unit.assert_eq16(16'hCE40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #922 eab8a604-c3ce-4f22-964a-8af2f08e0677)");
unit.assert_eq16(16'h7169, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #922 76b15b52-7d68-45c8-901f-be4bfd030ad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 22c7907c-1e88-4ccc-9663-0aae1d96a1e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 79dd8bed-2e8f-405c-9fd6-446118c15154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 685a8bc5-27ba-472f-9d2b-def99d0fea64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 f215af49-20fd-4f3a-b34d-c5fc034cb6ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 9e4aaf89-eaf6-45a7-8571-ed9ad83251d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 04a5dd33-7b91-45c3-a7ff-34699f51bde9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8583;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBC7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'h7D7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #923 c8e72414-f176-481f-bc57-69a6a869e4df)");
unit.assert_eq16(16'h8583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #923 8b1ec1fa-30ad-4977-b733-c90f25f2415b)");
unit.assert_eq16(16'h7D7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #923 c37999d1-377c-4efc-8d1c-6bb415d14377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 32a58a27-c0d9-448a-885c-f8f15efdabaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 e1e68eaf-ac1b-48ed-b1e3-b949b97d197b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 d2a80e6a-c8f0-43d2-9b67-ce058f5564fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 592a14fc-fc37-410b-b600-aeed4f8c2d02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 5ea41576-3fac-4f5d-a7bb-1e66c8d6129e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 cae72496-fa2d-4a87-8dbf-fe7ef8052d41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4669;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'h4669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #924 bdee492e-6362-4fd4-8175-bf7e8a6fe1db)");
unit.assert_eq16(16'h76AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #924 99bc2bb0-084d-4eda-8eb1-a6fdee51c281)");
unit.assert_eq16(16'h4669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #924 7fed2123-51eb-4341-850f-fc1f33095bfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 848e0761-f647-4123-bdc6-f31fd2db51c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 436e8882-2fe6-449d-9bb0-94fb955261f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 3f18aa10-6d86-4c38-9bff-2b7469d9aaf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 6dfedf09-6e6e-4b63-aa4c-2b9c96f86707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 1a77e5e4-fc29-45b5-9add-d0939339320a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 69782ff4-60c2-451a-9a89-c15317ab341c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA77A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'h8B77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #925 33ec7728-3d82-45d5-9a28-fac989fd62db)");
unit.assert_eq16(16'h1B3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #925 c4bcc693-9ed6-41de-958b-7b41fee69058)");
unit.assert_eq16(16'h8B77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #925 31093710-87bf-4a25-a509-fa894ce34d6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 eb3869ce-a9c4-489c-965d-7e91eb451563)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 445d988a-9066-4a3b-946f-7c9a1961f564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 f5593c04-2c2b-4d49-91ac-b7f2e2eb12f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 cac12264-f718-498f-8bd5-bfa2ff7a3483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 e1f9ef7b-29fe-428e-9e2f-f8d81c90fc2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 1da82f76-93d8-4809-bf09-4a6f5f412bcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'hFD72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #926 4fe52418-e348-4152-81a1-35e24f17a082)");
unit.assert_eq16(16'h6AD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #926 454ae97b-c98e-46f2-93c0-4bbd06950747)");
unit.assert_eq16(16'hFD72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #926 94b1782c-fc37-4f96-bf8d-2257b4a5bfdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 8873ad6f-7466-4660-ad98-460029f280e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 c83f62a8-43af-45fd-ab24-76ea6dfb575b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 7635c132-592f-4b22-bf33-ca514ec06d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 3d7ddd46-5b3b-4532-8b1f-4471d024acbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 6e232795-3129-4501-b949-ce8babec166a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 4136ed4d-29a1-439a-8ef0-f3662562b41b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h40A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE955;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'h40A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #927 a63dcf94-d07f-4943-aa70-7e95c2da96b1)");
unit.assert_eq16(16'hC3D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #927 15105ea6-7132-4c32-8e79-97b9aa901699)");
unit.assert_eq16(16'h40A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #927 d5bc7831-3cf4-4ab3-ac46-c288a57818ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 80107bc9-ec02-4c8b-b8fa-9351daeca56b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 bea8740d-db09-4077-9f44-1d0a08e52de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 fe8c0a6c-5120-4779-a146-1b6cc5e427d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 fe3aa8a0-460d-4d6e-a3ba-7c107cc58e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 dcd6cbc2-922e-4723-af9a-0223ee7fa228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 32188947-e44b-432f-a008-2053920cf299)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h72CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2545;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9886;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'h72CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #928 acfb20f2-0ce7-431d-9c85-29bb34aeba09)");
unit.assert_eq16(16'h2545, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #928 5f5f3ce0-953e-4995-b675-0c6305f02015)");
unit.assert_eq16(16'h72CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #928 0fc1c115-62fa-470a-8b17-1b2be1497e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 beba7c43-1d53-4298-9cf4-25e88cbdb892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 40ba6468-616e-403d-9558-a06bdc39aec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 45ed1546-0771-4ca7-a3b5-8e9e2d4e378a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 1cba86ed-c2de-4066-83f0-0f77422423db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 41f4c0d9-f07b-420c-9b03-98f759f31ce7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 c1abc071-3906-48ba-a371-89720dfd8512)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h637B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1882;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBF15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'h637B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #929 b7cd6572-032e-48c1-8cba-482677668689)");
unit.assert_eq16(16'h1882, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #929 17942182-8675-4b8b-83a1-0d619682a445)");
unit.assert_eq16(16'h637B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #929 920ab6cc-1a8b-47b8-a17b-cfc6a05d761a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 1a350fac-790b-446b-a96b-78d253621f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 ac9cbc72-8b2d-4b1d-acf1-9dfef0db2d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 10857555-1cc5-483e-a898-cd9adc29335e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 6294fbaa-8f51-4cde-8a50-e5f58dea9a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 57c55837-4bd4-40ba-9aeb-1847809659e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 b4022a16-0f0f-4f99-ae5c-4eab016bd362)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA439;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h232B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'h54A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #930 b8c01d8f-e4ee-47a1-b8f3-ca139ea129ce)");
unit.assert_eq16(16'hA439, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #930 489b2cbc-0582-46e7-be9e-6029a9c66960)");
unit.assert_eq16(16'h54A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #930 0a4c2b83-aeef-4c47-b262-7d7fcb614aee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 e82032eb-24bc-4daa-86f4-470819e6a25f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 7a45399e-00f8-4a16-b0ac-752773bec17f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 b6b69f1f-1f7f-47a9-9adf-249ae202b100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 52ea3baa-c874-484f-bbbf-00e4bb1ca2b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 ec623d90-3df8-430d-afac-dcbcea4cf3d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 6dbfa698-d58e-4410-af25-24b8305eb8d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE2EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8793;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'hE2EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #931 55e0b18f-9534-4c59-9560-c7b5ddb71296)");
unit.assert_eq16(16'h8793, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #931 23aecfb7-8692-4e63-8d47-04c030be4643)");
unit.assert_eq16(16'hE2EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #931 26c29f25-5a17-4d52-a9a4-1649111fb550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 1b29be4b-62b2-4eca-aad0-9ce83d154249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 69ec9f71-0313-4728-98ba-87775db700cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 3cfe9246-da9c-45c1-9c0d-fe9d8fff7ab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 54f4f161-2b09-4dc0-9ae5-d2f1393f2522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 13e33123-4eb3-4708-b470-f9ba6052d6a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 b2a81003-d1c4-438e-b332-5e7a91b5c504)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h976B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h90A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h54BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'h976B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #932 5e09da20-e610-484b-a9c7-01821aadc30c)");
unit.assert_eq16(16'h90A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #932 048c2762-a3b7-424e-bcf0-f08da3e51390)");
unit.assert_eq16(16'h976B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #932 05f25f3c-6554-4fbe-b90d-f94dc0a1113f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 878610c0-dda2-4632-b53e-38b53cd0f059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 728544cb-c7e1-4de5-ad10-29dcf136b31b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 0de6a07a-5897-4ccb-9ade-21ec066d71bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 5e221e27-0afe-4cf7-89a3-f040440b87fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 ec5ecf79-1d70-4bc1-943e-f49ba25191cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 68a0120b-5a05-46b4-afc2-5238b6c109b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA224;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4BBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'h76E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #933 2dcc1a5a-6789-4b7f-b9c2-db430fb76c91)");
unit.assert_eq16(16'hA224, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #933 af5bff43-4216-458f-bb54-d7c8e08b8db5)");
unit.assert_eq16(16'h76E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #933 b3135fdc-6eae-48c4-8d6c-96ead6091762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 87df0b14-8cb1-4f69-aafd-3458d858ed33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 73f55164-9240-4a67-90ef-b79e3676a845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 ffcf116f-4ae5-4106-b99e-ad65b0350fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 9b73d16f-7797-479a-bc25-8e56f81ed9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 422b03f0-2f76-465f-b82a-96d52c218133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 0e6cf840-c6af-490d-89a2-c5890a14b00b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h243D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA356;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'h243D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #934 8d73be7c-e08c-4800-953a-1aa254ddde80)");
unit.assert_eq16(16'hA356, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #934 2846f688-7fe7-4287-afa0-8b45cab24e17)");
unit.assert_eq16(16'h243D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #934 56b042e0-30e4-4996-9ed1-39cc9f31b02b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 d265d377-8880-4d0b-81ee-0d7aeaa34131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 5d594f7d-dc50-42e6-a11d-d55c17d40c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 82909ed3-4548-4dc7-80fb-7d2ff6d506b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 f0ffea90-6ee5-4b19-b4cd-9285ff40c45c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 7dcd8ac1-8057-485a-8555-22a4a25c928a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 8d2e0e52-413b-4e35-9207-0769d3916080)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h831B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEFB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5EF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h831B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #935 edc29fce-7c14-4b50-ace3-c3382ab2cc16)");
unit.assert_eq16(16'hEFB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #935 36709a86-cbd7-4082-a3bd-6cd5db2c7f3d)");
unit.assert_eq16(16'h831B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #935 a85bd637-9698-441f-9bd9-848e8b97abe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 d013b906-1618-45fc-b8d7-087fd7002f68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 0c073b4d-348b-4fc6-be9c-dcded512f868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 fec9ff5d-357e-411e-b66b-5e2aa8c509d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 6fdd8424-da1a-4526-a87d-2c2dd42be0ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 0100502e-cef1-480f-9c37-70a0b5f78790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 3623b637-d9fb-448e-9fb8-86ea1c70db85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB8C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3003;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'hB8C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #936 d781941a-e2a4-4084-96f8-dd8ad359895b)");
unit.assert_eq16(16'h46DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #936 814fb4a4-5f00-4d2d-9395-74707aead69d)");
unit.assert_eq16(16'hB8C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #936 eff23197-c184-482b-860d-e6ba2c108010)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 2e1fce1b-5196-406c-9bc4-01380a986e50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 b07eec80-da76-4779-a4e0-13c6c411d544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 c4b87054-9a25-4048-b462-71987551ee89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 c55063ec-6f43-4f9f-a8ee-b0eb644e32e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 ae3327d5-1e7e-480c-a796-557eea6ba23c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 b784fdd1-6b35-4586-999e-d4bb3df4dd50)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0226;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4BB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'hCE1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #937 552f0597-d662-4a25-9eec-b253856d53e0)");
unit.assert_eq16(16'h0226, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #937 bc08eca2-0925-4d2f-b734-eac8de743df1)");
unit.assert_eq16(16'hCE1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #937 d06f768e-c511-40ec-a9d5-ce9efd2455fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 33c4c5ca-7864-4534-a355-4e69273fbb14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 17162cc9-b48a-4196-8ca2-4d45ed5e3233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 70714b5e-3ff3-4c77-b24d-542ecb6e22b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 76e59483-6f11-4008-9165-8188aace8a28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 623c5ba6-ad83-445f-a57e-3e0efbaa5ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 79402f05-4fc3-4111-80b4-730ee01a454a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCC80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2FE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'hCC80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #938 dcd85aea-cee7-4e59-a737-792277c89e0e)");
unit.assert_eq16(16'hB3DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #938 1615915d-ecfa-4b17-81cb-c2dd00c34c4f)");
unit.assert_eq16(16'hCC80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #938 51019165-c325-4273-b63a-39a29f1f9a7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 9e75d96d-5784-412f-8110-958d45c0f0b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 52ff9303-fe84-4f11-ae7f-6cb44f3c20c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 bda1bc9c-4179-474e-8aa6-2248a1e73213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 7e9dd27d-ff27-4539-b9d5-1f867989a490)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 f84f2386-7b56-4340-a0e9-a16d7fa94021)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 5c4f8bed-3117-4682-a38f-e9b0133cee58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h92CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h09ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h2C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #939 06aa5cbf-66b8-494c-b5ca-113ac2c12c5e)");
unit.assert_eq16(16'h92CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #939 9b60d35c-66ee-412a-bdeb-6ca145182e57)");
unit.assert_eq16(16'h2C75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #939 55f1f66b-0dc9-4fee-9021-111570092971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 4484c711-b453-41bf-9ad9-7fc04f839a30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 453bc19a-8eab-40d1-a864-33698274cb13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 61ed5011-4977-4043-aeb3-9aa91aae5b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 c67254fc-7b02-4de9-a3a2-aab9ed12b06c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 3198d387-0ff9-4a55-b82d-9457fbabe696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 107913bb-9739-416d-8ed4-3f1e01a0cdc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF8CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h24C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8955;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'hF8CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #940 628c96a8-5cc6-441f-b060-de2b42ab6cec)");
unit.assert_eq16(16'h24C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #940 8bb50d08-d6df-4c0e-8ed6-79e8f12f2ed9)");
unit.assert_eq16(16'hF8CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #940 77c8fa3f-b4bd-4fd7-83ea-34320b91a6f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 eabd77d6-776e-4d7c-b8ee-5b2cd01961ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 b6769cdb-134a-43a4-ac3c-cc5a7fb06c4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 e81dd7da-cbf1-40c9-b9bb-a94b91bf152b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 2882b5fb-9fd6-41b4-bf35-25780f0f2ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 08d225a1-aaa7-405f-8625-fe07a82d96c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 eb08f376-dfbd-4c4c-bb95-aafd2006e154)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6090;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'h9F74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #941 a04501ad-6524-4d30-a6ea-f8b46f63a3c7)");
unit.assert_eq16(16'hAC84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #941 251083e2-8a8f-47f8-a993-8bba1be5b696)");
unit.assert_eq16(16'h9F74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #941 66fa4fc9-af66-4cdd-a310-01f94c26fa3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 17ccdba0-a1b0-4861-9114-f80b735f9e8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 ec92ca86-167d-447e-aa84-3512b667d498)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 e5a0e7da-0bdc-4ff0-b0df-df209ec97a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 b562126d-ba8f-4fa7-afd7-7274d44bb79b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 60d5592e-490c-47f8-a58c-1cd94d3d4582)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 3373470c-f3f7-439a-b02a-1afab27a20e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h28DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h11AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'h28DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #942 f3a391ec-dd89-4dad-842d-7c2d002be686)");
unit.assert_eq16(16'h4E53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #942 7108805d-b89b-488c-85fb-dc0cd4ecf124)");
unit.assert_eq16(16'h28DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #942 5ecf3b71-6f06-4ce9-b20b-dd505deb5502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 57eae9bb-181e-4df5-bce0-3944984bcc29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 a8e887a7-598e-44a6-9deb-5d173d94c3d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 584563b4-7ea2-450e-b368-075fad50f82c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 7e586112-7388-411d-90f3-98f1f46c8f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 0f4399ce-57df-4bc2-a568-9ac2e84cbc87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 3162ba4d-d970-437f-a84f-ff08cda53cdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h19BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'h9D98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #943 011e9f01-0f06-4300-9329-bde7029429bf)");
unit.assert_eq16(16'h19BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #943 613ac858-8a1d-4ca8-b340-3bccfbf54e54)");
unit.assert_eq16(16'h9D98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #943 287e99b3-fe32-4ed6-b3d9-ee94ddb4d6ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 014a46d6-6cf3-4692-bafe-4f0b77a5a2eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 9e95810e-6b4f-432b-9a6e-7c558eb4f506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 256ba8c9-b678-47aa-bec5-fb0b6fcdd5b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 19b385a8-16e0-4a94-90f3-b0d9fce0dabc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 fc33a53c-25c9-44ab-b631-8ce94c03f523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 8dad15f3-eef6-4f65-b023-99f1e6cc5e43)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9597;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'h9597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #944 59003b8e-36f6-424d-acb3-5635ba04f378)");
unit.assert_eq16(16'h7F2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #944 2161e76a-0b23-41ec-9699-9cbc18aa77e5)");
unit.assert_eq16(16'h9597, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #944 7cd1acc2-0ff6-429c-ba05-d80f492b5d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 2590137f-1e6d-4380-a043-8226c0488414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 9754af0d-965c-4534-9dfb-62d05048e795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 f263f29f-5181-4445-a467-f4389bb946fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 0fa405ad-7496-42c5-8e3a-587ed8c551fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 3be40b93-5bfe-48dc-abd2-e47e4501275e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 6190eb16-8da7-493b-9ac0-f3f43cfd6718)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h68AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD8C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'h68AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #945 662f3b4e-1754-4beb-90cb-c28ba4462e0a)");
unit.assert_eq16(16'h83E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #945 8a2d48b5-1c88-449a-bc70-686781b31de1)");
unit.assert_eq16(16'h68AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #945 90111a1e-119b-4e8b-92ac-a643c7d7ed0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 6a99a84b-1285-43a2-988e-ed58194d9397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 219fa234-97e8-4661-94b9-d37465ceba5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 bbbb9e17-d8f4-44ca-b6c0-2b89aec532c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 c903fe0b-2c89-400c-b8fb-349a384d7725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 d28b38ac-06ce-4008-9363-7195f650788b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 e5b7f254-3877-4077-9d28-0ca97236604f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC384;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3875;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFB95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'hC384, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #946 50eb4c07-9315-470c-9a8b-06f0bf9835f0)");
unit.assert_eq16(16'h3875, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #946 409f392c-fa8a-4c48-a287-8c8d059835ec)");
unit.assert_eq16(16'hC384, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #946 d9eb716a-f095-45c3-ab74-47b23a80834b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 e7ac1dde-1d47-4208-8a8e-28ece12ff158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 7a53f53f-1051-4ec3-bc9a-8fe8345aa8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 ef56adab-a260-4b06-9fa8-bbc8eef1c699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 8a3e7b94-d34f-459f-8218-efb24539cdff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 46aa0d0b-6e4b-4e0a-88c3-94c54a189034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 61b41275-8b04-4de0-aefd-9f884685c160)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h53B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'hAF54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #947 7e40c6e0-5c08-4edd-a172-bf0910aaade1)");
unit.assert_eq16(16'hDF1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #947 df28f908-0b15-4cc8-812d-f521efd8c420)");
unit.assert_eq16(16'hAF54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #947 9f8f2223-db92-48d9-b9cc-4a2b76764760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 f6c3fa4f-ec0e-4668-92dc-42bae507e6ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 311ed52e-e698-4cd8-b6f6-260f5dab82ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 6bafd1fc-a94c-446b-9ba1-76f2a312e818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 da338613-2bd1-4f12-b44d-3c9b9922cfef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 87c996cf-c0a0-474e-8a7e-3e72c99db5dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 cf50c466-b9a9-4e0b-8d49-880a09a1d44b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEFA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE48B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'hEFA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #948 ed061468-d359-4374-8ebe-e6b036416e78)");
unit.assert_eq16(16'hE48B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #948 61961776-d3d1-424c-9cc8-b3e605721779)");
unit.assert_eq16(16'hEFA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #948 3f9ef4b7-5807-445e-b1de-96e9f6f1e6a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 53b7fbfd-2cda-4ade-a90c-dcdc58876618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 20ed3df7-1917-4c4b-af42-ab493b7640bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 c452de0d-c1ce-4dc3-9931-90bfd8e8cd39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 57f2bb6c-a0a8-4fa4-b296-c74faa3720ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 87b34f31-a817-417c-b180-6c99e79a9748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 b140ec64-b561-42f4-8994-f7f0004b76bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB1B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF88F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h1359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #949 a08f4c99-99f2-4bb0-92b1-996e3546419a)");
unit.assert_eq16(16'hB1B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #949 22603f3a-7b04-4a67-a53d-4d4f693e2fe1)");
unit.assert_eq16(16'h1359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #949 2d28a75b-9dad-4030-bd92-cde421e089d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 5873aeb5-640b-4a66-94c9-224dbe6767ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 e01dd9c6-b054-4d8e-a762-9bf2b1428a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 10fcc908-023f-424c-99d5-ba64df34142b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 bf613a94-c7a5-4d91-807f-4d0cc78c3857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 39f8298d-b1f2-4d83-8cb1-ac6494fc5aed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 76aa3488-6b44-4403-ba4d-b85ed85e5173)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h43A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEFCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h417D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'h43A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #950 dd41f058-0748-4f85-a961-6d324739f328)");
unit.assert_eq16(16'hEFCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #950 6e9375ce-a1c6-45ed-87ce-8791fe68caf5)");
unit.assert_eq16(16'h43A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #950 6d0c09fe-2856-43bb-94d5-95fe42e08fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 c8f45fc2-4445-4d22-b632-9c6bbce570a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 4bf96ddf-bf93-4157-964b-1073723c5dc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 e7ef508f-b903-43fe-91c0-98354c423409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 7d3cdb60-2a11-4423-9d0d-e9d2eb4313d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 6b01f90c-24e5-46d2-83c3-f9548a2af15f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 df227803-a289-4a43-9498-bd95c58e8206)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC7BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE457;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h07A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'hC7BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #951 2f73364a-13f3-4456-aca9-f85f58883f3d)");
unit.assert_eq16(16'hE457, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #951 1ce5c231-d238-4351-a59d-c8f6ba253640)");
unit.assert_eq16(16'hC7BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #951 c6d7e2aa-6ca8-4a71-9215-11dd4224d16d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 5da2cff4-8a18-4876-b3c5-840914caea80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 ef4b014d-5d15-4f7b-a33e-4ee531605c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 03958b82-4973-4451-a8c4-a4cbbbba2576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 bc4369c1-a133-48f9-8f00-20451ff23f1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 3d5ef378-c892-476b-8027-cf662aa1af26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 77e6e594-b59e-4416-9a70-1fb99678ffdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF045;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9948;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'hF045, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #952 d20cccae-891a-4232-a8a0-892b034c11c9)");
unit.assert_eq16(16'h6EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #952 397f7053-6f1a-4daf-ab22-204f360676b5)");
unit.assert_eq16(16'hF045, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #952 47660a83-b189-4fd3-a8df-7b4b1e5b19f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 920e8b93-6bc0-4d0a-8bf1-582efdeae46d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 e3d021df-9290-4316-b38f-b54591c5cce1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 667e8512-ea55-492c-82d4-7cb773ed931f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 c37de9bb-6a98-401d-853a-4d722cd8eb13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 6490d2b4-03bb-493c-89f7-e195ac7f8ca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 138c1d25-be65-400d-a158-1c0e01d7306b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB6D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA73C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC385;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'hB6D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #953 1c0f8731-0846-41ea-adb5-a394137dda13)");
unit.assert_eq16(16'hA73C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #953 850e91ba-34b6-44d2-8e9e-6fc966802535)");
unit.assert_eq16(16'hB6D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #953 91aab154-008f-4efb-a320-62464d5033ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 73a23a57-114f-4bc0-b68a-e0fcf32f089d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 3674f823-39d0-4b41-9833-586a50a08a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 d2c7fea5-75e0-4d32-b5cc-79b88dc94bb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 039d18ef-5548-4e2d-b252-2a709bf9a583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 d1a526f0-ecea-4dc8-8214-cecc724e2577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 e368c5a9-5f41-4991-a09c-b96c0499d000)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6FC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8290;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'h6FC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #954 0543e5bc-52b7-486d-9b2f-b81534ef5526)");
unit.assert_eq16(16'h3B66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #954 8f55de89-f766-421d-8c1e-5f4f9a7bd307)");
unit.assert_eq16(16'h6FC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #954 1f2b8dde-6e9d-4d29-b9ad-067d317ae2fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 1111d9f2-9ccd-4012-b470-900538d15b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 90afb9d7-96db-438b-98de-5eefabf1dab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 b62b4e50-be55-4d48-b74b-1c068e33bbaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 63ae8735-505d-45d8-8dfe-65987ed8e105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 9771cad0-1cca-418f-a38b-7d840e7bf623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 e1b9125a-2d74-4f6c-918e-6a645563e60c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3691;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h4C77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #955 3191b9e2-8ae3-4b33-95d8-fc347ac63b54)");
unit.assert_eq16(16'h3E4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #955 c231808d-fd30-46db-840a-eddb7cd7db9e)");
unit.assert_eq16(16'h4C77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #955 313b7f71-b2ec-458a-aa22-8b3c2d36689b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 527bee2b-8011-475b-b913-78e4205194cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 1921732f-d411-419f-b94b-95d1df65867a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 98c1adda-1700-4466-9179-b8bd47d404ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 a77e3607-7674-4d82-9fba-5a6dd15758a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 82a9b57f-a472-4693-8346-9a800bef66a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 12ae0f08-6b5a-4020-94b7-d0e98269d724)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h677E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h754A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h636B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'h677E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #956 5ebb73e6-4181-44a9-9ffe-dfc9f0b79023)");
unit.assert_eq16(16'h754A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #956 23337a17-83a1-4567-a39b-02b284cc96b0)");
unit.assert_eq16(16'h677E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #956 e3d1e19f-cfbe-422b-a35d-47196c4b41e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 46249ab1-35cb-409b-91ae-77f5f2426876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 780cf164-ac95-45d3-8c4c-4f7862fa97a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 fcf983e3-3595-459b-bfe4-817660675d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 6f89073a-b691-46c3-8eb7-3353c24da158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 a8ab2a98-1ef3-429b-a0ad-66388264345a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 494df714-88cd-4a41-b68a-77dc0cd2c9e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h26B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB880;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'h26B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #957 84b82d4b-f940-45a0-a370-ff30bb38072a)");
unit.assert_eq16(16'h7D18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #957 c3f75cfd-4a6f-4ecd-8266-25d935fd0724)");
unit.assert_eq16(16'h26B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #957 d21e8033-c7fc-4482-90e8-9c25e6553eef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 92662c2c-19e5-460f-9863-016c6480ff87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 7d2e9f89-f856-4b9c-b417-8f1cc38dbe89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 2430c0a1-7ac7-4f5d-8baa-d7aed2c18985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 c7a2d858-279d-4712-a591-b6c0d08bbb91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 d389a74b-87d2-4db2-8ba8-02851a5d4ce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 346a4f7f-85e3-4793-8079-3d3d6cd734d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE238;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h98DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'h3BE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #958 a320181d-b9da-4978-b339-e1c272000c80)");
unit.assert_eq16(16'hE238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #958 54915121-d933-457a-9e87-3060eb3a7a61)");
unit.assert_eq16(16'h3BE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #958 dc0ebc68-e0dd-401b-acee-92a3d7dfd389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 c1fa308b-9532-4b6b-be2e-12b25aca055d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 cf4f9a47-1500-4bba-9f8f-d4225c91c538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 6d814d10-864f-4dc8-87f2-01f431989117)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 8d6ebc2e-dbdf-4e0b-8be6-bc0dca799f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 81e721d7-8155-46cd-994f-8e144c3bc236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 62fe0eab-f949-4d51-839d-58ceecbfd514)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7696;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h26B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2329;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'h7696, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #959 674a0be0-919f-43ff-8dbe-0a27ea9b53df)");
unit.assert_eq16(16'h26B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #959 d0666dd3-d31b-498b-b032-7bfd87beb444)");
unit.assert_eq16(16'h7696, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #959 3b0b649f-e95e-4be4-bba5-14a8501436a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 cb89536a-0089-432d-82b7-43479565e38e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 ed877f52-a069-428d-a7fe-4673cd41f2d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 4cc24ab0-f9ed-44de-9377-3842341b0d2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 4bfd2efe-aebe-4d8f-94bc-35e4d1d56fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 04858df5-f548-406f-8cf8-f3cf35bad9bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 460f91d7-bd63-4aba-8cd5-a83c754b7ea3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1757;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'h41DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #960 3d6efe03-31f2-4e08-95eb-f7ccea4d2ac9)");
unit.assert_eq16(16'h1757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #960 8561cc7e-923e-41b1-8a33-c83adacac5a9)");
unit.assert_eq16(16'h41DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #960 15d131f5-2d55-41a5-aa88-8f310fb87f71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 033f8138-f642-4c8c-b66e-c6d4865250db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 4613c0db-60d0-48f7-bf70-802f6dca2e7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 0f9d623f-dc4e-4db3-ae68-20b007d81e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 d61ab736-5486-45a2-a0bc-21ce25f60a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 f929059f-d13b-430d-9b68-ca90865ab508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 456d8729-9a9d-4bcb-b2b6-77cc9739bed0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC518;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE79B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6598;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'hC518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #961 b57a2971-d237-49a1-817b-849a4b44aee9)");
unit.assert_eq16(16'hE79B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #961 274564ea-210c-4dcd-9fbf-e1cb39e1fdac)");
unit.assert_eq16(16'hC518, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #961 3080a5b0-1026-4d93-8a92-fb8a930b7b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 4004e5f6-4449-4162-aa62-1630b76d6ee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 c64c23a6-0cb2-42f5-9951-6e06f0d1874f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 938263fa-4822-44a2-ac14-04d760213a76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 ef7b8f96-89ab-4975-9f2c-f5d94e2a842d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 a1d4ec0a-d27a-4d35-918e-1239df4e0292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 1f0bf75e-eb29-4874-8cfd-90738ae6b672)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCF68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9859;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBF99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'hCF68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #962 7800dd6f-335b-49aa-9dbb-81012ca0ca9e)");
unit.assert_eq16(16'h9859, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #962 b86651e7-4326-49fb-87e3-364461a09578)");
unit.assert_eq16(16'hCF68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #962 fe8c75f0-d3e1-4b65-a0bd-23b9d5367dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 5e5e7f14-eccb-4b7b-8537-e7b0d9581c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 593a2da3-ab73-40e9-9780-5aebd454ece7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 fa1a6cee-a6ac-48a2-8892-411a8480f6d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 6575b61a-03af-4718-90b9-da7473efb126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 128fbb1e-5965-4b50-aabd-b53ccc5849f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 07c2eb0a-c0eb-4980-95de-b481d518152a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC205;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h296F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFBDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'hC205, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #963 f8d52b86-7d03-4c36-86f8-6ffa3b8f6938)");
unit.assert_eq16(16'h296F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #963 4bc71ecd-ac14-403a-9fb5-fb979da263cd)");
unit.assert_eq16(16'hC205, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #963 2e1b4fe4-ea4a-43b4-bc2b-c74918b45cbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 0572ad13-b094-4205-affe-ffd279439700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 a2472fba-066f-48a6-acf8-1b700c050326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 ada6d29e-1e98-4c64-beb5-a62b82294c19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 9c878f85-10ec-4b46-813a-4e400083521a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 1f2a1070-f6a0-40cd-8c7f-3ce15cee25b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 318846d1-f820-43de-860c-d6057c3cc6ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h11A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'hA0B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #964 04ca81e3-f6c5-4951-bfc7-2b0ee419740d)");
unit.assert_eq16(16'h5F05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #964 b6f3ee80-54c6-4125-8a2a-0d43ad347927)");
unit.assert_eq16(16'hA0B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #964 776b0aee-8502-4481-9563-05b26a5fe2b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 a9462368-0333-4fdf-b812-621e39464328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 8943ed46-0ab5-4b5b-9b99-613ead666ecd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 cb9c3edb-5a40-45a3-96ba-853f818ea457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 24d76e0f-04d7-41bc-a27a-3edfee5839e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 af73a6de-0796-4390-9396-ccbbc1285209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 8729c184-bc53-42bb-89f6-5b430fdbfb0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE653;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF46E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'hAD12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #965 ed0dd8f2-f3c3-4f29-aa86-45511a5178ea)");
unit.assert_eq16(16'hE653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #965 fa67d2fc-5265-4b70-8f21-ff2dbd2bfbaa)");
unit.assert_eq16(16'hAD12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #965 8cb55332-06c6-4fb0-bc91-71cab2e3ce59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 7b2bca9f-71fe-4563-bdc5-1088cc59577d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 2372dd64-c508-4bc4-a975-a00cd0b07725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 142e75d6-8dc8-40ee-89e1-7a1fb69f7ddc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 43c59a3d-5d3a-41fb-b982-3d2e47ca59bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 a23366dc-deba-4943-9159-df1f168a35ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 c25f0ed4-f97d-477b-ae60-46c80c68b0f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDCDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB4C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7B6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'hDCDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #966 20e49b8d-b6ae-4f7f-92e1-a7bbc5e43502)");
unit.assert_eq16(16'hB4C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #966 f62ad755-8a12-4049-9a50-31cb01033508)");
unit.assert_eq16(16'hDCDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #966 547af91b-7cf0-499c-a3cd-5805d2603481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 250f8fbc-9f66-44b6-ab89-5ecfc18bab62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 fba2934d-34bf-467e-9f40-49c6690874fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 be7674d0-5914-492a-9996-2f119dd2ce36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 d103ac90-74bd-4d3f-82cf-7c60348ecb87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 1d25270c-6efa-49ce-a10e-2a60970e3357)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 5c51dc18-f044-466b-b8b4-6dd950629eff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h83E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7718;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h526C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h83E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #967 ec909ce3-565d-4b03-93ab-f9b8f657a112)");
unit.assert_eq16(16'h7718, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #967 ca40101d-21d6-4b1b-ba4b-f737b6687313)");
unit.assert_eq16(16'h83E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #967 70a63f7e-930d-467b-b109-6d3843a289fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 9d9a4108-fd3e-45b5-9344-a413df20748f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 c81bc625-670c-4dd1-9299-8e9779d86717)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 8279563d-d7f3-41cf-bab8-f27c5f5c2707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 7f01569e-62a0-46f8-a057-94a43692fe2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 f22ad7b7-9236-462a-8946-f306aaaa4f6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 6c5789ea-f4d8-421a-baf5-2460b2d664b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h55A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h66E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'h55A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #968 0cb866f2-fc5c-47a5-8b84-8df33b8d1097)");
unit.assert_eq16(16'h5C6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #968 89c84ea5-49f2-4057-ae98-2851433a9079)");
unit.assert_eq16(16'h55A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #968 fe1c7423-98ba-4ca5-9e71-432a912f76c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 e26e9802-79eb-4bfe-933a-f507189f9b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 ba354ff0-e821-47ef-ac91-de8fa9edecbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 f11e8df5-46d7-4078-8454-007077edc9c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 fd0187a6-ca28-4c5f-8aaf-3574a35a5316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 56f57b5d-b33a-4ede-9110-8b1feed6f6b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 dd9724f1-3aaa-4fb4-bcc0-a8e80235177b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFBD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE1D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1749;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'hFBD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #969 4900d6a1-68b4-4967-9d4d-9327ef0c8ec4)");
unit.assert_eq16(16'hE1D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #969 bda88437-17d1-4400-adc9-75f4b20f658a)");
unit.assert_eq16(16'hFBD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #969 3b93c09d-eaf7-421b-82e6-3135a0240798)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 db7612f2-3ee2-4c68-a788-9d6c87b238ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 c63b6b2b-f861-4bb9-8dc9-499a8585009a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 46b49d36-3193-460d-b9b7-ee9e4071671f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 04e52fcb-c2b3-477f-9b3d-cc97e17ae539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 f2bfce0b-0363-4b49-883d-f52edd3df87f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 8e665729-54c5-4a3b-8612-0e6825f69a1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA58C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC112;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1175;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'hA58C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #970 e7dfa20a-b2c5-4e35-9f51-1c199d5bd31a)");
unit.assert_eq16(16'hC112, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #970 c670fba1-ace1-443f-ba84-02f677fb92d6)");
unit.assert_eq16(16'hA58C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #970 e2b80531-b19b-442d-8101-2201bb8146c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 b7801a93-ff13-46f3-8d4b-068eef3aa713)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 f7543f33-3f24-43ea-b841-0b27d6fe9765)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 f4d116ea-93c6-427f-81c6-c921c787e38d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 ee7ec0cf-b9e9-4433-959f-23b2c8222bcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 4c7affd0-3a6a-4e46-a685-f7760a1a48c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 b4601906-4cc7-45f8-bb21-2058e3682d5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD94C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9691;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2EA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'hD94C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #971 159e0dc9-9942-4b10-b7b9-7bc094981620)");
unit.assert_eq16(16'h9691, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #971 0b14418f-20b8-4267-bffe-7efeadca34ce)");
unit.assert_eq16(16'hD94C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #971 304ea009-018a-434a-bc7e-5bf4d74b6338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 7f1d7fff-3dc8-48d8-b5c9-e594051984f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 2465f942-8190-4a4b-a551-a62c0cc16b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 f154fb7b-22de-4a03-ba41-230bebfcaada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 8a8a8893-6cc5-4630-bb90-46e31319175d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 890f2fe8-404b-4133-821b-2d971936c2c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 a7acba76-55d2-4348-b6d4-1e459285a99f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h10A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h95C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h10A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #972 afc358ae-ef8a-41cc-99b5-51c15cafc9ba)");
unit.assert_eq16(16'h95C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #972 6b5916c9-f206-488d-a4af-67494da85e00)");
unit.assert_eq16(16'h10A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #972 f51e0a78-3572-4c3e-b23b-e849da2632d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 475bcc1e-ef9e-4d85-8ad9-8fe039dca836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 c64a62c2-a5c3-4271-a578-51f572f08beb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 1af30579-31ff-4bd2-a02c-baa8a08e7042)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 b4fd21b6-d36b-40db-877a-742074cd43bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 06e005d1-3fbc-4157-a542-36ed718a5f06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 a7c93e16-37ea-4378-8d1d-717b422b5143)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h449D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6283;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h12BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h449D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #973 5f689a79-a858-449c-b057-608b1896b2fc)");
unit.assert_eq16(16'h6283, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #973 08ea5c62-5f75-4d7d-8c40-1fa204a32b69)");
unit.assert_eq16(16'h449D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #973 dbd8bc1c-cc51-428e-8651-aaf639c65878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 2a25d706-0226-4a0c-a787-04fc8c16a094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 b5dea3eb-40b0-4e8d-a31f-84360ea2a11e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 a8b4df7b-7ce7-438a-9826-bfa77c539dd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 8dcea0f3-c3e4-428a-af90-d8cefd915d90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 83282e1f-6b1a-47bb-8c17-e99c0ddd488f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 f3716953-13d5-48f6-9548-915439691e00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2511;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hACB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'h2511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #974 68c06a3e-2243-460f-ba1c-51e5b897d1aa)");
unit.assert_eq16(16'h1E67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #974 bb336c5f-7470-4054-8845-d2dcaee4b5b7)");
unit.assert_eq16(16'h2511, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #974 3b1b593d-6b91-456a-9213-8ff2a4360223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 71bb17bd-98fb-4a33-b465-542535965258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 a266861e-0548-4cb9-9f04-72586b370fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 6c813170-77e2-491d-9dd4-2253c25141e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 5a4b65bf-0535-45ae-81ec-91ffd306d159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 a1b561ea-6cd4-4bd1-bce8-fb15663eae4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 97e8cae3-55b9-47cf-bf6c-c79bd476815a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6334;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC7B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF46B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'h6334, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #975 8ce16c59-dcfe-435c-be9a-d46cdc349c69)");
unit.assert_eq16(16'hC7B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #975 dc8a8a40-ba7e-4d7b-807b-18a442a4307d)");
unit.assert_eq16(16'h6334, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #975 6f912705-6932-4193-b831-6e7842589df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 6a8695b8-3df3-493b-add9-ce7712fc85ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 bb794105-118a-4a75-b4fe-8af44d679c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 0285381a-a87d-4b5e-9ec1-765cf7138fe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 2233170f-0802-4a31-be35-fba24c582099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 8b1fe459-7379-4aa5-9a8a-86d8a5e193e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 e20afe8a-c382-4839-a919-e61b3fff42d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3474;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h46A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h23A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'h3474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #976 17875af3-e59d-4543-beb2-dc6d0e833b83)");
unit.assert_eq16(16'h46A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #976 9ee41275-9e32-4903-a6d5-2bd2b561edd1)");
unit.assert_eq16(16'h3474, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #976 f7b1b025-4679-4533-b1c6-f794cc480e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 35c4a389-f61d-4390-b1e2-0516b5b36837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 8b144603-b9bc-4e23-9341-e3c41d13ae26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 a4e9e61d-498d-4cb7-aa1d-71f16c4675a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 bc85ec2e-b722-4db2-a204-cff4b3749a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 3b97ec70-83e5-4e74-8296-de41fd2e2583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 07fa82bc-a39e-44e9-81c7-514ae2a3e2b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7196;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h48A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'hDDC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #977 12b20307-9ee6-43a9-8fa3-ad2a451907fd)");
unit.assert_eq16(16'h7196, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #977 be63a291-a868-49aa-90fa-197e739d38ab)");
unit.assert_eq16(16'hDDC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #977 c33e1ec5-690c-430b-aa97-e45f67994283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 d95f7d95-c1f5-4bdc-8074-e697b2703203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 9fa0099b-9783-421e-b702-3430ca98b66c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 78a62e80-9e8b-4804-b085-15d7ef7d3eb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 24969b6d-d76d-4073-ae68-c6da95a03ddf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 88cce49c-feed-4edb-a77f-c9aadbf7e978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 c76e2d2b-66ef-4ab2-8e6e-bf640615275d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF9F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h26B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'hF9F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #978 9b5b8612-7a1d-4f5f-8ffe-35c94b1732d3)");
unit.assert_eq16(16'h26B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #978 121d0c4b-47ff-45a0-91e9-8cf0ba11f933)");
unit.assert_eq16(16'hF9F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #978 982d184c-3535-49ca-94c8-b81f19570de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 9c242a3d-0fc9-42ac-8edf-177a8a574a8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 f457276c-f3b2-4699-92c0-c2f86677e465)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 213010fd-fd0e-4feb-94dc-d69a82df14a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 0f581d00-74f0-41cc-b297-92a1d074e5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 bc33bf1e-301c-4ce8-b26d-3baa31174e50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 52a2e777-7b0b-4a71-a7fc-11a5eee03896)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8ACF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB74D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6308;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'h8ACF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #979 00b1e974-8c2b-4ba0-a4a5-a7b2677080b2)");
unit.assert_eq16(16'hB74D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #979 cf3bd0d1-30c4-476f-983f-ee881b6e8d13)");
unit.assert_eq16(16'h8ACF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #979 9ddcef3a-00ef-4426-8793-abe802981ff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 d22c1607-0231-4223-9e6b-0d8fc2b36f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 62538202-7799-4521-a9f5-ea30ba94154c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 a4a01d34-9b34-4c9b-9a4b-289c528c1ba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 6e2ea7ae-25c1-4674-82d8-bad03cee0f1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 13ee7fe7-0135-4a7a-918c-16493a74a608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 9778aa50-0563-4180-babd-87d666623b91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h696E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1F17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'h696E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #980 3ae6111f-1685-4d1d-bf68-5f32d59a0fb7)");
unit.assert_eq16(16'h1F17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #980 956e0ad9-2997-4b05-8943-65d056e47cb0)");
unit.assert_eq16(16'h696E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #980 0d115a44-424c-4dfd-8363-f6963079a622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 737a51f6-61c4-4824-9543-a788a6f6997f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 df1b6f44-68b8-4385-a729-bfa99afee982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 67d0990e-2ab0-46c9-86b0-e09799393982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 05115c74-ee99-456e-be77-5ce24f5e3444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 0aa761aa-5e42-4b3e-ac39-9c2c5f7db7ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 c4dcaed2-e9f6-4484-8442-5ac8a9c494da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0408;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5C70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h2E6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #981 f4b0ddf5-d7b2-4429-87c0-f8c922baa7ef)");
unit.assert_eq16(16'h0408, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #981 29d22d7e-429a-48c7-943d-6e482525642e)");
unit.assert_eq16(16'h2E6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #981 d8f23950-b70c-4ede-aebf-1daff1217992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 8f8004bc-19d2-4a7a-8360-a64db0d3c843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 3353cb9c-4784-4b57-a010-9513db22eb27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 ba2158d5-0f00-4cb0-bffd-3046ee858b68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 b02b5f35-56d2-4a94-b726-c80fa4e019f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 d2926201-9a08-4a72-9e9b-d93cb9e97a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 4609924f-d5c8-4966-a0f6-d0634953122f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE629;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4F4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4935;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'hE629, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #982 9fb5034f-5336-4803-8b74-8526274c7ba5)");
unit.assert_eq16(16'h4F4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #982 9401e293-fa31-4be8-9e26-2fd4f190b72d)");
unit.assert_eq16(16'hE629, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #982 7b6226e9-e54b-4ccd-9f8b-f30cff89d74d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 ab97550e-5fb7-46bd-8473-bb4195f372fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 d2155aab-2cd5-4888-90a1-07e49c08ce1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 feaf32ad-5603-4e37-a271-187683c16b6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 c043c2a1-4ddf-4fb6-aefd-79522b97bbf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 f31bd5c4-249f-48cb-8340-6c3406805f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 603e99bf-2138-4701-a675-21fa90e358d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB875;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDACC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h6A86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #983 ebc28eb8-ba03-4076-b067-46899bc47362)");
unit.assert_eq16(16'hB875, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #983 76b344e6-e63d-41d7-8a4c-fdb4dc3fae8b)");
unit.assert_eq16(16'h6A86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #983 92d49531-3a9d-4534-9e41-2571170ac913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 433d06d2-7a37-451f-a41b-dc19eb739c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 5a6159c7-b705-4763-ba67-8d2edd38414c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 53455ab3-8cdd-420c-956d-a52ebb34ad0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 9725bfbc-1104-4182-a4d2-938e219b22ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 baeb7ce6-943d-46e0-a69b-5bb68e3a3616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 fe0da5bf-7610-47d6-8884-1b522d1154ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1E57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'h76B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #984 73017c31-15ee-478e-9445-01b5d42f31e6)");
unit.assert_eq16(16'h05C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #984 c9cca218-4ead-42b6-8a11-aedc3b7c7117)");
unit.assert_eq16(16'h76B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #984 cd3cb306-98da-447e-898e-a9530d99bbeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 b60b7611-73c2-466f-a2f7-cce43b5ed7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 fb86f322-30f3-4dbe-8a6c-b26dbd6487da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 60364d12-c44e-4277-8691-3eb4b219e742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 24deeba2-ce15-4a84-bde3-642f855af5a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 6fef5d10-a8b0-4180-9f0b-e5f7c1e00808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 80fa0e1a-3377-4adc-aa10-7a09a6357ed6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEF32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'h3B17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #985 b754cf89-c452-4149-bae2-a6effe3ff3b0)");
unit.assert_eq16(16'h7D79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #985 9da4b469-05fd-4466-82e6-9b53a3f20b08)");
unit.assert_eq16(16'h3B17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #985 f63b64c7-66fd-4523-8572-3064f6822b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 c4ee3eb1-97e1-467b-b916-516efbc5544f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 4b251857-0f4c-4e58-b9b2-fafbab431b1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 4e320c9c-7056-4d63-90ad-f7e9f0860666)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 f08aaa58-ffe2-4885-8a55-2e897e153625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 735e903d-941e-4c9c-8bdf-dea746a1b8fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 9497b50b-f050-421f-84e9-1ca7c78c9074)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0733;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5517;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA5C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'h0733, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #986 a00f47fc-a46d-490d-bc19-8852c6170389)");
unit.assert_eq16(16'h5517, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #986 8e6f813b-7f44-4942-9a62-1d82a500fd0c)");
unit.assert_eq16(16'h0733, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #986 026c3ed0-2d8c-4a1d-bd11-2f45b2e02bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 fbc45673-da79-432e-ba34-77ff22889eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 e133e0ea-f6ae-44ce-bd0b-fd2610e811e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 abce68f7-8db8-45d6-ae93-47204d02a9a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 14afc906-7710-49ee-a0d8-e3249359c377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 f2601d26-c021-4901-8ea0-38cc1d8f4726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 e6d45499-e9e2-4e14-b5e0-f0d8cd3397ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE671;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD4D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'hE671, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #987 ce016575-27e3-4f7b-93d2-e4ae0de97fd3)");
unit.assert_eq16(16'hAF9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #987 007ae174-51bf-4b3b-8d0d-c7f14cfb39e7)");
unit.assert_eq16(16'hE671, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #987 7367b846-af52-4361-92d6-aa6588b7465d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 0d35ddb0-5406-439a-b6ab-850a953e8898)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 a8bdd2f4-5b42-47b9-82f1-427f67f00a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 0617125c-08e7-4f21-8457-56d0f126185f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 ff6e8005-cbd3-4eb6-a313-8b2f4ac3513e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 68d6350d-19ac-42b5-9bb9-9d927e2e0712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 1ce84567-190f-4d1a-a074-f0038be2fb2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE844;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'h8C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #988 50f29bd2-9fda-4d48-a31f-c3e39a026ea8)");
unit.assert_eq16(16'hCA52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #988 2aa7df85-fb5e-415d-8c0d-63da9bf0c5f5)");
unit.assert_eq16(16'h8C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #988 ef79b717-dcf9-4736-9a71-6e1426ca418d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 93caa377-1fff-4bc4-9b1d-919435bcb4ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 f978eb87-0791-4192-82e7-e96b27b28aff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 8a0f72e3-ff2f-4cf0-b970-a2653cbe4ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 73cec7e6-46d7-4534-bd3b-63e7fd465638)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 fe04d8ce-27b1-4c6d-8a02-45ce4cc3fbc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 d10c62e9-7d49-47af-b56a-50939f94932b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h33B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h81B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h87D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h33B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #989 ba75ac0d-dd3d-4a77-a4ce-8f7bd8abb3c6)");
unit.assert_eq16(16'h81B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #989 a1153940-2fc1-4816-9cd8-963463611ab8)");
unit.assert_eq16(16'h33B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #989 31cf7966-261d-45a4-aff2-43b820dd1962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 5efebaaa-c95c-4366-847e-ae2c63d66e6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 720c173b-b6a8-4b24-aeab-48a378e933cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 e7bbe224-5dc1-45e9-bcc0-d0cc4728334a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 fe5d6935-26fe-4324-9fa5-e79e526f135a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 fe6e9472-ae9a-44b9-b0b1-8178c9f7ba49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 8214d501-9360-46e9-9ece-2ad965ac5312)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h67E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD3E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'h7EDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #990 acfa37e2-a10d-444f-9249-600bb1bc0505)");
unit.assert_eq16(16'h67E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #990 e0cd4745-40a4-442e-b098-8883c22958eb)");
unit.assert_eq16(16'h7EDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #990 e54b3662-4637-4e8e-b71b-651d21174a97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 2f4737a8-4123-4cf2-835a-141bb427f126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 f52590d9-064b-40b5-8f8b-5412cc465222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 1202fc4c-489a-474e-826a-f3694ca3c4b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 f27da3f9-ce18-4a96-9dfb-19f4e2158c3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 129ecf9c-6514-4407-b2b1-8af40eaa8647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 93939073-a6db-4dea-b465-dc5e43c38c45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5906;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'h0F96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #991 5e52861c-0624-44b4-8146-6fa585cc9936)");
unit.assert_eq16(16'h5906, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #991 81a45925-af53-4771-a90a-cb297a07bc28)");
unit.assert_eq16(16'h0F96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #991 d70b8b40-8381-4f0f-ab74-f6b7b64db39b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 da5b39ab-fce9-4f9f-af57-d26f94e0c1d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 5f65bef2-7154-4121-8224-78cfc6b3ef07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 1ccb7efb-9a0e-4141-896b-059e44c78ccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 c613e0f8-f414-44a7-ab35-0ab99315025c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 eb714a94-132c-44b5-8adf-46defd9d6de3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 a7017fef-4e5f-4021-9fb1-f2b2543cbe57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h42B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB2C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'h42B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #992 83faf9bd-e6a3-4958-9080-5bcb4f3d4d25)");
unit.assert_eq16(16'h4E37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #992 e2959d93-a7fb-4564-9696-cd8cd0324774)");
unit.assert_eq16(16'h42B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #992 0aec91f7-57be-4f56-84a9-da60db48dd1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 513c425a-3a22-4091-89b0-0940f4a2a82a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 873b220e-a4f7-4263-a67c-f41154af13c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 f28ba163-8ce1-49fe-a6af-92fc3d053467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 a7fe7ef2-3721-4da6-9f3e-706ef6ee1932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 173f57fe-6627-4e2b-b1d9-a9d0cdd2e7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 bb894f4b-7aa5-4acd-acc4-80e3b965e4fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h13F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4421;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'h13F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #993 b53df03a-9a60-44fd-a061-bcc62e98f9c0)");
unit.assert_eq16(16'h49C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #993 0b7523e4-77f8-4fe0-9133-8fdf86520257)");
unit.assert_eq16(16'h13F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #993 8b16aafc-64b9-4a95-95cf-63f4f9489672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 333a09cd-fc36-4a6c-b77c-c399614fe5fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 91a09834-a6c2-4904-a804-125df25b00c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 1adbb8f4-f7b6-4d10-976d-6b4a5a62e0d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 680f332c-18bb-4588-a3d5-9b1b42792ec8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 c5111503-0f5a-466a-b2fa-00a99f9f1b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 3f0a67a5-4706-4be2-841b-01616fed4744)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDECA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'h04A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #994 885c8cd6-f8d5-49c1-ba27-050a4716f520)");
unit.assert_eq16(16'hDECA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #994 5e2bff3a-cc8f-4a4d-9776-f689ce94bebf)");
unit.assert_eq16(16'h04A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #994 14b2d812-4fb6-46f3-8b6e-b83fcc0f526a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 5a47090d-a077-4fba-a467-40f0a0880116)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 6fe1ce05-7bff-443f-ada1-277e084b017c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 acce9070-596a-4c6c-b469-57952fefe08f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 6eca72b3-5ae5-4be6-b2a3-3ccf4e8af860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 302f0df3-b55c-4fe3-a2b1-4e3a1c1e85f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 5023bb67-382e-47e2-bcfa-7d715a4c06c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8549;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEBC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'h0B62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #995 504ae56d-fcf2-4c64-8a5e-57e7e40d5c20)");
unit.assert_eq16(16'h8549, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #995 d5ada0ca-8a06-4c56-b5a8-040c55930482)");
unit.assert_eq16(16'h0B62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #995 eed3ea4e-b734-4d13-a04c-b00c41ed35fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 4355f54d-dda6-42e9-8a01-17e2b0b946f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 068fc94e-ee89-4ffb-8837-b1aade76f469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 81691ad1-1f14-461b-a23b-1d250036f518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 5202ce23-aa9a-44fd-b1a9-6aef00cb764a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 aed0dfd9-5805-478d-a53e-fd645874a1a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 d7a7a382-bc76-478b-9474-65525f34cbb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h12FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFBC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'h12FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #996 77a194a5-5a44-4ddf-82ce-8205bfd83302)");
unit.assert_eq16(16'h2C91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #996 6661759d-9e25-46a7-bb01-e8d91952f9bc)");
unit.assert_eq16(16'h12FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #996 22406f05-1f8e-4a58-a55b-075437d223de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 62880153-920a-4b23-9df5-cc28469038f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 2def3d22-723d-4b4c-97cf-99cac08268f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 2bb2133c-a577-4438-a080-fb149ccf5a72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 602009bb-9694-4f0a-a31f-74da0c844f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 1f4a8ff4-fda4-4f2e-9e5d-0f4c24ae7654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 cce77f13-61b5-4057-bb1c-d1b3e6256058)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h706F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5196;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'h706F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #997 520aa986-bba8-4e39-a98b-2566b1606fac)");
unit.assert_eq16(16'hDA6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #997 6677df44-b748-4258-b141-c33f838e864c)");
unit.assert_eq16(16'h706F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #997 a522f79f-020c-4401-8185-8a56e89e6f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 8f593274-f25c-4aa1-979a-526127f06ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 0b01dcd0-428c-4836-a3fb-01b41ff871d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 c46f2aac-fc37-4eba-b42b-1c8dbf9b9189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 76c113d8-7360-4b8f-ae5b-7778b268fe29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 f8ab27f9-9e33-402e-9405-2915b57ef115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 3fce48b7-3974-4cac-96d9-987aeecc8f4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h133D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h13FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'h133D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #998 16cb7b33-da80-4c6c-b3b4-31a7fd796460)");
unit.assert_eq16(16'h5E0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #998 4eaa162d-05cd-40fe-b5bd-58472d35b098)");
unit.assert_eq16(16'h133D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #998 9deda74b-56a7-4391-a9e0-21f62b525132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 7950b3c9-72d5-446e-b597-9db1056b4388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 6a68603d-bbdc-43b4-b091-9b01df95a075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 ceb36aff-c0c4-4eb5-b9c2-7da689a2e3e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 b3ec1c26-7a44-4372-b3cb-ad3f90cc8a00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 a84b489d-d102-485c-a08f-b08a788786e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 b952ed52-803b-4635-af46-4ae7c54251c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h84E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9D32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6041;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h84E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #999 f4a34dff-2da9-4f53-ac37-7837800f8469)");
unit.assert_eq16(16'h9D32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #999 79065217-dbc9-4f9f-8a47-3e02262b0eb2)");
unit.assert_eq16(16'h84E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #999 1f0d50bc-35ae-41db-9126-578760d883f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 6e10da19-e4a3-4d15-a98a-95859bc024e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 9a327dae-f73e-4d0e-bccf-16f6d4113797)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 0715f7f5-bbac-4bb6-984a-bcb681c908dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 25c17941-052b-448c-bd4f-74a683bab974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 33d0c281-71e5-4bb1-ac68-db9debb10500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 d72485e1-4f42-4fc9-9274-443dc799702d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h426B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h39B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h53A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h426B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1000 a192e6f8-cb31-4eaf-b996-466a88b69663)");
unit.assert_eq16(16'h39B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1000 68be4548-d03a-4743-8763-1f97d6e55933)");
unit.assert_eq16(16'h426B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1000 c658b8db-f3cc-452e-ae97-c07e948505cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 9f8368b7-df49-41f9-84ae-53ecf1bc26a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 541fdcba-6b43-4a81-9d18-bf65b1b35812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 943e0260-a871-4077-9e83-f094cfebf51d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 7ec4c4a1-4230-4b91-821c-a0627e4e3847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 1f2338fc-2697-4479-9286-8381b3f08cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 ed6120d8-ba83-47e8-975d-e59eb4d9d0a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h76CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h760A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h13BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h76CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1001 423846ed-ffba-4b9a-94d1-dfc6553b15b3)");
unit.assert_eq16(16'h760A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1001 0ecaf619-8075-44b5-945e-299193b9a15d)");
unit.assert_eq16(16'h76CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1001 60f26a5c-6d46-403c-a6c3-3c14fdf26de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 e71da8b9-f182-41b4-be7d-2793242b8aef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 059ab5ca-9ba2-46ef-bb88-0eba17c72a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 cb05f8ad-0cb0-4800-9796-88d4d9f65d12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 26abac3f-c43a-4dcd-8b8f-d87e31ade3b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 6519a1d5-95fc-4f13-9b11-16344c0ee7e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 3a1cf758-4139-4408-847b-59b3792f4f93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h332A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h3B1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1002 9e6a1a24-d526-4a6f-993c-d09ed992563b)");
unit.assert_eq16(16'h0B04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1002 74bf57a5-f0e4-4c5d-8a29-a1a912fc8ceb)");
unit.assert_eq16(16'h3B1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1002 736ac816-3cd5-4ecf-8d34-d553d30e7a1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 b7bc5c69-52be-47fd-8142-ec9e74e7b950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 505be120-de9c-4bf0-85f1-d5e0284336e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 5177fe0b-145f-4394-9ba4-3ddb8b3dd3bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 71ac618e-2f24-4201-beca-3f271e177bad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 84deb8e0-cc64-48a0-b67c-f116610fe09a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 5039ccc2-868a-4b84-8aab-fb62f4a2da4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9723;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8901;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'h3858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1003 a5e4e4d2-7adf-4edb-a6e8-76cce4ff7370)");
unit.assert_eq16(16'h9723, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1003 5d5dc3f3-6cc0-4562-85ba-e15c4a26bab1)");
unit.assert_eq16(16'h3858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1003 39f2aa70-eb72-4b93-82d1-3922aee77590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 5b3c4a9f-c855-4006-b0c7-ed40d0d84f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 2b836518-9d27-40df-ad06-b15cef1fbc53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 196f0e68-bb15-40f4-add8-28eaeab81da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 e4ed7cc9-6464-4bbd-a1fe-d2e5592aa1d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 5da1ea3f-7420-4ffa-b97a-1759a742b054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 9052fe73-c814-44f9-abad-2fcae81cc4ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h921A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h0A00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1004 1943a555-6ba9-4b8d-ae71-d9252c9cd210)");
unit.assert_eq16(16'h921A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1004 3c3af02d-3b32-4775-8a9b-2c3af9501eb2)");
unit.assert_eq16(16'h0A00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1004 1c21eeba-8c03-41be-9f54-340f3e235042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 0a1c9458-f852-4266-b663-b14ff4a9af8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 c04bbe33-dfe9-4e2b-b870-3b9ddda5e344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 dec986f5-a22e-4a44-bacf-f7806c9ba2c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 f371b4d1-b274-4886-b808-4adca8754516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 c74d10fc-a52b-44fe-b2f7-8a48d8da9f1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 1dab55aa-b331-4128-95f8-aff9ccbab0a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h91BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h15A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'h4F28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1005 d28500d2-72fc-4c18-bf39-82686837ab95)");
unit.assert_eq16(16'h91BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1005 9965061b-bd82-4cfb-88ca-1ef09bb5f4ad)");
unit.assert_eq16(16'h4F28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1005 57f1b6db-c98e-4639-bcf7-320ef9b0c32c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 37ef8258-4692-4ba8-9de4-93a3b6d64394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 2099277d-ae0c-49e5-9ffe-dc701f53ce7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 a81eee1d-74e6-49f9-b081-4c5276c0be72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 040535fa-b2df-403b-82fe-3cdcee6d2720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 e0ca311e-efd6-4a43-8a05-d8404ece6a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 55e4c39d-ee13-4698-aedc-78691b5561b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9950;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE968;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE59B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h9950, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1006 9ef80380-c316-49bb-beac-b63c508af7f6)");
unit.assert_eq16(16'hE968, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1006 6b841cff-906e-40c0-a806-a64c2d476f11)");
unit.assert_eq16(16'h9950, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1006 de9fc65a-4ae0-4b2f-9fd2-90ac4e3a38e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 e7531408-7b13-46a2-b434-ebd16e7a9bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 f12b39bd-f3f7-4081-af74-3ac8103cccd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 0ef9d804-0b98-48fd-b822-656ece97076e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 3751cf35-61f9-4b24-9453-09ecc2c38b05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 40ba14cd-8e62-4331-bec6-4f48331681c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 35fd19d9-ef59-43d3-b482-45c2fc0454ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1E9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3A6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9BE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h1E9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1007 c2ff7e2a-791a-499f-8bf0-662047834b00)");
unit.assert_eq16(16'h3A6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1007 2049033f-67c3-4365-8660-732fa8ff16ff)");
unit.assert_eq16(16'h1E9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1007 c466c75b-531c-4674-a950-aa317ae590e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 6a67a313-b3cf-4444-933f-2c72c2e124a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 301941af-49e6-4553-8db2-60abd1a579c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 bcc5b5ab-f349-4faa-9a0f-03ff4b0eca71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 4167156e-21bf-4d61-b03e-c2e45856f9b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 5555d883-c400-41ad-b72e-eef2b434a45b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 b5e6b227-edf0-4fb7-9d59-8b8b62a9c5a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1ED3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9928;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'h1ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1008 a7a14aef-2871-4f08-b7f2-5c725efaa77a)");
unit.assert_eq16(16'h2BE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1008 519c4444-b5ea-4eb2-b679-77b878f6c600)");
unit.assert_eq16(16'h1ED3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1008 c67e524f-d1f5-4444-92ef-f9413bd6bd2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 dccb4798-2113-4b92-b87e-00055040992e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 9c957f82-6d9f-4d0e-864c-d38976a6ae01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 7a596794-a57f-4e4f-8d1e-21e2220fb737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 1b06b46e-b125-4c70-9920-720a4daeaee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 f55996af-79e4-42f9-92c8-58cb5ae8d631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 7e8078ea-7ea9-4230-a918-9c0471412fc8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h09CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA002;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h86DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1009 e0674c70-d5c9-4bda-aa4a-779e3a6569e7)");
unit.assert_eq16(16'hA002, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1009 24cbce2c-5862-4871-8f2f-d247cc0dd386)");
unit.assert_eq16(16'h09CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1009 16b451d8-a410-4eb4-8a0d-0a426998fcaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 aedc2f33-5971-489f-86af-7d1fae4daec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 e55a4581-4cb5-4464-9cdf-b5e139d95552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 ead5ffdb-9039-4e3d-8e93-8e3dbf33b275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 7e71eca7-49d3-41f1-b0dd-af904721d54b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 6b60d095-d088-4e52-aaf4-eb0f784e4812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 09688735-51e7-46aa-8558-6acd1d6a94f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC45C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA38F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'hF7FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1010 20257cff-d62d-45e6-95ce-9c7c13ea7fd5)");
unit.assert_eq16(16'hC45C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1010 cb30dc8b-a835-4d2d-b611-0e90a5731cc5)");
unit.assert_eq16(16'hF7FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1010 7be22896-8843-4990-8d74-1564e3df7044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 f37b1ac6-5223-4c8c-8628-454484e37535)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 637957ca-9896-41b9-8f5e-63cf4a616971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 151b62ed-15bf-436c-870f-b1b7d97adc34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 879916e1-8bc4-49bf-a235-b236ea8ed886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 48ad9b6d-5d77-4bb3-8b01-3d44dede51de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 77d4ef1d-b6ad-4063-b816-4cd6c6530efa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE069;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4986;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'h0DE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1011 6fb50b0f-f742-464d-bda9-490e9979f997)");
unit.assert_eq16(16'hE069, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1011 ec651340-203a-42de-8cd3-e308c858809d)");
unit.assert_eq16(16'h0DE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1011 b640b798-bc91-47e9-a612-2163ce7ce9f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 1a612db4-6b2c-4275-89dc-56b5db76ca67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 b1e55b51-0e68-47f4-aa50-3dde14877b1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 663bc6cf-18a9-4f6e-a4a7-85f7b5801c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 558273ee-73f7-40d4-97f9-7d67f4a3dfce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 def84231-799c-40c9-8e49-e4b511b7a7ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 c5337073-d5d9-49bf-bffc-61185a4921ff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h880C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h54B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1012 e57bcbca-8057-4359-b68a-909b7bc00456)");
unit.assert_eq16(16'hBF50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1012 69194c6a-7bf7-4521-aa29-b134aacabfb2)");
unit.assert_eq16(16'h54B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1012 b45a4d9a-6456-46fd-9982-e27b3c5d426a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 b8c3f094-5a68-4430-9c2e-3e6d3eff0ac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 1a31346f-85f0-470c-9884-8b0dcda6b0b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 5f372307-536e-44d6-819f-dfcaaaa040b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 9a39a5b8-1200-4aa3-8720-87ced9c90277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 89268c66-418e-4611-bb67-0a61fe46d666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 ecbf20cc-1f9c-4d81-9be2-a763ed21c5fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE721;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h19B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD564;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'hE721, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1013 86fe30a6-fccc-453f-9b26-f9130b03eed6)");
unit.assert_eq16(16'h19B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1013 2438e6b3-69c6-4c4d-9173-d8c0fddd7682)");
unit.assert_eq16(16'hE721, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1013 e0a6ddd7-af22-4dee-ac8c-f41aa161c642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 43ae6cd1-de35-4676-b80d-ffa325aa5af0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 530a9d3d-8eea-45f6-8d85-e1a2cfef3300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 618802e5-6662-48cd-b430-4bb8d5a0fe4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 fe249408-5e0a-444d-ac2d-cf0dca843a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 91cf2790-56e5-4e59-b32d-1810288eacda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 cd785af2-5e5b-4ab1-9c30-2d02db395ee7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8687;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h62C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h8687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1014 190ec874-5279-4be1-aec9-0be904c9b201)");
unit.assert_eq16(16'h50FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1014 f953a107-d3df-4f4c-bcfa-e38ab2775ac4)");
unit.assert_eq16(16'h8687, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1014 2dc4327f-2e4c-43b9-8d46-7faabb2ffd78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 5e00f285-9aa8-447f-96b6-52fcb567c6e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 ce3c9e3a-1f39-49cd-b640-83a220b96608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 65d36174-7c7c-4294-9f6b-e1a40c42a7cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 43436077-bc51-410c-877f-d4d3addff44e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 0e121d7d-6067-4c70-8a8b-ab7df9447538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 b4297751-24e2-477f-af15-b139d8811f5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC6E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h72F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'hAB2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1015 dc9465ed-fd98-4681-81cb-4158df7500ca)");
unit.assert_eq16(16'hC6E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1015 dc692a41-5c76-40fb-879c-a71e40ed7c80)");
unit.assert_eq16(16'hAB2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1015 527cab35-89c5-42f9-a385-ba96c9bf779c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 b66308d5-09e4-4743-9576-68c3040aa793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 831537a9-a15c-4496-8420-082013e9de5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 465fea50-aa84-4a2f-9981-5aab102c9d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 8414ebb1-7762-4cb2-8994-4c842d192fe6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 983f0c33-bd28-4e9c-807d-8d1e84d3300b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 c3864dd2-44db-4d66-822d-36261cab30ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5A35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h338B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'h5A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1016 b1040e50-8e77-4e93-a72f-d86c6d043c03)");
unit.assert_eq16(16'h338B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1016 ec2b19c8-f82a-4cb0-94ef-6733d0cf5de3)");
unit.assert_eq16(16'h5A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1016 5268ced3-721b-4ff7-95ea-162081b1bc7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 b390ad0b-82e6-48de-a0a3-35ea3e8de96e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 4456f53b-e43d-44b4-91e2-a5c708507e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 7cefee79-8d4b-420c-b2b2-bd2c22939a20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 12054f2f-49ed-4204-83fc-eea770daf939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 5144ad1f-cc29-4546-9e61-c3d7f66366ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 0500a167-c1bb-4e9b-a198-c6ea4d726816)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8163;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9D8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0190;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'h8163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1017 59dd6f04-b15e-4625-936d-1f7122749850)");
unit.assert_eq16(16'h9D8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1017 ae9e6f29-8a71-4730-b703-69ace2c7add2)");
unit.assert_eq16(16'h8163, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1017 dbe9f06f-3290-4c46-bbd8-e355c44e91df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 d52059b6-7eb5-4c65-a4e3-d4be8a682252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 3d11cc3c-e754-45e9-b47e-514c5cad7ab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 b0f5d0d8-769c-4219-810f-9541d5e4efcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 5aefb65d-2e55-45b1-8ef4-e025d06fa565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 7e143ea1-f9bb-4c54-94ca-4a267f577290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 58e3f2f8-245c-482d-b333-62e149785eda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h72CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h72CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1018 488d392b-47d7-4d86-ad66-220c12a57806)");
unit.assert_eq16(16'h79F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1018 7bb39bde-8798-4373-93f4-ad0d39a1f7e5)");
unit.assert_eq16(16'h72CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1018 cfacdd0d-7e6c-4732-a7c6-36dca9e11459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 28b680e9-dbf8-4ba8-80d9-c4b8d529dc0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 218e5b50-6ac0-49d9-aa0e-33c84f0a7cc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 26da505f-530e-47f9-a235-e12ebcc47086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 5d258afa-34bd-4c43-8be7-64736a642ac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 b35e24cd-5eca-41d1-a977-32b86e580429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 8dfe301b-3289-491c-afc4-1ab13816ffb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0650;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9DCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1CE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'h0650, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1019 b717fe64-68a2-4565-b6ac-38778ad646a4)");
unit.assert_eq16(16'h9DCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1019 3ed80dfb-d4bd-4893-a886-6f7e36e6f8d5)");
unit.assert_eq16(16'h0650, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1019 71f202a1-a4cf-4b1e-9e5a-5fafaedc5459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 7f97d712-290c-458c-802f-b39d8337966b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 d6868dc7-cb3b-4b08-a80e-d9d13b383b40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 d1053c3b-a683-4844-99b5-f5cfc91e565f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 d924f4ef-d198-4acd-885d-6e81ec4a0078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 96d58e56-fc90-4466-be1d-87b00cf40d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 91a4a9fe-c025-48a5-bbba-84ab74b43777)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h677F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h752F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'h677F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1020 afff75e3-ecb8-4fd3-828d-a7082f1acd29)");
unit.assert_eq16(16'h5B14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1020 a50d5cfa-d4a6-43f1-9d51-bf15005f6445)");
unit.assert_eq16(16'h677F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1020 87a743a5-3635-4b6c-8f8f-044acf0c3560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 fedb6874-2e31-422e-92d4-60f3161cac5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 fa85ba9f-d3eb-435a-9d13-56e1c253323c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 93cf3324-ad8c-4c5a-8819-1169cd7f53be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 2cf32fc0-4fcd-4039-99d4-f1da56bcaa4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 9eedc70c-b3d0-49b8-98c7-bde378f04fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 45e4bb9c-ea4c-4b9a-9a66-828230683795)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5843;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC4A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3D1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'h5843, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1021 1b7164d0-c591-4e41-b48d-90707ffd86fb)");
unit.assert_eq16(16'hC4A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1021 40661ece-d8bb-466d-ab36-4f1387e45467)");
unit.assert_eq16(16'h5843, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1021 20e995c4-5bd8-4689-8cc0-d9e4a2ad2580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 1731e432-9265-4e26-8e95-78796fdf267b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 210a1abe-70bd-4e9d-b947-31560bbabc25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 909e2481-8126-4768-8151-aa5501b09d05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 ef097a79-8196-44b7-afe1-234980ebbe87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 8497f224-2dbf-4039-8141-fd53998ea8c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 16bbc562-bf71-4615-b7d1-300597654430)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1D46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4BF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5C35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'h1D46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1022 a8747e93-6939-4c34-9fb4-ea9aa562eb1f)");
unit.assert_eq16(16'h4BF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1022 3d483ba4-64af-413c-a922-f587e78e721f)");
unit.assert_eq16(16'h1D46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1022 42995359-1ca8-4f4c-965a-01f24447ebdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 8701f2d3-3e68-4e5d-a176-b4c67bf65667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 a9b3dfc5-5e14-4048-af5c-cd5da9eadc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 a496576a-759a-4b0a-81e3-ce4992616283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 bcaeb972-7cdc-4c09-8677-2e15243f95c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 063c9c58-b7d2-495c-b5db-79fcd5843ffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 2dbe847b-b459-4f9d-9e9e-a8ac9b339c1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h150D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD1E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'h150D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1023 f3e07ef5-a9e6-44ab-b5f9-a4876054a56d)");
unit.assert_eq16(16'h2B58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1023 c0eff071-d997-4297-af4a-b4d11eb05039)");
unit.assert_eq16(16'h150D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1023 df52e08d-1a9c-4280-8093-1ca9bddab267)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 d88cdd78-6184-4330-810b-faeaae79ed44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 f232d709-70b8-47d2-8695-f5051fbaf5de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 fe9bcccd-0c54-4b02-8e0e-1e6c63d19c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 35f427a7-86a8-452f-be4e-3e106cacb619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 d794ee52-35ed-4810-9eee-dfc31bf8d4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 7ba3a52d-e515-4605-aaaf-9952dcaa354d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1024
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6DA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAE89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1520;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1024)");
    end
end

unit.assert_eq16(16'h6DA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1024 df5c95c7-31c8-4f58-b1ea-896a48090524)");
unit.assert_eq16(16'hAE89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1024 b47484a6-01b8-49e9-955c-def09ae107e9)");
unit.assert_eq16(16'hAE89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1024 68c522ed-c3f1-4516-bc39-58799a1609ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1024 039ba96c-2aa0-4466-aeb2-e7f6e8080107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1024 25301a79-91ec-4683-bd97-edb8e6c39496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1024 d686a83c-af78-44a8-99f2-d22f89073ece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1024 ecec49f2-9220-4d31-9011-870df2feca9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1024 2a93e48e-baf7-458d-a277-5383cdcc8abc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1024 1f31b254-1f6e-4955-9e31-db1445b4b231)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1025
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h670A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4CD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1025)");
    end
end

unit.assert_eq16(16'h9F1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1025 3f6389c6-9f4b-452b-9996-943d9bddbdca)");
unit.assert_eq16(16'h670A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1025 f48ec385-b388-4631-a8a3-b56314a5c646)");
unit.assert_eq16(16'h670A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1025 992ae7e9-6e7c-4a77-b8f5-9c40037c342f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1025 22ab5e95-ce9e-4171-b571-114fe4ec11f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1025 2400c940-6ab0-43b0-86fe-203b0cc6ddf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1025 8ded83a7-1c5e-4757-9393-754ce8314a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1025 f9bca89d-c6e2-4b68-99cd-bc74df88cf3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1025 4fe55e5f-e3cd-4363-aaf3-84b105f7dcdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1025 fe9ae256-a2b1-4808-91b1-7b0fb255dd5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1026
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hACD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCDA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1026)");
    end
end

unit.assert_eq16(16'hACD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1026 58572046-fc89-4967-9d87-5818212d6e99)");
unit.assert_eq16(16'h1A20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1026 b928056d-0b06-434f-aeac-a208411fa793)");
unit.assert_eq16(16'h1A20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1026 3243a557-1c33-4d69-9020-3a9cc8c3bd6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1026 63f33517-10e8-4448-bc47-c417a2efa6eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1026 6c47771d-c409-404a-9d9d-a338a1c29219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1026 4116da4a-034c-4b31-b895-aa10256b31ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1026 e01631d4-0aeb-4c50-b26a-2f3de5cd8db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1026 97e62ffa-8ee3-4ce9-833e-0c904e7feaf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1026 1e55958f-6290-4f8b-ac47-14f186fc316e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1027
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCABC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB673;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1027)");
    end
end

unit.assert_eq16(16'hCABC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1027 a3c2ab5e-4e67-4d10-8183-17dcb598300d)");
unit.assert_eq16(16'hB8F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1027 9ff28bab-ccb6-4391-bc9d-2e1b7d45b228)");
unit.assert_eq16(16'hB8F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1027 ce789938-9c2b-41c3-a7d6-49bc4ef42aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1027 cfdbd5b3-bd2f-496a-a620-8975ac5f2785)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1027 3cf3e964-2ca2-4cd1-aaf2-ef286423954c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1027 87a2b212-f089-4d66-9705-9443a0e195f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1027 54899c13-4563-4f10-8e69-69c85bcd5e96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1027 6c1373f7-3539-4506-a12f-ad3cb8b1dea3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1027 6ae1a394-d330-4125-84bf-10b30e151600)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1028
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3EE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1FEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCC98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1028)");
    end
end

unit.assert_eq16(16'h3EE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1028 72492082-69b7-401c-bb98-1b406b86f93c)");
unit.assert_eq16(16'h1FEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1028 59b849ca-650e-4d57-be59-46a3fde75455)");
unit.assert_eq16(16'h1FEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1028 ce35e825-8db4-45c7-9cff-a8fbda42b9f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1028 f50cfc48-da29-4791-9fdb-a51d76ef1739)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1028 a3623dc0-9c7b-482c-8aff-11811b125c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1028 734e1c81-b30c-4d44-b155-2f3b925fac88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1028 f4bdd9f8-c794-4b50-bac6-117454be2ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1028 6e83b00a-2f50-4ad4-840e-06d2935e33f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1028 97a40335-1bb6-441a-afaa-fe48e76cc05e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1029
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0CD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF30C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1029)");
    end
end

unit.assert_eq16(16'h45A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1029 89025297-7b28-462e-b367-23aa0479c4a7)");
unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1029 9e1ee762-69b6-4fee-b9c2-4b54aa4ef7a1)");
unit.assert_eq16(16'h0CD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1029 9d8cce7c-b697-4c0b-ac27-309260212334)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1029 e872844e-5b93-4ab4-aff3-5c32a1ea1f11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1029 3dc89b6b-1bd2-47dc-81d4-0d19eb356ccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1029 a7887d52-2326-4c07-8416-8c39076507c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1029 968742c9-2bc6-4669-b408-bf97659309e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1029 978b50bb-76f1-466d-a777-0af067691547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1029 b25e6910-5c8f-4ffb-be3a-cce79b250c33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1030
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9BEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF56C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1030)");
    end
end

unit.assert_eq16(16'h9BEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1030 24f81458-1abd-4a4f-88d9-92679da82429)");
unit.assert_eq16(16'h48A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1030 ec16825e-978b-4311-a96f-34aaa1d3b3c7)");
unit.assert_eq16(16'h48A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1030 22eb6085-6be3-4d2a-9de6-f2932d15d15d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1030 665d7fdc-e45d-451d-a5ac-d6ea6784d887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1030 c5c79038-1848-4201-8673-e3e097c54d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1030 0063800b-203e-403b-b9d0-05f1f2d9c0b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1030 2a3e16e2-3eef-483a-a1cf-321a3321942a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1030 58e020d8-f8f1-45bc-a6f5-f0c3501ef567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1030 a1dd4972-df84-45e0-ad89-c8836ed187d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1031
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBBDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD7F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1031)");
    end
end

unit.assert_eq16(16'h2E17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1031 83f61c8d-9de6-4e8b-90af-e25278d19a0d)");
unit.assert_eq16(16'hBBDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1031 dd51764b-e364-4ea4-9c50-776c4b2375df)");
unit.assert_eq16(16'hBBDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1031 ffd05bc8-7fdf-4d47-a08a-41429f59beb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1031 2391a52e-51ad-42b4-8bb1-5abfca1898c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1031 ed817e6c-50d4-4026-95e2-20aee92232cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1031 9ea7cef7-6f81-45bb-9ec5-fb08dae38b2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1031 b142b233-1d6e-4bf4-b0fd-9a08223fcd4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1031 616a44b3-7296-455c-a72e-abd36c9ed332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1031 0b9f9d73-defd-44da-8f85-cfa1b2e58366)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1032
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD4B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h56D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h850D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1032)");
    end
end

unit.assert_eq16(16'hD4B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1032 927065b0-df2d-4657-a295-d479d0a2927f)");
unit.assert_eq16(16'h56D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1032 158a1124-ec42-4117-bc5a-9453cc9bb42c)");
unit.assert_eq16(16'h56D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1032 d490d62e-2386-4aa9-a69e-6615bdab1389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1032 31a34df4-1f98-49a4-929b-2b119b8be2dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1032 ff75e588-3146-4885-be9c-f4002a54dcb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1032 08241a86-2b3a-454f-af40-f1836effadee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1032 da12d0bf-e4f4-4f69-ad0c-e6045273c13f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1032 72e8abc3-c030-4283-baf0-6ba4f062229c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1032 b5f7f909-531c-4944-9c84-eeea15fa285d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1033
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h32F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7611;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1033)");
    end
end

unit.assert_eq16(16'h32F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1033 f533fa29-5ab1-4178-9fb0-589c725be089)");
unit.assert_eq16(16'h83E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1033 94bd7046-b374-40c3-abc4-4fb78543f61c)");
unit.assert_eq16(16'h83E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1033 81affa5f-61cf-4787-ae27-66d69e8129b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1033 26ecb88b-b1c7-4a44-80f5-99277419e2e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1033 f186d931-4c19-417c-b777-6aa4c4545452)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1033 7ac2fd7e-9007-4904-a1ff-be45c35990ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1033 8d24b7be-34eb-4c09-bc05-33e3de8c5826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1033 8fa38e12-2b1b-4534-9a73-d237967dcffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1033 cf8ef46a-738a-4714-afee-74a9c8cec28b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1034
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h21C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE9C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h55B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1034)");
    end
end

unit.assert_eq16(16'h21C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1034 6ef0dfb1-3814-4680-83c3-ec629d81e418)");
unit.assert_eq16(16'hE9C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1034 f9586fc1-2a9c-46ad-a652-298e973b91f5)");
unit.assert_eq16(16'hE9C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1034 36de93a8-6b16-4abe-9545-db3d8b7e6180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1034 e019360e-bbc5-44f5-ba0c-367feda7b699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1034 821c4976-df31-4a74-94bd-3bbe3619ed1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1034 a5916da0-4caa-4c71-925d-9099ba414c80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1034 6d9a9f1e-071d-4759-9d99-1bfc8b32d9d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1034 d4028976-4c27-4cd1-ad0b-50c0d731aff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1034 b05e4ccb-e9d1-477e-9427-66975c93607f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1035
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h431E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h82B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1035)");
    end
end

unit.assert_eq16(16'h431E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1035 3cf3a624-b14d-4b27-9092-b4ec7ff42d37)");
unit.assert_eq16(16'h2BFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1035 22de6d03-065f-417d-a48b-f6e297033c8d)");
unit.assert_eq16(16'h2BFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1035 ea6afbe3-3b1e-473f-884d-30bd33a7650a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1035 83f34c2f-0277-4f6d-8449-84037f52e5a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1035 7a59f3fe-d558-4a1f-b7c1-4ed439e34c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1035 46885c7f-723b-431a-b0a3-73fc42584bdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1035 69ffd7fc-996c-4def-a181-a01556e39496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1035 64f0b32d-4188-40b5-aa54-56b5f1a414d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1035 9ce16f5f-1bf4-472f-bb54-2d6afd6d92ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1036
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h50D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE124;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1036)");
    end
end

unit.assert_eq16(16'h50D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1036 f21a10d4-0f55-409f-9a5e-60a8435f51f1)");
unit.assert_eq16(16'hE124, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1036 1cde26ac-6400-4431-ac6d-789c50055bd7)");
unit.assert_eq16(16'hE124, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1036 72aecea6-be52-4d68-b0f6-4f7a7f7790a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1036 2113c6ea-a506-45d9-8c89-7bacecdae171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1036 df3502d6-22cf-43e8-b8db-6b52b46eab36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1036 1bf29552-295c-437c-8009-7bfaa5d66cf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1036 0036b466-b182-41f5-b85c-780a787b7934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1036 2a14ba02-c183-4291-8af5-45e4f0c1840b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1036 ceceaf71-f5b9-43aa-8a1b-7c6f240be017)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1037
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2379;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h33B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1037)");
    end
end

unit.assert_eq16(16'h2379, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1037 dff74c3a-7c41-450d-97b9-bd647d97a2d5)");
unit.assert_eq16(16'h9CA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1037 bdf287f9-21fa-4a9f-b41b-b974d5dca775)");
unit.assert_eq16(16'h9CA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1037 83839b28-0a8b-4aed-b30a-88f8d53ffdfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1037 9345d54f-46c6-4dd8-8a5e-d5d840194923)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1037 2122b823-68b1-4b04-ad03-931f1afb934e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1037 1bb991c8-6aa6-4bc6-b39c-754277289a29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1037 94cd52a6-5002-4632-a97b-9dc127cb1e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1037 1f88fb5f-9519-4890-8a72-a6d717a5cdcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1037 f1531eb5-09ae-4606-95d1-460b03678100)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1038
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC5AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFED9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE14F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1038)");
    end
end

unit.assert_eq16(16'hC5AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1038 d37d7874-54c9-4afb-95f6-c1eea2a7eee8)");
unit.assert_eq16(16'hFED9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1038 654e518e-765b-43b4-8c5c-3047596e4e16)");
unit.assert_eq16(16'hFED9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1038 64f6c0d9-7ff2-437b-95b9-a79ad5f0aa08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1038 e11c6577-4055-49f6-8856-b2c312aa489e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1038 912bd16a-99a8-49a2-817b-f869c8be1b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1038 d8c22ab7-459e-475f-b716-7d4ae31fe072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1038 b805d998-d121-47de-86db-d12e6916fb35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1038 908a8f60-8579-43de-a9a9-8ad6caf549fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1038 f1b335dd-4f3f-4089-a79d-a4e4084d29aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1039
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE3BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1039)");
    end
end

unit.assert_eq16(16'hE3BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1039 85b22ad9-78c1-45dc-b1ee-176c7267f401)");
unit.assert_eq16(16'h5D42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1039 6f706585-594c-497f-ab44-d2bef041e732)");
unit.assert_eq16(16'h5D42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1039 7999891a-f328-40e6-8d9a-7b45c935bcaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1039 5887b341-54cb-4125-9990-5a433565ffb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1039 15a20a21-fbfc-4cc3-b811-dd40e33d516d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1039 50df49ef-47aa-4805-b618-f8e1ad31ea87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1039 cae73bfc-1b48-409a-9118-2998a1376667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1039 ecaa3fe0-2eab-42d9-a198-ac65da0a8c91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1039 b92f3278-deb9-4c4c-942c-1999cee5be0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1040
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8BD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h604F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1040)");
    end
end

unit.assert_eq16(16'h8BD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1040 04e14cde-1aae-4e37-8795-3526217e085d)");
unit.assert_eq16(16'h604F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1040 acdf5592-fd42-4721-ae1b-f8eb0cf80e94)");
unit.assert_eq16(16'h604F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1040 e82ee7a9-6fd7-4d79-b52f-07dac36f7b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1040 3b3aeb37-399b-49c9-aa0f-38a22a8f46e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1040 4cda7761-3187-42f1-8730-514e4ee59726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1040 953db861-ba02-4422-957d-54d4b11b35b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1040 10e7a4f5-a557-49e4-bb75-3a67b1f19a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1040 74f0b7f4-34cd-4dc5-80f3-71db208a1d35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1040 2ed2d0d5-6436-45ce-adc5-e12bfd459a57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1041
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD31E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h385E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1041)");
    end
end

unit.assert_eq16(16'hD31E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1041 a0412d1d-745c-4c7e-ae78-6a519db7070c)");
unit.assert_eq16(16'h50DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1041 ce52522c-efcf-4ce3-8b5a-31400bf2dd57)");
unit.assert_eq16(16'h50DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1041 3b401e3b-073b-477d-a1f9-4d8b4a5cc854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1041 a95814a2-3383-45aa-b34c-a382ac594de4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1041 c07d2677-e913-44b3-bb09-9ab9698c834e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1041 d7e68060-d8c2-4c91-8d3d-5a546048bd8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1041 e534b77c-afd4-4777-8471-1079938857ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1041 84cecd25-209b-4b0a-8d50-45c543817983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1041 ae279d2c-20f4-4c56-8627-6b7d7a269928)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1042
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h033A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7785;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1042)");
    end
end

unit.assert_eq16(16'h033A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1042 6b19ce8a-a880-4718-bc1d-9416239b8dad)");
unit.assert_eq16(16'h7785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1042 86ff37e4-22e4-44a6-9332-ab405861f790)");
unit.assert_eq16(16'h7785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1042 a33cea0e-6bb6-4d0a-a163-25bafd12bb76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1042 1748b8cf-a3f0-448b-88be-13f99c651b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1042 1d777046-304d-4885-8d3b-7cbab9d22f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1042 2f34f705-e294-44ef-9c24-f0629ee00639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1042 1eef4653-512f-4a6b-a3e3-68032ea23140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1042 fe05f85b-c494-4db8-8e58-bb4478e5d59a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1042 72457c3c-cc20-452c-ba5f-d7ff2998536c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1043
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA2D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h878B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7CA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1043)");
    end
end

unit.assert_eq16(16'hA2D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1043 e8261abf-f1ac-4937-a01a-c1a5b225d63c)");
unit.assert_eq16(16'h878B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1043 3295e3a6-a5cf-4a28-86d6-62eaed15a063)");
unit.assert_eq16(16'h878B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1043 85ff0e08-9490-485e-a94b-7a70d1493608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1043 df875579-037f-452f-80d4-9c431955068a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1043 85e658fa-cd4e-48dc-9cb4-7a18a728b4bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1043 764de10a-bb91-4674-ba34-5bd211029a16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1043 34a68cf5-d1a1-4388-8ef5-dc37dc841f14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1043 4999bf52-a708-4c81-bf21-0f1d9761b24c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1043 22c58cfc-6b65-4de0-8bdf-2d05b037f03d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1044
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h33CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1044)");
    end
end

unit.assert_eq16(16'hC0AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1044 f8b52146-d71a-4862-9648-f598e2600c82)");
unit.assert_eq16(16'h33CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1044 4f1a8761-194b-4e69-b65a-c429319b8d6f)");
unit.assert_eq16(16'h33CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1044 d7fc2a13-4450-44c1-8426-2440ba3cc2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1044 aa6decb6-2194-4883-8de6-aa613b92f1ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1044 b98aee2e-0952-4959-866c-3b3a71c85cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1044 b7f96f76-4e08-4b50-b979-e9ede51ff8bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1044 3d632c19-0cc9-4a6f-ac6b-20160eab9c9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1044 af781044-c7c2-457d-9dce-0746c1bf4280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1044 c3e8b0a9-1ec6-4c88-8f0e-6090ea0da092)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1045
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h86CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1966;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h35E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1045)");
    end
end

unit.assert_eq16(16'h86CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1045 99ea668f-010a-499a-9dce-7b8699d918e0)");
unit.assert_eq16(16'h1966, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1045 0ff4ea54-2460-4b6b-8c66-3e305f79fb2e)");
unit.assert_eq16(16'h1966, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1045 315a8096-f56e-466b-b09c-54747955064b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1045 e9a56913-1937-4b27-8eb7-16c2d9846de2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1045 849f1e57-6df9-4bdf-ae33-739ce3338215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1045 1d8189f8-6fdc-470c-8c97-ae6e6d0ef1fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1045 e0fc35cb-21c5-4bbf-a642-ffadc3f7b99a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1045 4948abcc-036c-416d-8a3b-663032fef8be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1045 09dfd102-ea20-4eba-8e6f-de057e8a3dd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1046
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h420B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1046)");
    end
end

unit.assert_eq16(16'h420B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1046 f967e0ac-cece-4640-ac52-8dc82a75fed3)");
unit.assert_eq16(16'h6EAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1046 4af52a8e-ebf5-4c3c-89bf-750bb3165fe2)");
unit.assert_eq16(16'h6EAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1046 f5191f50-b157-4cbf-ac0b-9ac15ea47cbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1046 39c0b4d4-6ba8-4f60-bd21-dfa85f99f283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1046 7427de4e-fc6e-46f9-81ed-baf9270f50f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1046 84588791-cb3e-4c64-aeaa-6a45a98fda8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1046 4486c3e6-60c8-449d-b64b-e0c7838f208a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1046 7e8aebb9-7b39-4a64-a721-54d6cdca8c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1046 5efbf40f-7634-4200-bc01-4e3557a7c97e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1047
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAEBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1047)");
    end
end

unit.assert_eq16(16'h8D95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1047 170f1c5f-891a-4102-9d01-7040f00d43e1)");
unit.assert_eq16(16'h49D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1047 e12f2fe7-15de-4970-b89b-0d4f67d8d5d2)");
unit.assert_eq16(16'h49D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1047 6a611bd6-5a85-41dd-8a07-6fc307ec31d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1047 ee5bfb6f-8185-4bdf-a8e0-bedcf4762183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1047 adcf392a-72f4-4aa2-ae42-5baf8ee4aac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1047 f7408093-2bee-4400-aaa2-c8981b487780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1047 032a46d8-7ba0-492a-baf6-d39555d7b47d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1047 d4bb9dd6-f466-443a-be87-f2b64652fa34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1047 7c067848-7e5c-40dd-9e5f-a36602b4a2ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1048
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1048)");
    end
end

unit.assert_eq16(16'hBF8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1048 944c1e76-eb73-48a3-9a70-72301f996ee4)");
unit.assert_eq16(16'hA9A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1048 8a7c9709-8219-470d-8e92-38aaaddf44cb)");
unit.assert_eq16(16'hA9A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1048 5e8b2b4a-61a6-4a95-9ef2-ae5bd1aa4518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1048 9924afcc-f190-4ca6-ad4a-d737d07764ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1048 7b2fac80-f928-415e-9425-46df40004416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1048 819c9b1a-93ce-49ed-965a-d4ba1738d489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1048 28d4e3a2-6c1a-4f7e-822f-5826bc5ecd12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1048 0c67ca56-1c78-429d-b973-bfebaa144be1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1048 d4b6bca5-5868-44f4-b26f-a362af4872e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1049
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h456D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h85BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB18F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1049)");
    end
end

unit.assert_eq16(16'h456D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1049 e703e127-47a1-413b-af2b-ac3096cb65e7)");
unit.assert_eq16(16'h85BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1049 1b9d1a5e-42ad-4028-8272-0d50be9acafb)");
unit.assert_eq16(16'h85BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1049 99d5237e-af57-42c0-95a6-56bed364b48e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1049 730fbc49-22e0-4ba6-9c38-d2623f42cf75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1049 8b953d88-756e-4d61-bc26-5e8cb91943b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1049 1f760f39-c703-4b4d-97ac-acbce763e4b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1049 8f644858-c94f-4797-a7d8-7c9bb9e1c9f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1049 ea2fe4d2-796e-469d-a990-2397e7e3ae86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1049 165de817-2e43-4713-b13b-f8c06dc04191)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1050
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h042A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB7B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1050)");
    end
end

unit.assert_eq16(16'h042A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1050 7f61c873-fcc0-4e52-a9d4-7f22eac853f2)");
unit.assert_eq16(16'hC3EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1050 85b78c5b-e893-42a2-8f91-cbc554ffb6f2)");
unit.assert_eq16(16'hC3EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1050 209953a3-f82a-4f40-be72-5dfdfb6612f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1050 c64753f0-fbfb-4284-93c4-d78508e7461c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1050 b5e994e4-633f-4341-957f-1930a76530fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1050 7bf56768-f5bd-4a2c-83a4-3f66764dc1e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1050 2ba5fcf6-81b8-4e02-9f08-16d45b92e4ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1050 91d4268d-3b44-4607-a2e5-9642da6100e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1050 5188a04a-1d32-4b18-aa22-b5f9605eb3e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1051
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA509;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h641F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1051)");
    end
end

unit.assert_eq16(16'hA509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1051 f0cebfa8-d4f4-476d-a6ab-84300bf2df8c)");
unit.assert_eq16(16'hCC2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1051 b86993b5-3cd8-4ee7-a8c3-92ea8269c604)");
unit.assert_eq16(16'hCC2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1051 2c80969b-3e42-4022-9f53-948e9b949ead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1051 d43a2245-9d3a-4acc-86c2-8a4f3b544e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1051 b0011cb1-13f0-4fdb-bfa2-55d9944f7b92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1051 34bc2aa8-202a-47c7-b7aa-9a40b5e0a940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1051 523fb100-4b55-4f47-a79b-08b142884b98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1051 197b64f2-93a2-4d01-8726-dfc0a2ae81e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1051 20e2a1cb-a1c4-404a-9ea2-174fbf63e03d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1052
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4CA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7619;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF143;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1052)");
    end
end

unit.assert_eq16(16'h4CA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1052 3ba32aaa-aa80-45f4-84df-0776c18e95aa)");
unit.assert_eq16(16'h7619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1052 a09bf633-1a10-4ddf-a647-12b3cc771dee)");
unit.assert_eq16(16'h7619, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1052 751f47af-973f-44d5-92f7-34531457068f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1052 d364bc04-5753-479c-9eb7-f38377bfce48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1052 f05a1a8a-67ab-401c-bea1-c5b391fd0330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1052 ddd43e0a-2271-44ee-a49e-cb210b4afb29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1052 7f862f09-89e2-4eb3-8bc4-3c69d47944b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1052 075ba5ef-031c-4eca-9b68-a9c525a3d900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1052 5e0e6248-29db-4b74-b7e8-6cd903dc6f68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1053
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD924;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6325;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1053)");
    end
end

unit.assert_eq16(16'hD924, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1053 f3d42f25-2b17-46fa-91b2-2166e8e74c80)");
unit.assert_eq16(16'h6325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1053 e00d2cae-58cd-4d15-abd9-ac09f2059efa)");
unit.assert_eq16(16'h6325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1053 dad3b302-39e4-4bcf-93fa-37db6f1585e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1053 c0ef7150-5346-4c77-b2ee-0a17ac47b374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1053 f9f3b90d-c0fa-4b00-9847-df0d9bc1217b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1053 489ce5bf-828d-4675-b360-140a66e46e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1053 c144eb9d-3b98-4995-9d10-0786eac54caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1053 59d9fb53-349e-4d2f-b4fd-f647b06870ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1053 e4ef670f-6843-4dae-8c5e-98b251e7c9a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1054
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC999;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h810F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1054)");
    end
end

unit.assert_eq16(16'hC999, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1054 267ebc23-281a-4da2-9f37-445a421eb30c)");
unit.assert_eq16(16'hFB5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1054 8b221f72-b744-49bd-a267-27213e2bb9f1)");
unit.assert_eq16(16'hFB5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1054 19eefc5b-852e-49f4-8e19-c88d393e19d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1054 89c54d67-afb3-40de-ba68-be9d4dcdfdc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1054 23f89df7-e1a1-41e6-a7d6-37c703fbca9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1054 cb6b83b8-4fde-4a7c-8c89-2358c6b93d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1054 929d9436-34ac-4a0d-a0e8-20a1533f313e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1054 edb22058-ebfc-4e9d-adbb-f5199055fe97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1054 4dfc32de-6751-436b-9f91-032aac69ad35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1055
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2992;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3AA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3717;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1055)");
    end
end

unit.assert_eq16(16'h2992, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1055 022760fa-4a98-43da-8df0-9ca37eb6439a)");
unit.assert_eq16(16'h3AA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1055 24ce5038-1e6a-4879-a993-ba9c128ff94a)");
unit.assert_eq16(16'h3AA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1055 ac020d7a-1530-41ed-b584-81389501d62f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1055 2614ca2c-47bd-4fec-aca8-f1ea5c791da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1055 5d2a8dee-1acb-4b0b-8644-30d1b39b42fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1055 209e3a99-9688-4cbe-bdec-12bef69f0913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1055 f153645f-9a54-4bf8-ae84-da663cb620e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1055 b1ea251c-2110-46b5-9711-45d58b25f206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1055 a36648cc-859c-481c-98ba-e41aebfa1f64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1056
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB759;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6304;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1056)");
    end
end

unit.assert_eq16(16'hEB95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1056 25df700f-af2d-40f3-9ec3-5eb467f38eeb)");
unit.assert_eq16(16'hB759, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1056 1ba07dcc-eb33-4699-8e67-aec414e31e49)");
unit.assert_eq16(16'hB759, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1056 682c48ee-79ca-4c2e-9683-934de179602b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1056 9ae7cc7c-7dba-46dc-852b-7d9d7e1b76cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1056 27137d15-970a-49f0-b32e-3c3eb5892acb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1056 c7c7e9ee-0cc2-46d0-be99-75edc4f4365a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1056 f332e422-9ae5-427d-a9a0-2eae4678a9c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1056 3fb6e05b-e4eb-4249-9ed6-2654ea98733c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1056 6c989db9-c34a-47ef-bffe-cf502148f381)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1057
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA740;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h291D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1057)");
    end
end

unit.assert_eq16(16'hB7DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1057 ea9c55ec-2608-4df9-876e-b70eebd6ca0e)");
unit.assert_eq16(16'hA740, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1057 a5d9e68c-7253-4bed-a268-ee0963280439)");
unit.assert_eq16(16'hA740, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1057 899857b0-059f-486d-bf8e-839c056a1e70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1057 9ef2ce1d-bdee-4f8f-b5a1-21b4e0fcdcf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1057 97523d79-7da5-46cb-80f4-f823bf40dcd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1057 23d73a68-2449-4b9f-bd4a-3798db981f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1057 37d333f6-bc60-47fe-be07-227c14275a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1057 e9094144-3101-4a82-bc4d-79767eb441b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1057 c27b1f00-8c2c-4eb1-bea2-2baf36e8ea4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1058
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBC7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1FC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1058)");
    end
end

unit.assert_eq16(16'h54FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1058 4218a724-e224-4d69-87e1-26f93d047784)");
unit.assert_eq16(16'hBC7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1058 6f01bdce-1b06-45e9-b7dc-57d6ee5fd0c0)");
unit.assert_eq16(16'hBC7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1058 81a2fdf9-8ee3-456f-a777-44f80880e30a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1058 7316cd96-9ae7-45a1-b109-b3f6be7e5fb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1058 0955fed0-a402-4e8b-b961-0a169b58325c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1058 b6a37934-d9e9-407e-97d3-e7fcc37a64f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1058 bdc98d38-fc86-4079-a55c-501ce73fbf72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1058 9a9414ee-46b6-402b-b1e6-03e5c05d748c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1058 60c057bf-8228-45d3-a30a-b34f24e8a0d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1059
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3000;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA2C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3DA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1059)");
    end
end

unit.assert_eq16(16'h3000, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1059 29a61848-c916-4c22-9f12-d91b34d808cd)");
unit.assert_eq16(16'hA2C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1059 03b1d6e3-2c82-432d-81be-ad402318662c)");
unit.assert_eq16(16'hA2C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1059 3e08ea29-ba43-43e1-8a73-30f6f09658f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1059 1b803b13-f0af-4b9e-bc9f-2f57fec22187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1059 5aa03273-b2de-454a-80ac-5ff46cdee770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1059 f60803aa-e7f2-48ce-b457-c0c02f7e99b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1059 daf358aa-4a1e-4b49-9a8f-adc6ff66fe8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1059 0d37db7a-0bb5-4f31-855a-d2257a38d665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1059 be30d2e3-4f74-442b-b45a-6405694d6f72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1060
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB306;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAD16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8435;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1060)");
    end
end

unit.assert_eq16(16'hB306, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1060 abdb1020-84b1-41ec-9205-843e4ab095de)");
unit.assert_eq16(16'hAD16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1060 cca43e1d-ebc0-4c87-a725-7f09762eeed3)");
unit.assert_eq16(16'hAD16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1060 7eb36c2a-e6ca-49a2-945c-29a6d9ea8b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1060 95d7eed8-ab32-4478-83aa-aff962325241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1060 b95f2dcc-f289-45b8-a48d-f9f182e69f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1060 aee3003c-d455-4ea1-94ef-0d200f28eb47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1060 f21a654b-5095-4356-9802-d38cca109bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1060 d8c057d5-907e-427b-a177-087742ede64a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1060 d2a8a785-f4ae-493e-b782-fb012257089f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1061
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC98F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBAD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1061)");
    end
end

unit.assert_eq16(16'h2D00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1061 2d6e066b-20e1-4a17-ba7c-42ab171fce1b)");
unit.assert_eq16(16'hC98F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1061 841746f9-87d5-43b6-a07c-84ed6f6f5aad)");
unit.assert_eq16(16'hC98F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1061 952df3ae-92f5-48b7-8941-29002b9d5934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1061 e4741331-0145-4546-890d-22850b1e62ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1061 c146afbe-caab-4f6e-9ba5-9ec55722494d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1061 44441b60-98e7-4042-934e-4add9c1e11bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1061 704f6020-8b35-42c0-b422-17056c94a352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1061 e1651ae5-7951-4fbe-9116-74538d1c9cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1061 2b205ca6-e0e1-467e-9bf5-8d386c8c01a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1062
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1062)");
    end
end

unit.assert_eq16(16'h0F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1062 b353e022-594a-44c3-8cb5-36916521de57)");
unit.assert_eq16(16'h9F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1062 ab4305c3-7a6f-4939-9142-68f23ff2300a)");
unit.assert_eq16(16'h9F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1062 860e038e-9c2b-4d00-ae8c-1733484103c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1062 f85310a5-b1d5-4ab9-bc4f-bd9172bb8b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1062 e28c8df1-43e1-43cd-8699-60ceb07a1dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1062 9e565df5-c48c-4ca8-9167-77363758e75d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1062 4cbf4a70-3f8d-4fc9-97a9-215ef041f68b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1062 c843adb0-d2c7-48a4-8d7c-114ccb79a476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1062 63f72c4a-e742-457c-aee3-336c25ad23da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1063
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC18F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1063)");
    end
end

unit.assert_eq16(16'hC18F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1063 b9d70f18-c7fc-44cd-817b-cb0ee8d3e1aa)");
unit.assert_eq16(16'h2C7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1063 2b914dc3-0877-400f-ad39-e7652ee1f75f)");
unit.assert_eq16(16'h2C7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1063 27d7ab0f-9baf-43d4-9779-7f3a429771a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1063 123c33e8-8227-4fad-8308-ef406521e496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1063 69e6751e-e6f6-4d2d-bf02-55e32299e5cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1063 b7bc8839-9798-4665-9b0c-f7d60a581ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1063 15258b14-8ddc-4be8-be54-61ca21754fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1063 aaa121aa-afa3-48cf-a457-dcdc0986db91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1063 a8d040b8-8a65-4ec5-9831-14862c16697b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1064
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h60EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h74D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6CAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1064)");
    end
end

unit.assert_eq16(16'h60EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1064 38ad12ae-9d71-44fd-84f9-39994f386d94)");
unit.assert_eq16(16'h74D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1064 9e2ce962-6df5-47e0-aca4-3122e6a79c1d)");
unit.assert_eq16(16'h74D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1064 78ce625b-88a6-44f6-9141-104461864956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1064 e999e603-1157-4244-8fd2-717d27951eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1064 3edcfecf-f739-4007-af13-397d7ef11a36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1064 ce9d2188-77db-4c69-a74e-f1d64588ed60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1064 5a6ed34e-7c9a-4706-8510-7e18b58ea25a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1064 a0fb73cb-095e-4773-bfba-29d9c0292667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1064 09ffb125-b121-45a5-a1dc-60c809d6e937)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1065
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h91FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD117;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1065)");
    end
end

unit.assert_eq16(16'h91FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1065 81eec6bc-0d1d-40cc-98ef-cff98b729741)");
unit.assert_eq16(16'hD117, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1065 9b8b54f5-370f-4db1-9b95-5afd5c6ec5ba)");
unit.assert_eq16(16'hD117, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1065 08fb8e7c-d34a-4906-9b33-3344c8ae54ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1065 1aa2e4e1-ec33-40af-8e20-62404d0dfec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1065 6bcbfc62-d8f0-49b8-a5ac-5550274a7df9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1065 04dd709c-9bf4-412e-9db4-3c0a9d46ddb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1065 a3fe01a4-828f-4416-9814-9e319ef40990)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1065 2340371d-b5aa-477c-b182-ab120c074f9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1065 10227748-7950-4766-91a0-6b6f28f92493)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1066
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9746;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h92CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1066)");
    end
end

unit.assert_eq16(16'hED6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1066 97e9c29f-dd5f-4350-a106-b87c696ba2c2)");
unit.assert_eq16(16'h9746, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1066 e8aaf6d2-2b5e-493d-a727-7a82b07e5d4f)");
unit.assert_eq16(16'h9746, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1066 b542e1cc-0278-4df7-87c8-275d9c0bba97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1066 661f8eee-edae-40bb-b1cb-8d439c2be91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1066 2ff100e1-08a6-4bb4-8e11-d2cfbcae2815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1066 254ce7e1-7478-4e19-8f58-c599644dfaca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1066 5d381e58-45b7-45a2-8708-a772352d2a54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1066 52261852-8073-47a5-b0d8-7b1a5479c782)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1066 8adaf98d-b967-4b4e-bd90-b6d356dfccce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1067
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB472;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1067)");
    end
end

unit.assert_eq16(16'hDDCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1067 05eb1cca-4c13-46ac-8b36-741f55143e3a)");
unit.assert_eq16(16'h6C99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1067 09fe802e-599b-42b8-a312-77065fca9b88)");
unit.assert_eq16(16'h6C99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1067 5635ef20-9f92-4e96-9227-f4ddefaff046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1067 190ab5ea-f966-4465-bce6-4d7e813e3a10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1067 7e1e312f-cda4-4586-8461-e46f56b412c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1067 bb1199d3-cd67-45d0-9f71-21d047870b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1067 acb7d9cc-206e-40ee-bb24-2278608d3282)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1067 8bcd25aa-e4f2-41c1-8d73-5f23989e78d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1067 73f0161b-8562-4036-8295-75d32e38c228)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1068
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6257;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF27E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1068)");
    end
end

unit.assert_eq16(16'hEF90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1068 755b639b-5132-4c3a-b955-06213be82511)");
unit.assert_eq16(16'h6257, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1068 b4bc01f1-6e15-40c0-b7a2-84778afd4dab)");
unit.assert_eq16(16'h6257, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1068 ffc75607-3f64-4085-8992-d8099b75a6a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1068 3f534288-1f86-4c23-8176-03c1c07a7d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1068 77b856b9-be67-4b07-a4b6-cab0c738df3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1068 4a1ec9d4-8b6d-4454-ac1c-5c49a4f11ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1068 aeda2229-3bcc-4798-a925-8ae3263051fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1068 86c5a529-d962-4286-bbaf-1b59d5bc8274)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1068 d8981f38-e1f4-42a0-a3d0-99aed07e3b61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1069
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDAD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2073;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1069)");
    end
end

unit.assert_eq16(16'hDAD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1069 d0cd879b-f8d6-4ba5-8888-943d93b83f44)");
unit.assert_eq16(16'hA3CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1069 ee79238d-95ae-42e6-965e-9f0b663ec474)");
unit.assert_eq16(16'hA3CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1069 935ae620-1295-4ad1-86b0-53d9c7b4468b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1069 d367e274-5d15-4690-a852-99c4f8a02f51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1069 24abb5ad-a6ec-46d0-b4b6-48e4a3ac63c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1069 568740c6-6e36-435e-a5fc-b68e048f0cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1069 749ad9df-beee-4131-a98e-f3cdd1486eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1069 65cdd87c-e54e-4f2b-a06d-6278823025a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1069 5bd7e550-43ea-437f-a5f2-074b0beaaf12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1070
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8867;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE357;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1070)");
    end
end

unit.assert_eq16(16'h8867, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1070 c8c95209-ef7e-4a5c-8a75-13fcb05f6b0a)");
unit.assert_eq16(16'h05F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1070 1f765935-7e58-4c79-a6c4-d6ad58ed50e4)");
unit.assert_eq16(16'h05F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1070 607ae929-8f98-4f7a-a2e4-92288cd30d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1070 8da1e1a0-2c7b-41a6-bf73-349602b3208c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1070 7f0c0428-ca49-4248-b6e3-edba8d9f5729)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1070 69bdb42d-07f6-4074-855a-06181ef160ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1070 b696a071-813e-4f63-bb98-098945246b61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1070 ddd99d34-0288-404e-93f6-aefac6afce49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1070 c959d1a4-6abe-4a40-8908-7d7da05f592d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1071
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC583;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1071)");
    end
end

unit.assert_eq16(16'h7EC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1071 ecdb7b92-5a63-4585-be09-2b5fe2e286cf)");
unit.assert_eq16(16'h0A03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1071 b77d54df-1309-4d03-8903-b6610dfd2fb6)");
unit.assert_eq16(16'h0A03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1071 5741f729-5904-4b3d-b083-3e6d47ae6b05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1071 c901324b-da8d-48a0-9775-c1d5cf9a54a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1071 a5b03572-541b-4f4f-b0b9-eb8005ab5dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1071 396a4f4f-ca2f-482c-b124-d2bae6aa77a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1071 ddf246c5-9968-4bf7-be3f-52df58adb9c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1071 80028b3d-6315-436b-9835-a4cff0174c3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1071 fb5b6320-743e-467d-a144-2117570dd4bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1072
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA499;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7411;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1072)");
    end
end

unit.assert_eq16(16'h61CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1072 e59d27d8-015c-41d9-b754-8a0444be38c4)");
unit.assert_eq16(16'hA499, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1072 127b2365-b56c-414d-8591-c6fdef479bc8)");
unit.assert_eq16(16'hA499, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1072 b8e483f2-6427-4233-b13d-501e186c755d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1072 68b337c5-5431-4c15-8df4-27e1ffff7224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1072 6ccb3614-e50d-4e46-9734-b89a28e2ef23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1072 c31eda7e-a31a-4fe4-a50a-7d44d246147c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1072 e9085fa2-e7d2-49f7-b295-908aa54501b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1072 18976eef-8639-404d-bae1-673362c9eb90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1072 af531597-762f-4c4f-ac34-e616081a9d4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1073
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h54C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1073)");
    end
end

unit.assert_eq16(16'h54C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1073 a74630b3-53a9-478a-a7cf-b58d4ad0a290)");
unit.assert_eq16(16'h75AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1073 8892a627-f3e7-4b07-a007-30e264f893e1)");
unit.assert_eq16(16'h75AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1073 4f5db39f-9707-47b7-a3b9-2fc63143b892)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1073 a2d09552-1021-4251-9413-e4aa5576805a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1073 6684ddbe-93c0-4ea5-9e2d-c2858e9ad518)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1073 7957ddfe-623d-4d42-a8c9-d2a3680b2ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1073 7a706117-d033-4a36-85b7-43aaac4a7f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1073 3191b0d1-f363-49a6-9802-f8bf5f1034a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1073 c2ac5555-ff20-4acf-825d-d5cd97442d5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1074
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1AA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h860E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1074)");
    end
end

unit.assert_eq16(16'h4D4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1074 697d13a3-4276-4942-84c5-43b0b6bcf415)");
unit.assert_eq16(16'h1AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1074 ec205a9b-a131-442f-8a17-7b6849e1ad00)");
unit.assert_eq16(16'h1AA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1074 32a979b5-ccba-4824-bbf4-6df1b18d41e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1074 05355282-9934-4bf1-9d0f-c78d1d18f0e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1074 425852d1-9da2-418a-afee-81245be35896)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1074 5c047c55-06ed-4054-bb46-79fff54367f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1074 fe167a4d-2fc1-42c4-9155-563816053946)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1074 e3e25c6d-7a05-4840-8db4-60a8f6ee84bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1074 dc80edd2-4e8a-4283-80b9-6cdcfdc2a911)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1075
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h178A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h545A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1075)");
    end
end

unit.assert_eq16(16'h178A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1075 763efdae-b9fe-4888-9b0c-ed0f08d4f245)");
unit.assert_eq16(16'h64B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1075 17f79fd8-2dc4-49ce-bb2f-b205997682bf)");
unit.assert_eq16(16'h64B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1075 17517e5f-ece5-43dd-828f-294a9027cc9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1075 3df3e185-c081-4e8d-af28-4960b3df6725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1075 7afa8de6-135b-4222-bb96-4a89efe701b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1075 b675eb83-44ff-4c86-a211-ebe16d02f991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1075 d6b55b19-2b03-4f73-9bf6-30d43d19fa01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1075 bbe40c8e-475e-4abd-b7ea-2a895364fbd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1075 9413ac6f-89ac-49a1-af99-e3265e5a183a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1076
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1FB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE48D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8A7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1076)");
    end
end

unit.assert_eq16(16'h1FB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1076 960536a0-bf11-4a03-a416-dddd7f604851)");
unit.assert_eq16(16'hE48D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1076 b2d769cd-06d3-4472-823b-5657a04a58b2)");
unit.assert_eq16(16'hE48D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1076 76dc0ca4-9f7b-4634-8649-1d9c1af68a7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1076 55210f86-083f-4978-9189-dbdd2ea748f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1076 76b6e056-f082-4147-8750-1568453acf9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1076 d975e327-fa18-4438-b7fe-871adf657566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1076 c504a515-5ac8-4097-a5af-1b917ee9c88b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1076 a83b8769-5c01-4aba-89e7-edd6cf6c8630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1076 184473a1-2b74-47c1-be59-e6e43e0a7486)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1077
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h83C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hECD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAAEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1077)");
    end
end

unit.assert_eq16(16'h83C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1077 795d498d-b9dd-48d9-96a7-cf698493fbc0)");
unit.assert_eq16(16'hECD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1077 3be0ea68-b6b7-4265-82fc-1f62cc089c77)");
unit.assert_eq16(16'hECD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1077 786f6dec-1274-4051-9dc5-50e50f778096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1077 ec424ee8-492a-4473-8c8b-03edee5b8c66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1077 b64a1377-f20c-4cf3-9efe-1e218e14cb14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1077 6c843ddc-5ff7-489d-9c1c-5faa60b841ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1077 7acb2f22-1cce-46c7-93f0-3184bb2c748e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1077 2c96a18c-0dbd-47ea-a5a8-14cce2222c6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1077 077eb52c-4f91-4cbb-b84a-cbfd9a4c8ca7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1078
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h35E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h681A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h78F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1078)");
    end
end

unit.assert_eq16(16'h35E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1078 4c537a58-42ad-48c6-9de1-5208638e7ddc)");
unit.assert_eq16(16'h681A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1078 0212e1b1-fa74-4336-b1c6-9adf599a5d0a)");
unit.assert_eq16(16'h681A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1078 f5087286-8453-4ce7-a339-961cf9a4372a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1078 4ad98369-280d-4e2b-8896-294d73cd797f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1078 f7d8f58e-b8a9-409d-90f1-add36f28cc07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1078 4e725aff-a38e-4c9e-b4ca-7cd399c1f8b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1078 fdb505c6-ea12-4a51-aae5-3f441e0e6e3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1078 b8f9e26f-ab55-4117-bd99-8cff9e1d9a8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1078 91856479-a39d-4218-9aaf-ab8c123bb65f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1079
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB6AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4205;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1079)");
    end
end

unit.assert_eq16(16'hB6AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1079 0e15d967-78f7-4ac8-8d7a-0611e1c52885)");
unit.assert_eq16(16'h3EB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1079 69f4fedf-286e-4567-9a85-a0c0794ff037)");
unit.assert_eq16(16'h3EB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1079 66ab28b1-45ee-4299-8a3e-5097b62a2f0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1079 1413306b-843e-4daf-9f43-29597744d89f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1079 b3d436a2-30e5-480e-9dbd-11d318e65dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1079 fa5fbe72-fd01-4328-89d8-7e1dad4572f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1079 3393dbd2-7f0b-4cec-9f94-531b41bdac2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1079 96543505-6166-4b6f-a7ae-07cc9e1e58fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1079 23ddf655-7cf5-4060-a561-feb68a83dd65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1080
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC02D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAAEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE4BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1080)");
    end
end

unit.assert_eq16(16'hC02D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1080 cd7a259b-3a4d-436b-8fc2-9d1bcf87d6e2)");
unit.assert_eq16(16'hAAEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1080 9aeee364-fede-43ef-ada2-88b3ca31b519)");
unit.assert_eq16(16'hAAEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1080 a59221be-3c0b-429c-b85d-b0947743b382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1080 42555bcd-4a2e-4e0b-bd6c-ddd5e39ee12f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1080 7854f14a-2195-4c15-8849-b4fc6f35a7f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1080 0cc7dd04-8ec6-427c-8269-1786d2ba6191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1080 3989f6e8-f0c5-44d4-9217-921108b8e70c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1080 2906418d-fcd7-4163-a4f9-5cf5747cdbf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1080 e46af500-1015-4f42-913d-43ec694e0de0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1081
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9CAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDFCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1081)");
    end
end

unit.assert_eq16(16'h9CAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1081 5f3d3437-6c6b-484d-9a5f-c86d399d72ed)");
unit.assert_eq16(16'hDFCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1081 4f40cdf2-c817-42f7-93ec-d1c1c60204a3)");
unit.assert_eq16(16'hDFCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1081 0fda21f4-6150-454b-ac55-a985fdcf470a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1081 00a21df2-140e-4fd6-a512-3e1b4343deb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1081 fa7475fc-d721-41ab-85ed-01273be4c152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1081 3b619014-fbec-4cb0-a5d4-903f744edfc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1081 7e856301-8761-4e1c-bc4a-7e5219dbcb15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1081 7904666d-4cd6-4653-a2d5-b2a85d3b2b38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1081 1b7dd9eb-55dc-4d3e-b143-6215b63be0b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1082
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h402D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4061;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h83DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1082)");
    end
end

unit.assert_eq16(16'h402D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1082 8b41a35a-a64a-42b1-856f-96a009034bb3)");
unit.assert_eq16(16'h4061, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1082 5ded109a-3056-400a-a628-a494df178cab)");
unit.assert_eq16(16'h4061, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1082 41653b63-4b4f-4fce-bd16-822a993cd0d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1082 d5b8fda4-254b-4e78-a4e1-b38e2c37326a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1082 6bad1a66-b698-4c03-884d-36a996bc8f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1082 71ff8c7b-5772-4cf5-8589-850d8dc9d128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1082 16cca8fc-3e51-45d2-a687-b25129616af1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1082 62a373ba-f66d-4f7a-87f4-fcb6ba88e490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1082 c7f401ae-a55f-4f46-835a-69ad28570fd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1083
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE764;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB5A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFBB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1083)");
    end
end

unit.assert_eq16(16'hE764, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1083 edca5c5c-6726-449d-8a38-e192c475980c)");
unit.assert_eq16(16'hB5A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1083 2cf2a4d1-f8b9-43b3-87e2-a25581d5bb7b)");
unit.assert_eq16(16'hB5A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1083 9b13fb39-489d-438e-bf64-f7396052b7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1083 47c15b54-73be-464f-9e98-7273b2f64823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1083 338b3232-8778-44b1-a397-af2c218a7c7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1083 20f68aec-f303-4ebd-8bed-2f8135cc810e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1083 7c27ec4f-94f5-4b33-babf-3ce5bd17e5ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1083 c0075a62-206c-4a8a-8b90-35906a1fec54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1083 f81a197d-712d-4fcb-b99e-3c0fce43a72d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1084
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD92A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h636E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1084)");
    end
end

unit.assert_eq16(16'h85D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1084 f6d0208b-773c-4075-9afa-b1370f93db05)");
unit.assert_eq16(16'hD92A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1084 e14bf772-df3f-4b6e-8804-636510326078)");
unit.assert_eq16(16'hD92A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1084 b4eb0e3f-37d4-440e-8c9a-037b530a8214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1084 9e40ef09-7002-4d45-8771-fa81f3dfad96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1084 c82584c5-2bf9-4b91-a9a0-481db9a5f60f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1084 6ef435ee-08e0-45bf-92af-a52aac17eea6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1084 3bb82f88-7477-487a-a5f7-d5699a41ce83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1084 91a90bf8-d277-450d-a4cc-649906ec5c01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1084 c52fa152-b932-4075-83a5-4d678f7ab2b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1085
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h978B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h362C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1085)");
    end
end

unit.assert_eq16(16'h978B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1085 534493f2-bc5c-421b-bda1-a4a66c453169)");
unit.assert_eq16(16'h362C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1085 68863d20-c0cb-4dd7-bdc4-fc603d9242f2)");
unit.assert_eq16(16'h362C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1085 e66209fe-f94d-4a9b-bc6e-ea9e19f274c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1085 20cbb921-4fb6-44e4-8041-b4e2454bae36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1085 4efe971a-a610-40fb-9f1c-e52a6ad12c81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1085 4d937ee6-8c85-46e7-9ba9-802f924bbafe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1085 fffa428f-951c-4637-9f9a-cb8ae848fcd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1085 b43a7adc-5ac2-4294-bcb3-c2b62e641442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1085 8f567898-1f33-4640-9159-3817d5a2ffef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1086
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA2C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7BB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1086)");
    end
end

unit.assert_eq16(16'h11A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1086 6f724a66-07af-4f1e-92d1-701f56ae18c1)");
unit.assert_eq16(16'hA2C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1086 bfa32526-8ecb-449b-a8b8-fbae95f0b7ff)");
unit.assert_eq16(16'hA2C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1086 d57ab36b-1a68-47fc-af20-d6c6277a79a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1086 bb21f98b-a495-4a22-af34-a1e56577a146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1086 2ccb7961-85ce-4233-8471-9e7241211f0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1086 44ce387d-af48-40c9-aa1d-29c4b5c53fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1086 4941e0c3-21b7-46de-ae27-1f242c4e9a1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1086 d9313330-1790-4363-965f-feeb29492b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1086 17e25779-f023-4530-a59a-b8274f4312c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1087
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA017;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h85AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1087)");
    end
end

unit.assert_eq16(16'hA017, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1087 8c816d97-834b-4b05-a50c-8614a0be0614)");
unit.assert_eq16(16'h48A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1087 318c8e99-be24-4256-b88e-289922dfa1dd)");
unit.assert_eq16(16'h48A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1087 8c1b5010-1238-4ec5-8a77-c2deb88547e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1087 998cd725-c848-4e5b-88a6-22a4c6ed03e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1087 a14c2e13-e1b5-4825-9b76-97b884c20cf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1087 59c0a5ab-0afa-498c-a396-0482f917ea4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1087 11ef5808-6953-4207-8a49-bf8cd9002a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1087 a6a2d5b2-7497-4420-9f12-f3513567a603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1087 16bbf738-2e27-4a2f-82c3-2a87894e47d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1088
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h836A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h991A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1088)");
    end
end

unit.assert_eq16(16'h04B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1088 a3a05ead-d3c0-4e45-9883-a562757559c7)");
unit.assert_eq16(16'h836A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1088 37bfcd38-5a9f-4ab8-baa1-3f443656f952)");
unit.assert_eq16(16'h836A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1088 d87c113d-6fb9-4271-84c1-01c018b58137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1088 c3db3a8e-4f48-47a0-893e-672cb1c8092e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1088 64782065-84ca-4077-bd02-031411c7ad4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1088 b540dfd3-af0c-47f4-a4d9-2fe97a252c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1088 f199d63e-139a-4d55-b449-4abb9732ff1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1088 81941707-73bb-44c2-97f8-1df146e498d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1088 32a0b21a-4a4c-4eaf-a37f-9990c441c3b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1089
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD4E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h30F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0758;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1089)");
    end
end

unit.assert_eq16(16'hD4E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1089 e549720e-102a-46ec-a04d-22229860dcfe)");
unit.assert_eq16(16'h30F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1089 b068608f-f27e-4077-8c1e-47f4c1cfd7dd)");
unit.assert_eq16(16'h30F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1089 29c325e0-4268-4016-8e62-95397a5aa728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1089 3eea404e-d166-4a23-a0a4-16ddd881a2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1089 5d49b339-c62c-46d3-adaa-81cf347a9ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1089 793b1689-f7cf-4e39-b8bc-bb76a56fd8be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1089 2bb1ae0f-8bb2-43d0-a082-c917ea9572d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1089 7bb51917-7d5b-4e91-bba2-3a1ef2d741d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1089 86d5fa84-e608-4623-9312-81504d60a5b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1090
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3216;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB212;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1090)");
    end
end

unit.assert_eq16(16'h3216, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1090 aa880cbb-d79d-4dc0-83fd-e61bead0ea39)");
unit.assert_eq16(16'hA9E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1090 7f5196fb-b486-488c-84b8-e2d4b797fc4f)");
unit.assert_eq16(16'hA9E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1090 2d9b3aa1-770f-4f21-bf7a-cf8f880d7c11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1090 0db1c9a4-65b6-467e-9ea0-43a4bd0de4b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1090 b13e2734-1aa5-4d36-a24d-0e91e483e8e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1090 26e220d6-b622-43f8-bdbe-fd3e0097b41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1090 d0f38790-de18-4527-8d47-6c0db1b82569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1090 0f7e832d-7c1c-4472-b2bf-77626ea549d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1090 e00bee30-a2f6-41c9-b25e-3b3efce46a40)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1091
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD125;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAFFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1091)");
    end
end

unit.assert_eq16(16'h5F49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1091 9caeb67a-be6c-4d2f-9488-4195e048b2f0)");
unit.assert_eq16(16'hD125, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1091 35e30dee-9abb-4473-aa42-93f82ac97b5b)");
unit.assert_eq16(16'hD125, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1091 9a09aa04-c082-48e4-b7c0-6ade22e10ba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1091 d93eda01-33c3-4171-8787-42fcc78d083a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1091 70ddabd1-8320-4c0a-a2be-99fca5b851a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1091 7edd5314-4589-43ca-aea2-a4b9bafbce6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1091 85d9cb55-8350-43e8-97f8-063047c154e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1091 6c526b8c-7bd4-4b27-b93f-c62719f9ba4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1091 4ccbd955-5776-4bbf-8f5f-dfb5229e0d05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1092
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h30F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE610;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1092)");
    end
end

unit.assert_eq16(16'h1C23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1092 b5d8deda-2714-40ee-a6cd-6f8985f5517c)");
unit.assert_eq16(16'h30F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1092 0ec40bf2-adb2-4bf6-a8ff-cb93a35c49a7)");
unit.assert_eq16(16'h30F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1092 bc41582c-2246-44af-bde6-66f8665992f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1092 7c4e50b0-8b38-4a3a-9a38-4f4d064456d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1092 e493b04c-b128-45d6-8ff1-a3499272a774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1092 4e5ad234-912c-49a9-b60b-fa854483c538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1092 45cb639d-6e9c-4513-b46b-4346b3299e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1092 9c82c005-92fc-43ad-b9f7-8a2e63e7bfdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1092 2149f049-a85f-40ce-8b4a-94cbecdc89c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1093
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h91D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF158;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1093)");
    end
end

unit.assert_eq16(16'h1359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1093 27720faa-d607-46f9-a32d-79da85975230)");
unit.assert_eq16(16'h91D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1093 b01a572a-6915-40ed-8b2a-02601134fadf)");
unit.assert_eq16(16'h91D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1093 f897492f-ae00-4b2b-8f33-7477f230fd4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1093 85d15ccd-e1a0-4f2b-8551-4436c2a09ce3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1093 0c01078b-7160-419a-ad78-c0270f6335ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1093 eab6aa60-2b56-4730-902a-5b7350a8d656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1093 b580aa9e-7c7a-4c26-a4d7-35df7f8ccede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1093 e9e9b8c6-b26f-4b5e-836d-0415885932e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1093 5808a606-441f-4b0c-8d16-7b36edc41b05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1094
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h47B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1094)");
    end
end

unit.assert_eq16(16'h2BFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1094 3d3d95f6-71c9-4f0b-bb96-44901ec9e8ca)");
unit.assert_eq16(16'h47B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1094 14b03581-f707-45c5-b174-4eb2f6fbee9b)");
unit.assert_eq16(16'h47B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1094 bacf29ad-bc13-46c2-ba35-cdbd4cecf661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1094 0d6a929b-74b0-4a15-b376-c2f53b6676c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1094 9314f1f8-ea22-4bfa-9b4e-fec6e557a3ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1094 8290a9dc-c005-4993-af37-0946c01e0740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1094 ca102fc3-cf9d-4926-be77-217750eaeb76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1094 72d47278-3000-4947-ae73-4d6a6793c6b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1094 db59c154-acdc-4cb8-84c7-bde067463e12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1095
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h638D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD8A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1095)");
    end
end

unit.assert_eq16(16'h638D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1095 765dd7d7-5e2d-4535-9d21-60d1d185a467)");
unit.assert_eq16(16'hAC2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1095 45d1ea3b-bbfb-4078-a4ec-f0c5d2103ca8)");
unit.assert_eq16(16'hAC2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1095 bdf9e57a-13e3-4650-9245-ceb266d8c67a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1095 029bb78b-fcf7-4f0f-8f41-ce275cb3072a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1095 3f8acc91-b1de-48b5-9f96-612f7f1d7a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1095 909cd2d3-8ce4-4338-a647-d45a04b2148d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1095 2393cca8-71e2-4d0f-ae5c-03c5f41d5259)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1095 e28f798f-c872-4092-9a6e-5bbd1f2237f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1095 8f42fe75-107c-4f6b-bb24-cdc57d2bfc85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1096
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE13A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEE77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1096)");
    end
end

unit.assert_eq16(16'hBE02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1096 b631d9db-449f-4f8a-9168-d1fc917d216f)");
unit.assert_eq16(16'hE13A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1096 c5304e2b-46a3-4fe4-bd77-7f41f0130f79)");
unit.assert_eq16(16'hE13A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1096 64207fca-9aaa-4d38-a194-16e8b2d5ff59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1096 4794425e-4814-42f0-97f0-933dff2f8f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1096 35dcceae-e676-4e0c-a071-c31bf50404ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1096 3938ede2-5f35-41e0-bd4a-f6650045bfce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1096 aa9f58dc-4fab-47d8-a67e-f7448e0a11a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1096 745373b5-c672-4c1a-95f3-b30f1a1ac19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1096 769b69df-6579-4a12-865b-de565c16a98c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1097
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h24D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1097)");
    end
end

unit.assert_eq16(16'h24D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1097 c27db2c9-1977-4426-beb9-b7fd02c5b51c)");
unit.assert_eq16(16'hB2F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1097 c07ac7c4-25af-4094-a090-2984a40d8ed4)");
unit.assert_eq16(16'hB2F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1097 7820dc6e-9a7e-4152-b372-6848ef9a201f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1097 3825acc9-ba3c-46b1-bb69-37ce6a44efe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1097 d400f2aa-c787-4950-a0b9-71a1b4984cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1097 d1ca6f7d-b7b5-49f4-92f8-f54d4120a698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1097 ef21c15a-9b47-48ef-9fcb-cd6f1a317b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1097 4f03f157-4b1d-4b15-9625-82285c70bde9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1097 98cd8061-3a1a-4f8b-9bc4-6a6259f5c209)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1098
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4129;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE816;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1098)");
    end
end

unit.assert_eq16(16'hCB4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1098 57404018-17a2-4ddd-9b15-ce661d0ee11d)");
unit.assert_eq16(16'h4129, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1098 d710daa8-9236-4f1e-a766-0fbeddce984a)");
unit.assert_eq16(16'h4129, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1098 ed4bcf7b-0671-4e95-a087-ba1dc9a56be1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1098 e5044c47-878c-4505-9938-02233927e800)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1098 8cffb0cb-4cb5-493c-b4e3-9cf5724d1de0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1098 fcbe5df1-fcb8-4c49-b344-850d7ca61161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1098 8f329590-8942-40f8-b8e6-99ddaeff527d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1098 16efc08e-d6a3-4fad-bfc7-ca6f18751982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1098 a1e3d420-16dc-45fd-b940-a08abbf78d62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1099
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF263;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h812C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h15DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1099)");
    end
end

unit.assert_eq16(16'hF263, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1099 26c2fbfb-24df-492c-839c-2a40e2a867a3)");
unit.assert_eq16(16'h812C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1099 27554c03-a871-4993-9bf7-f125d26662c0)");
unit.assert_eq16(16'h812C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1099 b7bc5146-9574-45bc-a98b-4107296166c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1099 258c5777-c074-4819-908e-28ff38f33387)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1099 988abb5a-37fe-4ae3-93ff-6525dbf43dd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1099 d9e9b959-2148-47ee-9666-bf6f57cff00d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1099 5beb8044-c63f-4ee9-b2f3-2653bf940cd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1099 0750bbdf-0289-4635-a604-6e3e7d85b83e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1099 2248eaf7-b1a7-4533-9377-49d27fdbaded)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h72E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF392;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF167;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1100)");
    end
end

unit.assert_eq16(16'h72E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1100 2d725720-c06a-4dfa-ba1f-42d01e24783e)");
unit.assert_eq16(16'hF392, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1100 dccec32c-80b5-40dd-b28d-702c362cf7cd)");
unit.assert_eq16(16'hF392, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1100 d67d3556-1df0-4631-aa0a-f2cbe9c6ee93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1100 86220872-f9b7-42ea-b112-5f34424c7f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1100 d76bf2cc-acfb-4499-9459-8dc361a41f67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1100 e9d4dcf4-d2ca-4536-96b2-70f5891ce512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1100 47152ba7-af0a-456f-93b5-82efc3245f3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1100 f391ff71-0165-4a3a-ae39-496a0e49e942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1100 514834b9-5682-4cdf-8882-9d647f0603a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3C8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1101)");
    end
end

unit.assert_eq16(16'h75B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1101 2b0f4181-72b8-4642-bce5-c344b7eae346)");
unit.assert_eq16(16'h6C17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1101 897c2378-6771-41f3-8fbe-616bb0b7cf99)");
unit.assert_eq16(16'h6C17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1101 d52cd26f-6f06-4452-a6ab-6392486ddbf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1101 b1a3b8a5-9f0e-4062-b494-e72961ae7297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1101 726d8854-c08a-45bf-a5db-ddac9741bfd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1101 615d0c82-76fb-45fd-a4c8-ac843f08805c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1101 113b317f-5586-45a7-b28d-56275f6978d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1101 d6f2e994-8e8f-4ffc-9340-66353bc8c1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1101 02c97293-7ce7-4046-a59e-813541c130f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4161;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6E27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1102)");
    end
end

unit.assert_eq16(16'h00A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1102 6ffe9073-8c15-4c6f-88e8-02afeba6f314)");
unit.assert_eq16(16'h4161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1102 8f935d25-1ce4-4a66-a529-5c886786e730)");
unit.assert_eq16(16'h4161, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1102 a58bba06-ec61-4707-ba17-4849313415d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1102 1234d0ec-aad8-4cb1-b4bd-4d0dc54932fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1102 b376b74a-cb6e-48af-beb5-7d8cd3f827b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1102 10116889-28b1-4333-b072-3e6fa60ec9c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1102 8c3ffca1-1ffb-4e62-80c2-5772745b5bbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1102 3f52d014-1349-4803-ab0d-f875a00cb644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1102 6f8aafa2-cf51-4d71-8c5e-abbe2ba63b0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDE57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h71D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1103)");
    end
end

unit.assert_eq16(16'hDE57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1103 36d71af7-453e-45b5-bd7d-5b2d65e2f6b1)");
unit.assert_eq16(16'h3F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1103 04e03148-c933-40c6-b2eb-2583bfde0389)");
unit.assert_eq16(16'h3F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1103 d43745be-4982-4057-b110-9d4d7425abe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1103 f792691a-7406-4cf4-bbc1-a9d803808d4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1103 56d478f3-99d3-4986-aa3a-83b8c856cc32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1103 9bc5e12c-a4b1-42c0-b958-efbe510cc565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1103 d348be2e-6cbf-45e2-90e7-4726c747a1cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1103 021dfeed-a0c3-461b-9917-33c10c8ba577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1103 92661cbe-23d6-4690-8d26-45a015dafd71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD1E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2ABB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB007;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1104)");
    end
end

unit.assert_eq16(16'hD1E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1104 5817f6fb-ec28-44ec-a9f0-b8bafb25fbad)");
unit.assert_eq16(16'h2ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1104 54f95eb0-7514-448a-9be2-96f8b81342c6)");
unit.assert_eq16(16'h2ABB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1104 788700a8-776f-46b0-93dd-f5973bdf3181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1104 cec5da2c-0941-43af-bf3c-dacc3616741e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1104 84cef093-2b7b-4317-8213-f4e7bccef712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1104 711d7b4e-f4d5-4891-8383-dbeda9a07ab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1104 1a9d63fc-b58d-468e-a81e-13bda613c5cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1104 91f6749e-09f3-4163-9875-94e7956aabd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1104 f9746d9b-8a2a-4adc-9ff9-ba3fe30bcb1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1105)");
    end
end

unit.assert_eq16(16'h4C41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1105 ab9d422f-e78e-4cf3-9110-0b8c0d11b21a)");
unit.assert_eq16(16'hCB6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1105 bd8e9e49-4bea-442e-a359-47443dc4671e)");
unit.assert_eq16(16'hCB6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1105 8493bab4-9e3b-478a-ab3a-eefb597d94d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1105 444c0def-e1c8-470f-a41b-d5f361d8c3ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1105 64d708e0-34b1-4801-b9eb-207ba8b9dfc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1105 9380a52e-7a61-4951-a943-8a7850758dc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1105 5ed2e3fb-61fb-4a05-83b7-64ff09c832c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1105 ea4641e0-1974-4c2a-a3e1-36d965fefc64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1105 bc7cd1e2-f897-4351-a50b-164214c8ad6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h38BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2028;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1106)");
    end
end

unit.assert_eq16(16'h38BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1106 84062a1b-bb2d-4107-b4fe-cbf472a82fdb)");
unit.assert_eq16(16'h2028, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1106 3e01f0d5-4296-4b44-977d-e4487c4f9586)");
unit.assert_eq16(16'h2028, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1106 688c4856-4d73-474c-939e-8612143e02a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1106 279a935d-734e-4899-b69a-5c57ed5ee3e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1106 595b1903-6f99-42b3-8481-29f88409c28b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1106 dc48c49e-72dc-4299-a46e-5d8785aea36a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1106 d1e3f3e5-5e56-44e6-a636-1039bdd29a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1106 72ee8242-8e14-4bcd-b6ad-a4f805a343d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1106 99a38955-1591-4639-b497-99eb38dade8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h93C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA735;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1107)");
    end
end

unit.assert_eq16(16'h78E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1107 46e48c62-6c43-484c-b11a-7147188f96e2)");
unit.assert_eq16(16'h93C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1107 518dc7bb-2e5e-44f7-a881-6096b1222a6d)");
unit.assert_eq16(16'h93C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1107 3aa1ae9c-e489-431d-897d-3f0f87983d17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1107 1e60d06e-ebdf-4b6b-970c-e9c38b46ba9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1107 638de195-9639-4881-8686-3e5087d3a5e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1107 6ce46d72-9c32-43d9-a5d4-728e8475e21e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1107 ea14352f-ee53-4e31-9218-b1feb411eaa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1107 8b3fec61-a0df-44cc-8b1a-e9168ed45e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1107 3e4d144b-9db9-44dd-be67-6c4485187740)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA1DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA908;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6735;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1108)");
    end
end

unit.assert_eq16(16'hA1DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1108 4e52f8b4-ab85-406d-b8c0-9be5b1b10d1b)");
unit.assert_eq16(16'hA908, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1108 f5b25f7f-0341-4313-b735-1f60d5f83a5d)");
unit.assert_eq16(16'hA908, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1108 822a6545-99da-4aee-b470-7a14fe02d05f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1108 4865b422-7cb2-44cd-a907-f0bc461b3c4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1108 f39dba0e-5aaa-4e6c-a79c-d80bc6a56333)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1108 bd6b6dca-7991-491b-bc7e-5aa9144ca9eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1108 da743832-e605-4432-9826-1bb0d149c475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1108 f13d41f6-ffad-4a57-a762-42718e3e341d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1108 accebb54-cce2-4c2c-9502-4b57cbaf9ded)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h33F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h105F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h71AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1109)");
    end
end

unit.assert_eq16(16'h33F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1109 d230edce-603e-4377-b268-cb520bfb8ac3)");
unit.assert_eq16(16'h105F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1109 8e05d2f0-63a9-459f-a331-ca984035bda9)");
unit.assert_eq16(16'h105F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1109 6a3be16c-d0df-441b-94f5-900b469f4ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1109 84078313-a327-4501-95b5-40e82654bb5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1109 ab5b7bf2-e829-47c9-887d-8c48f419d8f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1109 3f210b9e-8231-4d8d-b81b-b3de2f532b69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1109 78e04960-65e3-41d3-b7af-571a83291356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1109 11bf4359-784f-48d9-95c0-f9ba5d30a925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1109 b3f737bc-2931-4067-b5bb-da2a62b0632c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD9D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1110)");
    end
end

unit.assert_eq16(16'h4B59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1110 d7e609d7-c1a9-41da-a03b-4c6bb220baa1)");
unit.assert_eq16(16'hCF86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1110 bd3b0ae9-5682-46ee-9dc7-38c717a1a875)");
unit.assert_eq16(16'hCF86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1110 04bea43f-0095-4e63-a26b-416883a5e592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1110 5f1f4d05-293e-4984-be93-11305ba6676b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1110 5fd2ff70-3773-4778-99fc-d0a88cf47ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1110 5c7a46cf-c415-48c7-9c00-51b3bf230c40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1110 f2e35b15-5c80-43b4-9ab5-c8a8e76a5d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1110 f30058bc-fa30-49d8-a348-4db1e1a55249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1110 7beaca43-d81c-4b11-8b1e-a85fc8487f22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1089;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h59D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1111)");
    end
end

unit.assert_eq16(16'h52B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1111 b4912496-fbda-4ece-b775-2b3d5e9c7866)");
unit.assert_eq16(16'h1089, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1111 4d84421c-b088-4633-9fae-17236526a9a2)");
unit.assert_eq16(16'h1089, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1111 5c5d77d9-aa78-4b01-b6fc-6086832605c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1111 9928dcd6-51e9-4ad4-a171-0ec35b010381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1111 92ed3fd3-2c07-4d6d-845c-4aeb3c76ebcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1111 bc3e497e-da40-49b4-8e34-4f486a7f3d1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1111 2a87f7d2-c5d7-456e-82c3-5019e1e559b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1111 ae860424-c57b-4dcf-9914-8d6095bd2707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1111 b0303151-bf89-4b64-a045-66eccb97ce1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5C32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h330A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h484E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1112)");
    end
end

unit.assert_eq16(16'h5C32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1112 839aa2c1-b4dc-4e77-9829-bd0811d49542)");
unit.assert_eq16(16'h330A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1112 bfc4967d-c749-4b04-b205-4aee797f91ab)");
unit.assert_eq16(16'h330A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1112 7a9d5f2b-b73f-4735-bd21-7fc21bef641c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1112 de8b41ed-4853-48ad-a8f0-9a3cc21b3404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1112 41865805-e0d4-4309-8565-5628c4a28d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1112 7847be4b-a9f5-4f60-8ae9-844baa3df7ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1112 127fd85e-b779-46b1-ba77-8d02a51009e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1112 a972bd80-c2e9-4ed5-bf66-19fcb66b4d13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1112 fdd8274b-205e-4231-992d-2853499171c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD28D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1113)");
    end
end

unit.assert_eq16(16'hF1F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1113 0bfc5e88-b240-46f8-999c-1e890d444761)");
unit.assert_eq16(16'h9F7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1113 2e4dff6b-46c9-41a8-810a-26588781d891)");
unit.assert_eq16(16'h9F7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1113 4d262d8c-afe6-4a0b-b4ef-cd4332062a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1113 8b3a7ef0-c9b5-4ff6-85eb-adc4fd831a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1113 ff09de27-449a-49f1-9811-2f12b9ea3d7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1113 b956c33c-c34f-4a7e-8f9e-030f8fd82abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1113 186ed6c0-c4ca-4c7b-bb46-5f973013582b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1113 8f028014-c3a7-40f0-8add-3297e0b491ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1113 c55dc88e-a9e5-41e8-b57f-05ba075cd146)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE15E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8976;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5130;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1114)");
    end
end

unit.assert_eq16(16'hE15E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1114 fbe38248-c830-42e2-a7f0-49b7f8ebd532)");
unit.assert_eq16(16'h8976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1114 dfc09f5b-04e2-452e-9234-6967f42733d4)");
unit.assert_eq16(16'h8976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1114 08c285c5-cca8-4eff-a9ad-aa8d5dd010c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1114 8ce81d1e-2ec8-4630-9379-8ced29436fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1114 80c88271-80a1-419d-80cf-585ec3ee1c54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1114 1e670ade-1509-4cb0-bf9d-49921b756acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1114 9fcdf31d-c966-418d-8f4f-d7072bf13d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1114 5de413fc-3f20-46b5-b2ef-d1b6d07b7356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1114 3be981b4-7bd5-42f4-8e79-8f2f3d232d28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA545;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3837;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1115)");
    end
end

unit.assert_eq16(16'hAF62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1115 3dbe39b3-22a4-4a9e-a75f-1dff6812c37e)");
unit.assert_eq16(16'hA545, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1115 ea018f04-f601-4ef3-b453-363f702feb50)");
unit.assert_eq16(16'hA545, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1115 53d93b2c-a9a4-48d4-bbc0-b7731e89b922)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1115 7511a3b7-bb84-425e-bce9-1e3016c1854c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1115 b41e086b-4cfc-4cac-812d-39b7901bd21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1115 47d0b83d-d710-461d-b7d6-c3c0ee754102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1115 e297d37b-17da-4222-bc7a-1ff0a6ba9a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1115 c4682ef8-b7f3-4e66-b23d-a597e62d1639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1115 27532bc2-d37f-46e7-aed8-fd02ebc76d1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h022C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA629;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1116)");
    end
end

unit.assert_eq16(16'h022C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1116 c263089b-7f45-4855-bc7b-1f6692834ec7)");
unit.assert_eq16(16'h5F61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1116 8df286dd-c147-4138-8fec-d1d57d199a05)");
unit.assert_eq16(16'h5F61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1116 72c7e052-829d-4337-b5f1-0ae9c3b24244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1116 8a615b82-55d1-4ba3-b8e1-5650b2936054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1116 89f4a1f5-7321-4630-a6c0-19b53d8e017c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1116 022e11bc-69b7-4149-b226-2b41ca0913d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1116 acfb1a9d-1814-4b39-8347-d3a322788cc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1116 9216ed5a-9565-447a-a89c-2c85302ab0f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1116 73c7c014-8ca7-45c9-91bf-10035bd8a1ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD64E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1117)");
    end
end

unit.assert_eq16(16'h1B79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1117 dffa4f98-2699-4c36-b88c-feb01f42d09c)");
unit.assert_eq16(16'hFF61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1117 d546138f-185b-4054-85ed-03eea09f44e6)");
unit.assert_eq16(16'hFF61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1117 59f8dd12-c71e-485d-b81b-d0a069fda194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1117 e7aad94a-fca6-4f39-8fff-57bc5c9dcea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1117 1e85789a-ea60-4ca7-8af2-c033b2def6cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1117 9c7868c2-b365-401e-880c-4e68c46ccc4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1117 8620e326-c29c-493f-a49a-86efde7fc7ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1117 2c797e31-93f2-4359-b79e-c12a528aae8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1117 c7338c95-d84a-445a-b16d-fe1dc2b361a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAAA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDC40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC958;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1118)");
    end
end

unit.assert_eq16(16'hAAA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1118 8c5a3cdc-cabd-41a6-b74d-4b43e7171f71)");
unit.assert_eq16(16'hDC40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1118 9afa5076-e07b-46c0-8c8e-3cd4f4b72a1a)");
unit.assert_eq16(16'hDC40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1118 57b6923e-14f5-480d-8c93-f89a1c6f0129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1118 f6b02689-7a09-4c07-a3e6-88e2ff344e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1118 4a6a0ce1-c54b-4022-81fb-5ebd2dab1393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1118 1d14a6f8-192a-4d0e-b698-f914c6420fb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1118 f2f377f0-dd9f-4ca3-a796-bce2c2491006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1118 2a673fee-6eca-4a7d-befe-dac00b8c3cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1118 b4a16dc6-8423-4e08-a2cd-cde53c41c960)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h511C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1119)");
    end
end

unit.assert_eq16(16'h7DC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1119 7fcc5681-98ff-47c8-b77c-1d8654644020)");
unit.assert_eq16(16'hCD70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1119 d320cf22-b7c9-4973-a988-24a6b0fe9a16)");
unit.assert_eq16(16'hCD70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1119 f95b6ecc-3dba-406f-a8d3-d50cfa3c0248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1119 8331662e-cd29-4871-afd8-6a5a90df991c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1119 506aefbf-59ee-4607-a2fb-7b7b11edf44e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1119 43b90d46-031d-4ed0-b77a-49f7d472e85c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1119 86ef851e-9f79-4f75-9546-c3de5758aaa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1119 eb21c98d-f47b-44f2-aa31-3ce25ad2e4db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1119 b8580229-6bdc-44b3-90d3-90d5d578b6d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h500B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8FDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5CBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1120)");
    end
end

unit.assert_eq16(16'h500B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1120 c27060af-25cc-4d73-b38e-f9989f7081ff)");
unit.assert_eq16(16'h8FDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1120 be0aebd9-69aa-44ca-b390-e906f410f15e)");
unit.assert_eq16(16'h8FDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1120 e03bef48-1dde-41f1-a5ff-e9b413106e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1120 c0717aab-c915-400d-a66e-84d24184c555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1120 ebfe77a5-f3e6-4c3f-b892-4b11eca3fc35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1120 489e6867-f1d0-43cd-960d-463aa68bcdc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1120 9f5ee615-8274-4f89-a79c-154b2b291107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1120 bd1a8739-d129-4101-9345-43eb8bac22e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1120 39fbcb4b-9620-4a83-9773-a76382e40290)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB914;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h16C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h635F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1121)");
    end
end

unit.assert_eq16(16'hB914, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1121 8738a743-5fa2-4b5b-a3d1-b89b70c6d902)");
unit.assert_eq16(16'h16C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1121 6a963ad9-869b-4599-b18b-156b3c075107)");
unit.assert_eq16(16'h16C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1121 178dae3b-6d11-4474-a821-f4214f9e79d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1121 e15c7c8b-6fb4-4760-8a98-e20407a6a4f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1121 4d8a3dd1-9281-421c-b849-656ffaea8e1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1121 eee46d4d-bab1-404e-955e-4fbc3909d0ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1121 2745e373-5a63-4d8f-9bad-8593a95f87ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1121 46f59cb4-f692-4dd7-ba07-db5ffbcec476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1121 01fabc48-1afd-433c-bb62-139f865d3422)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h97EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5950;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB061;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1122)");
    end
end

unit.assert_eq16(16'h97EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1122 601b8e47-3930-4fab-b572-2304fa65d559)");
unit.assert_eq16(16'h5950, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1122 c60caf7b-3512-48e6-b66c-f0f7602d05b1)");
unit.assert_eq16(16'h5950, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1122 db5e42df-bc39-41cb-b675-76a9feb566e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1122 1ce3d229-c005-4bd3-9274-2cc3221bea88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1122 43bfb3bd-1bd8-4b00-b44c-fc2c386831c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1122 ea9a7749-72be-4b7d-a168-cea451c7795c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1122 38164d37-314a-477e-b81e-0dabd517fef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1122 a141ba66-4e04-4c4e-975e-a52f02f29232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1122 6de91fe7-2dff-4f22-9b14-9957783031e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB4C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7690;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7B16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1123)");
    end
end

unit.assert_eq16(16'hB4C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1123 8bd2a917-c33d-432a-ab03-7ba5d44b16d4)");
unit.assert_eq16(16'h7690, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1123 d044cbe2-93de-4b28-9327-2296469cae3a)");
unit.assert_eq16(16'h7690, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1123 c7314529-5395-4913-96f6-415548000995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1123 ca7e5784-82c8-4b43-85bf-22012eaa4684)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1123 92597bbd-383a-496b-823d-79741567530e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1123 437a442d-1611-48b3-ac30-67606088ba4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1123 48c007d3-2fda-48dc-a8c1-3e394174710c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1123 608516ba-7000-4474-a81d-6af3f87150f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1123 3c7e6e13-3550-4c5b-bac1-38daa716f9bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h937F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9997;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h264C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1124)");
    end
end

unit.assert_eq16(16'h937F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1124 88f9506d-447e-4b57-811e-37106fea4525)");
unit.assert_eq16(16'h9997, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1124 d9a9097b-04ec-49b3-960d-818233bc56a2)");
unit.assert_eq16(16'h9997, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1124 605aba5c-68d3-4c74-9d6a-1ed20726a01a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1124 e57bf8ea-770f-4df3-9ab2-9875a8a426ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1124 8960581e-82b4-4508-a32d-0ac5c350ffe3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1124 9d71fd46-6394-46c7-b1e2-b82d23b3f3a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1124 57aa2318-3e41-4a9a-a6cc-19a1a32aa623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1124 21a032ae-d7ba-4202-8fc1-822292d93ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1124 6ab61fd1-1ef9-46df-be3b-8c5ab4c0084c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h138D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD3E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1125)");
    end
end

unit.assert_eq16(16'h138D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1125 5f6389bf-4520-4f04-b961-3de9ec16797d)");
unit.assert_eq16(16'hD3E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1125 1bcc57ca-546e-4abb-92fe-3f62a9ffdea6)");
unit.assert_eq16(16'hD3E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1125 cc7e3eba-ae6c-42e6-9705-0dd43fcde3fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1125 1a4f4cca-1c02-4ad1-aa61-2353147882e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1125 03eef56b-607c-4784-9c39-fa27646a343e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1125 e2ffe2b3-645b-4fe4-9a40-e8337e31eb98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1125 a0f45dc5-ef5c-4284-8a43-55b1ed44fb56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1125 b2c4672f-7f64-477b-9b45-b8b810a69138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1125 3a60268b-824a-4535-90ba-1544dd6e186a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB522;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h65A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE760;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1126)");
    end
end

unit.assert_eq16(16'hB522, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1126 d11b34dd-7c7b-4d58-adab-091539979e74)");
unit.assert_eq16(16'h65A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1126 f1aac62e-cea4-4187-8b9b-4ccb80ef430b)");
unit.assert_eq16(16'h65A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1126 b02e4088-bc6e-4b7a-b319-c2aff87d79f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1126 fce9a3fa-b512-4f79-8f6c-a4ec86030edb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1126 b00ac9c0-70fb-4cd3-b87a-682c6afa68e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1126 e1c0e463-c9e9-4915-85c0-102a4fd28e73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1126 4840e85f-f136-476d-8a34-59759b564183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1126 6a192180-4173-491a-bd64-15fea0fc9605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1126 bc489af1-6cff-40a0-a010-69aa6bb939ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4713;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE0C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1127)");
    end
end

unit.assert_eq16(16'h4713, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1127 baca8fd6-eb63-4627-bdcd-fb09ac917813)");
unit.assert_eq16(16'h1E86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1127 51315a9f-292a-4c75-b36f-118395afbd58)");
unit.assert_eq16(16'h1E86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1127 5ab335a7-72ea-49ad-adfe-467a54141dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1127 af2e8294-4814-4308-97df-b97de6408c07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1127 ce39b669-0a6e-4d6c-bb40-5d178a616273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1127 106f4490-b88c-44d5-84f4-67d948eabfb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1127 1b143885-d8c3-4710-ad88-9854d0afd39a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1127 cb15a01c-8d4b-45f6-8cbf-58930649e182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1127 34cd7b35-e63f-4070-a437-1bcdd166fc46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9301;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h50AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1128)");
    end
end

unit.assert_eq16(16'h8C13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1128 2d2590e8-b23c-42c4-9a2b-7715aa05b1f7)");
unit.assert_eq16(16'h9301, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1128 3d985888-246f-4b1b-afd2-04902ed97a89)");
unit.assert_eq16(16'h9301, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1128 9837ab40-14ec-4274-abac-385bcb2ad567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1128 7452604a-5068-44b9-9a7a-5f220920d7d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1128 aafeaa6d-e89b-4f88-b43d-ed6b767fca6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1128 31cc2805-d32e-49e2-937b-34179c046aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1128 cf3e09a0-8864-4e3d-8195-78cb3e8bb4e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1128 6e344e21-8110-4118-86c3-19dd1dc18b9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1128 c274cb2f-ee87-4a5e-a879-6520526376eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h26E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1129)");
    end
end

unit.assert_eq16(16'hDDB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1129 fd0cf05a-1d08-44f7-9990-1ac813f02389)");
unit.assert_eq16(16'h7D9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1129 bef7f9cf-b95a-443f-a266-ef9a2c55726f)");
unit.assert_eq16(16'h7D9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1129 6bc72405-f4f5-4431-8d6b-0c6b89ca109f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1129 ece6b964-8ae7-4cec-8fe0-25f420d22a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1129 cb8251db-97a3-4234-9042-a4f2dfe8d761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1129 2540108a-cdf4-4a68-9587-405e495c208b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1129 608fcf67-f53b-45f3-976b-0b909474ae2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1129 e49e5f02-f201-470f-9c6f-7cb4686ae511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1129 1982d4b0-70b4-4d7d-a43f-7e3cafe12228)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7ED8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB837;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1130)");
    end
end

unit.assert_eq16(16'h7ED8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1130 fb5fb32e-e5f8-459b-8dc1-ffead080dd86)");
unit.assert_eq16(16'h7BAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1130 d2e0f41a-99f0-4f8c-99ec-4652782c4ffa)");
unit.assert_eq16(16'h7BAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1130 10319354-5ff3-49ff-aa21-42b99366432b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1130 2339537e-f67d-49c3-9168-bb8701b844ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1130 351b5dff-10bd-412b-bcb3-70c7b5674bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1130 013ef5bf-c592-4a93-8637-ef365afca595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1130 47d1a333-8bca-4bba-a701-667f9423d94b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1130 854ff48e-0e8f-43da-95bd-61761fbb1b39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1130 c2b9681b-8511-479d-92a0-e6217e1beb35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h954C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4791;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1131)");
    end
end

unit.assert_eq16(16'h954C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1131 9968a067-0cd3-4929-9a93-b51e3715b371)");
unit.assert_eq16(16'h14F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1131 126ac3c2-29f9-4872-a8f4-4bb0fba85449)");
unit.assert_eq16(16'h14F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1131 58f29399-8769-48b7-9670-66bec3968f5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1131 cdb4d58e-cda3-4df3-aa8f-69406fec26ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1131 acfb253b-21ad-40c1-ac9f-4a1fd4a31db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1131 eeca0dd3-d65b-4a67-8a04-65c7f07cbb31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1131 a889969f-968d-4560-b936-0e6ea7b89d27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1131 771b1ea8-8523-476b-b0a3-4e343effe54e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1131 defe3cb1-3510-47cb-835b-d9b03d5be373)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h798B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h847A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE02C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1132)");
    end
end

unit.assert_eq16(16'h798B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1132 3d436a32-e731-479c-b7ec-5ac1e9fba45c)");
unit.assert_eq16(16'h847A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1132 b879a36d-7b20-46a7-87a3-55f7ec5b9569)");
unit.assert_eq16(16'h847A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1132 9421cfb2-4bb9-4c61-b6d0-bebd4b718cc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1132 7dc04ae2-b1e8-4425-9f9e-7c1df6a6eba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1132 6530bebd-31b1-4fd5-bc3c-b9d322451364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1132 6f9d2c32-7582-4f18-beda-71de35e4748d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1132 19606e62-213e-4453-af7b-ec3be4eeb5a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1132 af044745-0a60-434d-9013-8a576f8a2831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1132 e5c3f511-a712-4186-b170-e9565afad8d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h84CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2791;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1133)");
    end
end

unit.assert_eq16(16'hC1CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1133 6698cafc-f051-4d8f-895a-7ae1c9a60524)");
unit.assert_eq16(16'h84CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1133 830b664e-98ee-418d-bbfc-2c62add8e845)");
unit.assert_eq16(16'h84CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1133 6a73e9e6-08de-4d11-b49f-706f78635b9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1133 2f665d79-1d4c-4b4a-8fb7-2902815e3cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1133 c28c74e7-0e78-45ad-a170-cdaecfbb7261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1133 2e83b6a3-b087-429c-8c59-4f70931a52dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1133 7158399d-b123-4911-b1f6-696048cf29c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1133 a3eacd7c-63f3-4f34-8520-049787af49b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1133 2cab0f43-d23e-45a8-96d1-cde3ba4b561b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB856;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA0DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h89F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1134)");
    end
end

unit.assert_eq16(16'hB856, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1134 481457f7-8620-4571-b88a-6061fec91e2a)");
unit.assert_eq16(16'hA0DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1134 2375fff0-a5b9-444f-a9c8-cf296d1b349c)");
unit.assert_eq16(16'hA0DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1134 e17cecdf-23dc-45b7-8bc1-be5ad0a10476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1134 a5012fec-a39a-420f-a7b0-c9c7b8a4350d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1134 2c4dd56c-9194-439f-97d9-bef9e9302d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1134 e4917c8c-0bd4-440f-8765-eadfda46f7c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1134 696767a6-d712-41f5-8552-1dd1b7d24ab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1134 50b42110-e658-4944-9564-0fe465e936e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1134 9fc08e46-10fb-47b6-8d38-6b473f214d34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF929;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h263B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1135)");
    end
end

unit.assert_eq16(16'hF929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1135 658ad2ec-2549-43b8-898d-05553d4d11cd)");
unit.assert_eq16(16'hAF73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1135 4f27bba0-66b3-4643-8c35-0cef6849e344)");
unit.assert_eq16(16'hAF73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1135 f40976ca-11a8-412a-b600-923f2d5b9aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1135 fc872de8-5eaf-4f16-964b-de543db71990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1135 54857a75-5c94-4431-96bb-b26ee598a91f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1135 5cf6715c-ecca-4c52-99de-21178e897bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1135 c1f1989c-45e0-4ef6-b107-e6279f0c9a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1135 36e021ed-72e6-48a9-a7e8-a2e8598bd65b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1135 f7509b90-fcb9-4ea2-880c-875ebbeb78de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7DDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2749;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1136)");
    end
end

unit.assert_eq16(16'h11CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1136 0674428c-3d23-407a-841d-ccd485d23cd0)");
unit.assert_eq16(16'h7DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1136 eb5df6ff-c4bd-45ff-94c3-c1d3a84e2eec)");
unit.assert_eq16(16'h7DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1136 3bd501d7-e474-42e0-9133-104568c01859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1136 dbce0f4d-887c-4f51-b555-857fabd0fd4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1136 72949f80-01b1-4029-b88b-d935a2ab3463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1136 a7afd5a9-d9f7-4960-a4cb-509b9562f040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1136 68b2dade-ece8-450e-a004-9e2bf0ad95da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1136 98602d7e-8ca4-4b0e-beea-46d88ed85a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1136 0b4ed7a3-407d-4a39-91aa-5771f691bc54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEB44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD94A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1137)");
    end
end

unit.assert_eq16(16'h7C94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1137 07996753-11f5-4975-aef5-0ef290dd7733)");
unit.assert_eq16(16'hEB44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1137 bbfcee2d-3e6d-4dca-94e0-6b7ce0fec6bd)");
unit.assert_eq16(16'hEB44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1137 0c99aabf-50fe-4e58-b7c0-c8c74daee77c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1137 a8c3099a-b29d-473e-8cea-42476a6b233e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1137 ff5219fd-9b2c-43e9-a110-3f241a7749fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1137 df74a35b-538a-4c5c-b471-e877afe8f0f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1137 82bf827c-d057-4ebd-9e31-ba7041bb1d68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1137 c4975eed-c75b-4c8c-8510-b9c71016112c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1137 098a07c2-f368-47b8-94ac-704203678a42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8788;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6901;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h79B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1138)");
    end
end

unit.assert_eq16(16'h8788, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1138 04d5762a-64fc-45b7-8755-c63b6abb7a3a)");
unit.assert_eq16(16'h6901, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1138 b8485ef7-03d2-4e3c-94f2-66479bb3f98e)");
unit.assert_eq16(16'h6901, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1138 042a14c4-7409-4218-ae48-15da6c975b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1138 a3e5d62a-a3d5-45c5-9490-0f8effd87b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1138 0d586163-e34d-461f-b0da-0fcb68c9004f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1138 b123d41b-c824-4986-8e88-49651cb70370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1138 2b822a85-ce5f-4947-84c9-545b1502d2ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1138 93204d73-2413-4e35-bdb3-f01cd5352a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1138 40978002-9377-4fe6-a827-e91d36bd0271)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE81F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2EFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8D06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1139)");
    end
end

unit.assert_eq16(16'hE81F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1139 2682f810-a4f4-4086-bfa1-979bc7011713)");
unit.assert_eq16(16'h2EFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1139 f5b1c6b9-d8f7-4b16-a4b8-5ec44be2b0d7)");
unit.assert_eq16(16'h2EFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1139 0c6a8213-6bb9-4fcb-9f55-8716ba8020d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1139 11ee47a5-72b5-4c4e-835e-e74dc00d12f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1139 d9e66b31-31ee-4196-86ef-59ef4b45eec2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1139 7076b91c-8ccb-4664-8db4-d84391dcb4f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1139 2837f99c-df0b-4609-a815-e7d51d013c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1139 69d3745f-aa5e-4421-95e2-629405649ef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1139 8530b8be-e717-4f93-943a-84a49e8b5933)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h93A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1140)");
    end
end

unit.assert_eq16(16'h6D1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1140 d3ec4818-a3fb-4a08-879d-39c9a7291e86)");
unit.assert_eq16(16'h93A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1140 07f018c6-78f6-488f-b388-d2bd5c7cb5bc)");
unit.assert_eq16(16'h93A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1140 fa9982e9-1af3-4973-bc1f-51864007cdce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1140 7e301b89-eae6-4223-a7aa-c93ab61e92dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1140 cec79b62-a961-4765-94a7-4d0dd6b1f839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1140 7aba4d3f-cd4b-4b3e-af6b-0f3d4a83a065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1140 6bb2d842-067a-40cf-99e4-3b84f87c5e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1140 6a60b8e8-28fa-4d3f-9840-141fe5b0672e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1140 5187163c-e441-43af-9bbc-603518e03bc0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h376D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h76AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1141)");
    end
end

unit.assert_eq16(16'h0F38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1141 c8a80b66-4d9c-4d1e-92de-c80f206684c3)");
unit.assert_eq16(16'h376D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1141 e4d6a5d8-487e-4ec2-9360-374dd5b19c2b)");
unit.assert_eq16(16'h376D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1141 18c36644-c4f7-407d-9fc7-dec047d8b1ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1141 dfe062f7-3c29-41d7-a33b-0f49d2874245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1141 c6c2f32a-e2ce-4f5f-a7af-033c557069c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1141 3f1f7a6c-e807-4a45-876c-f2cf3b2c9d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1141 51c01e5b-be82-4390-ab12-5385791c3c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1141 ef2e32f5-7627-44e7-9ca8-a98d9c4f039c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1141 1ab88d24-645e-4af1-96d7-12c31ed75003)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCAB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDA1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1142)");
    end
end

unit.assert_eq16(16'hCAB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1142 d60e6333-1adb-490c-ba87-787ec7898554)");
unit.assert_eq16(16'hAF8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1142 5700f1f4-0bc0-4e13-bced-da2cf2c98f32)");
unit.assert_eq16(16'hAF8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1142 c3a47540-aa6c-471a-bc9c-ebcea8634a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1142 39416199-8f1e-4b78-8170-40af03c01969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1142 3246faa7-ce60-4e14-b183-a310f2db98b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1142 767b9a29-ccdc-4c04-af1a-0fbdc6938418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1142 268b3f3d-9729-41a4-9c3f-da555d3661b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1142 874a91db-105d-45eb-9ca8-026a3f7d5a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1142 15812092-675a-4d49-8f88-a2b9b9e007f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDCC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC1CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h886D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1143)");
    end
end

unit.assert_eq16(16'hDCC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1143 a02095e7-cdc5-4f84-931e-8e94976e826b)");
unit.assert_eq16(16'hC1CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1143 1449d0af-421e-492a-ba92-cde43d1cd99d)");
unit.assert_eq16(16'hC1CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1143 f08f6147-de9b-4362-8664-c1306cd68520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1143 38100a38-2d46-4eb7-b442-2189d52d5635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1143 9977f0bc-b1dd-46bb-8b3e-e0ba4971952d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1143 66a859af-ad65-410b-9c71-53e9f3133820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1143 0ab243d5-b564-442e-808a-78b780b33ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1143 de1998a7-db38-4784-b461-13ff97c67963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1143 76f8b1d3-d4f2-4496-a8bd-7cbadb4baf5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5480;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEAF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1144)");
    end
end

unit.assert_eq16(16'h5375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1144 b6f16aca-1d77-4c60-8600-949dea06f107)");
unit.assert_eq16(16'h5480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1144 7cf4caaf-b437-44c7-898a-c4e5cc95962d)");
unit.assert_eq16(16'h5480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1144 bee943e7-4690-4af5-81e7-770b446e6c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1144 8178b2cb-c287-4df6-bf91-bc2660da034b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1144 c41b1506-970c-4e9b-a1f3-0c56e8192ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1144 f3a852cb-2eb2-4d90-9f1d-9e2d7e865d4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1144 0f7e33c0-6dd8-488d-9457-33ef1c8a8d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1144 2c647c19-0279-419f-b842-8ae8770b8157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1144 0461d4a1-f817-4231-bf97-3146e836ed38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1053;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7CD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1145)");
    end
end

unit.assert_eq16(16'hCE77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1145 a5c4e3b1-7e85-4287-91a5-537f0ea8291b)");
unit.assert_eq16(16'h1053, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1145 cb54e52b-27d3-4d11-a455-a213b20e48a4)");
unit.assert_eq16(16'h1053, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1145 a62307d9-2eba-45b2-96ad-6db8cb2465f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1145 184a7d07-2fa5-4528-8e98-fd277e5add94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1145 b50e137d-3505-42d5-b64c-0285acd628fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1145 6d7073d0-1dcd-4653-b80f-87381854cfe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1145 066bf00c-1066-4709-95ba-66c72f2539da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1145 48a4ff59-3ce7-448f-8b04-3b5f4b104fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1145 284ce68e-7007-4417-9b6a-f78c52208db5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA04E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAD1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4026;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1146)");
    end
end

unit.assert_eq16(16'hA04E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1146 78910bc7-0112-4ecc-8478-b8d90b870b1d)");
unit.assert_eq16(16'hAD1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1146 2d301f26-5f33-4060-a549-6dab61ca10a5)");
unit.assert_eq16(16'hAD1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1146 3cd13e35-3528-4b00-8bed-1ba832609ab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1146 098ffb8d-afaa-49e7-a772-569f83d509ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1146 705b7105-cd93-4491-976d-e0cff1c92ac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1146 bba20c48-291e-4b07-a0d1-cddff75f8fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1146 67096d5d-451c-4092-a237-d721c5ed2933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1146 81c6db4e-31bc-44ca-accb-2c6ae801bd4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1146 c3f87a17-da32-42f7-88ea-c19d0faab205)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA075;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h49EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1147)");
    end
end

unit.assert_eq16(16'hA075, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1147 3b5b7bc7-7341-48e1-9613-8ec46aa9aa93)");
unit.assert_eq16(16'h87E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1147 8dfdb01f-bd53-4a93-b2a4-8761d294dd16)");
unit.assert_eq16(16'h87E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1147 9c192f06-72b5-4a29-9883-8c6429e1c6ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1147 40e37ab1-4b43-421b-a880-b4c850d52a7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1147 5c067ba2-668f-475c-a921-7d8703860f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1147 2d90a66c-7d66-4f45-af05-d21dcdcfe5d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1147 97789690-6bfe-4d4e-9bd5-bea0c47f1a54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1147 354c1b5e-852d-45eb-b90e-8e2a2129b3a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1147 cf33fc65-a701-4045-8c9d-ea9404a8c9e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9C02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2C5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4EC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1148)");
    end
end

unit.assert_eq16(16'h9C02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1148 43ed782c-79c7-4afa-bbd7-b2097b8ff26c)");
unit.assert_eq16(16'h2C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1148 326b4e7b-7c55-451e-a0fd-e8d7ee677643)");
unit.assert_eq16(16'h2C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1148 78b137d0-8770-41f0-affb-cdb5cd1b7326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1148 87e9c156-9387-4db0-aff4-f2934df7f3b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1148 e6070126-187a-4b14-8afa-3d3226e6b884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1148 4fe6684f-c436-40a0-afa8-55002dbe25b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1148 d9322eb6-0afe-4b94-96a1-ba7e73cac9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1148 a4c55cfe-7e89-4433-bfd5-4e4f9654a8b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1148 30a7f463-ea67-4db5-baa2-d737e0d62803)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h00CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3596;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1149)");
    end
end

unit.assert_eq16(16'hFE93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1149 fd05a3b2-070b-41c8-9ec6-8f1ab7242bdc)");
unit.assert_eq16(16'h00CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1149 875a2391-f597-485f-8db3-f4ebc3803a8e)");
unit.assert_eq16(16'h00CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1149 d51191ad-d11c-4736-aa2b-57b974da0384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1149 016d190b-1d48-4c24-b1fc-57c5299b1925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1149 b6a8221d-e00a-47a4-b8d9-4b58bcf6fdd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1149 9632e1b6-5d9f-4310-9275-6f6f1c17aa4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1149 b70adfb8-178e-4376-8b92-8659057ea22b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1149 280d21f4-3e3a-4a31-ad73-6e6f58138eae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1149 e184d361-f473-4fbd-b139-46fe580c06cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC7D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB52A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB134;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1150)");
    end
end

unit.assert_eq16(16'hC7D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1150 8dbabbc6-b061-4506-ae84-280f0595f5cc)");
unit.assert_eq16(16'hB52A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1150 cc550d06-4385-4701-8e63-1d9b465bb8cb)");
unit.assert_eq16(16'hB52A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1150 fd12cc24-c6f2-46d5-aec7-c1168fce6bf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1150 164a1ae9-3cb1-4295-98ca-aaeee1a0ef90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1150 7e13fe6d-47d5-4fa8-a873-e0eade69a3e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1150 32c747c4-f2fb-4a0f-9650-ce0067a54812)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1150 706c8639-0088-4050-868e-f356434496b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1150 7cf808f5-2a54-47c9-8a73-8ff775929ba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1150 8000c714-4c3f-4e77-b466-404fe073ef92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h300A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCC4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9BD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1151)");
    end
end

unit.assert_eq16(16'h300A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1151 764cf020-76f1-41dd-b9a5-a86ce548d18f)");
unit.assert_eq16(16'hCC4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1151 ccd7d936-7064-4dda-85a0-116798d9844f)");
unit.assert_eq16(16'hCC4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1151 d6883afd-ab7c-4981-b506-e8101974ddbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1151 23da7a7c-0b6c-4633-a4a0-9619daeabcda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1151 7d80b9f9-55eb-4038-afcb-d945cb23b914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1151 125d29fc-ad6d-4dfb-9485-e26ec1a7b170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1151 5dd55961-53f1-43b8-a563-c2bf5a3fcd87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1151 293552c9-eead-4844-8942-7526c92b2c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1151 44ef069a-c095-48ed-8357-36ec6c65607b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5290;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD509;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD225;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1152)");
    end
end

unit.assert_eq16(16'h5290, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1152 4e854957-a628-4028-87a1-41a4af3952a3)");
unit.assert_eq16(16'hD509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1152 e005607e-65c0-4b3a-8212-2cd251312163)");
unit.assert_eq16(16'hD509, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1152 ac9fb642-e754-4116-8ae8-8daa9f9a9652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1152 00ed10b7-1c54-4f83-9e26-90188cfd98ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1152 2ab8fdc8-eca9-479d-8868-54465aa81aaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1152 aecb70be-372e-4f58-a4ba-83b4251b4ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1152 7b5e9eb5-7521-44b2-b299-1f887a49d252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1152 36a8441d-b031-420c-8dce-1315a0b772b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1152 b4ffcc5e-c6af-4553-9f5b-1d1d3ea1e72a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE8FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h56FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB869;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1153)");
    end
end

unit.assert_eq16(16'hE8FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1153 f4a25110-6a03-4137-aa6d-dbf31c1fa99b)");
unit.assert_eq16(16'h56FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1153 fe7ef809-9c1b-40e7-999c-99f5487dc4ff)");
unit.assert_eq16(16'h56FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1153 ec4c57b9-87c7-4b46-bb09-7550760ac097)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1153 4ae70b4b-2aba-4286-be66-8927d0086cd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1153 6f059854-a1bd-4729-9a7a-4f04821a9c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1153 2aa1384a-6c79-4ff4-b7da-81d99a7553e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1153 78732caf-86ea-4d5c-8c23-2d4b52e139c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1153 8db785f4-be06-43d0-a4db-9f4178f873c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1153 4d684745-efe0-4801-9c00-0e291acba01e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h94CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h95C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1154)");
    end
end

unit.assert_eq16(16'h94CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1154 5068b7a6-c4c1-4fd6-90c6-3f0ed0c745c6)");
unit.assert_eq16(16'hAA86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1154 f4f63f57-7fec-4092-970d-9f347f385500)");
unit.assert_eq16(16'hAA86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1154 d1106299-2bfe-4faa-8b9e-e13f84b0227e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1154 5ae593fa-880d-42c4-a66c-7706edcd37f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1154 84e84416-db59-44da-8b1c-9022429e810c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1154 a090f1c4-7219-4cb9-81f3-a71b1eff1da8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1154 dee9b357-d09d-49a4-843a-206a9485b5ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1154 bdbec233-d7d9-42f3-8277-4a04c382f8e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1154 d95a46c5-10d4-486f-9d0c-818ebdbfa47b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA30A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1155)");
    end
end

unit.assert_eq16(16'h4C4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1155 db40df08-b853-45cf-8871-a4d34475d0ef)");
unit.assert_eq16(16'h4B5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1155 f94a8314-45ce-4789-8484-e314abbd4259)");
unit.assert_eq16(16'h4B5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1155 cd0b6335-7f87-46d9-b62a-c460b38daba5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1155 6e61c08f-8837-4c13-bedc-294e81f2ba8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1155 7cd5ba1b-e0ea-487b-81c8-4e8f1df1d2a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1155 e5ac97e0-2878-446d-bbdd-a9e9e32a82e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1155 5bfa9ada-3c1c-449b-8089-41de2abca59c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1155 cb20a9c5-f148-4262-8975-cfdc93bd7439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1155 f179be7c-a2c9-41be-95fe-1b210347197a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0496;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3377;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1156)");
    end
end

unit.assert_eq16(16'h0496, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1156 7a424889-97d5-4b20-bc72-f7e6cbacd172)");
unit.assert_eq16(16'h5A46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1156 b208e852-9d75-4720-9c6a-66ba0bc8549a)");
unit.assert_eq16(16'h5A46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1156 93e602bc-954f-4dd0-a735-8e70ac043b11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1156 26d909ef-166e-432a-9392-7407c05e8067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1156 a2482374-6bfd-4f12-a772-896a790d071c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1156 2b02ec72-f102-4119-bd9f-6858f234ca33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1156 4878aba3-b53c-4f9a-94ee-ebd64d7f3dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1156 d5e1c7f1-f2e6-48e1-b09e-f2c14c416929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1156 414c12d3-19bc-44e7-b69b-fef9a5648746)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF583;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1157)");
    end
end

unit.assert_eq16(16'hF583, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1157 5365f3cb-d11f-464b-ab36-bd28eb17184f)");
unit.assert_eq16(16'hE7D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1157 9a4bc289-0974-4adc-aa87-bda8443a2782)");
unit.assert_eq16(16'hE7D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1157 069c38cb-bcaf-4c58-b20e-c0a44bb33dff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1157 c4eb7061-3386-4321-bce9-f4e6f3df0d85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1157 45baf586-67a1-4fe1-b8ef-6330bc914831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1157 f095b47a-26c2-4752-a165-2a64638bb5e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1157 14a2fcb4-418a-451a-a881-f1c672e27a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1157 9d7258be-2561-4b2e-92f9-d7d1d1d2f4cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1157 fc741926-ec9a-4a11-9c02-b314625084f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5380;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5BD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE999;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1158)");
    end
end

unit.assert_eq16(16'h5380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1158 17145f98-25c4-4734-9a28-1610338f5314)");
unit.assert_eq16(16'h5BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1158 54e4644f-b130-445b-b1c2-dab649618487)");
unit.assert_eq16(16'h5BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1158 0b8a6a30-71d8-4335-b567-d29ef7167ff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1158 bee4e936-e1a1-4d1f-aad1-55c2511112ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1158 dc7ad04d-b9fe-4407-a18b-0f328a8ff81a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1158 9f7c8798-a714-413a-94a2-d06608ff7945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1158 c0a5dcfb-9a53-4693-a4e1-7e0ddce589fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1158 05942747-b2c7-4df1-be17-18a6a2c157df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1158 7e7ceddc-35e8-46c3-81c0-f8dda8f9aacf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4E46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h02E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3688;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1159)");
    end
end

unit.assert_eq16(16'h4E46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1159 f259691b-2799-41e3-86c5-97b1bea35cdc)");
unit.assert_eq16(16'h02E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1159 e3e8620b-3af4-49f9-8034-e6b2f456c185)");
unit.assert_eq16(16'h02E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1159 eb5f2a8c-3f94-465f-84ed-3a9c0d620972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1159 6a759d62-4f4f-4b0e-b327-d952615262b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1159 728dfef2-e24b-42db-8cce-3e0663ffec29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1159 9ac1b52a-1c08-42b5-8695-02b86a398618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1159 10f4c004-971b-4f3d-b18b-bc32d57f6401)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1159 d6874318-7479-445d-96aa-57f060915e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1159 97beaf43-a83d-4408-be73-17bc93e0c50f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1593;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h28BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1160)");
    end
end

unit.assert_eq16(16'h1593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1160 7492efc1-ed75-46f7-a7b8-06afea92a897)");
unit.assert_eq16(16'h6A5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1160 7e1e3812-4d02-4ca8-b530-426afe6fdb78)");
unit.assert_eq16(16'h6A5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1160 c5e40e3b-84c0-4217-b019-b8513b9812e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1160 098cf992-d5db-4193-83c9-1f221d23484b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1160 74db91a8-fa15-4b0d-88fc-8098b1113e41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1160 da0c81ba-f1c3-4db5-a774-40a2e635056b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1160 4f7f0c8c-0883-4ece-bddc-cc0fa721fd86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1160 b1cd6f62-1647-4b11-bb82-10471aa4c398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1160 79f15143-24a4-47b4-bd58-4a013cf5bd82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h18FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h165A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1161)");
    end
end

unit.assert_eq16(16'h9F9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1161 45181749-73ee-4971-878b-e8ed5f88dc18)");
unit.assert_eq16(16'h18FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1161 e0151f43-ca79-458c-93d5-8d011f289503)");
unit.assert_eq16(16'h18FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1161 5c261f84-d2f8-41ee-8845-1843c6fb94ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1161 65e4a4a8-59d8-40ce-a719-91539bc8e38f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1161 5c249165-beb3-4bbb-948b-fe076f028f03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1161 da8f823c-eb3f-495d-8f77-089cff08b3c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1161 22a275b3-901a-4137-aa62-4049e001086c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1161 7b5eb14c-c824-4f10-a3a9-c9a616e2972d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1161 a272e44e-d46c-4cef-bdb5-1f52a0402da7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA81E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA371;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5EB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1162)");
    end
end

unit.assert_eq16(16'hA81E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1162 65eaa7c7-a4e7-4c01-8e2f-78b54c6c902b)");
unit.assert_eq16(16'hA371, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1162 42908d61-5f3b-47fb-b7b0-8f31269bdc94)");
unit.assert_eq16(16'hA371, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1162 5bf8c27f-8af2-408d-8abf-d7a7ff292574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1162 8df801d8-3e5e-42c2-b8eb-20d887a12daf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1162 8eceef0a-2a94-4ecf-bf64-5f6436c5d9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1162 656f0dd2-57d8-45c9-97d1-89f095c65324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1162 ebc217c1-2085-47bc-a7fd-fd9342ec2c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1162 7db6b14d-9b7a-4f84-8515-133d69abd7ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1162 947aa839-f4cb-4813-b22c-a7f51175c3b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8AB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7DA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1163)");
    end
end

unit.assert_eq16(16'h8AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1163 b6e23a5d-a750-4582-91f2-13642b3a976b)");
unit.assert_eq16(16'h2B8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1163 8ae69126-d638-49cf-aa2d-1347f1ad0539)");
unit.assert_eq16(16'h2B8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1163 bec8e103-afad-4ac8-a6c4-0a21fa2b778e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1163 0112a768-e85b-4daa-9280-e0e8ce4f6f45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1163 ab280914-ff3a-4e1b-b5fb-cab5a3235dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1163 da01e5c1-8bd5-48b2-99d0-1ed412da127c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1163 eea6fe7b-e8b2-4e0a-9e00-c31d1c7b8eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1163 73a05913-cf1e-4a6f-b7de-168be4919252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1163 896d9564-312e-4fd8-a97a-2766c689a695)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2946;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1164)");
    end
end

unit.assert_eq16(16'hC8C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1164 fde20ac4-07ad-4948-8e42-ec90f83a3619)");
unit.assert_eq16(16'hF4AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1164 610335a5-d3e2-4e97-976a-d77485ed0856)");
unit.assert_eq16(16'hF4AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1164 ff8d9117-1a3e-46eb-8f74-4a46faa6e537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1164 bf8cbfc4-aa8c-4a98-a2bb-b425fe86e45f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1164 facc7475-1e1f-45ff-85f7-2763595c6663)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1164 ec29c794-dfdd-410a-96fb-14318c884d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1164 21197e23-2dc4-42a2-929d-241a634a3cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1164 d882a8fd-7951-432a-a1e5-da96977aa715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1164 5db97722-06d2-44d1-b64a-b235143bb4c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h40AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5A02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF998;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1165)");
    end
end

unit.assert_eq16(16'h40AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1165 3405a8fd-feba-4c23-adb3-eec729de626b)");
unit.assert_eq16(16'h5A02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1165 5238321a-dab7-47f2-ac56-80a3ecfa2a0e)");
unit.assert_eq16(16'h5A02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1165 253a3e68-4ad3-4e4e-b7ae-95099dc926e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1165 d9be920e-09ce-4847-a5c8-28506accde23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1165 03f1dd63-5703-4e0d-8582-30873cd88343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1165 ff791dd5-a26b-448e-a57b-a045bdc94093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1165 e5d97f0e-319a-40a4-92d5-4206db4b3faa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1165 a24c5a03-41b4-4e30-b5f9-960b267213df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1165 a6dd8eef-729e-400d-b708-a02aee1e1190)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6BDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h47A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1166)");
    end
end

unit.assert_eq16(16'h6BDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1166 be684b4e-f6cf-4095-9ff3-66a2fecf12e3)");
unit.assert_eq16(16'h47A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1166 dfed4fae-5c45-4f60-bde2-80155cb53028)");
unit.assert_eq16(16'h47A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1166 24f368ff-a62f-4198-9fe6-db3f255ebe98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1166 d3f8eadd-8689-4888-8d38-b3affcc7eba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1166 f947e49a-05ce-48ac-b36b-ccdfa8b3996b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1166 f2dc4dbb-2ac7-433d-ba4d-3007e6175657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1166 b8ec156c-0a46-4401-854d-457a4cbea37f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1166 03633ddd-2ba8-4308-a62c-e0de6505f8c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1166 e24bb29f-767e-455a-b4f2-4ca414e34fdd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h23FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h751C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1167)");
    end
end

unit.assert_eq16(16'h23FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1167 59674ac7-2484-4db4-8990-08a89bd86f50)");
unit.assert_eq16(16'hCA76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1167 22fdc56e-3010-402f-a65a-1170403c35fb)");
unit.assert_eq16(16'hCA76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1167 6a9f0b8a-444a-4ebd-9366-ca3df64ceafd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1167 0c1c5c03-cd98-4d2a-a0c7-d03b642f3c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1167 8e82f260-3e62-46c7-9f5f-d719aa49395e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1167 d68de1af-1e08-4771-bed8-2eba91ee458b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1167 9b460f79-9fe1-4ee0-b931-e7764c6b60c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1167 c9df407e-ec6e-4bcb-93d9-e1022f60270a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1167 ec6fd27f-1fbd-46c2-b891-80322ef0681a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7019;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA7E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2919;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1168)");
    end
end

unit.assert_eq16(16'h7019, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1168 2b33db0f-6a09-4d71-8b44-3d900740aa2f)");
unit.assert_eq16(16'hA7E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1168 388ce6b1-5a2b-4a1e-ae77-d61beb40427b)");
unit.assert_eq16(16'hA7E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1168 60b2ccb0-d00c-477e-bcf2-17ad2e506314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1168 975a0be4-9dca-4df8-9f20-209a76cefd7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1168 87a9358a-1a45-48ba-b58e-1ad4f05773af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1168 b31fc74a-34e5-41e3-94ae-5fb01744febc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1168 121cbdd7-9d6e-4e10-9e58-141b1a1c0c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1168 82cb0af0-74ca-4d21-80df-6b9225a3a38f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1168 5dc9b401-2914-4a0c-9060-50ff0aa9712f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5911;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA792;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBEFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1169)");
    end
end

unit.assert_eq16(16'h5911, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1169 c08c795f-f6cb-40e6-b52a-a505831c5243)");
unit.assert_eq16(16'hA792, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1169 5c708f11-96f4-4489-82a3-e77b785d658d)");
unit.assert_eq16(16'hA792, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1169 709f7353-c87d-4827-be34-f6c792aa3ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1169 09b30702-e533-4efa-bc3d-5f66d4156f0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1169 e2bc023f-4368-4b97-8dee-e412f1893dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1169 3ae5a4d0-b644-4624-b7bc-60f087041af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1169 51562882-4ac2-4e07-a16f-5d5c1713b4de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1169 5df5655a-2cbd-4442-9b6b-89006834ef15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1169 cb95b322-dd70-4379-aeea-ef1f7a856bc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9882;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBC2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h83B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1170)");
    end
end

unit.assert_eq16(16'h9882, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1170 d3fe61e7-d2f2-47e4-b151-e73e3af758ba)");
unit.assert_eq16(16'hBC2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1170 ea949f51-9aef-4834-8137-229270fb0c3f)");
unit.assert_eq16(16'hBC2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1170 54425e37-91bc-4f9c-b06e-b81be0ff70cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1170 dba2d42d-a87f-4e71-ba7c-f7bfc83f5820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1170 f6dc4cf8-71d5-439f-a421-e84d31b7506a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1170 3e4689b3-7b6d-4632-9e92-d54963655c57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1170 7658aed2-6eb9-4f82-b3d4-3a9ce45c6ab1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1170 c581639f-565d-4ec3-8029-9f0787bf02d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1170 6f6843bb-38a8-4e23-89af-01557e06da34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB49F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1171)");
    end
end

unit.assert_eq16(16'hEC03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1171 71402bfc-000b-4e9f-a03a-1094d841d90c)");
unit.assert_eq16(16'h1D27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1171 55240eeb-9420-4d92-94b4-45201692a4b6)");
unit.assert_eq16(16'h1D27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1171 84931ab7-b4a4-4236-969e-c417a7e6ec61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1171 f74acdb3-dd0a-40d5-bf81-5d10b0be95c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1171 08d5c164-2477-4330-90f9-d75b1dc19a88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1171 c7af7f52-c11d-4d69-a914-0bcbe71bc42d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1171 d8f00879-816e-4af6-a0a6-6df0f0032ed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1171 6c21e7a0-d923-494a-9e4d-35cd18aece46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1171 3a12cb6a-31bf-4a7a-8f3f-51ec2944690d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2726;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h38AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1172)");
    end
end

unit.assert_eq16(16'h2726, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1172 e05f060f-bd8b-4bce-ad4f-9fdf702dd621)");
unit.assert_eq16(16'h38AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1172 b030800b-e030-4b52-bb94-0cce5a742444)");
unit.assert_eq16(16'h38AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1172 ba00db49-c829-4c7e-b5fc-3630923c3a40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1172 be768297-e569-492d-87f2-3a7ccfa805db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1172 5fdbdec2-4563-4712-9081-2f04c902158b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1172 c1ae3a24-0659-423d-9bdd-3ed820cc3831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1172 b913efc5-774e-4759-83af-5687d5ef66d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1172 eb26bc1c-64fd-4f2b-a9ba-2ca0393cb2c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1172 7470875b-6b93-4d34-b572-691caa80a9a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h013D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAD43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1173)");
    end
end

unit.assert_eq16(16'h013D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1173 28d595b0-122c-4e6d-8533-d79cbcbfabb2)");
unit.assert_eq16(16'hAD43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1173 7a0da65e-fa43-4eca-bc9b-1636b6303f86)");
unit.assert_eq16(16'hAD43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1173 42c4421f-f5f0-4a54-90de-34ecbd34f0c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1173 ffc8c6bc-3d0f-4dcd-a437-13c3eb7fe90d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1173 2d893f86-86a5-4602-b53d-bce5bb5dec4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1173 6ef17745-c544-485e-affa-8e832ef1cf27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1173 77eb6370-5894-409e-a963-f8c8b0948ad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1173 05e92d82-95f5-4463-b527-169bc510c164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1173 aa4111f9-be7b-408c-ac26-b9b4a4160853)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1174)");
    end
end

unit.assert_eq16(16'hEB59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1174 c47aa1d7-43c2-4533-b933-3d6a9f3db7ac)");
unit.assert_eq16(16'h5F66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1174 43e445e9-4301-465e-9041-a80bfeea0cc9)");
unit.assert_eq16(16'h5F66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1174 5479f182-84e8-4a93-ac5c-269df2599bbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1174 d77319af-e3b5-4592-ac25-3ecd8931257c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1174 e9f219a0-c31b-43b7-b2c7-6231501e3b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1174 0a2979ac-e2bf-4c2e-b987-74d1e3c49cdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1174 1e3fd685-d0a9-4a85-8f1e-49cb7f62610e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1174 861899a1-401d-4882-8cd9-e083d3950695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1174 42ceef0d-7244-4947-bf8b-4651ab24aee2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h28FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC67B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1175)");
    end
end

unit.assert_eq16(16'h28FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1175 83b7a9de-b5fc-4f5b-a7ea-dfc92e373b9c)");
unit.assert_eq16(16'hD2D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1175 823770b7-139f-4cf7-962f-ad6cebac4c6c)");
unit.assert_eq16(16'hD2D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1175 b6ed9133-45d9-44b1-93ee-4e12f5ae69f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1175 71cb82ad-4c6a-43a6-b087-281796a8df1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1175 e0b15a0a-5bf5-45aa-a1a9-855746d02095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1175 70ae93d2-b6ab-4fa4-b0f9-7ad492eb0ddc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1175 eb2fb6ee-5154-48fb-9e75-a655695a944a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1175 55bddaa9-4239-49ce-901e-c0b0754ff7b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1175 a50b3631-a2ac-4dec-a50e-3520036b6f2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h82A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD587;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1176)");
    end
end

unit.assert_eq16(16'h2EE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1176 cadb8c61-7d82-4448-8068-0118b22164b5)");
unit.assert_eq16(16'h82A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1176 78ff01bc-82b2-4456-bad8-41c876b7c3db)");
unit.assert_eq16(16'h82A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1176 0d152b58-85dd-4031-8539-a6e25540052a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1176 b83c4b82-33b9-4646-bc55-71cd139f81a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1176 6aea9285-0199-4012-949e-e168fdf5caae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1176 1e4ed8aa-fa25-4c1d-bb86-5a5962b28c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1176 5b7a4055-537c-452e-b889-966c3a01bcd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1176 f75b3da1-7223-45d2-a763-0df38dd8c6e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1176 e987ff54-b9ce-4f86-8af6-1dba32183720)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1EA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1177)");
    end
end

unit.assert_eq16(16'hFE6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1177 401b3423-d019-4b93-8be8-51bd7a4b6f76)");
unit.assert_eq16(16'h6D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1177 255467ba-4286-4ca5-86d6-bf1beb6404df)");
unit.assert_eq16(16'h6D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1177 ad10c5f1-f3ac-41b1-be24-01d66e7a9710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1177 54ec2bed-dd6d-489e-a617-68ab9beaa375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1177 7c859115-b3ee-4f40-a716-da47d6fd3ced)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1177 76a17320-b30a-42d7-9424-f3555c734f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1177 4e6880dd-3ab8-4e99-b60c-9dccd992f029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1177 ae63141e-5f6e-4a1a-9f72-486b4b134545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1177 1bbbbe62-dd53-4af1-a0b2-19e521de9886)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB835;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h60AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1178)");
    end
end

unit.assert_eq16(16'hFE2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1178 6f1fd289-321b-405c-900a-db70297822fb)");
unit.assert_eq16(16'hB835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1178 8852210c-3d8e-479a-8abb-aff031e786e3)");
unit.assert_eq16(16'hB835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1178 c6f73048-30b8-4878-a552-e7c068558004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1178 b0202911-dbf1-483a-9aac-e86db7baa9fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1178 a6b4e3dc-9f8d-4c8c-ae59-d372123accd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1178 739e95ca-e975-4bd9-a9b5-ae570057e83c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1178 64b61904-d6c5-4740-98af-e2961dce31ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1178 9d9f5239-16d7-47a9-9665-bd6bcc4eef92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1178 4c3aa9c1-2ed1-4c38-820d-4ec2286564bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2380;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1179)");
    end
end

unit.assert_eq16(16'h8A23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1179 a74fbeee-dda5-43ba-8090-7d6898617081)");
unit.assert_eq16(16'h2380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1179 6b4e479b-7895-4916-9eca-7b8e51359209)");
unit.assert_eq16(16'h2380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1179 67d635da-26d0-4449-bde2-4f97ed93ad09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1179 d638435f-f6f8-4148-ae7b-686d3e0941c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1179 572fa15d-d208-44d0-9e1d-64450552922f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1179 f153243d-9d3e-4e69-a12e-3633be3b6bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1179 59466b5b-4214-481b-8dca-83b1f85663ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1179 0e6ee658-de0a-402a-b584-c38096fad552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1179 87e4c463-41e7-4657-87aa-a71ab99f31b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF134;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6BE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCBE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1180)");
    end
end

unit.assert_eq16(16'hF134, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1180 5eb3a326-55d2-478b-b08f-0227f73b4a75)");
unit.assert_eq16(16'h6BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1180 022540a1-6602-4602-af5d-5cc47f9811e7)");
unit.assert_eq16(16'h6BE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1180 6357927e-066d-456c-aa22-ab079d27b925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1180 c8273ffb-0e27-4604-80aa-57164b0558d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1180 99d80dee-dbed-44f4-9b4c-189e2fb8a6a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1180 a1a42107-9f57-4edb-8a82-25ea1fffea79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1180 4cc5247a-b438-4112-ab86-a7dd90ad1fb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1180 29eeecb0-af30-47a1-b4dc-ba94f99c819d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1180 3d381684-f0f8-437d-b35b-c078fc44b111)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7183;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE3AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5834;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1181)");
    end
end

unit.assert_eq16(16'h7183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1181 80ac9eea-20b3-466d-aaeb-4eb2fca4fc91)");
unit.assert_eq16(16'hE3AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1181 09633c7a-1420-4fe3-9808-354aeebb0cd8)");
unit.assert_eq16(16'hE3AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1181 d666b0ce-94fc-433e-a29d-5d288a0ee2c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1181 c0cb0b2a-1fc3-4038-9a4f-7ef08743723a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1181 564b646e-32cc-4c81-a6d7-62d2a5e1ce66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1181 ffbcf78a-f4ec-4d63-81b3-9d732287affd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1181 616ece6b-2369-41bf-922b-288e52b15d39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1181 848022a8-db7a-4930-87bb-c52e83b6d072)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1181 6708b466-0cf3-4d27-9ab8-3798e609b37f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h054B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1182)");
    end
end

unit.assert_eq16(16'hBC36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1182 6063ad4d-a732-44d8-b96a-9c299e9578b7)");
unit.assert_eq16(16'hC3F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1182 38f8da11-410f-4d73-aa2c-96a72a58b8dd)");
unit.assert_eq16(16'hC3F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1182 2ef382a9-067f-4002-be0c-0f4fc6cde64f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1182 77e45920-12c7-430f-b525-cfd6fbd7ca6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1182 d1627b5f-d1bf-44bb-a929-b79b1e5bb6b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1182 7d86206b-ada6-440b-9810-e0a891c734ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1182 76ba82ad-8483-4e0f-81e1-f8f6f64749a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1182 8d01b614-2416-47bd-9faa-899bf04ba5b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1182 369f544e-13ca-4c78-a387-1d6b09a61e81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA2AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4F19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1183)");
    end
end

unit.assert_eq16(16'hA2AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1183 7d034309-e78a-43ee-9d2a-4f342a42ac0a)");
unit.assert_eq16(16'hFD1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1183 e02d13c1-f748-4338-8abf-22628c0c0821)");
unit.assert_eq16(16'hFD1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1183 2ae571e0-c66c-47d2-b313-6d3439931730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1183 60835aff-72b9-497d-9d8a-135bd0ad759f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1183 6fddc958-7c72-49a8-82fc-855529c0acb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1183 f2595e3f-fb34-463e-af8e-35f279d2ccac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1183 523fd3df-cf3c-4cd0-b68b-4f016e3332ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1183 f74f7ba6-0102-4e23-81ed-18ba2e59d1db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1183 086a3c88-3d5e-4866-a23b-eae72f06613b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF96A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h736F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1184)");
    end
end

unit.assert_eq16(16'hF96A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1184 51717699-4d67-45e0-b784-7c18effd551e)");
unit.assert_eq16(16'h68BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1184 9bb82bb9-2731-48d7-aada-b40f1b63444e)");
unit.assert_eq16(16'h68BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1184 4ed8a8a6-62d2-477d-916f-3f1426f62a89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1184 aeb603dc-8974-4602-b1f9-7da4aba96e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1184 52351e8a-9c9f-4802-abc7-0c1e2387bc40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1184 e29cb6a7-a484-4585-848c-5eafc0d77785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1184 0959ebc8-3820-404a-b4f4-a7aeded92899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1184 3a27cd68-556e-41fb-ae73-fd686eb17807)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1184 edc491e1-e2c7-4e8b-8b2b-27f5246bfd17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD41D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB6EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAD0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1185)");
    end
end

unit.assert_eq16(16'hD41D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1185 d1132a2c-8c7a-4f54-9cf2-16c93ea3db1a)");
unit.assert_eq16(16'hB6EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1185 30d4ae3a-4c97-4610-8508-4a599c69d3fa)");
unit.assert_eq16(16'hB6EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1185 375b9259-7a38-43b8-ab01-b8e00d639831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1185 d62a8ad1-c4dc-43ee-852a-0af163f5879b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1185 a41efe19-7a64-4c96-b2c9-2c645bd93e28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1185 582142d4-576c-4061-8a40-070839dbe5db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1185 f582dd71-8da2-48b2-8933-a46756dd40ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1185 c78404e3-1c80-4f5e-a883-7223a2505fa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1185 e7c44072-a274-488a-a6a3-83c34e57c757)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB933;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC30D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1186)");
    end
end

unit.assert_eq16(16'hB933, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1186 211ed36d-f876-4db7-be6f-10f6102cfc8c)");
unit.assert_eq16(16'hC30D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1186 34045e0d-a4c6-4b23-988e-fd4ce4c43981)");
unit.assert_eq16(16'hC30D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1186 19169fc8-c021-4441-859f-ef218ed71cec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1186 cea6a486-8839-4e99-9a6b-33f606c9c072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1186 414f5f58-8091-4c23-8a49-b9c6f29f7985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1186 64ad13a7-2390-403f-bde3-e6f950d87623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1186 490ab3b5-b62f-4e18-9bc9-82574aabef51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1186 213f1ff8-f5d7-4ec3-a543-69bf1c02442f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1186 7b95405f-d142-4c44-ab06-31d486dfa6e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8202;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h929E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1187)");
    end
end

unit.assert_eq16(16'h8202, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1187 b5e4ede8-32ec-4f34-887e-402894ca204c)");
unit.assert_eq16(16'hDE84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1187 95508952-ad6e-4081-9867-016f2bdeba43)");
unit.assert_eq16(16'hDE84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1187 57c74e16-2f73-4d07-b6e8-6310a6623278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1187 474e81c1-95b2-4415-8d15-f87c1b2e032f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1187 c99bac20-a4a5-4090-aec6-eb92361c07d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1187 6e2b4042-7e7f-4a71-972e-3a731b7293b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1187 486a1ce3-0c12-405d-8997-871bc0f0ae8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1187 e491a707-8cd2-4903-b415-aab69063c521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1187 c61f04f2-1d9c-4a72-b21d-f0a2d8d7f91f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h065A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCFEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h79F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1188)");
    end
end

unit.assert_eq16(16'h065A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1188 c9826091-0e06-44dd-b9ff-3caaa4483855)");
unit.assert_eq16(16'hCFEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1188 35e638c9-ac50-4821-ba19-52b412e6da7b)");
unit.assert_eq16(16'hCFEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1188 35f4a66d-d681-41c7-8ea5-e4e6a1645bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1188 b103a706-299b-4ec0-ba8c-171f8b8f2ef2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1188 2bcaf737-7598-4c43-b72d-ff86c90e0129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1188 f8ffe40e-27bd-4422-8ff0-aa138f2d94b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1188 43f5bd02-3626-4ce2-8fc3-34c022e273ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1188 5d1547c9-4bb8-423f-a19d-dcbf913a325a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1188 d19ddb56-ce22-48de-a5c0-725873b37172)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2DC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE32A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1345;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1189)");
    end
end

unit.assert_eq16(16'h2DC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1189 f9d3df7b-e53b-4ec2-bc6f-f975222efeb2)");
unit.assert_eq16(16'hE32A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1189 816c557b-8378-4c63-b181-5e6b42c52ccc)");
unit.assert_eq16(16'hE32A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1189 f763b9b3-fa50-41eb-aa1c-ed2f0ad2375b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1189 8e335a19-855f-482c-be28-65507fae53fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1189 39811a19-af7c-4fc6-9c97-da1bc8470582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1189 43e100b9-0449-4093-93c5-9de130774255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1189 19d80b22-5b36-4307-923c-e930240f80d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1189 12e1f906-4e42-4dec-8e89-0c454f55356e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1189 842533e7-ee64-4480-83aa-6011c78ea7b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1653;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2120;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1190)");
    end
end

unit.assert_eq16(16'h1653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1190 53baf278-07b7-4054-96d3-23a1c6287473)");
unit.assert_eq16(16'h2120, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1190 9845e80b-6583-4416-a8d5-26fe340b5f6f)");
unit.assert_eq16(16'h2120, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1190 1135ec77-6995-48d9-b91f-0f8bfcdf553d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1190 bc24374d-9bf9-40c7-bcc4-1b6ee7f9da94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1190 c3583cf0-f457-4770-8593-3f26b62968ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1190 b923a265-eb1d-4fd2-804d-c417c6700bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1190 1a249e79-96a2-420b-9faa-75e9501602f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1190 000a36be-f3df-4a88-bc91-b7a717482c3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1190 3fe92a77-234a-4429-aaf4-0833bcc0672d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEE26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h18F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6E85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1191)");
    end
end

unit.assert_eq16(16'hEE26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1191 309da6b4-dff9-4e6c-8981-b83590e96f6a)");
unit.assert_eq16(16'h18F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1191 a96d247a-7a96-4452-9d8c-36b63267e512)");
unit.assert_eq16(16'h18F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1191 aa88a1c2-06ec-4677-8e8e-da751020aa1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1191 236d388b-3c9d-425e-af1d-6ecf60da3e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1191 99988ba1-422b-4955-bef5-41fe8e07f80f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1191 052c277b-4fd3-46fa-a9c6-b19216804746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1191 d7e7a1ac-825a-433c-972f-6a229591323d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1191 ca2c315b-5a09-4171-9c2b-5089b8c86d06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1191 3c187546-2f20-44dd-bf34-5fabee819cf7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1192)");
    end
end

unit.assert_eq16(16'hF5A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1192 3c7da223-94ef-4913-a053-8e733c73ca4c)");
unit.assert_eq16(16'h83B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1192 86cbe9ea-5ce9-4f90-8475-db0b950f5cc5)");
unit.assert_eq16(16'h83B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1192 78182b9f-4e30-4fd8-a497-1511a00355f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1192 b86c5f9b-8a9c-4488-8141-0f88569e3d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1192 1b7658b3-4bb3-419a-af4e-7e2cc7ca6817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1192 88a089e6-e874-4f12-b4d0-29ed60c8e296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1192 1511178c-2bac-43a1-959c-6df7c2981ca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1192 d4dd6833-07f7-4c00-8b05-fac4df8ca3a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1192 86d266bf-e382-4577-b1e6-5d450cac6f66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7835;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h421E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1193)");
    end
end

unit.assert_eq16(16'h7835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1193 de79b5d6-7c38-48b6-a360-fb2f78658dd7)");
unit.assert_eq16(16'h421E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1193 96b3735d-9f49-4511-ac37-709325a33557)");
unit.assert_eq16(16'h421E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1193 43bd4bff-58cc-4d66-8cef-e1bbb4b5a88c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1193 9f6db235-20a2-4446-a5a7-de92af1315c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1193 3238973b-2f98-4b0c-a9de-bcc7354689d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1193 c630c321-74a0-4b0e-b1e7-b5f6132cfbc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1193 ac55fe80-71b5-47d1-b885-9868392e1cd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1193 a206f03a-f65e-46cd-bf83-aadbf51bd7ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1193 15885730-7103-4f87-8539-aa5d7fd1044f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD7CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3D23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB41B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1194)");
    end
end

unit.assert_eq16(16'hD7CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1194 603344fa-c415-49d3-b4b3-4e8663ef8c85)");
unit.assert_eq16(16'h3D23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1194 2c8ef3e6-e4fb-4b32-8e8f-cf58b2566cb6)");
unit.assert_eq16(16'h3D23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1194 cbd01bc0-4c5b-404a-abe5-ef11a795077b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1194 3f5daaf8-7c75-462c-9d2a-89de2b70a954)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1194 a0259d5e-736e-4611-9719-7661290735f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1194 60962b2b-fea7-4a09-bd96-198559c9958e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1194 418e94c9-4625-447b-bd1e-d0c5b33bf2e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1194 d2965154-2e4f-4b52-94c6-351be1c550c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1194 fe4b2a2a-dd78-46d6-8ec1-3304ddd8191f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF404;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4785;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1195)");
    end
end

unit.assert_eq16(16'hF404, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1195 243f5cdf-cdfb-422e-a338-a9673f772600)");
unit.assert_eq16(16'h4785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1195 132d4613-016a-4be4-90b1-4ae60199c7f8)");
unit.assert_eq16(16'h4785, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1195 9fd661a0-6a49-4201-a456-015996a9bace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1195 3c4ced0d-0276-4e06-8eb9-85a3f59b399b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1195 db13f878-b886-4b41-86e4-c26e5c7cc0bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1195 b0adb2c5-78e3-4294-9284-c14d02880e30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1195 da1966a3-3ced-4ff1-ba15-c47d78066bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1195 45a47cc4-1ccd-4d25-b16a-78c73ef49b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1195 49b881a0-1fd3-4ab5-940a-8dcd0b221fab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF51E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1787;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1196)");
    end
end

unit.assert_eq16(16'h01F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1196 75879a45-0607-4c38-9b54-deeb44647c5b)");
unit.assert_eq16(16'hF51E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1196 076b5af1-4166-45a7-85fb-defe73a7b9e3)");
unit.assert_eq16(16'hF51E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1196 da2133f5-0109-4cb5-b67a-25edc7b96f89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1196 0834e6dc-1120-47be-80f0-5d331876bd13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1196 89d1e9a1-256b-45c9-abab-7b89f9c7c3cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1196 d73c1579-9a1e-4eb7-924a-d968c7cf8c32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1196 aeb29971-5192-4c0f-9437-1e736c7b1fd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1196 b60ea624-93a6-4971-9ef0-b5b6fd7507ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1196 ef2ed889-d02a-406e-9d32-0294bd4622ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF050;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7E97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1197)");
    end
end

unit.assert_eq16(16'hF050, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1197 783a25e0-3546-494f-8083-4324552c01e2)");
unit.assert_eq16(16'h6F27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1197 1c51ed90-a49a-47fc-9e6e-44bfdf3c0253)");
unit.assert_eq16(16'h6F27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1197 b09dc924-9165-44a8-9fe8-0e7364055a7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1197 01fdc2eb-109d-46ed-bc42-52886183d644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1197 1f946461-7fcd-4bf6-a8c5-4dbcf002c0a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1197 19a3cebd-5dd0-49d9-bcf6-cca0f86b184b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1197 9a03537b-a1cc-4e4a-a6aa-4f613d754a4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1197 13ef5740-e5fb-4d6f-92bb-cd83203aba3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1197 eb22abf6-dd52-4438-9302-3fa1dd38c37d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h74F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB4C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7C7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1198)");
    end
end

unit.assert_eq16(16'h74F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1198 7deb33b0-c092-4d4d-9da0-4eb623863769)");
unit.assert_eq16(16'hB4C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1198 bc2f8c2a-408c-4551-9993-baee7ce08ec7)");
unit.assert_eq16(16'hB4C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1198 9e7bc706-1a56-4937-a80e-1828ad22d427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1198 401a4d2d-587b-4acc-a0d3-ceb4d0eb8bd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1198 b9be3814-77fe-4bc3-9f06-2ef1b596f3de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1198 3ffa0248-5c49-4cbd-8760-1e281b13168e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1198 7284f3b6-7cec-4265-b590-81a0130cc2c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1198 e9d02eab-4687-4a75-82a8-34beaf039992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1198 226621ad-e034-46a4-b627-7e97f98cceef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4437;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA1BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1199)");
    end
end

unit.assert_eq16(16'h71B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1199 b8b7c376-7e16-480d-8037-759ae4fa997b)");
unit.assert_eq16(16'h4437, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1199 445f5de6-4a2f-4d03-8ca5-9184a4c452e6)");
unit.assert_eq16(16'h4437, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1199 99ba26c9-35fb-4775-a2f6-14bc4d8ae3c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1199 f3c99e8c-5f3b-449b-b1cc-ed094ce910f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1199 61556a1b-1db4-49cb-a5e5-e4867bedb3a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1199 20c21971-9bfe-45ff-80ba-5dcca4cc452d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1199 4904e026-ae6b-47c5-a6a0-9aa73906b6c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1199 bf2ec5cf-3bbe-480c-adc4-6865488c07d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1199 a85015dd-2b1f-4bf7-9913-ac952fd1c54b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h79DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB42E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCF67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1200)");
    end
end

unit.assert_eq16(16'h79DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1200 95121992-be32-4a9f-8091-6aead5dd252d)");
unit.assert_eq16(16'hB42E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1200 5a910d7f-f874-4993-ae95-a64a4184b91c)");
unit.assert_eq16(16'hB42E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1200 428dc831-8b29-4ddb-86d7-a4fa31db4752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1200 ac8935bf-0be0-4c80-a029-1f9e60203c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1200 df977ad7-eaec-4e90-b792-9bb5703b67d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1200 f3d42e39-e9b8-4335-9037-a0c367d9c36b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1200 01436a1a-06fa-47ff-9a51-f41e6945273a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1200 f799160d-b8bb-478b-b860-0415131b35ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1200 d7475bba-a6ac-4714-a67f-ab07c0d368d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE757;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD3B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1201)");
    end
end

unit.assert_eq16(16'hA0EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1201 dc3fa57f-e586-4685-a7b0-771fb994d2ae)");
unit.assert_eq16(16'hE757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1201 a37d67fc-1e67-4877-b537-24ede785bcf0)");
unit.assert_eq16(16'hE757, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1201 f7449146-6bde-400e-90ac-f44e18099b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1201 7b53d238-e3ea-4348-bd6b-2f702c58f5e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1201 e4bdd388-f96d-4046-bf68-3f400ee18119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1201 e3f37d87-76df-4568-87b1-25a20006c1ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1201 ac60a71a-5aab-4959-9f18-18080cbfbe85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1201 f236d895-eb03-49bd-b37b-31ddd761a4e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1201 06c18274-6ea9-4aef-b6ec-9908ee770bfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h27BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC83B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1202)");
    end
end

unit.assert_eq16(16'h27BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1202 02f2f721-775f-4d60-aedc-b02728ecccc6)");
unit.assert_eq16(16'hC83B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1202 ff17de23-7d57-4088-9517-320b3dfe9c6a)");
unit.assert_eq16(16'hC83B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1202 805f5c69-a0c4-4af9-922e-f443e07a389f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1202 362d1a48-f7b9-42cc-8c9e-03575bf503ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1202 7729ca9e-5279-4039-9330-8e902bca280f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1202 6e24b760-63fc-4ced-a658-736d4375b5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1202 44d68a34-62ad-4759-8786-3d6ed0bd537c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1202 5c15ba65-b476-40d6-9adc-b57ec54d118a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1202 49c8381a-3407-44cb-b278-c4aa62f9e1dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA17A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7D94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1203)");
    end
end

unit.assert_eq16(16'hA17A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1203 236c8c3f-c7aa-43a1-84d2-c9fd8064f916)");
unit.assert_eq16(16'h0E5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1203 db8fb87c-32f8-4381-affa-c15b6886476f)");
unit.assert_eq16(16'h0E5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1203 fe128817-8bc5-451c-89f6-216fc47464a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1203 71cafe6a-3950-4f4e-87ef-6b6b1920dad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1203 60c2d319-ceaa-4446-94e6-c802973181a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1203 df9d6d1b-73d8-410f-9174-b682d364034d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1203 599811c5-8aed-4269-a562-c763c54710a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1203 4a09ba08-3244-479b-99b6-8e621076d3b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1203 303d0433-857f-400a-be7b-ac407eb45ddf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h94CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE4D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1204)");
    end
end

unit.assert_eq16(16'h94CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1204 d4a791ea-169d-492f-95cc-701a722b7a22)");
unit.assert_eq16(16'h5F00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1204 360e3092-7176-403e-a143-f1cfb05847b4)");
unit.assert_eq16(16'h5F00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1204 d0c2cef2-7cce-439a-8b8a-cda87c1d38c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1204 a2e4dec2-7e4a-48ea-8556-4b2457d2bf0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1204 16b3dc61-de46-4755-bdec-b4dcdd8dcb45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1204 8ca43e88-3e1e-43bc-a3c1-4a3ae7449d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1204 49a0f4d8-d6e1-4651-a182-9dd67bdd5c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1204 2ffc7fd0-638f-4d0b-95ca-cc85421c29b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1204 1b91233f-f610-4db7-ac09-ac299523f850)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD98D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h58D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2DBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1205)");
    end
end

unit.assert_eq16(16'hD98D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1205 e46a11a2-1376-4a9f-847d-4a85b6d24b22)");
unit.assert_eq16(16'h58D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1205 d614eebc-7482-4784-b5ce-3dde5dc931dd)");
unit.assert_eq16(16'h58D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1205 b65c70a2-55da-4adb-bcc8-32d9ca3120ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1205 ed504384-d715-4782-bb27-14dad80d26f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1205 d26692f1-bc20-4289-be0c-f27532e3dd03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1205 c08ee170-9e65-4627-a45f-bb23a6e5762d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1205 e3c15124-58bf-43c6-bc49-a285e702e760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1205 6a6b9167-19b8-4d9a-9f69-0307b1ea5466)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1205 48f398ee-1bcd-41c5-bc05-9b98dd695117)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h971F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h63C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1206)");
    end
end

unit.assert_eq16(16'h971F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1206 8dd4d3e6-1b21-4b00-a6d1-733eed3acd0d)");
unit.assert_eq16(16'h20F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1206 a258ae92-de02-4c32-ae03-26b76999440a)");
unit.assert_eq16(16'h20F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1206 4744f4ee-00fc-4f8a-8a23-df3f00ead7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1206 7e6c62bd-a234-479f-ac12-1a06c7890709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1206 2202a019-285b-4d84-90ca-f847527af054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1206 bccc27be-6bc9-4067-bd22-d288e0f04970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1206 34a17b31-d33a-43ed-a9f0-529528dd9623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1206 3c343738-d808-4f16-8a39-4058c468f6d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1206 f8364310-9b9c-4451-bee2-609392388477)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF69E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1207)");
    end
end

unit.assert_eq16(16'hF5CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1207 b843bbb5-b02e-4baf-9a1b-91de3bbee7de)");
unit.assert_eq16(16'h6D70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1207 0c739b47-7e03-4515-a5a7-96a545b8b8a5)");
unit.assert_eq16(16'h6D70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1207 a313f60f-cf79-41eb-9dd9-7b44c50ce22e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1207 a6130d4c-e588-4025-b927-f6f3a767e61e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1207 f61c8278-d5dd-4c35-94bc-955b97968516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1207 1248f1b1-7b52-4c16-83f0-bfb2331d2eab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1207 46d3b9e0-74fe-4ea7-8862-677ffd40e841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1207 fc0b2c0b-945c-4c08-85d8-2f7b814523ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1207 3925bfe2-38d4-4ec7-bf2c-6682d78bb3f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD6EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEB1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCA09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1208)");
    end
end

unit.assert_eq16(16'hD6EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1208 3d03d53d-0582-4e1e-b1c5-783e16905b75)");
unit.assert_eq16(16'hEB1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1208 522a54d0-a296-44ba-8ea7-c4deddf83486)");
unit.assert_eq16(16'hEB1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1208 8c745304-c0db-42f1-b6e2-51e457080674)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1208 8df43191-6af0-4df3-a2e6-47adcdb1152b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1208 71ad9d6b-e55e-432d-b833-a0b9ba0989cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1208 9b98c921-6874-4796-abe7-c8d326e41266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1208 cb684a6c-3f91-4135-b65f-8bc2dbc209bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1208 a7454c34-b7e2-4aad-be98-3c078134bd62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1208 13ba8fd3-9d9f-4d3f-add9-be143ac0c102)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2461;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h47E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1209)");
    end
end

unit.assert_eq16(16'h2461, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1209 b84cdfcb-db7b-4906-9178-eacb37561f65)");
unit.assert_eq16(16'h6E6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1209 131dda9f-6bcb-4289-a5ed-8ba8c09ae0a5)");
unit.assert_eq16(16'h6E6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1209 78516857-f99d-4e9a-9e9d-ec2d4e215579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1209 cc1d311e-37e1-47ca-985a-f9d4fd489129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1209 834b2a6e-4baf-47e9-8120-fe74a3832107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1209 00ae58da-dcb3-4c48-96b8-519a9af284be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1209 846c14fa-8b7e-4cca-a4f1-08c6f0938a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1209 721283d2-ad7d-4917-adee-3d4a9bf03032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1209 b1105d30-5195-4337-a7b6-9b187c8a8e90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB881;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2291;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h45CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1210)");
    end
end

unit.assert_eq16(16'hB881, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1210 47d61229-3ea0-4fb2-941c-5e927cdc638b)");
unit.assert_eq16(16'h2291, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1210 da4adf31-fdbd-4bde-9c75-13a3169afa11)");
unit.assert_eq16(16'h2291, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1210 1b91f490-9cd2-4e35-a5bd-9a9d43a627b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1210 93bb3672-4186-49cb-9dfe-100b498409db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1210 cf7fe352-705a-4bce-9a22-7f73d3f245e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1210 c0d245fb-1566-4c5c-a347-c8d9edc81d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1210 601e516b-371f-4410-b56f-b10f6ba96ee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1210 7cf8dd5a-a93b-415b-a7fb-99f47d9862f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1210 852cad88-3ddb-42e7-8336-8134f1f7c7ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h48D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB268;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6299;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1211)");
    end
end

unit.assert_eq16(16'h48D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1211 9a0fa79b-3539-467c-8dd9-c0387a25fdb1)");
unit.assert_eq16(16'hB268, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1211 c55ba9cc-7fa4-4ab3-90b0-adee950327a8)");
unit.assert_eq16(16'hB268, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1211 802061be-f845-4345-925b-177c081b5238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1211 a67ac1b1-a707-45e4-861a-4d9f1d009c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1211 07f9066a-4f9c-451f-98e2-69c8939c6f85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1211 21d14ded-5b48-4ce3-8823-46c7b0d36979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1211 e00eab04-2d73-4a55-822c-ce1f5989aab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1211 925a2fd1-bae2-4848-8faf-1f9209d13588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1211 1f086710-d169-4932-8d22-445d403a24b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1680;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7393;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE394;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1212)");
    end
end

unit.assert_eq16(16'h1680, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1212 1a919d21-55c1-49be-a446-87c575c87bcd)");
unit.assert_eq16(16'h7393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1212 90afdea5-e549-4ab0-a9d3-2dd5c8df7a2d)");
unit.assert_eq16(16'h7393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1212 cbdd300a-6e05-4a3a-b433-c8f4bb76c011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1212 c6779ff8-9e99-450d-ae67-4463456815c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1212 3a3619d0-b433-4bae-a243-ccdae8c756f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1212 bd20e559-bb8c-4a9b-963c-535aab9a86d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1212 4d7e670a-a625-47c6-8e39-f59e5db00f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1212 a9b6b96e-9e83-44a0-bef9-33408828d896)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1212 cbb6fd19-1682-4334-81c6-1fcf40680843)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB458;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7904;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5906;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1213)");
    end
end

unit.assert_eq16(16'hB458, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1213 facdd0a7-a907-4173-a4ad-43fc46dde0de)");
unit.assert_eq16(16'h7904, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1213 95f47e7c-d66e-40f8-b611-e80e36c260f7)");
unit.assert_eq16(16'h7904, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1213 2c4269c9-f677-4e75-9721-be722e0465cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1213 0a26ae08-5123-49f5-ac75-63fe49759ffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1213 c28d1bc7-101f-42f3-a4b6-39d9261cee4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1213 09e6700b-2886-4fc5-9b78-c2a2934b277d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1213 e42e3764-b89c-4fcf-bbde-4374a233a90c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1213 7f9365b1-9466-4186-a009-d5bb8405e340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1213 fd675a17-6e9a-4b67-9b2b-028212b2e0f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9B0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3602;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1214)");
    end
end

unit.assert_eq16(16'h9B0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1214 b61cd55c-7bf9-4de6-bb0f-24ac154f6266)");
unit.assert_eq16(16'hDD54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1214 bfff4454-6e48-4134-b36a-d428a14e9ba9)");
unit.assert_eq16(16'hDD54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1214 b573d354-fc85-452d-80f6-79bd8c64ae9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1214 df21171f-6944-43da-b8ce-54e318370c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1214 3031d7dd-672e-4f9a-b50c-52cb06c20281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1214 f0d73bb6-091f-4bb0-8cf2-e5f57242a5a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1214 af4c5697-c90b-4e43-ba85-d4c6b7b4fc48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1214 a4767a0a-be04-43ce-93a4-37f71f0ca361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1214 3bd8f99b-929e-4509-85b2-ed778e905730)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD1A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h266A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1215)");
    end
end

unit.assert_eq16(16'hD1A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1215 89fe470e-1d5e-42c8-984e-8f5055df80d0)");
unit.assert_eq16(16'hCF6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1215 419e58e9-4724-4aae-b93a-4c3ae2956d68)");
unit.assert_eq16(16'hCF6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1215 1bf82675-e734-4b66-add6-c574db920565)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1215 219324a2-035f-4e35-8ac6-4cd0ac26d3eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1215 10dc430b-5290-42ad-b8b2-3cdf5e18d5d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1215 4d59fac7-0cc3-4edc-ac5b-b50b38a9d310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1215 6de877ae-5b66-4069-8a9b-310abc7b3236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1215 4d25459e-d3c4-4ab2-91e8-5ed5b847e7d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1215 eda10d54-0fd8-4a33-9113-2a40b8983c41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h97B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7CF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1216)");
    end
end

unit.assert_eq16(16'h97B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1216 769d499b-6d57-443d-8914-5aa7bab09a3c)");
unit.assert_eq16(16'h7BC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1216 d79cb092-5dd6-431a-80db-55b107c2af2d)");
unit.assert_eq16(16'h7BC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1216 b8f82fcb-e57b-4331-afb6-3c3e48aacd81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1216 f4c0369e-8ad7-4b64-88ec-407a258de105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1216 61677696-b878-4726-a1fc-5aa0d9585cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1216 a71c1cc3-4bee-484d-a88a-1de8fe947a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1216 9fd268aa-4e59-48db-b401-2476e008a99d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1216 d4009776-e342-4b9c-9719-d6e077417e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1216 2f411746-4d9d-4fe2-8c5d-8a2a45587f1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2AD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE5B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1217)");
    end
end

unit.assert_eq16(16'h2AD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1217 d6c66095-3e78-4695-b257-e2855d40c836)");
unit.assert_eq16(16'hE5B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1217 7a5d2376-9964-467b-8227-ca6e4971696f)");
unit.assert_eq16(16'hE5B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1217 fc6d55cb-dbab-4779-bb00-b1b4009908cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1217 2ae4a0ea-2130-48ac-ae16-449b4a86f566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1217 5ec37a02-63b5-42d7-9813-515206179685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1217 275f6675-0682-4221-8279-70478d7eb6da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1217 27fd2322-ad62-4c0d-8d24-1a50262ce052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1217 1b17f950-306f-4aa7-ba1c-d898e0d013c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1217 6dc0a9ff-5043-45f6-b3ac-e8afa7806ba3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2130;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB90E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1218)");
    end
end

unit.assert_eq16(16'hEDB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1218 b67f8c55-2587-4b46-a2b0-cfad31edd153)");
unit.assert_eq16(16'h2130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1218 ba180d45-35e1-4953-9e58-f888a7d89d9b)");
unit.assert_eq16(16'h2130, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1218 69ddce4a-6d72-441f-8f3d-35ff780538d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1218 b433d1da-e5cf-4051-9783-72b5417ce25f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1218 b14db90d-57ca-4d29-80fc-c056b906cd17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1218 e600b601-75ae-4c86-9f0d-9d141fc53efd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1218 0430275d-2ca5-4580-8528-d50420d8af4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1218 c5b53c18-0ffc-452d-a531-badfe7c65da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1218 6314792c-0083-44f2-a82c-5c8cdc86683b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2708;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8115;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF719;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1219)");
    end
end

unit.assert_eq16(16'h2708, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1219 a0cdd903-09f9-4433-ad0b-da89beffa245)");
unit.assert_eq16(16'h8115, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1219 700a117b-c0ff-4963-a7df-0fc624553376)");
unit.assert_eq16(16'h8115, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1219 b0b7bb62-5504-4233-86b3-59b49123dffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1219 15aa3611-61b9-496b-815b-0714ac9bf348)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1219 db71b3a6-00d9-4d82-89d1-e00432343728)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1219 1b3a46e8-d160-4879-986f-8352d27953f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1219 c2a9ef62-316b-4822-a343-f1aa1c81eb9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1219 e251f4d8-ffc1-4399-bcc2-4174bf8471e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1219 59f2e8ff-993b-4b0d-99f9-4dac2d5e1d94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h583C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2210;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1220)");
    end
end

unit.assert_eq16(16'h7E82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1220 69352516-80fe-4d57-bb75-a8c6a37d5b06)");
unit.assert_eq16(16'h583C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1220 fb53492b-df59-4113-ad9f-03f96347b28c)");
unit.assert_eq16(16'h583C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1220 292e0f57-3b1b-49d0-83db-8eb44090c86d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1220 13a20e6e-23bd-4277-9ac9-951335d2c7b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1220 a7a4cfca-6ad1-458c-b377-807d0ed90077)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1220 59d5c270-b69f-4c0d-b835-b6271ffa3c76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1220 1cfaf64f-935b-434b-8bf7-097553281ea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1220 507f6d64-f6e5-48c7-bcd4-c6a6d70300cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1220 65c80dda-d5b4-49cb-8b24-513603151136)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h57ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9913;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1221)");
    end
end

unit.assert_eq16(16'h57ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1221 03c7dc99-6f13-49d5-ad7a-261186cb2443)");
unit.assert_eq16(16'h0E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1221 71c6c9a8-4b83-4f1e-9329-26302bc9160f)");
unit.assert_eq16(16'h0E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1221 5ac1c3d9-bf25-42e0-a6d8-c20f92bfcc40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1221 74504303-1851-4358-b011-561574a6ba7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1221 b09bbea0-81a9-4fbc-8cfa-22da21269d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1221 6a2ef782-9f3f-43db-8b8c-7fd0f7def30c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1221 dc6e69db-639b-4c48-85ed-4e756f573d06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1221 9d648b40-9efb-4828-84e9-2dbb2baf8629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1221 23cd5686-e263-48e8-9c9e-50ae1e25a457)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5C27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD60F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1222)");
    end
end

unit.assert_eq16(16'h5C27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1222 1ebe14f2-33b0-4fbf-842d-b8da6adbb2e2)");
unit.assert_eq16(16'hCD1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1222 be89c0e9-cee2-46ec-8b16-8def02de04c6)");
unit.assert_eq16(16'hCD1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1222 fc72c684-f665-4452-b3db-d1a0c1746148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1222 b1a04d1c-4ff5-4bcd-8d9f-f0b8bb02a0b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1222 b98a6a7e-76b5-487e-a1a2-72563cbb8771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1222 ea3521d7-a6c4-4bc5-b2e5-eaefdd9482b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1222 6e8a6e69-9191-49d2-822f-e3971af4a14e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1222 7bf8b708-632d-476d-b6b9-0be90e70a764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1222 a295903b-1485-4980-892c-75fe4ae61d6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1223)");
    end
end

unit.assert_eq16(16'h8C07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1223 21670615-0a9c-4947-84d9-d915dc525ef8)");
unit.assert_eq16(16'hF4EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1223 3d6663e3-5710-476e-9279-f993910157ff)");
unit.assert_eq16(16'hF4EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1223 ad5e6c1d-d93b-4c0f-97c2-cd612f95a643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1223 9f72539c-5388-4dcd-bbd4-c20728fa96a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1223 e2b6a01c-c19a-4d55-b11c-00b0a2a0077f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1223 54463926-78a8-4ff3-8d38-177b2586bd62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1223 5f5f55b7-a52c-46fe-87ab-dfdb0f9bae0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1223 9ad6e284-0588-4b5f-a3ac-f3cdba284cda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1223 4e45299c-95b7-4135-89ae-7b87b846eddf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1DE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1224)");
    end
end

unit.assert_eq16(16'h6C3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1224 ef82d014-17cd-4ba8-88ee-9bb0b8bc106a)");
unit.assert_eq16(16'h7F0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1224 099d89bf-2d90-429c-815a-9cbfd1532fe4)");
unit.assert_eq16(16'h7F0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1224 f05b8c47-19eb-40f0-a06d-7eb6acbe427f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1224 6803ab8d-6df5-448f-8ac0-0d751102aaa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1224 fcc9d06c-5ea2-4569-b158-f7eccce4f741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1224 4313580e-5a69-451a-8fe2-ee8b2f4f3f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1224 626a2281-62fb-4f29-b46b-cf0a45add481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1224 142ff0c7-fa2c-4432-b56f-95c595688abf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1224 9773eadd-916a-4dbe-93da-b0bb3e0d365f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB73B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h62E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1225)");
    end
end

unit.assert_eq16(16'hB73B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1225 b886ccf6-2c6c-4f6c-adb9-e0b3fb570b5a)");
unit.assert_eq16(16'h61FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1225 9d23ccda-a209-45c5-b0d6-0ac36fcb2c60)");
unit.assert_eq16(16'h61FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1225 d16c9651-9763-401c-984b-9725efcca128)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1225 bc682934-c6d4-4e60-bb3f-9e2f78bcb0c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1225 f2ffbe43-8402-48bc-bf7c-48bb57ac7128)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1225 b7da493a-3e4a-4ec6-8290-f75095c484bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1225 d3e1b0c5-e024-4cf9-973c-ba405032a3ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1225 f9d648de-1ae5-4f82-82a6-ef640f1eb537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1225 fea02787-ad8d-4632-b897-f56c7bd59ea2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBAA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1226)");
    end
end

unit.assert_eq16(16'hBA1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1226 8fea54d7-d96a-4f0b-859e-e387451e0275)");
unit.assert_eq16(16'h2F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1226 e1ca98c7-66a7-462e-9a13-dc9858dab6b1)");
unit.assert_eq16(16'h2F88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1226 de52c283-8b5d-464d-864f-ddefb96958b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1226 109513ff-8a51-4a0f-98f9-ae1599995e49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1226 938621c8-5269-4b02-8bdf-86e5ef1ec619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1226 bd3d3b4a-4bf4-4830-a6c4-0bd1544ba584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1226 0a809851-e863-4927-b41b-b143f4ee3c8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1226 1c61952f-5ac6-4bfd-85e1-308aaf30ce64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1226 b7ef2adb-f43f-45dd-90fc-f48044fd218c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1675;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1227)");
    end
end

unit.assert_eq16(16'h1675, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1227 08ac1f24-9487-45ba-879a-a46f4be90e14)");
unit.assert_eq16(16'h20D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1227 e5b9ce67-83e6-4f7a-9d04-22edb1dc597e)");
unit.assert_eq16(16'h20D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1227 a165250d-a213-4d3f-ad04-d55f176e3595)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1227 796a3cad-40ce-4bc9-8fd5-430cc291bf7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1227 b2a14342-8453-4a38-9b57-ca014dc93c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1227 c344a927-1477-4700-b2c1-326143b6e3fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1227 540a7161-e115-4784-9aa8-f68afc5315ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1227 44d09823-3f6c-4b11-8dc6-4d6fb4ad22ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1227 4558669e-fdad-4351-982c-a468ed75d7bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB22C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h63D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1724;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1228)");
    end
end

unit.assert_eq16(16'hB22C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1228 80016ddf-7ac0-4b95-a4a9-9921f46798fc)");
unit.assert_eq16(16'h63D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1228 a2531104-d068-4a9f-b590-f355598bb30f)");
unit.assert_eq16(16'h63D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1228 b219729a-b82b-4171-9bd2-f7f3899fd624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1228 c78cce65-1f81-4300-9b35-dda52543b1c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1228 568bfd34-47a6-4505-b6a9-55dffed964d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1228 9384dc8c-a057-4b4f-9365-06a205487c1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1228 9f4aaa2a-a2b0-4cf5-b9a3-2f734870dd89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1228 b0d2d379-b8b2-4f16-9f4e-7c326e67a7da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1228 7c10b9a8-6ec5-4e66-b642-d7bc14f2b72f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE968;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4018;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD748;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1229)");
    end
end

unit.assert_eq16(16'hE968, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1229 e027efe0-5ebf-4c7b-98f5-2f7eb5742568)");
unit.assert_eq16(16'h4018, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1229 cb843c93-ad0c-4418-9781-c7b25efdb602)");
unit.assert_eq16(16'h4018, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1229 ee35279b-523a-47d8-9785-72849038197d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1229 bd8576c1-8f98-499c-90f3-7aefd424a5fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1229 eb415131-b660-4e81-991c-839c6bdf7e5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1229 3dc1c420-bfec-459c-9796-62f6051a6905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1229 ad030a90-c799-456e-b7eb-b50ab71eb878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1229 d5db63f2-8b8e-4c6e-8e46-cef381b6ea5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1229 a13ba03d-460c-4b72-878d-1ede4b80352d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4ECD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hED98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFBB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1230)");
    end
end

unit.assert_eq16(16'h4ECD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1230 9f90ff70-beb6-4e7b-b571-2c268051826d)");
unit.assert_eq16(16'hED98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1230 8f2617d8-bc66-4c06-9f5f-3edcdfe6863c)");
unit.assert_eq16(16'hED98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1230 645746d2-f980-4546-8d5d-40ec3cd51f94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1230 ae5dc1e9-010c-4de2-89e7-6fd513b7af96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1230 d49125a0-4ff1-43fc-a98e-3a63a6321a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1230 21578718-808c-4667-8347-536210e4f935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1230 3c3e5a13-1148-4dfe-85bc-9078628e100e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1230 8ac48eb3-2091-45d4-b092-7f7ee429969c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1230 4506cb44-48b9-4476-a3a6-5d5afbff5fd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA897;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h218B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h67D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1231)");
    end
end

unit.assert_eq16(16'hA897, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1231 9aedb741-9c35-4bab-87ac-96d03366e4f6)");
unit.assert_eq16(16'h218B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1231 84ab4e1e-a40e-4320-832b-1c66675c0727)");
unit.assert_eq16(16'h218B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1231 7e4db7ad-bb89-4ef5-aa39-5a651da6653a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1231 c3c0dc57-2687-4883-be76-22b197b594ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1231 a495fa1b-7c5f-4758-a7d6-80399db31ac6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1231 4cc61e61-a32f-4be8-8373-adc588c3c051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1231 cd80699e-f140-4dd4-a2b4-eb45465e5e01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1231 58c9b439-4dc8-4217-a07e-180f965febee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1231 dceaed39-1ecf-4d1b-81df-9339d70888dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7485;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8738;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h96BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1232)");
    end
end

unit.assert_eq16(16'h7485, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1232 0b2ce7d5-f8c0-46d7-a78a-6613b5ef0b0e)");
unit.assert_eq16(16'h8738, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1232 0c218fdc-a9a4-4dcc-8a72-745bdd73b59b)");
unit.assert_eq16(16'h8738, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1232 c33411d4-6511-4cf6-b88d-8a9e929ef48a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1232 5d6e7d3d-c3a0-4bdf-8a04-116241c721f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1232 cf5ad0e5-de06-45bc-bea1-2f3a2aa55f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1232 691be18b-26cd-4110-975e-9fbfab691193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1232 7fc91e0a-1233-4517-94db-419c1a056d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1232 46cf2122-0dd9-41f1-b6c5-a32d6b34b433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1232 bb2e84d7-9789-4fb1-9e01-1a727d9db89a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h40F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1233)");
    end
end

unit.assert_eq16(16'h7E6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1233 cea90a77-1dce-48d0-9f1f-e015f4e99682)");
unit.assert_eq16(16'hAF6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1233 1629832e-9362-4314-b764-145431896a29)");
unit.assert_eq16(16'hAF6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1233 ffeeb25d-1294-43b8-bfc8-3c0dfcdb4971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1233 ba6d3a38-87c6-43fd-a412-d1cec36af5e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1233 411c53c6-847e-4de0-9b1c-b968d4b5be7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1233 d00aca31-0563-4295-960a-9dcbb5fd4260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1233 e6c3d2a6-0700-49a7-a53d-320eda8160a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1233 dd55f87e-992d-4c12-a9dc-b70e1ef13fd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1233 ce4be7ee-4ca0-4cb6-b92f-484cb9f3fbef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAC70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6273;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1234)");
    end
end

unit.assert_eq16(16'hAC70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1234 36c4e64b-4f77-43e2-bf5a-72c86d281e0f)");
unit.assert_eq16(16'h6273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1234 7dcd561d-9319-41ea-ad80-49c52b0ac245)");
unit.assert_eq16(16'h6273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1234 b27e41c4-872c-4e3a-b41d-2bbdba6ec839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1234 1648e63d-203e-40a3-8c16-cb4f8b092b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1234 880e5e99-e9df-472d-94da-016ab7ff7869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1234 8ce95889-61c1-4cc7-99ed-2fcd8cc4b38b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1234 c99af55f-37f1-4884-a1dc-ed1cc0999b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1234 2248d111-c1ab-4faa-8d25-b0ff8ac4c051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1234 623b171e-6130-4035-81b0-0353eb51f207)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3E71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD13D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1235)");
    end
end

unit.assert_eq16(16'h3F6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1235 276f4b5d-02bb-49e9-bedd-fdfeabcc4e93)");
unit.assert_eq16(16'h3E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1235 8c003953-e591-4253-bbbf-0f80846c22f4)");
unit.assert_eq16(16'h3E71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1235 7fa281a9-4651-4f41-a80c-5bef768e490c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1235 99e2c048-72aa-496c-9e1b-983baf299964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1235 68977007-999e-4ac9-9905-4fe5e31ccec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1235 e7f71967-bb5e-4e9f-8c96-7dccff362369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1235 76c2c587-6196-45dc-97eb-5f88d88e9302)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1235 4633aa42-31c9-4bdc-96f3-6be1338d1cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1235 50e2908a-97b2-409e-bb74-1cc6ae6bdd57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE0D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB0FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC37C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1236)");
    end
end

unit.assert_eq16(16'hE0D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1236 a2a46f85-4059-4355-9ed9-1d0620d16840)");
unit.assert_eq16(16'hB0FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1236 66f3b8ff-e72d-4945-9dbc-7102e6fa7f8c)");
unit.assert_eq16(16'hB0FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1236 7c5cfac9-296c-4a3a-bec0-6f2273ba131f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1236 6a5e76d2-4ac4-4f8e-b804-139f64973fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1236 630a7395-4f0c-482d-b38e-f8023cf9a0e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1236 3742c874-6913-45e2-961b-5e08411c613c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1236 7fa8674a-aa93-4a4c-8329-f89be74abb27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1236 5afe9335-c6e4-4654-a49a-4ccff5665f54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1236 2fa857fb-4a15-40c9-980e-5247cdf5b9a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB796;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDDAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h673D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1237)");
    end
end

unit.assert_eq16(16'hB796, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1237 7816e692-c833-4094-9749-3ba16ce7538b)");
unit.assert_eq16(16'hDDAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1237 efe5d97a-569d-4d0e-bed9-5e143c1eef3a)");
unit.assert_eq16(16'hDDAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1237 30eec82d-a80c-4684-ae04-07d18d6ddf95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1237 7ff467d7-c73c-4895-a0af-d0f000f40acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1237 c8c10b67-93f0-4bef-a01e-f6d31ce82fe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1237 aef9bf77-1a39-4c97-b079-48db78104c91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1237 af93c208-a32f-4d34-a48c-ac12e0fa0505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1237 b77acbc9-dc90-41ee-86e8-50d2135a4303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1237 1873b15b-cf15-4362-9583-015c19bc6325)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFE5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1593;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0F47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1238)");
    end
end

unit.assert_eq16(16'hFE5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1238 d9194903-c216-4f98-9f5f-64d5a1d55c09)");
unit.assert_eq16(16'h1593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1238 95b2f5be-cef7-4046-a42f-b11469277451)");
unit.assert_eq16(16'h1593, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1238 ac02f0ec-ab79-49f9-bda5-61976816f0b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1238 bfc8387f-a663-4872-9ea7-a45acbb572ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1238 8b0d7168-e048-491d-bb90-3b450d6b715f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1238 5c112a02-7add-48c0-bbeb-d4401ff28f3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1238 f6438d89-a3aa-44ee-aaae-8b9c548325c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1238 88b7f588-f84e-44a4-a931-6e2fbd310f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1238 d39907c6-4313-4e21-a2a5-b7fb5c8a7393)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9342;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEBD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1239)");
    end
end

unit.assert_eq16(16'h9342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1239 eaf908ba-aa31-4130-9610-493dff5588fc)");
unit.assert_eq16(16'h66DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1239 b34f72c5-74eb-4e19-97f1-a0052f657e50)");
unit.assert_eq16(16'h66DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1239 170cbbe6-f65a-4eda-9591-a65c0d57a3c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1239 5adb4b56-b377-4803-a994-c7cfaf0d2884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1239 7e5d4e87-9a5b-4a77-bb09-99c7c9c769d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1239 8d6b670c-ef0a-4596-af02-4b4d878a1c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1239 e996a0b1-dbc5-4bfc-b4a5-d22cd1b58308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1239 80d48d93-59e5-4eb2-aef3-c835085c0507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1239 643486ec-f8ce-4a47-af51-b851b96e9684)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h973B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h51A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE820;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1240)");
    end
end

unit.assert_eq16(16'h973B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1240 60b9980c-b96e-46a4-85fc-8184cb2ba928)");
unit.assert_eq16(16'h51A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1240 41e20349-75cd-4465-91c6-f9eb20554318)");
unit.assert_eq16(16'h51A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1240 a7fee534-a43b-478b-9bcd-af4a6e71e821)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1240 84cb4ee9-1216-431a-b8d8-20c936b81ed6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1240 4f34b9e4-ce38-498a-a3a8-c3b338e2e680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1240 300c5ba1-a066-4715-9b5f-7bea930ea00b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1240 5574b296-0dda-497e-b51f-ab747601d81e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1240 9e4fa41c-26fa-417c-8263-4faf86a59da9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1240 4acbe51b-4bc8-433f-9686-0b4506dcc41b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8437;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h08C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1241)");
    end
end

unit.assert_eq16(16'h8437, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1241 8231c34b-e36f-4ecd-bea6-76dd72e07cb2)");
unit.assert_eq16(16'hAF92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1241 dee442ad-218d-492b-9e86-ecd786679a7e)");
unit.assert_eq16(16'hAF92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1241 af02db79-db4d-49ad-908e-4074417bb98d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1241 499885c8-cddd-43f2-9562-26089ebecf9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1241 4a308578-0565-4c87-9f05-13280001a49f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1241 b1581887-32c5-409f-bbac-e4311eb6a6b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1241 1e8f4ae5-1083-404e-8766-9c0330770c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1241 e8c3885a-092a-4537-b285-98ffe20d6ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1241 d1968965-6483-4c57-9eab-6cf1abd3d78c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h32DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h33AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAADD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1242)");
    end
end

unit.assert_eq16(16'h32DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1242 6d092041-b799-4ba6-aada-96e5e5d7d200)");
unit.assert_eq16(16'h33AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1242 13da6225-b477-46b4-86b5-23de4feaeeeb)");
unit.assert_eq16(16'h33AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1242 2aee5e76-b1bc-46c1-8a9a-ed56c8ae8068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1242 aa75b544-2b3d-4295-a2df-c2f77ab25fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1242 9285c8fe-743a-4154-97ce-090781172a3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1242 35074452-4807-4c59-986d-e88723192b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1242 4d1c62d4-d1ba-43be-b0e0-7b5c88da3559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1242 839853d7-d79d-4032-bb85-ce42ee8610f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1242 2950e7e7-8c57-47d6-b5ad-d5eedb648afa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1293;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2EE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB54E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1243)");
    end
end

unit.assert_eq16(16'h1293, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1243 6f2fda22-70f1-4bef-b6ed-06478b2e4652)");
unit.assert_eq16(16'h2EE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1243 15a221bd-a94d-430d-a5c3-e4188fa56fe5)");
unit.assert_eq16(16'h2EE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1243 68ac00ff-8fed-4365-bef6-6ea2b8f778a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1243 6330bde4-01f3-412b-ada6-a4a42969fa1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1243 3d1e1fca-f5cb-4495-96de-43e7e89498f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1243 96e81d4c-a554-421f-8fc3-225265b9c9c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1243 3fbd9f27-c22c-4e69-a46a-e390c714fa7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1243 eea5483f-ea01-41e2-8197-fb25e7f58fa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1243 709cc771-ee0d-4d03-abaa-a6c57cd4b777)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9554;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEFE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1244)");
    end
end

unit.assert_eq16(16'h9554, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1244 4bca2fd6-2dd2-4320-a0f4-e6dc6202d7cf)");
unit.assert_eq16(16'h76DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1244 94a32f15-ee9a-48b3-a833-6b227d3ab3ea)");
unit.assert_eq16(16'h76DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1244 9196f0f1-efe6-497c-a565-d5347ad4dfc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1244 74b3e127-20e7-4363-b3d7-8cc899fd6d27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1244 322576aa-002d-4bd3-bc6b-2cdb919c7cd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1244 00ba2979-27f6-48c3-aca4-d12a49fa39e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1244 3cdbaff1-6400-4186-9a32-c075a4be66c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1244 3f90e67e-087a-4810-9a68-e5fb83f8a352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1244 25e49130-1959-4640-8bb9-464b704226e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h36D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h458F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB315;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1245)");
    end
end

unit.assert_eq16(16'h36D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1245 9a15db84-7d37-4357-a072-0af2439a8ea6)");
unit.assert_eq16(16'h458F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1245 99160fc8-ba47-4ebf-9752-84f3a84ea51a)");
unit.assert_eq16(16'h458F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1245 d42e975e-ddbc-4840-87b6-38d999b4d36d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1245 0cacb284-cf5d-45de-9492-f75c21604ba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1245 69a27aae-d9a0-4b7e-b70a-adee75e55358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1245 4dbbcf9d-542f-466b-b52b-7199f04a630b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1245 d80648c7-d0f2-410e-aa62-f085bb2d77d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1245 d7799366-0da8-4d9c-aed1-7ae7261d2073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1245 9dfcaef6-0c78-4f68-b553-cf4dd36019be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8428;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1246)");
    end
end

unit.assert_eq16(16'h8428, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1246 ba3805b3-59ca-476f-b730-75be00689e77)");
unit.assert_eq16(16'hD2B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1246 2f48fb5b-224d-4c25-a2b4-25de2c6adf45)");
unit.assert_eq16(16'hD2B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1246 9cb857ba-8285-4bab-a47b-16a93c0fdc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1246 15eff934-2029-4f8c-bd15-bfade8f69c5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1246 cc4b6b4e-25e2-4c30-a9f6-264c5423d632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1246 9426650e-204f-49e8-9d8e-c70074985d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1246 8462f47b-8799-4136-a34f-0f88b4844a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1246 aef04625-d1e8-4b21-b381-3f9ee5b1f218)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1246 ed28ab86-b9fb-4d8b-8da6-32bb29d74ef9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8606;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD015;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1247)");
    end
end

unit.assert_eq16(16'h8606, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1247 6c3c064d-eea0-4c96-a47e-09a73a1835d2)");
unit.assert_eq16(16'h3EDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1247 fdcf122d-71b3-485b-9fb4-fba0b13caaec)");
unit.assert_eq16(16'h3EDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1247 6c8e5d95-65d4-4251-9fcc-b1a34af20689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1247 0050def5-970a-49f6-89c6-6277a3b00894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1247 0dede80b-872b-480a-8259-05e78a14361f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1247 85c72387-25c8-4410-b74a-d3d1d523121f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1247 bf55be4d-5d32-4647-bcf3-42d02659b08b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1247 7472cea9-3be1-4eba-85d0-ca9828f7236a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1247 9e68d181-7b9f-408b-98a2-68a610b53b4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA108;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC43D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1248)");
    end
end

unit.assert_eq16(16'hA108, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1248 619d4081-24ed-4d3a-8f31-1785793cb793)");
unit.assert_eq16(16'hA9B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1248 c715b7c0-f8bd-4783-a64c-8a70c556f78d)");
unit.assert_eq16(16'hA9B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1248 d12990d7-eca3-44c0-b3ca-b366fc6a27ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1248 b4ba0266-384f-4c08-87a4-12f384f693e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1248 a41ae684-b402-4208-a2ba-2da20ba7e2af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1248 5b3caff0-d1f7-43a0-b14e-9a7eb506bf95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1248 905ad676-4363-4e2f-94ff-c1019ef3aafe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1248 e27379ce-4633-41f7-90db-55ba3c28d261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1248 eb7e0345-b0df-4b10-848d-cadd65d4344d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9C30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4407;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1249)");
    end
end

unit.assert_eq16(16'h3D7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1249 bd1f6657-085d-4af6-8703-0ecf1fea7617)");
unit.assert_eq16(16'h9C30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1249 f8cd6580-8b7e-48b4-876c-84e25fbd13be)");
unit.assert_eq16(16'h9C30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1249 f86d02cb-c226-4d81-991c-e0f2ced6d90b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1249 6e26af9a-6bfc-4b66-a301-aac0fe31868b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1249 2b0cc2ac-63bc-4ed2-a4c4-6bfdcb170d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1249 e690de21-12f9-4342-b4cc-257c3488a93b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1249 70137266-00b3-4a55-884b-89ca35205de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1249 2747e508-a060-4294-bbbe-4cc73ab4d15b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1249 b6f57e8d-5208-4edf-a374-37271ea279d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h38EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBD7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1250)");
    end
end

unit.assert_eq16(16'h7E40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1250 3162b68e-4c7a-4059-912e-4ddc71cbc339)");
unit.assert_eq16(16'h38EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1250 f83009e2-5d94-4004-b688-46bce6adf6f4)");
unit.assert_eq16(16'h38EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1250 e76b3587-071f-41dc-9dd7-cb0c861bbcb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1250 d3d5bfd2-25a7-49fb-9c13-db6a8a162a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1250 48eeda57-1bf9-4a42-b49e-cadcf212021b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1250 8d73d20a-3d9e-450f-9247-f65a8259a503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1250 2c748c60-aa86-4eef-962b-47967eb3da94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1250 11c9b86a-4840-4043-a2c1-21275c42d099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1250 0b92e292-d8c5-4e5c-a512-5ec8c9ad630f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7872;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9207;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1251)");
    end
end

unit.assert_eq16(16'hBA71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1251 d5e879e4-9625-4c8a-bffe-edb5e7d17156)");
unit.assert_eq16(16'h7872, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1251 19c99990-0a69-4100-9695-be628acadaf4)");
unit.assert_eq16(16'h7872, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1251 d5244db5-df44-480a-aa08-e5765364ffd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1251 9e135732-14cf-4477-b113-7a824e96117a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1251 54bd803a-00bd-48b9-a7cd-1b29a2b3a953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1251 cc50d837-679d-4a4a-8ca2-406b9268c1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1251 303fafc7-a4a5-4a40-8813-6344b97eaa76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1251 7404a72c-a315-444c-a0c0-f858fd622315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1251 ab687802-1c1c-4166-a341-db5da3a8e3ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD039;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h464F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3EF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1252)");
    end
end

unit.assert_eq16(16'hD039, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1252 63755198-5d57-4316-a586-3e3d9d5cb417)");
unit.assert_eq16(16'h464F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1252 f43b86ae-e07d-4b37-a67c-aff150a26974)");
unit.assert_eq16(16'h464F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1252 ab32bd8d-866f-489f-acb0-e89fbfb7e894)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1252 d74dab1a-2420-44b3-9857-9dfd0900dfc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1252 8a10672c-23b9-405c-bc2f-bf7289bf0b46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1252 6db1f735-6be6-4f7e-9d16-315fec51b6df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1252 9d63b124-4b6f-4a3f-bb11-cc180a97e455)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1252 4d356258-a86f-4053-bdec-2ad7501199fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1252 7e5a4263-9e4e-4255-bec1-50b47b35e85a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA97A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1253)");
    end
end

unit.assert_eq16(16'hFD18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1253 becac3f5-95c4-487b-873f-c5378667258b)");
unit.assert_eq16(16'h6F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1253 0375419a-7338-4030-bc1e-6d3909bf5765)");
unit.assert_eq16(16'h6F45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1253 331326e5-1f90-4d04-8487-1eaaf8e74d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1253 8033fb16-5b34-45b9-9779-232e4c8dd1e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1253 573214dc-1861-46e3-acfc-3d8c152c7acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1253 09a6b3d1-649a-4fae-bd57-03a041239513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1253 da3e88df-5e3a-42b6-b2fe-0eef57161b36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1253 2b082cb8-a618-407f-8257-2736ccf56629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1253 c5da5cc7-4588-4590-aa39-962a7723f455)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5F46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1357;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h83FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1254)");
    end
end

unit.assert_eq16(16'h5F46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1254 0d23487d-c821-455d-bf4d-084d835f1eda)");
unit.assert_eq16(16'h1357, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1254 de792ee0-f019-478e-ba96-4761e9955387)");
unit.assert_eq16(16'h1357, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1254 6413265c-e12e-4fb8-bfe7-376be3165107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1254 c83819f5-f77e-4a4b-99fa-e80dc4f4a960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1254 12a97448-a53b-436c-93fb-34dd9a0922ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1254 4b2fa05a-6c0c-4c58-ba55-2fa2f9e240d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1254 515aa2d6-e25f-4ca2-9486-a26619b7e0c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1254 76c37a33-9635-4507-b137-ed310b92bd84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1254 74b64c6a-8ff0-4958-b40d-d25b16b8eeb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC90A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5A38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1255)");
    end
end

unit.assert_eq16(16'hC90A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1255 ec10af42-0121-4b59-b3f7-f9583012ed1c)");
unit.assert_eq16(16'h0BBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1255 af43504a-d5af-4269-bd98-7514bb1dbeb3)");
unit.assert_eq16(16'h0BBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1255 904a49d0-a401-4791-a89d-51e2070270fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1255 8ce546c1-eae9-4fc5-989b-785852fdb869)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1255 97eb6ade-54c9-4b9d-ba01-fcbebe69f803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1255 ffce49de-d32d-4a2c-b90f-01b6cca62771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1255 eedd6ed4-92bb-47dd-a1c3-a01fecbfc27e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1255 e52cc7e6-0389-4447-ad02-1192b335c05a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1255 dba22141-d310-4da3-b6ef-154368594acc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6961;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4067;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h049C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1256)");
    end
end

unit.assert_eq16(16'h6961, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1256 96bb7f3d-575a-4c8b-bfbe-124fcdd2d908)");
unit.assert_eq16(16'h4067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1256 f1570c2f-76ac-4eb0-9173-0f3b7cf78d5d)");
unit.assert_eq16(16'h4067, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1256 fc3cd40d-d70d-4651-93f7-93eaf964f4a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1256 d194f506-8397-430f-8a26-f22d3cc524d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1256 65f8d519-1a78-4233-a237-e27559255f93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1256 c2b9d928-b7cd-4d49-a73e-613de6ab703f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1256 40fd6ab7-c9e9-4c37-a96f-2b0e4750b99b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1256 555937f4-c917-4433-b027-8908473eab03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1256 3b78aa66-2e91-452e-9d6a-b5068b486758)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD567;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0120;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0C90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1257)");
    end
end

unit.assert_eq16(16'hD567, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1257 3587af60-9fb3-42cb-b541-2a2ef9e882fa)");
unit.assert_eq16(16'h0120, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1257 54c4629e-2717-4fc1-9cd9-678833615fb9)");
unit.assert_eq16(16'h0120, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1257 515caec1-8586-404d-9e55-7195c31f25d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1257 439e709b-7f3c-4509-9b12-7bbab4c16592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1257 cb68d67d-642f-4326-a953-0dd978ce1d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1257 0bd3a68d-a2ea-45d2-946c-5a9864a49b2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1257 c9322f79-d228-4269-90b7-fc2839f4686c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1257 155b3f9c-de4c-4c81-900c-56c87107dc4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1257 318ba883-2d85-4b00-a007-40958a93217a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFBEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h93AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1258)");
    end
end

unit.assert_eq16(16'hFBEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1258 d9dd12d5-1756-4870-bb8a-e0d415bd36d1)");
unit.assert_eq16(16'hEF43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1258 9246db64-f3fc-4a20-bfb0-5d0940326fd8)");
unit.assert_eq16(16'hEF43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1258 596e14ac-89a2-45ee-8ef5-53141f280777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1258 4b031dc3-6cad-4b4b-834f-d7ef269639cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1258 01c1b153-62dd-413a-b541-6047e3525e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1258 4dd6323a-80fd-411a-b79a-10cf7bb264e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1258 10d05443-5ad0-4d17-ab7b-74ecf676497f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1258 ce4b236d-918c-48ff-a531-0abc17e9f95d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1258 028b7891-01ae-4759-9e1b-bf81d613bb35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF978;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5343;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1259)");
    end
end

unit.assert_eq16(16'hF978, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1259 050c5388-bdc6-48dd-9278-0549cca58b12)");
unit.assert_eq16(16'h6B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1259 5af5fb68-f28a-4868-a0f8-158be9f5fd1a)");
unit.assert_eq16(16'h6B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1259 1f895fa4-ae28-46a2-af8b-93d273345045)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1259 a500fadc-d28b-460e-9648-c126f8499981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1259 b0726f42-1c75-4fef-8ce9-bd85de30ba98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1259 511c7565-7603-4e13-b3f1-5b59dc188348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1259 d538d6a9-0160-4891-b98a-deb5a832118d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1259 17332615-d6a3-414e-9955-5706549826d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1259 a137b24a-021b-4103-9b92-48000af4ad98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD456;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9566;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1260)");
    end
end

unit.assert_eq16(16'hD456, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1260 9db494c5-de8b-4f6f-9697-0d77b3fe2dc3)");
unit.assert_eq16(16'h0C67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1260 404edd4f-528f-4085-b1b7-337d830e2590)");
unit.assert_eq16(16'h0C67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1260 515cf406-c591-4e01-9a8c-e53cfb084d7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1260 3ee2fac4-cb22-4a64-a705-302ba79514f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1260 176d3fe3-3a12-4132-8658-e0d7d81793d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1260 d7623a63-b7f2-4571-a7e2-2ae8ea2a991e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1260 807af007-f9ad-4165-92d5-0f4d088d4a76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1260 f1c5a834-9b6c-4861-a457-ae6adc0d4425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1260 18ea8cf7-2635-4fed-b193-3dda5ef9d54f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7003;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5898;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1261)");
    end
end

unit.assert_eq16(16'h0AEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1261 6accd9e5-39d9-4a60-ac94-b80d4ebe952a)");
unit.assert_eq16(16'h7003, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1261 a895a51f-be87-4d1e-995a-d697267f953f)");
unit.assert_eq16(16'h7003, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1261 f81ea98f-3f35-40a6-8dac-4bf104a08512)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1261 09751c07-380b-40ec-8d30-ef0a4362e034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1261 b3056b8d-522f-46a8-bb30-a4b9151ef43c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1261 7585e05c-454d-47fc-bac2-1dce925636ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1261 7c99b0a0-74e0-45b7-a303-a6b2965c6e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1261 e88ff2fe-08ad-4435-9083-0da68d9c01db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1261 da559225-7caa-4f5b-9fc6-4859dc436ff5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h308D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h69F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE26E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1262)");
    end
end

unit.assert_eq16(16'h308D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1262 1e4843d3-9dd0-4e30-b2bd-49627cf0f7a6)");
unit.assert_eq16(16'h69F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1262 deaef18a-66c0-4a0d-893b-17177675aaf4)");
unit.assert_eq16(16'h69F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1262 df1dc701-354b-4b4e-8337-7659592e9f1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1262 7ed03bf6-99e3-4c63-9315-5acae26e5c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1262 9aefeb6b-e816-4223-8432-30d58528c773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1262 be9f51a1-c951-4c06-a50c-f311710fa4d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1262 41319d39-f31d-45e1-8922-d289a91b10eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1262 3177f630-a30d-455f-bc3f-4b10f3a7fd29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1262 57f1c731-5ae4-416a-819c-a621d6553c7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE7F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBDB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1263)");
    end
end

unit.assert_eq16(16'hE7F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1263 1fb467b0-6887-4689-86c4-23a2a82fd5e3)");
unit.assert_eq16(16'hB8BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1263 39954cc2-2afd-45d0-9574-1e82b61627b5)");
unit.assert_eq16(16'hB8BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1263 9fe2d065-6d4d-43b9-a038-c40ef5b3ec00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1263 378cecb0-a155-42a8-b8b1-aed010ac80ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1263 109f8d5b-1f10-4cf8-a376-4c74eaece42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1263 a0cde0ed-d9b2-4465-90a4-6daf10a3d6c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1263 8820b0e6-f581-4fba-925f-4f72f0cafb6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1263 cec847ca-7bdc-4991-9d59-d6cd4a069943)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1263 5e580cb6-fbf9-48ef-8e9d-a5f17a406032)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h40C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA736;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1264)");
    end
end

unit.assert_eq16(16'hE6A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1264 77fc4cbe-6cbd-4624-840f-7b2d1c5614ea)");
unit.assert_eq16(16'h40C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1264 28bcbe6d-6041-4a33-85b1-c083af188cab)");
unit.assert_eq16(16'h40C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1264 bd6389b1-f094-41b1-8393-7f8f2d36e2f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1264 9bb04c0d-acd0-422e-bf30-4218ef1f5962)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1264 c5f6ee0f-2e96-47a0-b7af-6f520e971569)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1264 c44611d2-ac22-44bb-a0c6-e11b16701343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1264 70978edd-42d0-4381-ac53-ef9e6d8910b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1264 c026b701-b461-4639-aa0f-4c3a4c782e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1264 ea76cfd4-dec7-4150-aef4-475c1f131dfd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCBAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h795C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1265)");
    end
end

unit.assert_eq16(16'h0E8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1265 13de3343-8686-45d2-8abd-79eb1b08b414)");
unit.assert_eq16(16'hCBAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1265 968d7044-2c47-4e86-a4d2-db7de8a9e13d)");
unit.assert_eq16(16'hCBAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1265 288486d8-6636-46a4-8868-e470249db627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1265 181bd550-88f3-48fb-9fa2-e366ce256d5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1265 2fb8a0fe-573d-412a-8fb5-9e43b5b1302e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1265 32771f17-2cc6-4450-8aae-828bb5fbb57b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1265 890d4e48-7be7-4ce5-9c0d-94283202fa33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1265 cc3d1b2b-bfa2-48b3-8379-8dabb80b07ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1265 b1ec60a3-b268-4b1a-91d5-f9ce88a1929b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF123;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9170;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1266)");
    end
end

unit.assert_eq16(16'hF123, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1266 c9a1facb-a58c-474d-be01-0bca0f232179)");
unit.assert_eq16(16'h4B5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1266 490f33c7-4f45-4930-a6ed-dfc2e84ae090)");
unit.assert_eq16(16'h4B5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1266 d7cb0e59-775e-48b6-89a0-002ed3b80693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1266 a456e1b5-f9cf-4eff-8bab-570dad4776af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1266 a3268593-17dc-4bbd-ac3e-82239373a063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1266 f97e1f33-fbb2-4a34-b3cf-9a0eccc95f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1266 497c82dc-ec02-4ce6-86a6-a332863b8037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1266 baa98df5-4fef-4f81-8dbe-f9e631a7055a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1266 75822a7a-4f22-4087-a833-b64ecbe5e47a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD179;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA3E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1267)");
    end
end

unit.assert_eq16(16'hD179, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1267 43dce09e-35e2-4320-b29b-f3bc55e83402)");
unit.assert_eq16(16'hABB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1267 221efb0c-0302-41f5-b162-9a410bba426a)");
unit.assert_eq16(16'hABB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1267 0b4fbbca-e071-4d2f-b702-787419d8eef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1267 387b9770-0329-42c4-bd73-7661933e083b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1267 8280749f-d2c4-42a2-940d-7545de6aa9d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1267 ee7128da-36a5-4cc5-88bc-3c1848f1a935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1267 7d8cd3f7-3940-4ff1-8fa8-eccdefa28789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1267 fca47aa9-9e39-4cd0-b831-48e7d4269dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1267 a7a6dd67-53c1-4fd5-bd3e-f785c02faf20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB355;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB337;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1268)");
    end
end

unit.assert_eq16(16'hB355, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1268 419ee688-65cc-4342-be06-a9286b46301e)");
unit.assert_eq16(16'hAFCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1268 5093be9e-c528-4eb9-b4b0-574ccf1df496)");
unit.assert_eq16(16'hAFCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1268 7208321e-e214-4710-9b88-afbaf76ec24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1268 a9b26b07-89b5-4aa9-8cfc-81f274cca1ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1268 8ad37c7f-e3da-48bf-b796-4deb92b55235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1268 f01ef218-21f4-4f98-b818-3cec21178aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1268 5a920ffb-b39d-4f5d-b0b6-5a137d328165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1268 cfc82041-5007-4087-89fa-9092cd23979f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1268 dcfe4ae8-b4d2-4f62-9fa2-6c4f0306219d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4378;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1269)");
    end
end

unit.assert_eq16(16'h4378, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1269 41e39946-eff6-4542-ba02-3806c3652130)");
unit.assert_eq16(16'h76AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1269 32929d95-9725-46c7-b256-7cd8b8920ccc)");
unit.assert_eq16(16'h76AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1269 e5b8674e-2218-4690-9841-1524fe779dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1269 ffbbdc0f-dc40-46ca-9d1d-229766a4062f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1269 e52f0b4a-aeb7-4589-8b78-fd8672bcd962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1269 366df282-0f3e-4a9a-8659-14b41c66f385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1269 8fe8bf63-913c-4c16-80c1-a72626532f3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1269 370d4bc0-3228-4c9e-a252-14b1efdf2e67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1269 26edb480-27ad-4a3f-bfbc-cf492f43ac28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3AEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD0B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1270)");
    end
end

unit.assert_eq16(16'h3BFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1270 19880ec4-8bef-473d-b37b-f5a8eb8d624b)");
unit.assert_eq16(16'h3AEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1270 c6cd5440-8ff7-4731-851c-f7934da52d6b)");
unit.assert_eq16(16'h3AEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1270 d4769d5a-6c1b-48e5-968c-10cab49a5fe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1270 b6068a62-e5bd-4b2c-998c-f54b2f1e606f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1270 4b2188f9-382a-4e2f-b4c0-da4845ce6dde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1270 f6f93a7c-eafa-401d-83fe-eba83817d680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1270 8870f7c6-a03f-43f6-a224-35cec27c56b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1270 d706c9f6-6d9b-4f88-baf2-0d356b332660)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1270 57f1ec39-7247-4e3e-908c-7dd75615c891)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBF64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h79B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h67AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1271)");
    end
end

unit.assert_eq16(16'hBF64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1271 b08e6616-139c-4ab6-9e35-72379ca47c73)");
unit.assert_eq16(16'h79B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1271 f698ce4d-d603-4a4c-937a-2d8e5169ab7c)");
unit.assert_eq16(16'h79B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1271 0aed2701-7a46-4e80-9ddb-2350860fd5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1271 252ffdee-efe8-4fa5-8de5-f17c7631591c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1271 c71fb90a-30f1-4878-8f4e-ee0e32b0b953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1271 6746cb66-5c61-4540-9c9e-ff850ce8a45f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1271 c4088d1c-9d38-4571-ac9c-7be137aa05d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1271 db1f958b-a327-4095-aa80-8456e917a5f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1271 e372faf1-9a80-48e6-8774-4d652a4c99e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h160E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8DF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC933;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1272)");
    end
end

unit.assert_eq16(16'h160E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1272 ac8956bf-6115-4a87-bcde-17aa48754a09)");
unit.assert_eq16(16'h8DF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1272 907bc5f7-e1a8-4263-87a7-153d4c2b0bdd)");
unit.assert_eq16(16'h8DF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1272 53949a06-ca8c-4d5e-b356-cbbeeabac1e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1272 fb5e6b7c-e10b-49dc-895a-82ee10a027f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1272 cb8f7518-fd37-4c70-a72e-bc78843556cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1272 7fd5421f-2fd7-4a80-9191-ef06e72e3dd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1272 101cfffc-e6a1-4fa6-a933-f1506909d847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1272 6e0bf637-8204-48e1-8dd7-7c9e1c9d4a31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1272 4677943a-70bc-4872-8133-a595564c4b97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD54C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2464;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8597;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1273)");
    end
end

unit.assert_eq16(16'hD54C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1273 56d5bdfa-0850-4b7e-a736-19105cd75489)");
unit.assert_eq16(16'h2464, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1273 8a73001e-52c4-4bdb-8172-33690afd7aa2)");
unit.assert_eq16(16'h2464, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1273 8317255c-8fe3-4af4-99bd-74ab4902fa17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1273 f05d5f1a-7b76-4ab5-af71-a5dce1caa855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1273 5635981a-4b6f-4263-83e8-5521818ec895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1273 186e7f6d-5a27-4833-bd27-e310dc74576a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1273 77e8be3f-024b-476d-aa78-cfa0067777c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1273 b7a7fbc6-09f0-4eb8-bc2c-db8f3de8a4be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1273 de97c82a-d8ad-460a-99d1-8a7dfcf045ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h79D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h800F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2EB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1274)");
    end
end

unit.assert_eq16(16'h79D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1274 d68be4b3-1e11-42d8-b1f8-aa35dcc62942)");
unit.assert_eq16(16'h800F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1274 fda75c3b-95e4-4b5d-b482-6608498fd515)");
unit.assert_eq16(16'h800F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1274 39c3d2fd-6409-4295-a9c2-c9389850cb1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1274 bfe1d846-06d5-4a09-b3ae-a1f46be407b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1274 8a7c2ab1-70a4-4df4-bd9e-b133b4bf9e6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1274 4308bb7b-f1d0-4500-bb65-5b9b6f3371bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1274 6e5a4426-0b56-4185-b2f6-225ffe320252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1274 564d24a5-4b79-4337-b044-3b1c5caa1602)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1274 cb4ae679-7dcf-461d-abfe-ea136213a118)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0FD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h44B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1275)");
    end
end

unit.assert_eq16(16'h8E16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1275 ca1591b8-ddc0-4583-81f6-a9d14f630c0f)");
unit.assert_eq16(16'h0FD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1275 b5f26b8b-cb4b-44f9-8a98-d4d8dd39ecfb)");
unit.assert_eq16(16'h0FD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1275 d3753b1d-c76f-4811-9bc2-fde435699a53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1275 0dcf7174-08bd-4107-8e6a-fdfdaf20a873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1275 db137377-ea06-406e-848b-20afcfc43ac4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1275 8c5aa53a-7c56-4744-8ca0-c6d16c6b0b29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1275 cdb6cd80-5ba8-480b-989b-08c686feea28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1275 a0600441-1e6a-4b6d-8958-d1d1f957b238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1275 5edc299e-b271-46f5-bc7f-963db4d750a9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB0F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB75F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h604E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1276)");
    end
end

unit.assert_eq16(16'hB0F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1276 d02e3ceb-fc89-460f-9789-9a75d5443fec)");
unit.assert_eq16(16'hB75F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1276 35a19946-73d1-4802-9e5f-379a53aacff9)");
unit.assert_eq16(16'hB75F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1276 794535fb-85ab-441f-84f0-d74e10820341)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1276 fceb1f31-26bb-4239-8ba8-9ce088c3b41a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1276 ae627d4e-3c7d-443b-ab6e-7a643ebcdba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1276 fd4fca16-3330-47a8-a550-55bd6f05162f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1276 dd626718-4e32-44f2-9c62-d382cbc03d4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1276 2bc9926b-9f24-4dd5-8a03-af0d13f9e94c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1276 cce62c1d-b480-4c87-82a6-929d0dd02702)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h54B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0763;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1277)");
    end
end

unit.assert_eq16(16'h5E67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1277 6c806ed9-beff-447e-9ea3-bdd2ccf1da74)");
unit.assert_eq16(16'h54B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1277 0e0eb5bc-1de7-47c7-b596-f7219cf0aa52)");
unit.assert_eq16(16'h54B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1277 9133153a-1a73-4cf5-940d-4822bee375cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1277 4bf61fdb-cdc8-4398-9b1d-6107c0e061a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1277 9018ca7b-f7ad-4e0a-8744-da45303beebc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1277 da5b434b-b06b-43e7-b541-b5fd88b35ea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1277 534bdc1c-df51-4488-ad52-6c8d6970786d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1277 22e92e2f-86e9-4814-93ec-07f0bac1b20d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1277 685dfd8e-1faf-4ad8-8475-a66351f6dbf0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h579D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3FC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3FF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1278)");
    end
end

unit.assert_eq16(16'h579D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1278 782b2b2a-ec96-4853-bf11-1a03730f71c7)");
unit.assert_eq16(16'h3FC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1278 6d343bde-5e24-4a3c-a0aa-4afb10b55ebb)");
unit.assert_eq16(16'h3FC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1278 87dff93e-e598-43ef-b6e6-d1d724d1c800)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1278 839c7c67-1da3-418d-b251-2029a619f707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1278 374047cd-76de-442c-bb5d-742ae32f1381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1278 29003a4f-0c93-43f6-a6e8-bff3c7ed41d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1278 3da7aba0-5139-4a36-a114-1fa79119ab34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1278 372cb205-920c-4003-957e-8a863580103f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1278 0b91e67b-38a7-413e-a23c-3df147ef9d6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB0AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h007D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE790;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1279)");
    end
end

unit.assert_eq16(16'hB0AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1279 e89ca3af-c02a-45d7-9ef9-1a4a9a2a2088)");
unit.assert_eq16(16'h007D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1279 ed0755b1-7c9d-40ec-8520-a96f914a61d9)");
unit.assert_eq16(16'h007D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1279 ce880a82-b8f2-4ce2-9a58-cbde63886b59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1279 0e573586-252e-4a0d-8847-0ecf88f3dbd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1279 63e0d17b-34d1-4e94-a4cd-5dad9a78c264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1279 754f325e-2b3e-4974-be7c-6c8491c82f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1279 da6d65e3-6078-471e-967c-f1f64a995f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1279 b269b0d3-5ec0-4e91-8574-6fb5ca683d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1279 27146c7f-856c-4038-b8fc-d322dafce06b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF719;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1280)");
    end
end

unit.assert_eq16(16'hCDA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1280 f5f63363-3780-405d-9bd8-c72413b7eb0a)");
unit.assert_eq16(16'h3F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1280 54f8d449-351e-4636-a6cc-60a34855cc72)");
unit.assert_eq16(16'h3F6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1280 d5e7fd84-119c-4328-a668-5cd57ebe30af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1280 ba91d25b-f081-4a4a-9bb6-c216acfcca2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1280 9b23a22c-2ccc-4bf6-a606-c43f2fb0cf04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1280 df93a118-65fb-4e74-b2f5-7cb1718ab202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1280 dce71394-f83e-4e0a-9a55-32f707223d9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1280 67761954-56a2-4c9a-a9e4-bad25c2f203d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1280 a7884c8c-cfc5-48f3-b8cb-7fda4b760497)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB30A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h73A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1281)");
    end
end

unit.assert_eq16(16'hB30A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1281 85aca0f6-3bb2-4e3e-bbcf-79a63e727013)");
unit.assert_eq16(16'h73A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1281 4ad25dea-a7c1-4ece-a64d-36a18de6a543)");
unit.assert_eq16(16'h73A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1281 803eecb6-87c6-4928-98ba-a28a9e7eecb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1281 67dc8237-5823-4615-be01-bd0f699fdcd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1281 ac18f9a2-bb31-4b22-8ec9-46095e93973e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1281 3475936c-6590-429f-aa14-51775214cd92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1281 5bf8fa1c-5aaa-4db2-9b1c-e11b04735f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1281 c7b2ba3d-14a6-4a85-b161-191c348d4bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1281 4c255dd2-2fa0-4a15-ada7-a214fd7fe4e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBE24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1282)");
    end
end

unit.assert_eq16(16'h4A3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1282 a589ecfc-7706-4151-b93b-e44882af6ddf)");
unit.assert_eq16(16'h3B5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1282 df4fa073-025e-4046-b316-a99252962bae)");
unit.assert_eq16(16'h3B5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1282 b8eca86a-9b23-4660-9d44-08c177dac6ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1282 e0056e2f-88f1-43d2-b592-f6b17b27204a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1282 63061e23-6361-442a-b92e-e6e63ef6f608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1282 baae5ffc-e195-472d-9474-90dcdc5993b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1282 34ad002f-d335-4f5b-a8a1-2e199a3e14f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1282 639c398c-a82c-49b1-935d-91fa1ae22b3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1282 615e6f75-e1bc-4158-9284-fcecfad857ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC93D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC183;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h64A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1283)");
    end
end

unit.assert_eq16(16'hC93D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1283 fe526f56-c1b3-4a7c-b539-44d427a4c88c)");
unit.assert_eq16(16'hC183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1283 e89e631e-6451-47c0-8b2d-5339ca50b58e)");
unit.assert_eq16(16'hC183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1283 fb1fb296-cbbb-469b-b80c-69aece3c410d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1283 d2079bd3-393a-4798-917b-92058f249d51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1283 e883bbb0-8008-4c22-8d65-40e92f808d73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1283 68ef4856-07c7-444f-a542-a343e6094abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1283 fbf1f293-7df9-483d-947c-db79b55a54d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1283 e18001d7-3b2d-4566-823d-42ddb01bfbfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1283 668503fa-4c7e-43c1-88c4-e7d0d9ebee91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2DDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7A34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1284)");
    end
end

unit.assert_eq16(16'h2DDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1284 6064e4d9-c508-4382-8a88-ccca9078d0df)");
unit.assert_eq16(16'hFDEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1284 72991718-3ebc-4bd7-bbdb-879c93275b33)");
unit.assert_eq16(16'hFDEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1284 5684237d-6044-4a4f-b957-88a4548a1a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1284 378076ec-362a-4a9e-9b3b-cd4abbaf89d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1284 cebab5af-b757-41f5-86b9-ddf7263a7f17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1284 6d4e16fa-17cc-46e9-851e-3688c19e3f5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1284 fbf8fd86-cdfc-4570-a74a-34fe788aaae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1284 e51c7b97-de38-4372-8e78-13e82838ef09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1284 71f353e4-da55-4ebd-89c1-c5737a81c0c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF60E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h626E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1285)");
    end
end

unit.assert_eq16(16'hF60E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1285 9c8d155a-9f54-40b2-bf5c-0f305536affc)");
unit.assert_eq16(16'hF4D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1285 9cdc7ea9-5a40-489f-ba03-7469746c4b0d)");
unit.assert_eq16(16'hF4D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1285 e634a31a-2d37-47c9-921e-1a779aab501d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1285 a5a812c5-1a92-4dd0-a46c-8de27473e2b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1285 7e11f49a-297a-4a97-8010-0c08021b7078)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1285 d715a74d-116e-48ed-8e33-6c9e5583286c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1285 e6904733-044f-4ca5-b795-9423be8fd7c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1285 0cd525de-970f-4b1e-9393-4304960212ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1285 cb2b61a7-877c-4a47-874d-ed1c9d088c89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h461E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h700B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD2EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1286)");
    end
end

unit.assert_eq16(16'h461E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1286 1c3a1780-c7ac-4d49-b8c2-bcea31fd30a8)");
unit.assert_eq16(16'h700B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1286 610076ab-0282-4a6a-b3b8-01c90471d914)");
unit.assert_eq16(16'h700B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1286 00693658-d596-4755-92d2-618be74f1494)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1286 cc99d36e-fe70-4bb3-a55c-5fa9f2fd457b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1286 7f9be9f8-4e23-4bed-b1e6-69f322159954)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1286 d2a09d22-3af4-497c-a07e-04f74cfcad5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1286 8dbe5a5a-b275-4d5e-a186-96196fcc117b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1286 d7468dcd-00bf-4205-bb51-3f6e5ed94ce6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1286 7cc71a95-c701-4907-bac7-8a26d95534d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE449;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD36F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF577;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1287)");
    end
end

unit.assert_eq16(16'hE449, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1287 d70181ce-1504-4553-96d1-ab6bf7e31ee0)");
unit.assert_eq16(16'hD36F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1287 75038953-7bdb-4611-aacb-25e4c46a6902)");
unit.assert_eq16(16'hD36F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1287 ef2b77d9-cc9a-4706-946b-4953898678b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1287 0f89cdfe-23a5-4532-8a94-3810dbfdec16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1287 6a52ea45-e7f8-4e54-bbf9-03bdd149763a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1287 49f27cf5-3503-4ab9-9652-7c7f85af66f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1287 8c38dc61-5ae5-4a57-8003-25ee146408b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1287 740912b8-7e5d-4890-af10-8e55d755e49b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1287 2b2db3b6-000a-4426-a856-255932b32425)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC9B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC5D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1288)");
    end
end

unit.assert_eq16(16'h4C2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1288 81acef14-cb76-415c-9ce3-1feedc059498)");
unit.assert_eq16(16'hC9B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1288 75859686-21c7-4fe1-b9f5-a69aed3c2a19)");
unit.assert_eq16(16'hC9B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1288 73a0d387-02a2-4bf2-b57c-232f8a700f7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1288 8f8cb7cd-9f75-45d8-ad0c-f362503fa054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1288 a815db0c-7989-467e-a145-d1d0a08b5a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1288 35f38e88-bbe3-4b16-a27c-29bac37e52e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1288 5efb9dc6-bd28-460c-b4cc-ee4f46085109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1288 94d4c34a-3953-4df3-904d-1a30394edd10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1288 79ab0249-deee-4eb9-b8d2-faf9bb270612)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h99C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1289)");
    end
end

unit.assert_eq16(16'h99C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1289 33c95053-9de8-46bb-9b7c-90cc6cd8c0e0)");
unit.assert_eq16(16'h1A38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1289 bc9d30f1-ee75-4865-a178-891c3274e3f7)");
unit.assert_eq16(16'h1A38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1289 eb3a16ba-6278-465e-8414-611d86fcca1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1289 d375deca-621b-4a6f-8b32-871a3afdf6db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1289 94135bd0-5b88-4755-9d12-29f101ca0fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1289 476797d0-dc74-4ca2-b276-51861e59832f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1289 a499345c-c37b-43b1-a22d-16a07ba0cf68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1289 fc653fe9-0a8c-4853-9389-934386522eb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1289 83ca44c9-5904-43f4-9d6a-754af8fb6ec4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h65C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1290)");
    end
end

unit.assert_eq16(16'h65C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1290 bf3ddcef-a72a-47db-b10c-d3a4327b2a9a)");
unit.assert_eq16(16'hA5C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1290 491e5779-c441-4479-909c-28bc8f0194a1)");
unit.assert_eq16(16'hA5C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1290 5fef47c7-409e-4698-b4d9-8eac3ad5fc4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1290 6c10f89c-98fb-49d8-9ffc-abdd99bc093e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1290 180c763d-65d8-45f5-bda8-58244bc28443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1290 bf3a8bee-38e3-4730-91e0-90b921b6f974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1290 26fea35a-6ec3-4783-9a05-5581cab185f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1290 521299c3-603c-4e84-8252-b4a31562b5ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1290 2aa19e61-8f25-4501-8023-b5072d38ef33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC013;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h25BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h827E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1291)");
    end
end

unit.assert_eq16(16'hC013, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1291 1f070716-409e-49bb-8539-7997dd6312b5)");
unit.assert_eq16(16'h25BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1291 96dcc7bb-03e3-4670-9515-268cdd7648e3)");
unit.assert_eq16(16'h25BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1291 3dbafd6b-3f2e-4023-a24d-8a64793903fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1291 58d5298e-5f8c-47f1-a68b-06bd3f49f9e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1291 45cceb2a-3f8c-49f2-a84f-3f66e2f5d157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1291 1aa0107d-2478-4119-9965-25b17b8ae7f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1291 261daa03-6a8c-473a-8d98-7560b8b5f714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1291 4e1e0deb-8a62-49d5-834c-1437bc82c1ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1291 799ca7d7-230d-43ea-a303-f86c87e337fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD8E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1292)");
    end
end

unit.assert_eq16(16'hC6BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1292 7face89e-8b90-4c23-934b-9e131266aa07)");
unit.assert_eq16(16'hD8E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1292 485931a7-b07b-4672-aea1-fa049d13d00b)");
unit.assert_eq16(16'hD8E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1292 72e70ed9-db0f-4c8c-a82e-897d25e6e9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1292 6135cb8e-e52d-4d44-8054-dc98a02e2f7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1292 86c9171d-cd7b-4f71-8985-edc142a96eca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1292 61f1973d-904d-4945-9f0e-97b4e934a1ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1292 39737959-c504-4ba2-b177-4dd8794c718e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1292 5b73c27e-b771-484c-a3b2-eeeb96e60997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1292 4f71f883-accb-4907-9941-390556999b80)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5642;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8663;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1293)");
    end
end

unit.assert_eq16(16'h5642, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1293 a7c56c0b-3247-4e64-8abe-b8e32f50a057)");
unit.assert_eq16(16'h04E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1293 837ccd0d-093b-4d5c-8e57-12ea808cba4b)");
unit.assert_eq16(16'h04E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1293 6f2bf8f7-7e8f-4ff3-a75a-8a4c399f499b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1293 68594ed5-ae7d-40d6-8eda-651cd6501741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1293 eca6044a-c675-4ac0-8731-2c485e820b38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1293 86826e39-cfaa-415c-bfa8-2156fad3a208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1293 830d1f43-b4db-4fef-b353-68284ef50e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1293 7339fbda-e3db-4208-bf79-026c8104bc8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1293 546f7554-0a81-4a9e-b814-f07aa1dadc87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h18B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7E55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC515;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1294)");
    end
end

unit.assert_eq16(16'h18B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1294 9fcff594-cf43-4ab9-8b31-480477e889ef)");
unit.assert_eq16(16'h7E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1294 fab19725-9330-465a-ba37-34fceec0a545)");
unit.assert_eq16(16'h7E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1294 8835bb48-73a5-4fac-a957-c9442260d7cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1294 e1908848-0965-4437-bc17-8da8bd845a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1294 96ac714d-1c3f-459a-a168-7b61f623a4a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1294 48beb373-8269-4af5-85e0-07c7a8fbf5d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1294 3b33585d-bc77-4716-9867-bb6ad5e95e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1294 1a1dc384-0c6f-4857-950a-b841ee7fe216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1294 18cf003f-90a9-4434-a096-fced576f6d6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC25F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h256B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC8A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1295)");
    end
end

unit.assert_eq16(16'hC25F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1295 41dc9827-3e9c-4767-8aed-ac873b9fcec6)");
unit.assert_eq16(16'h256B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1295 adfa9325-0c0c-4cbf-a175-2410a30f0c40)");
unit.assert_eq16(16'h256B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1295 bbe4ca7f-b139-40dc-ab0e-0588d49772a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1295 6d1347f9-001e-428a-9b6c-bdfcd41aa23a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1295 0e6dc3c9-0cc9-413a-9581-0f347d69c7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1295 c08799e4-206a-4b8d-817d-50030198ae0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1295 872ececa-0605-475d-b766-6b4698e21db6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1295 8842db90-a3c7-48ab-bc91-0a77af939323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1295 faba4cee-8ec1-4570-a4d9-a11c104cfa65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h82E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1296)");
    end
end

unit.assert_eq16(16'h04DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1296 6b9259eb-7c01-4cfb-a6e8-30645bba976e)");
unit.assert_eq16(16'h82E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1296 4d0fa596-e465-4e0a-a8fd-16ba09516f22)");
unit.assert_eq16(16'h82E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1296 b6a2e6bc-a071-4067-975d-589afc7a766b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1296 6a22f896-704d-4f90-85b4-744dc0a3b500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1296 16bc27c4-1fd9-4122-bb98-702e86dd6a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1296 3e62e1ea-c0df-4575-aa2f-e95e8354d1ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1296 5b1f1e77-fba9-4dfb-a19a-6b22d573c399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1296 1d920480-5e96-4370-b4e2-3091b91b6af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1296 47bdcea1-e0ec-4db1-97cc-f251bd8fd39c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h04B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5D57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1297)");
    end
end

unit.assert_eq16(16'h04B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1297 d7adf900-c425-4725-90f0-68b5981a5a28)");
unit.assert_eq16(16'h5D57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1297 e1c79789-1451-4d10-a8f1-9d6580d91e9e)");
unit.assert_eq16(16'h5D57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1297 4cad11d1-3a1c-4491-9618-f4ac46aee158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1297 798c3ec1-fa01-4f3e-be4f-991515504ba0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1297 e256a50f-17d3-48a2-8a70-6c7359da1a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1297 37e985ea-e5bf-4530-92af-b361a90707ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1297 df9a0d75-42e8-402c-946b-3112efca6377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1297 c9d56009-c019-4218-b628-e000d727b6b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1297 46096aa0-8e67-439a-9446-a8bb6e8bdb96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF4C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h823C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1298)");
    end
end

unit.assert_eq16(16'hF4C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1298 52d18ba8-495c-42fe-bbc6-8e8e6614256a)");
unit.assert_eq16(16'h4B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1298 c0f1ef14-4f54-48e5-a7e7-98905244f188)");
unit.assert_eq16(16'h4B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1298 77a10d93-bde3-49b4-8cc8-d28b1e020584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1298 eb7d123e-803b-4e26-9d8c-9314c9fe5abe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1298 129cda1e-0a8a-4cc9-92b6-e5ddcb93e73d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1298 2cf68751-2437-44c0-8072-9614ff40d85a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1298 c2644d9b-8900-4db7-88c0-b69d4c08eb1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1298 4df00947-e5c0-43b1-b66a-0d0c212999bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1298 f3cfcf75-77dd-4cc2-8b3d-a7a7d8031a21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h879A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h86B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD307;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1299)");
    end
end

unit.assert_eq16(16'h879A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1299 1dc03926-8d2c-45a5-bb0b-b73f815aaf4e)");
unit.assert_eq16(16'h86B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1299 c7da4e16-169e-45f0-ab11-f4bd958e7096)");
unit.assert_eq16(16'h86B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1299 6a33a30f-8d7f-4481-bdc3-e314ffe2ab06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1299 79ad1599-1239-4fdb-8082-d96e263553b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1299 2927d960-c8f7-429f-bf60-a3ec5411838c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1299 3d7c22dc-2876-4338-8e8d-b3ec464ca912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1299 a92b4111-2ba7-4958-b49d-0f723d68571b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1299 d5238a9a-b6df-4f67-86fc-ed0b887daebc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1299 69862263-4968-4449-bbc2-36a82b2dd2e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD245;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20E8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1300)");
    end
end

unit.assert_eq16(16'h01AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1300 027d8007-1ca2-4f8c-9e7a-2bea52b1723f)");
unit.assert_eq16(16'hD245, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1300 3f09f1d2-9348-43ff-a357-e974ba5088e3)");
unit.assert_eq16(16'hD245, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1300 f8901439-04b6-4e9a-8437-d936f76bfc9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1300 52437749-3f4a-4955-a95c-6ba0d3c7fa65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1300 925736d3-386d-4d6c-9e4b-1cd25528de58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1300 ef3fbac3-bbc6-4866-aa66-6828df9c08af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1300 6b1ef605-434a-44a9-a27a-f1e9b738a699)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1300 d8f3dabb-c452-4ee3-b0ae-1ee062242ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1300 d39ec4d5-c157-4055-b2f3-1ce2aa0f839c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h964F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB157;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1301)");
    end
end

unit.assert_eq16(16'hC1DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1301 5fae0100-f788-4e38-828f-a6a84336d5da)");
unit.assert_eq16(16'h964F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1301 27500a39-0119-4c9c-9868-42af2f2f9f80)");
unit.assert_eq16(16'h964F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1301 ab7a0e1f-7d7a-4df0-a35a-bf58fa0cb7d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1301 fdc03226-ac7a-4874-b6df-5ebc64892665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1301 a40b949f-815d-4202-9e36-bfba46989980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1301 7170e974-8652-4cf4-af98-5c3587d57406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1301 73ad903b-2bf8-4044-824f-33fed160ac18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1301 3acd42c8-9785-4d6f-ac83-8a06133d1f98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1301 18b72cf7-8e1b-4f4b-a1df-89a76cf8ec13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6DE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEFEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h64D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1302)");
    end
end

unit.assert_eq16(16'h6DE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1302 cbdc0686-8276-457c-bfdc-758cc4c8a913)");
unit.assert_eq16(16'hEFEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1302 30cb5871-bb1d-4655-b078-eae724e4e5b5)");
unit.assert_eq16(16'hEFEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1302 2ec785c7-00e0-4fdc-80c5-6f97912ee84e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1302 fa8796b2-ba3f-4cbf-8bc4-8b6943384968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1302 040f7d5a-fb8e-4fff-a8c5-d0beb83e7248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1302 c68a05f2-a982-4e72-a654-af5085e55f1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1302 60c045b0-eaf9-4797-8c6d-91e5655b6e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1302 753dc547-9830-442e-840f-f0df270a592e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1302 e081c42a-fc13-404a-891a-fd9098b9c53f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB81A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1F89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0FCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1303)");
    end
end

unit.assert_eq16(16'hB81A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1303 cb4de5e6-ef4f-47c1-aaf3-7b364fdc5e9e)");
unit.assert_eq16(16'h1F89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1303 64f3f67c-5d6b-4844-8b84-8d5b5d083a2c)");
unit.assert_eq16(16'h1F89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1303 cf208934-f94b-460f-8064-c46842c72e33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1303 ea0d4bf4-57da-4e0a-a5e0-bd8e31fa0b18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1303 2c0b321c-e2f7-4495-8ffb-31b88bfe3194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1303 7a622441-0844-4ae2-b617-3109220ec7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1303 95e8d1af-804c-4114-8bb3-86dd895fb45d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1303 78519ba5-6c20-4113-ab7d-ce90ba94046f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1303 2781defd-11ed-45b9-89e6-a6cf7ad35c91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5AFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB658;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD0BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1304)");
    end
end

unit.assert_eq16(16'h5AFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1304 08370da4-2f0e-48ab-935c-52db13310656)");
unit.assert_eq16(16'hB658, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1304 4db521fa-96ee-4d8e-bd1f-c9168d8e8d08)");
unit.assert_eq16(16'hB658, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1304 cfe000f3-f2c6-4210-9975-a6c41d04a3e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1304 dea003b0-381f-4d90-a509-ab8bc6f4d187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1304 87e94fb4-82b2-4202-9b55-071e42f6683c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1304 ac2ee4b3-7059-48da-9fe4-9b27e22ecea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1304 43bc8d29-c960-4588-9e7a-5df0720cd5bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1304 e9ec9f01-652e-4872-846e-7aaba9d2ac0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1304 fe79f79a-210e-43f5-a493-8aed4ff62625)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5706;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB936;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1305)");
    end
end

unit.assert_eq16(16'h5706, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1305 0d9f0803-77a1-4fdc-9ec4-56c9acbc1f7e)");
unit.assert_eq16(16'hEA51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1305 aaf32efc-6a48-48c2-951c-124229b57ebd)");
unit.assert_eq16(16'hEA51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1305 18679670-0793-411e-8559-7caf26ec2c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1305 bbd49284-cd89-4d9d-ab78-1c88d3720d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1305 79ac8bf9-d8b7-4247-8d04-85d44cbe20ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1305 49bb4291-0aab-4650-b6dd-fdeeed29edbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1305 9ffc7719-eb9c-4ffa-b52c-47156d343e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1305 3445c694-9ef6-4282-86bc-7cae5da5dfa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1305 f6c6d64a-66eb-4102-b744-9cb896c2559a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA88B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1306)");
    end
end

unit.assert_eq16(16'h41A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1306 5330e892-3f85-46a3-ae81-ce7d7791898e)");
unit.assert_eq16(16'h06FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1306 6b5a527d-1b8c-4441-b29f-cb5a2d653fdd)");
unit.assert_eq16(16'h06FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1306 39a15d2d-040d-4f9c-8bc5-27bd27524212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1306 c93de4ac-8e4b-4f91-a74a-177d9ce14920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1306 0cad2351-8f21-4a1a-97e9-db69296bea73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1306 4a375a31-13d5-4a08-9d9d-7b89c42013d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1306 98d41207-4be8-4ae7-a536-bca75db613fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1306 d5539016-a665-4b29-9c15-a61f5f5a57b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1306 c6aad397-9539-4187-a945-9e923517b2a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDCC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2AE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE2CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1307)");
    end
end

unit.assert_eq16(16'hDCC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1307 3d74d351-9a75-4be6-aa23-6f3df0683416)");
unit.assert_eq16(16'h2AE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1307 47f3017a-c0a3-4eb6-bb76-053649a2187a)");
unit.assert_eq16(16'h2AE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1307 e252047d-2ebd-4814-a031-4f947e5da22f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1307 b4dc89fd-c414-4074-aac7-07f635a360d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1307 ea832910-7942-4f84-a702-52640c3a85d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1307 dbbe3921-2871-4125-b37e-65c55806e487)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1307 1d1240c3-d0fb-4abc-828c-6ea0a6f7fc0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1307 e7eaaf08-249d-4aae-99ac-8b732d2e78b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1307 31914b6c-db40-4bd6-be1a-09f9e5eb4c28)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h30B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2890;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1308)");
    end
end

unit.assert_eq16(16'h30B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1308 f3e9585e-a03e-44aa-93a2-f993b4e6e545)");
unit.assert_eq16(16'h1D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1308 eeb83df9-fe04-446b-9dab-1d811ee5bcc6)");
unit.assert_eq16(16'h1D39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1308 58804caf-4f8c-4de8-b442-3f65b117d90f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1308 c02ad8fa-d249-4387-bcf6-35a8a205dfb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1308 21d05373-74b8-41f1-b087-0816fc58566b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1308 7aa37904-5f90-4cc5-814c-de5442bea43a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1308 73b81c5f-eecd-4c3e-833f-afa03fd73fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1308 641be83c-faf8-44f7-a30a-967d5099e136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1308 61b2e10f-d400-477a-b30b-949f7a4d8ab3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h917C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h193B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE432;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1309)");
    end
end

unit.assert_eq16(16'h917C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1309 0a6f8243-41a4-443b-bd51-a46574c60137)");
unit.assert_eq16(16'h193B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1309 9c08b832-a985-44c7-9a90-3f953bdf1491)");
unit.assert_eq16(16'h193B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1309 42172404-b33c-4bc8-be02-a938cd80c4b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1309 d0fdd01d-fdf7-4b43-b8f6-ad9ed04f7025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1309 921d0288-2333-4db6-95ef-aecf2b83f830)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1309 16f4b086-6c32-4f4e-ab69-52ab7268a301)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1309 0b403324-361b-453c-876f-00955e03ee01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1309 f43b6e0c-193a-419e-b17d-988f0173d90a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1309 a9ce0c59-5a3e-4fbf-a131-82bed2736960)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6022;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h26A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h808E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1310)");
    end
end

unit.assert_eq16(16'h6022, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1310 3c028b30-1f1e-43e4-972d-960a55c9ad8d)");
unit.assert_eq16(16'h26A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1310 6e1871d6-d3ba-4844-ad42-eea7a32a20a4)");
unit.assert_eq16(16'h26A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1310 81886eba-7f46-48b6-8a05-7a0e62b70037)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1310 e9783783-73b9-4d45-aca1-49aa30e1c978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1310 885e3635-3b6a-41f3-8c04-1a5251120461)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1310 db027398-9736-4341-9adc-0530fe36d676)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1310 3ad57cc8-e9f5-4619-8887-320e98ab25ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1310 03714688-6b91-4781-94ea-dd0b4222cf6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1310 9b771f66-ee88-421b-8bd9-6cfa5e31e277)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h105E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3642;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1311)");
    end
end

unit.assert_eq16(16'hBCC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1311 3d854a3b-e91b-490c-a218-6729bbb460b3)");
unit.assert_eq16(16'h105E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1311 ccc59bf6-164d-4253-8120-8d1994172ffa)");
unit.assert_eq16(16'h105E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1311 5d9fc3d3-d944-4a10-a3e2-7b5ccb7ec812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1311 4c60713c-3064-41d5-9676-9fb23513d1c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1311 0fe48fdd-5f92-45ef-8eb4-c402ebdc4864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1311 67ee6503-9ada-4c11-866c-57aa017f4375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1311 11a87cf8-70eb-44e6-9ec0-44ca4730f675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1311 4972b60a-5793-40e5-b8c3-00da67a6d4cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1311 ee6928fb-f731-4197-85ce-b21b118ca3ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3FD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h17A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1312)");
    end
end

unit.assert_eq16(16'h3FD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1312 a9e647ea-a7ac-4328-bfdd-ba3a0dfa981d)");
unit.assert_eq16(16'hAC1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1312 5de58bd8-5633-4ed9-896f-fc5287d977e8)");
unit.assert_eq16(16'hAC1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1312 e782d310-2d46-42c1-81b9-4c017eb078a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1312 166eec1f-3337-4147-bbd8-938153df6130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1312 c3950835-03db-454a-bc52-93f10a5d9afb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1312 3668ab6f-d1da-46cc-b834-2271a968d489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1312 55149303-1867-4517-a65d-f5469b024b38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1312 79b66ae3-e64b-40b3-bec7-cfbbd9c6fbb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1312 f92a165a-3670-4974-abdf-23cd77e87c83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD04C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h14F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1313)");
    end
end

unit.assert_eq16(16'h2D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1313 f4ead2e8-3a78-4666-9844-41a1248ca278)");
unit.assert_eq16(16'hD04C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1313 5a56addd-9441-4dc1-b515-b2587f3457bb)");
unit.assert_eq16(16'hD04C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1313 6f4bfc02-7f35-44c4-a7e8-04d299127f90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1313 cd9efcc9-469d-4d59-8a06-0c1ed05cdf39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1313 fffca41f-688b-43d4-8f1f-4d7fd045c109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1313 0fd7839c-eeff-4152-aa8f-9d6e37c8d0c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1313 aea36500-1dd4-42eb-bba8-3ecac1c308d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1313 1e2ffe00-6e27-4be3-8531-baa15038e493)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1313 00cc6a95-b448-462c-b3d4-cf23972437c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h64A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1314)");
    end
end

unit.assert_eq16(16'hBD5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1314 0bb36bf9-9def-467e-9b54-bcb4ea8054a2)");
unit.assert_eq16(16'h1A8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1314 ac399f5b-f1e4-4964-8d0f-cc8e31eb417c)");
unit.assert_eq16(16'h1A8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1314 043aa8d6-72a5-409b-bd38-244dcf0b654d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1314 ca7efeb1-0d4f-4893-94d2-ae9db36867de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1314 d6c9a7bb-e6ab-49b6-a6a1-ae2c9621e616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1314 aef9ab83-c0dd-49a5-9bee-146c39c4b8b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1314 85cb7bab-c4d4-4ef0-9b99-e07bfeabfdc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1314 647c71d3-00f1-4c6e-97fa-f95da48cac4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1314 5158b45d-bb18-4b07-9acf-8230965b44b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1EFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1315)");
    end
end

unit.assert_eq16(16'h3E18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1315 c9b48ec9-1a95-4dbf-b1df-95b231fe9c54)");
unit.assert_eq16(16'hBB61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1315 3dd1c97a-64ea-4dea-9e8a-e42983b76cd5)");
unit.assert_eq16(16'hBB61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1315 31a287d1-2932-46f3-b1b0-dbc041a9edd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1315 8715e0e8-8139-44aa-b19f-cae870ebd5b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1315 c563a569-b3c1-47ea-a913-05a20fa7b3b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1315 c73e8f4c-5964-4c53-beb5-88e65746467f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1315 bac37920-4e94-463d-b183-e29757bab43f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1315 84c63bc4-03b7-4e9a-94df-37164fc5b140)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1315 0eb4403b-a2c9-4f66-a89f-f4d9e9306be4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7836;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5044;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1316)");
    end
end

unit.assert_eq16(16'h7836, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1316 d594ce95-8f72-46c0-b84b-36bbd2ac62b2)");
unit.assert_eq16(16'h2B3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1316 27a7ffeb-b9f6-495a-a5d2-4bd8be011e31)");
unit.assert_eq16(16'h2B3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1316 426417c2-4b17-4942-81af-2311e0ca8dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1316 2d87c250-66ce-40f1-90b0-084386a36b27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1316 4bd391c0-bbb5-4043-b1b3-0ca371954123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1316 e72bc393-d421-490b-8810-d5cc7dc3070a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1316 46e6e7d8-af7d-46a1-80dc-673f715baa93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1316 7d3589d6-6cf7-44e8-b36b-2752e7899dbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1316 ca1a2d09-1499-4e8c-8710-19fa247910a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD19E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h486D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1317)");
    end
end

unit.assert_eq16(16'hD19E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1317 0d648e4d-ebf9-4976-9f33-28c0d7f4a4a5)");
unit.assert_eq16(16'hC3CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1317 27fe9421-d39f-4983-8fb3-ae5ec677fa51)");
unit.assert_eq16(16'hC3CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1317 76233f5f-23ab-47ee-95fc-494e5516354d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1317 fcb4f9ab-085e-4246-afc6-900357cb96ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1317 6c279d66-2b6b-458e-8665-054db85cad74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1317 c2d29d86-82a9-415e-bbeb-335a33856cea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1317 35213e9c-7820-435c-9eed-151111a7021f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1317 345d8db9-eeab-4194-8e02-a5fdcbe0581c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1317 33809d0f-7c29-4760-801a-0c7231885f20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7672;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDBF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h052A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1318)");
    end
end

unit.assert_eq16(16'h7672, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1318 a9c9927f-0f0c-4816-bd34-b28ff336ad92)");
unit.assert_eq16(16'hDBF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1318 13aad789-538e-44fe-b1b7-d3340de3e50c)");
unit.assert_eq16(16'hDBF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1318 0c50035f-6ac7-47c4-a6a1-6546eebed9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1318 3792a098-70a7-4423-9f30-82a0af634c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1318 35e76d3a-c34b-46ea-99ec-7e1e6bb344e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1318 5d790615-b5f5-411c-972c-ada65bb1e7cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1318 bf27549c-7962-4c24-be7b-f8162d3cf1a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1318 dcfd3bb9-e5dd-4ef0-9a6a-3528e2d85741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1318 83e44d60-c53f-4a76-98cc-9b2298415975)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD70E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE342;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1319)");
    end
end

unit.assert_eq16(16'hD70E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1319 7c93d157-a2c3-4e17-a1ab-351339404d57)");
unit.assert_eq16(16'hE342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1319 69d1695b-9661-4232-9032-ac15e2318faa)");
unit.assert_eq16(16'hE342, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1319 e25d7082-a93f-4106-bce5-b3ff53c04d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1319 3798e697-727f-4b3e-91e5-e6ffc6a56d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1319 3b4ef25f-12f4-4a60-aac7-6f06eeb90b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1319 f9f69bd3-ea06-4c84-b60a-b71b12e7e1ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1319 8fc3498e-1a28-478c-bbc5-7469974cf00b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1319 24acf9e3-0ce8-4f48-9c47-d8788c46c09c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1319 257a77dc-71e9-4067-96a7-f81fd8399829)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1561;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h51D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1320)");
    end
end

unit.assert_eq16(16'h1561, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1320 af3791f5-66d7-44f8-8a90-2d12e87b3317)");
unit.assert_eq16(16'hD4A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1320 58bfac17-16a6-4626-a8fc-993aba8fa81e)");
unit.assert_eq16(16'hD4A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1320 de379bea-8d68-4796-90bb-69ff776c1169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1320 1cf5d48f-42b1-4b04-9756-9dee35678233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1320 44e430ff-ee90-4013-94cb-0f7180b30ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1320 8b8c3c6c-5bc2-4c91-840d-ca900cc62e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1320 a8605c4e-3fc6-40be-be0c-a0d6a4ea079e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1320 c0f580bf-b928-4a2a-b512-143bdeba24b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1320 b129579f-6383-44b3-b7cf-19bff04ddba4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0292;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hABF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1321)");
    end
end

unit.assert_eq16(16'h0292, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1321 e965f603-49c3-4a8c-b10c-307fc19db2b6)");
unit.assert_eq16(16'h7A0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1321 05f3c661-e8cb-43df-b57c-f90f50f7b1cd)");
unit.assert_eq16(16'h7A0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1321 4e0cbbaa-89ae-4699-8859-26447d9646ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1321 9175abbe-b91d-4eb4-ae0e-6c6112ee70f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1321 4489fad7-9d64-4e55-9cac-52ff4d589643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1321 dc00eb01-fefc-4644-b154-2e5ce7177b3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1321 2b24a125-2616-4e1f-a22a-75595d3d41e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1321 4cfca86b-99c3-48fb-9380-e78e13748c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1321 804aa13a-4837-4bdb-ba13-cab5390dea56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h21DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA0F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9C91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1322)");
    end
end

unit.assert_eq16(16'h21DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1322 14ed3c16-d1e7-4917-a7f2-74458b3be8b6)");
unit.assert_eq16(16'hA0F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1322 99882347-d624-441e-8c56-d3944e3f7f1b)");
unit.assert_eq16(16'hA0F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1322 d4a38762-3401-42ad-92e6-04aaa9662323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1322 81667010-5fab-4e3d-9e38-67a771aea88b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1322 58f4c2fb-c3cd-4424-9422-3e4817c99432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1322 ffbaf8ec-ede2-4903-80d7-fa09fce8a460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1322 9e44e40d-0539-49fc-a29e-b0440201780f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1322 ae0969d5-94c8-457c-ad2e-969023c54e88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1322 9c06aafd-9330-4a64-916a-941f912c0617)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4581;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1323)");
    end
end

unit.assert_eq16(16'h7DED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1323 fa91d242-7bfc-4ca8-9ca8-27e4a2cb9f1d)");
unit.assert_eq16(16'h60DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1323 1ed3d800-ad5d-4099-ae1f-3a1be4f79894)");
unit.assert_eq16(16'h60DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1323 2491f7fd-d2f7-4af3-b866-569d25d9c7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1323 8d84b536-22b6-42cf-abe0-51baadb476c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1323 78565f08-cc2d-406d-a71b-d774ca39b4dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1323 5e110df7-26ec-4cfb-9f83-63ae93902f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1323 ffaff3e4-e082-4170-967d-8efcbaf7b3e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1323 a0bf6b3f-befc-44af-a78a-4c2b49462cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1323 e328dcc5-c5cf-495c-9d43-63e918725f07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h22C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7E47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1324)");
    end
end

unit.assert_eq16(16'h22C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1324 5cef799d-0106-4816-b53b-0496e3d6172f)");
unit.assert_eq16(16'h2F00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1324 5fdf3e62-30a0-4114-9447-aace875aa7c7)");
unit.assert_eq16(16'h2F00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1324 ea209a76-5996-49c5-b197-d0c57ebd06ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1324 ee16d005-dca1-4baa-888b-3ed0a4a6999c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1324 a68d8a45-06a1-4563-b6d3-2700290a2309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1324 23bcdd7f-d8db-4c55-b031-cc40ccf873bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1324 d2b4a60c-d535-4f3a-bd08-25a2e9228c65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1324 9b0788a7-a9c6-4276-a49e-b8ba72a08961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1324 9fa3253f-587f-44ae-a6bb-3824fcee0b0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9E01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3FF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1325)");
    end
end

unit.assert_eq16(16'h9E01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1325 722f7443-9d94-4c57-adb4-d10ad4755290)");
unit.assert_eq16(16'h3FF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1325 7268c192-cd7a-448c-9587-731ec217c917)");
unit.assert_eq16(16'h3FF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1325 b14ce21f-e55f-4e68-8a2b-ea1574f9cd00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1325 6bce9946-8f15-40a7-a574-726256fbaeff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1325 4d5c9289-ee7d-4536-9700-4d7c206438a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1325 e03b87e8-dfd2-4bda-b562-77becf0b1dcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1325 07074173-516a-4f5e-8b86-dad06045c5f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1325 30e4ed8f-be95-4229-99f4-97988430f16f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1325 7820a932-e477-41b1-ba29-ebf4269a3e8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h44E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4EC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4414;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1326)");
    end
end

unit.assert_eq16(16'h44E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1326 cc87ed06-0a60-4aaa-a2a7-071c6ea957f2)");
unit.assert_eq16(16'h4EC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1326 ec9d3624-c7b5-4d50-9ca7-dec97be93089)");
unit.assert_eq16(16'h4EC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1326 bfab8480-46a6-406a-9604-ba7e4a5314dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1326 0b2131a6-4e38-4951-b1c9-951b18c9ec16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1326 a9be6e4a-8ef2-4756-85c0-7684289cacd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1326 b2b81719-53cf-4fdf-8613-5e457db0bcdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1326 f4952226-15de-45cf-b248-8a723613de21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1326 800caaff-11ea-4baa-af42-4191026b3339)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1326 97ff9c36-c2ed-4360-8b61-9bbf6cfe0c6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6371;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1835;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1327)");
    end
end

unit.assert_eq16(16'h6371, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1327 be7417f4-8c2c-4fb0-a11b-61a35c35e545)");
unit.assert_eq16(16'h1835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1327 7b98e2aa-3be4-4308-8960-eb30644e7a9b)");
unit.assert_eq16(16'h1835, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1327 424cbb7e-7077-4af6-963b-0a2bd42e7707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1327 9e15eec3-d2ca-45c4-ae79-7ba0a8c28bfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1327 11212c21-842a-448d-84e1-bceb19140f2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1327 6b0e74ff-25df-4abd-be4a-8e02f61a1fea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1327 d530acb8-0505-4e93-89c5-1c6ede1c86c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1327 a3d33fb5-1fc6-418e-89a7-2483fca1072c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1327 b22c69c9-8949-45d1-8e43-5e6a7edb4fb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF6E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1328)");
    end
end

unit.assert_eq16(16'h3A1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1328 1b5a73d6-7803-4199-9b5d-c8cfc41d93fa)");
unit.assert_eq16(16'h7359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1328 1a1882f9-5af0-4518-9261-7c044fd11298)");
unit.assert_eq16(16'h7359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1328 47f73cfb-9f66-4209-bfde-5243a9d9780a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1328 16aef7b7-9ac4-4aeb-ac7d-a56a0b84f0da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1328 94516dd8-64ec-46f9-b803-2ed4376fed3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1328 e9b2e19a-fa9f-4ace-9c2d-4d7ebdd08004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1328 d3dc085c-149c-4bdc-b522-1091b3f68d90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1328 0d7ce8b1-e04c-4824-8abb-6128effb8656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1328 c910eb10-55bf-418f-8506-99d3acbcb76e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEEF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3C74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7ADC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1329)");
    end
end

unit.assert_eq16(16'hEEF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1329 6d5eb9a6-13de-49a9-b038-d2cb23d5dff0)");
unit.assert_eq16(16'h3C74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1329 97bc9fe9-cc50-46ac-88bd-22a999782094)");
unit.assert_eq16(16'h3C74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1329 3a5925d2-1a59-4654-a565-118835e72446)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1329 da2ba76f-a943-4900-a7f3-313228318cb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1329 cd6883cb-ca8e-44a7-a718-912c25a36e23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1329 f2eb6935-dcb3-437c-aba6-91f5335bafdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1329 325a141a-dba8-4578-a40d-86e440298c47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1329 12b6db36-0df9-48b8-be0f-d9388028ee91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1329 8829fb79-1fc1-41be-b479-1c3eb4f372d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD1F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0DE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9697;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1330)");
    end
end

unit.assert_eq16(16'hD1F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1330 0ff98db2-8e06-43b2-b2da-b54a34e0992e)");
unit.assert_eq16(16'h0DE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1330 5b74e5b5-bf00-4755-8b76-cd069fcf190a)");
unit.assert_eq16(16'h0DE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1330 bae2a850-1526-4525-8523-330c88c460b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1330 2ea5307a-d51c-4a93-bb47-76560b831d71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1330 6f47e836-a645-4ad7-99b7-605f45be2363)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1330 3cb30f84-f18b-4c2b-b07e-857a76f2280a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1330 9d054f7e-6554-4839-b434-b41aec2ecad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1330 e2595734-21e4-4468-98a4-8fe5be93aca0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1330 4715233c-da43-4c90-8cd2-b9c75a7407a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7504;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB677;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h339A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1331)");
    end
end

unit.assert_eq16(16'h7504, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1331 974a1c21-518f-4ede-acdb-9ff3cea011ad)");
unit.assert_eq16(16'hB677, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1331 d48413e9-bb84-40b8-ac3d-0444caa558ff)");
unit.assert_eq16(16'hB677, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1331 699d3cc6-d550-46f1-8f3c-1262dac62310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1331 27ce1776-be3a-441b-b04a-3def258a331c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1331 f1da0779-a6d9-4e37-b366-1d1c11af4eaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1331 932c9a76-9ea9-4c65-bb61-ae165e901cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1331 84b8ac5f-e686-4eb0-a9f4-fc38d01ac5da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1331 c0dbe550-45e5-4edf-b7c0-f1326751ec2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1331 17de068b-edcd-4de0-8fd0-eaa563cc2d51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD35D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF184;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0445;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1332)");
    end
end

unit.assert_eq16(16'hD35D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1332 51b869c1-0b1f-4868-950e-a18e8f3053cf)");
unit.assert_eq16(16'hF184, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1332 57ac5306-88c0-468c-aa41-735c24564af8)");
unit.assert_eq16(16'hF184, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1332 c5a52dfb-3b47-4bd5-81e3-8e9770c5d653)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1332 ad428554-b091-42bf-a2a8-8d485ca13185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1332 ff5585b2-2601-4b92-8e53-c7dd44256df2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1332 d334ef0b-da43-4670-89a8-b96dd0773f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1332 a6e51e97-7230-4f01-8401-8c99a69d64f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1332 b905f69f-140a-446d-b576-3bdf55861a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1332 8d41a67b-2bab-431b-b734-73053805941a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h91C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h984E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1333)");
    end
end

unit.assert_eq16(16'h91C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1333 c0b4720a-94c4-4044-8722-d63458490b8a)");
unit.assert_eq16(16'hE6C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1333 928b9c54-a268-4bb6-aff6-ae61fbe8573a)");
unit.assert_eq16(16'hE6C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1333 b9d0d6fe-59e5-4197-8fa6-d88a9f3e9fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1333 005591d7-10f1-4bd7-82ce-70086dba8e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1333 2453855a-8d20-49fe-b5a0-16707fcd0c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1333 a28d7838-7ed6-44fd-95e0-677e0cf92d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1333 a9d1f978-ec05-4046-a958-3e77a67c68c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1333 89c8c77d-ce0f-4328-a8ba-bd630585886f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1333 ede0488a-b3fc-4dcd-9b38-d0101424a829)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7D92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7673;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB7BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1334)");
    end
end

unit.assert_eq16(16'h7D92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1334 f46b7be8-9863-468d-9da7-c71a354835e0)");
unit.assert_eq16(16'h7673, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1334 dfe960ad-ab93-4dd9-ac43-23250e4ff64a)");
unit.assert_eq16(16'h7673, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1334 21751d09-8a4f-4c81-97a4-3e400ddc7606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1334 469980da-951b-4663-85f5-c5c864b8f31b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1334 86221437-35e7-40b7-8172-5eddb7a7fcc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1334 17b39b0a-902a-4a5e-987a-bdd437b0b7dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1334 7097b160-83cc-4814-8788-02560e7fc1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1334 7a20c993-f898-436a-b296-122f50ad37f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1334 1b6de697-8df3-49e0-ba04-33ff3dc2dfd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA8AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAAD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1335)");
    end
end

unit.assert_eq16(16'h00FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1335 aaf0fba7-d8eb-471f-b9d9-718605d6020f)");
unit.assert_eq16(16'hA8AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1335 84297730-9ff4-441e-b9bc-36ca6f4d3b72)");
unit.assert_eq16(16'hA8AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1335 e9abb69a-f5e0-4318-8850-fb109281d7c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1335 264584fd-3dbb-4376-a2c9-165aaff12bff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1335 96a38dc9-c63b-40cd-8cba-939fe7766f20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1335 dd5acf08-8d8c-40a9-978e-f5ec7b911083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1335 08b1b50c-5d20-475d-a425-96a5e4c575d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1335 78a635f5-412f-4e30-bc8b-8b81ff6261a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1335 184b7b27-21f6-44cb-b24a-56a751d768a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD33B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h338F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEBA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1336)");
    end
end

unit.assert_eq16(16'hD33B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1336 33e9d0f7-165d-42e7-a78e-f34d1e40f0d3)");
unit.assert_eq16(16'h338F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1336 36027f59-1e3b-4cce-ae52-d07fcb750161)");
unit.assert_eq16(16'h338F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1336 abe0d2db-29c0-4343-b683-90d1284f753a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1336 7be9763a-ee58-4411-854d-7d85cf58d12f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1336 aa444647-973c-4049-8c00-2f07dac7678a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1336 206de05d-a783-4826-a149-06dce435a437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1336 8823adf4-30fe-48da-8d3b-51f2fb0658b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1336 f46b77ef-6a1e-4fb1-af4f-9cc47d10cb23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1336 308912e8-73c5-42eb-a3d0-a855d2b27024)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h80F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1337)");
    end
end

unit.assert_eq16(16'hED3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1337 837539df-bf16-4c8c-8330-b11f2917fbd0)");
unit.assert_eq16(16'h68AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1337 b2a03559-e9a8-45e7-ad4b-90f52753c18d)");
unit.assert_eq16(16'h68AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1337 8647987a-3c79-4c8d-a725-ab564c759ca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1337 c29bfdba-4d5c-426f-afe7-66f5ad46c5d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1337 52a9cab2-1e5b-49e7-99be-cb103d8ffcaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1337 0c757ea8-ff52-48a4-b467-90c6a49f040b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1337 a168a567-10d4-4c04-bf12-1767cef78fba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1337 fc8c2d4c-a011-4ad9-ae50-5c42e0ec177d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1337 285a0012-a7b6-401d-9be3-9909880742c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4FD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1338)");
    end
end

unit.assert_eq16(16'h9F62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1338 89ccf39f-d536-4bd3-807d-59cfabd3b7c5)");
unit.assert_eq16(16'hFBC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1338 469c99d1-e0a6-4029-ad56-e152afa5e296)");
unit.assert_eq16(16'hFBC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1338 6d881ae8-2c55-4af8-bb80-976be797d91d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1338 9f279fa6-d198-45e1-bf29-d12bcd57dc04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1338 2b6e7fec-6fbc-4d12-a8bf-0504d3f3d69d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1338 c611bad5-9441-47e9-a93c-e9ec0bdea787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1338 a943af53-7952-46e3-a442-56e9494973e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1338 0ed4ecf9-9c6c-420d-ac6b-e9d10b4334a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1338 43e4a6c6-0e0c-4f2c-8a1f-c75a66298f3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCAA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h55EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1339)");
    end
end

unit.assert_eq16(16'hCAA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1339 fa3faaa7-da9d-446f-82c4-e38ab836663d)");
unit.assert_eq16(16'h55EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1339 52a7aeeb-3041-4e0d-82fb-913dee6f79fa)");
unit.assert_eq16(16'h55EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1339 2333f18f-45ce-43ed-9405-983762cd836d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1339 a27f6197-ef60-4193-bba1-92476581d9fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1339 7971ba34-b4d2-4fd8-b955-e405237cb921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1339 8e4faa3f-49da-4a68-a8af-d3dbca89aa4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1339 27314295-c751-4b10-bf08-85762d442605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1339 c0e41ea8-5b76-4230-b029-83cb362f4952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1339 82ca49c1-c0aa-4d59-90db-a8d703e35275)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5A66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7E81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5D9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1340)");
    end
end

unit.assert_eq16(16'h5A66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1340 919d80ef-7f8c-4ca6-8d45-a59fbc9f26d3)");
unit.assert_eq16(16'h7E81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1340 2f6e6543-37e7-4154-8080-8ab7d718e6d9)");
unit.assert_eq16(16'h7E81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1340 c9d6684e-b891-4021-8b57-d3bd1ef5fdfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1340 e64899b2-52da-4e89-afc1-1d7a21bb0261)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1340 486f32b8-5e9f-477c-90f5-a179faa469a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1340 75b8ce00-3f55-4929-90fd-faa67420c3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1340 abd69225-4ba7-479a-b30c-a4ee9fb7a8b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1340 a1693bce-9b88-4af2-bddb-bb89d7196719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1340 26e76c98-e787-4c36-a5c7-90b7cab07253)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCDCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA589;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBEAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1341)");
    end
end

unit.assert_eq16(16'hCDCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1341 f01dd362-bbd8-4d93-a36b-5b26c548de64)");
unit.assert_eq16(16'hA589, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1341 b69f090b-7ee3-4b3a-8485-30f47ef7999e)");
unit.assert_eq16(16'hA589, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1341 26dcebed-ff23-455c-9538-1d1a3887dd18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1341 353dd384-30fc-4a30-95ca-c555f5217240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1341 c964851e-fa94-413e-9001-1ed0f10a2a16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1341 040b6f61-2c9f-4f5e-9caf-d40125b29832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1341 eab69424-3d3f-49f1-a30a-9af70a63c94e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1341 1dc5d0dd-7d10-43cd-86cc-3aa6b5bd91b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1341 952f6bcb-a6a1-4367-8c61-067a49075ed1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8211;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1342)");
    end
end

unit.assert_eq16(16'hBC80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1342 5606014d-e9b5-4c54-afc6-a69ebd91457c)");
unit.assert_eq16(16'h10B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1342 613bb746-fa6f-4443-b811-5f71147a38df)");
unit.assert_eq16(16'h10B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1342 1b59ca8f-bc93-4b71-a245-83789c9b0220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1342 2b41c98d-33dd-46a3-ab24-80a1eb71adc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1342 bac33ab5-8356-453c-8848-3aa66e5cec5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1342 3c7c96b9-ef22-419b-ba74-e53f0402afbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1342 3cb48ca3-092a-4b33-98ed-9d5c02be67b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1342 135ad329-a5b7-4dea-85b6-16116d90179f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1342 d660cf4f-403b-47d7-8b2e-a6bce2592a13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0255;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0956;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEFBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1343)");
    end
end

unit.assert_eq16(16'h0255, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1343 b1d199f0-2a4f-44d1-8e05-8630c3566844)");
unit.assert_eq16(16'h0956, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1343 0c80ab1b-6d23-4115-b75a-8a76d5ca4f38)");
unit.assert_eq16(16'h0956, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1343 d0c36e00-51f2-4c87-98b8-2d97d63ed748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1343 4dffea76-3ca3-4cb8-b9e4-7278406d7b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1343 9ee92b6a-bfab-4c0d-936d-69585d0048d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1343 d117c7f3-71f4-4f64-890b-2189b4144cd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1343 6c5d48cf-64b9-400e-8c3f-e0a45caf3749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1343 15f584f3-be8f-4ebf-a5f8-1f55141e29cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1343 eab95f13-620c-4f97-ab27-df4d4b876824)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h468F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h152D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1344)");
    end
end

unit.assert_eq16(16'h3C6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1344 d8c24f12-96f5-4eff-b7cb-945d5b63269d)");
unit.assert_eq16(16'h468F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1344 1d764df0-5360-4a32-8763-a1ba7df07997)");
unit.assert_eq16(16'h468F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1344 5ab05b30-90d6-4e70-b3a6-3977e8613d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1344 b956dab9-38ab-4086-a001-39e240f19871)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1344 6a5a7346-c061-4286-8bcc-d44ed3bfadf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1344 cc2d7435-f938-4fad-9452-b40e1a88d5ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1344 061c4ce4-6eb4-4f55-bae8-ae60933c67fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1344 237190c0-a90b-4aeb-bfb5-6d9b8afc7ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1344 ad9bcd03-9192-45a7-b727-a0adce57a318)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBFA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h522C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1345)");
    end
end

unit.assert_eq16(16'hBFA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1345 0e3bb40a-8602-4299-ae48-a7f9a300f274)");
unit.assert_eq16(16'h522C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1345 59ccd256-2cc5-4791-af32-4d19a3759d94)");
unit.assert_eq16(16'h522C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1345 c42e94e0-3d75-4e41-b0b1-356cee07296f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1345 f5fe4a0e-fa21-465b-86af-8a717e57ff1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1345 e79ac313-7f46-4cf1-b99e-33d06f17542f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1345 6b6f4ee0-cbde-4eb6-a431-be03c364a3d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1345 a4b9fa3f-85d4-40a8-b16e-1a32c909b10b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1345 6661febe-7656-4f9c-8cb2-18562110c524)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1345 7f7b2e6b-5e3b-48a2-a017-2a92bb99d4b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC31A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1346)");
    end
end

unit.assert_eq16(16'hC31A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1346 dcb08412-6aba-40a5-a82c-fd425c14add7)");
unit.assert_eq16(16'h6F70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1346 8c321201-9987-44e1-a9e1-25fe443490f8)");
unit.assert_eq16(16'h6F70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1346 9dc19303-6a72-4138-a7b9-1d4c6d8fa536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1346 fde67ee2-297c-470a-8e41-b36d2011e5b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1346 8f962560-89cd-4f25-8ba4-17dc7fcc9aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1346 4d2c61ab-5c7b-46d5-9e40-5ecf9a3fa2fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1346 0635799c-5945-4439-82d8-65f9a338ac56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1346 272a9ebc-fdde-486f-bea2-cf18721ddb01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1346 0ff3b302-9609-471f-9988-2d0601c80d38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h081B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEAB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1347)");
    end
end

unit.assert_eq16(16'h2D8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1347 5a7706db-0e7b-4982-9e7f-cc822c1c4188)");
unit.assert_eq16(16'h081B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1347 57eb77a0-6f58-424d-8b3b-7c337547de4c)");
unit.assert_eq16(16'h081B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1347 a62d404f-542b-4b36-8cb6-7263b97de54b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1347 697dccba-4b09-4c62-b407-fb361e1ee160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1347 ccf5f7ec-67ef-407d-a7a4-e551222ef27c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1347 6943e38b-4bcf-467e-b3fb-7b59ab3907fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1347 feb859ee-8e23-4f7a-8520-2af41b1a92ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1347 b0dc7b86-f524-4a42-b204-e410328a368e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1347 21061538-88a3-4e8b-8eef-ca2b065d4f47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h888E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBCB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h857F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1348)");
    end
end

unit.assert_eq16(16'h888E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1348 fa178452-cc91-4249-9fcf-faf218249e92)");
unit.assert_eq16(16'hBCB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1348 6463146d-21fe-49ff-8663-b3ae94f0297f)");
unit.assert_eq16(16'hBCB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1348 f8f1ab34-ec0d-49bb-a6a7-6bf66ddd7f73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1348 92bf16f8-145a-4f07-bd1c-ee475f62f003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1348 34a5a2b4-5dcb-4a6e-ae06-a89495457076)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1348 e0d88d07-82f1-46b1-9ccf-4ad4209be2ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1348 3dc39d0c-0332-431c-9afc-d4caf8a1846c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1348 6d0295cd-a96c-4d77-8fe6-3a7ab37ca419)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1348 957ddcaa-94aa-4235-b79c-74b057df9144)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB752;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9056;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h776F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1349)");
    end
end

unit.assert_eq16(16'hB752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1349 7a42a1e6-e7ac-499f-a465-a2c91381602b)");
unit.assert_eq16(16'h9056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1349 74ca7709-f6f7-4411-8c28-1431732a14c3)");
unit.assert_eq16(16'h9056, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1349 a02d3a08-88f5-4128-8ad4-ede13aaf128f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1349 90866dc2-e229-4138-ab71-5c14d2a077ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1349 84e0f575-a2d3-4a43-9be8-c3e25f631f6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1349 226cc10f-5eaa-4759-b8cb-f8d6484bb213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1349 bd61189a-b860-4226-b81e-0cfc42999804)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1349 f5d18fc3-97ac-4542-8647-a3c057b0b5e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1349 f47a387f-199d-4a81-bb73-3b9142166326)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBE72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1350)");
    end
end

unit.assert_eq16(16'hBE72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1350 ba11a577-6faa-4580-b576-c9c246f7550b)");
unit.assert_eq16(16'h2D8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1350 242ab5ca-609a-4e92-b8e0-597745587a4b)");
unit.assert_eq16(16'h2D8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1350 9fac9d40-6c7f-44a5-ac88-0a80e504f2be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1350 faf16754-09ac-4d43-8ae9-f3909761a772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1350 8e588afc-ff8d-406b-bf9e-71a74dc29e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1350 de1c87ca-5588-4391-9861-6cf26c1d1140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1350 3e19bd08-fc3c-4eb9-bec3-2e4ddd722c36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1350 5deadd9c-0f17-4d28-82b3-88bafd5b3640)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1350 ea5dcd7c-5f27-49ae-9c8b-4b6e26a1727b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD954;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD561;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1351)");
    end
end

unit.assert_eq16(16'hD954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1351 381d2c50-bbc5-4088-a4c4-db81758b33c4)");
unit.assert_eq16(16'hAFAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1351 f74675a5-625e-41ad-9810-0f524040f6f5)");
unit.assert_eq16(16'hAFAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1351 bb0e7c6c-2a01-4ec4-b208-fefb76936b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1351 b41fe862-4417-4526-99c1-8c2761a502d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1351 ff0035e4-af18-4dce-a106-c51c8a477399)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1351 122c1619-72d8-40b3-8b8a-194cd139f2dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1351 d1d19028-6597-4635-bc95-d7f7ad6fc55c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1351 9814959c-1462-49f1-a2ce-d2f4adb8d36e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1351 52605ffb-5427-4208-b038-b3a9b66689f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE40A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1856;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1352)");
    end
end

unit.assert_eq16(16'hE40A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1352 f631f971-1b6b-4c87-926b-c106c39eeda2)");
unit.assert_eq16(16'hBD99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1352 6b20a53c-4fa3-471d-a8fc-33284cd9a761)");
unit.assert_eq16(16'hBD99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1352 8869f4ba-e13b-49ff-aafe-632795440c1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1352 4b0f59ab-a0fe-409e-8e29-2c0faea711f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1352 f4fbeb78-0393-4872-a8e6-4b6d06977058)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1352 2f84fc02-e799-4434-b866-09cf556f31e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1352 181837b3-305f-4280-b3e7-4b48473bdcef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1352 e3e3ee4a-900e-4054-b59a-cb4d7444fe11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1352 0cba1470-8efb-4696-86fb-f63b01f1b963)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h027F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h21D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA468;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1353)");
    end
end

unit.assert_eq16(16'h027F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1353 92bd27b4-58ef-44d7-a1f3-a96a159834bd)");
unit.assert_eq16(16'h21D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1353 8e56693e-5ae5-41a2-9cc2-c1b921a1a65b)");
unit.assert_eq16(16'h21D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1353 bb04b618-734e-41ae-8a25-36b1c20d34e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1353 5308c673-bad5-4288-9b32-a44752fddc8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1353 d8965f32-b185-457b-aef8-0b3a4afca6af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1353 ab631026-5173-4563-ac76-248fd6dd5b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1353 aa7aee22-989e-4c04-bab1-41e8d20cc2ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1353 3ec38c04-5939-418e-a42a-067e8e0742c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1353 f0479750-bcd1-41a6-b2ae-bb936f74216b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h833D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h16A6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h648B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1354)");
    end
end

unit.assert_eq16(16'h833D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1354 4b869aef-a448-480c-8a77-2fc16a459824)");
unit.assert_eq16(16'h16A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1354 d002b6a2-8e85-4d29-9e1e-a01920df2462)");
unit.assert_eq16(16'h16A6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1354 91f2ac56-347a-4372-b9e8-f7a6ad3a9bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1354 de5371e7-0192-47e0-aba4-8dddde5e2c80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1354 0285bf6f-cd77-4c22-86c2-0aa62617a58f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1354 f387b1d2-8dbe-45c3-9d15-af406637ba2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1354 1c45b1de-60dc-49a3-abd5-fc3ce7fb2424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1354 6f2069d8-377b-4514-9637-502e97b963b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1354 25d80548-bb0d-489e-876d-904d0df35218)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5C90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7230;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1355)");
    end
end

unit.assert_eq16(16'h5C90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1355 c0568329-ee60-4eba-a9d5-db47e172e274)");
unit.assert_eq16(16'h1E92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1355 adc802a9-fa01-4045-9bf8-ddcb500721d4)");
unit.assert_eq16(16'h1E92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1355 ae2f528f-e56c-4d2d-bf04-d85958f981fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1355 7d6363b7-eced-495e-80fe-9d4cccbcb448)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1355 c61804c1-a229-4165-8900-224d4fdc8733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1355 a68e22e1-631a-422d-a8cd-7de5e3bcae31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1355 e0cf1584-f3a6-460e-bd0f-2094363959de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1355 6e75782f-9fac-451f-8ae6-506e291f627f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1355 b8ed40ce-2b82-4341-9b99-ea5685486742)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA325;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB79B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h17FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1356)");
    end
end

unit.assert_eq16(16'hA325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1356 81ab186e-3f08-4297-905c-86d05c3b8898)");
unit.assert_eq16(16'hB79B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1356 6a342c3e-37fb-4d46-86c1-57010df6b17a)");
unit.assert_eq16(16'hB79B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1356 db0f972f-f23d-4f16-a78b-956660a35836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1356 35baa3e8-924e-4248-85c8-9cae5da252a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1356 1ff78553-52a1-4252-b3ed-111ebea5d420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1356 8c97f1c0-0be4-4e49-aefe-766bdf480c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1356 e23d9e8d-75b9-412f-9f30-10db210bff91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1356 6667e5d5-5112-4a68-a0eb-8eb509355516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1356 6b41362a-6bfc-4a2e-9590-0e09b871c716)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h845B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF3A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1357)");
    end
end

unit.assert_eq16(16'h845B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1357 f24979bc-1944-4c20-8661-13b210006e8d)");
unit.assert_eq16(16'hCD3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1357 89fff6d5-1096-48b3-a038-0b4fb35b2e14)");
unit.assert_eq16(16'hCD3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1357 63769f80-b42e-4f92-b4bd-9efc6aa41c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1357 adb09bdf-ed14-413a-af8b-205c394251c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1357 25e42607-9d4f-4457-b208-d9e150d90dd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1357 1b5c6bd1-698a-4a71-823c-3bea21a22177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1357 1f1e7210-216e-4c5a-8bc1-c14d5331ae60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1357 8d4231f6-e2f6-40fe-8a0b-38443e3948bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1357 d73512c8-86b1-4bd3-abee-8c09671e8c24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDAE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1675;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1E80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1358)");
    end
end

unit.assert_eq16(16'hDAE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1358 7284025d-9ba6-49a4-b923-c657d816de89)");
unit.assert_eq16(16'h1675, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1358 fabb6cd5-9c0c-442f-adbc-29937b2415ae)");
unit.assert_eq16(16'h1675, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1358 d80cf678-834b-4970-970d-35426cf12b4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1358 229e402a-7c44-4493-b71e-13977f54228f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1358 779d5f5b-f7a4-45b3-a4be-51f5d40d7119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1358 814a65a2-79d9-4eb5-989b-6e10e9b2b7ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1358 3a0ffbdf-b1ce-46b4-8258-ac32e3fdc3a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1358 0931e63e-442f-4119-a2a2-1133870acced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1358 5088d48a-36e1-4f21-8e9e-93a5010e8d98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC2A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD815;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2A54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1359)");
    end
end

unit.assert_eq16(16'hC2A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1359 3dfddac3-c3b1-4ed7-92c2-1741d63dc99a)");
unit.assert_eq16(16'hD815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1359 6d22127b-20ef-4edd-8898-943b8c4ccd4b)");
unit.assert_eq16(16'hD815, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1359 5c869d7e-5675-4f26-a792-76fd73f6bf91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1359 ca725ab0-472c-402c-9634-f901e6979025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1359 545fa8a1-a53f-4b4c-95a4-34676922eac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1359 4f6742b4-846f-437f-bf76-57d35bbf2588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1359 14b3daea-77d8-4417-846e-07860f133fd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1359 47d53f7c-d6f4-4f0a-84de-b3c5fd06bd7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1359 aa7f2eea-f187-4704-92a8-442357347035)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8231;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8601;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0487;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1360)");
    end
end

unit.assert_eq16(16'h8231, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1360 fdf57494-744e-4a84-83ab-64c64e86b8de)");
unit.assert_eq16(16'h8601, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1360 0c9ca4dd-037c-46e6-8631-cf6621a89532)");
unit.assert_eq16(16'h8601, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1360 abdee835-51ad-4aac-a3b9-1d519312f620)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1360 2813bbc9-2977-4825-911d-ac40484c20ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1360 2f5ee9d9-c95c-42b8-915d-dbca8081e753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1360 eadae3b5-3342-4c94-8732-991206952516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1360 4757fc6c-7010-44a2-b0f9-073662a81530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1360 0924190a-9829-4543-b33e-2cec8a929416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1360 439a6ebb-1688-4282-abe5-56708f98e720)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA888;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1EC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1361)");
    end
end

unit.assert_eq16(16'h3E3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1361 00564e03-559b-4ca0-86cb-a87cca20fa60)");
unit.assert_eq16(16'hA888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1361 fd531271-4f48-41cc-bb4b-7517e19d3533)");
unit.assert_eq16(16'hA888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1361 92358485-b9d6-4970-b16a-fc0cc5951899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1361 c1aa1bae-008b-492e-9440-3ff2244f4d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1361 db2852fd-6746-4e8b-884c-755acdc3b6e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1361 b9df7a94-6743-4c94-9e6c-ded438287de5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1361 f9b67b54-2ade-4440-ac83-73e6d63ae40d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1361 3b03cefc-c4a7-4125-a5b4-d2440e0a64d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1361 9c713b47-e5bb-4861-9999-78235437418c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h05A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1362)");
    end
end

unit.assert_eq16(16'h8D8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1362 97a0c32c-1ca5-485c-9511-59ac9083d41e)");
unit.assert_eq16(16'h05A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1362 a421ce5b-6e33-4cc3-a263-dddaedc54349)");
unit.assert_eq16(16'h05A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1362 8cbbb858-d5a1-4b23-8df2-fb1bc33b1dad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1362 a4a6db5c-295f-4b7e-a4d1-b31fb5e28857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1362 4edca204-d8aa-4858-a3fc-4455dc04c289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1362 b72273f4-4109-41ad-89a0-270335b6e743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1362 65961680-e2e3-4f8e-b91f-7d8fac7e79b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1362 e7c9c644-00d0-4d41-b392-6e222da57e4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1362 6c5fc953-e748-4462-87de-371ccb62594b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h035D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1363)");
    end
end

unit.assert_eq16(16'h2BF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1363 99c968ea-f86f-4be1-a4fa-f3f903260ec0)");
unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1363 ff3094e0-7a41-4cf7-a501-de66af5a592b)");
unit.assert_eq16(16'h035D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1363 190a2128-0d22-4720-90af-84e0fec8d1ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1363 19b8498b-6e3d-4e96-b17a-0d64383f5d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1363 c674a1d2-f451-4931-a4f3-5e71be5c98b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1363 bb6dd1d8-ca01-44c8-bea8-97544299d187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1363 698b38df-81cf-4fea-bfdd-b484efd57da8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1363 22d880ab-b856-43d0-ad7f-d3720efb506d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1363 11b1f333-5a0d-4c26-9d2c-cbb238d44c5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA41A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h21AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1364)");
    end
end

unit.assert_eq16(16'hA41A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1364 dc154268-1885-492c-8901-3946675325b9)");
unit.assert_eq16(16'h21AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1364 06a355ca-2e7f-4bb3-9226-90860a9d59f4)");
unit.assert_eq16(16'h21AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1364 2a8db0c4-6680-4f07-a55d-bc03f2a55f58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1364 697b02a1-b0f6-4867-8f49-eb1a007810a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1364 8edd173d-02ff-49c5-8f56-a698cb38daa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1364 1a99de9a-a259-4822-b978-dd0dd052ee1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1364 6b944445-a6a1-4b67-93af-466127968fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1364 e652c82d-ec28-4e7a-9ebf-3b7a7a39e7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1364 b8c70ef8-6f5f-4cf8-bb46-ac5970ec5402)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h88B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA53F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1365)");
    end
end

unit.assert_eq16(16'hDD6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1365 1a287ea1-dc31-4131-8972-c0e2469ce7aa)");
unit.assert_eq16(16'h88B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1365 bff0adcf-7f37-465b-97d1-3c444ebe1a8e)");
unit.assert_eq16(16'h88B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1365 4bd0aa85-9052-40a9-bdcc-c4adc15d003a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1365 73de1a72-4c11-472a-91bf-840dff640bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1365 1b83b2d7-5fda-4b46-a925-c7df9a75f706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1365 6b7e4bd4-e268-4155-a048-4192df14fdff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1365 7da549a5-06ff-40f3-b5c4-092c5b17bd5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1365 813154cd-e53e-455a-bb9b-f80b302feb24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1365 690e87c0-f471-442f-84e8-486d5e2e40d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2AD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9614;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h996F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1366)");
    end
end

unit.assert_eq16(16'h2AD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1366 d86f45b3-1d4f-4137-90a6-37da83492500)");
unit.assert_eq16(16'h9614, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1366 1744f4af-6277-4300-980a-61dc7e5f5464)");
unit.assert_eq16(16'h9614, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1366 2465d143-251d-49cd-86f6-956092f44413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1366 65cad3a2-93c2-457f-937f-5d78deac6d03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1366 ef394cf2-4eaa-4778-891e-72d97223a9a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1366 2d104376-a924-4a6d-b571-2b86ea8bab55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1366 2fda681a-3ce3-4042-87f3-134e21bd283d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1366 ed9cdf95-fac1-42da-8482-38af4222e386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1366 2c0de5b5-279a-4994-ad89-e4311aceecda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9058;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0720;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h219A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1367)");
    end
end

unit.assert_eq16(16'h9058, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1367 8ef89fa8-9cca-4534-a693-e54faba22ffd)");
unit.assert_eq16(16'h0720, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1367 1e327b0b-f14b-47e1-a7c2-be0c778eff23)");
unit.assert_eq16(16'h0720, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1367 e7004778-0566-4169-86dc-7bfa31d7cb49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1367 04357f9e-4eb1-450e-ab16-f1b7f0687712)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1367 cdff7e5c-5378-4626-94e0-7bd5e2cbb6d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1367 c4fe0f33-ccbc-4e4b-8ac2-46593bd6d3c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1367 28092880-e360-40cd-810f-8c878df6500f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1367 9578a2b8-30ac-4cd5-a523-dd357ec654d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1367 2e26fbec-5cb3-44be-aa75-e6455c2de88c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE889;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h41DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1368)");
    end
end

unit.assert_eq16(16'hE889, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1368 93526fd0-b1bc-4f92-8a22-b835f6b3b3a8)");
unit.assert_eq16(16'h41DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1368 2140a3c8-7254-41af-83cf-5e6140cc806d)");
unit.assert_eq16(16'h41DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1368 0b0a9c20-2a82-4643-ac73-534cd42acee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1368 0a4b0089-2411-456a-95ed-4a7c2485b5c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1368 88b8e021-c233-407a-93af-a1d8bec8790c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1368 b4b4b920-abd4-4510-856d-c5d5f86a8d04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1368 ffd13334-3657-4435-95db-eeb3abfa143b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1368 60e8f6d3-d627-4a52-b61b-d6c2375042cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1368 ecb4dfea-838d-459a-a31d-5aa3a1350d47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h810C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h16CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3AB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1369)");
    end
end

unit.assert_eq16(16'h810C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1369 c85815d2-4735-49ce-9e76-c1e998fc677f)");
unit.assert_eq16(16'h16CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1369 47cecc37-3ea9-4d83-bdf2-cc1a80412509)");
unit.assert_eq16(16'h16CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1369 2c639a8b-6a49-4879-99ea-d0d88e25fe84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1369 153b82b3-c82f-4d3b-8595-e45f1f156175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1369 a676a333-da35-4a08-877b-3697809ddfa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1369 d1e4272c-274a-4dfc-b368-1ee44fde86c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1369 65b67818-b0f6-4626-8525-b72da3004d83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1369 5ac4b634-75fc-44a2-9112-b1a014a7ef05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1369 e879e7f0-b78b-450d-946b-09b6a199a576)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h15C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4E2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8717;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1370)");
    end
end

unit.assert_eq16(16'h15C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1370 19b931a3-61dc-4add-a394-316434f812e5)");
unit.assert_eq16(16'h4E2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1370 65237550-3b45-40cf-ab29-e5967c372482)");
unit.assert_eq16(16'h4E2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1370 a45ede53-77e7-44e5-8d87-59cc53f1f1fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1370 9ab5c9ab-b72b-4dca-849a-1e7a5b855beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1370 ec2088d0-6a6f-41c4-b4f1-f97bfcfa3744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1370 5bcd3cd4-b482-4116-aa0d-0d7ce16d3aca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1370 ab6eb0dd-1eb5-4f64-bc43-274128bfece9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1370 2b75b356-c1b8-4934-bb79-48423c615b09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1370 dc3aa39c-3731-4df1-b771-df97fc7002bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h83EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h357A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1371)");
    end
end

unit.assert_eq16(16'h83EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1371 2c561125-c8cc-41af-bacf-6a4f0db42b04)");
unit.assert_eq16(16'hFDE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1371 c7c08597-044b-4aae-be16-e6f799b82d27)");
unit.assert_eq16(16'hFDE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1371 074f3bbe-4944-406b-b91d-cc3d464626eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1371 4d875b7e-ccf2-4a70-bc00-656e2e5bb8de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1371 a7be672d-f7f1-438e-8e17-3db410f1bdd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1371 fa30fe34-ffaf-41cf-b911-0a390afc498f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1371 f9da5d8c-2173-4ad9-8bce-47a9755e86b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1371 4a04e99e-9570-4b98-8856-5a09a3d795f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1371 c5c80e97-f9ee-4156-8d32-40b2413bcd07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1372)");
    end
end

unit.assert_eq16(16'h1B7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1372 1f510827-af47-4f88-b5b6-1ba7432e68de)");
unit.assert_eq16(16'h0AA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1372 5e0bd451-cb63-48c6-a07c-3f7c8b2e9777)");
unit.assert_eq16(16'h0AA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1372 fdd499a4-944a-4aac-a831-b6035e2b757a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1372 c7a889f9-269a-48f9-b259-7282947d1357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1372 449dec1d-15f7-4f2f-afad-772ad51f06a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1372 fb0be7b0-bda8-4f51-8e7d-b5a967549c25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1372 34ba68e7-9f6f-4839-bf9d-ed4977490e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1372 45fea6d8-0470-4c13-8cbd-47ecac322929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1372 f60abe75-7f9b-47b5-9dae-52e5a3a3c5b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB57D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF4F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1373)");
    end
end

unit.assert_eq16(16'hB57D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1373 823d5f21-38ee-4c31-bd2d-5f2cbf0486c6)");
unit.assert_eq16(16'hF4F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1373 803c7fa8-0fd5-4d0a-abed-9c654743c79d)");
unit.assert_eq16(16'hF4F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1373 92675cee-a945-4f24-ba1e-3b90c9b7c5ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1373 c11d945f-319f-404c-ba68-35e3005f8adc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1373 4440aa73-68d0-4aa5-b454-b298cb4cdc28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1373 3abd0eee-48e2-4df8-b8e2-f2225cafcfe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1373 2ac6ec66-1b4a-4858-beab-bf8bcd002379)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1373 ffbbc4dc-7b1e-41ab-984a-01ec68f46e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1373 3106b351-a76a-4b98-b873-6d9d827b201b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9643;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h39EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1374)");
    end
end

unit.assert_eq16(16'h9643, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1374 89aeced4-564e-4ecd-b311-f66b38dcad06)");
unit.assert_eq16(16'h39EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1374 7edcb9cf-b438-4295-ad91-20f396a65ac8)");
unit.assert_eq16(16'h39EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1374 ccc67fbe-cda3-49fd-9f40-5b203ca8e8c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1374 37f200fe-4637-4d4c-bc7e-ee3dc1d12a4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1374 6ddb982a-9ce8-4203-a50a-29751234a781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1374 b83d7c44-53f5-429f-8a7a-9a7e288bab0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1374 0a7faf63-46d9-418c-a6aa-77f5ed3bb19d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1374 f58af6a1-a85b-415d-9aa9-41bb82aa91be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1374 e49b1b26-6884-4020-85ac-c4a94525f733)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC767;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB160;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h34F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1375)");
    end
end

unit.assert_eq16(16'hC767, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1375 69044381-0ab6-4342-946f-45da28448c69)");
unit.assert_eq16(16'hB160, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1375 26931224-fdcf-4a21-948e-f5422d8e5151)");
unit.assert_eq16(16'hB160, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1375 82a8e47c-7d3f-4e4f-b7ae-fee975592e51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1375 eed66beb-1b1a-45e8-9d8a-bdf24c560f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1375 d81bcff4-14c5-4013-8deb-46c899f12fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1375 84d680c2-d30b-4e8b-8f11-af795600378a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1375 16091d89-4ba5-4fd3-aec4-607aa697646c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1375 533cf1be-fbd5-4666-aede-ef356582c6d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1375 c386298c-0ea3-41e2-88b3-55b91c497b05)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7358;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h629C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA53B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1376)");
    end
end

unit.assert_eq16(16'h7358, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1376 87fb7519-339e-4729-831b-12c16b016c4f)");
unit.assert_eq16(16'h629C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1376 99f68689-b381-490a-8397-b61e81f257de)");
unit.assert_eq16(16'h629C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1376 270f4dbb-1fba-4ef0-9458-1ec155477cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1376 e6430691-8704-456a-8d7e-15778cfe8317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1376 da41ee81-ce7e-4460-87b4-cf401628815f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1376 5f3b394d-5566-4e24-9caf-a257464666db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1376 fb19e2c7-37e1-4172-8d01-99f244325d9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1376 99920c2c-b652-4d64-8367-00d6132b66b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1376 e9f9e818-27ce-4ed0-ba63-8ed63ddaf3fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8939;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7CC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1377)");
    end
end

unit.assert_eq16(16'hEA2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1377 fb1ad564-2cb7-44ac-a412-ab4250da4ced)");
unit.assert_eq16(16'h8939, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1377 792af2c2-8160-48ef-ad3b-011f249dc47b)");
unit.assert_eq16(16'h8939, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1377 5dea4f7a-553f-4aa7-a654-fd5baf000d2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1377 455d8edf-6586-4eb5-80b5-1d67eab2f1b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1377 ee7690b3-074b-42c0-be91-70077bdc6b22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1377 0ef7866d-9e8a-4edb-b6d3-40f2cba4b5ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1377 3e0e7555-92e2-4b32-9c59-0545a38197c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1377 94419919-e630-41f7-8109-6427e874e2ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1377 72a21867-b23f-45f0-af7f-fd44c7773ab6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h812A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h17C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1378)");
    end
end

unit.assert_eq16(16'h812A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1378 5cd791f1-1653-4cf3-b1dd-d92b2c283c04)");
unit.assert_eq16(16'h8E8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1378 6ed6cefb-4212-44ba-a13e-934d5ea9136c)");
unit.assert_eq16(16'h8E8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1378 a8c1542b-ca6e-406c-a0fa-5e80a8d3cf1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1378 9b43a52d-6ddf-43f0-a12d-a75f5152885a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1378 e349006f-d3a7-4f62-8b42-a6320c972be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1378 4524483f-5d3f-49a7-bc75-f0e9e50313fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1378 63de123a-6abf-4852-a2ac-c97d166b6045)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1378 cd4b901e-0ae1-49ce-8229-7e72c0e147c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1378 fbb23931-7cda-4c5d-8c1d-a7b3fd23f1d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5BBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h29D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1379)");
    end
end

unit.assert_eq16(16'hDB65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1379 eb35ecf8-7890-4b6a-a998-dd1670d3fb3a)");
unit.assert_eq16(16'h5BBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1379 152623f5-f744-43ea-b44c-c2fe85ce7978)");
unit.assert_eq16(16'h5BBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1379 996738b7-01d8-4be6-9fba-e88de61cddc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1379 64e8366b-665f-41e1-b608-5c07fe8c3984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1379 1527e3c3-686c-466c-8cd1-c738aa948782)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1379 70f97c6d-1bd0-4138-b2b1-5d74da2cbb45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1379 b84a3e9d-906b-4eaa-b61b-75339b84912b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1379 be2fe30b-19e4-49e9-9ef6-e74ce9e1cdca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1379 1d26981e-bc11-4cb3-83e8-72251e732680)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1894;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h386A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5E7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1380)");
    end
end

unit.assert_eq16(16'h1894, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1380 350f8e54-ab42-4893-9cd1-365b9a7c43e7)");
unit.assert_eq16(16'h386A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1380 9e8742b3-bda1-48af-8fdc-0ecf00f795ec)");
unit.assert_eq16(16'h386A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1380 5bf02cb1-14c2-488d-9b0f-febb848d698f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1380 0400a06f-ff86-4bb6-a247-3253ea58a761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1380 4626aba2-29f3-48f3-8c76-eb4f5b87ad9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1380 cb888286-288c-4a7e-9148-613b4e9f66a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1380 80244ec1-6974-47b4-a4b3-b1c96a60c75f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1380 b64f5692-1596-4af0-92ce-764580601586)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1380 0d5132da-8a38-402f-8d93-74fc101cef48)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h315A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF960;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE39A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1381)");
    end
end

unit.assert_eq16(16'h315A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1381 3e728950-78ed-4dcb-9c13-ea89a7bc2f96)");
unit.assert_eq16(16'hF960, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1381 45eb6128-b596-406b-8f50-c8698ea0bce1)");
unit.assert_eq16(16'hF960, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1381 29aa050c-9d2e-4581-a4ad-543d52769bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1381 30f210e0-fc2b-4671-b90b-7a7dcd2fd2fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1381 7989c1f7-f7d9-4987-a093-3409a0110be8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1381 d76afd2b-32aa-4774-bb19-c72ac9388543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1381 4c57db77-5c89-41b0-b9af-72b6ad1424f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1381 1a5c1c53-7493-4c23-ab41-f1d1de7bd3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1381 95223e90-1a26-49a7-a4ac-62cc06b58c84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFA50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9A05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1382)");
    end
end

unit.assert_eq16(16'hFA50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1382 fce92673-cd9e-4c2e-8724-470e2c97c3bd)");
unit.assert_eq16(16'hFC22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1382 880e8445-5a5e-4484-afbe-39e5b5846dad)");
unit.assert_eq16(16'hFC22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1382 4f9ea24c-26a1-41a6-9899-3b14f4705350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1382 ad069ae4-cd4d-48f3-8e88-8e3964aa25f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1382 5d29239f-b481-441c-b8c0-29dbf400128f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1382 9ef077a1-472b-4a40-a1f2-b94c6168df2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1382 1dd31659-9ef6-4b0e-af0e-2c871c392bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1382 6e2a8838-261d-4a50-a412-f71f546a04f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1382 ccdb7c8f-33ac-4ea9-a255-4dc690140ea7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE068;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC7FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1383)");
    end
end

unit.assert_eq16(16'hE068, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1383 7e8d30dd-d4a3-4457-ab82-71ae58580669)");
unit.assert_eq16(16'hC7FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1383 1720261a-65b7-498e-8cb6-607707e88c45)");
unit.assert_eq16(16'hC7FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1383 af689842-eb9d-4b72-a330-f58a734d8131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1383 6f10a808-e397-411a-a3fc-bfccaff537e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1383 d78f5c82-5472-443e-889d-111723f8fa0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1383 cfcefa34-84a7-40aa-8b3f-0848b0a3632d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1383 bb1984db-f060-4db5-a2d5-9e8cc8ef7ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1383 3e147710-88a9-4d66-85da-2c83f6e19cd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1383 3f157d17-c097-43f6-909c-9c99899c2d56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0A5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA68C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6675;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1384)");
    end
end

unit.assert_eq16(16'h0A5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1384 c38b3c51-1141-43be-b5d2-956aad45049d)");
unit.assert_eq16(16'hA68C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1384 7e6d9d30-4edd-4205-b365-7ed43c904b54)");
unit.assert_eq16(16'hA68C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1384 ab6396e4-e027-4664-8985-3c1fa192d9bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1384 c4690495-57bd-4292-b4c4-088f2295d1ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1384 c2852830-ce2e-408e-9437-ef474674e4eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1384 4c278dfa-9b40-44a3-826e-87d567de1b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1384 04d9f47b-7ea4-4081-a681-d4c4d3d4d4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1384 2197f134-bc51-4376-bb36-9bee933667e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1384 483f92bb-9b9f-4332-8f00-1dcf3a3186db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h48FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1385)");
    end
end

unit.assert_eq16(16'hAF11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1385 91749cc9-7bcf-49bf-8fa5-5b70a2c26649)");
unit.assert_eq16(16'hA3D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1385 f8fd1144-3bb5-49db-be89-76eebf8330a4)");
unit.assert_eq16(16'hA3D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1385 b693367f-b04e-4120-accb-c81bdfb748f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1385 618f7fe1-accf-4d4f-8c97-3c75635633bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1385 8f25b45f-ada1-4d70-8e8c-b73ee37d6f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1385 61717bc3-37d0-47ee-bfdd-bceb689d3acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1385 9f80a6f1-9b45-4fb5-ae0b-a86fdc6ae2e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1385 35c724a4-9f50-409a-b5d8-793dd0136337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1385 b395938d-bae3-488b-a2ab-5464371e7fe1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0D53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h65AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE99B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1386)");
    end
end

unit.assert_eq16(16'h0D53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1386 452e7d1d-6ac3-405a-aca2-fba7d30b9684)");
unit.assert_eq16(16'h65AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1386 b818b05a-fce4-408b-94c7-2e08108eb715)");
unit.assert_eq16(16'h65AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1386 d6add1a2-ed27-46a7-9fba-0cd607d074d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1386 2d8070b3-3078-455b-913e-c6be93ab3e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1386 5222a947-8f65-4223-8985-f48521e49c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1386 e5d9ba23-5829-4edd-a4c5-02b7aefe36bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1386 9033dc2a-eaf9-46be-b90e-9157f2aa674e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1386 f97e07d7-27a1-45cb-81d9-083bc237fb45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1386 6c742a30-835f-4356-b58c-d661bc6a6e63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h74EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7EED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3EE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1387)");
    end
end

unit.assert_eq16(16'h74EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1387 9bf63874-9282-4e94-a242-af9231924855)");
unit.assert_eq16(16'h7EED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1387 a2b92902-37df-4875-8997-362014a5de91)");
unit.assert_eq16(16'h7EED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1387 02d7ff96-9586-48d6-89c1-573fa24c43c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1387 5cf74b66-9ea9-4169-9a3e-570ff7e96265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1387 693559cf-89da-4047-97af-8510329280b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1387 b770738f-0fe1-4e58-98ab-9ded22cd685b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1387 f6af3e36-1b6f-4c95-a6d1-1ceb3f832244)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1387 df596dbd-ac63-44fe-a914-37bd51e3433e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1387 1ec6f227-0a97-4f20-bf73-7b4e451fc2a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD8E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1388)");
    end
end

unit.assert_eq16(16'h0E55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1388 4f04007a-4d24-4f3f-8ae9-ac528101e7b6)");
unit.assert_eq16(16'hD8E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1388 3788821b-152c-4417-8701-37ae7801b7e9)");
unit.assert_eq16(16'hD8E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1388 4f9089f9-aa88-4096-a304-6c974e092172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1388 4cd6152b-fdbb-44d0-97da-22be12c63455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1388 2bc2da9d-3495-49c5-8234-435abc2c4704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1388 96726044-6ef3-4654-8a66-2d936775afb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1388 eca9d472-4449-462c-ade2-084660b09a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1388 6ebd13d1-3e0a-47e0-9249-49420d585ab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1388 a7cc3803-d00b-47b1-b748-144845d75c79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2797;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEA70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4FBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1389)");
    end
end

unit.assert_eq16(16'h2797, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1389 a4d538de-5071-4a82-a37c-111c0cce6add)");
unit.assert_eq16(16'hEA70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1389 807b0142-ee48-4601-a19a-738d79be02a9)");
unit.assert_eq16(16'hEA70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1389 94ba9684-e693-4f8d-bb5b-41ca3e7de9b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1389 9c4201c2-81f4-4451-9fc9-b91fda8e89ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1389 fa08e6cc-e831-47b6-8dd2-a6a783c8776c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1389 ba6756eb-d129-4f16-8fcf-c791cfc61872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1389 a1b15165-ab44-47cd-863e-40ec14866063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1389 c255f8e9-d6e4-40a0-99dc-ff979841efff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1389 8dc18932-6458-4429-95df-bc0e1444c47f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF0BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h91E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1390)");
    end
end

unit.assert_eq16(16'hFB35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1390 4f8434e4-45ab-47da-a456-16c1b77be9d5)");
unit.assert_eq16(16'hF0BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1390 dd98d033-ec95-4562-beb6-fb935460ba60)");
unit.assert_eq16(16'hF0BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1390 4bee6e0d-8a8c-4842-b8c3-e9b0afb9518a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1390 41cfbd65-c15d-4456-a931-3e9f57a415a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1390 f15e4ac3-9829-4f9c-b863-5117eaf3c73d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1390 0dbd8c0a-b570-4403-aa8f-941171ad6812)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1390 763a3ead-efaa-4c8c-a619-6fd1f0a1d5d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1390 ee768b85-b37c-4363-a910-c1a52c2571c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1390 8851a997-9fc9-4437-8d61-649af790d837)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDDF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4F74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1391)");
    end
end

unit.assert_eq16(16'hCA23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1391 39235034-bcd2-4db5-99df-096cfea91e89)");
unit.assert_eq16(16'hDDF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1391 ee5fdd54-64b0-4301-b1fd-856657472afb)");
unit.assert_eq16(16'hDDF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1391 9655ed02-ea52-4a23-a599-814376118d69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1391 f225c4db-81d5-49ec-b241-d0650c302b49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1391 c5190837-dfb5-4018-a759-d980928bf779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1391 6c0771bd-3d2b-4acc-8f67-c31d9c9f9a0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1391 614409b9-9fad-4d8e-8b94-dc3f523d94f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1391 5590c17d-298f-4df1-b1f4-c430e8798983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1391 3366a0d1-2c29-4586-a719-21ae4b9c083b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1953;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBBF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h76CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1392)");
    end
end

unit.assert_eq16(16'h1953, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1392 f667b2b0-2218-4bd8-9504-c9694291ad47)");
unit.assert_eq16(16'hBBF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1392 1598e6e9-0053-4e14-aba2-9b27b4aadac9)");
unit.assert_eq16(16'hBBF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1392 cf6a382b-a518-401d-8298-c3380b6c3cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1392 cddd78ae-e56c-4540-90b3-f338977a971e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1392 171e926b-9fd3-4425-9c13-e0f77f168bb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1392 a30d344f-c010-4e18-ad68-1c21faf2617d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1392 3c00717a-1ff7-4ec2-a7ba-6595800c4fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1392 26277953-c495-4a8c-9c19-7ccb64e4d34c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1392 749e4bc1-4528-44c7-baf6-f10a004d4c4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5707;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7847;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDBA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1393)");
    end
end

unit.assert_eq16(16'h5707, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1393 016ff472-cb28-41c1-881b-d9411f0980fb)");
unit.assert_eq16(16'h7847, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1393 f1205f6f-70d3-4d77-85f8-8fbbee2f33dc)");
unit.assert_eq16(16'h7847, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1393 d556dd78-3031-4d74-aa72-82828153c743)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1393 d7992d5b-98a0-4e17-895d-105197563e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1393 67e01d1a-79a8-45a2-828b-1d9badd2b117)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1393 969f29df-e613-4507-826b-996e30f95963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1393 e4142c1e-e4a4-49e8-8d86-1a3998329ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1393 8accddb4-5735-47e3-8d9b-c74c278ec0b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1393 2049d7f5-4b36-4901-baf1-d91297a2528e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h51D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7BF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1394)");
    end
end

unit.assert_eq16(16'h51D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1394 f47d2c44-f4f6-4899-ac8b-e98e362d5fa2)");
unit.assert_eq16(16'h7BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1394 f185006e-b0b9-452f-8e0c-71f19b7d5f85)");
unit.assert_eq16(16'h7BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1394 1f5549f3-3bcf-461e-9f8e-04a39b5b4014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1394 83a7ee49-7ec8-474d-b49d-21b7c2173f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1394 2444e813-a490-4198-b838-0fae3cb9a927)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1394 51fe8211-0c21-43cf-b98a-e9b82ba99c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1394 9d4dd950-8642-4c2c-863b-8d798917b02d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1394 48d5e68e-d8e5-4355-b192-f52f4e8364ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1394 f3afce7f-db2c-424f-8538-cb5940722e45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF12B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1101;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1395)");
    end
end

unit.assert_eq16(16'hF12B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1395 a6a659cb-e5d1-4c62-8bb3-fe9d843e4859)");
unit.assert_eq16(16'h42F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1395 d44c0ee0-6858-4b93-a63d-c1b552d01778)");
unit.assert_eq16(16'h42F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1395 b13ee6b6-fced-48f3-ad44-86b78c718506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1395 af732f8a-11b0-4a7b-b486-f9f278ba3266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1395 47950d2b-4789-4b52-9fb4-2c0db66cda32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1395 f6ab2616-3eee-44c2-9b1a-36172c513ee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1395 cf3720ef-5114-4ffe-88ab-a970dbf8a47a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1395 c1fef72f-49ae-4ab8-9345-ddeb73c5936a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1395 3600aad5-6d52-4611-b060-74ef509b0ac1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h17EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h136C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1396)");
    end
end

unit.assert_eq16(16'h17EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1396 8b922980-caf2-4947-8e8c-af3e8c9bcff4)");
unit.assert_eq16(16'hBB52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1396 973a011c-7045-443e-a766-d075728c5141)");
unit.assert_eq16(16'hBB52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1396 23a9f1bd-3f1a-4e8c-bc12-4b2b4571d53b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1396 0c18a3b1-309d-426f-b50e-c50ecaf4e226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1396 d49c0a44-f54e-486c-89eb-0e827ab83bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1396 4ba0d563-6858-4b1f-9388-3a4822e8132c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1396 50f6228c-641b-4b0f-94f8-b368b14cd9df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1396 8ed62ca0-d514-4c18-9ec8-42538413952b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1396 7559c0ab-4180-4e92-b85c-82b43f5e1651)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0285;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h670E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC061;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1397)");
    end
end

unit.assert_eq16(16'h0285, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1397 d4249758-93c6-4242-9004-88c049d818b0)");
unit.assert_eq16(16'h670E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1397 83c88883-569a-4696-931f-a810c73220cd)");
unit.assert_eq16(16'h670E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1397 c4ccbb40-b06f-48ee-9c29-74f46fce8c72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1397 f31f1eb9-b4f5-4cf5-9b87-7f9cc4ee2fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1397 e33f4ea8-51bf-41e3-a2fd-04ae136abcb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1397 6d5f5291-dd22-4493-8fb3-b73c476b679d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1397 363249af-4e3a-40c4-9ddf-bfefdb237237)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1397 a6a3e65f-150b-47e2-ac12-39491990d542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1397 713d5162-3533-4d6b-9abd-7841a2355ed6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF621;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4C36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5579;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1398)");
    end
end

unit.assert_eq16(16'hF621, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1398 e55d99c8-77bc-402f-ad0b-fcba03d97674)");
unit.assert_eq16(16'h4C36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1398 68d4b49e-ae37-4ef6-b937-1b9c6395eff0)");
unit.assert_eq16(16'h4C36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1398 1a00d8a2-ce62-4041-b042-eaef77dc953a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1398 951dea8d-7218-46a4-90f9-8d15ef9e6e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1398 2c5bff8e-6af0-451f-9d4b-6165e6af8d4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1398 6081e84c-bac8-471d-9e12-4c2d9a645d7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1398 04d86769-d19e-42dc-ba60-b3e895365110)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1398 cc66e94c-d718-4d5d-bc50-153f8705d242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1398 9c4b3b0e-e4ff-439c-94bd-235dcbbcdfb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFF67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h78CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6DE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1399)");
    end
end

unit.assert_eq16(16'hFF67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1399 8f0ce03d-60ef-48ef-bafe-fbf48bc02673)");
unit.assert_eq16(16'h78CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1399 b53d8cab-bf07-4929-a851-efdd762af0f4)");
unit.assert_eq16(16'h78CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1399 ea80b24e-ae25-4c25-b196-591af567c3cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1399 a44292c8-04c4-49e5-9b61-af887241e4a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1399 25befa31-d339-425a-bda1-464ed3e0fd82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1399 c208b366-02c5-4d0b-8370-29870957bedd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1399 e3ac2bf8-96e8-4c24-8e7c-64e3fc67f711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1399 ae620757-3faa-4ed8-a4d5-5b223aa23385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1399 885f9a39-1b5e-4a22-bb79-41d1ff354276)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0989;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3104;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h171B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1400)");
    end
end

unit.assert_eq16(16'h0989, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1400 aca665a0-cf3e-457f-ae38-9f760e5305f3)");
unit.assert_eq16(16'h3104, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1400 28bdd3c8-8426-43d6-a967-c6cbddf0c0e6)");
unit.assert_eq16(16'h3104, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1400 6802992c-14fa-4201-a081-fa87dd17175d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1400 ba83179e-664c-4609-8c5d-7573277605c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1400 f8f4cb36-afcd-4cae-9010-8088db66007a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1400 b4a776d1-7a7e-457c-9ff1-b08be6a9fb98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1400 5f6fa319-e755-41fa-887f-4649e8c585cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1400 972ae345-b423-4659-b304-e40aa6d81e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1400 a658f6e2-5db8-4a0a-9bf6-f47838f6815f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h26BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h511D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h444A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1401)");
    end
end

unit.assert_eq16(16'h26BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1401 55646e05-d1c6-4d36-b9a3-c96b280c1296)");
unit.assert_eq16(16'h511D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1401 995decbe-7afc-4deb-82da-b5ddf860c203)");
unit.assert_eq16(16'h511D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1401 e3d24daf-58fb-4926-9005-5d2a89c05b02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1401 449bb8b2-3d72-4f24-9613-a5cfb973c238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1401 fbed7601-a0d4-4f9c-863c-1660cf8c84fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1401 4631a26e-549b-47c5-9ad2-8923b0b2984f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1401 fb1b7549-7f72-4b84-8c21-abf813140aac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1401 63598aa0-a4b6-44cf-beca-5c42c3612f16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1401 488e8e64-de81-40b3-adc8-1e2a44429c31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3133;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9F73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAB0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1402)");
    end
end

unit.assert_eq16(16'h3133, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1402 2e5353e8-2a26-450f-950e-08fa2e29a28d)");
unit.assert_eq16(16'h9F73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1402 9f89756e-581f-4d9d-ba41-128d0ce43b98)");
unit.assert_eq16(16'h9F73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1402 acbd7a30-3900-4257-ae66-dc934cfb82f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1402 f42f00a6-748b-4ff7-bf53-c1e36d7ebab0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1402 a37d3916-3da7-40e6-a60b-32111d0e1fc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1402 c716ec73-5bcc-44ff-85b1-c1fb3cbbb42b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1402 6c5f2d82-1ecd-4284-ad1c-758c8300c9f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1402 9bf331e9-53fe-455a-815a-1873224db3bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1402 ad479cfe-d5d1-4432-91c6-fc5a355d206f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFC9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h049D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2FE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1403)");
    end
end

unit.assert_eq16(16'hFC9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1403 711a0b5c-7389-4051-bb6c-eff2873b0f04)");
unit.assert_eq16(16'h049D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1403 55a1afb2-6758-4efc-bbe8-cf522dc95a3c)");
unit.assert_eq16(16'h049D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1403 1bc74bdb-9c37-446d-b819-1fc3c1c3c86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1403 606e44c0-66f2-44be-b05a-2d3deba3bc9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1403 ebace26e-adfa-4e92-a0dd-92b8ad44ed6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1403 d2680827-fc3c-406d-b269-22e970197f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1403 7316387c-995a-4fef-9331-7b6084b56d2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1403 fc26c282-5c79-4b7a-8d80-18f336539da9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1403 b9f2fa16-847d-44bd-a0a6-f48eb5819abd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0647;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1404)");
    end
end

unit.assert_eq16(16'h0647, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1404 e4bacb05-eb60-4b91-8fbe-af80a023ed1b)");
unit.assert_eq16(16'hE6AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1404 98de812e-04f1-48a7-b15e-1134d7b4231b)");
unit.assert_eq16(16'hE6AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1404 a2b08508-0401-4499-97d0-a2700f99b7f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1404 be8db12b-72d5-4c6b-b1c1-a891d71e7d67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1404 2b8585ee-f4a9-426c-ab32-0771c8849c15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1404 dd21be85-661e-4a44-895c-742491d8fe57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1404 08b4e877-4c1d-4159-a898-94de62934b08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1404 1e182a4a-1069-4d45-83cd-6e85c84ea03d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1404 6a6618d3-4ecf-4494-b057-37d4d5e43960)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h742A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE131;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h99AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1405)");
    end
end

unit.assert_eq16(16'h742A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1405 cb1561b5-2e95-4189-947a-75bd3e9f54e1)");
unit.assert_eq16(16'hE131, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1405 1eb3a0d1-c22d-41d5-a883-9ee200d4b5f4)");
unit.assert_eq16(16'hE131, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1405 dfc95ff9-7ac3-488f-8bfa-8102e8efb590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1405 390dae28-7377-43b1-97a8-422ed5a1f3bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1405 3c1f34f3-d3c4-48ca-b587-39648d0a3b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1405 0b6dd4bc-9f7f-42de-ba5c-1c751d948702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1405 50a34332-f838-4da0-be3d-44acc9bbdd21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1405 a96f1be2-4b3b-40d6-9e4c-ea0b40bcc775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1405 691f4178-491d-4866-b078-8fdb807786ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBDD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA397;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF4A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1406)");
    end
end

unit.assert_eq16(16'hBDD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1406 0fc1ebcc-61d3-4f83-8ee2-730cb676f083)");
unit.assert_eq16(16'hA397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1406 8b9d31cb-d785-479f-8959-85433c67a841)");
unit.assert_eq16(16'hA397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1406 17b1405b-490c-4e78-9965-37a84ed8e7bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1406 e4cfa282-837c-4e02-9fbd-91364ecabf68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1406 42eb1fe8-52fe-4270-8770-4b45248e6444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1406 43b0724b-b444-4646-8f62-216c53e0ac78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1406 7e425249-270f-44c1-82c9-a905230e444c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1406 70485261-690d-42ec-878c-47084dffdf93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1406 43b0d0ab-229f-442e-8446-0c00e0b9bad8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA155;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC14D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB822;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1407)");
    end
end

unit.assert_eq16(16'hA155, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1407 6d84d2a2-cbb5-40be-aa33-26522af66c72)");
unit.assert_eq16(16'hC14D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1407 3da8d76f-8174-456c-bb5f-53319f1be221)");
unit.assert_eq16(16'hC14D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1407 010be097-3f4d-412d-b9cc-f8a391aa4068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1407 053a0d6f-ce32-4860-a83c-deeeb33db049)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1407 396a49c4-9e55-464d-a8b6-da5acf125505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1407 3e2d4aa0-c79a-4088-a9cf-8cde2072903b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1407 a73865dc-840f-4dc9-a0b6-477c16118616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1407 247c53d0-6b74-4a70-b35c-27d200066bda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1407 394c3565-130c-43b0-8ae7-1942fcb7b45b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h68D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3CC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1408)");
    end
end

unit.assert_eq16(16'h68D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1408 b7b97f7e-2e79-4044-92b5-4ad3442e3f20)");
unit.assert_eq16(16'h3F8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1408 2f6bb9a9-db4a-4ffd-85c0-0aa3bcb3e848)");
unit.assert_eq16(16'h3F8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1408 a7f8474b-20ce-44c5-ada5-f64d17ea4cdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1408 b84c47b1-79ed-424e-9240-47a8c6034356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1408 e48ce8f0-eb62-481a-ada4-cfa7f5b2d7a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1408 7eb20f09-60f4-499b-bd47-9f42090ca1af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1408 d14b5233-a3ae-4291-b803-618df7858d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1408 2587ac7d-1f85-42df-b2d2-e4735f8e2741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1408 69698e64-bbc1-4111-ab23-f63ac42094b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5019;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h70B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1409)");
    end
end

unit.assert_eq16(16'h5019, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1409 393a0e9f-7034-4e3d-b330-0d649dda63c0)");
unit.assert_eq16(16'h6A93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1409 4fa74539-488f-435f-ac73-e8e0a23d4ae5)");
unit.assert_eq16(16'h6A93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1409 a7987061-b6c4-49e7-acbb-218dbbb4181f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1409 e51e2875-a80b-4a22-9d86-8eacbc3928a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1409 4177d9df-56f1-49cb-a0b6-faf840186843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1409 137dcc76-16ed-4ee6-bff0-7577bdc36da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1409 3afedd30-1a7f-41b8-b2f2-22976f081f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1409 0fffa865-2d72-43a9-baa9-517cfc8853ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1409 5a267c64-58d8-437d-b37a-ac401cc20c77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h94E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF1E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7B29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1410)");
    end
end

unit.assert_eq16(16'h94E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1410 40a39f00-3d87-4e4d-8513-0793a9a8ee22)");
unit.assert_eq16(16'hF1E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1410 2865b98b-65dc-4ce8-b92d-a8dc72f69fec)");
unit.assert_eq16(16'hF1E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1410 4c090048-7dde-47fa-99e1-721f4157bf7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1410 3e80c05c-aad0-4106-b3f3-8e0e5d022795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1410 d878bf51-6389-4d3c-8bca-639712af546a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1410 0f6f1663-dc0e-458a-8ff7-70b9c6a11fc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1410 21db1f95-24ad-4459-8e56-d89c42098e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1410 b42f0f49-f7f8-4bf8-8f6e-31f7e1ac136d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1410 1382464f-79d3-4f89-842f-bfaf88d2fc17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7B82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7E18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE657;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1411)");
    end
end

unit.assert_eq16(16'h7B82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1411 24725e32-d72b-494c-b000-f0ac19024826)");
unit.assert_eq16(16'h7E18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1411 64f93815-ffef-4ac0-b693-83ed786aacb1)");
unit.assert_eq16(16'h7E18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1411 32e644eb-0035-4ce5-b35f-f03419c57899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1411 0ece936f-0de4-4627-a694-af94714be0e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1411 06c4fcf9-62fc-4812-a4a4-25fb4dedf4f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1411 01527dba-9835-489d-949a-dd4d4c21b825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1411 ffbc22ab-8828-484f-a9d4-c2dd87f2c0b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1411 ee97ade7-9576-4fda-b6db-8f5023ac9fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1411 2fb873a6-2b00-4c51-bc5a-37b2a9689a03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0968;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6994;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1412)");
    end
end

unit.assert_eq16(16'h3A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1412 b8ffecd8-d74f-438e-a054-36935ad3b9e5)");
unit.assert_eq16(16'h0968, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1412 361df946-e895-4a10-8513-b36b7ded2118)");
unit.assert_eq16(16'h0968, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1412 8b78bb77-0efe-4615-9a4c-988672e68eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1412 f1f1530e-6bfa-4833-93a7-e391c0a2529b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1412 221021bb-5774-400f-b391-30a478433b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1412 9d4a6a1e-114a-4aa2-b229-b1bdc275da0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1412 7902f307-9ea2-4cbf-af38-0ec5fc298fe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1412 94f55868-c214-496d-8731-314f867c7925)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1412 c2dd1181-ee9e-4472-9441-0992b0824ad0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7CC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1413)");
    end
end

unit.assert_eq16(16'h6C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1413 05295491-0a67-4c58-9edb-22f40ec88794)");
unit.assert_eq16(16'hAA83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1413 da6dae85-4d5c-4587-903a-0d1fac7fcdf0)");
unit.assert_eq16(16'hAA83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1413 8b0dc570-fed6-4887-b8ec-dd32a7c35b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1413 33d399c6-f064-4abc-95da-0b7d73640e70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1413 90c1b186-0fbb-4d5f-b31d-c44c591f4cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1413 5539600e-0b3b-4c34-82a2-32a0653383a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1413 d9a40aa4-24d2-4c87-9b13-a142f619d120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1413 476f5424-931a-4ade-932d-683b2d8a69cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1413 ea4485b8-6693-4e1c-b6ae-585cf452859a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8AB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8BC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3141;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1414)");
    end
end

unit.assert_eq16(16'h8AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1414 9598078c-618d-4e13-9653-a1667125f9f7)");
unit.assert_eq16(16'h8BC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1414 d417a088-6ac8-4210-bd6f-08cc0d3cf4c0)");
unit.assert_eq16(16'h8BC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1414 8215a80a-f023-46bb-9ffc-1c7026ddc14b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1414 9d08bac1-8bb9-4a52-bf27-fc459e3e2740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1414 d25d4d67-a47f-4194-b68d-8d6c00f3f967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1414 996de291-aa1a-4958-9e34-376d28ea748b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1414 fc0aae18-3c4e-4b2c-8d18-75d67a101b37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1414 1b43eb71-d6ff-4e75-8f7d-f7553a7be9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1414 7c996aa4-2768-4f4c-9582-a6daaa19a791)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h01E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA802;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h95FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1415)");
    end
end

unit.assert_eq16(16'h01E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1415 6820899d-81a6-4f12-a88e-75ad8eaa2b52)");
unit.assert_eq16(16'hA802, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1415 5011ddaa-97e5-4ccd-80b5-8b82e4af152b)");
unit.assert_eq16(16'hA802, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1415 d27675cb-3f97-4c59-8132-6babbc518183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1415 585afe22-ef2d-4f2c-a53a-cf0d7097f601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1415 b6954353-10ac-4fc8-a09e-9435ff7fe78b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1415 cdc268da-d3f2-42e2-9cac-abee5b3b56cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1415 1c236e19-7347-4257-8035-a91c12deb7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1415 90f927d7-10ad-4ce5-a4bc-f587c61eed6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1415 05fa88de-ba71-4a4a-a5fa-a27d8290ab5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFA82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1416)");
    end
end

unit.assert_eq16(16'hFA82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1416 b34875e9-9a9f-4574-87f7-b286136df067)");
unit.assert_eq16(16'h9FED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1416 3971ee40-c044-44e1-8feb-2d1da5babae8)");
unit.assert_eq16(16'h9FED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1416 3f0f8163-f0f2-42e1-89cd-d57743b97550)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1416 b742907f-2d1c-4bad-9cb4-c038d24d515b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1416 7706af91-a90f-4f33-a2fc-a22684e1f4ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1416 829daaba-ad20-49ca-9cfd-c55854da6b89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1416 cc3d2dd9-f359-496d-ba04-7019d87e0bd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1416 ce3ef5e8-0f44-4bb8-a151-aa6bfa947b2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1416 b0f6f8f5-3f66-4b9e-92db-b44aa93b4077)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3F72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7500;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h706B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1417)");
    end
end

unit.assert_eq16(16'h3F72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1417 5590be52-7694-43a8-94ea-e2b7d0168062)");
unit.assert_eq16(16'h7500, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1417 e2a9e516-2613-4322-a611-9a29f053ca64)");
unit.assert_eq16(16'h7500, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1417 98a85081-8821-4b4d-8bf5-e54e7f846519)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1417 9a6dd835-705e-44b0-8099-2968b8714e35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1417 730f919c-6eb0-4f6c-b040-2dd1f8da2687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1417 f5a93366-0f5e-46ec-a2f6-e5644740a44e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1417 ad0d7e82-39c4-4c6f-8666-b096bd53c9db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1417 8b222035-dd79-4be4-8abc-5de6ba0eed1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1417 b15d9d9e-3047-4a2c-939f-c1a89db0bdb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7ECD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5141;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h298D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1418)");
    end
end

unit.assert_eq16(16'h7ECD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1418 cce52a0e-a3bd-4a4c-ade9-b16deb38fb37)");
unit.assert_eq16(16'h5141, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1418 acd9bec8-57c5-4683-a179-95e88c0d0d84)");
unit.assert_eq16(16'h5141, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1418 0dfff357-3d46-4486-b82c-fff67b3f3c44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1418 60ff94d1-5bb0-4c01-a8e7-982ba8bbe554)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1418 48e67197-9011-43b7-b468-cb2be03bb8c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1418 c2501d79-b239-4d47-9839-bd2c622eda0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1418 d00530d3-fe73-43e5-a687-faaa9a2f15b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1418 c893a988-f62d-4890-bf1b-93a8450f83c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1418 3da40e4e-1cf3-43ba-9a59-b9c065241b70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h621B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC153;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h452F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1419)");
    end
end

unit.assert_eq16(16'h621B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1419 4fb00841-32d3-4c54-9edf-dd3b190e29bf)");
unit.assert_eq16(16'hC153, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1419 e683c31c-c309-426e-83d5-afc0bdd2795d)");
unit.assert_eq16(16'hC153, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1419 dc75cd35-d590-4d7d-8b36-641dc1a6ca30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1419 5bce6842-d3e0-4923-9626-35545b8c2483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1419 52cde7b4-efb0-4bd3-8266-73fbcb0de3c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1419 23ac3586-b6f9-4a9e-b90d-5c8e76d8ae3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1419 bd48fa4d-509d-4e25-9d7f-50a163f2d833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1419 12305e83-c9fb-4e30-8fb9-77084bb0b404)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1419 ba98bec5-6a77-4581-ac5d-3cb22faee4ed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB337;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD5E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA29F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1420)");
    end
end

unit.assert_eq16(16'hB337, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1420 5b787b73-3668-4c06-af0c-1bac90c136f7)");
unit.assert_eq16(16'hD5E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1420 800c5c43-3363-4f4f-8fb0-1d3d44839c09)");
unit.assert_eq16(16'hD5E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1420 05e1322f-9cc0-43d7-80e3-381407148dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1420 bec83dc5-068b-4254-ae7a-6aa0ed44c464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1420 1522e2e3-63fa-4ec5-b412-3ff68d0f5a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1420 5fdd98b6-6e3c-4560-8e34-30d393eac052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1420 4e9d4e13-b1ce-47f6-ac14-2f540e0fd456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1420 1290d726-c4af-41fc-8d8f-1850a2291c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1420 66b4991d-6145-4cc4-b38c-7e7d74284cca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h337E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2322;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3A0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1421)");
    end
end

unit.assert_eq16(16'h337E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1421 f985f0d9-f766-4d80-96f2-a0f2e134bb8e)");
unit.assert_eq16(16'h2322, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1421 9a0df6b5-30a7-409a-9b4b-add9a372ad31)");
unit.assert_eq16(16'h2322, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1421 5fc5d7f0-a6ac-4ed2-bcf6-b0be709c7e57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1421 21552c29-87ce-4f60-8cdb-126e19d04919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1421 026380b8-9b0f-41bc-8ae7-947ba01a7eea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1421 f4444493-3b14-4f51-9b6d-2449fd85c18c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1421 6d9f5dcc-9b89-4f90-a6fd-173ae4df682f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1421 15040b26-5cff-41a9-a7af-cae7d332c392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1421 ed7345f4-fd26-404f-9fe2-fa984aece6f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA5DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA528;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h87CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1422)");
    end
end

unit.assert_eq16(16'hA5DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1422 67a1bc0d-64f8-4fa0-9714-58059cd3a37f)");
unit.assert_eq16(16'hA528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1422 fc13c318-e2fc-4e1f-93f4-c15565c17e70)");
unit.assert_eq16(16'hA528, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1422 eb53c703-f7b5-41dd-8416-2aef69979625)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1422 8ec5b0c4-57d6-49e2-bd28-49eb1575032f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1422 b06c3b5a-e315-48b3-a5c7-0237a6a0cc0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1422 8db1fa54-188f-4fff-8e25-be6f9095658c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1422 a6bf5e79-6233-449c-9b60-42fbbf6a6eed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1422 c1ef055c-2bc8-4468-8600-616f42c1ae96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1422 49d54cd8-6594-43f2-a771-d4a2cbd3fa32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h37E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCBCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4088;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1423)");
    end
end

unit.assert_eq16(16'h37E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1423 1aa018cb-2e70-4dcd-8cf3-d234944e0006)");
unit.assert_eq16(16'hCBCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1423 433216f8-d9ef-4ef1-baeb-0c5867e1646d)");
unit.assert_eq16(16'hCBCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1423 0e695816-87b0-41aa-aed2-2160295701e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1423 b40b2a06-c9b2-42d6-99eb-2dac4be4a917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1423 7883ab15-250f-474a-b2cc-6c37d756e4fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1423 a0d85806-9ad3-497b-8988-2dc4641581c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1423 8bdb64e5-b33c-4dd8-bb11-80c3dc975c75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1423 89ee954c-d5ca-4c45-82a7-015dc599576d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1423 ba371255-c86c-442c-b340-0a040c5499b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1126;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h81E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1424)");
    end
end

unit.assert_eq16(16'h2BB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1424 93bc6950-d786-49e0-9ea1-0a91301f334e)");
unit.assert_eq16(16'h1126, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1424 e3b50927-51bd-4970-b15a-b1599d5f2507)");
unit.assert_eq16(16'h1126, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1424 7a0ba822-6b35-411c-9819-8945cc367b8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1424 0867cfdf-4c90-44da-ad9d-806e02714731)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1424 45d7579d-19a1-44a9-ac71-13185a20ca19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1424 92422b94-45f0-4473-8a4f-e7ea15688d72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1424 74daf6a0-48c2-4722-b7ba-9b8a172a7920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1424 7eaeee13-42d1-423e-a075-7795c039ced6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1424 483c4420-7bcd-49a3-a52e-99651fc6d53b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE96A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3C65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB6D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1425)");
    end
end

unit.assert_eq16(16'hE96A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1425 e334c8d5-ed4e-418c-a63e-ef0948429fdb)");
unit.assert_eq16(16'h3C65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1425 3e7b4ea7-9e6a-4660-92a1-5a44fdd93fe4)");
unit.assert_eq16(16'h3C65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1425 e7674a18-b320-44df-baa5-a3d4c2054fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1425 dd46d087-3d1f-4f6f-9317-f891b9144d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1425 0609e985-4b59-4b74-8885-d45fbfdc386c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1425 f8b486c0-7404-4a74-9715-0b1fb0fe9288)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1425 362b3b6b-83e5-4424-b4f0-a6d0ce40be1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1425 2a9c05a8-0f2e-4072-b78b-e4efc1afc42d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1425 a1dc5aba-42db-4a01-94d5-c494692cad0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA109;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD09A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1426)");
    end
end

unit.assert_eq16(16'hF1DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1426 89680c1d-03ad-48d9-ae2d-acf7b146849c)");
unit.assert_eq16(16'hA109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1426 d068a330-8a56-4ed8-b7d6-324001cd186f)");
unit.assert_eq16(16'hA109, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1426 c983f6b5-05db-45c6-bff2-5b078ce82f4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1426 61a5113f-3efe-4835-9256-a99770cfb11f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1426 125a9d2a-4de0-418c-a4c8-a379cdd4bdc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1426 e5de515c-470f-4c65-a17b-cf1b748edea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1426 6cfcd48c-ee5e-4a58-adc9-f0c490dbace0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1426 e7ec2003-6d79-4f34-b9bc-d3012b2f1031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1426 e5c9e1b9-72bf-4947-b635-dcd61f6240dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h68DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB271;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1427)");
    end
end

unit.assert_eq16(16'h4A8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1427 cd68bd2c-5ad0-4b49-8978-3040acdcd06d)");
unit.assert_eq16(16'h68DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1427 c5a1b2aa-e9fa-420b-ba00-d4fad410e50a)");
unit.assert_eq16(16'h68DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1427 b69a9b80-c999-4e12-a1a4-7aa25a3e95db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1427 270ed212-98c3-4970-b95c-92ce24f0258e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1427 9866c624-10d3-4f2a-9439-ebea6fb9f9cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1427 bce81e13-5378-4755-846f-277a6d5c18b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1427 249b00e9-c686-4798-aec9-5b3947582dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1427 e94b4943-41b9-49d4-8e1f-2a7a7e7eecbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1427 d5d67d6b-7ba8-4f8a-b9e4-eb0124647a25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53E4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4636;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1428)");
    end
end

unit.assert_eq16(16'h53E4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1428 41e0a6c9-7833-4932-945c-14900384043d)");
unit.assert_eq16(16'h9CE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1428 d1dbdb00-a50b-4101-9769-0a0ccf10c370)");
unit.assert_eq16(16'h9CE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1428 fb889ed7-64e8-4c29-9dca-8203ca2af201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1428 ed518fb2-6d3e-4394-a96e-d450882b2475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1428 1ff6f93f-e0c4-4b57-a3d6-bc216c3cd560)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1428 c8f83e61-65df-4d65-b2ef-aa13613a6a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1428 dc227c10-0e15-4a3b-a822-09e0c2ac1985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1428 afaa69b4-3d29-4997-a5e3-e0bf28e24a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1428 6536a071-3dc5-40ce-8405-4c4e3ec9600e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE2FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h783E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1429)");
    end
end

unit.assert_eq16(16'hF3B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1429 dbf91065-ead4-4f47-a35d-a1e7ac6e5720)");
unit.assert_eq16(16'hE2FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1429 04c1d32d-6625-4a87-985b-b174dac07a42)");
unit.assert_eq16(16'hE2FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1429 e1ee2875-1614-48b7-b37e-d4f1a1ab7208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1429 77aacb19-8239-409b-91ce-de4ceb6596d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1429 531a40b6-8756-4828-a504-3742f005b83e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1429 d1b9e3c0-756a-4291-9697-a3749c2bd7a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1429 d7dbe6e6-08f0-404f-9509-483cc09ffcc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1429 413453d7-44e7-431d-a7d3-f8e97cf60f54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1429 b2747282-b326-460b-bb8b-09a9dadb1fb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD42B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6824;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h96AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1430)");
    end
end

unit.assert_eq16(16'hD42B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1430 9accabc7-b475-4992-9dd3-474e984e0e2c)");
unit.assert_eq16(16'h6824, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1430 10a01d43-e94b-46cb-bdd8-7cdb1196a393)");
unit.assert_eq16(16'h6824, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1430 cab9e845-a183-49d5-a8f4-f69c85fd3f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1430 9117510d-93a9-46dd-9ef7-6771b22d901d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1430 837f258a-89c8-4784-9458-10a317e28dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1430 1c567b34-dd0c-4cc4-873a-d3af6eb6a1f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1430 141aeb23-9cce-4d21-90a4-83ab6a78fe7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1430 4cbaf11f-2467-4b0e-83ad-7b5329ad6c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1430 f0a2fff3-f92e-4f76-8d61-3dcbbef47f51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8F61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4CE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8D9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1431)");
    end
end

unit.assert_eq16(16'h8F61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1431 1144f9f7-fab1-4cf0-a782-0b10f5337106)");
unit.assert_eq16(16'h4CE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1431 2d771bd3-5e5c-4aff-9f47-f40296384296)");
unit.assert_eq16(16'h4CE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1431 d2781467-1fe0-4ffc-89b3-35fab3ca0da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1431 6996eb69-d9d5-41f6-9123-028054a2f2c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1431 d6e82ecc-cb83-41fe-b97d-3686bfce1a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1431 46855230-5be3-4b0d-aee7-20774312fb74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1431 0113f024-7c33-4af4-9e70-14910f4f71e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1431 df2c86bc-b6c7-40af-aa3e-3cafa3016579)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1431 34b9203a-5489-4eae-9d16-c5ab4f9224c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8886;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD84C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1432)");
    end
end

unit.assert_eq16(16'h8886, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1432 7db620f6-da0e-4f10-ab05-c5d3d4605d6c)");
unit.assert_eq16(16'hBF07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1432 d151bac5-04be-4378-927e-b49b50a07fce)");
unit.assert_eq16(16'hBF07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1432 c64890c0-8689-431f-a0fa-8c0000c21001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1432 a571d4e1-ff5d-449d-875b-2eb1dbff51e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1432 a9d01ca3-2d88-4efd-bb32-33c25428eb42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1432 e15b5987-4d46-478e-af17-8c70ac34667a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1432 c02414e0-f440-420d-8b17-069ecb18be54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1432 23e97fcb-2516-4a04-a0ee-657680b4bf92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1432 4dbcdf9e-45b3-4f8f-ab5b-b71e112eea3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB26F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE8FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE646;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1433)");
    end
end

unit.assert_eq16(16'hB26F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1433 8c0c4868-b6de-4bdd-b0d2-32f2056ebfcd)");
unit.assert_eq16(16'hE8FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1433 ed95afeb-20e4-4d1f-81e3-f9af351808d1)");
unit.assert_eq16(16'hE8FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1433 dd2a1239-2f85-4095-bfbc-6323a2b6b2ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1433 e750a43b-1ded-41a5-96cc-0fcfc3a52c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1433 86490294-ce6a-453e-92cc-54be48463db7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1433 9efca558-c198-409e-b3b0-1b1ffc8bbad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1433 8592ec6c-60c5-420b-8e9d-1e381085a034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1433 d64d5257-9e09-4227-a33b-c8437f837f9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1433 7eed975b-1b2f-4a74-9466-a765fe7edff5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h819D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h551C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8345;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1434)");
    end
end

unit.assert_eq16(16'h819D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1434 cf6748ce-9c2b-47bf-86e2-55f6cfafdc4b)");
unit.assert_eq16(16'h551C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1434 346b9969-3cc9-49bb-95bb-8bda5c4c67f7)");
unit.assert_eq16(16'h551C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1434 05e8b201-9298-42b7-b825-c5087289275c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1434 090e43c9-d577-4131-8cb0-1dd39446886e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1434 cb764115-0ece-44e6-9fa0-994d093f51c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1434 4821fdff-8fcf-4863-b0fb-167bef620a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1434 f0c41f37-088d-4969-9e19-f0caf58dd565)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1434 b1a8d51a-26aa-46bc-b4b8-4ff9790b6056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1434 5c54d7cf-eaeb-4657-b340-88ce49755428)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC287;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1435)");
    end
end

unit.assert_eq16(16'h89A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1435 2556fb6a-dcb9-456f-aad2-85fe4f42786b)");
unit.assert_eq16(16'h07B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1435 c3534dc6-dc5f-422e-91cf-8a7434a4ed77)");
unit.assert_eq16(16'h07B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1435 3379ff05-f343-477e-a2ea-6bed6123a2cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1435 41938072-3e95-40f9-9381-79964a11e800)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1435 283d46df-0fa9-4000-b864-91a674fe9010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1435 5fdcc5eb-c2f4-4007-ad03-39cce7912f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1435 c6d0cc61-0bab-49df-b396-52e78fd2f7af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1435 e30794cf-d405-4eb8-89a4-af32bd579e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1435 0a3d9ae2-42af-40cd-ad16-e06263e219b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE18F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFF1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1436)");
    end
end

unit.assert_eq16(16'hE18F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1436 ced492c3-058c-47ba-87ae-efa3e9895765)");
unit.assert_eq16(16'h3F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1436 0e8b218a-a425-46b3-9770-4c4863518a18)");
unit.assert_eq16(16'h3F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1436 6848b59e-3ad5-4a93-8c9b-5608bdfb2ad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1436 fbd494e5-741d-4113-999f-be31ed95ba34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1436 1ab175c6-70b7-426d-a154-e3ecfa922b44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1436 84e2fa70-ba0b-4506-8dc8-a90796a61c20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1436 68f949ad-f6c1-4151-a21e-ffa52ae334ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1436 10f7cbe5-72ff-4c8a-9a85-277b7efc11de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1436 e06377cd-b082-420b-b880-a2ef8fdc9275)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA12A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC055;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCD99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1437)");
    end
end

unit.assert_eq16(16'hA12A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1437 4493456f-2282-4e9c-9574-081827c802f8)");
unit.assert_eq16(16'hC055, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1437 57cc8c97-e1fe-4061-8594-0d52868d11b9)");
unit.assert_eq16(16'hC055, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1437 47d4f733-d15e-4c99-9509-e41a244371b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1437 7517da25-4b8a-4aa6-aea6-fbf6744e4be4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1437 ce0b20aa-d6b3-46f2-b6c3-cde3308373a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1437 f380c743-cfb6-44d5-be1c-525f866b9d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1437 c59f58e9-4eda-4a22-8f08-e6bf5919d5de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1437 dcaaea3b-3ca5-422b-bc7e-ece89a3b1315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1437 c9d56aaa-acc6-486e-b53b-843585b88fa4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h23EA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1438)");
    end
end

unit.assert_eq16(16'hBCDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1438 aea3bcff-9920-4a29-a951-3609db13e83a)");
unit.assert_eq16(16'h23EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1438 342c3dba-1828-4d74-9808-4aeecf4d8ed9)");
unit.assert_eq16(16'h23EA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1438 8472316c-976c-4527-8a3e-11eb9532d9e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1438 b409f21c-af42-4b04-afaf-e3611fea7af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1438 58616aff-1fdf-4ad0-bbfc-eaf1c60b64e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1438 a4a4bdf7-bce6-4a6d-8488-dd931279bd98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1438 42428115-ee0e-47b9-9700-9363b7854eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1438 b4971fe8-6224-46f8-b92b-cf361b1b7635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1438 50fc98e7-66d2-4e9c-b283-0404007916a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFF92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5752;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1439)");
    end
end

unit.assert_eq16(16'hFF92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1439 5a5c8b0a-0e63-4b4a-b9e7-9276e17ec865)");
unit.assert_eq16(16'hCE83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1439 11eca12e-a8dd-4b97-a555-dfeadb03a317)");
unit.assert_eq16(16'hCE83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1439 547a0c38-594a-441b-b3e5-10815190a6e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1439 2f358704-49f1-436a-b8aa-587c48e4f9a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1439 0de42d50-2899-4f4f-a6ac-caefc2d8926f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1439 9f8862dd-459c-407a-94dd-c4e04139d8c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1439 fd62d4bc-77a3-4f26-a700-318c484dd23b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1439 72d5bcce-9667-499b-9a32-0acac2331ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1439 cb430862-8382-423c-9003-dec380e04557)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6695;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0306;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA553;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1440)");
    end
end

unit.assert_eq16(16'h6695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1440 1ce66b55-955d-483a-b969-b7d43deefc12)");
unit.assert_eq16(16'h0306, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1440 bfe0e694-03f0-4c2d-ae39-1b1c8e2e3665)");
unit.assert_eq16(16'h0306, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1440 6799af5f-67ec-4254-9e07-c3501c411b7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1440 70c50b44-43c2-46ee-940f-54f20a7ed09c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1440 610ed707-c6e7-4dc1-b677-8e7155bbb1cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1440 38490959-4826-414b-8834-affa41ec7b92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1440 1a35c4a2-7a53-47e8-9774-2e47ef6929c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1440 a5f6e504-353b-4067-88d8-f9af479396ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1440 708595e4-e38f-427a-b362-6abb519662e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2EE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1441)");
    end
end

unit.assert_eq16(16'hDA77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1441 a1c5506c-302f-45b7-a0da-dbd80d9c82a3)");
unit.assert_eq16(16'h1E41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1441 837d2e21-f9f7-498c-8bc0-ba47b94ed42e)");
unit.assert_eq16(16'h1E41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1441 8adfaf9d-4d08-48a3-bf82-46a2b04f2579)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1441 9dc2581c-2faa-448e-aed6-966cd6c4073d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1441 c6493097-fa9d-4aea-b964-83ce21c56d8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1441 3d98c2a7-f10e-4ddc-ad1e-c9c0189d699f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1441 d3f4166a-31eb-4985-8baf-fba71fba7f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1441 2951d1c6-17a3-4944-aefe-127e388adde9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1441 ab804a4c-3552-4741-94a9-cb38c705edaa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h90AA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hED08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8E3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1442)");
    end
end

unit.assert_eq16(16'h90AA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1442 d0d777cb-8d89-430e-855f-a9e7bbdb7f9c)");
unit.assert_eq16(16'hED08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1442 f0d9e919-0af1-4493-89be-7787b2e57fb2)");
unit.assert_eq16(16'hED08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1442 ce880561-2bad-4dc9-8cf1-faaf86d91e52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1442 7be1cb39-281b-4df1-9b3f-ef6cda84eb4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1442 35e45414-46b0-4b56-a0e3-51e27fb2e0c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1442 45629d67-bc55-4033-a0ed-01a08476e5fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1442 cbdf04e5-d438-4bc0-899b-467e819106b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1442 f3544664-67b5-447c-ba7b-eb3e87f06a0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1442 d461dc0c-a459-4cd5-8133-b7103cb69f65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h868A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD77E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1443)");
    end
end

unit.assert_eq16(16'h868A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1443 7c679eec-dc4b-4f81-9223-e4bffe7c8c06)");
unit.assert_eq16(16'h1A08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1443 cffd07b6-e3eb-4179-9a9b-0f65b7c27c5e)");
unit.assert_eq16(16'h1A08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1443 7564a22e-2f89-4c70-bc4b-1dbf908e25ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1443 c20b4114-a441-4d01-aa9d-f4d0e77b449d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1443 48625360-c056-48cd-8054-dd9cfc2c3e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1443 4031c64c-fc25-4184-a2c1-d51e5dd8959c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1443 a0af4943-63c0-4721-82bf-3002bf530639)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1443 9144d228-4fe6-4f9c-b53c-8983b5812c29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1443 aca7e51f-7193-4e29-a461-3b5c42fcab99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h39A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8933;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1444)");
    end
end

unit.assert_eq16(16'h39A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1444 faa8b8e4-6ef0-4949-97e0-089e40a62afe)");
unit.assert_eq16(16'h8933, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1444 a88f4170-a16d-4907-99be-63938eb2d9ef)");
unit.assert_eq16(16'h8933, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1444 8a66aa43-8d64-424c-ad24-35c5054c0f78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1444 99fd2aab-5494-41c6-8d36-d24bede78321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1444 f3d3b5b5-5e6e-4a30-90e8-a24dcf8e53f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1444 2716e24f-fdd4-4400-a085-041becf1aa5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1444 0b600dc7-c57e-454a-a7d8-e7ce0861b8a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1444 ecad719b-20e3-4872-b475-ce9466b3bc7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1444 2aa80dff-ad56-4ec0-aac2-67d1a36731f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h64AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4F94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1445)");
    end
end

unit.assert_eq16(16'h7C84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1445 da2869c9-9cb9-4182-8e9c-20c67665bfbd)");
unit.assert_eq16(16'h64AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1445 750ae458-eca2-425b-ae1f-47daa89ee30a)");
unit.assert_eq16(16'h64AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1445 ae293388-49ba-460b-97ca-9a87629410d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1445 147bc529-8516-4777-a230-ef4ce48413e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1445 a338e779-19dd-48ec-8948-41a6d82d66e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1445 35b95829-1ed0-47d2-acd8-c3d63d7ce831)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1445 e64ce925-e248-4560-a6ec-69f55b2d6ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1445 9f44c876-8e53-46f4-a83a-82479a2f2092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1445 7f0144d2-53b1-42e0-92ba-fa301ccae370)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDAA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4199;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2773;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1446)");
    end
end

unit.assert_eq16(16'hDAA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1446 1f5b4d80-1e7a-43c3-aa50-7c49cea64a46)");
unit.assert_eq16(16'h4199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1446 f438e8af-c91d-40f1-90d3-4b3e00d3f4f6)");
unit.assert_eq16(16'h4199, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1446 9f5acec6-ca06-4f38-a920-1bf23fc8bf48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1446 9df9863b-8416-4331-9828-0017bd4f2d4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1446 437e6585-9f6d-4356-8979-30260dbcbf02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1446 c6076d78-a270-48df-a190-cf23961d83b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1446 af4aac2e-45a0-4aa0-85e1-d1aeeee03038)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1446 3d652bf3-7890-4625-8126-32a68c9a2e12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1446 f8aad6ca-d164-47f9-bda7-79bd8e618c3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1D57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h73B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h00D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1447)");
    end
end

unit.assert_eq16(16'h1D57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1447 9f7ded18-fb10-4e2b-9581-4e71c778642e)");
unit.assert_eq16(16'h73B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1447 824ba68e-5a3f-49a9-b59a-7649962434b5)");
unit.assert_eq16(16'h73B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1447 c3bf8327-a17d-44c4-9ccb-ac650754cfcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1447 f6a0cb83-4d2f-42b5-bfd8-42a2b687fd0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1447 050a3f72-5be8-443b-95e7-206ef6592d29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1447 be588f33-6597-46d0-b583-27619b061a9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1447 10d1a9c7-a1b3-40df-8172-36e0c791fa8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1447 16374206-bc77-4e3c-bad4-3d97dfe71824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1447 b490b7a6-1adb-4640-8ea2-a13f99fb0e46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h71E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1448)");
    end
end

unit.assert_eq16(16'h6F64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1448 d015b9d3-9aec-4ff7-ba8f-f592753d43bb)");
unit.assert_eq16(16'h71E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1448 a507636c-2747-4332-9dd9-422a21f94671)");
unit.assert_eq16(16'h71E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1448 06860808-721b-4088-be57-41b29eb346dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1448 f19d9675-ecee-4957-b18e-8994671e78ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1448 ee6f0409-8aae-4d88-a66a-c843dd65fe42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1448 33b0c1d8-3315-4488-b37d-7dcc5a521960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1448 2aa80c25-117d-4082-b990-3722dd537f88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1448 c356da1e-799d-4b87-b177-61835d9fdf99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1448 64aa63a6-ac52-4f37-b223-537eb0073b15)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h82D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1449)");
    end
end

unit.assert_eq16(16'hF1A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1449 bed74dfc-0f66-4561-a24f-afcb2f9c769f)");
unit.assert_eq16(16'hD2E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1449 fa9b571e-3e75-4340-9e27-8de79b01250d)");
unit.assert_eq16(16'hD2E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1449 84cbf833-113f-4c74-955b-122f849b9fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1449 264331fb-a365-4237-ba25-a0f6f464ad41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1449 b61ca656-3618-45d6-aa16-1b11b38875d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1449 c493b1e4-cdd7-4e50-a834-5344b63e24ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1449 1477fd3f-735c-4e12-a0cc-e8edbc351f30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1449 8ac7209a-29f7-4b7d-b677-c4c48fae58d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1449 e80a561a-7cbd-4355-9e1b-ac2e9094387d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h62CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8E22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1450)");
    end
end

unit.assert_eq16(16'h62CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1450 1f5e0f1b-ca45-4f80-bbc5-c8908d6a03ef)");
unit.assert_eq16(16'h8E22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1450 a3154d85-4b95-490e-8e86-a572df0ff5e7)");
unit.assert_eq16(16'h8E22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1450 d0fb959f-0504-4afc-8b54-d5905ae6fd53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1450 6e6c25cf-24f4-48c8-a9a1-17940a507e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1450 6610ece5-83c0-471b-bd09-27dac7fbc736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1450 a272899c-5f27-424c-884f-715f12a3a76a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1450 232f31c8-e500-4949-919e-503d12818854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1450 8a0559d1-5cc7-4081-a820-8f55e5834700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1450 18d81c79-e746-4f0a-973c-fbad902be90c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB46D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC059;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7434;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1451)");
    end
end

unit.assert_eq16(16'hB46D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1451 51978a14-fb4a-4aa6-b0d6-a39ba3a030a0)");
unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1451 65f16597-f963-476b-91e1-cda420f5ecfc)");
unit.assert_eq16(16'hC059, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1451 7072de38-5633-4138-9105-79bfcaf0ead2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1451 49f350cb-7d02-4f84-a010-2007a076b5c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1451 27ebfbb5-00e7-446f-a2df-17c41dd70b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1451 04f61740-4c4b-4c2c-8e50-72423541d6e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1451 3467ff4c-b44f-4394-9bfa-aba3011df762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1451 fbd54653-0868-4448-815d-c127a4b3e679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1451 bfdfe084-bae9-44d4-abe4-1904b663e088)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA1B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1452)");
    end
end

unit.assert_eq16(16'hDB35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1452 f132bfb8-c533-4ebe-b281-720b73125487)");
unit.assert_eq16(16'h8B47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1452 087fe54c-3dbb-4dd2-9123-9863d1c1b533)");
unit.assert_eq16(16'h8B47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1452 1df3f0b0-57c4-42cb-91c1-80e6591eebfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1452 60adab12-58b6-423d-9506-40bc188edf41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1452 7d74e1ac-ebe0-438e-9080-636f02fb81dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1452 51dfa64c-9ecf-407c-9ecf-38788d9195ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1452 2e3e6bad-0009-4c8d-b88e-5d0c216c4107)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1452 17dd7a56-1bff-45eb-93f8-1e6501eacc13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1452 33fc4327-864d-4cf1-8bba-2a2ad2389082)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4FBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h33EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1453)");
    end
end

unit.assert_eq16(16'h4FBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1453 197f7745-06b7-4ff4-a5d9-0e47eb167274)");
unit.assert_eq16(16'h33EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1453 94ee969f-2570-42e8-b5b8-b75489dd4de7)");
unit.assert_eq16(16'h33EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1453 0ff33e39-dc17-4d15-a628-6071d337eebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1453 b367afd2-efde-490e-8f80-0b1132714b8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1453 0f9e56b8-7c30-4a58-85ef-8baf208826db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1453 6171a1b4-7bd1-48d5-93dd-10c48fc045cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1453 b8f8f953-5d88-4c11-b801-87b8848a5002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1453 402e893b-9951-4a92-88a4-97cf80149b55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1453 16e9d5fc-ce97-4c0c-8d9a-a75893d89df5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2FB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h418E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h39DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1454)");
    end
end

unit.assert_eq16(16'h2FB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1454 d7fa5d59-c358-4537-a914-db0b5ff7ee95)");
unit.assert_eq16(16'h418E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1454 8d3e34b6-03c2-4ac6-975c-2b6b6cb17c4d)");
unit.assert_eq16(16'h418E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1454 242b1453-3c85-4135-baf4-a1e4cbb8f7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1454 9b452a9c-3f86-49a1-ae9f-fd1f13ee180e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1454 f51fe8e1-2207-40bc-82f0-e12a5b3a9123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1454 21b42e6e-dfbc-464e-baf3-2ecd741a52b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1454 2d9d13f6-528e-4f0c-a41c-7add767ec265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1454 bcd47f50-4388-478d-8888-f54204de34e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1454 dcc44edf-c3cb-4b3b-b98c-e38821b9ca6d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF8B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8706;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1455)");
    end
end

unit.assert_eq16(16'hF8B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1455 acee5822-ee8e-4aa5-b1a5-190796e9f066)");
unit.assert_eq16(16'h66DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1455 41184361-0167-4573-a743-8b3bb7350871)");
unit.assert_eq16(16'h66DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1455 89843236-eb39-4af5-8505-b8654fcdd169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1455 f404d687-c370-4030-bd97-dd9d57c74825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1455 e31307c1-90d0-407c-a0b8-7c97fa7aa44f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1455 df25991f-b8ee-4bfd-8394-0a0ab376025f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1455 3961ded8-2cac-4467-9dac-2830c30c7f33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1455 4168bda6-c755-42c4-a468-176a737f8b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1455 c475a7dc-3e89-41ed-9bab-1e082dcff22f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD4A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h11C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF781;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1456)");
    end
end

unit.assert_eq16(16'hD4A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1456 e3eccefe-429a-4b0d-a175-ebf7fe3a7804)");
unit.assert_eq16(16'h11C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1456 dba5cd5b-eff4-42fa-930e-b5be4701bd80)");
unit.assert_eq16(16'h11C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1456 9875b535-fb52-44fa-9ce4-a840981ae934)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1456 599b8355-4e77-4f58-9109-fbf14d723b41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1456 41814dfa-025a-4078-b300-ffc97fc82d20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1456 a0b1596b-4bd1-4097-920b-4f5fb40fd41e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1456 5c14e797-7c31-4774-8645-4c4663897651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1456 485cf8eb-01d6-48f0-ad9c-3f9564bb0ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1456 108f1e21-ca71-4cbb-ac1c-b5e26ed0f6f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF97F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE151;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCD2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1457)");
    end
end

unit.assert_eq16(16'hF97F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1457 0229db3f-f7bb-447a-8455-bb3d92a43a6d)");
unit.assert_eq16(16'hE151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1457 fe392bb8-4cc4-4d7d-8c8b-84e5e81e6743)");
unit.assert_eq16(16'hE151, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1457 35269993-10d5-4d87-9db9-9d7ace850dea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1457 13e6201c-b192-4af9-96c1-a07ddfc13a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1457 b0b7d03f-9e64-4496-8ccd-0fcccc70753e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1457 beaa64f3-30d9-4b58-9629-1a5390302eef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1457 7d5d5b40-aaeb-4571-83b3-e050f95aad23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1457 88db8781-32a9-4cf3-8478-dc6c5ca03f52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1457 b24cd317-acfa-4554-ab64-6ab70df9b98e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2ABF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6695;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF00A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1458)");
    end
end

unit.assert_eq16(16'h2ABF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1458 3512b788-43de-40cf-9033-a6cd1cb05414)");
unit.assert_eq16(16'h6695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1458 491ad5f4-fd31-4be0-bbd9-43099ded3967)");
unit.assert_eq16(16'h6695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1458 d0455421-6228-47e0-8c4a-d50387ee0178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1458 060be004-1ec3-4548-b8b3-de025b1d3040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1458 a45c44e0-ed85-4a5a-809f-ec015360a46b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1458 75eea99b-1331-4d60-a3eb-6027460de10b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1458 4fc09de1-37a4-4097-8fa2-bc4596330ff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1458 614cc65b-7a2a-440f-b06f-b821a5758ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1458 7640fdae-f823-4f8b-8d16-90e56642e04e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1AC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC888;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1459)");
    end
end

unit.assert_eq16(16'hC1B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1459 4c8db276-0734-485e-a01c-b01cf353f392)");
unit.assert_eq16(16'h1AC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1459 5350df6f-b6c7-4d71-8194-89c1c3cd855b)");
unit.assert_eq16(16'h1AC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1459 a5c17cac-c60e-4c2a-a58c-f4a7abe3f7ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1459 adffa540-c4ca-41f6-b88b-e19d59015a44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1459 901fd85e-ec0d-4724-af00-88c22a26675f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1459 655f62a6-9040-4ca2-a92b-2f4149767d93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1459 ab01e083-99a4-4a54-9b02-c3bfa6d55ee8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1459 56960d43-da3d-466e-97f8-6b6874888e18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1459 db0c8f6c-34df-4cf3-853b-ca7dd341ae62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6CEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1460)");
    end
end

unit.assert_eq16(16'h6CEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1460 ceb3c362-f24b-4178-89f4-fe81f1614c06)");
unit.assert_eq16(16'hFF2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1460 4d9bbccf-0825-4382-8792-dde35368fe74)");
unit.assert_eq16(16'hFF2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1460 af9be2eb-3e28-4461-90c8-c85235e1eced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1460 d72f456f-1566-4964-b9e7-29dbc68c75c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1460 7ce06f38-0c64-422e-a8b6-ed7bc0725660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1460 e3e3c2fc-83c3-498a-876a-0eedb304fd98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1460 4e3f0832-3854-4658-9b58-be9de5921112)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1460 9172af5a-a077-4891-84b6-135bbf32b420)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1460 dd1df902-fa0a-48e3-b54b-70c1a6bda721)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFD27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5DEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5256;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1461)");
    end
end

unit.assert_eq16(16'hFD27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1461 011315b0-e5b7-4fad-b26f-b5328fce4f0a)");
unit.assert_eq16(16'h5DEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1461 1077f654-c492-4c69-8cc4-e3bc8a07c031)");
unit.assert_eq16(16'h5DEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1461 8dcfc72f-e664-458d-bc1c-5be9b76c25fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1461 04cdb600-086c-44cd-9366-ebcd11311716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1461 dec0ea2d-cd2d-4b37-8b6a-6751e0a250cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1461 8f4ea80a-6c1c-40cc-a4b6-2d55485a2205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1461 3abe24d9-d0d7-40e7-820b-9fb7360fade1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1461 7ef4faaa-8558-47d0-8fc9-923b9cc0fcd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1461 7da5458c-3104-43ba-95d6-bbc65787fd72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hABB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3CE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5AF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1462)");
    end
end

unit.assert_eq16(16'hABB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1462 2c59c507-1230-4669-9ba2-e5ed100b9681)");
unit.assert_eq16(16'h3CE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1462 e76bd79e-34de-4709-9210-ef5e37b52e5d)");
unit.assert_eq16(16'h3CE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1462 70230faf-9064-41f3-822f-0068379fabd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1462 9a99d4e3-05d0-403f-8634-6b5b8b441dc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1462 c896e031-e8dc-4fe6-9daa-0619af31da17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1462 9e5907b4-9126-49a4-9528-c56768122c9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1462 d2a9feb3-3aeb-4b34-8e81-02326092136d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1462 86808d54-a05b-4eb5-80da-24fd6b42d40e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1462 3ec515fe-6e25-4ff7-b72b-cd7e682a5708)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h122C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4078;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1463)");
    end
end

unit.assert_eq16(16'h122C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1463 6b4ddc50-bb9c-4ba0-a21d-44cb895a9698)");
unit.assert_eq16(16'h3F21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1463 635985fb-d9e7-455c-bd37-a98f0e4de20b)");
unit.assert_eq16(16'h3F21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1463 de6d7d52-ff5e-405d-b34d-7c02963783b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1463 b314871f-7477-4919-a97a-2a63e4d71152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1463 2701f7eb-7c67-4be0-9b82-915774de464e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1463 954333e0-1c9d-4b50-ab89-6e52b068c55d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1463 32d80b30-4090-4dab-9991-dcfd65e950fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1463 521e5bcd-0d3c-4cae-8089-d5cc7f982f12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1463 9bc8ff52-f7d2-4559-9b3d-ed8b40f6b1a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9424;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCEBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h05B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1464)");
    end
end

unit.assert_eq16(16'h9424, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1464 bda4559b-6e1d-4611-9517-c67563fc1d93)");
unit.assert_eq16(16'hCEBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1464 cdb3ba8e-6036-49e1-a6c2-8db8cc18b026)");
unit.assert_eq16(16'hCEBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1464 051ddaad-2396-4eaa-b525-e036cb03b196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1464 90d7b8a8-d6e5-40e5-9e26-1df25fc7cc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1464 185732fc-5363-4af1-beb5-4842f0b00cda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1464 c34071b5-aa38-4f50-9902-399c3e67b61b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1464 3a336935-17f4-4d43-8579-b2739ce54df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1464 eb9e668c-d75e-49b3-b8cb-d2c3ae81ad25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1464 959cd394-215e-4509-9b84-f6cf0519aead)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBDFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3430;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1465)");
    end
end

unit.assert_eq16(16'h6F03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1465 6e5022eb-3c95-407a-8acf-7c79ea02105d)");
unit.assert_eq16(16'hBDFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1465 0b274c95-7628-434e-a30b-1002d2f7f910)");
unit.assert_eq16(16'hBDFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1465 9e143510-84b0-4bee-a054-af1c05df1e3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1465 7db0cce4-b143-4ac9-8724-47f447d7bc5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1465 578ebaf0-d625-4ac7-aea4-09bf5ba11875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1465 fda67a6a-3144-4da5-8489-11895bbd157d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1465 3495ce99-cf37-4318-841f-728495d3f999)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1465 ecf0eeb3-f163-4efd-96bb-108250cc6eb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1465 017ae939-e034-4433-8120-dc3dac8ff359)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20B8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE58C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1466)");
    end
end

unit.assert_eq16(16'h3A14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1466 4a14d475-2610-4f43-88b4-11856059c896)");
unit.assert_eq16(16'h20B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1466 553bebe7-2831-4a76-ba88-ac974f5aee56)");
unit.assert_eq16(16'h20B8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1466 1f4c9acf-357c-4e47-b5c6-e0000aeca79d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1466 de2f0022-6271-4d73-b000-5926a42babea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1466 ab4f37f8-c629-4ef6-a8c1-ce5bd73380d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1466 bd676300-4088-43d2-ad3e-97c7d448967b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1466 96550a74-ee2d-4430-8bb2-cb5a27e62752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1466 ebb5a66a-a2da-4aa7-b49d-749b02aa324d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1466 0deb4842-19f8-4a40-9291-33a59dbca669)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h466F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5686;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1777;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1467)");
    end
end

unit.assert_eq16(16'h466F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1467 aaf9b104-466b-4f00-9060-6e7d1739e0fd)");
unit.assert_eq16(16'h5686, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1467 cbb51972-80bb-4607-b3b5-6510955f8155)");
unit.assert_eq16(16'h5686, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1467 7dc30b68-9159-444b-b48c-cb0cd45308f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1467 d7144620-095a-4543-b232-f54004db977c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1467 ba93a0e9-a4de-4585-a1fa-def5c78b6f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1467 97ec0a9d-68ec-45c7-ba8b-30d7edbabfc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1467 b59b22b7-27f7-4cf6-80bb-ee5152f15ec8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1467 dc84d220-476a-4428-b669-85662890483b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1467 fa6e2f70-86ce-4387-bb79-803c359ba61e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8047;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1D0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB2D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1468)");
    end
end

unit.assert_eq16(16'h8047, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1468 1a9ad225-39bb-455a-9759-e25972cb5dd0)");
unit.assert_eq16(16'h1D0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1468 cece4c67-521f-4c74-a6e1-8d3eee3ae948)");
unit.assert_eq16(16'h1D0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1468 c597d699-e154-4f91-bb9b-a2fe0b74a016)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1468 f61c590d-b824-4dad-9fd9-b972940adf78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1468 61e2822c-e446-4451-9cba-1e635cb98aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1468 58b9028d-b631-4da6-b97b-a538156f63bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1468 8e62286b-4fe1-4f48-a02c-4c21dcc19d43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1468 e96e4e81-ce27-48a4-964a-4befa867f8c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1468 a2ff8dae-0266-4e21-a98d-7ac6e2648f0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDF11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h766B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h808C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1469)");
    end
end

unit.assert_eq16(16'hDF11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1469 6076a6e4-3b69-401d-acd4-f2d0abfe3fde)");
unit.assert_eq16(16'h766B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1469 70cdae67-019c-4ffc-9e97-d0be934929a1)");
unit.assert_eq16(16'h766B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1469 7aaa9a59-49d7-4314-b5ae-d8621ebaa317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1469 76c676fd-c98e-41b7-9a44-c3a897d0c6bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1469 7adb43b0-6cb7-43a9-8a83-5e3474ebbe11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1469 883e4c9a-1ed6-48a4-8161-c707f8b1b034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1469 dd2002ad-9e70-49a9-acf7-f174c7d41730)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1469 9179f766-cd42-4839-a578-55d7f0fab10d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1469 f2fde2ac-dc23-4443-8366-67e68f1874da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE798;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5841;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE5A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1470)");
    end
end

unit.assert_eq16(16'hE798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1470 35e91399-b79b-4f00-b0d0-d0f49228f380)");
unit.assert_eq16(16'h5841, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1470 fb22c53c-7353-4fab-b64c-026d65906421)");
unit.assert_eq16(16'h5841, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1470 bd5fd8ab-b846-41ce-9c03-1c4d511811e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1470 1f336670-64ee-4b44-8715-89a38d6c80a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1470 962c06d8-8a8e-4b03-b773-847f14861c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1470 4ab6a0e0-671a-4127-a16b-a562dd484d98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1470 5031173a-2397-4a13-9762-c6c0b0dd1959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1470 09270d7c-d8a6-4703-b30c-07fd65aa457b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1470 fc20b8f2-b541-4c23-aace-29122be9a6a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2389;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h515E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1471)");
    end
end

unit.assert_eq16(16'h2389, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1471 1f27a095-9b0a-4b6e-b182-dd0e9d2032fc)");
unit.assert_eq16(16'h515E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1471 ae5369ea-230f-4c33-a0d2-68d38888f526)");
unit.assert_eq16(16'h515E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1471 7cdb648d-f8f1-42be-8b3d-25d0da802c70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1471 b3bab25b-ce05-47ee-950b-0047552e9fa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1471 b7cee345-843b-4d02-bb0f-a059ac8c7b06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1471 8562fd42-d2bc-4494-89d3-c1a75878aab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1471 3587ec73-f8c8-442c-94fa-57079b289428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1471 a7dcfe5f-29c4-43d7-8f24-ec31ace16313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1471 ea3f8702-8ce0-4116-9efe-d988d3000007)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA23D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF90B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1472)");
    end
end

unit.assert_eq16(16'hDB09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1472 77886026-3d93-4ece-89cf-e8a6d20dd681)");
unit.assert_eq16(16'hA23D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1472 71b7e78a-7438-4005-ac23-0b65b2531db7)");
unit.assert_eq16(16'hA23D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1472 4009c60b-8c63-4ac6-b6a0-fa9c9c981028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1472 ab7a824b-7053-47e0-81b4-565f8a8dbb3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1472 73ea7b7c-702e-4b03-815f-b7f561050473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1472 6ffbb180-a3ad-4469-a84f-0b57d11d9442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1472 dd819953-236d-4fd6-bcf1-3353feced8d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1472 8554fe12-c65d-4cc2-b211-173b5c5882c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1472 34fbf9c2-da43-4179-a1fb-0a5784bbd4a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB24D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h196E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1473)");
    end
end

unit.assert_eq16(16'hB24D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1473 310d9cc7-1f16-4779-bb58-50c31aa1d5bd)");
unit.assert_eq16(16'h3F93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1473 0be3d4df-69d0-44b0-8216-b3c844e6629e)");
unit.assert_eq16(16'h3F93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1473 52b0caba-75b2-4875-99c7-0962d8d4d865)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1473 33891344-e2f3-4412-a9f3-ef18b3b4cb75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1473 e6f32533-9a73-4ff6-a77d-ba7ab1778bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1473 2513b40d-7ec8-41eb-b1c9-b59ade23aa40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1473 9c87e5fd-88f1-4cc2-95a0-4bfc7ccc2caf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1473 ed210bbd-5d30-49b8-b4fd-e9704550ceab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1473 02479c7a-e507-45bd-9220-e41a14d2d477)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h58CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1A72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1474)");
    end
end

unit.assert_eq16(16'h7F54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1474 ce2abac1-1863-405d-810a-203ba69e4417)");
unit.assert_eq16(16'h58CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1474 7c0c570b-e83e-418f-89f1-ad9e00557b24)");
unit.assert_eq16(16'h58CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1474 d4487f20-f91e-434d-bf54-84dc14230a4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1474 d301abbe-c9a4-4793-becc-9cd207560f6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1474 7fec987c-2e78-4abf-a100-091477d21af7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1474 eff33b38-83f9-49bd-ac9c-7ac43441924d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1474 d698235b-d063-4ccd-a368-3d64114f413a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1474 05178a6a-2898-4f6c-bed2-24ec0b1dcc90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1474 5cfa4c6d-d96a-489b-95ea-b2d35486fc17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8979;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1496;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1475)");
    end
end

unit.assert_eq16(16'h8979, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1475 94a0dd46-3f7f-4078-ac52-b943e7593b94)");
unit.assert_eq16(16'h1496, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1475 7a31a638-b659-47c6-bbc2-4983f5dce766)");
unit.assert_eq16(16'h1496, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1475 eabe1162-4887-4ffe-baff-66275cc1d430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1475 b4783ef8-2552-48e8-99f4-6ecba4fdf732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1475 8c85f94b-a2bb-4c7f-b77c-91e5a54e58c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1475 b0184056-a50e-427d-a7aa-aed3fdf75702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1475 038f6aa1-fc20-4151-bda8-5f5d6e3dfa9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1475 9bcced59-09f9-4a44-b056-ce7711461454)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1475 f780c0fb-fb99-442f-a1fa-9bd11d9effd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h066F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6A63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1476)");
    end
end

unit.assert_eq16(16'hF7BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1476 e7fb1c24-fc5b-4311-b972-793bd74ae2c9)");
unit.assert_eq16(16'h066F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1476 1516adcd-d8a1-48c1-a1c6-706aafb35f1c)");
unit.assert_eq16(16'h066F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1476 10baf410-329b-49f3-a930-8c1eae52f35e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1476 db93bebe-cca9-4a92-8047-f58550e0b5bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1476 e573dba9-6eee-45d5-b1f9-be02e70b2d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1476 297934aa-2fb5-4f9a-940f-d49b44f52e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1476 d07d1aca-7325-48da-b993-bc45bffd9ded)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1476 a8e49743-b9d9-42d5-a37b-e552574937d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1476 77200e0c-ddf4-4866-80a3-e8907713d972)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD397;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB5D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE6B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1477)");
    end
end

unit.assert_eq16(16'hD397, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1477 2147f104-3122-4861-831d-0f6a7eaeeaf8)");
unit.assert_eq16(16'hB5D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1477 cce2ce09-1ea7-4e96-ba4a-c24816e61290)");
unit.assert_eq16(16'hB5D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1477 0028271e-f837-4d51-89b8-68a64b9414c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1477 7e7151cd-2bbd-4625-aa21-5b14fe47a92e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1477 ee3fb68f-54ff-4f23-a412-22e691450c15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1477 fa1b0dae-1104-4970-9185-6c8308c95dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1477 788712b8-3375-40fb-951e-11f25f22459b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1477 734feaeb-c9ac-47a4-b2f7-8e11ead91669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1477 536b408f-d773-479a-b947-c403e2b325f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h17A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h94C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1478)");
    end
end

unit.assert_eq16(16'h17A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1478 ae5e03d1-d7a6-4b74-b5ab-1f2731acc6aa)");
unit.assert_eq16(16'h9FDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1478 da4b0d2a-9040-49cf-8d51-f9248fbf6a70)");
unit.assert_eq16(16'h9FDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1478 a4cd8ec5-6729-4f08-9ca8-80295afcc66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1478 f5142548-2c4b-4ca5-9b0b-2adaf1901837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1478 cefa8ace-0ee9-411d-80f2-a8c9bde80aee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1478 28d98fa7-3bd1-41b1-a61f-6ec85b95c64b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1478 b2e60c9c-9959-48cf-a9b7-0477f64d4ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1478 5d725088-dfc9-439a-878b-d2c7d28b4ec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1478 0945cbe9-5dd2-4467-bfc0-0053c0b1191e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7831;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2493;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6A78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1479)");
    end
end

unit.assert_eq16(16'h7831, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1479 6a61918f-a492-4d45-8d16-e373e29bfea5)");
unit.assert_eq16(16'h2493, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1479 8e7d6489-116d-4d47-91b3-9f6df0b8d67c)");
unit.assert_eq16(16'h2493, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1479 e2c1cd6c-8bc5-4c2a-b81a-dfdc77832160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1479 085bc317-894e-434c-8203-a4a54e55781b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1479 72e27804-d550-4ad5-bc43-ccbbe84b543f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1479 61b71cc3-d52e-4fa4-8491-3f8c703da65a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1479 93ac9476-8bb7-4132-9295-052f9de52822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1479 bc1b0ea3-2ed9-4818-bee8-0adb89b1e8fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1479 70b6c472-9d05-4e4d-8ef9-66d592366ae7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF127;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF00A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1480)");
    end
end

unit.assert_eq16(16'hF127, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1480 c7fb8114-b1ff-4311-8a59-a98bb596a180)");
unit.assert_eq16(16'h5E1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1480 29f67bf5-cb10-4eac-a9fc-d4466e885084)");
unit.assert_eq16(16'h5E1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1480 55a1ae12-c221-4b49-8d59-a718aa160547)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1480 fe96bfe2-0893-460a-910b-4141f4d5f355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1480 170ef6ac-1d30-49ba-95be-ef185ef55739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1480 8f2205ab-a559-46e3-a0ac-6af6dcc02f77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1480 2be7e84e-140d-4739-aae4-3984dd4768d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1480 b86a41e0-4bab-4177-8000-863d3d84fcc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1480 1c2bd164-5e5c-49b6-b431-cf460f91ac98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h438B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h82CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE890;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1481)");
    end
end

unit.assert_eq16(16'h438B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1481 7485a88a-631c-4c03-847b-38c6c8491f29)");
unit.assert_eq16(16'h82CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1481 a96aba86-ea4f-478e-abab-041c40d65283)");
unit.assert_eq16(16'h82CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1481 2bcc8f47-8b5d-482f-a1ad-899efff283bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1481 7da371cc-203a-49ce-a5e3-70b579f7d741)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1481 2f46cf54-f4b5-497c-ab79-cc4da72a71f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1481 7bf9b72e-f5b0-410e-ad7e-31f3a7091176)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1481 a689b6b1-6482-4b2c-a62f-c4dc4fb01d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1481 6c0c9725-30c7-4999-995d-82a569ce89b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1481 366366f6-0379-4896-8a88-b4c9cf170c76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1694;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF12A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB0AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1482)");
    end
end

unit.assert_eq16(16'h1694, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1482 3864bb8c-378f-460e-aaa8-2d806b22cc7f)");
unit.assert_eq16(16'hF12A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1482 d110614d-d7e7-43e3-9f37-862e16a75683)");
unit.assert_eq16(16'hF12A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1482 532ab1f2-6901-4084-bd63-10d5f98b0b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1482 e812b5a5-48f1-48fb-a0ce-44eedbaeda2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1482 09fc1efe-cd0b-41e9-90f0-ef25a4521d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1482 b0475e7b-50f5-485a-b3b0-df23530f4f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1482 37582c33-7a09-4e58-8847-a39ded2ff800)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1482 b23a45b7-9eaa-4d8e-8654-fae449c4f7ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1482 db6b3ffa-36c3-4ad6-8645-400a5d78c108)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9A03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD628;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h98CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1483)");
    end
end

unit.assert_eq16(16'h9A03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1483 e6d032c7-3efa-4ad9-9726-fd9d6b666971)");
unit.assert_eq16(16'hD628, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1483 93e5e15f-d6ae-46b0-857a-b36284233c0c)");
unit.assert_eq16(16'hD628, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1483 16009da3-1997-4f62-9c21-28d4cb613f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1483 78181526-a45b-41fb-9faf-8da604a346d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1483 afe60fb0-1210-47ab-ad54-e761d7b3b45e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1483 a09d50c7-60cd-4cc5-8008-9399e286a28e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1483 4b7a92c3-76e0-47db-8077-01a14410733f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1483 1aaf8528-97b2-4e3c-838a-5d4f79d55ca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1483 bccceeb9-99bd-421d-a9cf-4e8da2973006)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE28C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h460D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8082;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1484)");
    end
end

unit.assert_eq16(16'hE28C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1484 1e167b86-31f6-46b8-bffb-a853ba0e4065)");
unit.assert_eq16(16'h460D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1484 160072a5-c3b3-40a8-bb3b-738642c5326e)");
unit.assert_eq16(16'h460D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1484 f2aba856-9660-451a-8e70-c0e3714753e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1484 e1a89ccf-c661-4a61-bbf3-119b7bd4b786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1484 9a022da5-fec4-4488-9105-29867e9a79dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1484 2806b035-2f0e-43dd-b2cd-26b60b1129df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1484 4ec24b56-cfa6-4856-b6ad-18878167d4da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1484 a9a16e03-47e5-4399-a8f8-e9bea294de35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1484 3dd8b772-a161-4a69-afff-4a9bc5d417f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h209D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1485)");
    end
end

unit.assert_eq16(16'h2F47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1485 9c6d7a21-08a0-4ef2-b8b4-e91ee29e3d0a)");
unit.assert_eq16(16'h7A42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1485 052b2691-d28d-46e0-96bc-dbe7a1ad9ac1)");
unit.assert_eq16(16'h7A42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1485 7e322aa4-caaf-4174-a024-f6f1b5e4ff14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1485 5738b0c1-c7fc-4c60-9a08-9742580b1bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1485 dd41ac4a-15ab-4b06-b3a7-0a91ec890199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1485 00aa8231-ab4f-4034-88fa-281c296d0bbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1485 22ebfabb-0b3e-466b-859d-1f232afa1a74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1485 cfa93795-f8ac-40e3-82a0-48671cce3526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1485 123f39d4-5b49-4ff9-a53a-a2387b57c701)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6336;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEB80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDC4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1486)");
    end
end

unit.assert_eq16(16'h6336, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1486 8de76eaa-2dfd-4bf2-9e47-c43fff0acc7a)");
unit.assert_eq16(16'hEB80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1486 58892f88-7445-4e5e-90b4-50d08d21809e)");
unit.assert_eq16(16'hEB80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1486 22603b75-75e7-43a9-828d-1c2ab6858742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1486 e642b2e8-7d06-4493-a04e-55b006775650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1486 b6d71e21-45f4-4486-8644-5fb8e8a212fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1486 48b8643f-ffeb-42a9-acc0-3e431ebbf00f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1486 9361dc7b-fb05-4628-b3de-a48e20a6ece0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1486 e29a1d4b-415f-419f-bade-a4857257d38c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1486 53f2194e-9127-40f2-9f97-b3be340ea2d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC9FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1487)");
    end
end

unit.assert_eq16(16'hC9FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1487 e7a04fcc-f799-44ce-956f-15c84aec9de9)");
unit.assert_eq16(16'hF7AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1487 7d3d07e6-d450-440e-8917-ede05c4e10c4)");
unit.assert_eq16(16'hF7AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1487 1e74a1cc-2c4e-4963-a3c6-12a142ca9a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1487 f3703f63-a183-4013-95e5-4f4366e8d958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1487 52c0681d-1d7e-4a72-8ad4-edacd42092be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1487 b29074f1-0724-4c11-8839-6d13aec58e7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1487 38690407-d35f-40f4-b13d-5e33386d9cba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1487 b35d4089-5e27-405a-a4e7-ddecea47bfc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1487 13d2c3ab-d545-4ea4-8bfc-db26b563c800)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h951B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA380;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2355;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1488)");
    end
end

unit.assert_eq16(16'h951B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1488 06dee2d3-f8ed-4914-b3c2-f9849a377bd6)");
unit.assert_eq16(16'hA380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1488 fd92e9d8-f9da-43b0-a8a8-fa434a31f569)");
unit.assert_eq16(16'hA380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1488 2ab206df-918e-47a4-a372-de0a28d1514b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1488 8d2a2314-b0e1-438d-ad48-a3893e462588)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1488 886a00de-7456-4f42-9094-52b5db3013ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1488 15562d3b-bbc8-4f83-ae4f-d2afb8967d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1488 415d456c-69b7-4515-8676-a77c8f98172f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1488 c654a8b8-22be-41c0-8bb2-82d069f30d92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1488 cdb901ca-e724-4d03-bf3f-01ae8784e2a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1489)");
    end
end

unit.assert_eq16(16'h61F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1489 48917f39-7789-4b2a-8894-d39a8130f143)");
unit.assert_eq16(16'hDD13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1489 6d4f0d7c-10cf-4b3d-b926-1908f5c1f827)");
unit.assert_eq16(16'hDD13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1489 6d23b0c6-274d-4b14-bfb4-d29b276b18ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1489 a306ff33-5cc7-4b6c-a23a-31ea7cbc3801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1489 1c54cc9f-c300-40c3-b27f-12d0337c1412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1489 e5160a59-3e18-40ac-aba2-df7819294b7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1489 4a9f7d52-a2f1-4786-ad69-7069fecf7756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1489 63f92106-089f-496a-a7ba-a619f793c22b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1489 bc7ad1ea-1dc4-4b02-88c0-3cc63e6dcb5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1765;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4662;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8B5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1490)");
    end
end

unit.assert_eq16(16'h1765, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1490 1e8d5628-771a-4599-a8e6-1f112f7b07be)");
unit.assert_eq16(16'h4662, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1490 4fc91327-2e93-439e-b915-dcaf2ed0eb99)");
unit.assert_eq16(16'h4662, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1490 e5aeae44-dd47-4cec-9019-63ef75d7f866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1490 380fda12-5ac1-4945-958c-db557ff4d9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1490 a38f3ab1-5bf6-4356-ad60-d08b5b60cf73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1490 945f54eb-931d-4cd4-9a50-1bab7e189372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1490 0ca3b184-4809-4d01-b930-335696a342e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1490 01556ba0-27ee-486c-9f89-9956f84d6ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1490 6621364b-0b1e-46ff-8672-540bb9526e3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3353;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hABF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1491)");
    end
end

unit.assert_eq16(16'h3353, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1491 686d47d2-114c-4499-b356-eda569666ac4)");
unit.assert_eq16(16'h7A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1491 5cab30b3-55b3-4201-b80d-7752c069c994)");
unit.assert_eq16(16'h7A35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1491 32d0e743-3e55-4090-9c67-0b252bcd39d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1491 014986e9-1a0a-420a-ac3e-bcd7aecd30eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1491 681daac8-3ad1-4676-acb7-de60dab567c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1491 eb1ebae5-876d-4935-86ea-5f359582472b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1491 54b491dd-6aae-4610-b58e-f70e2488bfed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1491 1a872ae0-af37-4f2d-a8e2-ced2fb519cb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1491 d8baa53e-d238-495d-bc12-75e99345250b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAFA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAD29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1492)");
    end
end

unit.assert_eq16(16'hAFA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1492 9414791d-ef84-4191-82ed-b1fd7f279228)");
unit.assert_eq16(16'hD0A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1492 253175dd-a16f-4efc-9487-76337cdc17d3)");
unit.assert_eq16(16'hD0A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1492 712ab577-60d8-4e22-b93e-83832ebc599d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1492 10436412-d4da-4778-a413-655788ac58bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1492 ab137a05-1285-486a-9e4f-fe0f71d87599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1492 d528d06a-2db7-4946-9ba0-c55964bb0660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1492 92a4951c-37d2-49d3-8aef-f217bf79a00e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1492 35189576-8edd-42de-881f-d6dbda41c0f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1492 f6c7077b-e325-4101-b09e-8a0e0e86e410)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5861;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDD09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h792E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1493)");
    end
end

unit.assert_eq16(16'h5861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1493 4ddbf499-6baa-486a-a6d2-85859ae81743)");
unit.assert_eq16(16'hDD09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1493 20a40375-1036-46df-9c1a-fc0c36e2ceb4)");
unit.assert_eq16(16'hDD09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1493 2d30aac3-8a12-461d-affc-3a196338f962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1493 8e707074-4e7c-46e9-a811-36a63d3eb58c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1493 1a4d8cf2-61f5-46d9-bb4c-0a9ac772eab1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1493 95b7c68f-6ff3-4c8b-a572-2e3c2d3ccb2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1493 bb26e5e1-9db9-4d31-b7b4-86ea81a06f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1493 13d6f826-30f2-4ada-b5c2-860ab23ab8ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1493 a0a71b14-2a11-4d76-8152-e96c36994fd9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6634;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h417F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h608D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1494)");
    end
end

unit.assert_eq16(16'h6634, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1494 b909c4b2-bf7e-4916-91c1-f57a485d34cd)");
unit.assert_eq16(16'h417F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1494 0c4f695f-5d93-473c-8f68-93de6c8538c8)");
unit.assert_eq16(16'h417F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1494 d4f4d21f-26b3-4094-8e0d-fb94d76f9b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1494 6241b665-b211-46cb-81b1-ff786a848e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1494 17941dc3-86a9-48fb-94a6-cc4af01eccb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1494 b6cbd0d1-82aa-4142-9f30-cb3abb7e98a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1494 ef2cf40d-afbc-4e6f-9649-a3dc2fd43844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1494 ceea8ed4-7407-4c6e-bef0-b0149afd1f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1494 574ed0cc-8ed2-409f-b70e-773be34003d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1495)");
    end
end

unit.assert_eq16(16'h2B4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1495 34f4099a-a46c-4486-86cf-a79bf954e5a2)");
unit.assert_eq16(16'h20DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1495 a003f2dc-26c2-44b0-8e6b-8c4c62f206ff)");
unit.assert_eq16(16'h20DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1495 e4d73c98-96e8-4812-9de3-953a90e27470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1495 16856a7d-cfcb-4069-9468-681a023e2afb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1495 f0e4b405-9f04-4c38-bade-6968df4233b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1495 00d3845e-4ce8-4ada-b53f-dc91e29ecdcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1495 2c93b5dc-a8a0-4329-8bc1-25d8d2a396be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1495 8b405c55-65d5-4a5f-9fa1-d8f9385876e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1495 316c77fd-bc12-4636-a888-e3ab60c36840)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0024;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1496)");
    end
end

unit.assert_eq16(16'h0024, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1496 3de91269-f27b-4205-a1e5-e335d0efbec3)");
unit.assert_eq16(16'hA5B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1496 4c0d2734-e8b9-45d4-901a-82f5ba2afad2)");
unit.assert_eq16(16'hA5B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1496 57f3e6a2-1272-48a9-bb95-5ddb8022e892)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1496 22e0179f-ab97-484b-96b9-78134affdc40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1496 6f484b26-6051-4b83-8a41-9a7214bc6317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1496 96c61d52-dd9d-4ada-a0ce-e806d1473081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1496 7ba0168d-244d-4c40-bb7e-cbdbd0790c5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1496 83da8c15-48e2-4b67-925e-a98e6d773ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1496 5d22790a-e47c-4ad1-867c-5fdfea15eab4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEA67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1380;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBE07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1497)");
    end
end

unit.assert_eq16(16'hEA67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1497 e0b1c896-0336-4307-a49c-b6a65c465b79)");
unit.assert_eq16(16'h1380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1497 579e9145-29d3-4204-bc2b-093c1a267cec)");
unit.assert_eq16(16'h1380, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1497 b1c8fb8d-b9e0-4009-8757-cc3b64a56fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1497 d04e9757-d731-45f0-93f1-44837f58e873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1497 c5e60c21-4f31-4e4e-9a25-18129ebf59f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1497 7513e004-ba67-4b28-9216-674ba1a767b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1497 903009f8-e905-4a47-9edd-7149941392e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1497 0f3e99d6-2f24-4301-bf50-ea9da7d14849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1497 f9097100-1097-41af-aa12-d03bd7fb54f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8AED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD357;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1498)");
    end
end

unit.assert_eq16(16'h8AED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1498 c9ff6893-bc05-4a66-9c79-5e26416bedb5)");
unit.assert_eq16(16'h7A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1498 bf26820a-d7be-42c1-ab24-1fa55b673504)");
unit.assert_eq16(16'h7A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1498 79c6638a-d645-4e41-92a4-b39d45dce20f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1498 d1bb9707-59d5-40aa-b3cb-b3f2534422f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1498 db278115-9566-4395-bc96-a1a5dabfcdee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1498 169db43a-4ae2-4213-b4c7-34bd2acf6f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1498 2e8af59d-c508-489f-92fd-a5169c82d7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1498 c4015c8f-2ec9-4af9-ab5b-0aebff2a625e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1498 ea7ef32e-3465-4e7c-9e74-20425b448fd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA299;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA72E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1055;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1499)");
    end
end

unit.assert_eq16(16'hA299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1499 bbd2cb8c-e2a0-4f84-a29d-678ac340b215)");
unit.assert_eq16(16'hA72E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1499 ff11648d-914a-445e-8894-27140a895975)");
unit.assert_eq16(16'hA72E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1499 f371e9bc-6ed3-47fb-8c5f-f435f0e036c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1499 b9804356-d90d-4922-b96f-b98fd7c2f199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1499 48c0a507-899d-4ae8-a7b9-7f286f2ccc17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1499 5579f925-538b-49e4-83e1-0aa62765cc64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1499 ca568741-4f73-4a10-bd6d-438d26a863d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1499 9a5f15eb-b194-4df0-926b-21c577725e8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1499 80d0e9be-e6e3-4796-b59a-565d5a12c5e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8B24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1500)");
    end
end

unit.assert_eq16(16'h4C6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1500 6d2417b4-006e-4a98-8151-8ad65b243d40)");
unit.assert_eq16(16'h8B24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1500 a93f6a73-2d71-4cba-9445-13e5715bc63e)");
unit.assert_eq16(16'h8B24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1500 ac482bba-fa3e-4bc3-8687-5ef5184f6584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1500 9256bc4c-a321-40e1-8314-d5e6b0d2858d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1500 a3cb3d57-accf-419c-adf7-7781a0116e3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1500 78d999bd-b52a-4be2-be71-bb5024e72c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1500 96b1a2e2-4b16-4a36-bbea-def0404cbe6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1500 c4e8e529-3ad9-45de-aae9-7f5e51f9b129)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1500 8d508dec-c046-480b-a4bf-4f59dc01cd2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h37E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h10B5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1501)");
    end
end

unit.assert_eq16(16'h37E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1501 3d566bd2-6e65-40af-a1b4-95a4f6218f05)");
unit.assert_eq16(16'h10B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1501 1b0e0dd3-f829-4714-b4d7-811ef920fa92)");
unit.assert_eq16(16'h10B5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1501 14da776a-1ae3-44da-b348-e2f366d34cd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1501 fd1832f6-8351-4b5a-b964-722b397a2399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1501 b42d6aae-fd2c-4fec-afe3-6963f1385253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1501 edb9ada5-5c0e-47e7-bd50-8aac2a3a2b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1501 85dcd2e0-6577-4aa8-b1c9-370d01051732)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1501 2f5ce906-daae-4b6c-9f5a-6822c22a8387)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1501 9f8719c2-011b-4e05-9a20-3f0de856c261)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8C1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h097A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h98DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1502)");
    end
end

unit.assert_eq16(16'h8C1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1502 27b3d0d6-3698-41f4-b6c7-102966dcf67d)");
unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1502 e7328287-9a2b-4482-8d8c-1cbf68d20ed3)");
unit.assert_eq16(16'h097A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1502 c1c1fd5c-7935-4865-a055-3d8112d3397f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1502 d22f29e8-0433-4620-810d-b34341197574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1502 05d212bc-1987-4906-b931-efa7dbee0a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1502 79ea460d-1b5e-40fd-9e3e-faf9d6a11a38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1502 62d841b9-3883-4be1-a87c-b6493b1bcb1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1502 4a13422d-b11f-4866-84b3-7b95a8396225)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1502 1e78f200-08fa-47c9-b82b-a8309529abf2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9E51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAAB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4AEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1503)");
    end
end

unit.assert_eq16(16'h9E51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1503 8797e9da-d197-43d2-8ae9-e605c5bcbba1)");
unit.assert_eq16(16'hAAB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1503 5f0f9076-1cf0-4e35-9a95-dafc51452f3c)");
unit.assert_eq16(16'hAAB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1503 f5ead5f5-a5f3-486a-a17c-f63bc2bd1a5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1503 d2310abd-2d49-4194-badc-1d2be72bd904)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1503 5b5f8374-2d4c-4359-b6c3-ef9f1630dbd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1503 734f8e43-29bd-4461-adc2-d5fa8135e022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1503 cf98d0b0-eb52-4b76-bfd9-62d1d231cbf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1503 798aa716-b208-4d73-bfa9-524bc0a46d1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1503 d92034ed-246f-449e-a036-19c70246b32d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h154F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h89EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1504)");
    end
end

unit.assert_eq16(16'h154F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1504 880d7622-088b-436f-b54d-4e02d611290c)");
unit.assert_eq16(16'hFC63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1504 b93bfcd4-cc9b-45b0-ada2-78b14565be29)");
unit.assert_eq16(16'hFC63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1504 53c2a0de-b968-4de0-9700-9f32c40304ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1504 7ae75d4a-9238-4201-ab4c-c91f292df34f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1504 f36139b0-d66d-4a34-a052-5e6868580ade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1504 fcfc6303-1c22-4ae3-a3ce-be3f3a321627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1504 c2894e33-9a91-4a8c-a096-a0a8bfcce1d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1504 a5821d1f-d6e1-4d97-af6d-c5250b4b7dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1504 8e0a9f76-6207-4c34-a71e-8a2fc9e96a17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h530E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h505B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1505)");
    end
end

unit.assert_eq16(16'h530E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1505 b499fc22-7314-447b-aaaa-b8c301aabb67)");
unit.assert_eq16(16'h505B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1505 7a62effb-48f4-428d-bbd7-b00bc7c869ee)");
unit.assert_eq16(16'h505B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1505 f7841a30-d8b8-47ca-a8fe-b30161bd2e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1505 20164fff-c9cd-4321-81f3-d74a860249fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1505 4a474cf7-3d9e-4275-a0a9-24f4b9931dec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1505 633c44ab-c526-48fa-9d29-862434dc1720)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1505 b19fb1d6-26fa-4586-aa83-e4e0ae3d23f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1505 66899fae-74f6-4c99-b6f7-37e1231bb9f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1505 2a60ecbe-91e1-4452-a841-c553584270ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5BAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC607;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFA32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1506)");
    end
end

unit.assert_eq16(16'h5BAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1506 33a77823-6f4a-4c11-a5b9-1aadb68fdf79)");
unit.assert_eq16(16'hC607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1506 699135ca-9aaa-4185-b908-17fb475983b6)");
unit.assert_eq16(16'hC607, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1506 1af8da18-1a74-4b79-b4ae-5db812f6a495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1506 b4e6aa13-3371-441f-984e-bd206a184e44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1506 9098c4f2-13ba-4cc4-95ab-d15504cb6073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1506 1c6ced8e-e140-485a-b3f2-abddbd0af807)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1506 ea4af1d3-73f6-46e1-914e-b383ad487d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1506 ae440158-dd2b-4a47-a14c-6b8875371434)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1506 8b8ae96a-798e-4922-a964-a69fdc64ec84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC9C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE89F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9441;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1507)");
    end
end

unit.assert_eq16(16'hC9C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1507 1a43737d-21bc-4347-8723-7984f6f5a455)");
unit.assert_eq16(16'hE89F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1507 79f4d145-8bca-4544-89e0-4d9fbedade13)");
unit.assert_eq16(16'hE89F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1507 6e531c70-9283-493f-bfd8-3bf1892fc517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1507 e08952bb-bbe1-403f-9087-453cef2ac3e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1507 7270d9b1-a47b-4f2d-a5be-bc1434279dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1507 e034a881-79f4-49c4-9659-2eb517c69921)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1507 454c023e-15da-4050-bcef-7c98cf30a1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1507 51d0bd37-cb5a-4faf-bfd0-c44f8925d1db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1507 51b4420b-8a1e-4efc-9752-232354e75b92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h654F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE75B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1977;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1508)");
    end
end

unit.assert_eq16(16'h654F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1508 415bec1e-37fe-45af-8636-354ff825dd71)");
unit.assert_eq16(16'hE75B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1508 f084707f-5ba4-4c92-a615-c7eb4f7df6ff)");
unit.assert_eq16(16'hE75B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1508 f41b9ccc-14d0-4f94-aed7-e0b5aac52add)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1508 09ae0afd-cb09-478e-8e85-01297bb2cae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1508 92ed0760-922f-44cd-ae52-0ae39bf7fa5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1508 16a792cb-7edb-4a59-8253-8228307758f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1508 15133b4e-9e1a-42c3-ad2e-b29000d40efd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1508 e077adde-3ab9-4fa1-a712-a92bfa632e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1508 36abd12d-a38e-41b1-b955-ba842f2cf0a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h41AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1509)");
    end
end

unit.assert_eq16(16'h41AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1509 7e3e64c5-5ce6-4d8c-9b08-1c1e399c8582)");
unit.assert_eq16(16'hB9B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1509 5e0908cf-c08f-42b4-b2cb-b41ce2d3673a)");
unit.assert_eq16(16'hB9B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1509 b7dabbf1-1490-4908-9814-14552cb9f223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1509 ba887100-b451-43b3-9066-d89966152ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1509 27948d14-b3da-4340-8849-a9af19051ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1509 84a2e811-a058-4ab1-9c0d-9d5e972c25b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1509 0c13a8f4-0c16-4fef-882e-4f1b9ae547e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1509 3b7ee6d1-800c-42b9-af91-0b470d0a265e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1509 484ed924-5ec8-43a2-9e0e-8bb4f54a3f63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0E0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF63F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF92E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1510)");
    end
end

unit.assert_eq16(16'h0E0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1510 99edf8e9-4388-47dc-b05f-84ec81f1a337)");
unit.assert_eq16(16'hF63F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1510 69972177-ebf4-4529-a96e-d6f9acd0deaa)");
unit.assert_eq16(16'hF63F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1510 35957b23-cc50-4b4d-abc1-a20b83bc29f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1510 5ac2abca-3808-4378-8265-e5b8df7edf8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1510 590675b6-5433-427a-bd94-31cf04f5abce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1510 1d37a1f2-277f-4541-9539-2b1c41a3e43a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1510 c794b45d-7ffd-446a-9f12-fb68aacf1e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1510 54217fdb-e18b-41a3-9028-c51a1337554b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1510 1a45167b-d942-4a40-b915-c4cf2e056ef1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1511)");
    end
end

unit.assert_eq16(16'hF3D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1511 e2430d08-5e2c-421b-93b1-a51e8e458efc)");
unit.assert_eq16(16'hBF72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1511 587b3a30-e1d7-42aa-9c46-17620f0eb505)");
unit.assert_eq16(16'hBF72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1511 77ab090c-c2ad-41d5-a5cc-1287980efe2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1511 13887ae0-3a2a-4838-aef6-e6d4d5a896e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1511 26556542-9869-45ad-819a-6700bd06b1e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1511 2bdbfeea-0a06-4a39-a7f2-831645d5eada)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1511 b96c7f35-f395-432f-91b3-80b60e771715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1511 4bb720ba-1107-4014-baef-191831301c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1511 b05c17c0-0a9d-40eb-950e-370049981c07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1512)");
    end
end

unit.assert_eq16(16'hAB93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1512 dd04d4a7-5e07-4457-b5e8-768cede4b667)");
unit.assert_eq16(16'hABF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1512 eb6e0e61-d961-4893-aaf1-62810b847063)");
unit.assert_eq16(16'hABF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1512 5b44f8f6-e3d9-4897-bb9d-b2f6dec54e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1512 1c4c8487-2339-402c-8028-f922c7f36ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1512 9237a8fb-8ad3-4903-a6ae-f88ac89f11ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1512 c80a2c3f-f28c-4cd0-bed6-7c34f41eff9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1512 6193aff8-e81f-4c13-b9d0-08017bfdc3f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1512 8f3885e2-3585-4614-ad4f-1251af509e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1512 88045c1f-b91e-4d1d-a224-973066baf75b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1111;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h51D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h94E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1513)");
    end
end

unit.assert_eq16(16'h1111, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1513 19ea4c99-5fe2-45b7-9361-5d65b9949c27)");
unit.assert_eq16(16'h51D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1513 bbfa4a33-1340-4603-93bb-40a56b3738e1)");
unit.assert_eq16(16'h51D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1513 7db72d25-eb22-4404-9987-d938da38fa04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1513 0b2b31a8-45a7-4bf1-97ba-b5c74790494a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1513 92ab7c2c-2455-4c63-ac2e-4828fb66b81c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1513 84ef9649-60f0-4e3b-8f7c-d9dc93cabae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1513 44a34e9a-ee9d-41ca-9a2f-9100f88719d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1513 bbcb0a3a-2c21-4b04-9957-c6232107b8dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1513 9dcd5fde-d4eb-4a7d-b563-e9fad8a41a5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB976;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1647;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1514)");
    end
end

unit.assert_eq16(16'h0EC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1514 43a3e343-c5eb-4ae3-b9d2-fe9fb9f9d5d6)");
unit.assert_eq16(16'hB976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1514 9e6fea1e-6c73-47a4-bd0c-6403ed393823)");
unit.assert_eq16(16'hB976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1514 d30cb646-6813-48b7-9450-46aa82c03386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1514 49458e94-f088-4559-9ced-5612ef3c582a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1514 57d60eba-b128-402d-b1ff-a32914a85e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1514 bcaf5370-035e-43e7-bc30-bf09d1c8c24f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1514 9f3c75cd-a0c4-4a15-9386-98aa1893d412)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1514 6499c380-1129-4d80-aba8-6181b1fd57bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1514 c6997dd3-a800-4486-8e68-87c0092ed022)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF9EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9AE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB4C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1515)");
    end
end

unit.assert_eq16(16'hF9EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1515 a0626ce9-ae97-4586-be26-5f00e3a6edd6)");
unit.assert_eq16(16'h9AE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1515 b605e055-c5dd-4ee0-978d-9f68e6944f34)");
unit.assert_eq16(16'h9AE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1515 4be78940-0015-4552-9aca-77815f212da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1515 3a5efdc7-e248-4c3f-95a9-2ec6f68bf8f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1515 efadb89e-1b4a-4796-81e7-34a40d45c02a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1515 ab0058e2-3fae-4b11-bfdb-28fac4607201)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1515 1744df16-80a5-4d4b-abe3-4444ba5a4838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1515 a3bbcea3-d519-4fe8-9ee7-fb614c347946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1515 31fa3ede-f0cb-4df7-86a1-a8081e17213b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA359;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h047E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h207D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1516)");
    end
end

unit.assert_eq16(16'hA359, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1516 d791bd2c-b7cb-4fa1-ae05-8d6a52f9e45a)");
unit.assert_eq16(16'h047E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1516 6dd6b39b-2f34-4abc-9bff-c2917aa8fa94)");
unit.assert_eq16(16'h047E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1516 a72e8b3a-a46c-49d7-95e0-b90c8784eebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1516 17869213-37db-49b9-8b2b-8749f1899209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1516 68fe6630-ee29-4b95-98b7-06cf9a62916e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1516 5ceecd1d-ffae-4923-b95a-dc3a787289f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1516 1525202a-3243-43a2-8400-355c572366f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1516 89ef2f4e-9627-4a37-a3f2-8f1ede8c70fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1516 b4fe40fb-fa39-43c6-8c54-1aa6e0cbfa7f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA55F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB67C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFE25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1517)");
    end
end

unit.assert_eq16(16'hA55F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1517 01056354-8cba-499c-a747-3fe27387ad32)");
unit.assert_eq16(16'hB67C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1517 78490fbc-1e89-4b80-a969-9731294054e1)");
unit.assert_eq16(16'hB67C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1517 19080dc7-d957-4e21-9d3b-17ea81013dfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1517 77ebdfcc-f124-48ee-93d5-f49097a21749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1517 d91ffcef-241e-4c22-96b7-1206eca18948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1517 45de3364-327c-42e9-9f4f-782169cfa7d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1517 c26b1788-afe5-4493-bf09-cfb880247ea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1517 9c4aff48-ac7c-45d3-a46f-d54b5ea93f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1517 747138ac-9341-431c-92e7-9fa5c2c3b9b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD491;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA0CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1518)");
    end
end

unit.assert_eq16(16'hD491, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1518 d85d3183-6a31-427a-8ef5-f97cdcce53c4)");
unit.assert_eq16(16'h0D4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1518 67bd3a0e-3e05-4dd1-b085-85e359d98cce)");
unit.assert_eq16(16'h0D4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1518 fe909719-34dd-43ac-9925-5598530e2887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1518 0b16bcb2-59d0-441c-add4-ac87c1f4f65e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1518 189e7d8c-cebd-42a8-8ef8-c1facc341e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1518 ee37704a-80c6-4a96-a060-9ae4e9b22b93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1518 d0b6128c-0f1b-48f9-97e0-bb22c4ff5496)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1518 f59a6ab0-1f3c-4063-a9d6-b25ee5151592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1518 0a1a1854-bebe-4892-9c95-520412137576)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBC75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h07A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h33B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1519)");
    end
end

unit.assert_eq16(16'hBC75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1519 ae00b3ee-7443-4ec7-b36a-bffa7a84d9d0)");
unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1519 6d88047d-2c32-478a-b4ec-761bd25059c2)");
unit.assert_eq16(16'h07A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1519 d2840c5b-a73e-46e8-a2bf-7a8326728f38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1519 6d29e228-b251-4aef-aba5-f15666538de5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1519 b2e192f1-b5cc-4be4-9dc8-7902547927eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1519 6e43312e-f2c5-4476-909d-63170b02a716)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1519 10ce39cd-78c8-4586-bfbf-a1da083e13c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1519 3938d551-be9c-4a09-9ea9-24627399430e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1519 2aebbf97-2096-435d-a832-7c6c45198d3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h474C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAAB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h554F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1520)");
    end
end

unit.assert_eq16(16'h474C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1520 66dd911a-0bf6-48dd-86ec-bed28e688d51)");
unit.assert_eq16(16'hAAB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1520 3234ec4c-c4e0-4197-ae16-c0144812b504)");
unit.assert_eq16(16'hAAB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1520 b33d1c16-837d-44d6-83ef-eb27308ad6dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1520 16664dfa-24b4-4117-b1d5-4af334b179b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1520 8e2c3467-f459-447b-85fe-e3f245c411a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1520 1d5ffc6b-5399-4ab2-a003-d5b16adcd963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1520 0bddda3a-16cb-4385-9bac-241b2a02ecf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1520 753a2de3-73d4-4477-8aa0-becb806fa1aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1520 a60c309e-7c18-4b3e-88fc-bce1b626bf5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8748;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCEFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4F1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1521)");
    end
end

unit.assert_eq16(16'h8748, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1521 309cd413-0003-4bfe-9ae4-b1686313baf9)");
unit.assert_eq16(16'hCEFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1521 0002dcfa-174a-47d1-8a9b-13869eb82ee6)");
unit.assert_eq16(16'hCEFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1521 8341d06c-219a-46d9-96aa-bbc5fb8cf3bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1521 c5e47bfe-4d09-4f72-b92d-63a8433c3b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1521 f9755371-3e92-481b-a039-0f7a6cbfddcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1521 b544fe1f-1921-457a-ae69-ca8c887b159e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1521 24e07d07-da0e-458c-8092-f8141a07bca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1521 57ce89b8-6639-4f67-a93c-c3b6e08ca238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1521 0b50f7a3-db92-43a9-b09b-010deff08685)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5D4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEB56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB1D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1522)");
    end
end

unit.assert_eq16(16'h5D4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1522 1d2fd577-ff33-4587-8369-3884d706c7f3)");
unit.assert_eq16(16'hEB56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1522 43b93a6e-a044-4bc1-bc08-5bcd67a051dd)");
unit.assert_eq16(16'hEB56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1522 019458e5-94e9-4433-8925-bf96ad245790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1522 8433e249-0fcd-4261-9138-76bbf25cbede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1522 4c8226e0-badc-49d0-84a9-74f5089e42cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1522 404a4a4d-9b3f-4dc8-a639-ec4e14decbef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1522 5861e63d-b7b9-4273-b729-67df5e7c5776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1522 66372dfe-40b6-41a8-83f6-4fa87fe0b656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1522 44471e8f-e45b-45b2-86b5-67098f69ff30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7A44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF9E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1523)");
    end
end

unit.assert_eq16(16'h7A44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1523 37f32f63-5315-4589-b55c-596c3bba4a6f)");
unit.assert_eq16(16'hF9E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1523 38b39969-851b-4ccb-bf19-1c4a057ddc1c)");
unit.assert_eq16(16'hF9E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1523 723c9fa4-8cc4-4cbc-8429-81f1754c924b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1523 cdb80898-742d-4b41-89bf-90781e2fa1d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1523 5cb3a39e-879d-4f81-b062-d796ca5632cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1523 0aeae296-325f-40e0-a556-cf81dac04453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1523 e4c4f3dd-55d3-497f-b4eb-619c9f5f422d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1523 582993bb-aa9a-4fd4-a985-02e7d9032cf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1523 ad80de05-66ce-4b0e-bf14-c70a89f8e3c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBCF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF597;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1524)");
    end
end

unit.assert_eq16(16'hBCF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1524 6b543eb5-77b8-4c4d-8547-4f788b0d6c29)");
unit.assert_eq16(16'hB2C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1524 051e5e96-7063-4754-865d-6b0b9e32c0e0)");
unit.assert_eq16(16'hB2C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1524 80c678d9-09bf-46c4-8a65-a1a7f059038c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1524 7542fe1c-bb42-4d48-8225-008605463ec3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1524 7ce2c0ed-dd16-48d1-b5ff-db8574f768b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1524 921ff988-b469-410e-8497-b319f5752bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1524 36e7f994-27e9-4dc7-aeff-eac6f06410b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1524 3b4b2547-5756-471d-aa5a-957ae96e0328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1524 f5d0d81f-72f6-4859-b89b-31b6363fac11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0272;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h03F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1525)");
    end
end

unit.assert_eq16(16'h0272, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1525 4a5fe4e3-79a6-4f93-a2f9-54ebc69e37f3)");
unit.assert_eq16(16'h03F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1525 aa8fa529-b074-4edf-a818-c837b44a2bce)");
unit.assert_eq16(16'h03F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1525 1debceb4-3a8d-44f9-a40a-adf93d0ea4c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1525 6845da2c-8358-4dde-8afa-4e6ec775a8bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1525 a7e1a432-b430-4804-899c-49ca2d615d28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1525 c023aa3e-f52f-4374-bdbd-b6ff3d0f56f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1525 80b23d6e-72b0-4859-9e51-a4a526567069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1525 0b0bee06-5ae1-416c-91f1-de128b926395)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1525 850a2072-592b-4684-9257-92208d8fa0e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7BD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE12E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1526)");
    end
end

unit.assert_eq16(16'h7BD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1526 98d5a33a-c710-43a9-9142-0b6084bcfe22)");
unit.assert_eq16(16'h0D55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1526 f1e7379f-4064-47b5-894d-38b016945e3f)");
unit.assert_eq16(16'h0D55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1526 149e0cff-29d8-4f7f-b4fc-461e1415b43b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1526 bdcb36e2-c35b-48e2-a8de-d04bc8bacab4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1526 35761eca-962e-49cd-905a-7f3fcad1e66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1526 23d59462-6a5d-4b01-9177-c32027f17491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1526 e7602eb5-45af-40cb-bcfd-781f9588f7c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1526 b600bfa2-1c5d-48c9-9528-d2f8da6d6e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1526 cb67384f-3bb4-414b-bc5d-64cb92e4a941)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC7BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h80F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1527)");
    end
end

unit.assert_eq16(16'hC7BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1527 6f60070d-f62f-4a63-ab0c-351f87fda623)");
unit.assert_eq16(16'h80F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1527 efa4677c-6b29-4dd9-9daa-23a0aa4259b8)");
unit.assert_eq16(16'h80F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1527 e5a56b66-9951-43fe-82d5-148dcc51df98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1527 380bd3dc-8319-494f-ae2f-de10dcd70fae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1527 54da7e28-f43b-4776-a6b2-60eac158c57f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1527 c05aac0b-ab1c-49c2-aab6-1f836878f960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1527 25df79af-c5b7-4d5b-9736-12ada0fe3e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1527 6e69d863-9da3-4aa6-9d7d-1dea5f42d96a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1527 88b52608-f706-4605-abd5-93068065e1cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB50C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h94E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1528)");
    end
end

unit.assert_eq16(16'hB50C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1528 680647cb-a0bf-4f53-8c49-41fd33dae259)");
unit.assert_eq16(16'h20EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1528 cba555b4-b549-498f-970c-dc1dcc4ab98a)");
unit.assert_eq16(16'h20EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1528 ec7059e0-41bb-4ed2-bb60-e2136028124d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1528 30e71cb2-33d6-480d-8c4f-18b17f244983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1528 0e164744-ead4-4e93-a5d4-9d44c09d38b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1528 9ebe17ba-f65e-436e-be1e-305f9faee61a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1528 6f961325-ea70-4ae0-aa80-14b4d484cc5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1528 1ba6e49b-99d4-4b8c-a570-3a9e1ce28e53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1528 af8f3f5c-0d73-4d90-a8a7-f5d7d9a89e0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9E2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDFC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB685;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1529)");
    end
end

unit.assert_eq16(16'h9E2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1529 894b1eed-bf63-4038-a015-f6c11f7048e9)");
unit.assert_eq16(16'hDFC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1529 ef3c3e10-b9b1-4817-926d-0f8311e4dfb7)");
unit.assert_eq16(16'hDFC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1529 13eb4d2d-677b-4762-a9e6-18b67a9eee09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1529 cf883db5-7f80-4e9d-9dbb-17fa06e69c60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1529 3cc42a13-3beb-4029-97ac-b8a10fc74059)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1529 31204fce-1aee-4ea7-ab17-24ec0c0c3826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1529 22de032c-d860-4f32-b62f-f624050375c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1529 f126ee0e-89c9-46cd-bccd-9273d9475d00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1529 f72662c7-a043-4d2d-8220-cbc3c0b477cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC8E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC5DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1530)");
    end
end

unit.assert_eq16(16'hC8E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1530 a1655ef8-54c3-44bf-afc5-0e7e3265f068)");
unit.assert_eq16(16'hB8DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1530 e4b688ea-f6be-4226-8ee0-c386f212057a)");
unit.assert_eq16(16'hB8DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1530 993f7f3d-ff2c-48e9-acf6-bbd22252c2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1530 88e23c7a-4e39-489e-92e8-b6eb7e046d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1530 813209c4-f25f-420a-a704-268a022e6a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1530 d0095744-38f5-4c81-85d0-c5ed89a802b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1530 9b53172e-347c-43d7-a6dd-0405913cf863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1530 9a1b6411-4d04-49e5-8590-107908c7f69e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1530 d0a3e151-56ec-45cf-bb58-8faaf977c597)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h92E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h44AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hED50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1531)");
    end
end

unit.assert_eq16(16'h92E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1531 ed277e15-6f42-4ada-a755-fb7b990809cc)");
unit.assert_eq16(16'h44AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1531 c7567d71-64f7-4d7b-9b3b-2585ef1e9cc0)");
unit.assert_eq16(16'h44AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1531 947964a8-481d-4425-be7d-2cbc8e145f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1531 82981b22-6328-4fc4-96fd-5e961b8874ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1531 e7d39681-5c9f-49cd-b1a3-310468dd0a83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1531 9e56267a-2076-454e-9862-6a82727d43b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1531 50706893-e943-42a2-b8a2-6d304a3d3ab8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1531 456c331e-8001-4c0c-a64a-d6b52dcd167d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1531 4394374d-86e1-4cf5-b77a-ce2312bc99aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9888;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6045;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1532)");
    end
end

unit.assert_eq16(16'h9888, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1532 50a2c742-36d2-4e7a-a84a-1b23ef85c13e)");
unit.assert_eq16(16'hFC3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1532 33acb519-578c-4c8d-9553-4d0157ff61c3)");
unit.assert_eq16(16'hFC3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1532 d97a6725-12ba-4eac-83b1-c56ef01ab58b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1532 4e8cb34d-6dca-4484-9326-151434e95ee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1532 476bb352-c711-4596-8e7b-f65101e82adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1532 02c4f7d3-c986-477e-baff-c4e777698bc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1532 561c1254-4e31-4483-81db-d0f764bf68c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1532 5b3549b4-2d1f-4f15-b980-c8224fd77ffa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1532 7137de07-0f19-4e38-a02b-805e8dee6657)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6191;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4587;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE635;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1533)");
    end
end

unit.assert_eq16(16'h6191, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1533 ae0e368f-ce36-4f8e-8e50-ff9c055d56a0)");
unit.assert_eq16(16'h4587, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1533 e3202eb2-271e-4e57-b8c0-b5f6955c4815)");
unit.assert_eq16(16'h4587, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1533 951601d3-995c-427e-8b8f-d82b750f0bd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1533 4088a477-61b7-4cd6-aba0-01029d4810f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1533 2e8effb6-c980-4b34-9608-72ef3d3a48ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1533 f582fbe2-5cdd-4835-8d05-2d96b2be68f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1533 3f3f80b3-29d9-4218-96c5-9385fb9170a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1533 eb485b68-8424-4f21-867b-f43ecf7cd3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1533 9f57aa69-6ee4-4c8c-a019-01e961b83ea0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0941;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h65AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA11F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1534)");
    end
end

unit.assert_eq16(16'h0941, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1534 ab15bc84-eb96-4850-a1ef-1fafd8154ba7)");
unit.assert_eq16(16'h65AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1534 b206c6d1-3b0d-47fd-8ad0-9f7dd234d90e)");
unit.assert_eq16(16'h65AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1534 ad9270a3-b95e-4ca7-be9e-bb9eeedc4103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1534 a64f9ffb-c1dd-4433-b0a2-d88e347b0296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1534 7f94a186-fa6f-4ea5-ad4f-a74ec93ab86b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1534 9b2a7a52-957c-4533-86c0-5a7d62efc4ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1534 4d3a684d-612a-46b4-8e20-1c7bfaa2823a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1534 bf1e5ad9-0dc6-4c9f-a599-f096fe1cadce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1534 ce64b91d-9200-4adb-a2fc-33c6c8078832)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1877;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB732;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEDA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1535)");
    end
end

unit.assert_eq16(16'h1877, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1535 6acc2605-ce15-4eda-851c-9dbc671c95e0)");
unit.assert_eq16(16'hB732, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1535 f5888ea8-c869-488d-bc78-3743dd3f7d9e)");
unit.assert_eq16(16'hB732, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1535 5e1d8775-2366-4314-bd6d-32b3a5842183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1535 89c7c220-d426-484f-bc8d-2ae2acb36543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1535 dc588f22-0104-4095-bfb5-4164545b436b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1535 f092c0d5-7447-4990-aafb-3a4a9f56da44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1535 07646957-146a-4279-a8fa-1744a64b4c7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1535 6cfe9e80-728e-4aee-afbe-6f37cb052648)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1535 18c57f22-e961-4e7b-a524-2a33036e0289)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4BD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFBB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC099;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1536)");
    end
end

unit.assert_eq16(16'h4BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1536 ead8c1f8-3b87-4194-8635-7004b01e7294)");
unit.assert_eq16(16'hFBB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1536 644bed5e-b551-4be5-9453-00ce6dfa00f1)");
unit.assert_eq16(16'hFBB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1536 702ffee8-ccdf-47dd-8b84-2f7d3a690f6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1536 50d72df4-20a9-48c5-994b-50d888454212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1536 73831bdf-bec9-4abf-9a6a-8ea247486677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1536 7da432c8-a58b-40bd-ba08-b983df64668e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1536 4a84247e-b878-4adb-9ba0-6a60383effc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1536 eeb0cb7b-1078-47aa-8b96-9bb5639d422c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1536 2a9ed1a3-1cd9-483b-a662-0c1d3bc0616f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEE0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h56C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1537)");
    end
end

unit.assert_eq16(16'h3C1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1537 dd053198-cbdb-4959-887c-dfe47a088d34)");
unit.assert_eq16(16'hEE0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1537 7bd156ed-1324-46c4-b507-30b1f3c4d3d7)");
unit.assert_eq16(16'hEE0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1537 ab695c4b-ec74-4a02-95ce-ebe571ee106e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1537 9dcdb749-a782-4730-a1c7-f459536c7bd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1537 65d9f342-d9fc-4a0a-b0a5-10a6b618c19f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1537 ca7b4ed0-bf72-4cb1-bd2d-7eef031ca253)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1537 3e9f5a12-0c20-4571-b6d7-447beffaa469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1537 d9546b67-1998-4098-9434-3e29f67ecdd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1537 ebe61893-cfbc-4d83-8be8-0cfa1bbe7aad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7F74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1538)");
    end
end

unit.assert_eq16(16'hDA38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1538 7e5488ef-f698-410f-b7af-9456bb4e8eaf)");
unit.assert_eq16(16'h7F74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1538 a78f554c-c405-4994-bb79-ccb9a32baa72)");
unit.assert_eq16(16'h7F74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1538 27fabea9-cb78-49f4-ae47-24a8b56ba637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1538 5486a5ee-49f1-489f-af32-695730164c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1538 3ecea309-0df9-4185-841a-282f126e0b4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1538 1bc77ef7-4d71-4024-83cd-a31cce939c40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1538 63dc0b09-79c5-4d5e-bc85-e26af5301252)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1538 48e5802b-24fa-4f87-bb52-7efb115bc85c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1538 36768acd-9983-4a8a-a363-5e4be5dba4e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7AC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA4E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1539)");
    end
end

unit.assert_eq16(16'h7AC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1539 fdf55524-0585-4eb1-92dc-6675c5b95a55)");
unit.assert_eq16(16'hA4E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1539 084688bf-4d04-4bb4-af2b-1ecc7b66854b)");
unit.assert_eq16(16'hA4E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1539 8a4eb233-bcbf-427e-9ff8-22406740cd98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1539 5ac4e42f-d01e-491f-a753-d7b049c4a457)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1539 a451310a-99f2-4c09-9538-a2be439957c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1539 b7ee84de-e37e-4cd0-89fa-ec2d800edc27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1539 28f82e6c-44e9-4856-9d99-461ebf920836)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1539 0dece6df-f814-4ac0-82fb-aa45596994e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1539 52fdf049-4098-478f-92da-91ad351eb9b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE68C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9749;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCC94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1540)");
    end
end

unit.assert_eq16(16'hE68C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1540 1811ca0b-e52a-49d8-b22e-53f30d1792bb)");
unit.assert_eq16(16'h9749, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1540 1f215df2-7aef-4463-aab8-41568aa0f3d3)");
unit.assert_eq16(16'h9749, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1540 541a7616-8f54-4bb9-8142-00e7940c597b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1540 2f59cbab-2920-4f3b-8148-065443263692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1540 40628930-69f8-4ce8-a254-0af526e34b84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1540 b2104099-11a2-4d88-b17e-81442e177f36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1540 5428a713-4fb8-4b4a-9685-e2a4e4152a52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1540 b6a15d70-1975-426a-87f0-6e9dcf782a9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1540 34cd43fb-bae9-40e4-b4da-dfac10b1a619)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6182;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEEAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1541)");
    end
end

unit.assert_eq16(16'h6182, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1541 d2e6e6c8-d32e-4bbf-a169-b23e87a01fd0)");
unit.assert_eq16(16'hCA24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1541 1a027590-588f-4355-91da-2cd1c1f18bb0)");
unit.assert_eq16(16'hCA24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1541 f3956f9d-ff9e-49e2-a73d-f8a2fb71490b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1541 d2319725-8d8c-48bd-bb99-5646f3604dcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1541 936da7df-19a6-47e2-baef-2a92cfa9e938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1541 ed157510-870e-4115-b010-0982e06b7ea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1541 5789a57d-d033-42d3-be62-d6f777b39526)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1541 653ac494-9e37-4b95-a7f3-8041b1ae1e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1541 833c6094-2472-4b5b-8a48-893155c01ed4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h893D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h11FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1542)");
    end
end

unit.assert_eq16(16'h893D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1542 04d7f959-2907-4ee8-bca7-b9638e1fbe01)");
unit.assert_eq16(16'hAFAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1542 bfc75c88-9f71-4cce-8a8d-b674a9aac96f)");
unit.assert_eq16(16'hAFAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1542 4a1d4948-7b63-4f96-add4-6c70710d4f7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1542 f3628578-92d5-4075-bb6e-e4fd84aa82f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1542 863dfd71-63e9-4fb1-8e42-ead6119f69a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1542 1581d0e3-69e5-45c6-b336-c7d44608c23c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1542 55a1566a-ea85-4978-9d11-ea638a6feb92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1542 b976359a-ab23-42b3-acbb-2f398a0721ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1542 41213144-e434-4a95-b664-d2dc531f9919)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h96B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE634;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3851;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1543)");
    end
end

unit.assert_eq16(16'h96B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1543 dc3b07c4-83f1-448e-843f-aedc49cb98c4)");
unit.assert_eq16(16'hE634, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1543 39f4fc72-ecd9-4448-81ad-fb6163fff0c8)");
unit.assert_eq16(16'hE634, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1543 71ac8a69-ed8f-4952-adcd-145727c3e5d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1543 921f7b66-e3e8-4230-8c4b-b33577e06a61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1543 dc013ea3-1e56-4b52-b6e6-7b68fd5b05f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1543 71e4cdf9-e656-4774-be15-789d833522a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1543 7977222b-08a4-4ad7-ae69-663fde2a4675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1543 96393eaa-efdd-46db-87f7-ba7778ec558e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1543 786430b7-3661-459f-bec2-ad8e05ae7d68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8780;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6DC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1544)");
    end
end

unit.assert_eq16(16'h7F40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1544 5387a674-6b6b-4167-bc07-6aeb0423c9ea)");
unit.assert_eq16(16'h8780, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1544 5d78a1af-f022-4815-b717-3759e778f0e0)");
unit.assert_eq16(16'h8780, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1544 5f61ee26-5bea-4149-84e7-99df2d85d35c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1544 c18b65e5-5856-4f75-8530-b60d3ef17a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1544 ba1e6687-6336-40f1-bae1-4e3684fb972c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1544 cbaf745c-6e04-494d-b9c3-5b8b196b6bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1544 18da722b-5cf4-492c-8d15-09604525db03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1544 1c1cf2f9-571d-4b90-813e-65855810d901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1544 eee7fb83-d18f-4e3c-94d1-168e66ef802a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF903;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3057;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8463;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1545)");
    end
end

unit.assert_eq16(16'hF903, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1545 63985225-38af-46e5-96d2-65aed49c8d28)");
unit.assert_eq16(16'h3057, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1545 3743e87f-1707-4b7c-ae7a-6183b5582a5e)");
unit.assert_eq16(16'h3057, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1545 23c8f41b-9ea0-4c64-a36b-d49eb358a86e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1545 a319cb3c-0a67-4509-8f1f-25a9eec26a20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1545 13bfd9bf-c610-413b-a534-646a47ddc085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1545 ec2e4be9-a37d-4047-ac75-6d548309c22b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1545 5c116837-31fa-4e5b-b946-575437c0ff0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1545 396eafcb-06d1-4b17-a448-385de23b913f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1545 626cf16a-add6-4d07-8667-13a384839103)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD88A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h62C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h06E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1546)");
    end
end

unit.assert_eq16(16'hD88A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1546 f861d1a0-582d-473c-99a8-e7692b4372c6)");
unit.assert_eq16(16'h62C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1546 685abd90-9d5b-4341-b704-5233b2bf0023)");
unit.assert_eq16(16'h62C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1546 e7294974-e5cd-406f-8a00-63eb6b63033a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1546 d6e72f2d-5383-4ba3-9143-4e19a0cd6921)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1546 f84c6c35-b325-46f0-bf53-7b318be90d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1546 180f1b6d-604e-4465-8a51-2e23cbb74dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1546 ccb19519-664f-49cc-88dd-02868bc2cfe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1546 8d323554-81dc-4f3b-a29a-dc00b93e077b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1546 64fbd6d7-505e-433e-b695-bbea74e175a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA36C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1547)");
    end
end

unit.assert_eq16(16'h6F55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1547 844ea111-0400-42ab-98e8-aef46277a00e)");
unit.assert_eq16(16'hBD9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1547 8d56e3d5-2743-467e-a348-81ce32a5dd4e)");
unit.assert_eq16(16'hBD9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1547 5a64f3f8-4381-47f2-9437-6395a93fa24d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1547 e5003663-facd-4d7d-82fd-a36c2e285918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1547 1216cb7c-ac3e-454d-94a8-95daa3e799cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1547 524b8b18-9a9d-4819-bd73-112380fd686d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1547 06510e4d-04d2-4034-9f54-8c65b6faf707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1547 3067da6b-3897-4392-9901-c15e99753be3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1547 1e996373-6137-476e-8801-39e1984dcd61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA595;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3CEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1548)");
    end
end

unit.assert_eq16(16'h3031, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1548 e547f6e8-762b-4a6a-b19f-26c0ea4e149c)");
unit.assert_eq16(16'hA595, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1548 81a00a01-f531-43d8-aa6c-716f68eb4574)");
unit.assert_eq16(16'hA595, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1548 fc113272-c18e-49db-aec6-6303abbadf2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1548 440b171a-d54c-40f8-bfba-9e590b7973b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1548 586885d0-0127-4522-95ad-9b57237af9f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1548 38c8352d-9f82-4f5b-9bf5-e656947f4bdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1548 f71583c8-8288-47fd-ba0d-30aacfe95630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1548 5526c875-3333-49ea-9bb1-7e5081357009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1548 6434a0d2-95f8-40da-9ae7-b469747d6ff9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAEF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8371;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1549)");
    end
end

unit.assert_eq16(16'hAEF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1549 354a3ed0-cd7e-49d9-ab13-3957c0f851f8)");
unit.assert_eq16(16'h7B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1549 881bb777-0e2d-45a1-aeb3-943aa5d9b548)");
unit.assert_eq16(16'h7B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1549 49229fee-1d89-4e60-a496-b4630d147dfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1549 56b5a181-16bd-4415-adac-76f9d105cd88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1549 880923bf-3807-4612-8c45-ebbf54cafeae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1549 76762877-575e-4df5-9171-07c5beec97e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1549 b2eba4a4-73ea-40f4-a988-920017e4f72a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1549 d7c553cd-ab67-4e6f-b5c9-683b30eb014a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1549 f45ef5b8-b362-4faf-bd3c-d405edb6525b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFAA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7C36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h41A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1550)");
    end
end

unit.assert_eq16(16'hFAA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1550 1a414ae5-781b-4a78-9463-04409e90cedc)");
unit.assert_eq16(16'h7C36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1550 0197f199-da56-44e0-8af3-9f18d0297adc)");
unit.assert_eq16(16'h7C36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1550 accd474a-0322-4514-a29d-8bec0f99226e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1550 dddd99cf-bbc1-4831-be12-15a41d49a701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1550 ca8d989d-4872-40ff-a4ec-9549b75546f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1550 447e2906-3b50-4dc9-9bfe-57e79ad0cc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1550 0b374655-7811-44d5-a9b4-82c9c12e8b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1550 82ab3f9c-d9e6-4e80-adaa-9a70e4d85072)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1550 c6415bae-daf7-4595-9869-4013644e5d5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1780;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC24A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1551)");
    end
end

unit.assert_eq16(16'h1780, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1551 eee5c0f5-4e5c-4dcf-a36e-2e67f139608b)");
unit.assert_eq16(16'hC24A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1551 a88c26fd-b314-444d-acf5-b1981c4ff1c8)");
unit.assert_eq16(16'hC24A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1551 2f2795a3-13f2-46a7-b4fe-e54faf905036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1551 283d0119-1fc4-4387-86a9-180418c4279f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1551 b83d369e-b12f-4f5c-9fd1-0d6b113e41f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1551 50ac6826-d53b-4ebe-b64c-4659fcc3a7da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1551 e5bb8b6c-7f8a-42f0-a5a1-ca4723cef95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1551 90d8064b-3bcc-492c-b1e6-76a858809fb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1551 79c19c35-77b1-4166-8365-598337d7f37b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1654;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h723C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1552)");
    end
end

unit.assert_eq16(16'h71EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1552 3fcae369-755f-44d1-9d49-dd0c6483d4d2)");
unit.assert_eq16(16'h1654, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1552 aeabdef4-719b-4b36-b317-24713ce6018a)");
unit.assert_eq16(16'h1654, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1552 aad17ba8-ba64-4c77-94ca-3dd4f9e08e5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1552 989137c3-a32c-4ec7-8058-927e97d5f527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1552 ac79c5a3-ea3d-4483-a9a4-4be1d3c9ff60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1552 f274daf9-903b-4e92-a7d9-17b1ac159d0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1552 05a0db3c-ddf7-49be-a4c1-0b81b332d111)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1552 13f27a27-684d-475b-8397-2fc70d602ec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1552 012ea62e-d6dd-475c-a2b5-89909e449ae9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB576;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC172;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD861;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1553)");
    end
end

unit.assert_eq16(16'hB576, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1553 e1fa23a9-b91c-4706-860d-8f6a3d5e5ade)");
unit.assert_eq16(16'hC172, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1553 df41c929-2d39-45dc-b0c3-7ff99d943f0c)");
unit.assert_eq16(16'hC172, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1553 c58bfe7d-2ffc-4b72-acb5-993b69bb2e23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1553 9814ffde-297a-4337-98e5-905747457192)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1553 8cbbaafd-25dc-40cf-a7df-27e6c9400adf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1553 2c84547a-db28-4199-9f9b-464fe54b3867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1553 009311cb-8925-457e-bfe3-4c3ee3488901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1553 2bff19fa-ada3-4de4-9a1f-0f35f4fd1b33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1553 2c3dce69-dd69-4c8f-b4b6-d74df776da12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3E8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBE4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1554)");
    end
end

unit.assert_eq16(16'h3E8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1554 8b2a20dc-05f8-4e67-b978-1831d2885a3d)");
unit.assert_eq16(16'hBE4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1554 6d18c747-d173-4b4c-ad00-e977e7d5d1bf)");
unit.assert_eq16(16'hBE4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1554 5738f87f-581d-4568-8f79-50fd88eb515e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1554 5131a549-b5e4-44b5-a4c6-ed3cc4b1b91f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1554 b2c84050-07c4-4084-86a3-cd580a6024fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1554 28873799-82fc-4c52-b5f2-3ed31e328cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1554 c1d7c600-de27-4301-895b-12e39d881b9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1554 7ae99f57-6946-491f-8510-cc55d6edc3a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1554 11fc34b2-c59f-4d3e-89bd-391b0147bce9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9878;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD6E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1555)");
    end
end

unit.assert_eq16(16'h4D51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1555 cce436d9-c8ff-4555-b6c1-6249de5ce86b)");
unit.assert_eq16(16'h9878, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1555 3a1b4bae-66f9-4d20-a30c-e1fb0a550384)");
unit.assert_eq16(16'h9878, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1555 f8729127-2419-4ef7-aad5-b078f58a90c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1555 b999b6d0-f61d-45ac-81f1-b9ee88b906b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1555 1667c8d4-270d-408e-9fcb-aa772ba91edf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1555 7affffc7-216a-4224-84aa-03da46410711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1555 c7681c65-e427-44b8-b143-8392e6b714ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1555 7772cbc0-ed11-40c3-a9a6-d85466781357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1555 e570512f-b844-410c-b8fc-d41148ca51f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA7BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF208;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1556)");
    end
end

unit.assert_eq16(16'hA7BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1556 9bd968f2-95f2-4c03-a9f1-4f2d9a73f0da)");
unit.assert_eq16(16'hFF88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1556 e1768229-f682-4f25-b127-aff9affbbbe9)");
unit.assert_eq16(16'hFF88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1556 6d537630-3a6a-4aa6-8cef-45752b551a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1556 86b02872-b202-48c7-8a33-abbeeee55292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1556 da8f9c29-bc1e-434d-933f-9b5de13435b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1556 fa5758be-a2d5-4326-b869-2e937c690f75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1556 d36ad37d-f4bf-4f4f-9e7c-4f17df227291)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1556 81407122-214d-4566-8c3e-a9b221718023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1556 e12e0099-f245-400a-bc7c-5b21e714bcb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE738;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF53E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1557)");
    end
end

unit.assert_eq16(16'hE738, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1557 0a16849d-6d1e-43ef-a178-56b5ce9c3801)");
unit.assert_eq16(16'h3F87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1557 da8d427d-6990-4775-92ba-7367ffa522e6)");
unit.assert_eq16(16'h3F87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1557 f642c272-dbe3-4aee-a07d-3262772c2ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1557 8990fcab-bd8f-4b96-ab19-0ab13ecc7eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1557 3b332e34-15a1-44ea-9f6f-5fa4b062794b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1557 7aec27b5-57c2-4b76-ab76-3f41b53d3e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1557 d395ef11-40e5-4bd9-9cb7-5e8dd49c3fd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1557 65344c33-bace-4649-b011-662aa7812be6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1557 553c0725-f3e0-40a2-8da6-e3d65d197766)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2239;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h875E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h943D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1558)");
    end
end

unit.assert_eq16(16'h2239, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1558 51560621-60c2-499e-b710-ef4bb3b0a901)");
unit.assert_eq16(16'h875E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1558 3a8af8c7-d3d6-4a1a-b8c1-1d30456d072a)");
unit.assert_eq16(16'h875E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1558 c9040c6a-73d0-4d68-820c-c67ab3394845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1558 ee90492d-c67e-49c0-b3e3-7b395d6345f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1558 35430f70-1ce5-4e67-a899-ad2703a772cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1558 1aa70331-72d3-401f-b71f-f820ea4a76b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1558 ee15ceb3-6c12-4a25-81ae-deb6976979dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1558 e1a52d37-bbc9-4544-bd7a-95313b2ce62f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1558 46d566bb-98c2-40f4-a6a7-7a132b90c1b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAA89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h69AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF922;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1559)");
    end
end

unit.assert_eq16(16'hAA89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1559 26393a41-7b49-4fa4-a235-cd60bbac7f04)");
unit.assert_eq16(16'h69AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1559 c8c47203-6e5d-4aa6-a6ee-1d36000b3978)");
unit.assert_eq16(16'h69AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1559 bdf2394e-1104-43bf-8092-49065830dd1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1559 5a9ff408-562b-4370-88a8-d408f7702cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1559 5d5a1173-fb82-46f4-8e98-d14430bb7774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1559 f35867c8-c654-4f83-b8b8-e2a0adcdc4a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1559 cf221b00-efce-4fb9-b808-bdb6ae79de26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1559 16f5d6a2-caed-4e21-836a-0029758c0d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1559 884d52f0-9c1a-486e-8d71-b823c7ced14f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA5AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h34D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1560)");
    end
end

unit.assert_eq16(16'h2F57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1560 750ac385-769e-4012-9594-d66f4d74f8aa)");
unit.assert_eq16(16'hA5AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1560 d43bfd64-e8b9-40e8-9e92-c5c5dab018cd)");
unit.assert_eq16(16'hA5AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1560 15a9ba41-3250-43b3-896b-5040190fab10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1560 6143e58e-d6a2-40a6-8cdc-fcdde6c156d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1560 8edbd9a2-2303-464b-a1db-693dbab50457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1560 340348be-c776-425a-9785-7be3de29433a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1560 2a966343-4f37-43f8-b583-b1b4afa5da7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1560 acc794d2-e061-4022-bf66-74e980e32e7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1560 4798eae2-4599-4ee0-8c05-7e49d1165383)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA17D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3347;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1838;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1561)");
    end
end

unit.assert_eq16(16'hA17D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1561 0cf10f38-0efd-474e-948a-8d0bcb3dece3)");
unit.assert_eq16(16'h3347, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1561 47cdbe28-d33d-43db-a437-0522ea84fb11)");
unit.assert_eq16(16'h3347, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1561 258dfe8c-d31f-4c64-a02c-5cbf58295c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1561 204e6e19-0b2f-4cbe-9c77-9aaea2fc9a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1561 df0a8fe4-b3fc-44f0-be94-b9c56a3d1fea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1561 40d4de19-ab03-48d6-aa0b-f1c5fa89c05e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1561 22efb20b-b90c-4fe9-a1ff-ebfd0a76e6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1561 95e5d102-bc9d-4f77-a10c-cb42e885dacf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1561 16ce9bc1-9c8e-4aef-beae-46b2618dc28a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8AEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1DDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1562)");
    end
end

unit.assert_eq16(16'h0EC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1562 0111dcf1-ac38-4f23-9703-44eb708f4f73)");
unit.assert_eq16(16'h8AEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1562 b74e39ec-5e8b-4989-a8d7-e67aa516dcb3)");
unit.assert_eq16(16'h8AEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1562 c835c8b6-76f4-4186-8318-80afa7f4c018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1562 537e2db5-230f-4376-9998-43b846e711c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1562 8acabfb7-2cc9-43ee-9b63-2002ca9f3131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1562 6e72a7fa-0221-4150-bb8a-8aaac612962a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1562 6820de1d-538e-47a4-9028-32c5ea968fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1562 cae8172b-c15a-407e-a283-799a9551545d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1562 5a06cd13-9b2a-4ed9-98ff-86ba67418f6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7223;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2819;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h34D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1563)");
    end
end

unit.assert_eq16(16'h7223, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1563 d5e69681-89f4-4cc1-99ff-bbe188dc29c4)");
unit.assert_eq16(16'h2819, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1563 d1d2798a-a689-4356-ae60-0112c4cff096)");
unit.assert_eq16(16'h2819, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1563 50b1d567-b6a1-4c40-9e2a-6cfb999b47dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1563 cab15969-9e7c-4418-9c42-2b6f71c377b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1563 d19ddc02-8fe2-456c-b13a-72021163efd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1563 e236ff4f-0114-434a-a566-1d4bf5321104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1563 d6d1f1b8-a323-488c-aa73-9f9cdb4772ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1563 9db74dc4-7206-4935-8472-4a4b221caae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1563 6ee935d7-2b38-4806-9314-df3d2e55ce5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6106;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9C90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1564)");
    end
end

unit.assert_eq16(16'h6106, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1564 aa376654-ba22-418b-b67b-7ea65bea33be)");
unit.assert_eq16(16'hAC84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1564 0b6f6d4c-d2ed-49db-be93-aa3a9fe996e0)");
unit.assert_eq16(16'hAC84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1564 0fd43643-f9b5-433f-b55f-f3c133d52602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1564 41b20cec-a0b0-4655-9d66-322d8a0c80a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1564 200e8269-1f42-4908-b43b-5844562bca9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1564 2d1ab735-3339-4a15-9944-c5ae15778265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1564 d6435692-5fd9-482b-9e28-4ed6a5b0b0c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1564 0af4ca66-edf7-4e80-a971-4711bfcc9a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1564 cc5d1389-5f1c-419b-8941-b980c13acc03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF291;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1C25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h46FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1565)");
    end
end

unit.assert_eq16(16'hF291, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1565 642d84a9-6f8b-4d8b-b355-f844fec3051a)");
unit.assert_eq16(16'h1C25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1565 a5878469-d43a-4744-89f5-d1eec33fe1b0)");
unit.assert_eq16(16'h1C25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1565 017027d8-0885-4e67-9df7-b2599eaa5c32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1565 37ed3073-d054-4088-ad73-6231f5d8e77a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1565 95dcc95c-0b66-477f-8495-5243ed230233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1565 152c507e-e8e7-4a4d-92ad-61764b8571d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1565 db436d27-d08c-4f03-a180-c9666b5d0dbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1565 4c85f790-d40f-4f9f-8370-52a5695d572d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1565 a24db9fb-e1ee-41b1-9bdf-80f930805fdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1E99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0E63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDAB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1566)");
    end
end

unit.assert_eq16(16'h1E99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1566 27005b6c-6eae-49b7-9613-9dd5503531ac)");
unit.assert_eq16(16'h0E63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1566 0b13083e-974c-48ab-a9b6-310a3a15b0a5)");
unit.assert_eq16(16'h0E63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1566 83e5c57b-dee6-40f9-9f00-6605f5cfa9ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1566 e2cd9938-26aa-471b-849b-4843a4929468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1566 3ed95434-ce76-43bb-b7b6-315a0c559af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1566 165e0d25-8ecf-4f08-b748-e4fe01d61110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1566 6e98377c-cedd-41b2-a7b3-c6678c4a4f55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1566 d47bf05f-3ad3-4cdd-9939-75d131eaf364)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1566 231bc5ae-816e-4052-80e6-30aa202f747e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2680;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2255;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA9D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1567)");
    end
end

unit.assert_eq16(16'h2680, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1567 45544940-4ed7-41bb-9f81-23e3aad4c865)");
unit.assert_eq16(16'h2255, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1567 6a9a2464-f675-4619-89ce-1dfe8cda9ddb)");
unit.assert_eq16(16'h2255, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1567 73b8848a-8f80-4cb4-bca1-5cb68ab32f3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1567 ea4147e6-5049-4d60-a6ed-cbbfb562c831)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1567 19781807-95e3-4d62-ae86-bdb6df4a0158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1567 214fd8b9-cbf8-46ad-af21-fe82c0e2f93c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1567 9d8203d6-47f3-487b-ab51-f0a11c9400e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1567 718fb421-f6e9-42ea-926e-640a3faf60e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1567 bb3b6a43-2b85-4700-b455-fcb91ab4c137)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF1DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA140;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1CC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1568)");
    end
end

unit.assert_eq16(16'hF1DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1568 88afc820-81a5-495d-99bf-73835302ccf4)");
unit.assert_eq16(16'hA140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1568 d44b4b5c-d086-484c-8bc8-d3f8a2cef2a7)");
unit.assert_eq16(16'hA140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1568 ca5d0fc7-c7c6-454c-b2f4-3c1603895ee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1568 858cfb00-7b64-4e84-ad38-e57343ac95ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1568 22db24cb-fa46-427e-877c-4e3e7c346583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1568 90c41c8a-4147-4130-adf1-e13df9a13d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1568 c8c5fd76-9273-4e68-aee8-e859973b10b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1568 fa942a0e-fc9e-4e3d-bb1b-90d7afe0616e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1568 422127a8-eecb-49aa-a44a-f598c6de06fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h83A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h362A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1569)");
    end
end

unit.assert_eq16(16'h4A0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1569 e48c28a9-67af-492d-81f2-e4af1140ffce)");
unit.assert_eq16(16'h83A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1569 05909412-5c43-444b-81d1-56d10f3bec66)");
unit.assert_eq16(16'h83A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1569 0c13b3a4-7c31-4ee6-81e3-a874e5665a50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1569 d80657fa-3c47-46e8-9040-19b1be8dcfd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1569 ec75fa45-8eb9-4836-b745-637e1de7e51e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1569 5ddc9062-9b07-4cc6-86a0-7248daa50ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1569 5be19da0-f630-4323-8b65-1a165be02656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1569 307fb94f-b7a7-4014-9d70-87fb55211436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1569 b65591a1-d578-476a-9af2-fe74ba59d0eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD516;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3D8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF94A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1570)");
    end
end

unit.assert_eq16(16'hD516, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1570 e5f09e1b-b3b1-470a-b8aa-ef1055d957df)");
unit.assert_eq16(16'hA3D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1570 f4d6925b-d2b2-46ff-a272-77250e8e7f17)");
unit.assert_eq16(16'hA3D8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1570 12dcc32f-7abb-4c52-a74d-e7437a71fec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1570 4f6dfd21-7034-45b2-b747-6378774e216a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1570 fe192b2d-a7fd-43f1-9750-81fb7cb9c248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1570 88a87557-642c-476c-b5e4-2c8c6187ae98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1570 4f2f9277-99e5-40a8-8786-38becf858c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1570 2ae6886a-da4d-4751-a5f5-7fb7cc5aaddc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1570 4c5b324d-0b7f-46bf-9ddf-433418027a0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0617;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1571)");
    end
end

unit.assert_eq16(16'h0617, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1571 dc275832-08e8-469a-a259-2560183c0536)");
unit.assert_eq16(16'h57A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1571 ceabd685-0e47-42aa-9247-6b32fd90dc71)");
unit.assert_eq16(16'h57A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1571 f0429d65-e8e8-41d0-b1ae-1f5e2b1d0d9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1571 264dfc19-2c7a-461a-ae4e-39a5b21575d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1571 f0f3c9ca-68fc-4987-851e-1849d698fd0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1571 c9e22967-1f51-4664-bff7-b1cede62b2c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1571 a312b316-bbcb-4321-8543-965feeae78f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1571 9c05bf45-70ce-440c-80c4-ad9a71599df6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1571 69f7424a-37d8-493d-bfb7-2c873feb1f12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h21F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC6C6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9B13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1572)");
    end
end

unit.assert_eq16(16'h21F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1572 b32681e3-cd09-49f2-b8f8-a0b7e9c5210a)");
unit.assert_eq16(16'hC6C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1572 3504a9d1-ba85-474e-a4fb-97cabd39e858)");
unit.assert_eq16(16'hC6C6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1572 df2c89db-7eb0-47e4-8595-0a0110aa1105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1572 98873c7a-84da-4b56-b44c-42363d6eb94c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1572 ac413b4d-d66b-4f55-9bec-abb6acf38e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1572 cc4650da-e04a-4581-9989-f25a612a2574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1572 82b4a6c5-fdde-4434-ac27-b8c6bc4bba25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1572 6cbc8615-455c-4ea0-a716-9c7fa37824af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1572 b3e0862e-4637-4c92-9666-6a46de100979)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAEAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBF45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3570;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1573)");
    end
end

unit.assert_eq16(16'hAEAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1573 839930fe-9e3c-4694-95cd-3056e993f060)");
unit.assert_eq16(16'hBF45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1573 62a00a13-dcfd-48af-a1c5-2880b8f0c766)");
unit.assert_eq16(16'hBF45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1573 f3279018-9bd0-409e-9b15-719a446b0e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1573 4f2a6abd-4b85-432c-9aeb-9e59feefe8a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1573 bb9e5dad-0b5c-4f18-ba04-f1aa694e9c7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1573 6ff93add-fdf1-4f8c-9cb8-5d9539912fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1573 cb86c743-b140-4825-b7d9-e859e65198c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1573 6e0daa06-d7e7-4a44-80c6-b1ac46ab723d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1573 7faf97eb-e143-4d73-aee3-0139aef71b85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB6E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC390;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1574)");
    end
end

unit.assert_eq16(16'hB6E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1574 c8f7c2c4-833a-4c3c-9ff7-92958d76f47d)");
unit.assert_eq16(16'hC390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1574 0ec48b44-180a-4546-a11c-afcb827ef297)");
unit.assert_eq16(16'hC390, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1574 72d15e5c-a062-40af-bfaf-b57121445de8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1574 51d70bb5-3fc0-412f-9b68-22fb0c8fe45d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1574 ebd8cde2-5e89-46ad-865a-a2b0388a9fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1574 faa65373-90df-4662-9f50-c585b74eaa96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1574 050e93be-de89-4562-9768-4f564559dbf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1574 afa3fe92-e1d4-413e-803c-11a256a6762c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1574 d908b5a5-3141-4951-b597-e60319ec2eb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA82B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4DCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC711;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1575)");
    end
end

unit.assert_eq16(16'hA82B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1575 42e7f673-9322-4873-b620-80e9b07328c9)");
unit.assert_eq16(16'h4DCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1575 978f8987-e101-4969-ab91-6b7c7e30b14c)");
unit.assert_eq16(16'h4DCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1575 68f312fe-99dd-48c5-8aae-bfd980090c02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1575 5610979a-8b0d-492a-af83-81900b8882c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1575 f30f0b0b-32dc-4908-b5e6-141fb9d5b6f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1575 d65feef5-e41a-42b2-9967-b26cadc564b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1575 e9ae5fdc-0be3-43e7-a16d-6b480ce0c1f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1575 b5c851f2-0930-4a1e-8f6c-83a9ef788ca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1575 8044b380-6c00-4260-b2e5-41982b8acb29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9205;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h35EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE62F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1576)");
    end
end

unit.assert_eq16(16'h9205, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1576 8413da70-e5c2-4e24-8ce4-e030add0398e)");
unit.assert_eq16(16'h35EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1576 9b2149ef-22f1-417b-824a-55c7c45354f1)");
unit.assert_eq16(16'h35EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1576 1167777f-2f13-444c-a97c-45228ff6ad64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1576 6f7e4ba7-a87d-4a91-ada5-7c3f88a48b1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1576 aac127c5-0e46-4edf-ac90-44775de0b978)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1576 fce15c52-8c01-4ac5-88ef-df14472f17f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1576 86bc83d7-1bd6-4435-87b6-e305465c41b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1576 4bab2e1d-faec-49e1-be5b-37016fa81544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1576 097f8d0e-7b13-471c-bb89-312203413dad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD37A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3811;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1577)");
    end
end

unit.assert_eq16(16'h02B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1577 444fe674-1845-49cb-8a81-d36eea217a5b)");
unit.assert_eq16(16'hD37A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1577 26eb3d8b-38cd-4e65-8228-bb8cddf72a88)");
unit.assert_eq16(16'hD37A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1577 e459a389-e1c5-45c0-86ff-fa69060c18de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1577 02acf204-8f73-43d7-9d76-47ba1128decc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1577 d3ec558d-7939-4d7d-b093-97d0fd37b9bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1577 20a023aa-62a7-491b-af30-24e1f23fa5a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1577 4854b970-3b91-48f7-a953-4b5d6967d6dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1577 3d15140f-a95b-490c-a8a1-942fb17d2a8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1577 58e489fc-73fd-4971-bab6-6ad4da97ca9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDA26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC181;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1578)");
    end
end

unit.assert_eq16(16'hD5B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1578 1905ea53-0b99-4896-9cad-89f1bf225db3)");
unit.assert_eq16(16'hDA26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1578 aba17bdd-f5ba-4def-861f-7c273076a963)");
unit.assert_eq16(16'hDA26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1578 bac1daeb-e194-4c2c-b9ef-eaed2b2d23b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1578 dc284e41-6162-4655-aa5f-fbd123558649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1578 5008eae7-2355-49b6-8171-2bd457274a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1578 b65e2e14-9d4c-41bb-aca2-fe13dcde5388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1578 54b9f5ba-9141-44d7-8f0b-198d99bb3463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1578 a98d9558-235f-4308-9533-2b08758e2c35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1578 4ccf4d65-aba0-471e-8053-c49212d7a69d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0840;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h757C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAD79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1579)");
    end
end

unit.assert_eq16(16'h0840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1579 7e044116-83e7-4996-94a9-5285e56f8ba3)");
unit.assert_eq16(16'h757C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1579 115f2c16-d87a-4b9a-bef6-9a599b1744b8)");
unit.assert_eq16(16'h757C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1579 38559213-8125-4cee-9654-9999591ec6c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1579 1ae1a0de-22c5-441f-8c07-9e8946defdb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1579 d24fd950-ca0c-4332-9b8e-de02bf7afc1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1579 19f7e935-62bd-427b-b6b4-eb817805a97b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1579 978bc916-0bc5-45f6-a07d-9d3aeb5eda1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1579 2dec79ea-0dfc-45e9-8e6c-375597c6c289)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1579 9ed2d899-2d9d-44fa-bebe-1aadcc3d3907)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5984;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h38DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3594;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1580)");
    end
end

unit.assert_eq16(16'h5984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1580 c9e5676a-657c-4425-9b2d-64e53fd3f8e3)");
unit.assert_eq16(16'h38DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1580 c4369182-21c9-4b75-9a8c-ce3e70897496)");
unit.assert_eq16(16'h38DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1580 7b27c455-21ea-49a9-aef1-834c2eafa928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1580 30905756-f999-4b14-a914-16e93a7eae02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1580 4dc9e132-289d-4d82-9e23-1b018d22f083)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1580 c12aa622-b427-45c7-bb9d-ffde0f4f31de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1580 8442a8b7-605f-472d-a3d3-c2bc1e6b2afe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1580 67b6ef32-63cc-414f-bae8-54c7eca210a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1580 7fe44c10-b79d-4c14-a761-deabbca8b6c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF63D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1581)");
    end
end

unit.assert_eq16(16'hF63D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1581 0f0378db-afd1-4ebf-9e5d-6661e1fbf804)");
unit.assert_eq16(16'hFB33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1581 bb4a161d-d1ec-4818-b6a4-0936df1e66a5)");
unit.assert_eq16(16'hFB33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1581 225a1c44-8482-4cd9-9e94-6c8a1466ae1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1581 21852d62-50cc-42ae-a41c-4bc414240ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1581 389abdc0-a76e-4e6f-9a9b-4582a704df7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1581 b6ee698b-1c26-4ebc-8188-33e5637d73cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1581 dd081d6e-47bb-41ee-b3d8-dd4647772163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1581 3f4a6354-5f39-414d-b30c-be7c99db2ee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1581 eb7bd1de-a2c1-4c7d-91d5-bc4feb77df56)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6303;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA40A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD0D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1582)");
    end
end

unit.assert_eq16(16'h6303, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1582 e76ca73d-7673-49fa-bd99-dc1854239b08)");
unit.assert_eq16(16'hA40A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1582 87d657ca-4fe1-4fed-be5d-c8c93ba10a8a)");
unit.assert_eq16(16'hA40A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1582 23285d14-deb8-456c-97ec-d833041f0de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1582 f6e3f697-4844-4577-9b7d-39c87918aeff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1582 10fd6ff0-7a68-40a8-a863-06b4157bdfdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1582 73e3c4f1-fdf1-4154-ba9a-bf744633046e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1582 6038197b-0ee8-430d-a007-8e2aa7060b38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1582 b0115336-eefa-45ae-8056-34260a889818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1582 38008c3c-3586-44a7-b044-c53fb06052b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC840;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h01DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1583)");
    end
end

unit.assert_eq16(16'hDB17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1583 97dbf618-ccc7-4554-a244-256209c4a762)");
unit.assert_eq16(16'hC840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1583 283a6cc5-c8ab-43ac-8aa8-e9c9dc6c798d)");
unit.assert_eq16(16'hC840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1583 3879412e-0961-4dbc-83e3-75ed2971c895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1583 b7ff8210-f2eb-4f07-8197-5484784931a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1583 1bfed56d-55ec-4625-9b93-f46cd30fda13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1583 e97c713c-56bb-4a31-8346-1b21433c3d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1583 5f4b44b5-2f76-4045-b1a5-9db78f22ce08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1583 23142b07-ca57-4538-bbd9-3cfbb389b6a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1583 90c71e66-e416-4a7c-ab49-01d94aca75bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h344B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h59BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1584)");
    end
end

unit.assert_eq16(16'h344B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1584 29bcc242-10ad-41fb-ad3a-9d1d93b51311)");
unit.assert_eq16(16'hCA7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1584 d2012ff1-796b-44f4-906e-3976a7c0ce40)");
unit.assert_eq16(16'hCA7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1584 e9d2fb6d-d211-40d9-a52b-06c6b6ae80cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1584 6fa1e6cf-5803-4ec5-94e9-d12d52f24efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1584 3eff515f-eaa1-4d78-bae5-ecaa3d51d2b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1584 ed88500c-5166-474d-b4fa-621e7d8d2054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1584 23656714-d54e-4e6a-af88-fa040a767f0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1584 2acd3b15-c8a9-4823-a8fb-53c83e0a05e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1584 5786e1d5-fa2b-401d-b9bb-06be2ddc90af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1DC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3BBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1585)");
    end
end

unit.assert_eq16(16'h1DC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1585 d3c38cf7-943c-46ef-9bec-719e8f6420a8)");
unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1585 a39d954c-3427-4880-a193-b6c51dcc4ce0)");
unit.assert_eq16(16'h01E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1585 97d16eda-6b77-4964-902c-c016a6e110c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1585 899748ec-b0ea-483d-9950-31f5f1c193f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1585 ce123797-5486-472f-9a94-0b201b24702a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1585 d9999489-2809-41ce-bc2a-dc580c89ed6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1585 2b1d4ae2-ff9d-4995-83da-865766e4ebed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1585 cd9ceae0-8992-4759-978a-69cc77b2d7b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1585 689c3aee-4d81-4ed0-b71d-83d933dd5107)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h27F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7E1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1586)");
    end
end

unit.assert_eq16(16'h27F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1586 f5619ff7-4cb0-44e9-a369-bd7133e38cb2)");
unit.assert_eq16(16'hFB86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1586 227f257f-8bd2-4ed7-a61d-7b69d9486f70)");
unit.assert_eq16(16'hFB86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1586 97b38fd7-e899-4472-85e0-137a8fe4d4b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1586 f5662292-300b-4f17-8178-aaa2edcdffd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1586 5e4ef433-70d2-4c11-83dd-7af798a0a38c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1586 54fa1d76-4233-4cdc-a81d-d71413b4a096)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1586 491742fc-3af1-4ecb-abbd-c8dc5b6dbc4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1586 2a5b93bc-abda-4427-8b54-3cd096992ade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1586 af069b1a-6b8e-4dfd-99af-920cf6b35b67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFF99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF6E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1587)");
    end
end

unit.assert_eq16(16'hFF99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1587 9a4f3297-44b6-4ec1-8f00-f1b860297fbf)");
unit.assert_eq16(16'hF6E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1587 b8a227cb-5fe1-4151-923f-0f908b32b5e4)");
unit.assert_eq16(16'hF6E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1587 8334f446-cd70-4a5a-9c66-b0a247255124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1587 756594fd-e36d-4849-9ae7-fa808de1bdae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1587 6a32c7b3-0754-48e3-afb1-1a9d1a65402f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1587 4a8abe69-e838-46f7-a81d-39d128d349cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1587 8a0eb32f-c368-4459-b343-3a34a483f0af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1587 56414b28-f942-444a-8d0f-7a5c06bc4c5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1587 0123f54c-7c04-4aa2-bca3-b7bf4565198b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF51D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1588)");
    end
end

unit.assert_eq16(16'h7C94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1588 98ef35e3-8da4-4e2a-b3e8-15ced9999f83)");
unit.assert_eq16(16'hF51D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1588 cd4f1478-c72d-4a55-82b6-065c754e382a)");
unit.assert_eq16(16'hF51D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1588 fbddab80-ad68-457f-a090-e1086696fdf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1588 bd885a29-3bb2-4c4b-8359-af790b986199)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1588 77eaf0ee-b892-4cf2-92b0-1beb872bd463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1588 9adc461e-adef-467c-8c7b-5d0b4d5c2939)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1588 0f9ee91f-cf91-4af7-9214-0f36f01289a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1588 18b79a71-82ab-499f-9edb-d79374bf51c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1588 18e9e039-4e8e-4af9-9bc6-e79bdb42426b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB8B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1589)");
    end
end

unit.assert_eq16(16'h7EE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1589 dcecd519-5466-43b6-941c-cff9fdc1758e)");
unit.assert_eq16(16'hEC54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1589 5ae1ba0d-d72a-431b-ba99-6587533995ed)");
unit.assert_eq16(16'hEC54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1589 c101717d-13ff-426d-beb7-c57316be8921)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1589 4d5ff588-75df-4bd7-b004-d64e555dc302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1589 e5031b6a-470f-4fa4-8ff7-655ef8c36feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1589 db0d522c-a882-4cd6-b4b3-47f1b6b2558e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1589 e31379d6-bec0-427d-9991-baad50c64ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1589 ddf160d9-b8be-48b8-a32c-0756509e301c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1589 44507f52-b995-4930-a39d-c5870953b353)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB83F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8D00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1590)");
    end
end

unit.assert_eq16(16'h8A65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1590 a09be238-8e56-4c47-95e0-480bfead0b82)");
unit.assert_eq16(16'hB83F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1590 12c9454d-4452-4155-8d66-874722697c60)");
unit.assert_eq16(16'hB83F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1590 886984db-9a4e-494d-87f3-b04811599210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1590 009c7265-46d3-494b-bee0-c53b05c172f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1590 d56a3aa0-ca8a-491b-9de6-28dd01b6a403)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1590 80083a5a-45db-4336-b4d6-5f73d623b5f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1590 024d69a3-98dd-4f06-a062-853d1f18cfb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1590 573765da-1fa3-45bd-9681-6cfc29d04069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1590 b59eebd8-bcf3-498a-8f91-4520d622efbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEEC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF5E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB1C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1591)");
    end
end

unit.assert_eq16(16'hEEC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1591 86f35a4b-95ea-4c35-89d2-6d4027edbf1d)");
unit.assert_eq16(16'hF5E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1591 92225e5b-d68e-468e-93ff-a5776d77b6ca)");
unit.assert_eq16(16'hF5E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1591 ff08a1b8-7b00-4e6e-b704-782887bbc93f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1591 a3e5eadd-a4f5-49da-8017-c6a671178258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1591 03ba954b-e67a-4769-9db9-b20d43e8a8a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1591 4784337c-2374-41b8-bf31-35b75db15bc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1591 026b7abd-544b-4cc0-8676-b8d7e1be8acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1591 33cb2e2f-a3b6-4365-bfa1-cfb9555f3d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1591 17e91e22-b4b3-491a-89d6-fac95bc2bb01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hABDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA08F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF50D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1592)");
    end
end

unit.assert_eq16(16'hABDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1592 838d2325-3f0d-431d-bba6-58de335f73c0)");
unit.assert_eq16(16'hA08F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1592 42ca2e53-a409-464d-a9a8-8bb68c1d3226)");
unit.assert_eq16(16'hA08F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1592 634854f0-8eeb-4393-9c6b-b982a6f94578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1592 4ff11887-31fe-4b52-8b78-2c836e703558)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1592 aed4695d-4a3c-468e-85f6-4edb0cdc3aea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1592 df435f91-f87c-4b40-aa6b-fd97e22f9b72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1592 33cfdf80-8b62-49dd-ae4a-a6f1433e035c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1592 c759afa1-bc75-48e1-936b-6a02a85b1b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1592 252f69d0-3825-4de4-96fc-541e13937a63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC3E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEB70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1593)");
    end
end

unit.assert_eq16(16'h71C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1593 2012cf94-4c58-448d-ad31-005c540bcd14)");
unit.assert_eq16(16'hC3E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1593 69ff5cb5-1358-44f3-aac2-471cab84aebb)");
unit.assert_eq16(16'hC3E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1593 99f8d01d-6910-4dd1-a4c1-dff3546f8664)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1593 41477974-95e9-4627-a5c2-83e715d803ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1593 8fe29a2f-129e-4cfb-b9d9-9a9a288a28e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1593 57e728fc-d224-4306-b7ad-b45963d9c019)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1593 930c55cd-2846-4cf4-be77-f2a76fbba762)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1593 ce7b11cd-f51f-477b-be8e-815f9eea984b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1593 d2a5b554-f4ad-46fc-9998-c01cb34b923d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6765;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC925;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9FD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1594)");
    end
end

unit.assert_eq16(16'h6765, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1594 21f18eb6-b2a5-4f6e-a238-28992ab3fe49)");
unit.assert_eq16(16'hC925, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1594 58792b6b-695f-47d9-82b4-849c3737be46)");
unit.assert_eq16(16'hC925, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1594 1940243e-4e50-4e8a-84ef-8155e320f0b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1594 26877b54-ea3e-4c58-af98-abd018a0d1bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1594 65520c58-291e-4d75-a1cc-23e70abd7204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1594 94b11c48-1dfd-4179-b7a4-70699525917a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1594 5065a82d-19d8-497e-a6a0-84f566847210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1594 5a92be76-bdf5-4bc4-8e2c-e0eeb2088268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1594 238533c4-5ce7-4d95-89f0-f12cc833f823)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEEF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1595)");
    end
end

unit.assert_eq16(16'hDD89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1595 a43f1132-bd09-4de1-9dfe-cdebbef78039)");
unit.assert_eq16(16'hEEF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1595 82e64f92-72a8-4a1a-9012-a3ff12719577)");
unit.assert_eq16(16'hEEF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1595 2bbdae3a-9f1e-491c-bdcc-dc258c3b318b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1595 161b563c-af0f-4a83-abb4-66bc1f23a8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1595 eb93adea-339c-43c9-97e5-1ce66e4a3e99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1595 47e7e18d-e3c5-4ecc-8868-30e0d921c443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1595 5b69b281-49e7-473b-ad3f-a5b9814c2527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1595 8c562664-51cb-4490-8fa1-12a249eea4c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1595 f0993f8a-3132-461c-b494-207b72e19dd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2E8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2587;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1596)");
    end
end

unit.assert_eq16(16'h2E8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1596 e3250cc0-cafe-4797-8b34-7e81ccbf3b56)");
unit.assert_eq16(16'h0A45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1596 fb637c54-25c5-41fd-8176-f2d54c42af1a)");
unit.assert_eq16(16'h0A45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1596 7fa2c192-35ca-476f-b837-3dfd3c4b9094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1596 ed15c392-69d3-4236-9b2c-fb89ac5b5cbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1596 970cde15-f838-4487-88b7-e941ecae30e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1596 7a951f40-a380-466b-955b-50155536605f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1596 f202e8f8-f4a7-4058-a91b-12caec082970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1596 71aa021d-c815-4764-97a5-ad57a6d23744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1596 1b9411d7-7d85-4788-991d-469bf85106a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA8FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1597)");
    end
end

unit.assert_eq16(16'h71E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1597 b05a1c87-d48b-49b9-9fd7-2dbc30678c49)");
unit.assert_eq16(16'hCE69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1597 37c8eaad-5632-42ae-bde7-f11f71c4049e)");
unit.assert_eq16(16'hCE69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1597 9f824a05-3a61-4a34-95e6-86746bb19297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1597 1d175b46-f811-4864-b2e0-f5e8a6aebb00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1597 6d995ec9-b9c5-4b29-9efe-9cf9b6cdd670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1597 02e35065-97e8-4190-a156-15e595bc3dad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1597 5565185d-a94b-45be-a260-95fc956ba90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1597 a0565d80-5256-4eb6-81ef-75b44a9ce98f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1597 8dadde01-f4ce-46df-af7f-ab3cb94b4014)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA1A1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD72E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1598)");
    end
end

unit.assert_eq16(16'hA1A1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1598 2a4fc8d3-c6aa-4fab-b526-777fbc5c5798)");
unit.assert_eq16(16'hD72E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1598 d925b1ec-7893-41f9-99db-b7f5adcc64e8)");
unit.assert_eq16(16'hD72E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1598 ee6d253c-e028-42fe-bc4a-648e03a31e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1598 906cc068-6300-4c35-87af-967642cb348c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1598 092f50d5-5b95-47d2-8720-074389f8ef7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1598 a5d8390f-c6f6-4fb7-86e3-ea3158ccca1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1598 69ea9c4f-0378-47e7-bd6e-729312eff2b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1598 39775272-a1d2-4405-9852-e0d752c07827)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1598 e82e102d-76a5-4939-aecb-22511cc9839f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h40AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFEBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1599)");
    end
end

unit.assert_eq16(16'h40AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1599 d7c19110-133f-42c0-87af-e2b0b260bfe2)");
unit.assert_eq16(16'hFEBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1599 b479d63f-77d6-41d4-b2e4-384941d2ba51)");
unit.assert_eq16(16'hFEBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1599 5f9789a1-d398-4d0c-9671-5a6c95a6ef35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1599 4e199629-6be0-4f6e-b7dc-bfc86616abd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1599 c7b3703c-313b-446f-81ce-d61cf8b045dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1599 c5b1bc19-62da-4672-b1e9-63e9b57bc2e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1599 b3a3a6c3-1738-4747-9d83-cc8d9db5c6f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1599 cb5306c8-db10-4238-b530-b31aa9b9859f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1599 5d083c59-d195-4669-949c-7c52a55cd249)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3D55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h050D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB89B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1600)");
    end
end

unit.assert_eq16(16'h3D55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1600 bddfbeb7-d0be-4383-995f-eeae36e1ddde)");
unit.assert_eq16(16'h050D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1600 ab992abd-9bc5-456b-91fe-d6a350830737)");
unit.assert_eq16(16'h050D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1600 4af617ff-2fc5-45cd-8620-c5abf882a51c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1600 a813e0b2-ec9a-4589-8447-70ff7f559dc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1600 04250025-0565-4b46-85ae-649ddbca0c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1600 3f914379-3a10-4306-b47d-f1dc17226641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1600 4899f58e-4e8e-4f86-a5e0-fce0a06c62a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1600 62883ede-d646-48de-9f19-d4308a387e58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1600 5b1bc8f6-838a-4729-8d5f-a7905582aa3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1C28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h06F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA82C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1601)");
    end
end

unit.assert_eq16(16'h1C28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1601 cb03b3d5-a7ef-437b-a7f7-eb591612b6bb)");
unit.assert_eq16(16'h06F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1601 5e392948-537d-4e53-9cfb-883661fa660a)");
unit.assert_eq16(16'h06F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1601 e445c24d-207c-433d-ad28-293767ee01cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1601 045dbe9a-b15a-4a4a-9b2c-e23318280f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1601 cce8b36d-7bee-4eec-a0ae-cda63d937d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1601 a7eac066-3dc2-4877-9a2b-408ed7e088a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1601 0f815a7d-f5aa-4451-a04d-24ce05aeb281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1601 2389d15e-9b18-42db-a813-46d139a63e7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1601 d12d8a6a-a17b-458a-b8d7-f33aa041a280)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h450F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB485;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1602)");
    end
end

unit.assert_eq16(16'h450F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1602 b99b4e0e-6e98-4588-afce-08698cab0c0d)");
unit.assert_eq16(16'hB485, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1602 2a0995c8-8320-4a2b-a633-0860b04b3251)");
unit.assert_eq16(16'hB485, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1602 be911e72-b2e9-4798-a4b2-ca25b950eb7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1602 0b1127fc-a6d2-41e1-8532-d255b378bcab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1602 6ccda9a6-8cf2-4c72-849b-6cff7ee19c17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1602 abeb4797-0c4e-4c60-b807-fdee40f84a5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1602 491961c2-5f8d-4535-a5b5-5e7974f87a87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1602 93a71c08-f0f9-4229-a59d-21ce5f86e497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1602 468a7bb9-cccd-43d5-a9b5-b1e23d6e75d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h396E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h705A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1603)");
    end
end

unit.assert_eq16(16'h396E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1603 5aebee67-1ccb-49fb-8a55-728ec76e5e09)");
unit.assert_eq16(16'h75B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1603 c4e10955-6096-4b8a-b1f8-ff45f3fa2fbf)");
unit.assert_eq16(16'h75B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1603 48181a47-7b53-42ad-a68b-819a6f458980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1603 747c5116-5c8b-4491-ab97-92d6a4e02f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1603 f06c4194-8ad2-40fd-a31f-a478878f5365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1603 eb488846-8062-4970-8247-6e7155669b19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1603 150586d3-ffce-4d17-98ad-d23725549d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1603 23b0d54b-5de1-4f8e-bb20-bee79654b53f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1603 d06dabec-8d7e-49ef-a295-7b156bc763ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9EC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h37D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1604)");
    end
end

unit.assert_eq16(16'h9EC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1604 75bfd6c5-821b-4359-9eb0-63e812afabb6)");
unit.assert_eq16(16'h0AE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1604 f0dd90e4-471d-4798-aa90-26c93140cd35)");
unit.assert_eq16(16'h0AE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1604 c8ad50ee-9f58-4a6f-b222-3e17ee8f32da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1604 8e5b2a85-b009-49a2-b97c-02ed9265b1fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1604 3959c623-f270-46fe-8917-12069ecc574e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1604 b8f64dfb-f755-4a1f-b585-c32290b26f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1604 491452d4-6764-47ee-bc9f-be80c5a58552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1604 aa6cc46d-809b-4933-b0af-f9410197c9ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1604 f3ee3afc-5b1d-4e48-bf8a-011e4d0250f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h405B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAB04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1605)");
    end
end

unit.assert_eq16(16'hC0B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1605 ad94308b-e5b7-40d0-9bcd-bd5fa70deaf3)");
unit.assert_eq16(16'h405B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1605 dd870089-1532-4e66-ad02-8b66c8211509)");
unit.assert_eq16(16'h405B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1605 d7ec69fb-e9b0-4b65-84d7-5afdeb4b7fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1605 4fc42c24-a7e3-47a8-b5c9-d099fce9c8f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1605 e2e75978-64ac-4393-8708-f8b874c76f97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1605 25c67322-39f0-4740-8aeb-9ed43907c763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1605 06db95ff-b94f-42b3-b3dd-b3f28ed0a20c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1605 9bb8cbf9-7450-46c6-a4a2-e5768dfd2100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1605 84df43a0-8ac2-47a1-8ce6-3ba7a96d4b7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h50A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7357;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h49F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1606)");
    end
end

unit.assert_eq16(16'h50A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1606 b5db2b47-acb8-4f03-badf-c29a8a47b7dd)");
unit.assert_eq16(16'h7357, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1606 b81dbafe-914e-4632-b455-614fa1aee136)");
unit.assert_eq16(16'h7357, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1606 e323e2a5-9922-4411-9bb6-4a46fbff25ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1606 48980be3-1fc1-410e-9b84-a710a61d0c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1606 269ee8a8-d227-40c7-bbba-edbea0f90726)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1606 15693fb3-04b5-44da-855e-f17f932af9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1606 87fe5712-2d77-4e03-adc0-7c341fc3064a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1606 79c4e51a-6a0b-443b-b160-7b9553934624)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1606 5835420b-3d8c-4a2a-8ec5-dc69d7ecdddf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6E9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1607)");
    end
end

unit.assert_eq16(16'h3B5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1607 61951389-701d-47ea-add8-5e5fcd97e376)");
unit.assert_eq16(16'h6E9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1607 aa755b85-bf52-41e6-b083-00c0f54187be)");
unit.assert_eq16(16'h6E9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1607 bdc95932-c031-4eb6-82b0-a57fb551d706)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1607 f4db0e3e-82fc-4c7c-92a2-1ad2a5d84b0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1607 7563851f-f6a3-47bc-921b-2c8f89cc6b4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1607 0ba9aea3-07be-4f76-ad55-00492608f5bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1607 a402f328-e90c-40bf-a4ed-5d2c210f2ee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1607 6e80dbec-187b-45e2-bee2-0ae1c583c8e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1607 6e980b46-7840-479c-83d0-baa05074f789)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2584;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCAA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7589;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1608)");
    end
end

unit.assert_eq16(16'h2584, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1608 1f1acce0-5e70-4192-8332-4bc59d81eede)");
unit.assert_eq16(16'hCAA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1608 d52b128c-5fbc-46f3-9da8-09daebc8cf15)");
unit.assert_eq16(16'hCAA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1608 877bed32-7f15-473b-84cb-05927623b915)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1608 dce58b23-eb0a-4892-951e-c986a10f5ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1608 cfb03aef-791b-403e-8b5d-0ef512d6104f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1608 12278514-41a3-4d27-98b9-c7308a0c0424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1608 953bf6f5-30d6-499b-8db1-bb38e7f8e8bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1608 9eb4c9c3-96ba-4998-a616-b175e22d38c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1608 0275d266-35d6-4f5a-9582-d18a1e27664d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8346;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1609)");
    end
end

unit.assert_eq16(16'h0C4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1609 1aee48c7-d6d2-4ca8-9791-24e0144c44b8)");
unit.assert_eq16(16'h8346, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1609 83eaeed1-8d0c-4edd-a0a2-f1539253eb45)");
unit.assert_eq16(16'h8346, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1609 f1b9f046-f265-4860-afe6-06f36bbc097c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1609 e164004a-2284-4aa3-b1e9-772ee9f8939e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1609 0863de7e-43d2-4d93-9377-bab8a9fd8a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1609 7cc0a521-6aa5-472a-bd8d-1bace9efa35b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1609 01f0460b-7bc9-4309-b741-33360a163ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1609 4d8668bf-4f8a-4a47-bdef-be2c251b79b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1609 c9dba5cf-006c-49af-8837-6b7eb2c69c6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE03B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h485F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1610)");
    end
end

unit.assert_eq16(16'hE03B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1610 c0774c73-0071-463c-972a-5e94e8abe906)");
unit.assert_eq16(16'h485F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1610 0328be7b-4fbd-4473-8104-549620a6d51d)");
unit.assert_eq16(16'h485F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1610 643c4447-e176-4e83-952f-a55412913cca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1610 4abf4763-4567-4c48-af09-f7e10f8d526d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1610 9d57736c-2683-44fa-85d5-40a323f8eb91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1610 d296d1b1-a561-4093-b636-ca95dd817326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1610 cb473e1c-69e2-45bf-8f8a-fbcc6b91e3a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1610 1b28b64e-ee93-4e63-9497-0a0ba44f5281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1610 a2d9b12b-1101-4ea4-b3b5-bc98041328ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE7C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF025;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h948C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1611)");
    end
end

unit.assert_eq16(16'hE7C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1611 9d5ed57a-4c4c-4104-b053-e79340e672ef)");
unit.assert_eq16(16'hF025, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1611 6551d4d9-d371-4b88-bf4d-e0c16a51ea74)");
unit.assert_eq16(16'hF025, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1611 89e6ab16-1fd7-483e-bae7-8d866a6f86c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1611 2b2c5f49-4944-4285-b0f2-8f007150cb24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1611 2284c2e8-bdc4-42ce-bcae-1bcec9fe3b62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1611 db64fd0f-cc41-49d5-b1a4-93465772367a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1611 c6f5ab3b-1ffd-471e-bad1-2dc54a6fbae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1611 1fd38af5-056b-4731-a149-ee0e14befdbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1611 079d1178-480c-44ee-b144-8c038102485a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE4C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB2FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1612)");
    end
end

unit.assert_eq16(16'h5E38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1612 e9502237-6a58-4af9-ab81-cdc8d601a269)");
unit.assert_eq16(16'hE4C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1612 68cc4d96-3018-4f53-a882-88c8a599a02d)");
unit.assert_eq16(16'hE4C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1612 2a2c1a4c-66f8-4967-a7c1-da691a049c3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1612 04c9f1b4-1fde-44b3-bb7a-3f9b639e1b84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1612 3fb7abd2-cc24-4a64-96fb-3f2c08b2fcbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1612 dd8d8c5f-ec26-4968-a21d-c01fc18c6bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1612 7e607d49-7e5a-450c-8c67-741b27bc325f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1612 1b0ad185-0802-49fa-ac54-e423f88b85cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1612 cd17006f-b322-4146-9cca-ee35dff11e54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEEBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1613)");
    end
end

unit.assert_eq16(16'h7EB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1613 10200dac-d288-4eba-8acc-2a64cd5e6b37)");
unit.assert_eq16(16'hAA3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1613 79f9d008-3fbb-499e-94e4-a6f7db43abed)");
unit.assert_eq16(16'hAA3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1613 1b18cc62-2775-437f-a140-2f06e7afcdfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1613 1e205100-3a70-4d99-aefd-d1f92a151323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1613 57438143-06a1-4d8d-a662-b745301c7b80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1613 7356ea64-e880-40d4-b465-bb6c8802e8ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1613 51209f7e-0892-493b-8b94-84ded1ced8f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1613 2e6a5f20-3380-4406-9cbf-d78f4c1cd846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1613 590a1fbd-dac0-4be1-906a-3829cc052d69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3B61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h93AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1614)");
    end
end

unit.assert_eq16(16'h3B61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1614 bd0fbc53-9364-4023-a514-98dda906813d)");
unit.assert_eq16(16'hABF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1614 debe03fb-ab8a-410e-9b7b-9f2f8c6b22db)");
unit.assert_eq16(16'hABF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1614 b6bdade2-dace-4d7e-b7b9-8b32564c07c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1614 2829b37c-e27b-42fa-903e-813f50ff2a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1614 e566cbc2-06a2-41fb-9b31-df568d2df611)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1614 7d77de25-a526-4dc1-97f9-be79512e25a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1614 944b3f2f-520c-458d-a021-42c98e7c8488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1614 6912575f-a6a5-4b01-aebc-3d9d862669e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1614 85939d56-4409-45ce-836c-eb64b1ec3bc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAF45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5CD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1615)");
    end
end

unit.assert_eq16(16'h3A46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1615 ce026c14-f8ec-4c31-b284-c53df27636e7)");
unit.assert_eq16(16'hAF45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1615 b403a172-0a4b-4dfd-9ac6-7315a9ae08e3)");
unit.assert_eq16(16'hAF45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1615 c87cf648-c890-45b5-9535-b752e96c8ba3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1615 d5d36ea0-2e00-42eb-8e09-1727a465ea81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1615 367e80e5-0f11-4a5a-b02d-7e783ff3700a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1615 3edddc1e-ae58-40ac-a6ed-ce080aeece69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1615 12a88fd2-987b-4db3-bda2-47b89b9d9ba0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1615 2860ddd2-80ac-4025-8445-0408615f3c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1615 c4dd2d78-5339-4533-8eb5-1ab3f31ba821)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDDE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0806;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7D4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1616)");
    end
end

unit.assert_eq16(16'hDDE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1616 65d82755-4032-4722-97f5-d644dea3efce)");
unit.assert_eq16(16'h0806, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1616 5604699d-80fb-4905-b038-cd744b16e825)");
unit.assert_eq16(16'h0806, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1616 82a7404e-1fdc-47a5-9d1a-ae6889b500b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1616 370ef29e-02cd-4095-8072-8f405474f992)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1616 b8456aff-a764-4250-a836-4cfb835f90b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1616 f18bc379-5352-4160-bd42-bf2f66e385fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1616 93c108ae-519d-4e17-87e7-ff13506ed953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1616 408aca76-12af-46c0-818c-7a8c1af43d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1616 d42de38d-66c9-4d94-b5ee-4690e2648db4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFEC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1617)");
    end
end

unit.assert_eq16(16'hEF24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1617 b5e7638f-f3d9-4ad9-9837-dc401c0daf6c)");
unit.assert_eq16(16'h89CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1617 7b49b973-739b-4ad5-b276-da9aaddb7b42)");
unit.assert_eq16(16'h89CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1617 056746f4-f0f4-42c8-9c9d-950d41b9f297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1617 5a9a23f6-761a-4f59-b0f2-234ef77e93f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1617 e794961a-5e9f-4aa0-8d33-e27a9610a379)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1617 f4350795-78d7-4e21-8581-eb536de1c857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1617 1b5f0b80-f078-4776-9f07-4e14d4d9a26c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1617 4c68f00f-666b-4014-b9fd-bd3468716f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1617 b7cfc65e-b718-4029-adc8-af223b52e9d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDB7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h377D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1618)");
    end
end

unit.assert_eq16(16'hEF84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1618 f6cf40ea-f9ef-4819-87e3-b23fe16baff9)");
unit.assert_eq16(16'hDB7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1618 06c10f03-ec6b-47bf-b59c-7dbe15c7c056)");
unit.assert_eq16(16'hDB7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1618 56183967-c14b-45b7-8421-ce5f6094336c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1618 0514d262-2081-4e81-8287-2c167488d1bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1618 395fc388-515d-4e96-8904-eef57f635efb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1618 73f91d19-5170-44ae-b9df-393898525ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1618 3fb89a1d-6cee-4159-b8e9-059eb49133e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1618 0146441b-be31-4135-afb0-186e97da31be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1618 8c106b1d-3feb-496b-b65c-19255fff1a33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h662D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1619)");
    end
end

unit.assert_eq16(16'h02DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1619 c19b9ee3-7813-4600-a8cd-5eca4e825a23)");
unit.assert_eq16(16'h6F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1619 90dbdb91-3f70-43cc-b4de-b4b9ee8003fd)");
unit.assert_eq16(16'h6F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1619 e0d2b833-4996-4d7f-9dff-eb7f7a41f01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1619 44ed03f2-c1f9-4cd0-b15f-de0be91f7da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1619 a8494dc2-7809-4639-a3cf-0b06489f54a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1619 7835f2e0-4a6b-4dd0-bc26-0f921620df0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1619 e0fbd8d4-9c71-4a10-b04e-28ef1b1ee418)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1619 69139850-a13e-439f-a07b-58990b964120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1619 90ad2993-109f-4f54-a2f7-2fb99f4dfa0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h77B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD183;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h390C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1620)");
    end
end

unit.assert_eq16(16'h77B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1620 cf1adf9a-e2da-4f03-8c16-731a15478983)");
unit.assert_eq16(16'hD183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1620 a0b7b23b-8876-41d1-a1cc-1bfb816d0519)");
unit.assert_eq16(16'hD183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1620 ef90a13e-9742-4a9d-a929-033e5dc7e738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1620 d92f2674-2361-4dd0-ba39-8970be1d8d05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1620 b0dd81a1-62a3-4c41-b697-63db7e5267ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1620 050c22d9-1252-41ff-9d49-5ce05754f698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1620 6878006b-45df-4c64-ae1b-d893e05846f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1620 264a52b0-9aa2-4c47-8b8f-4c0a7365dc4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1620 e177be31-6772-4d37-aef9-ecae3a5b3e66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h32B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD9D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1621)");
    end
end

unit.assert_eq16(16'hFB1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1621 1cb1d053-3ebf-4f93-89f9-6cb05a163153)");
unit.assert_eq16(16'h32B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1621 a34857a5-d61b-4801-9dae-a9eed64cc487)");
unit.assert_eq16(16'h32B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1621 2517abee-449d-4371-aeed-33c3c733ab1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1621 1df5bc18-b97d-48bc-971c-b8d0ff4f8805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1621 0dd42993-d2ea-4202-b474-01249565c131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1621 49a7f1e7-e40f-4974-ad2a-8be06cd747ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1621 06006f03-1b2d-40d1-846e-ccf5abfdfd8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1621 d988d6ca-1fc1-4354-b23f-1cd3c399d95b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1621 15da96c2-d0a5-4cb6-b957-8c1cea40ac9e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFB00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h931B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h14A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1622)");
    end
end

unit.assert_eq16(16'hFB00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1622 09e30b1a-213b-426d-8dc5-20f6f58009ef)");
unit.assert_eq16(16'h931B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1622 9d05e551-ff76-4a7b-bf8d-c3be5b949ef5)");
unit.assert_eq16(16'h931B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1622 fbb693b4-dc6d-444b-96a8-32da85144f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1622 474bfb9b-8d67-42a8-b088-addffad06600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1622 707df806-b88f-42fe-bad7-e3c9cc72ccff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1622 662beb12-e19f-438e-b151-91f5cdbf1a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1622 d4a3dfdb-adfa-478b-8627-e1988a4bfae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1622 ea82c11e-07ce-45f0-aed6-929a4c3643ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1622 e95ef142-ff84-4632-a0cb-7a37e9ce4de2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3DD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h49E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8CCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1623)");
    end
end

unit.assert_eq16(16'h3DD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1623 435b8fc0-d964-4324-9281-a484710f2a64)");
unit.assert_eq16(16'h49E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1623 92ced7ab-f008-4627-94b9-f45691a1806a)");
unit.assert_eq16(16'h49E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1623 fc11e075-51a0-45eb-8d0e-097c70ff27af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1623 8a1199fd-2b17-4539-9243-89b7405106cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1623 6560f423-7225-416c-b795-5f86abc8c3c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1623 7faf323c-d5c7-46df-b223-0ab19bac68e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1623 ebab9bd9-3119-4fb2-af32-34caf0d8539b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1623 db53b74d-1bd6-498e-8ba6-cb6eade10d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1623 77aaa800-95a2-47a7-ad7c-359b8646f570)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3122;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3963;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1624)");
    end
end

unit.assert_eq16(16'h3122, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1624 21b4d70d-aa07-4e64-a5be-5620e61dbbc2)");
unit.assert_eq16(16'hD4FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1624 98f166a9-d6cd-4921-8e2c-a8adca45adfe)");
unit.assert_eq16(16'hD4FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1624 37ba7c48-32f8-48f6-83b8-59dea914a497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1624 e1469cb0-d7f6-490e-ae38-01598470344a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1624 3187de12-5c93-42e3-b641-e552ff9d275f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1624 e570fab7-5b4c-4ee4-a615-d2cc20f29c5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1624 5eec4e5d-c204-4b13-bdbf-0050c1d73727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1624 56508ef1-7c1f-4ae2-92cd-c90b2beab91c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1624 4624c985-f810-4c83-9031-9eda8fafb820)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE3C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5B29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1625)");
    end
end

unit.assert_eq16(16'hE3C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1625 d085b9e7-958b-4824-bfb7-28abb35fd9cc)");
unit.assert_eq16(16'h5B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1625 b0f4f0d6-c18d-4f74-a693-e34ca1a6d862)");
unit.assert_eq16(16'h5B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1625 9db92926-4002-4921-95c5-6a5a3d915e54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1625 9f5dcf62-27b7-44f3-a4a7-732253d8a675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1625 d316d33d-7bc2-4fbe-bccc-f442d872949e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1625 84ed225a-a395-464f-84cc-f3393dfa512e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1625 16628d4f-1728-46c3-be0e-53c524f74702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1625 ca417446-9ba4-4bf8-b392-f5bd4b3c25b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1625 010a8063-c1f2-42f1-b227-37f075af2836)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF6DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6C9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1626)");
    end
end

unit.assert_eq16(16'hF6DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1626 33518f63-0df9-4bbf-8f08-5a247ff2a553)");
unit.assert_eq16(16'h6C9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1626 00e2427d-3d7e-4adb-964a-839acd69391c)");
unit.assert_eq16(16'h6C9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1626 a02a76a6-41f4-4f87-a8cb-fb5ecda6b77d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1626 d906623e-ce88-475b-8002-992857ed9a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1626 cf663069-31cb-4aca-967c-b4d507ed0345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1626 d2531e55-240e-42d1-b25a-3ac69d0c386d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1626 4d92b2a9-9157-4b16-9451-42da385e32d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1626 3401cb10-deab-40e6-8e15-9079ff81081c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1626 31800ef0-2484-408d-b66e-0c6a5ea5ca60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB5AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB07A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1627)");
    end
end

unit.assert_eq16(16'hB5AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1627 618734bd-0f2b-41e3-9696-7dc9c4928af9)");
unit.assert_eq16(16'hB07A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1627 ee339abc-4d25-467a-a32c-9b101775dbe1)");
unit.assert_eq16(16'hB07A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1627 1681d4bb-5b71-4177-8026-96a647f69220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1627 1a94c862-5855-44d0-803e-3bd785d3ec0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1627 45d40cdb-ba36-4973-9bea-ab4b5fd56232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1627 fed9fa6f-869d-4b43-9919-f9df4d23c956)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1627 32cd1b1c-189a-486d-9aae-242dac188505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1627 0ccdc59a-bdcb-4123-81ad-1e6184c76179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1627 f4117d7a-6965-478e-bbe6-fde64a1423a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBFEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC994;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1628)");
    end
end

unit.assert_eq16(16'h9D4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1628 34fa554b-f6a4-4c2a-9897-57440bc61415)");
unit.assert_eq16(16'hBFEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1628 60dc2477-bb0c-46e3-a392-16859031605d)");
unit.assert_eq16(16'hBFEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1628 9838a386-7581-40a4-8d72-1b19ffe2e860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1628 e9d465d2-8514-45c1-aa72-0af6d62857ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1628 f837f888-bba2-471f-b8b4-b07f0721b5ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1628 89276d3e-6cd5-44c7-8c57-e010046c027b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1628 97e98539-f654-4905-93be-d4c32301ebe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1628 2a48a4fd-eae4-43e7-8839-628dd4bb2d53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1628 afe34ec4-b6fa-4b03-9ec1-9bcfff581768)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h58DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h154F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h425D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1629)");
    end
end

unit.assert_eq16(16'h58DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1629 714b9734-b65d-4dbf-98be-8b3b06c25f42)");
unit.assert_eq16(16'h154F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1629 565e4783-0ccb-433a-9bd0-353883d879e4)");
unit.assert_eq16(16'h154F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1629 3587136e-aaa6-4a4a-9985-50b76f240c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1629 0b19429c-6abf-4a97-8db0-37055ee366a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1629 573d0dee-ec96-4be7-99f6-14bc0c4d9913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1629 6213f975-955b-4008-bd3f-6a933e2d30a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1629 06a7edc5-cfd0-4385-91e2-8add07f792a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1629 5ff213d7-7932-475d-bb96-c9f456231537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1629 fbb28a7b-ae6d-456e-9e68-db17733e630a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA143;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1630)");
    end
end

unit.assert_eq16(16'hDC29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1630 758c0caf-5a80-4e41-be2a-1f81fe7de854)");
unit.assert_eq16(16'hA143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1630 d4377338-0071-4a31-8c3f-b966d417d1fa)");
unit.assert_eq16(16'hA143, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1630 d70fed15-e6e1-4820-8374-8d23f9b1e583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1630 408b5cff-83e0-4f82-bf38-885491034049)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1630 30fe3dcc-6582-4488-9291-11c72ae1534b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1630 3de977bd-2951-4762-9203-da424946b488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1630 24b7f7b0-9632-41b1-929d-9fd50aa02fef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1630 f219223c-a3cf-4dfc-aed5-e7d2ecb388ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1630 e598593b-1456-4542-83fd-e172d7c10122)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE2A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE0C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1631)");
    end
end

unit.assert_eq16(16'h4B05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1631 27151167-caf3-487d-a93f-c31d94c4de27)");
unit.assert_eq16(16'hE2A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1631 98c4c28e-a66d-41b2-aa32-1d29a1706e48)");
unit.assert_eq16(16'hE2A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1631 697c46fc-faf2-4945-ade0-4c99cd19f3d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1631 3ee138c3-4d7f-4cfc-abd4-5704d3e16089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1631 839774d4-f33f-43f5-a25f-116fe59c0626)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1631 05146996-59e6-4562-964d-34bb556b21a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1631 d45cb12d-2dab-4dc0-b4cb-0ddafa97467a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1631 2c09a508-2eff-46a1-a684-f556048c3647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1631 80606ab5-834a-4b8f-927b-e1405b982938)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h83BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1632)");
    end
end

unit.assert_eq16(16'h83BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1632 51caad99-f242-487b-affa-e5b82885af5e)");
unit.assert_eq16(16'h9CA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1632 fab1292c-da9d-431b-9883-8e1270e22712)");
unit.assert_eq16(16'h9CA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1632 af6c3671-7b82-4120-a0b8-7ad402dccfa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1632 7233888d-5d60-490b-ba40-6013d94eda3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1632 dab91bf2-2122-4480-b5c9-d0443e10ee7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1632 2fbb0278-b3cf-48e7-8eeb-723bd5f54c98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1632 777955cb-7e3f-41da-a506-0625c6f4d374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1632 d2abac83-133b-4503-845b-3656d2131977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1632 5f0c995f-97dd-42dc-8a9e-9bcfe08d63d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE1E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h253C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1633)");
    end
end

unit.assert_eq16(16'hE1E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1633 3983a577-7024-43a7-98f3-46b94523f804)");
unit.assert_eq16(16'h3B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1633 00862ffb-70b6-4c1c-a248-c105388a572b)");
unit.assert_eq16(16'h3B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1633 c9db657c-40f7-476f-a9e9-9d05530580d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1633 8b60c324-f879-4543-ad9a-87a263e5b6f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1633 e2e57e86-270b-4580-b14e-d38ecd8313b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1633 eadbb91d-e8ff-470d-8d5a-236048408d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1633 d4fe05ee-c966-461a-a062-e8261e82a0f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1633 b0c84687-05f6-40ab-a15a-ed0ba3d69103)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1633 87fc9b14-58a8-4be2-a790-971ca6beb11d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h49FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBDEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h33D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1634)");
    end
end

unit.assert_eq16(16'h49FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1634 32c7cbd3-9328-4e07-8a23-6e7c247bc228)");
unit.assert_eq16(16'hBDEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1634 f5ab1851-597b-48ac-9b63-d3a73bf20515)");
unit.assert_eq16(16'hBDEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1634 f16e1acc-931b-411c-8ebe-4b577f654593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1634 05db033a-8a2f-4d1e-abfc-bc1c283c7952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1634 d3fca701-5cf3-4c4c-af41-d62fd5582182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1634 477cffb3-36f7-4169-a612-1985fca8bee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1634 649a897a-5a29-41dd-81f6-d7882bc4ac5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1634 61667ad7-82b1-4931-8a18-985c10f20eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1634 d3846b0d-67ad-4d78-b3c4-8cab376b1869)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h61BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA934;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1635)");
    end
end

unit.assert_eq16(16'h61BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1635 77c85d5e-4dfb-4880-8d67-853a291c7abd)");
unit.assert_eq16(16'hA934, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1635 9ebe6d6e-111b-4cbb-bc1e-56b23cda8bfd)");
unit.assert_eq16(16'hA934, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1635 19853e8f-a5c3-434c-b5a2-84326536d6dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1635 35b268eb-b058-4bcc-a0c7-92a4ec037361)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1635 7e621aff-5c9d-47c2-8d9d-a1816c5ca7bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1635 6414aae0-bf88-4f1a-84bf-2dd4c27297f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1635 7be705e9-9ad2-4661-9845-178838d6107d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1635 f244aa84-d9fd-4952-8fa2-b343278d9f08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1635 a9e9ff45-939c-4dc9-a411-90d31ec71f31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE4FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h478A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1636)");
    end
end

unit.assert_eq16(16'hE4FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1636 b0623b37-0875-42b1-888d-1d8ac851bdaf)");
unit.assert_eq16(16'hCE5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1636 c500a02f-ff3f-4529-adc8-b56af6e7e147)");
unit.assert_eq16(16'hCE5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1636 6801a5be-b091-4cfb-889a-5c08e67bab50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1636 bff354ce-5557-4480-b33c-906982e9d191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1636 f75edbea-a01c-4e1b-bf96-dfb599a9fc53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1636 5214426c-f6c5-4fbf-ad23-59b127427de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1636 e0e867a6-2ffe-4f83-a689-33548587ba58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1636 5d9b7143-47b4-459b-884c-ccd263fa9c85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1636 77ccb598-222b-4171-b4db-a02e7a2a54cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4FDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h848E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1637)");
    end
end

unit.assert_eq16(16'h4FDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1637 d49e334f-f818-4f04-9b87-ab160e619e30)");
unit.assert_eq16(16'h0BDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1637 af1201d9-1f20-4b76-8a8c-048552f7d121)");
unit.assert_eq16(16'h0BDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1637 7f3bd286-b093-43ba-afc7-a489dd041a6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1637 be4926f0-e732-48fa-a97e-9d1e1ba39f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1637 2ecc99d1-fac7-4eb2-9994-890747c7ecb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1637 d0888439-e0e9-4563-a789-b30fe41a3595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1637 42ec825b-b0f9-4bb0-8edc-40b57dffe639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1637 5f1d0b74-7995-40b0-b6dc-e5bec6d9db22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1637 6d7fc692-adf0-469f-80ca-632bca013e5b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h91B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1638)");
    end
end

unit.assert_eq16(16'h91B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1638 ac9f4e22-fda2-47ea-88a5-ac23ae8303a5)");
unit.assert_eq16(16'hCB49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1638 64066805-becd-4039-a9c7-711c1583c091)");
unit.assert_eq16(16'hCB49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1638 4ce77742-3e2a-4c38-aa3e-a96611a9edf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1638 2e45027c-6e22-4aba-a554-26d7f1426750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1638 cb06d416-da45-4349-b92a-699cab3487ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1638 0adb2de5-db50-4960-8bd3-67f8e40ee529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1638 4f31d892-bbf3-4922-acde-f1cd3c2f280e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1638 8affa272-5fab-4ce5-981a-98b4cf84d85a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1638 d8a1c19e-8660-4888-8c10-373c5a131512)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h47CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC833;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1639)");
    end
end

unit.assert_eq16(16'h47CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1639 6234e09f-ee6d-48e1-aac3-0e425d9e9c71)");
unit.assert_eq16(16'hC833, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1639 a8403041-4a04-4718-b151-88b5e41786ee)");
unit.assert_eq16(16'hC833, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1639 0655726c-034d-4ede-addf-d1bed709d71c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1639 66ecc308-e9ee-44bb-b4f8-a1829c520565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1639 13cb9514-d73b-4c2c-9774-33214d0c68b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1639 2005f236-5217-4e91-9ea6-14f812a51d1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1639 bb1498a6-0f92-433f-b560-824dbaf1046f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1639 e11fb14b-4093-4a94-ae62-70f913491318)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1639 3b5f556f-faf7-4437-9887-fd7ce4728ce0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h53C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE83A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1640)");
    end
end

unit.assert_eq16(16'h53C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1640 7819a65e-8548-44b7-8797-d0ffc8b9ab51)");
unit.assert_eq16(16'hAA79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1640 0afaee04-e892-4c3b-a69e-37e701eb03d4)");
unit.assert_eq16(16'hAA79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1640 c3f78420-85f1-4216-9255-0daa0b9a918f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1640 8e79bb85-cedb-4c5b-932c-74d25e02c130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1640 8ab18971-65f9-47d1-a2db-4fe9597005e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1640 298a8511-8558-420d-b7ed-fbe0153b67e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1640 2a8fcdd4-9849-412a-a742-67d6c4833a26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1640 293e20dd-6751-4144-9dc9-258008cba2be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1640 507276df-a29f-4997-b073-2035351977ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE8C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDE45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1641)");
    end
end

unit.assert_eq16(16'h8A84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1641 95f66720-71e9-4f56-9248-7d8591c0eb5e)");
unit.assert_eq16(16'hE8C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1641 b73c3833-13c4-44d7-8ac9-11bbee2f6c73)");
unit.assert_eq16(16'hE8C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1641 1cf7b0ed-d58f-4b12-b75e-319b8a08e1ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1641 a6c753d4-36fe-466d-892f-5329f0d4c1f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1641 2dee6311-972b-4bdb-bd98-6743c2ebb2ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1641 b89187d9-8a89-4cc3-bf9f-2923b1ec5402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1641 f8c60bf1-58ed-44f7-90b8-be2bd9184613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1641 9a649747-44ee-4744-9b96-f9be7ca2fc00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1641 8d79418f-e588-4dfd-a2a3-c291a59c16a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h748F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE4C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1F49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1642)");
    end
end

unit.assert_eq16(16'h748F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1642 e3540455-3497-44eb-900e-2dac6a4c3622)");
unit.assert_eq16(16'hE4C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1642 2b2a0ab5-09ae-4558-baa8-c827582ba12f)");
unit.assert_eq16(16'hE4C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1642 ee039567-bd16-4045-ad07-5a59121b5776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1642 c69a22cc-d3fe-4e8f-bb1c-14253b940e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1642 c9fa6b61-c505-4425-829b-e3ada100d4d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1642 a8c8c69c-959c-4cc9-8f3b-ceaed26b45f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1642 8fed3f4c-681b-4a22-9cb8-fd7aead00af7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1642 08e5d0c6-85ed-4926-acc2-d9ca7d82789f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1642 af43833a-e4f9-4cc8-a56e-3101381792bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF0A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC901;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1643)");
    end
end

unit.assert_eq16(16'hAE55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1643 65a79698-ec28-4863-960f-1134e9939174)");
unit.assert_eq16(16'hF0A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1643 00a358d2-b853-4048-ad20-d4b810bf8608)");
unit.assert_eq16(16'hF0A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1643 84a59d5b-4509-4f58-abef-360f8f31086c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1643 9b5e6f9a-c3e4-4c4d-9784-b35f00e0ac10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1643 443039f4-1d8f-47b1-aba4-bc1837b0e3ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1643 208092d8-f0f8-46d0-9212-bd2a7a7c0498)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1643 df5d71dc-0066-4383-876c-3d1cef56fcb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1643 e61a2ac9-1951-4cac-a49c-cb1a9f62fa30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1643 1c4c4a1e-3a44-4ae0-a858-957d0e71cf1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h846E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1644)");
    end
end

unit.assert_eq16(16'h06EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1644 5e6bf9f5-6944-4542-b0ea-b01cc34ab0fa)");
unit.assert_eq16(16'h846E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1644 a3d118bd-ab6b-4056-aa26-b21b26700bc3)");
unit.assert_eq16(16'h846E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1644 f4254dad-d8b9-4ad7-acbc-b65883499b1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1644 9ac4199d-341a-41f1-b7bb-c03cdcabcaca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1644 ab974c0d-9e12-49ec-899b-3d0f9bd1f316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1644 0b95b98b-cc82-42c9-b6fd-74150b1e501d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1644 458d6eb7-434b-4e7b-9ba5-040699ea93b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1644 020129a3-bccd-4d4e-b8a0-f4e253437d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1644 fd8c316d-15f7-4124-94ca-ce9e5bc2ba29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0114;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB112;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1645)");
    end
end

unit.assert_eq16(16'h0114, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1645 bce0cc51-c717-4dda-848f-cdfd1be10c07)");
unit.assert_eq16(16'h0D27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1645 eee0917e-a334-4f44-8c2d-852c787227b7)");
unit.assert_eq16(16'h0D27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1645 439628b0-dd05-42f7-acfc-7a041cb5770d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1645 9f707fd8-e56f-4e8b-b168-37c35efa28c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1645 63671ccf-25c3-48b6-95c7-0d38000ecd80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1645 59dee9ca-44cd-476f-b3b6-54c599c604d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1645 912d7518-9903-4d40-8ef6-077196090146)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1645 f87cf99d-7b72-4590-aac5-8d8b8e2afc4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1645 17b836f7-22bc-4b85-8737-a58f1f6f43f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h274C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1470;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1646)");
    end
end

unit.assert_eq16(16'h19AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1646 6bc56b0e-b8d4-4614-99d3-252d6e9a5dc4)");
unit.assert_eq16(16'h274C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1646 49e2353b-f083-4210-9f49-35059ca9d182)");
unit.assert_eq16(16'h274C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1646 25a357f3-9596-4242-9f95-ff72f64e3fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1646 8de36b8c-0beb-4286-af62-e9f9bbc25b0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1646 40e963b4-5232-4853-aa54-05314b7fb4f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1646 8d94b306-faf2-4de2-b6b3-4c7811b39ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1646 a56bfe2c-fa3b-4bca-935e-c33e3c328d7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1646 47ef980d-a875-4b43-a97c-28cec4923d53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1646 a37280b8-8508-47c4-add1-40c1831a67f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1236;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA140;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1647)");
    end
end

unit.assert_eq16(16'h1236, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1647 580d5dc0-3a76-4a02-a061-6135583802fd)");
unit.assert_eq16(16'hA140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1647 66f81edb-a17d-44e3-a417-49c1d30955a5)");
unit.assert_eq16(16'hA140, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1647 8d14bcf0-4a89-4120-9095-33185afaefc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1647 6feeda56-398b-4753-a8ea-c772154b6daa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1647 57c53956-e5c8-4f7c-8d22-4400ba007bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1647 000c65b4-8770-4d42-892e-431939ba162e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1647 b5f8076a-d050-4766-b055-b65603b628ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1647 3fff6888-3a27-4dd8-8b46-63c322c76108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1647 991f86ea-77ac-4a10-be7c-8d61d80e398d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEB4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8586;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5C4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1648)");
    end
end

unit.assert_eq16(16'hEB4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1648 c876393a-2682-4d84-a927-da1c5bd43a25)");
unit.assert_eq16(16'h8586, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1648 dd191288-9319-49be-b932-186215f12245)");
unit.assert_eq16(16'h8586, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1648 0bb88ccd-7057-496b-a225-ba11e03c804f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1648 3b1aca68-638e-4a7f-887b-6c7684c24881)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1648 f45553b9-9aa7-451e-90a9-e4875f5efde4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1648 6ac2ed20-942b-4aba-a53e-aa1958709a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1648 bef1620e-7963-40de-bbdb-235dd7b6f7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1648 bbf536ea-b317-41a1-8410-6462bf835d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1648 28dc1a16-310a-4778-af54-fa69c801c76f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1F10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB258;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC936;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1649)");
    end
end

unit.assert_eq16(16'h1F10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1649 17f458a3-fe6a-40f2-9bae-964f763aeb55)");
unit.assert_eq16(16'hB258, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1649 376ab8b6-71f2-4c2c-b935-797bd54ce3fa)");
unit.assert_eq16(16'hB258, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1649 f070f4b1-c0a0-43a1-ba2b-576957ded486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1649 c39af0a2-c7a7-4ebf-8727-985683bfd609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1649 58dbfb00-8958-4707-a5b9-aedb0220e0aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1649 f64cc8a4-c92e-4608-8b0b-dcff95d1cab1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1649 56427138-b81a-486f-be6e-4144f78f994e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1649 e9bce282-003c-4404-bfbc-4b9b30a20d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1649 300fb8c4-8399-41f5-8c56-012758f5a4ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h432D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h91F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6D2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1650)");
    end
end

unit.assert_eq16(16'h432D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1650 662898a7-49d8-405b-b190-d7d1bebcc03d)");
unit.assert_eq16(16'h91F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1650 adcce947-e2a5-4714-80c3-1ca77e09f5b5)");
unit.assert_eq16(16'h91F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1650 3a939b92-f081-48fc-b985-883a1b409678)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1650 76a7c847-ec02-4d83-b967-113510a5d545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1650 56440c51-af31-4825-8334-661525c45264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1650 fcb43959-54c2-4a04-9e42-feec8475f7a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1650 1fa4d613-b0d4-4828-9ef0-aa4d43b27bc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1650 733956c5-bcfa-41f4-bd6f-af48ec0ada9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1650 068e6fe3-1807-4f00-a70d-ae7383978a8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h272D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h21EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1B5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1651)");
    end
end

unit.assert_eq16(16'h272D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1651 d96c6603-0626-4808-bbdc-51507ad3f2fd)");
unit.assert_eq16(16'h21EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1651 e36c2788-86f2-4cd0-ad6d-9d4d74463613)");
unit.assert_eq16(16'h21EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1651 5faaa22f-b4a4-4971-b471-bebc80ad7af9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1651 05d3f118-aadf-4d8a-994b-bdcd618b5671)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1651 fc6ca78f-a595-4d27-bedc-5b4b1da70c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1651 b16a0c23-0e3a-4f0e-9f95-b7db24ab5de4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1651 35c05be5-6c29-4c49-a6af-b6b9fe4d8ef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1651 1418af52-61a6-4440-9959-9aa4374338da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1651 be11ab08-bed4-4123-8b4e-44ea061f4580)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0AE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6305;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h67B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1652)");
    end
end

unit.assert_eq16(16'h0AE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1652 9de5547a-c7c5-4986-8525-8ea093a4baf4)");
unit.assert_eq16(16'h6305, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1652 7a052320-b99f-4a6d-859b-f5eb768158b4)");
unit.assert_eq16(16'h6305, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1652 a745699a-73df-435a-9156-85cd68b7dcb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1652 1e19f63e-bb25-4cf0-b227-6da9d32d32ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1652 b21e671e-4e13-4820-aad9-86688fb0b6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1652 97c7d59d-110e-4abe-ae44-3ec1fab778cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1652 2cb3d645-d9ab-4097-9f45-9b4edb4613b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1652 b3708923-b546-4a2b-b56b-d3ba033f53d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1652 ecb85e66-e800-47ba-9b5a-787aa857ef53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB825;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4DF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1653)");
    end
end

unit.assert_eq16(16'hB825, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1653 5822e49a-2639-4c9a-895c-414596b4fd2e)");
unit.assert_eq16(16'hBD6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1653 50551091-3a0b-42d7-b995-bb27e8bed347)");
unit.assert_eq16(16'hBD6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1653 9085c664-d29f-4e02-a10b-1d2cd8c6cfb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1653 c3b440e1-425f-47e8-b030-ad70565ad270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1653 8ad94dfb-f7fb-416d-abd7-a937955c7e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1653 abf67da4-3b68-4fd9-b9fb-d0d46967e1bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1653 bb4807cd-8bf5-4a3a-b7c2-1e67dd691463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1653 e6dd4803-d888-4690-ab70-fc1c56207edb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1653 0cc5656e-8a87-4025-b1c6-923d0135609e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDA37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h015C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1654)");
    end
end

unit.assert_eq16(16'hDA37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1654 a8a4c3b2-9b88-46ab-b12b-f662013df586)");
unit.assert_eq16(16'h015C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1654 e16af88f-037d-4931-84de-3e01e899b8ea)");
unit.assert_eq16(16'h015C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1654 eb9b2a8f-6d4a-433a-8dd1-14e42e383f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1654 bc89605b-ebbd-4802-b9bf-fd36267c81ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1654 8a8b9fac-2230-403c-93ad-b9d9af99e488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1654 1653ba8f-b450-4ac0-b567-48f26cd92f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1654 07aa5576-0771-438c-b50b-7f5520e31df1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1654 fd7de1d7-90a4-4d6d-99c2-6bd2f715db05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1654 10720d20-d1fe-4cd5-9d5f-c78c0e9a0cdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6279;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1655)");
    end
end

unit.assert_eq16(16'hCA73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1655 64cc7636-70cb-4246-b415-381fd3dc2d0e)");
unit.assert_eq16(16'h6279, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1655 e333d6f8-d220-46cb-980d-2cdecc384627)");
unit.assert_eq16(16'h6279, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1655 29517511-8f45-4492-a913-ab2647700252)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1655 0e560254-653d-4d9a-a9cc-d9c723d47758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1655 2e277d42-f88f-46d4-8f38-1b7cf09231c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1655 ea074578-4540-4eb4-939c-f1966bd8e623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1655 cd20cc75-10c9-4453-b4df-4f1acbf2ffd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1655 d0176a1d-2be1-4a36-bc9b-439b3d8eb765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1655 91af79ac-5493-4e2e-8018-460c2926ebd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0B3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA068;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1656)");
    end
end

unit.assert_eq16(16'h89A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1656 3a08f0bd-357b-4d7c-bdff-485a5c6d61ab)");
unit.assert_eq16(16'h0B3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1656 99721018-ddf1-4674-9760-49a0a09a2e01)");
unit.assert_eq16(16'h0B3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1656 afb6599c-b1cf-40f1-88e8-42419ac0f0de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1656 861e9011-49aa-407a-ba4f-3c20d3c325ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1656 8c32bded-5933-4e30-971f-bd39c3f6c8a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1656 c5f139d6-ebea-4a87-af82-ab3258901d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1656 d3113b20-75cc-4367-93c7-97699f580f5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1656 c7136b7d-f985-49a9-9643-6d32ec4ab2bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1656 59ad5177-1090-4b8f-ad4d-3d29a0343390)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h361E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1657)");
    end
end

unit.assert_eq16(16'h5E27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1657 42e2a659-d230-4a38-a585-ff5c58fa6778)");
unit.assert_eq16(16'h3F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1657 02828f1d-62cd-4a27-98b1-ae1fc6e801cf)");
unit.assert_eq16(16'h3F37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1657 4bf71279-a65e-45f4-9f7f-b882660bf56f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1657 e1ef6f3c-29cd-4272-b4f2-cb794ca9b630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1657 f5d20474-b701-4fa1-a50e-6a5e67b2006f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1657 605fdbbd-f634-4f3b-b421-308e899c94bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1657 e9e6758d-77a2-4de7-9a12-e9e27f21d86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1657 dfe17d7a-0183-4954-9e54-7ebd51aa3644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1657 dde21fa4-2b41-4ea9-917d-277e6605e556)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD45C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h787F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8DE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1658)");
    end
end

unit.assert_eq16(16'hD45C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1658 0afef2bc-f6a8-4979-bdb6-3c7969f074ce)");
unit.assert_eq16(16'h787F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1658 f3888940-2ed1-4bc7-8a96-55caf790fccf)");
unit.assert_eq16(16'h787F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1658 77fab0c3-a3c7-4b02-acc3-92feec90f695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1658 ae377396-15f9-4689-b3b2-7afac671e71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1658 a43da5f2-63d3-476e-80c4-cead9dfd6772)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1658 bdcac056-ff3d-49a1-afd8-546a41c5d36f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1658 70748447-9554-43c5-96ee-bb46797d7a53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1658 a1697ff3-0623-4187-8834-34a835db9a99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1658 e8954913-5c7a-483b-afd9-5dd62f5c0671)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1B6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h91EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1659)");
    end
end

unit.assert_eq16(16'hC1B6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1659 e64acc16-1334-42bb-be7b-d9e7cbd388f8)");
unit.assert_eq16(16'h0BF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1659 680ea8bf-fafb-42b0-887a-2a053a3cce29)");
unit.assert_eq16(16'h0BF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1659 ce832510-282b-4832-a4b5-c887f79540e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1659 f85d244b-0cbe-406e-a172-0cfad5b8bae7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1659 945a53e4-f794-4a0a-8bd8-89599a1532ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1659 ccb54f04-fa71-470d-8d28-89513b46ca57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1659 2df503ec-d8e3-46ed-8503-941e09c25ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1659 f3bb1932-bacd-4956-92eb-77c3280487e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1659 44ea662b-92f3-4a37-a1fd-94406d8bd899)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7A2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1FFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5B50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1660)");
    end
end

unit.assert_eq16(16'hB7A2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1660 43b96e0f-f3ac-4453-9548-ac5cb7d5279e)");
unit.assert_eq16(16'h1FFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1660 5416faf9-e718-4e4c-aec8-47d81bd02cdb)");
unit.assert_eq16(16'h1FFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1660 bb698dd1-5dae-45bf-a1df-b829fb26ae18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1660 a932fc82-eba3-4dfb-8e60-740d557466ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1660 232628fd-87ee-4073-8051-667dd26fd81d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1660 dfded00e-8429-49b8-991e-acf0a4ab8998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1660 a217642a-0c53-4cf3-a5dc-989d5657ff6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1660 1fe030c2-64bf-4ac2-b822-fe3289f5817c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1660 6656a617-2a75-41b4-bf6a-e006950908d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5EE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB74B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h23C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1661)");
    end
end

unit.assert_eq16(16'h5EE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1661 46868a4d-8661-496c-aaf7-8da568b5109a)");
unit.assert_eq16(16'hB74B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1661 e78bf848-99cd-4349-9df3-fcc457adfcce)");
unit.assert_eq16(16'hB74B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1661 6bd0f6d8-4a85-415c-a638-2715f17fb5da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1661 5de8b4e5-e96d-4c33-ba63-90540350cb86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1661 c867c195-dfa0-4525-8545-112a70baa1ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1661 6df91c3a-2fe9-447a-8d54-9a5d83d9dd9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1661 a0cd7020-3d26-4902-80e1-cc83e10d85a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1661 400ad077-76ea-44e9-b0b1-0c388ee24bc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1661 ecb61153-71c1-4f23-802c-b70fb8f96be5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA47D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2BAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6FF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1662)");
    end
end

unit.assert_eq16(16'hA47D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1662 2c1d5461-8c22-44af-8985-661dd4122b8b)");
unit.assert_eq16(16'h2BAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1662 c3cdad4f-661f-4695-97bb-77b44d7d3d53)");
unit.assert_eq16(16'h2BAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1662 43787135-2653-46e5-ba3c-309355292d01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1662 2d1695cc-5457-4058-b5fb-760fcc5c8f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1662 1f7f1a3d-e667-40f6-9685-855ff66b421a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1662 6a2bf342-7a0a-4b0f-8d67-24ab89fe7242)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1662 ecd38645-7996-4f5f-aa07-e6e5f5a6cfa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1662 fcda4fa5-ac58-429c-8227-9fd4d1395156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1662 f70cf89c-34f7-4810-b358-9f8050e46a55)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCAA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1974;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5483;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1663)");
    end
end

unit.assert_eq16(16'hCAA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1663 5d521ce8-ee1b-40bd-a7bf-43e631956f4d)");
unit.assert_eq16(16'h1974, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1663 94879ef0-6f5c-480f-8422-2f22f2ff7446)");
unit.assert_eq16(16'h1974, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1663 c125978e-aea9-47c0-8942-330a83950185)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1663 d0634096-ff30-4367-ae2f-aa6092d8ad22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1663 1792a5e7-ae78-4c29-a703-daf622eed991)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1663 2d5dd73b-f0b6-4080-a5a5-0e289287f31f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1663 fbbd84b2-878f-4308-83d8-af154548ca5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1663 5a31b4f6-f229-438e-a310-12e2140d1e2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1663 2b400b54-62d2-4479-8b74-2a454036e857)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h32FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h50B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1664)");
    end
end

unit.assert_eq16(16'h32FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1664 86a4cdd4-9c2c-432b-94f7-d2fd8305941b)");
unit.assert_eq16(16'hD0E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1664 ed3f59dc-92b5-4930-8f70-8494927d81fc)");
unit.assert_eq16(16'hD0E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1664 170bc3e1-8405-4e40-bd48-77d28fbbc63d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1664 f5348993-51cb-4cdf-8c83-c6ce7187e188)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1664 93cf03ab-291c-492b-84e5-310539f6f3ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1664 ea7bd64f-2733-4b08-aaca-fe846452c7bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1664 d990c2f6-8b6c-4af4-b2ee-5a9006ff3948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1664 bd1654ee-56bb-4482-87a1-6f06d940a516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1664 00675508-d3f1-43d0-8c29-0103dc4cb960)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCC14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAEDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1665)");
    end
end

unit.assert_eq16(16'hCC14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1665 da605518-440c-405a-9884-9f410a104c00)");
unit.assert_eq16(16'hAEDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1665 87877bf9-6906-4e74-9391-00ad313ae59d)");
unit.assert_eq16(16'hAEDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1665 aab80cba-6005-4a01-9dca-0e065b234576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1665 96dd6b7a-834e-4d0d-baf0-4c577adda225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1665 6aca0323-094c-4bd7-b020-501c2f071e05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1665 a1606fd9-535f-4614-b21c-03f9f133de4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1665 b00ef741-4629-448a-867c-ea1829b98eef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1665 102fd755-084d-4a41-8f49-4d427a6dc9b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1665 23b00006-08b9-4e83-9814-3b3d8090b575)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF3BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF833;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1666)");
    end
end

unit.assert_eq16(16'h0BD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1666 5c395140-9113-4a1d-af89-ee8d23e3a059)");
unit.assert_eq16(16'hF3BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1666 b0a6d893-3233-4a23-b58a-d46513c45317)");
unit.assert_eq16(16'hF3BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1666 1bedee58-d257-4a12-822b-90cbd9577c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1666 37cacd1c-61a6-49be-946e-2c3237d3893f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1666 e6e8361a-a0a0-4d79-bed2-3a03ecae435e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1666 8c71c66a-625b-4b8f-847e-8bb6cdda5972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1666 3fe9b37c-3306-4bc6-b01e-4a59216eaac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1666 c9163baa-bc66-4e57-b152-b87466bd631d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1666 e1c2180c-9c20-4537-b2e1-032d29623c90)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE198;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA629;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7AC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1667)");
    end
end

unit.assert_eq16(16'hE198, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1667 e0148719-92ba-46b8-8dc4-da1f0dd28fc6)");
unit.assert_eq16(16'hA629, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1667 7a7aff38-1f12-4258-a428-1979bdda19d9)");
unit.assert_eq16(16'hA629, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1667 99c5431c-4962-4d3e-b7a2-c342761ba357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1667 9ce8ca3f-e3c2-4429-be3e-686459fcab24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1667 9f378069-8d24-401e-9b60-da81e82d49bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1667 4d6a4c0f-bdfb-4c74-a545-617d7a6004f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1667 2b982d23-e8f4-4ce1-a838-5add549bdcea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1667 32abd504-5a28-4b8d-9aba-9146e39d07ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1667 94813bda-da1a-4016-92cd-8baa7e01002a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE7AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1618;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3598;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1668)");
    end
end

unit.assert_eq16(16'hE7AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1668 33ec7e6d-9274-4640-8638-d507c17e85dd)");
unit.assert_eq16(16'h1618, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1668 9bbc94ae-d05f-47b1-931a-d1d4b86a331b)");
unit.assert_eq16(16'h1618, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1668 aacb4ec5-ba98-42ca-806e-5546ac73b879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1668 6a437abf-c453-4ab2-8fcd-c31786e49138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1668 409b9d70-9655-458d-8514-f06c82eaaa11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1668 f1cf8b56-ced3-4110-9c76-5f1e726cf932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1668 8f2fe506-2b98-47f0-a4dc-74fb57484ef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1668 a2b8e585-d790-47db-a411-4949ac6122db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1668 b86a89c1-fe86-4d1d-8dea-7d769778b8f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC7FA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9FE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1669)");
    end
end

unit.assert_eq16(16'hC7FA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1669 74e32fa3-e0c3-447d-86cb-0e4b7350db59)");
unit.assert_eq16(16'h9FE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1669 564e8cfc-a5dc-42b5-a57f-5e174f60e703)");
unit.assert_eq16(16'h9FE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1669 3d2f4d83-8378-46e5-9eae-fe1a6a052988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1669 a9da5781-efc5-47e5-95df-ac4d71bf5bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1669 393ad1ed-e7dd-4c3d-8e85-b382f8dd14e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1669 0171ee93-8253-4735-bed1-3aa54e604ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1669 e1de823c-c1bc-4298-9eab-04d5d593cca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1669 21a86426-0646-4460-9e85-938324c5190c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1669 79568d21-6805-42d6-ab03-d82797664395)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE254;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB74A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1670)");
    end
end

unit.assert_eq16(16'hE254, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1670 90d95364-fd29-487d-aec6-0424605c0a79)");
unit.assert_eq16(16'hB74A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1670 d9fc8fef-13a8-42e9-a65d-c0a74c9d3921)");
unit.assert_eq16(16'hB74A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1670 cac268a3-8146-4476-99c8-335d5ae456fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1670 4050e20b-f439-43e0-88eb-9d43b94e47b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1670 d9b2240a-df54-4819-8674-f5efd75c04a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1670 4b1725c8-e779-4b62-bc09-2741358ac187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1670 d2c3c36e-9e4c-46c1-83e6-e5e0b59f30d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1670 7fe8ba41-4ad6-4668-9c21-7aa020ebc49b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1670 5fded404-1fd1-40ce-b3cd-f44837a6e4cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0309;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6288;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7B3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1671)");
    end
end

unit.assert_eq16(16'h0309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1671 37db5595-b4fd-43a9-8a2c-0be729f8faad)");
unit.assert_eq16(16'h6288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1671 90950e08-8553-4e6f-a871-2c7b6360c355)");
unit.assert_eq16(16'h6288, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1671 f46392da-23f7-41d0-b077-7f4cf1421f02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1671 37b174d7-8ebc-41e2-8966-e68e7b540cde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1671 78eee636-8be9-4aca-95f7-fbb241bfb3dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1671 96d95e79-a8b6-408b-bf20-fefbe801c1f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1671 5fa9a134-bb28-4fd0-be2e-1cf2b3dc8a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1671 43947174-7b7b-4d1f-9f75-91b0afd76557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1671 ca981d1f-09c1-4d00-86e0-90f3ff2d2631)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDEA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8BFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1672)");
    end
end

unit.assert_eq16(16'h11C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1672 776aebbb-615f-48ab-ae85-8708a820695e)");
unit.assert_eq16(16'hDEA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1672 58379b4d-c05a-4509-b8e4-6950fdba26d6)");
unit.assert_eq16(16'hDEA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1672 b5e3629e-98d8-42f4-a1b8-b667d25989bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1672 3d3bf54f-5719-4677-838d-e44ee851bbbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1672 f37c04c4-f6ed-4675-8ff9-50e2ce4a5f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1672 8ba168d4-3fa1-4b24-92dc-9fe6f38d057c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1672 c02d6c73-08e5-4378-b241-c18f82ef1ee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1672 f084af98-28f6-4c5c-ad54-2a6f8beb78e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1672 ece85d33-44fe-4f08-90a5-dff60acaba41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4877;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6754;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDF5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1673)");
    end
end

unit.assert_eq16(16'h4877, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1673 d889f0bd-34ed-4e3f-87fa-8d32b7a71998)");
unit.assert_eq16(16'h6754, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1673 84dda972-72cc-45a9-af14-46f45486d78a)");
unit.assert_eq16(16'h6754, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1673 49f64475-6c9f-4cc9-8fcf-f5b6dba8925c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1673 ae2a1037-05f1-4f15-a2c2-168a6afd0927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1673 90153df6-098b-4d71-b23f-0f06a5e657e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1673 3eb11397-2b00-4a3e-acd2-b87850a70e6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1673 28ec5dff-a2ce-41fc-938f-6ea07e1b568d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1673 912f2fbd-b003-4636-979d-4092cc1f7554)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1673 6acc62e7-481a-4c83-b57c-d42c87b70d67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0978;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF514;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB7DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1674)");
    end
end

unit.assert_eq16(16'h0978, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1674 813b9d7d-082e-49ed-87b1-7769a2e7a074)");
unit.assert_eq16(16'hF514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1674 31ec4173-a63d-4f46-a1f7-56b5927099d3)");
unit.assert_eq16(16'hF514, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1674 75164ee2-9fb2-4cfb-8008-d4f62b6f20b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1674 7a312106-0808-4607-be74-529663559a05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1674 0a92ff97-2818-4b16-9439-b2b40bfe7393)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1674 08e0778f-3aea-4f87-b935-6a8040eedfd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1674 18534cd4-ad7c-413e-9ad3-0200de7ac090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1674 213642ac-1c5e-46fb-8b2b-730c38b6d10b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1674 6fa30e9f-d4dc-450d-9747-f3ecd3906d7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEDC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB487;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA38D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1675)");
    end
end

unit.assert_eq16(16'hEDC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1675 7b0dd90a-f494-45fd-9d47-43f20225b145)");
unit.assert_eq16(16'hB487, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1675 5007b555-44be-4818-a35d-26488945633b)");
unit.assert_eq16(16'hB487, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1675 dd0992c2-f754-44f1-a1c2-cbe476cc4427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1675 24d9734b-98f8-467e-bb88-ecc59a0287c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1675 726a1df0-17b3-4050-b048-3b2c9f1c9e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1675 da81643e-073f-46a4-a828-7895d24eeb57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1675 7955321e-3445-4eb5-a8a1-9a8770b3f2a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1675 f3769242-5b76-44ad-ac69-c6dc7d41fa8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1675 af3979fa-0f1b-474f-96bc-ae720ed9a1ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5E19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1E5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB822;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1676)");
    end
end

unit.assert_eq16(16'h5E19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1676 35c6d638-c0d8-4b27-bf8e-7f22da5f1459)");
unit.assert_eq16(16'h1E5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1676 b6cdc699-18fc-48f1-92e1-ddb442c03055)");
unit.assert_eq16(16'h1E5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1676 6db9e88b-3691-4920-b344-01cd6ec21afa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1676 de3626cd-13d9-4930-802a-be06cacd776f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1676 1a853947-faf9-4ca3-9de0-805bd384611e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1676 4008c314-ba14-4249-8f45-aa8f7fec966b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1676 d54d92c7-0c75-4625-ab7c-124655d4d7f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1676 4d8d7d7a-cf54-437d-b457-af8a2c44fbb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1676 17529fba-a55b-4a97-b72e-f7b7ec83df6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF6D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7E88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEB83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1677)");
    end
end

unit.assert_eq16(16'hF6D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1677 6247ca12-b5b2-4369-8dbf-f8bb47c70519)");
unit.assert_eq16(16'h7E88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1677 7149b778-eac1-44ad-bce4-5948d9308de4)");
unit.assert_eq16(16'h7E88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1677 b47bdc72-f6a0-4692-994b-d28994b1258f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1677 7935cc93-b73b-4205-93da-dca7aa18335c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1677 0c22886a-4aae-47cc-9202-f54ea69527ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1677 d4316302-877a-4cf5-bc30-830866089784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1677 34ff5ac7-dfa4-4319-ae2f-99db40d7ea62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1677 b272db09-03ec-4678-9035-357892d3e6f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1677 fbf93f8e-48b5-4b56-a9ff-3eac95a437a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3A48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2B3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h118A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1678)");
    end
end

unit.assert_eq16(16'h3A48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1678 8a2a7047-2aef-4b00-8382-2d46f7a514b2)");
unit.assert_eq16(16'h2B3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1678 c6cea390-ee6a-42ee-9c79-1535d2c6315c)");
unit.assert_eq16(16'h2B3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1678 c491c595-3dfc-46ac-a63d-30942c6c33b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1678 2a41956e-a60f-4ca7-8a61-e482ebd24080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1678 2ddef3cc-4dd2-43a2-8314-5e60d391971f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1678 d56ba309-359a-492e-a7ae-ec985d497a04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1678 5b27502f-934c-4dd0-950e-9c27c3ca2d0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1678 bc817567-74a1-4f96-ae83-761825a7c5a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1678 3cc5b092-a778-4ea3-aae8-750496048f1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA108;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1679)");
    end
end

unit.assert_eq16(16'hA108, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1679 416d58cb-1d13-49ad-bdc8-7ef7be93159b)");
unit.assert_eq16(16'h6D40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1679 b2fae610-0f88-4665-8aa6-4c67d14dae58)");
unit.assert_eq16(16'h6D40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1679 fc398bd8-eb53-4786-acb6-3b69034e9578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1679 442c64b4-985b-4aba-b567-03326db6f4e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1679 a1dfd4e6-287f-46ce-829c-bd4c65f1a076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1679 06d2af3f-2ace-4117-8f4a-503aee7463d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1679 393dadc8-1977-4326-9dc1-1e5e5cbd4f01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1679 39b87d1d-d76f-4c4c-9ce4-292e60917588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1679 bba620e9-6c7a-4bbb-a5b7-651b424fb52d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC96A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1680)");
    end
end

unit.assert_eq16(16'hC96A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1680 d87d5a15-c3a7-490d-8ada-750a64e9725d)");
unit.assert_eq16(16'hBD3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1680 58b66a8c-8748-43d0-b5a0-3426660d4679)");
unit.assert_eq16(16'hBD3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1680 93476c3f-2058-485d-b26c-0c686be6b55b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1680 f04c09d5-f281-45a4-a2a2-0fb0dff658e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1680 c8fc77c7-4ec9-4b1a-b7df-d70234f58099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1680 1fea7196-2dcc-4aa2-a802-ac89d4a22a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1680 e67cdaee-dc28-43c1-bd9c-aa4fa1c3e8bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1680 b3bcc15a-c3c4-49e0-83a3-db6d0b3399be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1680 765a90cd-b00c-4deb-a44d-7846d8c6cab3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9CE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB6A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1681)");
    end
end

unit.assert_eq16(16'h9CE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1681 670896b4-e120-46f0-a9c1-a448f697f506)");
unit.assert_eq16(16'hB6A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1681 ba3d06f5-d532-4c54-bece-1f20db3cd80a)");
unit.assert_eq16(16'hB6A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1681 14579526-8d4f-4e83-b0df-af0fa5f50b80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1681 fc1288c6-fdbc-4145-b090-4a4a200c3c32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1681 c5512f38-1b88-4c6a-92e1-8ad7541e6dd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1681 d283299b-9a08-412a-b5a2-3e895f7cd54e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1681 fce13512-ce64-4828-889a-f913544bff55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1681 f584f32f-6f7b-4056-8a5c-787f460d1b0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1681 636a445f-ca4d-4b51-bea9-7500162933d3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC671;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEC46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1682)");
    end
end

unit.assert_eq16(16'h1B29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1682 30c06989-acc8-493f-a321-d4a363e356e1)");
unit.assert_eq16(16'hC671, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1682 cc47ec07-112b-40c1-9e31-b578544fb8ea)");
unit.assert_eq16(16'hC671, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1682 0fe064a1-3ed9-4313-b507-c1de4e4d96a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1682 dc08be85-44a4-4e5b-a139-bd9453de9d62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1682 9b9b7a10-0094-46c3-be0a-2702252235d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1682 06a445fa-4c59-40f0-be27-360247874650)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1682 84158dfa-5770-4927-b331-cb5ff1075fdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1682 2c915e81-0f35-4c39-9deb-14a89905e802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1682 af19f4de-b6d3-4792-b503-634ab497e78a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78A3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD530;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD784;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1683)");
    end
end

unit.assert_eq16(16'h78A3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1683 25285438-4e5f-44cd-83c1-a8bdf8c5cb0c)");
unit.assert_eq16(16'hD530, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1683 f72a9aed-ea11-4042-919b-1c4b11e07d5e)");
unit.assert_eq16(16'hD530, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1683 a2b0d109-a1e6-4d2f-a45a-360fc8f89d5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1683 8b4505cc-5cb1-4b2f-a803-994bded5545d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1683 99f1a7d5-6044-447e-8e98-637857f51428)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1683 5f7b78b1-1487-4f04-a507-f079b5bb28c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1683 326016ba-c3f7-470d-ac54-c99a14b1d55a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1683 9c0ca2c1-834d-4ce9-bf84-3cdcb90c5d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1683 bfeb086b-52fc-4493-bafc-1bb6b5961907)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC4C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0366;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h88A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1684)");
    end
end

unit.assert_eq16(16'hC4C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1684 c51b0d68-01bf-468a-96d2-bd178b690c5b)");
unit.assert_eq16(16'h0366, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1684 b81be2d4-1ace-4fc6-ac20-76399e416d5e)");
unit.assert_eq16(16'h0366, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1684 3c6f405e-6e27-4fdf-8fef-b0dcfb665b6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1684 1bcb3d90-37a8-423b-978b-7bcf3536342c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1684 0d4d4f25-0fe4-4093-9903-8d224a4217aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1684 fe0fc336-cde4-4714-b0a0-e7542ac35093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1684 f40a7745-6ec7-4418-9b85-bc537f772daa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1684 a9620aff-489d-4d5b-ae5d-9aa9a4cf034f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1684 7a38036e-1676-4fe2-992b-52fd0951aed8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h592C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF432;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1685)");
    end
end

unit.assert_eq16(16'h8D15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1685 1904b124-0268-4604-8133-442ac3b6f0de)");
unit.assert_eq16(16'h592C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1685 53a9374b-111a-451a-9e2e-319bc1f43bfd)");
unit.assert_eq16(16'h592C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1685 7b6d2688-d14f-4c61-8062-959c5cf0e725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1685 8a31e472-a5cb-4fbb-955e-bdd515036320)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1685 d5258d7e-5c66-4fb5-b8fb-b666c8a83cdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1685 9c1675bf-ccc3-435f-9a50-446e5616e0b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1685 8f0ce684-6755-4fcb-b412-ee1c103be9e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1685 071e5c66-62b2-4fec-9902-81fc75ebe3d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1685 d036f1ba-9a16-4c57-91fd-d40bb274ed2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h71DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB2CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1D15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1686)");
    end
end

unit.assert_eq16(16'h71DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1686 668841a0-6056-468c-8a74-a762ec0e550c)");
unit.assert_eq16(16'hB2CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1686 9c49a377-80d2-4bbd-a5fc-f69ca3e1e96f)");
unit.assert_eq16(16'hB2CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1686 d299bce2-ce89-4846-8ecb-7ce255139106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1686 a126a126-0616-407b-8e06-3f7c3e803855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1686 2735743f-cb9c-498c-bdf6-ae8bdc839137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1686 1ccb591a-61d5-4f98-8376-c9c044e91ea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1686 23bd68a9-6863-489e-a63c-7c490aabac6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1686 3f3af43e-0f83-4e79-993b-6374cad728d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1686 f628f3b0-fc9f-4b8b-a7c4-7ed5cf6ea99e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h56DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8A37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8F03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1687)");
    end
end

unit.assert_eq16(16'h56DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1687 8b9fd3d1-12e4-475a-9895-902a29c1f788)");
unit.assert_eq16(16'h8A37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1687 f0756e9c-09fa-4594-be2c-2f6b8c533607)");
unit.assert_eq16(16'h8A37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1687 ca748c19-e876-4046-af2e-c5cc79526b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1687 b1ae4d04-e63a-40db-bcda-019a6e313f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1687 33d23cfa-43d1-46d2-ab08-cd5062b07673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1687 6c380384-5364-4603-929d-895e63d47860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1687 361e3ec8-eb15-40af-b690-09bfed899e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1687 508d3221-641f-4900-bea3-123dd1b8a75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1687 33fb8bfc-a38a-4080-a3f5-56512c49c609)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3428;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFA7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1688)");
    end
end

unit.assert_eq16(16'h03CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1688 bbae38c4-87cb-4902-b47d-2f96b8794672)");
unit.assert_eq16(16'h3428, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1688 b29a7cc2-b08d-4e1a-bdde-0ad1b061dabe)");
unit.assert_eq16(16'h3428, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1688 6b70fa3f-b426-41d4-876f-4467fa92558a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1688 40367544-81bd-4ef0-9ea1-04f4cea26d25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1688 e2b84580-acf0-4e17-ba5b-ff46b08dea09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1688 db898dd2-06f1-48ea-98c9-9db0ea247ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1688 9db924e6-5c53-4492-9d64-121a8479cb12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1688 f3106a45-9d6b-4af7-9a1a-df2e86c1ae9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1688 f055921a-2f38-4cf1-9422-5561cd75aabb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDC33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1689)");
    end
end

unit.assert_eq16(16'hDC33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1689 9cfc12a8-2304-4f09-a73f-8e6757bab9aa)");
unit.assert_eq16(16'hFB0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1689 f25bc776-4650-4c87-a2b3-b8fae1ea1fa2)");
unit.assert_eq16(16'hFB0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1689 c330efc7-38b6-436d-a958-0c75fbb223f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1689 b2d0e7b6-8ff9-4de9-a913-8da2118c8fca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1689 4c1e82c4-0861-41ba-b7f1-571ff57a50d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1689 95fe8737-a9b0-482e-8570-3bdef9a43ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1689 289ac7fc-834f-4485-b413-e928f5a883d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1689 2e6eb1b8-feae-452d-8218-5adf275434f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1689 c0923b79-9e6f-44c3-8c50-8882541025ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF2B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCEB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDCCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1690)");
    end
end

unit.assert_eq16(16'hF2B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1690 e05050e1-d7c8-4ebd-bf04-d1e148b36983)");
unit.assert_eq16(16'hCEB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1690 789a5ea6-1a87-4da8-b60b-dd28812403c6)");
unit.assert_eq16(16'hCEB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1690 4cd4013c-184d-4f8b-8010-5bc619d8c6d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1690 96a5b2f9-6389-4690-86fc-bf4014ee3d8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1690 a71151fe-4227-4160-9e05-1ef73e09a1b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1690 5bc40264-6839-4c43-baa1-9ab3e3d5cf39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1690 917f1621-9d23-436f-a82f-257b2fb60ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1690 78f2ea4b-8409-498a-aa26-f15abbe8a76c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1690 2bbb0d28-397e-4591-a6b1-4c87cd832362)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0DB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE393;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1691)");
    end
end

unit.assert_eq16(16'h0DB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1691 d65e9a42-59c1-4ff4-b109-59cc4b72fc19)");
unit.assert_eq16(16'hE393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1691 ecdc50ed-a5b8-4050-83db-97be7a90827c)");
unit.assert_eq16(16'hE393, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1691 2cdac9a0-7ec7-4617-9074-bba6912d1d1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1691 1d4a4bff-1e11-4f43-8bcc-461cc4c9f0d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1691 b3d4f319-835f-490a-951f-202a52ab5b06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1691 79e5fcfe-208e-4dda-ab12-06713ae28b2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1691 21175e6c-6966-466a-b6e8-78a92a013a3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1691 13b1302c-adca-455a-9ad3-f7d3f0d4b6c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1691 2ed032ca-54a3-4686-9e8b-175e5c8c39ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF94F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5B71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1692)");
    end
end

unit.assert_eq16(16'h89C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1692 7c3bbdbb-26ed-4937-ac9f-d04ce325e9d6)");
unit.assert_eq16(16'hF94F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1692 701a4766-98ea-42d2-83bc-47215f4cff85)");
unit.assert_eq16(16'hF94F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1692 40a4cce3-2375-4b77-9584-913227128cd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1692 f89b7a88-ea2e-466d-9d79-9086a610a8b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1692 60b60e14-76e2-4ece-9cda-7116925dbe2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1692 578de93f-4f2f-4339-9962-53f56c0e0ac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1692 9ba343c3-3fca-44fa-9a2e-1dbc4de8687c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1692 1f9d02f4-bbec-46ee-87b2-19aa13b9f9e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1692 da42d6dc-2156-4f2f-a1b0-a3580db48ced)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB1DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h24DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBE6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1693)");
    end
end

unit.assert_eq16(16'hB1DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1693 1c45125e-fef2-4aba-9b0e-7b00fd10feb8)");
unit.assert_eq16(16'h24DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1693 7217e40e-d2f5-4838-892a-4d3e1ae9196d)");
unit.assert_eq16(16'h24DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1693 f6b51ddc-b693-4be7-9a1f-594ab3263be7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1693 0da12ee9-8eb9-4866-98bf-d62ad62ccc39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1693 0771afbd-e810-46cf-9d1a-dcda1dd154a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1693 0f0726d2-59a4-44fa-a36f-35759cf83d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1693 934ce7ee-833a-419a-83d3-12c3c9d83b53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1693 3dfe2cb6-9ac5-434d-af89-d044b377c5f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1693 873d1e30-d76e-48f7-9a5c-213741261e4c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB62C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2533;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1694)");
    end
end

unit.assert_eq16(16'hB62C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1694 c76ae9da-4dc2-409b-886f-31e85221a3bd)");
unit.assert_eq16(16'hF7D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1694 ddd7717c-10ae-4cbc-a896-9e692a0ad5fc)");
unit.assert_eq16(16'hF7D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1694 d03c95f0-59e5-437f-8fee-13ee9174fcc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1694 f4f30b31-5174-4d58-8b0f-6ea405ae2435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1694 0494fab7-9c47-4682-890e-e5b9fab9a680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1694 1b118813-44dc-4f95-8060-82e2b4d6eb26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1694 3315da14-aae4-4e98-b13b-7236855fec13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1694 3a46094a-921a-4c35-80c5-dec495a21481)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1694 02b3f3c1-6729-47c3-a07f-48a2d596f22e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9599;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1AB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB922;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1695)");
    end
end

unit.assert_eq16(16'h9599, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1695 e48601c8-8d10-47f9-b751-5c0ea81f7d89)");
unit.assert_eq16(16'h1AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1695 13e96391-093d-44f2-8b4e-c998e1fdb2cf)");
unit.assert_eq16(16'h1AB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1695 a016d52a-66b5-4f1d-9d2c-912a765b0307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1695 c5ca519c-891e-4ca7-b5ce-82bab1f2df55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1695 2330861a-a743-490f-841a-37ad2e29b057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1695 dbf54c23-b075-4ecd-a5b2-9534be8c8a4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1695 79b47560-a808-445c-ad2b-18bbf714556e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1695 504dc16a-edfb-4326-b0a9-033ffe627c41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1695 4ad02566-90c7-4296-8eb4-feeff8b0be0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6D88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3EC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFB92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1696)");
    end
end

unit.assert_eq16(16'h6D88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1696 47ade191-6986-4ddf-a977-81b8b193fcfa)");
unit.assert_eq16(16'h3EC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1696 7cd002f2-2940-4938-a147-b32e60025378)");
unit.assert_eq16(16'h3EC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1696 8f14298e-f7cf-44f4-8116-de440675fc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1696 7c91222d-01a3-471b-ae9d-506197e71dc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1696 f66676e6-b241-454c-9916-d5ab7b017dc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1696 e1990022-97ce-4902-8f0b-1ed8a7a31dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1696 dc0185cd-6be6-41df-a2d3-b6a2de81ef48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1696 7645341c-3700-4a29-85b8-e82bba4e60ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1696 24f3b7f3-7320-43bd-9d6a-1b54de628d2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA33D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7578;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h689F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1697)");
    end
end

unit.assert_eq16(16'hA33D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1697 8ba03214-85fb-4484-8a50-76b9ec712ff4)");
unit.assert_eq16(16'h7578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1697 a65a6d9c-96af-47c5-b646-141ec0e57937)");
unit.assert_eq16(16'h7578, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1697 11e751e1-486b-40ab-a678-9d9d983d96db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1697 1a2f0d82-7879-44ba-85a4-55fa8fefbfb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1697 c063b108-1eb0-488f-8693-2de67cb27ca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1697 95cfb7a1-1dc7-4262-9a9f-307398e95eb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1697 2392fc2e-9e87-4cb1-852d-feca356b19db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1697 6f02f24e-d7ef-4c37-9dba-504d8cb8055b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1697 9f21e707-e180-44ad-ad56-f0decd7bdea6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5973;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3F97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h39BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1698)");
    end
end

unit.assert_eq16(16'h5973, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1698 6aca5ad2-4d83-4ab6-8146-32c8656d006d)");
unit.assert_eq16(16'h3F97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1698 67555732-2f28-4970-b46f-204f1f8b2e02)");
unit.assert_eq16(16'h3F97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1698 e34654ec-dbe9-4964-9692-83b271448bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1698 4618f478-aba5-477a-b4c8-273ea9e39ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1698 4d1fc862-ba31-403c-b959-c8dabbec8c2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1698 de6332dd-6ec9-476b-9199-1f250cf0b85d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1698 f584579e-2cb9-4318-836c-ea408dd826c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1698 f9de281f-9136-474a-844d-8e02fc72fb43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1698 0cd79fe1-624f-4c82-9c06-055c26657870)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h714D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h235A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3507;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1699)");
    end
end

unit.assert_eq16(16'h714D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1699 3ead7620-7ab4-4065-9b0f-64c369943f05)");
unit.assert_eq16(16'h235A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1699 8830cf80-21c2-4131-af65-a27b97a7eacd)");
unit.assert_eq16(16'h235A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1699 6864924f-94af-4e82-8313-fd8c7012311d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1699 fc087719-857d-42e6-bf8a-e5a286717891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1699 feb355e1-c1ac-451f-9246-c77f566f213c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1699 45ffac8e-d767-4aca-924e-abe691c93cdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1699 00169e96-beb2-4f04-9122-e6193bf772b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1699 7f148dce-17bf-4f47-96c3-a4a171cd6f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1699 8293da43-4fdb-4fd1-9e73-3f00f77ea42e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1484;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF267;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6AAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1700)");
    end
end

unit.assert_eq16(16'h1484, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1700 9ab659ac-3358-420e-8685-4811fb6d70da)");
unit.assert_eq16(16'hF267, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1700 6e6c3e91-3de9-408e-a92a-cfe0c76c98b8)");
unit.assert_eq16(16'hF267, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1700 2db697b2-8afb-4a15-9ddd-2c964d920e69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1700 6f64ff0c-30c4-42aa-9157-f94757073298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1700 9c26d606-df45-4b58-b601-76f4546012ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1700 001b1f71-9e7e-41ac-9e39-205c4ecb0278)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1700 8973abe2-adbd-4128-a9d9-446101421129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1700 69bd3bcb-3ed3-42c9-9436-aa33bef74c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1700 fdc9b954-ae19-4824-9cb1-5b82b00ac5c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE18D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1701)");
    end
end

unit.assert_eq16(16'hE18D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1701 692a3c4f-4e31-4eae-b880-4054fa3c05bb)");
unit.assert_eq16(16'h48EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1701 fd3d058d-57de-4131-913e-9713f59a2b03)");
unit.assert_eq16(16'h48EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1701 5cc0a5b4-6262-415d-83e5-b6b37fabf5aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1701 b173dfec-bce4-40fe-929a-191647c4fafb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1701 fbf5b9f8-a572-4e48-9c0b-46bf812c89e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1701 2f610dac-6ec8-4896-a7de-fec64bd501c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1701 65bad27f-be6e-4f9a-9ba6-b9b64243844b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1701 06b26079-a3b4-4c0f-8b7d-685d99d9e7be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1701 2e6ded59-aad1-4492-8f87-e685956d6974)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC419;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCF6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC250;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1702)");
    end
end

unit.assert_eq16(16'hC419, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1702 058f7d1f-e6b9-4c1d-9772-e361fec8da3a)");
unit.assert_eq16(16'hCF6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1702 c7ebf658-b7ef-4bbf-9565-06dd84a4660b)");
unit.assert_eq16(16'hCF6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1702 81608228-c49b-4349-9fb2-ddbf9dc148f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1702 6ba4f07f-8543-407a-add6-6f89c679f7ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1702 c41faa77-ac0e-4225-ac10-5d775b29a69c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1702 b91c163d-e25d-4bf9-bc64-10598cd0d095)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1702 9f206feb-e296-4df9-b4a4-2711e8c1bbb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1702 4ba86fb7-f8f5-4b9c-81a6-286fdd7dbb5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1702 bc99f674-d17c-45ab-8c15-6f738949d3f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h378D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5DC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1703)");
    end
end

unit.assert_eq16(16'h45DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1703 3b0b4968-47d3-49fc-ac04-d6208d328ae5)");
unit.assert_eq16(16'h378D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1703 10671df7-d166-46c0-80f3-af701d999054)");
unit.assert_eq16(16'h378D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1703 9de9f7e3-0678-4586-97c3-62e58c56acd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1703 7fe970fa-949a-48e7-936f-05dcef82a9d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1703 dd71c598-0da0-4fcd-9fb6-629abf11e41f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1703 e7eb1580-1578-4167-9399-ef5d948b7bd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1703 94b95adb-429b-4225-b0bb-5d2dc485d30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1703 c329ec89-801d-4f49-85bf-a9427c3a0880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1703 72e48932-2b53-4a9d-b494-19c6d6b54d3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h164B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB123;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1704)");
    end
end

unit.assert_eq16(16'h164B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1704 60af17b4-927e-4daf-822e-399a2fb10bc7)");
unit.assert_eq16(16'h5C1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1704 4869176d-2025-4ad8-8254-7e4b8960562a)");
unit.assert_eq16(16'h5C1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1704 c41e5326-9751-4703-9ca2-52c811da022a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1704 4a0bd28a-b3f0-440d-90b2-39901373706b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1704 1bea166e-2ed3-4896-a288-d4477cf20457)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1704 022535d7-68fe-433f-ad77-f5382a33e58b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1704 62bf8304-e239-4ccb-8e42-d20c37c5d1c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1704 68a4180d-3890-466b-a297-441f4e66c24c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1704 4e1db259-9096-46b5-9be6-428acdc81bb3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC841;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h962F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4676;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1705)");
    end
end

unit.assert_eq16(16'hC841, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1705 663c5317-a675-410d-a2ca-8c9146ca8b2f)");
unit.assert_eq16(16'h962F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1705 6a2caff9-2254-4936-b5c3-fe58c40cc80d)");
unit.assert_eq16(16'h962F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1705 4baecb01-0cba-44bc-b7cc-432a039930f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1705 85608598-041d-4b0e-87e9-6e7bef6317f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1705 417fe46c-2ad0-40c4-8c36-a8d928d28e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1705 fe3f6f9c-ed4f-42dc-bb97-15d0ee7f2e1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1705 372eefaa-2c72-4a51-863a-70ac2129d306)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1705 c7af0dba-63a1-49e1-9e64-0860cea60fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1705 6cf0cd15-2b61-4bc5-a62c-b90fc2ed545b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB364;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h726B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1706)");
    end
end

unit.assert_eq16(16'h89DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1706 b7d109db-22eb-48fc-9ebf-71366b00d172)");
unit.assert_eq16(16'hB364, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1706 16f00ee5-a033-4ace-8e6d-596ca7c581f2)");
unit.assert_eq16(16'hB364, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1706 847b91d9-db4a-44ab-b8d7-5a22426ccccf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1706 492fb810-4a35-43a0-8d9d-09d512ea6584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1706 c9b3318f-3927-45dd-a229-22111d170ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1706 450e9bc8-eaaa-44d8-abfb-93016b1b33bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1706 5798cde5-cecf-43a9-b7c0-1af1a482edfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1706 cff45513-b0b3-4d7e-970a-73a43fe67aa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1706 35c47046-4192-44ea-9c5f-3d31170de56f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h02E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h19BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB5B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1707)");
    end
end

unit.assert_eq16(16'h02E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1707 da34d605-c091-4370-8a5a-c6f27f7f3483)");
unit.assert_eq16(16'h19BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1707 a189eb5a-cf6e-4f03-9ed6-c2956e17c918)");
unit.assert_eq16(16'h19BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1707 94239aa0-a04b-4036-aa9b-526b4118b670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1707 ae6b2b00-dd4b-47ba-b9fb-735c118f0920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1707 977ce26d-86fb-4039-bc7c-9b01362bff09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1707 2d75d044-6e09-4f58-ad9e-3041def98416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1707 dc23c431-c104-43cd-9eea-b599acba3138)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1707 94b8f9da-b547-45e9-930a-dd95e0554053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1707 b2ebed7c-9a71-40a7-b013-a2bf30378d47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h82B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDDF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB71C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1708)");
    end
end

unit.assert_eq16(16'h82B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1708 43365c07-65b1-4742-9980-f5c83b8668d8)");
unit.assert_eq16(16'hDDF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1708 9cf15ae5-a6d5-4d4f-b0ae-2ed68dec3078)");
unit.assert_eq16(16'hDDF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1708 75ba1167-050f-43e0-976b-d81ecba9d742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1708 97959592-6533-4f46-be95-8d982dd0e2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1708 88acfe23-9525-43f5-bbcc-f26c3d61879a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1708 a4820846-f9be-4029-bb15-bcc63ff30cc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1708 f6f2bbac-3e06-4c18-a05a-f87428186b2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1708 6b73e9b8-32d3-4e97-98a8-f9c04b901808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1708 1b225307-d4f7-4ff6-bf2b-fd2de800cd8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD006;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h83E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1709)");
    end
end

unit.assert_eq16(16'hD006, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1709 64f755e9-7c41-48a0-9ed0-8543c74a5196)");
unit.assert_eq16(16'h45D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1709 0088e688-002d-46eb-ba02-d38b10a8aac7)");
unit.assert_eq16(16'h45D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1709 d7062f26-b546-4cbc-a2be-92439e98e8b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1709 c3c739e5-7f46-406b-b0be-d2d429fcc2c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1709 149b4a68-c708-4dc0-82c5-12650bebac40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1709 23f807ab-f93c-4728-8cf7-dcc83b02b091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1709 384a8340-a339-4f8d-a99c-567ffcd44dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1709 e45bb131-476c-4eba-8545-fa03c42aa62a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1709 ccd31b9f-5e29-42e1-bd9e-256c672d4270)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h04E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9832;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1710)");
    end
end

unit.assert_eq16(16'h7C10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1710 d254398b-089b-4085-b44b-4e22fc3d1a5e)");
unit.assert_eq16(16'h04E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1710 eed7eb46-298c-40a6-af38-25ea3bdebc7b)");
unit.assert_eq16(16'h04E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1710 0d07e12a-11c2-447f-8ea4-cc29eabf617b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1710 24703a5f-783e-4289-9913-40d986e3be60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1710 77b7efdb-7eb0-4d1e-8dc9-c0121f9a359f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1710 fab2692b-6a2a-4fda-b3f6-adcd26169cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1710 ffc72480-afda-48e2-844f-e4d974b0d2a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1710 815f820c-50cc-4145-b727-cb8cfa0a2515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1710 c29929d7-0d19-4739-8433-8b83ddc4797d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h21FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1711)");
    end
end

unit.assert_eq16(16'h0BE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1711 7a2a283c-3498-412e-910e-04fbf5821543)");
unit.assert_eq16(16'hCA2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1711 fee9f527-d08d-49e9-8d0f-2c86623f7f30)");
unit.assert_eq16(16'hCA2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1711 36fa12d0-dc4c-4acd-aa3f-52900a88b505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1711 e38ffcae-0798-4bda-a339-1e7a636da5d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1711 626bda9a-b30b-4395-b0de-ac220801a8d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1711 6dea1cd4-9880-4b00-bf40-76026327f89b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1711 d4d3e0cd-3999-4bf9-88c0-4af908a19beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1711 b21187bb-2f30-4d5b-b61d-0fa28c2b2c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1711 c71cd304-0a94-4aeb-82a9-d07702eda45f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2C64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1F65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC291;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1712)");
    end
end

unit.assert_eq16(16'h2C64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1712 ad45a840-e3ee-4c7a-a44b-18241c67d335)");
unit.assert_eq16(16'h1F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1712 d8e556f5-c668-4897-abe3-f7375e349230)");
unit.assert_eq16(16'h1F65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1712 02288889-fc9d-48ba-b885-af6080741e8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1712 43c0c51b-eb69-4b0e-9f11-5c3b41e99acd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1712 64109e15-4156-4127-8b04-fad1eca69a7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1712 9dfed9e9-d0f2-4bd8-bb47-dedb42e3f495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1712 49b18108-582d-4b89-bdc1-78ae7f7b13cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1712 9b2f517b-c2b6-44f2-97dc-10c260ef42d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1712 6916ae7f-de54-403c-b723-1a644e2204d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hADBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h236C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7CCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1713)");
    end
end

unit.assert_eq16(16'hADBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1713 431081a5-ae3a-48a1-a6e9-d8fe5b9df6d1)");
unit.assert_eq16(16'h236C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1713 b2572d78-3cb0-4015-a91c-4b020b2b42de)");
unit.assert_eq16(16'h236C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1713 945c7eb5-d14b-46f7-843b-7b179dffd15b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1713 771b1e81-f1e8-427d-98e6-b4e039a6c715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1713 8b36364a-29ab-4467-ac53-1a60ee2f3115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1713 01c23a77-56da-45e0-80b5-d60ff920a4bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1713 d528cce5-0ad1-4a3c-8585-c898f7d91538)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1713 10b08e13-506c-42e2-8ed4-e4729fd4985d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1713 f15fb9ec-6fc0-48b1-86fc-be72e69b6642)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC990;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF67A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC5CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1714)");
    end
end

unit.assert_eq16(16'hC990, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1714 65f9aae3-0d42-4587-b589-25f6308c3312)");
unit.assert_eq16(16'hF67A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1714 5faa5690-6fdd-4993-ad44-0e0ee20c5e14)");
unit.assert_eq16(16'hF67A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1714 77df7f39-15ca-403f-9b44-41eb02a734bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1714 093a2f51-c679-4ce5-bac1-cb8f7cf57d8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1714 5d272687-6a8b-40bc-ab6e-e4e2fba9d1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1714 4037059d-4310-476e-a313-cfe4b1dc4189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1714 822da4cd-9827-4d49-b88f-2fb5a8dfee65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1714 5223e1aa-9f2b-4145-8af0-6db44261eaa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1714 d753ccdb-3b30-4e41-a6bc-5ab1bbf9781e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h78E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h19B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEAFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1715)");
    end
end

unit.assert_eq16(16'h78E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1715 5a9f9970-9a60-4b6e-a9cd-e94c19adfb1d)");
unit.assert_eq16(16'h19B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1715 5abe84d9-e8ab-4e28-b370-164e25559acd)");
unit.assert_eq16(16'h19B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1715 dbdc8a07-5ed6-4225-90a7-ea4c1aa1288e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1715 b96089ae-6c82-49b7-910f-26112e648969)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1715 3c8cd5a2-4a75-4364-b659-781ab42f62d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1715 c44536ad-4c46-4f84-955b-1e764d7a7b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1715 fc96ceab-7ad0-4b86-a23a-7eaf8ba57411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1715 fdaa6623-25c8-4318-b18f-d811f384fcd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1715 fd2b6fbb-8a5c-495c-a5d9-7df4844dc056)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC560;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h680D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD495;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1716)");
    end
end

unit.assert_eq16(16'hC560, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1716 a627150c-6402-41f4-8d12-81b3bf345e11)");
unit.assert_eq16(16'h680D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1716 26c9d03f-7813-474f-a31b-6aeaecd22ce6)");
unit.assert_eq16(16'h680D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1716 8f060490-f8a0-43e7-ba62-45c6e420b0e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1716 4e12feb6-0eb8-4bbd-b171-296e542a2eff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1716 356c3edf-e5f6-46c8-990e-ac1f770a95bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1716 e2ef9645-5620-4715-9802-2fac3b1d335b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1716 adacbc4c-80ad-4c21-8d4c-1b55f8fb19ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1716 e13c36cc-a620-45c2-9d5a-ee1e9bef9c21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1716 bb07ba11-add6-4d1b-8573-ab5d350fb0a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1EEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h08D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1717)");
    end
end

unit.assert_eq16(16'h1EEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1717 d7b5df7e-543c-414e-be42-aca5c7bf07bd)");
unit.assert_eq16(16'h08D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1717 3b843c0a-3a41-41ee-9176-b8d687dcacdc)");
unit.assert_eq16(16'h08D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1717 15a008c1-e381-4732-be58-bf636c58b76d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1717 fbd4459a-9920-48bc-9308-bf0aaf2d9e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1717 5531bec1-b219-4c33-98a6-73d0664490ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1717 4fd69614-af43-468c-bafe-db2c6c874fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1717 16150a39-27ec-423f-b9e9-7f4fa38091a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1717 e4698d48-d3a4-4c11-9fe3-97369989a02f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1717 b9c300fb-cb4b-4a6e-bf94-fdb4f69fd272)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCB9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9646;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF462;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1718)");
    end
end

unit.assert_eq16(16'hCB9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1718 36147a65-0124-4c46-8cc3-a3453833f94f)");
unit.assert_eq16(16'h9646, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1718 981e2a53-2e70-4a5f-9c5f-be6c36853ea8)");
unit.assert_eq16(16'h9646, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1718 83059fd2-6ada-41d9-bdd4-0c2b897c5ff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1718 ef803545-2f82-4f4f-a0f4-151c5450f701)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1718 fcd808ea-00d2-4b2f-a6b5-d47ebe98eaf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1718 90eb26b4-a222-4295-8459-06a9cd53fe53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1718 b640fd04-1829-48f7-abf1-02cecd6adb1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1718 24cddf86-a302-4987-bf19-c94ad649a89f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1718 82d5b5c1-f88f-4b37-bf62-bdeaa152407e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5931;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8B15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1719)");
    end
end

unit.assert_eq16(16'h05CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1719 360bd0e6-276c-4c89-8c91-f7223d638f2d)");
unit.assert_eq16(16'h5931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1719 b6745442-54e7-4dc4-9a99-be58e7be7439)");
unit.assert_eq16(16'h5931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1719 99ac79de-28e0-4ff0-8961-7b4b0c055dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1719 170259f2-b706-4d0e-a949-78ede5029916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1719 b99be2a8-07bb-48f0-90f6-2e9bbbf9edff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1719 5cc04c85-6d37-45fc-9695-a78e85d888f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1719 99f39770-25b3-4fba-b125-cc2e0efe29a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1719 fdcec797-3806-480a-93b8-32db359effde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1719 076d9b09-a1fd-4756-91c5-ccbd65ab11d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC5D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3149;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1720)");
    end
end

unit.assert_eq16(16'hD5B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1720 a02f6409-fb90-4230-b509-8014fadb0119)");
unit.assert_eq16(16'hC5D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1720 0fe9610a-216f-4834-bdc6-1f0a92261d9a)");
unit.assert_eq16(16'hC5D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1720 62a11668-4212-4f51-9b68-8e6e885c5020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1720 2800c4b9-3385-4e7a-843e-302be408199a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1720 6dcefbeb-4c85-4052-8d52-647bc0163ae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1720 eee4b6ef-be9b-4643-a4e7-61cac6f0d3b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1720 f23c2ab0-8137-400a-ba8b-2b6cd4925092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1720 dd1b0101-e680-4a5c-a6ac-ee13987309ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1720 4d222292-8cd9-45eb-a955-216ae083c250)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8157;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDCB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1721)");
    end
end

unit.assert_eq16(16'hCE55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1721 2fd62f85-ee0c-4e51-88e8-35797dc9e564)");
unit.assert_eq16(16'h8157, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1721 42d027c1-8425-4e96-9b06-564f91490199)");
unit.assert_eq16(16'h8157, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1721 47b94598-e210-4832-89b5-570808cca815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1721 55d88c90-09f8-4b93-80bb-7b55c977633b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1721 838f063d-d22b-4b9a-b275-85146fef309f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1721 7f458e93-fbcf-40d4-a9e5-04f2aeff79d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1721 6fb279aa-b124-4853-841d-0dd64e297ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1721 b937fa46-047b-4c69-a930-5bffe453df57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1721 f8e06ad0-5b19-4bbe-a9af-0bbf8d656792)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC58C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA4F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1722)");
    end
end

unit.assert_eq16(16'hC58C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1722 4c60f8ed-848f-46f8-8183-e49daf2c6f9d)");
unit.assert_eq16(16'hA4F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1722 f3dfb28a-6693-4f7c-b910-46363f3fe5f9)");
unit.assert_eq16(16'hA4F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1722 f695499b-dd59-48d9-b8c4-ab9978ff95a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1722 95ec8784-6d48-404d-8aef-d2ddc9ef18da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1722 e1264fe5-9032-4619-a1df-2e1bd57e3471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1722 aab24914-9628-4fd5-acbf-2c6bab71a667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1722 82c05bea-0465-4c46-acb6-71bc2c1498b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1722 96c77a57-72cd-44c0-9159-ed18c3cc7cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1722 a5914459-a3c5-4e25-bf33-052c0503d547)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4AF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h092A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1723)");
    end
end

unit.assert_eq16(16'h0C5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1723 fa65d7a0-8f11-4a9e-bb0a-f43b4d9ae1fc)");
unit.assert_eq16(16'h4AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1723 10267c71-a285-40e6-aed4-423a81f33581)");
unit.assert_eq16(16'h4AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1723 383c7503-7c58-4e4d-aa0c-33985de1bfc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1723 4f454367-fc90-4cde-9ca3-a401781e84a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1723 cdced035-225c-4b2e-b201-00dce591fc76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1723 ef74e5f6-588c-40ab-b039-324b93da60f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1723 b189c764-1ff5-4fa1-8ad2-204aedf39af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1723 208ba444-0f08-49e7-a886-ecb621cf32b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1723 d8f8514a-ec35-4e2b-ada7-63c5f2c18c45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h64D1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE27B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1724)");
    end
end

unit.assert_eq16(16'h64D1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1724 9d43703e-28c2-4cd5-8721-655cd2c7ab0c)");
unit.assert_eq16(16'hEC94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1724 f2186b70-298e-4d5a-bd0c-51ee59a63974)");
unit.assert_eq16(16'hEC94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1724 a7047584-a388-482c-b51e-76363c20d349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1724 48d9967f-4ead-4ce6-a67b-36d2294e1af1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1724 78513e39-0db7-4974-bebb-26be737b8d38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1724 5d2cfa98-2e19-4810-8807-7f76f5b0bc8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1724 f343ef77-f2ad-450f-981a-3b413c901605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1724 ea689199-b8ad-4099-9487-55532eddda00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1724 2a876d7a-bd1d-4dca-bbf9-7e92e8208e42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5DD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC851;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2517;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1725)");
    end
end

unit.assert_eq16(16'h5DD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1725 9b3dfcc6-e53a-49ce-b86a-10a68c7e2528)");
unit.assert_eq16(16'hC851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1725 db45e227-560c-4efc-8b77-c8b9c9116be1)");
unit.assert_eq16(16'hC851, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1725 877e33ac-23c8-4d30-89b3-38a00f870337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1725 11284afa-7e19-4837-9ea6-a8b4a116c57b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1725 b5ef149f-e3ad-4c36-9af7-eacd505f11fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1725 b4c19111-abea-4b7d-9920-eea765ae382c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1725 a00d2faf-f2df-480f-a358-7266cd89d2ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1725 d8d5916d-ff21-4a16-99a7-e9b0253723ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1725 8ac8bd1e-b0b0-4764-b2c0-80dcb212885f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF2AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6482;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE9C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1726)");
    end
end

unit.assert_eq16(16'hF2AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1726 8cf12bda-f96b-446a-86d3-8c3fd03e0de8)");
unit.assert_eq16(16'h6482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1726 0a90cd0a-70be-4bb7-91ce-cfb14a8072f3)");
unit.assert_eq16(16'h6482, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1726 ad6121d2-aa62-4916-8d7f-5330f339ba47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1726 90fa50b3-d23f-4f18-8eff-ed4ed051a4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1726 1c45f60e-2e6b-43e5-810a-dfa9ba369539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1726 327089b0-8502-4a92-8fa7-b267e3285f58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1726 8d4f55a8-9cbb-4cdb-a5a8-7b9465cb3fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1726 27428eb3-9058-4c12-a34e-4afc6644620e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1726 0aa59f60-6b57-43e7-8476-064b13467164)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2146;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h448F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2706;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1727)");
    end
end

unit.assert_eq16(16'h2146, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1727 8d797659-8566-43df-9eea-655ab8419468)");
unit.assert_eq16(16'h448F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1727 238a724f-7f56-416e-b39a-e50b12655842)");
unit.assert_eq16(16'h448F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1727 a187acaa-5275-4311-934e-151a09d356ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1727 b9f15e7a-c6a0-4d8a-af38-d916130c080e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1727 321702d0-6db5-4d13-b3a9-a896296c13d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1727 b515b6ef-9d9f-47eb-af7c-cb3a3d841211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1727 acd63257-22fa-46af-8d71-5e88c36c8cb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1727 dfe50b70-7e28-4553-b3a6-05da0a700759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1727 eea03044-cbf9-42d0-92e1-6b8efcf79712)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7880;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF67F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE733;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1728)");
    end
end

unit.assert_eq16(16'h7880, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1728 747dc712-12b9-472d-848b-04809aa708b2)");
unit.assert_eq16(16'hF67F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1728 b3f90422-d3c8-4ab5-be5b-c38251531b0d)");
unit.assert_eq16(16'hF67F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1728 eaa482ee-1c43-43a7-b8dd-036234959269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1728 9d1f9ca8-b2e8-4671-af26-e6405e69777f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1728 d3fd0fec-0927-4573-a023-d5fc6a2451ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1728 f4fc342b-8c89-419b-8c38-6a6a97b08d70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1728 4b78566d-377e-4fd8-b19c-734924f6a210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1728 d96b8fc2-f3de-41bf-a2ac-31b1781f47a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1728 0af60e15-d833-4f7b-97f6-d430f971c68a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA213;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h149B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDBEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1729)");
    end
end

unit.assert_eq16(16'hA213, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1729 3443c0f9-2374-46ee-bea1-66bc3bd54c40)");
unit.assert_eq16(16'h149B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1729 34dd8a3a-84d1-4a5c-962b-600111997148)");
unit.assert_eq16(16'h149B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1729 1b3474d2-77c9-40aa-a146-a4aea19950d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1729 1d3161b1-d5ff-4e06-a189-c4e34e9e3f42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1729 0b952b15-22e1-4a9b-a792-d0f8f8c8a6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1729 ddbb42f1-ba65-4f1c-b33a-e6a6a00f4f15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1729 91f5f6f0-85b3-43d5-a585-7ed3d542317b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1729 03cfa80d-9c8c-43ff-8170-4a9bcbd42964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1729 1c5dffa6-bc17-4053-866a-10cc67f40be8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h26F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF2B2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF087;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1730)");
    end
end

unit.assert_eq16(16'h26F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1730 cc7e7dc0-4649-418d-80c2-22a6246dd641)");
unit.assert_eq16(16'hF2B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1730 e4868a5f-b66e-4aa8-848a-5046c7132f73)");
unit.assert_eq16(16'hF2B2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1730 c44cd3b4-5226-4706-b0a6-1d56a947e0fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1730 33da9cdd-4f6a-4d0a-b8ce-b04918d1fb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1730 e8cf7c65-a681-42cf-9c3e-611d62788957)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1730 51f6d101-e38a-47e4-bbc7-75ed908b3317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1730 9ea689df-45e2-490e-b001-3fab1f2d8347)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1730 33f46887-2ff9-4ad2-ae22-b44b92bad69a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1730 23b92e51-51c8-46c9-beca-f735470a5b06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA303;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h376C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h99EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1731)");
    end
end

unit.assert_eq16(16'hA303, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1731 fe21d036-3609-4413-b573-a54bb9bb4d83)");
unit.assert_eq16(16'h376C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1731 6162d7a8-33ee-4928-ba2a-8bb126984422)");
unit.assert_eq16(16'h376C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1731 89ea3f49-259b-4a3a-b49e-5bf8ac3d39bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1731 8d1d35c4-488d-4f62-81da-f0004a720720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1731 8f1e84c9-b3ab-41b6-8adb-08e565108586)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1731 401eac20-c981-409a-9198-19de3af1c545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1731 738561f1-b768-47b9-82ca-6c8052021c7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1731 6c861f5f-d2cf-429d-806c-1643f4d92148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1731 63c6c402-53b9-4a18-a691-d42fa399eb30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9F76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1E0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1732)");
    end
end

unit.assert_eq16(16'h9F76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1732 3f08d0e1-7b8e-470b-b945-89e12aaedf2d)");
unit.assert_eq16(16'hBB88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1732 536a1c08-5502-41e4-b948-5408a5026634)");
unit.assert_eq16(16'hBB88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1732 8459d61c-8252-43cd-9653-40f738cf5126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1732 a325d641-d175-4b5e-a325-a4e6268ae878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1732 31427788-2da2-4d65-844e-21a0e6e6cf68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1732 bda5e1e3-530a-4719-9144-6ccc1a554c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1732 2c7c5bff-c8c5-4588-ab04-e4ca8d0657c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1732 cfba4714-668d-4577-a6e9-fb7e48047f81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1732 1c5bcc6d-5527-463d-84ca-65f1354ea6c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hECCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1733)");
    end
end

unit.assert_eq16(16'h75C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1733 d0bbafbb-4bda-4239-a9b7-5370569559b0)");
unit.assert_eq16(16'h0BA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1733 188359c4-ba3e-4589-9c5b-39fb507f3e83)");
unit.assert_eq16(16'h0BA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1733 5086654a-a5b4-44b5-b199-9d90154fec20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1733 3b019d0c-f5b1-4289-99b3-1d396b596312)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1733 52dbd22c-a49b-4a4c-9e6a-5c4e13f27d18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1733 015f152d-763a-4dc3-97de-5e538ac2d151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1733 53045a5d-03fb-47c8-baf5-b83c44c196b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1733 5b4317b9-15d3-44e8-a3c8-6aa863994575)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1733 0db22720-7b8a-4f0e-bcb4-2cf90b8e6a88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDFC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4BD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF312;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1734)");
    end
end

unit.assert_eq16(16'hDFC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1734 a42d1064-56c7-4f18-9391-82830c4f4e04)");
unit.assert_eq16(16'h4BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1734 cf0aa42f-1786-40e8-bbf2-c5dace375a84)");
unit.assert_eq16(16'h4BD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1734 2433f7f9-b3b3-454f-8fc7-42de3f7af313)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1734 bbd948c3-5bfe-49b9-80a7-159bf32067a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1734 e9835933-cf5a-41e8-91d9-ad9322356337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1734 6f6d00ad-ff26-421f-b07a-ae4ed77cff60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1734 db99fc88-21c0-458f-9a7f-2056c2e7197c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1734 9606c4e3-7a87-4902-a691-12fa8cb332c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1734 f0fc1ba2-7bad-4507-baa0-1bf5c4f36d6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h934C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA966;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE18E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1735)");
    end
end

unit.assert_eq16(16'h934C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1735 19d30d06-dd64-486c-be4b-819155dbb5ed)");
unit.assert_eq16(16'hA966, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1735 dd7711bf-a80f-4431-b27f-5ac2c949b209)");
unit.assert_eq16(16'hA966, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1735 67b0e064-4432-42fd-b304-bbee8d9d898e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1735 e5bc9f95-e8ec-4f09-a856-e22ac33ea01b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1735 868f9cbe-0d5a-4165-a738-3ee3f6b85041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1735 7cb4ea33-b8af-4bc6-96a3-e6c0794f09c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1735 2fe3007c-34dd-40ab-b3fb-773b110a9c34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1735 5fe88dbe-1316-4489-b972-34059a3aa23f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1735 7002b1ff-36c1-4529-a98f-85c98d016db8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h133F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0D73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1736)");
    end
end

unit.assert_eq16(16'h2B1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1736 d4ee288b-271b-4815-8b9c-692b4d6d7da1)");
unit.assert_eq16(16'h133F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1736 4205d942-4227-478f-b75d-d12e32b39ed4)");
unit.assert_eq16(16'h133F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1736 4e76cfc6-a4ff-4852-8c4b-d9790db2d9fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1736 6186d2cf-806f-49ad-b97e-8f1f7fade38b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1736 aa9b2769-bd33-4ce5-b621-4c41539e5e2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1736 66dbe98e-4dd0-48da-b591-26871f4119a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1736 a76f8393-2159-40e3-8270-eebca0c772b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1736 87720436-f490-4017-84a6-787d2feb1517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1736 21c644f9-d40f-48fd-a8f4-0639407250cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h67D3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF506;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7272;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1737)");
    end
end

unit.assert_eq16(16'h67D3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1737 0530f541-ee25-4f9e-8fdb-30b000356e14)");
unit.assert_eq16(16'hF506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1737 72d8ab37-740b-4c5d-a526-c6351c177b4b)");
unit.assert_eq16(16'hF506, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1737 6226f0d1-9877-449e-a635-31f8da67d298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1737 45288234-5c79-4a24-9269-5e1982cafdac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1737 473ae14c-d483-4a67-b9ae-0d860a3c21ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1737 946f0446-2c61-4ea8-b2f6-12659dbba737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1737 c33bb929-a46b-425e-8d26-0353cc6e2e82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1737 72e8de38-da68-48bd-8dc5-029ca697e21f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1737 1658f2fc-e563-49ce-9814-26f3416154a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD43E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD45E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC281;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1738)");
    end
end

unit.assert_eq16(16'hD43E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1738 7422d4ea-da53-4a73-8fb3-760c7011a0e7)");
unit.assert_eq16(16'hD45E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1738 ceec9521-bf4b-4334-ae80-06f5a8371f0c)");
unit.assert_eq16(16'hD45E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1738 0794ac8e-1a2a-46dd-a6d2-4915562cc989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1738 cd31f128-07a7-41b1-aaa9-cfead346eda4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1738 f0574ca2-8f21-4434-aae1-91e974231dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1738 0af37112-9c8e-4261-9e41-7e81ab3d0868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1738 b33ccf7f-fe92-4596-8450-2a5c5aebc4a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1738 b8607fc1-20da-4ee2-99a7-0f4607cdf524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1738 36955f3b-5684-402e-a278-705c9265a46a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2631;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0529;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1739)");
    end
end

unit.assert_eq16(16'h2631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1739 a15c0f85-afcb-44ff-a144-61099e3bb24a)");
unit.assert_eq16(16'hD1BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1739 1cd9432e-43e0-4a24-99ef-bdb61bde0cbd)");
unit.assert_eq16(16'hD1BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1739 6cb33ad9-0931-4935-ab32-930b42430fa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1739 35dcbede-272a-482f-ad4a-88d98d71d583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1739 0f5489c8-fc32-4bca-8647-a7758229f91f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1739 e7ce3330-8cb8-4ed1-8df6-eb813d98498d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1739 ba887aa6-38ec-4d49-8bcb-af4f97630727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1739 23db1fd9-0161-44dc-9f0b-768d130d1058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1739 54e64733-42e5-4b24-ab6f-dc96f8acd562)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4C7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h294B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3763;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1740)");
    end
end

unit.assert_eq16(16'h4C7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1740 ddbacfe0-23a3-46ae-ac77-d4643bc6a3e0)");
unit.assert_eq16(16'h294B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1740 0f049a13-619f-423a-a3a1-d3e437faee0c)");
unit.assert_eq16(16'h294B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1740 f4e3928c-ac2e-4619-afc3-a11b8bafcd08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1740 e5c0a712-99a5-4e9f-8715-4d6b4949e0b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1740 72cf2512-d59b-40c2-be48-428a33056513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1740 e91b9a2b-a544-407b-a3bf-08a63810bb12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1740 37a79e47-0a47-4959-b53c-2855d662615c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1740 0ee31fdf-1572-40c5-b423-f55591374ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1740 e606f231-940f-4a58-b184-e85e7548bc6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3195;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD7DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1741)");
    end
end

unit.assert_eq16(16'h3195, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1741 80b6574e-fd57-4b61-b3fe-9ab56569e2b5)");
unit.assert_eq16(16'hCA95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1741 effe73cd-f942-4fc0-84d0-3876ef0dcdec)");
unit.assert_eq16(16'hCA95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1741 cb79f6b9-77ca-4a52-8ba5-ce39bd9af686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1741 14134292-5919-4e32-b47e-48bcbf4c322a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1741 9657780c-3245-4d37-b58d-510a8363341d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1741 df51db79-fd7e-4404-8a2d-1624bf9af352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1741 30114c12-a0d5-410c-9f15-61da560f668b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1741 68502e33-8626-4a35-bc26-993f3a31df39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1741 9e07852b-8c14-4735-be40-99d4cf555d57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h707F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8EA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1742)");
    end
end

unit.assert_eq16(16'h707F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1742 0f6f9c91-01da-41c8-b0b7-b4fb2c2f9cfe)");
unit.assert_eq16(16'h8D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1742 9a8504ae-edbb-4d4d-ae79-7a28ad4e2aa3)");
unit.assert_eq16(16'h8D4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1742 6dd1a3e3-0af2-4f2e-86e5-325ce544d618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1742 eea318d9-9007-4a15-89b8-40aa8776098a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1742 e0830f63-c52b-43e6-b660-c4fed1eb9d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1742 18ecae7d-1e60-4629-baf0-3cb7be5cebb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1742 cc26a3f7-8041-4447-a908-a64bad9a07c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1742 b9f3cb3b-cce7-4fd3-b032-5ee7e68a6c4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1742 e07d16e4-081c-4027-a25b-600c70991d1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h00DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h919D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h817A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1743)");
    end
end

unit.assert_eq16(16'h00DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1743 18e4d99f-77d0-4d2c-93f3-2dc4078a3630)");
unit.assert_eq16(16'h919D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1743 94e14430-0abd-44be-b82c-70928fbc70f5)");
unit.assert_eq16(16'h919D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1743 0c4cc307-032c-44c2-9232-4a00bced105b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1743 969ecec1-f0b5-4bd2-bb9b-4166ca94b880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1743 b04d7a09-f76b-453b-b2a9-6924434c07a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1743 589a8c07-508d-4a49-9f0c-ea2741a8f644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1743 b0344e69-780e-4ac9-8cb7-fcda94ca7489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1743 b4480ce5-2dc4-4da5-89c1-6d9130f83a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1743 6611325f-76db-4fed-aa8c-e3a84508dbff)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2B73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1744)");
    end
end

unit.assert_eq16(16'h2B73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1744 040a9d70-f064-4c34-9d20-a62e03290002)");
unit.assert_eq16(16'hFDF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1744 dd75f231-0ee6-4636-85a3-9a0920b8bd8d)");
unit.assert_eq16(16'hFDF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1744 254270e6-011e-4ffd-b9fd-14cf0923de62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1744 c05c1797-e54b-42c4-b3b1-2855ee8e61bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1744 374885c5-c241-4e22-b03b-1ed58090e76b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1744 7d1a86ef-757a-45c1-a4d9-c115867ad027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1744 25e9d202-d931-4604-ae31-0841724e0917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1744 259ece8d-f03b-4bd5-8ac8-0506a5e35b44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1744 01715a8e-4022-48f7-badf-0c815f403709)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDF8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2648;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA1B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1745)");
    end
end

unit.assert_eq16(16'hDF8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1745 8bbbded0-9de9-44cd-bf93-e9aaa428515d)");
unit.assert_eq16(16'h2648, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1745 8ee7c042-c053-4eea-8045-bdbc11e64578)");
unit.assert_eq16(16'h2648, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1745 939abc62-235d-4eff-b2a5-3d8c03862594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1745 04fa0211-7ed8-4fc8-b5fe-24849270f92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1745 6cf0a835-3441-4d73-8d04-99560d7499f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1745 5ee3a69a-b11f-4934-8292-9f1053e0caff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1745 dd2db280-14db-43a0-9378-81b88cc2b0a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1745 805eee56-6f35-4566-981a-c8e32f30260f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1745 746c93b5-9b2d-4f4b-96bf-92422910f20d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4753;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF5F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD501;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1746)");
    end
end

unit.assert_eq16(16'h4753, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1746 8197f70f-3467-432c-b9ee-69d259c2a19c)");
unit.assert_eq16(16'hF5F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1746 88a54a1d-7b52-4b34-ae0b-157d05c5a6d3)");
unit.assert_eq16(16'hF5F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1746 2796e71c-6cf6-4a7b-8ba8-37fa845dd895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1746 34b91dfb-38aa-43a7-85ee-5e084e95b987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1746 fcc2754c-7a50-4382-8961-ad6eedab3a5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1746 c7f3ce6e-6ed1-4f6e-b85d-16820d3f5104)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1746 9b577873-c1b2-4f43-9d64-ca7076563abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1746 5cab4696-5791-464b-92c0-48939bfd8d1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1746 e099aa58-571b-4695-8852-e57cfcef8c73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF476;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h63AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3B7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1747)");
    end
end

unit.assert_eq16(16'hF476, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1747 c15ca8c6-c557-4ffd-917a-727177a47de8)");
unit.assert_eq16(16'h63AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1747 0a13d5ae-cda3-4985-b07d-3e29bd40d78a)");
unit.assert_eq16(16'h63AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1747 7871a664-94a6-4f5b-acb5-48629a9473cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1747 1b9e862b-97ea-470d-815e-164e46228868)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1747 3a715b14-29b5-410e-bd71-580b2d056328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1747 04133db4-8921-4e52-a77f-13f67c37bdf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1747 4e384b12-60b8-473b-bc9e-a8ab2e420554)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1747 3b44fdaa-82f3-4bd6-985d-4d7486d97686)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1747 7c2d01b0-9e53-4306-aae2-9113d0c211b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1210;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3AF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6108;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1748)");
    end
end

unit.assert_eq16(16'h1210, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1748 5ae6c484-b4d9-42b5-b476-a9574ca60e91)");
unit.assert_eq16(16'hB3AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1748 e9386d57-155b-48cc-b2e4-16bd5a29655c)");
unit.assert_eq16(16'hB3AF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1748 f10dc7fc-250b-47b3-ac87-6d22632e2c55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1748 819f0a88-6dd3-4e0f-9444-1ce142acb3c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1748 a9184c42-68c4-4f04-8d56-68a7e0c4ef47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1748 4520f22a-6368-46b7-8701-0dcec42940d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1748 cb890029-1fa9-4268-8789-05bcb682624d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1748 0d3a26cc-a7f5-48e1-b5c3-1bfb3cbabab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1748 c9f4b033-2f6b-4208-af20-cb2deb1b58ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0424;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4DD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5AEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1749)");
    end
end

unit.assert_eq16(16'h0424, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1749 e9f65e40-89bd-4a90-9d51-77df0ef79319)");
unit.assert_eq16(16'h4DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1749 7c4efeb8-2519-40fd-b9c4-e5d474fad5b0)");
unit.assert_eq16(16'h4DD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1749 29e8c80d-cda2-40cd-8eaf-44c2787016bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1749 31e12050-fe06-47f7-aeaa-b0cbaa39421e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1749 85ef7138-6972-4710-987c-2cb665616bfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1749 290d7153-2dd8-4f3e-b025-f7aa4dd52010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1749 448968db-d223-4b09-b7e2-fd4a27462a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1749 f8db68ec-1cd9-4e4b-8951-addbd4b04b71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1749 2ca77300-571c-4f93-bd74-7da7ada6de3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4D86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h29A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1750)");
    end
end

unit.assert_eq16(16'h4D86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1750 6c6fc13d-7b19-4b27-aa95-00784dd3962c)");
unit.assert_eq16(16'h29A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1750 9ed42ec5-e9dd-48f5-ae46-9303954b3d93)");
unit.assert_eq16(16'h29A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1750 51464061-5ee4-4f06-a252-a0d673f89b39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1750 8b53d908-c9b3-4af5-a0e5-c60b9b3fd1b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1750 190db93f-a429-49b3-b691-3c03d43e1c31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1750 147879f4-bc2e-4b9e-ad28-7fe1258f02a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1750 4a758feb-d62a-4f4f-afe0-bb9b1b994115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1750 ff1076b5-db36-48db-be18-355271d943b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1750 291550d8-a810-4d94-afe8-579ec20f12fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h13E8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9984;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4529;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1751)");
    end
end

unit.assert_eq16(16'h13E8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1751 ea73c3d7-72de-4d35-b6d1-cea0e7a39e54)");
unit.assert_eq16(16'h9984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1751 0816f5c1-0155-4208-912b-fe145495c594)");
unit.assert_eq16(16'h9984, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1751 3cc3b76f-8c2b-49e9-aee0-20cc9f548207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1751 85a5637f-d3f6-4044-8ec0-a00d40960767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1751 abdc5b6e-cc9e-408b-81db-3d5ef676a30d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1751 3779c8ba-043a-4ba1-a47f-5dae8f997647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1751 5fd190a4-590f-404c-9752-8d28c459b417)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1751 d51bac25-b225-4553-a9e0-b0e0c4765fad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1751 2597e6e1-a740-4303-866f-41165130d705)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h88EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4F6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1410;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1752)");
    end
end

unit.assert_eq16(16'h88EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1752 6c8124c8-afa9-464c-b6b4-b387f13416c7)");
unit.assert_eq16(16'h4F6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1752 ec298c1b-b840-41c7-a2be-2ad6ef20a0ff)");
unit.assert_eq16(16'h4F6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1752 3ab8ee0b-e9c8-4fae-8f3d-e868dc1f3407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1752 ee4f1a17-bf06-4ac0-ac0d-98575282bc8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1752 ae17f6a5-6032-490d-9e4f-3d94ac8eaf13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1752 20119c95-d101-4839-a383-9dc45bd47b5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1752 ddf1f8f9-ff1f-4b59-89d9-6acf21b2feca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1752 12a32524-6f25-4cbf-953f-1f340a07baaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1752 622cf994-ff06-494d-b6ed-254ee7bdd333)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2BE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h95F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3091;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1753)");
    end
end

unit.assert_eq16(16'h2BE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1753 dca5e208-6ca3-4ee4-a8f5-822e019641ac)");
unit.assert_eq16(16'h95F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1753 47aa4643-fddd-46c4-8cf5-b465dc625cf4)");
unit.assert_eq16(16'h95F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1753 a5398492-beab-401e-9797-6cea5962d047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1753 07021f02-4e98-40c4-af4a-fe98e1fdc927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1753 203bd4ca-bd5b-4e71-a39d-8ea8b3d84a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1753 80652242-af06-4875-a824-14df866216ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1753 a3e391b2-529d-40f6-bc07-baa9285934e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1753 b2e0b4bf-bcda-4fad-9c63-6d42b88d14af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1753 63e2ba99-f23b-451a-9450-fbe4cb6927bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE428;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0562;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1754)");
    end
end

unit.assert_eq16(16'hE428, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1754 666b7c63-dbde-466b-a5de-ad0251272f9d)");
unit.assert_eq16(16'h0562, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1754 c6a323ae-52f4-43a2-89ce-4f749cd89109)");
unit.assert_eq16(16'h0562, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1754 023ae781-50a5-4e75-af0b-7178e341a08e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1754 ec9525f4-ef93-4dc4-849d-830c636d06ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1754 9f937fe7-80d7-4351-aa5d-42fe0e1e2833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1754 ffb4237b-5446-4961-8c6c-7c3d1ed974b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1754 f4717a8b-70db-4e49-a10d-a30da2659a99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1754 961c81e6-f475-4196-82c3-2a783f6b8565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1754 efcfc159-ae84-4065-bb2d-f7c0dc25ed97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE10A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD82D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD733;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1755)");
    end
end

unit.assert_eq16(16'hE10A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1755 682d59fe-55fb-4e02-aef6-eacc45df5ad0)");
unit.assert_eq16(16'hD82D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1755 7dad2810-3bca-47b9-84ee-6c3b9912eb96)");
unit.assert_eq16(16'hD82D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1755 63ae7e04-b654-4acf-84e1-930e5d3f6ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1755 8ae853f8-1158-4ac9-b518-b199cd9db293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1755 3bdb95fa-59ab-42a0-999e-1f233057b1eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1755 b578d9af-041f-482b-a76b-0910d38248e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1755 775143d6-53d6-4b59-ae6b-2ff34f88d6d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1755 d327d437-9460-4ce9-b25f-3520f6e16cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1755 12dae83f-27a7-4c6b-927a-10f526641000)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h19AE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h887B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1756)");
    end
end

unit.assert_eq16(16'h19AE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1756 a31283da-1287-4540-805b-fb0c6e91f144)");
unit.assert_eq16(16'h887B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1756 8be937cf-9fb8-4040-91d3-a246b7ee8c45)");
unit.assert_eq16(16'h887B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1756 1a8da6ef-e4ed-47cc-8740-4c39bf0134e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1756 7b3cae5c-a6cc-4c81-85c1-3ddf26b03dea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1756 39bdd51f-be17-471c-a1ff-c161d3e406eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1756 c22cb4ee-76f8-494f-94e2-6895dfb51397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1756 465d421a-8d27-472f-9212-1259e504395b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1756 10733b89-ade5-4d92-9d81-0be5a83e1c89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1756 42f85a7e-8e58-46a9-bd22-ff38c4b988e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0EA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1B5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1757)");
    end
end

unit.assert_eq16(16'h6A18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1757 e22c9e12-8e6f-4d9c-8924-d1231095aa03)");
unit.assert_eq16(16'h0EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1757 778bee47-464a-433d-aecc-9f42a0cd9682)");
unit.assert_eq16(16'h0EA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1757 661fb501-c955-4971-853e-2c972d89ad58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1757 e023a033-5310-41a8-8f6a-be023cb822a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1757 dd165111-d600-4ca6-b285-6e7dc10e9a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1757 78bfef8c-15a8-4550-92d1-d91bbd7ebe18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1757 72feb2e4-39fe-4b25-ac8c-50e99c1dfe99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1757 3bf4b45b-c43c-4a2e-b507-de1f5fd0d74c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1757 3f71d345-91b8-44e6-b04f-35fb840c672e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC4F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1284;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1758)");
    end
end

unit.assert_eq16(16'hC4F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1758 7284efa9-fa4e-4f25-b928-fef87164695a)");
unit.assert_eq16(16'h61C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1758 a3674378-502b-423e-8de1-3b5e8a1e011d)");
unit.assert_eq16(16'h61C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1758 33952ff2-13dd-4912-be2f-b6013854411d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1758 a395f4d4-eb7a-4052-9924-fceb18476df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1758 b70bd3e9-0d08-4981-8824-90f323b30049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1758 933896fa-2faa-42ea-a18f-cecf3a629b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1758 4d8e770e-36e5-48b4-9e2f-0f1553e5bc31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1758 5f7f3cc5-f7fb-4cf3-89a6-67b6b361dde3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1758 dd76eac2-311a-4bce-98ff-09d97e982f34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC266;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h031E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB613;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1759)");
    end
end

unit.assert_eq16(16'hC266, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1759 9e468054-7f88-4747-9c59-88b871f60a80)");
unit.assert_eq16(16'h031E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1759 8579662c-7820-465d-a28b-9f7bfb837876)");
unit.assert_eq16(16'h031E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1759 04aa082a-0401-48ff-aa07-a612fef71097)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1759 6e2bc340-65bc-4477-9ec3-92a5417e8711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1759 638863f6-9866-49e9-8bd1-869c7e95ee04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1759 8ac2e217-20fc-49cb-b632-1e40579305f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1759 b7e9d3dc-961e-4850-b3fa-defd5d53a682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1759 827b4f58-ca10-4fda-a76c-648b0ace7af5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1759 2e474a28-235c-48af-a320-ff35771807f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC802;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA1B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5032;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1760)");
    end
end

unit.assert_eq16(16'hC802, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1760 d8938bac-d6ab-4792-9508-bd8156d35f48)");
unit.assert_eq16(16'hA1B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1760 0d35f594-7b5b-4baf-8e4b-c5f5c4764640)");
unit.assert_eq16(16'hA1B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1760 6d292149-c054-4fbd-87b0-d9407d7e08e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1760 fbea95bb-5b74-4e6d-9096-13783eb4306a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1760 4fbe5e49-e72a-4c5e-8b15-dfa56e12b56d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1760 a959e16a-3c05-4c46-a195-84daf0888d38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1760 e497e6f8-a5b6-4033-bc70-1c18f054dbe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1760 ae2a7ed9-ef28-4d7b-8413-bde09906e83a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1760 dfa7ad18-563b-47e2-b0e8-f27b0f8d4612)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9299;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7AFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2D21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1761)");
    end
end

unit.assert_eq16(16'h9299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1761 3a087637-e2c7-49dc-b492-20a911441d5f)");
unit.assert_eq16(16'h7AFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1761 7db59557-0ab4-4a9d-8dcd-3eef8a17c6ce)");
unit.assert_eq16(16'h7AFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1761 ca8f8ad8-f95f-4a21-b8d6-eb6708c4f543)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1761 64c2bfa3-2877-4469-836b-d0a9017b7993)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1761 5d95501d-8609-4706-9fa8-38abd94bc6db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1761 c1801745-0eb5-47d8-b5b6-0f65ad9e046a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1761 c1e30a99-b023-4826-b66a-3aa12948b849)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1761 baaeec10-b0b6-4c43-a7f7-145bba1086c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1761 d4a04b5d-53dd-4961-a172-7eff522ffdb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h62BD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9C17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1EC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1762)");
    end
end

unit.assert_eq16(16'h62BD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1762 5d977ef0-0a8b-4c58-ac1b-a1b57166d9b0)");
unit.assert_eq16(16'h9C17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1762 62ac13d8-5614-47ce-853e-7e75c7b5078e)");
unit.assert_eq16(16'h9C17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1762 a23d5006-f287-413d-9c7d-07c5efd03e28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1762 f579ede6-576b-43da-be1b-37286868ea2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1762 6135ea47-db5d-444a-bae2-2324f06c81fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1762 f13595d9-8a75-491e-bb5a-ee4db790da2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1762 1e4cf4be-7517-4bc7-bdce-29a0b85c6319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1762 4fec2181-8c8e-4321-a94a-27e30c09cc6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1762 c0091981-02bc-4eda-ae80-0b88a273f398)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h13F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7FD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA51B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1763)");
    end
end

unit.assert_eq16(16'h13F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1763 4d94a716-c972-4c83-abae-c1ed485f14a6)");
unit.assert_eq16(16'hF7FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1763 7d9c0eb0-b5ff-4cf4-b1c9-02e0079d91f8)");
unit.assert_eq16(16'hF7FD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1763 f88c6fad-3dee-48a7-b92c-b436cc6b22fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1763 b138fb26-aca1-435b-8087-7dce671e5e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1763 a8cdf9d8-3ee9-438a-b084-97d4991fe06b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1763 ff98c217-a6d0-47dc-bb3c-65af57d4431a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1763 0d5b5e12-ead4-45a3-9ed2-04a08f32cace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1763 6432e88b-5020-43cd-a614-9bbd801137f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1763 875d431d-d16b-4cdf-8af7-b7f928034d1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6778;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBC30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1309;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1764)");
    end
end

unit.assert_eq16(16'h6778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1764 4f09cfce-0b88-4eb5-856a-249e65f22b8e)");
unit.assert_eq16(16'hBC30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1764 b05bf757-bccc-4d5b-981d-53fc180d85b0)");
unit.assert_eq16(16'hBC30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1764 c1d974c7-738d-417e-8e55-07f1308b8fac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1764 b3b2c876-c3cc-4c01-8b19-8574c887f55b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1764 5bfd227d-175d-4b9b-bcb4-ea52ec974384)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1764 65e13b03-4e5c-4861-8853-8da6420b17a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1764 0cbf47ab-df3d-44d3-be49-7abdbb5647e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1764 e4520fcf-b469-45e4-bb6c-a5b6fa625691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1764 22b8baf4-a898-4444-8958-6f634ceb49c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h004A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5035;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h32D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1765)");
    end
end

unit.assert_eq16(16'h004A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1765 54e4c392-d3d3-40d7-8eff-977fe8ca2a51)");
unit.assert_eq16(16'h5035, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1765 0aa237c2-ad82-43f2-af00-53510e49f634)");
unit.assert_eq16(16'h5035, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1765 cf15e41a-d70d-4d35-8ea0-8e36fb5b5df1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1765 8a09e6dc-081e-49f2-a439-6544b36d3936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1765 7c28d515-5f2c-4330-800a-13124b933213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1765 4a7416c5-2ac3-4e05-ba47-15aa1fe19898)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1765 45930570-aff4-4041-a856-442fc711596f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1765 eae3098c-c922-4dfb-8d6a-d8f1f00ddedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1765 711d6112-28dd-4174-a92b-da0fd42908bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h75D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h965E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC952;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1766)");
    end
end

unit.assert_eq16(16'h75D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1766 cdabddde-3c5d-4994-93cd-07ffe5b90731)");
unit.assert_eq16(16'h965E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1766 f36660c4-6fdf-4bf7-9f21-cfb32bf730d9)");
unit.assert_eq16(16'h965E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1766 f22f8ace-2498-4744-82f2-729d0a55eafa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1766 8ad249f6-e29c-4a23-b018-bb4bfeab4a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1766 509f2f09-3d97-42a7-84e3-f022a2acbe69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1766 006d74cf-040f-4a7f-9a72-fc429992b80f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1766 f96978cf-283f-4c8d-b161-49f514dc1e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1766 ab5fa0fa-86d4-4661-9a33-52465cb20e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1766 4d747ece-328a-4e04-94df-d600a84267f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEF25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5375;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1272;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1767)");
    end
end

unit.assert_eq16(16'hEF25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1767 1da77ffe-b333-48bf-bb43-46631714d892)");
unit.assert_eq16(16'h5375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1767 db1415c0-d5db-419c-98d1-6af7c9416289)");
unit.assert_eq16(16'h5375, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1767 4ed812c1-a431-416a-bc77-560b29b09258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1767 94d417a5-6825-46f0-8d0c-98185262764d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1767 4a4a02a4-0832-4f37-b44d-85e05a9ce8f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1767 8698be27-309a-4092-ba5b-34641631d285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1767 ed2361c8-c1c2-4a4b-80a1-8102ae5e5f78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1767 176d0c1e-c6e9-42a1-8cb4-0a5825871b97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1767 988e4c67-3c8a-4065-aa2c-c6404653a5bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8FEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB8EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBBD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1768)");
    end
end

unit.assert_eq16(16'h8FEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1768 3cd47ff8-6a78-4d14-bfd0-36edbad89b3f)");
unit.assert_eq16(16'hB8EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1768 c9e43f1c-267a-401c-ba85-c5eae6be6871)");
unit.assert_eq16(16'hB8EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1768 5cc6e324-26e3-4dce-a60c-57652818ac84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1768 cafd2004-7f00-469b-b876-1629a2c6e9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1768 6a9d0463-c787-48ca-8779-89f1a247e005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1768 407f9ef2-99f9-4d7e-a075-7cfd4b7e645a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1768 5b75ab4b-571b-4f76-bad1-c2f9d1658631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1768 b98e596d-eb44-4404-8725-8a68d8e332eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1768 9b5921f1-34a1-4aca-905a-4815c681aeb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h45BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h43EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5549;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1769)");
    end
end

unit.assert_eq16(16'h45BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1769 727ec2ec-5874-4a1d-82b4-2bc51bc37200)");
unit.assert_eq16(16'h43EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1769 ef594340-8f5c-49c5-bc4f-4212c3c4b801)");
unit.assert_eq16(16'h43EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1769 48b833d9-4285-485a-b5b6-1a46ae791981)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1769 ed8d897a-56e9-40d2-96f4-dda16adfdd1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1769 bc60d60c-9e73-4739-ae0b-e16b05875899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1769 78ab2438-b3a5-4d07-b3c5-915158dc8be6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1769 01edce92-db3a-4aca-812b-bf9ce937cd0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1769 ef19b7f9-eb03-44b0-b21c-c2cc2af1f9ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1769 a3cdcba9-fe18-4877-be26-e2fab9e48f4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD0E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h65D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h599D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1770)");
    end
end

unit.assert_eq16(16'hD0E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1770 c7e1ef44-34c5-43fb-ad87-cdfc0d1b0a73)");
unit.assert_eq16(16'h65D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1770 9a978e5e-e8dd-47e2-b0f6-8d345057a7e2)");
unit.assert_eq16(16'h65D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1770 d229619b-fc60-4ba1-9d0b-2343024f82cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1770 4160ebcc-c353-48b5-bd52-e0a23dc37e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1770 a94798bb-3762-49d4-ae8f-ab44fee0f69b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1770 237fa4fa-2305-400a-9e23-11130d5bf89b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1770 6473425d-6df0-4b05-93d6-c72795463b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1770 3ad2b261-ac4b-4a9c-ac9d-3ff1c1f9a1d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1770 dc208d8e-ad01-409d-8654-ccd6154f1e5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h846E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFCBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7A51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1771)");
    end
end

unit.assert_eq16(16'h846E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1771 53083dd3-71d4-432c-a038-736abb10f9d2)");
unit.assert_eq16(16'hFCBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1771 36fbae8f-f682-47a1-8ec4-cb512e2bc305)");
unit.assert_eq16(16'hFCBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1771 ac12e3cb-9c7c-4209-a99e-e25c925d0c54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1771 92957891-16e7-40b1-b314-6e85ce669d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1771 f6e289cd-edcf-475d-aa52-1f481108a820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1771 d7d3d8d6-0422-4492-9df1-0ac754782ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1771 157827c9-1b7b-4743-b33b-603829f037c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1771 7e320a2f-0be1-4728-bfbd-dc60b162f59e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1771 ea2e3269-4a5a-4e71-b976-fbce21d86f94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h16DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2EAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h010B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1772)");
    end
end

unit.assert_eq16(16'h16DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1772 176e62ec-f702-432a-9273-9f998b42931c)");
unit.assert_eq16(16'h2EAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1772 c4476eaf-2a67-44fa-bcf5-cede3023c6d5)");
unit.assert_eq16(16'h2EAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1772 8188e96c-d39d-441b-92dd-b6545cb5024f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1772 ea95582d-a031-4c5a-8d8e-faa54292b675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1772 751c041d-46ad-4a70-9eef-d1a063b8c749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1772 00a8ac56-ad5d-4882-9a52-8b3371feab48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1772 bba4a116-6d59-4615-a262-95e00566752e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1772 5e4295ac-bf3c-478d-9231-9e7e79f23954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1772 8e063648-bf37-493f-8545-234a4dcdf22e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h229F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4A39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1773)");
    end
end

unit.assert_eq16(16'h229F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1773 c6662777-0a7d-42ff-85f6-6f58065ecaa5)");
unit.assert_eq16(16'hD2D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1773 9ff3e493-865e-4ab3-b06a-49695de01256)");
unit.assert_eq16(16'hD2D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1773 aaf1f068-cb74-409c-9ce0-3d89656bebbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1773 53c52b05-288f-4563-a569-ec789ca13157)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1773 6d3cb27d-fb97-4cea-8766-34e81cc5c3d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1773 36c966c6-e582-4524-b2bd-f1c7644af943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1773 f51f4315-4abe-48ba-b53d-4fff7d1a93dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1773 2e71b5e4-b7f3-4bf9-806d-0aca259935c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1773 e8d64713-37fb-4782-9ef2-f1e067b9fff1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC1BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4246;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEFD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1774)");
    end
end

unit.assert_eq16(16'hC1BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1774 645964e9-1503-43df-b8f6-eaeb91cb6938)");
unit.assert_eq16(16'h4246, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1774 7854f6f4-35a1-4b84-a590-0662ff04e4ec)");
unit.assert_eq16(16'h4246, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1774 9d717aed-b1d3-42d3-b10b-03379deb32af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1774 09323c1b-7992-4479-839a-f622abb4f191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1774 f96be958-d51b-4aae-a49e-447fef4e4f5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1774 3ba18927-9135-4291-b642-fe7c0d875916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1774 d8e2ea2b-c7f6-4aae-a6ea-27fa43600675)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1774 3c1eb4a7-17e0-4437-899f-67114ddfa077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1774 73828b3c-1e53-432c-b988-14d03a62bd51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB3DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9CF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEF07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1775)");
    end
end

unit.assert_eq16(16'hB3DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1775 8c9f968f-ea2a-40fe-a4bc-e680342b0b6b)");
unit.assert_eq16(16'h9CF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1775 3e798b2a-27ef-47d7-96f3-550469ab6bbf)");
unit.assert_eq16(16'h9CF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1775 609b4e31-2eb5-4c82-8cdf-96f79ffbd773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1775 7bdb01fa-4403-428d-a40e-6fc1b7e363aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1775 b46f3651-5e4f-416f-9310-48f2d87f274f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1775 c4976936-4414-4413-9270-8eb710ffe40a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1775 7e27d6c7-ff29-4514-8b60-ebeef00128ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1775 b9c83215-3221-41be-800b-4c4655ac0506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1775 95f0f7e3-beb2-48dd-9ad4-5bf8cdfd9e37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF798;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFF56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD600;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1776)");
    end
end

unit.assert_eq16(16'hF798, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1776 669ae24f-ddda-4606-8447-5d5876295f2d)");
unit.assert_eq16(16'hFF56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1776 6fa5168e-58b3-4e62-b26a-94230e9abbe1)");
unit.assert_eq16(16'hFF56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1776 9cc27cba-70c6-4469-aa2d-846c1b33b13b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1776 63b6e89b-fc35-4ff7-b3b6-ca11408f67c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1776 2de35fa4-d2f0-4e6c-8894-0f3eab0e4249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1776 3920861a-e9d9-44ed-a887-ada57b4d6901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1776 18b9086c-8529-4d18-bbc6-5e61f91439f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1776 3c53c8d7-3c02-4ab3-9c1b-bd378350d3b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1776 f0e6704b-47ac-4654-bd34-e28a8e337a52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA0C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7287;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h57C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1777)");
    end
end

unit.assert_eq16(16'hA0C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1777 ee59d389-bc85-4ee4-8490-c598d59303fc)");
unit.assert_eq16(16'h7287, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1777 ea887ba0-ff9e-4aa6-87b7-0a1177f063d6)");
unit.assert_eq16(16'h7287, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1777 335a9ace-0199-462c-b33c-2a0fda432ea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1777 440c78ca-2c12-4a69-8377-ef486b1b9924)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1777 85e51ebe-fd35-450b-b5f3-aa408a769fd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1777 5ba8f294-abc7-4a80-8197-f023d520909a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1777 f52686ca-5de9-411c-8ca9-af4cb7e562c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1777 522d21e4-01dd-4865-84cd-90c482f52427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1777 88dfa487-5215-4759-a57b-221e0d36738e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h80BA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB6CC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h987C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1778)");
    end
end

unit.assert_eq16(16'h80BA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1778 63de6141-69bc-488c-a1c4-f3f13ced5195)");
unit.assert_eq16(16'hB6CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1778 29827921-7a4e-433f-bace-bb0cdbb5322d)");
unit.assert_eq16(16'hB6CC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1778 6baf2650-06d4-4d1b-9af7-5fe4f21c9df6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1778 5ec09d84-a87b-4235-b92c-3bafde8a099b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1778 414a0ac2-0034-4409-a581-62bf2128a7c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1778 a5737d0f-e556-4c21-bdc9-91ab92f393f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1778 523d83be-d9ca-4d9b-94a1-0ac44eb77898)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1778 253c8dfe-0a41-4e76-a12c-e490f1fad636)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1778 1266bdb4-fdbf-43b7-901f-266461dcb1bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7EC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFFF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1779)");
    end
end

unit.assert_eq16(16'h5858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1779 bbc6b636-f4a1-4fce-9b79-7f89caf4c0b3)");
unit.assert_eq16(16'h7EC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1779 01542594-1e63-472e-8175-5b99ffec3b23)");
unit.assert_eq16(16'h7EC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1779 458addf2-f343-49b3-b4dd-20230add21d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1779 0b82e9b1-3a64-40a6-a967-48756b82c53a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1779 446f786e-6837-4d14-84a8-b9244adcfe49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1779 04090f1d-979e-45ad-a248-4ec5e5aeeb6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1779 4349ebc0-84bb-46c9-a92d-14c656c5fb7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1779 b478f235-794f-4307-973a-97b30256deb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1779 8ab1810f-0b78-4311-bd7c-fdd346e7a0e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA24D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD147;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEE97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1780)");
    end
end

unit.assert_eq16(16'hA24D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1780 57746d04-3081-4422-829a-7ba9741f85de)");
unit.assert_eq16(16'hD147, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1780 bdcdb164-34d3-488a-a838-74e652584cdb)");
unit.assert_eq16(16'hD147, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1780 ef1e800c-97e4-4e1c-a938-65445f367bbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1780 ef540635-0a38-4e62-a836-bfd631ebd0d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1780 06824ffb-c502-450f-a0f1-19cf6142f705)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1780 1c062432-9c43-4e47-aae3-331980ab9d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1780 db17b970-2c82-4e4a-8872-71c8dcaeb015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1780 4b587a61-3928-480d-a9af-485f28906542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1780 3c23b733-b7ac-4b44-b658-9f34cebf36f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB905;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC09B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFACF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1781)");
    end
end

unit.assert_eq16(16'hB905, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1781 f57b6505-35ee-49e7-82be-c6b095e8de4c)");
unit.assert_eq16(16'hC09B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1781 0510c609-c36d-4dcf-bfd4-ef234e916031)");
unit.assert_eq16(16'hC09B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1781 cde90028-d96e-44c6-9cd6-1080587fddbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1781 ff7feedb-1128-4b31-8f4a-c9a4629a7f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1781 dbf51c0a-c173-4b00-bbe9-ab56c427d4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1781 0f1555dc-7a81-40aa-8ddb-f39ef93cbb7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1781 0fa6dd0c-e8aa-4ea4-84ea-8e27a27f823c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1781 cbb5f4f1-005c-479b-baca-6aa4fbba1994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1781 3339d8e5-c8da-48e5-be12-8f3b1fe407ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h58AD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB428;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1782)");
    end
end

unit.assert_eq16(16'h58AD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1782 9bd27e8a-fe92-4cf8-a11d-54cfc0054838)");
unit.assert_eq16(16'h6FCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1782 181262d9-b298-4946-a9c3-ed7aefd3e872)");
unit.assert_eq16(16'h6FCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1782 1e7755a3-4aa8-4d11-9b8e-aa46831155ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1782 b0db907c-8b26-43c8-8ead-7798eb3aea39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1782 d9e573ec-7a89-4fe7-897e-296070cc401c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1782 807788e4-7791-4152-a3dc-cb042dd6634b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1782 82244a0b-b161-42ac-a347-3c85ad254abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1782 5a9e4fde-eddc-4a78-8467-f864ba33ecd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1782 67cc9a78-827e-44de-84de-6e285fcc79af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2374;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h60B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2959;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1783)");
    end
end

unit.assert_eq16(16'h2374, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1783 f03d30d8-de53-4a18-b7c3-0f6ea1283e48)");
unit.assert_eq16(16'h60B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1783 8b2f079b-968e-415e-81e1-c1062a03e0bf)");
unit.assert_eq16(16'h60B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1783 3956433f-a015-4ead-96b3-f960793d64d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1783 3382c3eb-78ee-4775-8343-7454bb028799)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1783 e4c12415-c967-4b0c-8e8f-0f71c19b1bf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1783 0643e73f-8619-4ab7-9d61-a0881ac06fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1783 f9ec7232-0f04-48ff-822d-bafa28d10053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1783 f5cb4b47-cc7c-461a-a198-96f5a7eb8f96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1783 c5566463-5b8d-4cd1-a7d2-72be3de5e20d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8BF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF2D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1784)");
    end
end

unit.assert_eq16(16'h8BF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1784 265e9094-8172-4509-98a0-2f2ab46b22fe)");
unit.assert_eq16(16'h6D07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1784 e506f91f-ba00-4eab-bcf6-c28b127620c7)");
unit.assert_eq16(16'h6D07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1784 33325221-35d4-4f00-9d0e-2790b884b78a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1784 20752e62-0603-4a1d-9643-c50ef9fdbd6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1784 9ae59dcf-513f-45e3-8e95-dd5b1908f29a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1784 31f02bcf-c552-4fa5-8def-17aa0f59cb50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1784 18f9e11c-f148-451b-9170-f2cc4accd680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1784 41eb341c-299a-4961-bf7c-fd9d4fb1e889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1784 fe34e348-1667-4cd4-9a46-dd19c0896513)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF156;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7ED7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1125;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1785)");
    end
end

unit.assert_eq16(16'hF156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1785 6750295b-b946-41bd-b05d-3a7f508f4fc6)");
unit.assert_eq16(16'h7ED7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1785 5952ea93-7cbb-414e-baac-1e9f52d3036d)");
unit.assert_eq16(16'h7ED7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1785 aac6980e-f531-4204-8361-3b7e752a6006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1785 f1d031d2-b1b7-4e56-ac65-23d2e221e300)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1785 12870ad9-faad-46bd-87fc-e74a5124145b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1785 9af3d9b5-0f1f-43f3-ac76-0b8067b20257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1785 189f5db3-ca5b-44ca-8a21-8e0e4baaa616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1785 dd1eb01a-5d1b-4bfb-9f44-71e743fb194d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1785 a8599d35-7476-4353-a2ac-a53b08954ddd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9A4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD17B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1EAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1786)");
    end
end

unit.assert_eq16(16'h9A4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1786 50dbc7ab-453c-47e4-bacf-465f3fb6be9f)");
unit.assert_eq16(16'hD17B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1786 fd618f03-2239-4064-9729-862e3dd5d483)");
unit.assert_eq16(16'hD17B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1786 6ae35b86-e54e-4e9e-bf0c-2b5d03ace78c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1786 8a6ebf72-768d-4235-a93e-0e267b46061f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1786 7381ee81-78f0-4475-bff5-4788ab17c005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1786 4cfea0c4-a30e-4d9e-a35a-bdc0c54adf30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1786 d0555cbe-4708-49eb-a2bb-a21267c3dd93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1786 13686f15-8c36-4212-a49d-441b287dc1b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1786 b0926ba1-3826-4e16-9a0b-c0b5b8ad2780)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1529;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC929;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCC11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1787)");
    end
end

unit.assert_eq16(16'h1529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1787 a16c4275-773d-44ed-bb65-7fc6714dcd77)");
unit.assert_eq16(16'hC929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1787 7ef7b97f-3d55-4158-a046-023d91159a40)");
unit.assert_eq16(16'hC929, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1787 1d12f46e-5806-46dd-bc77-52a7e575d550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1787 b96e2269-dfcf-4e41-8ede-bd6ce6a1b65b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1787 9b6634c1-4ec8-4b42-a4e9-bcc4fe9e6f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1787 360286e5-518f-42c3-a202-1c82e018b9b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1787 2db372a1-8e22-4474-9a19-50deae171db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1787 dbc869ea-31f1-4910-a785-e110a2d79848)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1787 47a8bff1-fc12-44a0-b51c-420f4412590a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC808;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF0B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1788)");
    end
end

unit.assert_eq16(16'hC808, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1788 f407d064-e9aa-41bb-a5bb-bb905c1f1184)");
unit.assert_eq16(16'h2D0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1788 08859b5b-3282-4db1-81d7-7319af267389)");
unit.assert_eq16(16'h2D0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1788 83ae69a9-b4d4-40fa-a011-a9690cb5ce0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1788 dcba001e-cfa6-4963-86e5-9758e13e8092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1788 1cd8f2a5-b391-44f6-80cd-831706eae583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1788 55202694-e6c9-477b-8785-61ba14bce756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1788 96139ec8-183b-4955-9442-ca8a78fdd501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1788 b3121910-f076-4fb8-ad08-cb71379505d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1788 906d18ae-23e3-4748-a7c4-ccbd37eccd97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6D34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3459;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1789)");
    end
end

unit.assert_eq16(16'h8B0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1789 6ee2ec3e-58eb-45be-a7b2-8547bad8339b)");
unit.assert_eq16(16'h6D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1789 acee78e7-e178-4ec1-bbd3-f4725bfb7f33)");
unit.assert_eq16(16'h6D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1789 19b283b7-969a-4052-aa11-5bfa9cb88eb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1789 19378576-95ea-4c57-b051-21aef77f85b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1789 e834a6d3-a7b7-403a-946d-629bde5f3775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1789 ab660147-2cfa-4361-aeae-c0e0f10c8a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1789 6fc74697-7981-47c3-8ec2-fe3dac5dfeec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1789 3b142c79-5cf5-48a1-a811-0e524f737d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1789 32e44b2e-f8e8-448d-9e8d-d5380bcf6cd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1441;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6CF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h02FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1790)");
    end
end

unit.assert_eq16(16'h1441, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1790 e3285df0-86ea-46d3-8a13-4d7d44050a2e)");
unit.assert_eq16(16'h6CF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1790 2f30a100-f8c2-4f89-84fb-36ec0cb5704d)");
unit.assert_eq16(16'h6CF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1790 d1e2a444-3f89-4e6d-8889-3a2f692b9c11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1790 e78db17c-a8ad-4b0c-8e85-1ad718c90e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1790 2de1f68e-67b3-455e-9285-b4bc533d503a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1790 c8432626-1623-48a4-8d00-aecc9c3c26d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1790 ae3765c5-d58d-497a-8a72-5bb5a21a4328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1790 f2012e94-8622-4b08-870b-9ea0cc432245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1790 1ce84984-edc5-4f8e-98cc-6aadcbf4dd17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8F66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9D0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBC9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1791)");
    end
end

unit.assert_eq16(16'h8F66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1791 1841955b-86cb-429d-b2ca-d8dda0b82c64)");
unit.assert_eq16(16'h9D0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1791 6937d939-0e91-4316-9583-0fd21024cb85)");
unit.assert_eq16(16'h9D0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1791 e261bdb8-3152-46a8-818f-32062fa94f03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1791 c0d6c7a5-7d76-4794-8670-21a7582c225c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1791 16cd2cb5-9056-4db6-9a70-ef5a1b3b0cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1791 01122ea1-43c1-474d-8d7c-12d9e49fd7fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1791 3e3d79c8-8c5e-4449-a547-21bea43443e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1791 16875e6d-1cf5-43fc-8486-e9c5a0549c45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1791 78f16a3c-ef08-4bd0-9309-04c1d31cab98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC3A5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h125C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF46B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1792)");
    end
end

unit.assert_eq16(16'hC3A5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1792 bd069f71-686a-4cdc-870e-b6482abce59a)");
unit.assert_eq16(16'h125C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1792 4bb314e8-0707-4661-800c-1befc9ea3ce3)");
unit.assert_eq16(16'h125C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1792 8451be65-faeb-45c2-bc1b-4d745a665bf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1792 63496270-4312-46e6-9bb6-e17ca9093447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1792 35b50693-a347-4b7a-b732-0b74d68d8849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1792 db4d7f24-f698-4a68-b8cb-0f6e36b6152a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1792 0e7391ed-3742-4c7b-9b63-4e9a5ee1031b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1792 841aa685-4e6e-46f3-8b0a-4ac7783ebf64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1792 dd69e55d-5ef3-4feb-848d-9c47c47b1763)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA83D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h74DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5356;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1793)");
    end
end

unit.assert_eq16(16'hA83D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1793 d03336b3-676e-4b70-9221-7b9c073cd6e1)");
unit.assert_eq16(16'h74DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1793 a52ee890-fc4a-45f6-8c46-251a85ffb688)");
unit.assert_eq16(16'h74DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1793 eda81dc3-6ce3-4238-87d9-d894d99779cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1793 a7fa6301-3df9-4f77-9c91-28753855fd06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1793 53a8da3f-ff9e-4a2a-8e1e-53c03a403ed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1793 4bc4dacb-c35a-46d5-8ac7-56d71b727cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1793 c4288450-7e4a-494c-966c-4c0dda5161ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1793 4aa6ce07-28dd-4538-b9fb-1abefde1d988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1793 9373b674-2cb5-4e18-bcfb-842a8787f1b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB354;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEAC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1794)");
    end
end

unit.assert_eq16(16'hB354, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1794 d853d150-a2fc-4bb7-8fa3-82e60669195b)");
unit.assert_eq16(16'h5C4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1794 aa095bb2-a962-4315-8664-70bf620607b0)");
unit.assert_eq16(16'h5C4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1794 cbf3dd6c-892d-4318-accb-a7fdbd05e773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1794 b2554036-4732-4bfb-b7dd-fd0011d5204b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1794 d3a513e0-0138-49c0-9313-d89e3964a5bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1794 d54cf93b-8232-4804-b112-8f74fd10959a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1794 6c4e79f6-d3db-4255-85e9-75683f35b616)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1794 98e7353e-a031-4eca-a41d-1e7bd5c23874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1794 5f69e1b7-04be-4538-999b-dc5ea5fb30ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h692E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC072;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1795)");
    end
end

unit.assert_eq16(16'h692E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1795 17a1d247-384b-46ad-9855-6754fb463658)");
unit.assert_eq16(16'h45F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1795 2dc785ce-bfff-4a8f-9297-0517da5583ac)");
unit.assert_eq16(16'h45F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1795 c7bfbd4a-468e-4d77-b14b-19a4c77891c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1795 de339eac-a497-4f3a-9798-c306de1413a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1795 da1829a8-9a4e-4ffa-8c95-1c873a699ee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1795 9d7887f9-1aef-4d62-b4fa-bf6f1719a4c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1795 5508cd2e-89f7-4576-87b6-7aeb70fa17e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1795 20e7417f-2879-420c-a648-13972816e3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1795 f865c0d7-1547-453f-b8d9-0ef51011a6dc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1937;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9EF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1796)");
    end
end

unit.assert_eq16(16'h4B65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1796 b8cdcce5-eef1-48b5-9e45-6fe7e3940bb6)");
unit.assert_eq16(16'h1937, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1796 d4ce3afd-08f7-49a6-bccf-d4ebf0673bfe)");
unit.assert_eq16(16'h1937, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1796 6b3dc29a-37bb-446a-a9ab-361d28ccac31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1796 632c667d-6072-40a2-aa35-a800573c89e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1796 bdfaf639-4122-47d0-90f7-68b714787ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1796 2d68e399-720f-43cf-b17e-4ffe3b3d093a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1796 dbc9caed-e8c7-417f-bd38-9daa4cb9b7b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1796 a98d5600-9585-49bc-8897-2d183fbf396c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1796 06b0cc9a-b81a-49d1-9e59-c7c1acadcb7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA1CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB0CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1797)");
    end
end

unit.assert_eq16(16'hA1CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1797 ce7b830b-1e6f-4465-80c1-7461e724906d)");
unit.assert_eq16(16'hB0CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1797 67f77e2c-7e7e-4370-a42e-6ff1b2c81814)");
unit.assert_eq16(16'hB0CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1797 7b081acf-9d0d-4073-b3e6-8fb7cf50e4eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1797 7adcd1ec-112e-444d-b5bb-ebe55b831f83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1797 3b26ec30-ef15-4b37-ba82-fe511cba0315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1797 3106c59e-ccc5-4f1b-a62a-23758fce74c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1797 16d29843-d247-48bf-b474-adf661604577)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1797 24daa926-994f-4cd6-b7ee-1ed65a17201c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1797 74c94a9b-9317-4671-839e-8ed523742260)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDCF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2043;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4C74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1798)");
    end
end

unit.assert_eq16(16'hDCF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1798 4c5aeb01-a6d8-490d-8433-acda619682c4)");
unit.assert_eq16(16'h2043, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1798 d7d2a68e-1d43-4a9d-8388-165aabe233ca)");
unit.assert_eq16(16'h2043, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1798 d80e752b-3fae-46bc-8ddc-c59863e2ed4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1798 cffb60ec-69ec-41c2-9bd8-7e0f23ceb92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1798 ee9acea1-727a-4770-8a79-e5f9c8e8c487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1798 7e681dc4-e2ae-4179-b533-499875c2a65e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1798 cd7d2df6-086e-421c-9ed3-0020144e6db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1798 b7af8ca9-90ca-4447-95c2-2ac5d44d75f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1798 b9e693df-6552-4796-9db8-989ded0bb531)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD596;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBD37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h42EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1799)");
    end
end

unit.assert_eq16(16'hD596, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1799 3335750c-6e86-4d3e-8ed0-f5c3c69dc674)");
unit.assert_eq16(16'hBD37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1799 73f82905-2f1d-4b77-acb4-cfc32ecb3577)");
unit.assert_eq16(16'hBD37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1799 bae45ee5-06c8-4a30-9963-e3cd23ca385e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1799 9e90d335-f4f6-4200-9cf8-0c4e7d1a3968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1799 e13521ba-f66b-43dd-ae8a-845f7f179222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1799 4099283b-260f-4bd3-a769-04fc092c39a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1799 9701ebb5-fa0b-4a07-a938-6d8ef016bd1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1799 683bb60c-fc5d-4762-b98e-a1f2970d36b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1799 bf9a56ee-78d2-4857-8f31-c9afc3221669)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB6D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5497;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2FF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1800)");
    end
end

unit.assert_eq16(16'hB6D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1800 fcfdc6f4-c9dd-4787-8c55-777ccb263d04)");
unit.assert_eq16(16'h5497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1800 bb746fd9-1635-4dc9-ac18-dab3afaf89b8)");
unit.assert_eq16(16'h5497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1800 6f526049-24ca-4de0-a04e-8edc26997d29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1800 7735200f-2756-4eab-be31-53c5b52486b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1800 ccd8f95d-2210-44d0-8f04-9acc3fc1ed8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1800 6088cfb1-e267-4592-bcc1-443211479baa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1800 2573c2ad-3afc-4cf8-a44b-58fb7c834931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1800 b9c0ccbc-7732-4943-b463-05a54717bee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1800 c55d911e-d31a-4a0a-9d41-d1235d17b2e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC000;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCA8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB57D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1801)");
    end
end

unit.assert_eq16(16'hC000, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1801 a724c777-4597-44ec-9816-31344ba38743)");
unit.assert_eq16(16'hCA8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1801 6c3290aa-28b1-4ae5-a259-49282b95c86c)");
unit.assert_eq16(16'hCA8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1801 d2f60ef8-79d7-4d0c-a9e6-771aa7353cff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1801 52452089-ca9b-4126-ad53-ff3c05127d42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1801 c99aa4aa-f0f7-481b-b44b-84e317265346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1801 d44aae10-fe25-4291-ad82-b0cf8728d0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1801 5c1687e0-8a0b-492e-8627-6362ef0c5fcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1801 a6da3c02-96a9-4f08-9cad-510b1fa1d60c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1801 e876a144-f5a4-4a45-a0c8-8ca9cd654964)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h06F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1C03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1802)");
    end
end

unit.assert_eq16(16'h06F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1802 b699c655-a486-4059-960b-e2fef7ce86dc)");
unit.assert_eq16(16'hAC4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1802 4be29dc7-e348-4443-8ca3-888b94ec6638)");
unit.assert_eq16(16'hAC4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1802 4589424e-9c24-4a75-9324-f47cdea1df3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1802 464c2b5c-23f4-4d17-916a-e8aebbc33a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1802 9aa5adf2-0227-498c-90ed-534ba8b0ed06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1802 b9dd38bf-9322-4cd2-8b2a-07d879408fb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1802 636c36eb-8bf3-4c8f-99fb-4012223c7445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1802 026c9265-a86b-4e90-971a-60c6f4c03727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1802 031cf393-f6cd-4089-9d38-3a48b4c1c097)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h03B0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB9A0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h951D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1803)");
    end
end

unit.assert_eq16(16'h03B0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1803 ed8a583f-32b3-4435-b8ce-ff1f34c88ffc)");
unit.assert_eq16(16'hB9A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1803 d769bf21-db81-4c16-880d-d67212bc196c)");
unit.assert_eq16(16'hB9A0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1803 947ca504-9213-4778-8a6c-d35718f5ac04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1803 be4aa7fa-b41e-4f90-8032-55c571d389c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1803 73636f95-4180-43ae-a9e6-9db466365ee3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1803 4047748c-aa19-4984-912e-aab2f9911364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1803 48e4562b-7262-4a1f-9566-c4a2bf93e39e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1803 97189856-d53e-4b7b-95c5-a7db8ed62cab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1803 58a083d2-4588-4cae-b4d4-2ff7575d3abb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9220;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8CD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6113;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1804)");
    end
end

unit.assert_eq16(16'h9220, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1804 3e35056f-df89-4280-b426-2cba56da917c)");
unit.assert_eq16(16'h8CD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1804 576d8f6f-bd9e-40ea-8a14-9b0da6661acf)");
unit.assert_eq16(16'h8CD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1804 164bd4b6-c0d4-4334-980d-fe4476ef123c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1804 3dae7890-8580-4e2d-aa9d-629b489a15f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1804 742a4c45-e31d-48ab-9fd6-3ff37354c4a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1804 c0de1e82-b61c-4ac1-af74-093058cc185f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1804 045b64c1-e622-4df5-badd-921574155f55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1804 11b6f707-9220-4240-b04d-da1bb77815bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1804 b8b1ea94-d1cb-4128-ada3-ea5db26d47ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0EB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0504;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h614F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1805)");
    end
end

unit.assert_eq16(16'h0EB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1805 b5e9dc82-2c70-46a2-a99b-e854ca2fb7bf)");
unit.assert_eq16(16'h0504, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1805 13a705ab-88d7-4923-8a67-f911487fff60)");
unit.assert_eq16(16'h0504, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1805 0752996b-d542-4391-93d4-12d1a9b76c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1805 e24c483b-0b54-464c-98ed-a39eb116e6e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1805 9231475d-56a1-4214-9e79-0c00eb08dc13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1805 6abcb7ac-6209-419a-a1cd-e74162b21353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1805 c5f54cb1-ed69-409d-8448-0747fbecc49f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1805 f126af9c-f238-44fc-b746-22803eebca49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1805 11a5db78-8e94-47ca-9ebe-5d19876ef2e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6AC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6ACA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h672E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1806)");
    end
end

unit.assert_eq16(16'h6AC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1806 3e481857-01c6-457f-859a-2b2deea41d02)");
unit.assert_eq16(16'h6ACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1806 ff7eed7b-e163-450c-870e-bfbd7d651414)");
unit.assert_eq16(16'h6ACA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1806 67c2e475-3fcd-4977-9c7a-7d6996e363ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1806 f9fe8f39-46cf-42c1-a179-64544c5a26ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1806 50f20fcc-7ea9-4ade-b4f8-4d8473037f21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1806 ccdf65c3-f998-4c0c-bc12-3ee65dfe9f7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1806 daec8e4b-1f88-40c5-bc4a-66e5c96f283e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1806 a583456d-4fdc-45a1-b52a-dc7b6e512564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1806 a3ccaee3-8f3c-4a5d-8857-3b36c8b61a31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF5ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h53FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7D1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1807)");
    end
end

unit.assert_eq16(16'hF5ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1807 528c74bb-1e61-47ad-b356-72bc30b1eceb)");
unit.assert_eq16(16'h53FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1807 e2323f4d-f86e-4908-92d1-d72de68921d4)");
unit.assert_eq16(16'h53FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1807 f92ea6b8-1124-4d8e-a1fd-d4171ca8e5dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1807 e55d0fde-753f-442c-a602-f963450cfb71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1807 c3080da1-e6e2-47b6-8f03-4006f30d99a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1807 4126ebfd-e9aa-41bf-8edd-a16bd3e08084)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1807 2fff5051-f038-4e7b-9685-ac11822f42fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1807 6222b2ba-357b-4049-b52d-b06ea89a742c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1807 2dcad236-fabc-4211-ac18-9cc70563b0fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEC6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h663E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDC39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1808)");
    end
end

unit.assert_eq16(16'hEC6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1808 ab8e4c6c-63d7-4e51-ab66-8032d993a0be)");
unit.assert_eq16(16'h663E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1808 cf0110b9-438b-48f0-bffe-39449f257712)");
unit.assert_eq16(16'h663E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1808 d02e6a6f-dee8-4fe3-8fe3-8234584f0add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1808 5d81ea3c-4e6c-446f-848d-db624179f7f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1808 2056bcf4-a18f-435b-898e-74a78f586b21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1808 3daae1c6-18fb-4d6f-8ce7-8941aa3102c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1808 d13f7cdd-ee3a-4280-9fa9-e06b35e7991f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1808 305810c9-3847-40f1-ac78-3edb1bee3890)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1808 8ae0a288-8705-4a2b-b753-b870ea10ee8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h33AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8AF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2F39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1809)");
    end
end

unit.assert_eq16(16'h33AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1809 0e6980fc-28c0-4a53-bcf2-3168b0cce875)");
unit.assert_eq16(16'h8AF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1809 f001afab-bf7d-4d57-b463-8b3b9c20c068)");
unit.assert_eq16(16'h8AF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1809 e214bb7b-527d-4b27-837c-97afc622a37c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1809 d04eb707-f79c-415f-9113-c1d5b8299f02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1809 e45eead2-5d68-4fba-8cca-d80b726071ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1809 f062c45f-3739-45b5-b34e-0770a31dae2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1809 deff26e1-640f-4fa4-be39-3633af30335b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1809 26aeeed4-17eb-4281-a3e2-d2b7d64a3219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1809 5dcfe209-707d-46df-afca-0aa71dc8315e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h92CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0611;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1810)");
    end
end

unit.assert_eq16(16'h92CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1810 636c03c5-c008-4033-9a0e-67cf64bf7d1e)");
unit.assert_eq16(16'h75FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1810 6867aba6-553c-4084-b8a5-628e6347c305)");
unit.assert_eq16(16'h75FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1810 b7267d01-fa94-434d-91af-0cc32ef4cda9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1810 7a8436b9-8916-4fa9-892b-a32a98ea77cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1810 742576ad-2ff1-4fc6-8433-22f8fd56476b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1810 988adbe4-6051-41ca-82ba-81c9266cab4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1810 12f04cc3-ada0-485c-b15d-4258ee90658a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1810 646feeb5-5562-4fb5-ac6c-3e22ca0497ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1810 559b539a-7491-45b0-9332-4f7ddde06697)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8114;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7908;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA230;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1811)");
    end
end

unit.assert_eq16(16'h8114, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1811 a7926318-e6f2-46fc-bc12-4bfc5857576c)");
unit.assert_eq16(16'h7908, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1811 e80b2a24-a51e-4b31-a792-26be002efb4e)");
unit.assert_eq16(16'h7908, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1811 ce262e1f-ce0b-4b3f-9fd7-b9885b65b030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1811 731d71da-e1ab-45d0-aa2c-443309bcd38a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1811 e59fddf3-e569-4e96-a6db-bde4d8823c3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1811 ff3201fc-a3e9-4f28-8d43-9b3f2f501c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1811 e996576e-4d88-4515-9c5f-1a3135efb3e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1811 0fab9726-76ff-4c79-b1ba-68514fa02373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1811 0511819e-0898-44cd-bd9f-2eaae2e8b017)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD44F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC376;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8748;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1812)");
    end
end

unit.assert_eq16(16'hD44F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1812 e8eb584d-2494-4801-bf38-704250408011)");
unit.assert_eq16(16'hC376, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1812 2c9508ea-b325-49a7-8327-baf37f3091bb)");
unit.assert_eq16(16'hC376, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1812 c58a98e0-ee82-4224-8ebc-ff0a0678f4d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1812 42b9429f-11c6-4b9f-abe1-f03f09de3ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1812 1dae58bd-011f-4bc4-9a1d-606fff35945e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1812 e672d13b-0101-4d90-90b3-5f65da078f9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1812 475cc34b-8f13-4f71-bcb8-d3feae232892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1812 82620697-ef54-4b1c-b608-00e6178d2d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1812 f9dacbc3-f97e-44ea-99a8-a894a4421dab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4853;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1B16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h126D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1813)");
    end
end

unit.assert_eq16(16'h4853, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1813 e4415a8e-9a1a-44c7-bee5-ee0bb5d03d68)");
unit.assert_eq16(16'h1B16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1813 42bde154-95b5-4ec6-b1eb-f4cf567b2592)");
unit.assert_eq16(16'h1B16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1813 35ab6a8a-4d6c-432c-8af2-3fcf64f536ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1813 8daccc8a-7955-44d8-9ad8-81fec27a5ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1813 e1399a18-9fdd-4476-8a40-1d40735bd359)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1813 75c95719-bf32-465f-8b8c-07a04eefbd4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1813 424f6316-eb63-44f6-8e96-0b865b8aea24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1813 5ef531c6-35e9-4443-97e4-fc10b0496ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1813 e688047e-1d1d-4f32-bf90-88aee1ddb7c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9475;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4AD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h57AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1814)");
    end
end

unit.assert_eq16(16'h9475, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1814 71a645a2-3806-4a9a-a232-78730380b0db)");
unit.assert_eq16(16'h4AD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1814 379f41ea-ef4f-4a09-a95d-225e03f4f8d6)");
unit.assert_eq16(16'h4AD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1814 29d0681b-2688-46f5-9b97-98cde43c58fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1814 dac54a0b-1924-4861-8506-a829d0231215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1814 a313eb70-d7b2-4e8c-be23-c811b2f4ab4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1814 570a36df-725e-478e-8d6f-0af500deef69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1814 238e2414-8f15-467c-9200-6004d2b049c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1814 19e1ce6f-52a8-40c9-a0af-b90a67230b98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1814 6d569a6d-e279-4346-a044-9abb8fe6d3a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h618C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3816;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1815)");
    end
end

unit.assert_eq16(16'h618C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1815 0708428d-a306-48b9-9676-fb1bd04b4cc9)");
unit.assert_eq16(16'hB3E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1815 43d5df4b-7adb-42cb-aaa0-df01d1b32ecf)");
unit.assert_eq16(16'hB3E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1815 c03d3653-8c59-4fe9-96d1-64c67059c5a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1815 e052b4dd-3eaf-4ac0-af61-70ac7b59eb8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1815 f148cc63-19a5-4bf6-9c97-744ac7a40d8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1815 b3912c69-1ecc-42db-bfeb-f0ee371b0f2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1815 4bae67bd-c4ce-45f7-84fd-ea2d5f97d5e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1815 fce9783a-2111-42a7-a909-6351731d003e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1815 bb5bd017-5afd-4f85-b64a-662d16bc935b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h666F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9D28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9444;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1816)");
    end
end

unit.assert_eq16(16'h666F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1816 3e796289-8911-4f82-9eb7-4ea92bba678f)");
unit.assert_eq16(16'h9D28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1816 25427d8b-057e-4397-8754-15fb3ef8ea0c)");
unit.assert_eq16(16'h9D28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1816 331f31f8-5621-44ca-9648-602977dd800a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1816 f7daef57-843e-4902-a5ca-9619a16e5450)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1816 bd93f1ad-41c5-453f-b3ec-cd70e8292490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1816 eef0dcc9-e5c7-4866-93c9-bd9f0deb7275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1816 4eb38348-692f-4a93-a383-1c53af80b836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1816 76e0e01f-1ba8-447d-a674-231e8f83efd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1816 5ee491b3-839b-49bd-b685-0ca7b6bf3337)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFAB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3216;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1817)");
    end
end

unit.assert_eq16(16'hFAB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1817 e87f8b69-7a57-42d9-be96-a90ac7108b01)");
unit.assert_eq16(16'h3216, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1817 43de811e-d3bc-4a62-be49-48c90c61cc85)");
unit.assert_eq16(16'h3216, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1817 5009235a-088c-47ce-845e-74ea4f35bd69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1817 3581d8e3-1ea2-437d-b6d3-d7c37ba8b214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1817 9469e7e9-1a94-4886-a9e5-cb0d1b885aeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1817 e17bfe5d-d2de-47bc-a9ec-26be41f11bc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1817 c989e1e3-14b1-4f81-a00e-e9a9482e0d7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1817 d3be95ab-d699-4aa9-9537-a0cd6a6a84b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1817 8b31ca4f-231d-4fe7-9542-d8814d95e4b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6FAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8847;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1818)");
    end
end

unit.assert_eq16(16'h6FAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1818 51ad503b-7cf5-4012-a0d8-2e30466c101a)");
unit.assert_eq16(16'h57DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1818 97d5de75-7cf2-406d-9c62-8d8b73bfbe6d)");
unit.assert_eq16(16'h57DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1818 2b72027e-16ec-49ed-9dae-249b07d04bc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1818 539a7753-1254-4e90-a5a5-b1f71e9b8987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1818 f0bc156f-9928-4da3-9f19-9d158bf5cac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1818 211a2a8c-87ee-497f-b0a8-c16fa527123c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1818 be7a0787-5e8d-4d00-af8d-7d874df8dde5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1818 38a154ab-8ba8-4b43-a496-0ddf5980aab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1818 b60d35fe-0fbf-455f-9085-1c8b355363d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF014;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2483;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1819)");
    end
end

unit.assert_eq16(16'hF014, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1819 9c288708-dfa1-4d79-929a-505be45f18bc)");
unit.assert_eq16(16'h2483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1819 302b2377-e580-4478-a90f-3ca6288e37f3)");
unit.assert_eq16(16'h2483, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1819 9cd82dbb-39bc-4ee6-a459-c5261cf048c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1819 7c819900-e21a-4344-aaaa-42f94741eb7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1819 8ff2d757-2c1d-42d0-ab61-ca4bff89f950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1819 6a6db90c-9d5b-4c3a-8d27-2369cfe1fc4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1819 d3e7831a-6506-4201-beca-47befacd9949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1819 ae8f12a2-ced8-46c6-b570-243d637dddfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1819 d3667733-7be6-441e-8ebe-81da296a7db7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h49F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEF8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h74DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1820)");
    end
end

unit.assert_eq16(16'h49F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1820 bae62a2c-48fe-4f77-9577-b68e95fafacc)");
unit.assert_eq16(16'hEF8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1820 de071cce-dbd9-46a3-8503-dceb9f754d98)");
unit.assert_eq16(16'hEF8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1820 7abc18ab-27e4-4295-ab16-9f5be370cf51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1820 2b62b924-c5ca-49e8-bcae-2b77cd7d28a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1820 93def981-bddb-4032-8784-feca4ed7ffeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1820 0163a3aa-a836-4c90-b164-c4bd42378cc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1820 11bc71f5-f140-4d2c-8eb5-e78435979b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1820 84dc933e-ca25-4df8-a843-4a461b162ff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1820 d2e896f5-9236-4fd3-b901-71261a8a19ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h922B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDD09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1821)");
    end
end

unit.assert_eq16(16'h922B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1821 20fd2a18-a896-4349-ab83-a4174380f03a)");
unit.assert_eq16(16'h14DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1821 3787b103-ee0a-44ac-934b-c61531c2e8f3)");
unit.assert_eq16(16'h14DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1821 ea124560-169e-4520-9698-d91e6ee45bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1821 b6054c2f-88e0-4254-a37c-89d2c1ae17c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1821 2d715a3c-ce76-4f0b-8895-5ecce708d88e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1821 40c95feb-e5a4-439e-8a34-69690a55b23e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1821 99dab079-984a-4f17-b205-07fcfd3d2567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1821 ce704244-15ad-4ab6-807a-76d23128f0a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1821 a9afafa1-b5ff-4150-b721-55f771a06800)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h05CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB14B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h10A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1822)");
    end
end

unit.assert_eq16(16'h05CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1822 f11c58b9-9102-40f2-aac2-e6b2816357a5)");
unit.assert_eq16(16'hB14B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1822 fbc9f672-2bca-4576-aa45-fa0b30b39271)");
unit.assert_eq16(16'hB14B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1822 b4bcc961-dcb6-45d1-9d52-045748120df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1822 55394804-42ca-4a27-a49f-ab680564b47c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1822 f942b41b-1cd0-45c4-a9a5-c8252d3357fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1822 d141840a-5c9d-44d8-84fc-da5e48f92155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1822 f4538d57-1cf7-43a4-b668-8a2a93c3c08f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1822 1fb34be3-f989-40cb-a951-978194b8abd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1822 94349645-3393-462c-acd5-377d01d7c513)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h454D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3B24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1823)");
    end
end

unit.assert_eq16(16'h454D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1823 a77e02d8-6e5f-4279-88e6-726ee8fa856b)");
unit.assert_eq16(16'h3B24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1823 fc9b819c-bdde-4aaa-8eb4-f264b16f6164)");
unit.assert_eq16(16'h3B24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1823 c1103337-39e6-4882-b9d4-d4994fbbbf3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1823 e3530b59-fbd4-4176-b5ea-d27a56f9f0aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1823 fd39ab12-4238-4975-bb06-5248cec5dca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1823 7204cb08-f104-4b5d-a7c3-627aeaa56414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1823 892a950b-4e65-4273-9406-3f24c03d4a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1823 f5cc8a17-e1b2-47c3-94f0-f2fd704195b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1823 98c9b114-e73c-40ec-81b1-1930151406de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6436;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7954;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1824)");
    end
end

unit.assert_eq16(16'h6436, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1824 8b4a1455-e738-4f34-a4a9-31ac20a4f55a)");
unit.assert_eq16(16'h7954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1824 3859c5fb-8617-4d0e-bb4f-6aff34529842)");
unit.assert_eq16(16'h7954, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1824 e0845925-b6ff-4356-bd16-3fe7e197464a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1824 e341aa1b-ff45-4221-bc1e-c84f5467039f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1824 7e4564e6-b238-4522-919d-a52e33e695be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1824 2e2c5c1b-ede4-40fe-921d-cc43080ee637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1824 fd13a172-49ab-47d4-837d-64d501d9c4d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1824 81f92ebc-5df5-4ace-b47a-be5e687f23a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1824 aaf9e792-071f-4177-ac70-33e7438c8d69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h102F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h162F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h94FD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1825)");
    end
end

unit.assert_eq16(16'h102F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1825 83b89b61-e985-458b-9d77-ddb46c222c94)");
unit.assert_eq16(16'h162F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1825 c081e6cd-b482-45a4-92ed-a598ea2675af)");
unit.assert_eq16(16'h162F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1825 74ceb176-826e-4a38-bd86-5492f815cb44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1825 9c74f990-6a06-4bbe-b569-2071b7b898f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1825 c142340e-33e8-4255-9aed-dd49fab55960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1825 14932183-9bfe-4b41-b05b-af23fb284867)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1825 41b115e8-40c3-4014-8873-42ca09035c1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1825 3ae7cf4e-d662-407f-9764-3b80dadb5e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1825 7913ddc6-9fd0-4721-804f-cda1252ce216)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08D2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2023;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7C7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1826)");
    end
end

unit.assert_eq16(16'h08D2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1826 e80a0be3-ceae-4f44-aeab-5a9f24072c11)");
unit.assert_eq16(16'h2023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1826 75196bba-f826-497a-97d6-ad6a967d53ac)");
unit.assert_eq16(16'h2023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1826 5f47f318-4299-4b68-b5de-3c4bb8b718ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1826 2dbb2c9b-922b-4caf-a705-184ccd654e23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1826 0999e784-079f-430f-9e18-b55518836f7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1826 c9d9055a-b9dc-4240-8822-756bd79ce567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1826 cf408ace-9b50-40e8-b355-67afe0700c9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1826 6eaa1211-483b-4032-94b1-f11b5cf2a87e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1826 9a5fb581-af85-42ac-9a76-7fe296aa8c96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h570C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBEEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCAAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1827)");
    end
end

unit.assert_eq16(16'h570C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1827 66a540b3-f792-434b-b386-6a2fc9e7f05e)");
unit.assert_eq16(16'hBEEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1827 1a91c04f-9019-47c9-8ad5-8ba8cd7670dd)");
unit.assert_eq16(16'hBEEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1827 8e28275a-ae63-4611-b87d-62cd68dbc367)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1827 4ab7502e-11aa-48ca-84f0-f90bf82acdcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1827 7d6da576-9516-4972-9c41-beb800692da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1827 09756e8b-a476-4a2c-bbd4-27be08fd578e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1827 f3271597-5c4a-4940-9555-159b4a8db8cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1827 710993bf-2458-45d0-ab9f-44ef645287d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1827 969fb72a-03b3-4898-b598-284903ff773c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB3BC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDDDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1828)");
    end
end

unit.assert_eq16(16'h4EA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1828 93550f1b-ad07-47eb-8169-4d46a8db3a7a)");
unit.assert_eq16(16'hB3BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1828 840c2e75-367b-4e22-aa57-918d3cbadcdb)");
unit.assert_eq16(16'hB3BC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1828 f04ece88-38b3-4bbd-9b8c-cb9fff7c5b1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1828 5644c632-1039-45be-8fc4-ff0fc023ce3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1828 3689c5a2-b0ac-4f7d-a272-d7435aa9a771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1828 68316fa5-3a2b-4239-ba79-c82eb12c1012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1828 dab0e57d-7a35-4650-9eb7-0f86914eeff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1828 e929eb82-b7f0-495e-9e40-21a9f66fbf2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1828 e8de33b6-06bf-40cb-893f-e16b2c7b7a6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3569;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h15F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEAFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1829)");
    end
end

unit.assert_eq16(16'h3569, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1829 aef0f812-cb99-48cc-b5f3-d5404cf43b27)");
unit.assert_eq16(16'h15F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1829 84ddae71-a053-4a73-8321-895279295c2a)");
unit.assert_eq16(16'h15F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1829 0e418775-8596-4613-b9c4-cb54dbe1d410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1829 9713987a-4623-40d4-9f0e-16e2ddf4608e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1829 b811d0e5-d42a-453f-97f7-1dc81ad68ca4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1829 63219134-10c9-4ed5-abc8-45183f50c791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1829 73df22d0-b796-4614-a7dc-2a50952282c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1829 3630b712-d523-4a73-ad32-b547982e16b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1829 c147ccd2-776d-4209-8aa7-9dc8b1e38570)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFBAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h01A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBDD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1830)");
    end
end

unit.assert_eq16(16'hFBAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1830 7c20a840-9548-41c7-b5e4-71c76a2a38c6)");
unit.assert_eq16(16'h01A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1830 98466a61-4b2d-4a8b-9c63-eaebf7a1fb22)");
unit.assert_eq16(16'h01A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1830 93890e57-41fd-47e2-a1de-c730d1ad3b96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1830 7f1cd0df-eced-4aad-9f9c-742cce06eb28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1830 3654b256-0da2-4f86-b07a-26c6b9f6b271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1830 9f3706cf-9fbc-4695-8626-58652503da5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1830 453270fa-15e0-4d01-a6ee-d7c163fa4201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1830 c397f16b-1e0f-4807-86e4-1684a3651a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1830 4e779664-63dc-4bee-8687-c382520ccb04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5EB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h270E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB6A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1831)");
    end
end

unit.assert_eq16(16'h5EB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1831 fafd216a-e7c0-477f-8d0a-bb1d9e2c4c36)");
unit.assert_eq16(16'h270E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1831 7413e81d-26b1-43fb-b1fa-7bd976bc28dc)");
unit.assert_eq16(16'h270E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1831 6c55f62b-e3eb-4484-ae1a-24db05fc8d08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1831 6f4737d7-88d9-45f0-9624-6b16e624c34a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1831 7eb267b2-bcc9-42cb-923f-68e1e432be0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1831 ad3e7fba-0eb7-498f-9774-dc05925f0d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1831 6b29df35-5753-44f1-9064-6fb9c5eef24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1831 20fa5cf4-d2cd-4113-ac83-c8b0a3c43a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1831 ad5ee8e4-d5e7-488e-958f-797aa7ae7fdd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h957F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3691;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1832)");
    end
end

unit.assert_eq16(16'hAB3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1832 207d29f8-02d6-4f5b-ae7c-1cddc1a932fb)");
unit.assert_eq16(16'h957F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1832 0594132e-72d2-446f-9dc0-89f1011a5a78)");
unit.assert_eq16(16'h957F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1832 78c2a5f4-b8d5-4036-a9ee-ea3bff746777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1832 85fa2b48-b667-44ba-9ec0-3ca7cb00d319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1832 adde3821-846b-47f0-9656-d352c8a3514a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1832 7496ba86-1ca2-4ffb-8f1c-6382b5c907f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1832 191fcec4-d021-4588-b0a5-e2ab08b435f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1832 a29dc97d-c884-441a-bf65-61eea9ab57b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1832 8be602f6-3c09-4227-8310-6cf720d5e8c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h34DD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFDCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h70AA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1833)");
    end
end

unit.assert_eq16(16'h34DD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1833 0897f611-3074-4344-88f5-f1ecb356e1a1)");
unit.assert_eq16(16'hFDCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1833 da86aaf8-d3ae-479a-8279-78d56d5b08ab)");
unit.assert_eq16(16'hFDCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1833 206c3949-d11d-4f17-8ab3-ca9838b23bbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1833 b059e516-1d77-4355-aca5-f8e117a200aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1833 9ff8324b-90ec-44d0-bb4a-b750e1a2fe17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1833 bc566a2c-3a8d-4d9c-824e-2dc1e33b84d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1833 f754fd3f-6f64-4e1b-835d-c75b4fecbd77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1833 d3bdef9e-fe25-453f-a304-29337bb792e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1833 a1392133-9ef2-443b-a956-2e5ff98e5e29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8922;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4AB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6F6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1834)");
    end
end

unit.assert_eq16(16'h8922, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1834 4786fb18-901b-4161-b617-39a8c7fc8c34)");
unit.assert_eq16(16'h4AB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1834 fc6debfd-bc0f-4851-bb49-42154a7f9072)");
unit.assert_eq16(16'h4AB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1834 2aa38b68-93c8-4167-8258-3dfa96d0a25b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1834 e84d471b-556f-47e3-a41e-eab11eda125f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1834 7f088f2c-efa5-4443-a594-e65026dbd80b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1834 e61df3ca-3879-40ec-b4ec-6e93215b4e52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1834 fa473fec-9dd2-4e65-8ada-26d3353bb0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1834 ba91158e-9c0a-4b68-b9c7-46b428bafccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1834 ea288673-72ed-43c9-a6cc-1f0ec9e3adc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h335E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6695;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1835)");
    end
end

unit.assert_eq16(16'h335E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1835 99e0da9f-ebe8-4898-9aae-3982c67dfb85)");
unit.assert_eq16(16'h6695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1835 4cceb8d5-a99e-4144-83d3-fd7c8ab693b6)");
unit.assert_eq16(16'h6695, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1835 47448a45-8147-4597-85a8-febb6b74bbff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1835 033d77f9-5b3d-4f4e-81d7-6f7c2d601a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1835 28263cf5-de2d-4f3c-bc67-92d538ca5d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1835 09922ded-afdc-40e6-975d-97c3947b3684)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1835 4e13fb8c-4286-426a-aabe-9bc7a5346245)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1835 996c30b6-9705-4c8e-be38-59e875aebb15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1835 4309e763-adc7-4409-a1a1-2fc86eae6a5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h533C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3023;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4D06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1836)");
    end
end

unit.assert_eq16(16'h533C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1836 bf7db376-1858-4950-9204-f4abc88347e6)");
unit.assert_eq16(16'h3023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1836 09cc5eb0-73a9-45ca-a3c6-36a807c6ac95)");
unit.assert_eq16(16'h3023, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1836 91b3733f-7725-4142-9bd9-3282c1f3cdd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1836 6b713dab-3e4d-49fc-b634-2d7b04e767c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1836 684768e3-53d5-40e6-aefb-a5ed3230e68e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1836 9046d4b8-92f2-4210-97b1-ed9360e53c55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1836 74489bb7-f56b-42f4-911a-4c10535216cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1836 bd1206a0-9777-440c-be7c-0651ac8bd53d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1836 ea205a2e-9c2c-42ed-9443-6c491e773159)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC6C4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2A27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1837)");
    end
end

unit.assert_eq16(16'hC6C4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1837 0ba1c645-70b9-4a1e-88d3-5da2f9dab69c)");
unit.assert_eq16(16'h5E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1837 d59c0e33-3a8a-4960-bafb-ffeef9d80500)");
unit.assert_eq16(16'h5E64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1837 fb81e3b8-e1fa-4f98-bfb1-7e54344eb92a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1837 427e99c0-d06e-4e50-b2c9-ae15b79d8fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1837 d26810c2-b0c3-4312-bb57-0ae5ad4a73f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1837 3b4a2c37-feb0-4ec7-a7d2-aa5a5df1f771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1837 639526b9-895b-46e6-8d7f-a19585f979be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1837 3962ed7c-fcea-44f7-8a65-999b033747e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1837 8fcc7c37-4a57-40df-b27b-a53225195bba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h92C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCD0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1838)");
    end
end

unit.assert_eq16(16'h92C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1838 ad8a5cac-fda1-44d8-a5b1-810853e3895b)");
unit.assert_eq16(16'hCD0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1838 027baa34-6574-41fb-9efe-db826356b54c)");
unit.assert_eq16(16'hCD0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1838 252d749c-a646-4013-ab29-5b901ef3c4ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1838 a7d54c8d-18ec-4b28-ab60-f09dd4bc140e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1838 ad03f2d8-8e45-4ee6-ad17-8b7630bf4f36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1838 4b5add3f-1aed-4833-973c-02e8f2d811d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1838 c8b0bc1b-53cd-47fe-9858-e876d7d53327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1838 189aad24-ccd2-4508-a081-dc7d9a3fb56a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1838 24a57253-8583-4ef0-a0f7-964fe5a3ac79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7CA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h769E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBEDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1839)");
    end
end

unit.assert_eq16(16'h7CA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1839 67f0cb0f-50e6-4a02-9efe-35e96a3ca5cb)");
unit.assert_eq16(16'h769E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1839 c5452fa7-81eb-47ea-96b4-f2fb21e1a937)");
unit.assert_eq16(16'h769E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1839 41aa164c-c653-415c-8b5f-29cb3ddc58eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1839 696bf247-eb85-4a96-a515-8e920bb74f5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1839 9724dc7b-c083-4649-b4b3-e2fd00368055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1839 604c72f0-c4d7-409e-b0dd-4996152572fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1839 e30b56b9-3025-4a02-a275-4e9e0c134068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1839 f94f18ee-966d-4e1f-9f5e-291a5872628c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1839 f28cd1e4-0e80-47cc-88bf-3e840022a4b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h717E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h034C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB00C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1840)");
    end
end

unit.assert_eq16(16'h717E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1840 5de18649-e7c5-44ba-afbe-a18b054b8a60)");
unit.assert_eq16(16'h034C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1840 fa948f98-c2b3-4a5c-ae80-655468f4e2a7)");
unit.assert_eq16(16'h034C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1840 13ad1ab7-7b1c-4897-93af-66ef19f239c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1840 b52507da-392b-447c-a06f-6e6431a9296e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1840 a61eea4a-bc9c-4d59-899c-58ea35a5b53b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1840 ad6353de-4862-4db9-aee4-ab55061df0e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1840 11676617-6ced-429c-8fdd-526c584302d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1840 f8eebf44-5a22-42fb-9f2e-db62937bdd97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1840 c44f9f3a-13bb-4f6b-94f2-cff731be3a11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0325;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h044B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1841)");
    end
end

unit.assert_eq16(16'h0325, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1841 42090df2-3324-4b92-b105-44ff732c2ef1)");
unit.assert_eq16(16'h044B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1841 9de3c3b5-7a37-4011-8eee-7e758125b7b2)");
unit.assert_eq16(16'h044B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1841 3aefd6e6-039b-4f4e-aa39-dabddde63af3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1841 48674782-9e22-46df-863b-1a260eee53fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1841 603db91c-a13e-49fb-a30b-e1ad2744cb7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1841 0e9346e1-986c-4b91-8eb6-1dbea93234c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1841 f27c3271-cad4-4c8d-b075-3fa9cf9cac94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1841 7f828bf9-e58c-4b38-ae33-e1268a18b9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1841 10a61e7e-1a09-4374-9afb-cd57916e5324)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3C84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA786;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC243;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1842)");
    end
end

unit.assert_eq16(16'h3C84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1842 cd0fe4cb-7c93-40ee-bf8d-0db8daaf2cd9)");
unit.assert_eq16(16'hA786, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1842 4f6eaf66-115a-4f9b-98bf-4c3ee7409ffb)");
unit.assert_eq16(16'hA786, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1842 db0402d7-9762-426c-b239-640df24ddc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1842 ac9cd785-664f-44f5-b0c1-f14ae83a16f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1842 c2091e9c-ec8d-4f07-b0db-dcae03e31c5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1842 2ea1dfc2-3a97-458b-88c1-de8d1ce45a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1842 3534a0cd-d3f8-41b8-a0b9-9b95383bf414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1842 db62d68a-0970-48eb-81f0-945b0cddeb02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1842 ebd7f71a-bb2a-421f-a4bb-a6812b19c111)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6F9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA3F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3FAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1843)");
    end
end

unit.assert_eq16(16'h6F9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1843 b98f8b27-be55-420d-a555-ce6f8f45cf5f)");
unit.assert_eq16(16'hA3F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1843 7ab4ec36-5699-4706-9459-ed20ceadd66f)");
unit.assert_eq16(16'hA3F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1843 4a578a70-48a5-4cdf-a5ad-da643d18a91d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1843 4ca39a2c-afba-4896-8b40-b09c6eb7fc61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1843 281107a0-c183-49a3-bac3-4d16f852f2fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1843 ffe74795-2f9b-4696-b732-8c187bdc1f2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1843 26e51606-0a3e-49af-9e15-66f93bb77343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1843 7ac6202e-2217-4efd-93a6-8ce1a2114a6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1843 78ebf2c6-8547-42a8-a3a3-ae0f3547b272)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0417;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD9E0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h188B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1844)");
    end
end

unit.assert_eq16(16'h0417, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1844 2367f6b3-9669-4143-9682-3d540848489e)");
unit.assert_eq16(16'hD9E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1844 45f8cc28-f04e-4f17-9439-83c6b03e8e3d)");
unit.assert_eq16(16'hD9E0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1844 9790ab01-1232-4d2a-8eb8-795c1a057e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1844 51b2d071-3ec5-45fb-88be-187d57de076d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1844 98127bac-92d5-4fc2-83f4-74691004049e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1844 760d478a-5019-45f5-8835-e681d77b9e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1844 c180a6eb-c97c-4d51-8885-ede796338132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1844 6901332f-99ba-4933-bc3a-988fe93d39ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1844 d76a40ee-d4c1-4594-b368-b80ddab27b9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h85FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD1DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA59A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1845)");
    end
end

unit.assert_eq16(16'h85FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1845 5761f924-68ae-48b4-90f8-c929d36a7cc8)");
unit.assert_eq16(16'hD1DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1845 6436b4d5-0869-4186-8060-eae3f673baf9)");
unit.assert_eq16(16'hD1DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1845 5f818aee-5522-4910-84d1-48dbb53eeb84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1845 65e8b0a1-6021-4667-9910-21c9b58fc3dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1845 5250f559-fd65-4db7-a065-df95358d8b56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1845 a95aab4a-be02-40bb-b4c6-901c5f9d60f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1845 052e5490-5f87-482b-9726-5a10eb9f5e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1845 87c04c34-7489-44f4-829f-2b6d4936693f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1845 717da9ee-adf0-41a9-8d47-a4f8c5f469f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB7E2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1DDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9AA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1846)");
    end
end

unit.assert_eq16(16'hB7E2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1846 a5e0745d-6adc-4a15-85e5-7c73ff423769)");
unit.assert_eq16(16'h1DDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1846 479d7a5e-7a62-486b-af03-0ffcd9103b9d)");
unit.assert_eq16(16'h1DDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1846 fbf222e1-a0d5-4a39-9814-4b7fbc3a0ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1846 72103c88-ee7f-46fd-946a-d57dcc4cba96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1846 8ba99e7d-8c72-444b-a8bf-a3f93a5fe119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1846 04a44e4f-1bdc-4208-8891-8e6f920c0956)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1846 37007cfe-b11e-4aef-b55f-e519674d222c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1846 72991e2d-e803-43b5-b959-4e6b7f76a6e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1846 3a8792ac-6da7-40b5-b093-4d1d07245517)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h89AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEB20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1847)");
    end
end

unit.assert_eq16(16'h89AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1847 293b9d51-3800-4c84-af2a-50a7b680f236)");
unit.assert_eq16(16'h9A63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1847 bd124ecc-371a-4ef4-80ca-ec7ceb72e822)");
unit.assert_eq16(16'h9A63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1847 1fe0207c-1d9f-49e7-8011-9f2361c2e584)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1847 f3fa452f-3189-47c1-a19b-36218a8dd6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1847 35012794-7ff1-4341-920c-94e29731f22f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1847 e927cc84-28f6-4da5-9952-7b54a548e0c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1847 c3fe79d7-c165-4832-99ce-d143a52edbdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1847 1eea6535-f5bb-4914-9bdf-d4985ecf4470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1847 9e2eea9d-21f5-4840-b751-4550a24450a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE53E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6689;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3E0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1848)");
    end
end

unit.assert_eq16(16'hE53E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1848 e995c09a-73e6-4143-80a6-b1dcb87fcc08)");
unit.assert_eq16(16'h6689, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1848 b07857b7-26f0-4c2f-8260-c8bf324a2890)");
unit.assert_eq16(16'h6689, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1848 33380104-6818-4874-a0b0-65735693d661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1848 245ce950-e299-4755-9066-c45a2ab31eae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1848 c004acf1-cba1-4a94-8543-6c4b2dc31c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1848 13e8846c-3b70-416c-a8b2-d0931167c3e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1848 3c11465e-44eb-478e-ad81-ad30be8d0011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1848 630572fc-c61d-4769-86ec-3b28207ae1fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1848 31555947-0962-4d18-98c1-e02427408837)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h558B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD192;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB227;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1849)");
    end
end

unit.assert_eq16(16'h558B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1849 56a7a6dc-2865-4d57-8acf-4c401924cbb2)");
unit.assert_eq16(16'hD192, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1849 97ceb67b-1f3c-4db4-a331-33d474f8f193)");
unit.assert_eq16(16'hD192, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1849 2846cfa3-e877-4c9a-be9e-264cb5d01380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1849 721e9657-f7d5-4cb9-a208-ba7358c27088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1849 56bfb200-a92c-4cba-9705-1c1790b19915)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1849 a2332053-a858-4199-aa9a-424fabb4327f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1849 3fae92dd-d0d8-4f39-a579-df664e3622b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1849 12a641fa-eaab-495a-b602-e24441c4480a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1849 d0c3e119-f765-48c6-9bb3-787cb7eb49b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9803;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h383A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD4C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1850)");
    end
end

unit.assert_eq16(16'h9803, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1850 06d96f6d-1577-4d40-a730-5e59e1cd5ab0)");
unit.assert_eq16(16'h383A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1850 b718c7a5-7864-45f2-8301-062fcbae9321)");
unit.assert_eq16(16'h383A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1850 b31a2fdc-1340-40e3-8bbe-6d89351a128e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1850 cf10186e-45c8-4c5e-8971-92e4193b2be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1850 5b658461-3a68-40ee-bdac-e4405ff7312c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1850 4f8ee9ed-2ab9-467a-9479-7c1b9f216417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1850 cb6376bd-49c8-4529-8d7a-374da751d9e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1850 a51b55df-1edd-40ff-bfe3-c422ff01919f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1850 e7fbcdf3-7807-455d-9ae7-cab925525ae8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8309;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAA0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h24E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1851)");
    end
end

unit.assert_eq16(16'h8309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1851 1bdade09-cbda-4e69-a82b-6bf518be712b)");
unit.assert_eq16(16'hAA0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1851 e58ce526-f80f-4fc3-b000-715e2bd7a885)");
unit.assert_eq16(16'hAA0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1851 ebe5e714-05b9-43ab-a8e0-b3d9683eb987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1851 0660df00-b352-4844-b77b-ce074f72cc9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1851 a4526d23-8ce6-4893-bf62-750be2d911c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1851 ac5c1519-bbe3-4ac6-a4bc-17d616d40b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1851 482bdd0d-7a81-4c39-8908-2ddf8b4d5f76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1851 e87b79ed-84bf-4b62-9439-bd52bb86b9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1851 f2cd9919-bd67-40e1-b68f-1a63223e008f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2534;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE6AB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h88CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1852)");
    end
end

unit.assert_eq16(16'h2534, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1852 eb5581d4-baa0-455b-9c13-f612d63404b4)");
unit.assert_eq16(16'hE6AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1852 ecfaa66e-aad4-44b1-919c-8b7bb14f77ca)");
unit.assert_eq16(16'hE6AB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1852 6e447eb9-5531-4a44-afb8-989a4bd23b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1852 17e5b05a-ca3a-4641-ba70-94c1a6d002ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1852 51f5249f-442d-4787-924e-a9ca09858d94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1852 eba76703-7042-491a-84d1-595d066c7f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1852 2a9b11ae-8703-4dc8-a3e9-7af29a5583b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1852 de166d9a-79da-4ebb-acd1-655b0cf7ed9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1852 a6b4d0a7-3c93-493a-9f72-bb725da3e08a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h281C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0BC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEEBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1853)");
    end
end

unit.assert_eq16(16'h281C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1853 cf2ceefc-7b4a-4829-ad99-775f83624bcc)");
unit.assert_eq16(16'h0BC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1853 aafb6fb8-e417-4549-9e36-3014892e5ccd)");
unit.assert_eq16(16'h0BC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1853 0585c598-d97c-4422-8bc4-599b63e59773)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1853 8b227b8e-6635-4aee-aa59-c0d97591a61d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1853 3e4fe419-289b-4956-960f-2c70845b3ac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1853 b5755f29-eb1f-4482-9318-d526e7c6af1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1853 9b4e5d81-6541-4c1d-9e7a-fe93a609ad72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1853 e143a555-4e87-47ef-9153-780044a3d963)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1853 095a977c-bd2b-4b4f-b541-70945cde10c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9752;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h954D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7FDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1854)");
    end
end

unit.assert_eq16(16'h9752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1854 b8bf39e7-32c7-472e-bf98-89bb52a79158)");
unit.assert_eq16(16'h954D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1854 43061b4a-f27a-48a7-9113-8b44622e7feb)");
unit.assert_eq16(16'h954D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1854 f0d7ed01-da5f-4242-9766-e3d7903f58c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1854 d7dae9e6-9f81-40e1-9866-43b4a52ac963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1854 705ae1c0-fa76-4f51-8ac2-c0a5f094f22e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1854 3953bb0a-d265-4256-9aef-f32324802423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1854 b4de9e21-d865-4edb-9406-1f7a361f87b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1854 977535c3-c58e-4769-ad30-aa26a8b6123c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1854 d0e7824b-39b5-4a72-8d51-dfa237a08d63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB8EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4B94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h20F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1855)");
    end
end

unit.assert_eq16(16'hB8EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1855 fb36c53a-7e33-47d6-b75a-d8887851421c)");
unit.assert_eq16(16'h4B94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1855 4df8a8ec-93de-4027-b87f-046aeaa32d61)");
unit.assert_eq16(16'h4B94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1855 d3899f9b-e883-4949-959f-1df27adf3057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1855 58903285-acd5-40b5-a01c-b03b480b2c3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1855 cc77708c-cd58-4a0a-91e9-86b9f2b0477c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1855 73afede7-e360-4cc6-9219-d91cf865c36e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1855 bb9cfba5-dce8-49b7-8502-81289baf4cc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1855 80a04b1e-2ca6-466d-9cd5-c6db14cb2207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1855 a654e7af-eee7-40f6-8692-9d7164309577)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB08B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8D9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5916;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1856)");
    end
end

unit.assert_eq16(16'hB08B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1856 c39edd60-4aa8-457e-871c-202068049e9c)");
unit.assert_eq16(16'h8D9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1856 8b8ff4d6-ba5c-45f7-adec-e5c748ba1b5e)");
unit.assert_eq16(16'h8D9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1856 aa69d753-b6cc-4341-9052-08698da1b704)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1856 72637f4c-862b-420c-880f-53b6661151a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1856 beb31ae5-bb00-4f33-bbe2-b1648d7d4ebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1856 e78c0610-e37f-47c0-9cf0-d37002efaaae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1856 09e17958-f84a-4d0d-ba49-ad8fdc3557cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1856 1d36e892-8fe8-470e-96c5-f3eab3014476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1856 2e174295-fdef-447e-9d09-2ab88f4cd89a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDB5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5505;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1857)");
    end
end

unit.assert_eq16(16'h8B88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1857 9f2238c4-b844-4cee-9360-c4fcdba7f11d)");
unit.assert_eq16(16'hDB5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1857 ae81a7ed-28ed-4350-9b1a-737d28cafdc6)");
unit.assert_eq16(16'hDB5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1857 7c7fca97-eef1-453c-bb76-c7efbb69aee9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1857 c9a79bd0-c3d1-4a31-ad9e-e86329d818d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1857 dcc06f63-fe77-492d-9113-83c479b07bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1857 5f4750d8-ce85-4302-ac45-40fe2b1afec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1857 04e211d0-4fd1-456b-b1e9-bff1ad0fee2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1857 e2d44d62-5314-4a3f-aeac-f47fd5be35e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1857 cc78e756-9961-4c62-97f7-bb0200d8fa17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h231F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h537F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7AEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1858)");
    end
end

unit.assert_eq16(16'h231F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1858 f6533664-ef8f-4c13-90ed-82d58385cb53)");
unit.assert_eq16(16'h537F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1858 98b907d9-804a-4e22-bf71-064bea5e9a43)");
unit.assert_eq16(16'h537F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1858 44cc5470-d66e-4184-8f23-d2fe7127850d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1858 fb1b8a2b-03b2-4468-9c06-41928eb58dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1858 2fbd59b0-30bb-4565-8555-866fb703397e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1858 c0043004-93ba-4e37-aa62-8374a14211eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1858 27dc96e2-7a5e-409e-bccd-1eb2cd6a6b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1858 e6378010-3648-454c-a6ea-1782c8fb3770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1858 214b52ae-3bf4-4af0-9326-05c1687f1919)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC55D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3018;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBCFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1859)");
    end
end

unit.assert_eq16(16'hC55D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1859 72b1ffcb-9e8f-48d5-a27f-c8751f8ae3fc)");
unit.assert_eq16(16'h3018, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1859 24eb99cb-e1bb-4a83-94c3-9e916433337e)");
unit.assert_eq16(16'h3018, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1859 1d08278f-1123-44da-8d37-ca76ebc77b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1859 29af5091-2aa4-49ff-8e68-db3d3b5e35c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1859 47545785-6af5-4ba0-9f5c-bff01b3f4f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1859 f33982d9-4b24-4160-ba35-5a8e4b01ccbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1859 0a9add0c-01f9-487f-9e44-7ff1c062366e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1859 33ef6630-7e0e-430a-9eab-4b5f382106c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1859 a95c2e55-2bfd-4a76-adf3-a376df034741)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7AE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7073;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF634;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1860)");
    end
end

unit.assert_eq16(16'h7AE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1860 75e9c60f-0a9b-4088-94e3-ab584e3bbd04)");
unit.assert_eq16(16'h7073, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1860 e639cefa-8650-4390-bf85-fe81c899dc85)");
unit.assert_eq16(16'h7073, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1860 a59a6543-e03f-4362-b801-f0a1f65e15ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1860 db3ad377-9eaf-4aed-a700-77f1520abdb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1860 4e2b8079-0e7d-4650-b99d-d0beeead010d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1860 988de590-6257-4459-bf8b-c77ca688fecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1860 eefcc078-1395-4252-ad74-47b4bc8a4b45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1860 75d9acb1-3e90-44eb-afd2-2974f1b79271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1860 4d50fe9d-29c0-4d91-8d0b-17f8d2c35ce9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCA0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h420E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h38A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1861)");
    end
end

unit.assert_eq16(16'hCA0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1861 1e10c1c7-0a4b-4ec0-85c3-0cc0551a40ab)");
unit.assert_eq16(16'h420E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1861 1d07d2b6-1824-4307-b7be-da415400ae40)");
unit.assert_eq16(16'h420E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1861 9068afc0-b532-4005-af8f-07f28df9b333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1861 dd9c4c59-5a28-4b7c-b463-fddce72fa1cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1861 929f60e5-a462-4609-82f9-1ed941608e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1861 77b4ddef-237b-49ac-9d7c-9635a85c2b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1861 824bb57c-8890-4bbd-8f99-4aa99a93d211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1861 c3c875a2-5e49-46a6-a9d2-befed071aa43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1861 4536852e-48bb-4520-8db4-0fc717fa3413)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7309;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h31FE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9057;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1862)");
    end
end

unit.assert_eq16(16'h7309, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1862 b61c6ee8-0c60-447f-b60e-805c5e91aa65)");
unit.assert_eq16(16'h31FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1862 3365f216-a546-46eb-95e1-1cd3f4ea83ac)");
unit.assert_eq16(16'h31FE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1862 c552ca5a-9406-401f-b444-bc6d4c872194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1862 d590b084-9e8a-49b5-a56d-5727327effcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1862 3a838e17-5c04-421c-bd9b-108e70f34319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1862 a0afa96f-fc80-4f27-8bdd-f9263915d9b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1862 9c30f838-41b3-45ee-855d-5a8662095e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1862 8a47b83c-daed-4e7e-85ce-2b2a5be7ecc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1862 2df16c93-ef93-402f-bfbc-50006ee7ba23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE728;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB278;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h80F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1863)");
    end
end

unit.assert_eq16(16'hE728, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1863 bd794d21-089d-46f7-961c-0782fc369d96)");
unit.assert_eq16(16'hB278, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1863 21495ad8-034b-4fdd-bba7-50afbc91ac0c)");
unit.assert_eq16(16'hB278, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1863 ec4292e5-a0c4-4d50-8e94-dad50d2c3ca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1863 3c5a09a8-d065-4008-a2b6-7e14a018c860)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1863 ded02244-577b-4be8-9f56-d5aa294be307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1863 fe547234-07b4-4d86-980d-74c07b612037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1863 e5459849-ae71-4a1a-b2ac-a10899ad3c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1863 cc3a62b5-b735-42c6-86d5-25fd0996aa7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1863 4232ef29-60a1-4159-8b6a-f1ddcec5e363)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7EEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB370;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h04F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1864)");
    end
end

unit.assert_eq16(16'h7EEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1864 5006243d-9393-4638-9e60-607bf5937c7b)");
unit.assert_eq16(16'hB370, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1864 dd0918df-2ec0-444e-ac2e-e28ccb933c29)");
unit.assert_eq16(16'hB370, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1864 ab042550-34a4-4b8a-9d41-6480c7bfa40e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1864 d173c463-dd61-4893-828c-356efb7bd7bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1864 e25eabcd-f148-4cf8-abeb-ae2dfa44ad57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1864 47bbacb9-f4b9-4234-b599-fd41ecce3356)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1864 f1d92b96-6899-4af3-a0c2-97fd68f0ed5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1864 fc13ac9a-1da2-4650-93e9-2b0adec2428a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1864 cb85c3bb-605f-4801-8dec-1176ea8dc3e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA2F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4A7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7420;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1865)");
    end
end

unit.assert_eq16(16'hA2F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1865 c2275cef-4c35-48d3-a11d-2cd777c80529)");
unit.assert_eq16(16'h4A7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1865 53b48dd5-b8a7-4c83-afd6-236d90a0f090)");
unit.assert_eq16(16'h4A7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1865 d030f48e-bb73-44c8-9bf2-408f294365a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1865 b97104a5-6c0e-45fd-be46-7c43f94a2cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1865 4dac83c3-7f4e-4532-9af1-4809da12217c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1865 1ddd4dac-6bd3-447d-8343-838a8a3d7442)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1865 f9b7acaf-abbb-4048-ad74-c338f96a60ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1865 ae719106-d8d6-4ab4-b0ea-a89c3be8fb63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1865 f6f5b94b-38a1-4b2f-a106-7201441dbef0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h298F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6733;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB91F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1866)");
    end
end

unit.assert_eq16(16'h298F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1866 c5b7e3be-1a52-4e44-9c1e-27b519c77278)");
unit.assert_eq16(16'h6733, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1866 2c280981-093c-48f7-9b98-aff6875d2443)");
unit.assert_eq16(16'h6733, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1866 4b4ac6eb-f314-4704-bf7a-1857717e43d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1866 f5e813be-9113-48e1-b377-5ed82b63d32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1866 6fb1b997-d5b3-4886-9881-f1741f3dab71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1866 748058dd-8987-43eb-9ae0-4d204d85c09d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1866 f6d7d28f-89fa-43b0-be62-34c36e992d6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1866 3046769d-0739-4e15-bb2c-0224298ef5b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1866 1ab744a4-6380-4845-9bf0-31b6f714d811)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h59C9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA41F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC503;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1867)");
    end
end

unit.assert_eq16(16'h59C9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1867 cb0b0ae9-2a1e-48cb-bdf3-96c05cc61c81)");
unit.assert_eq16(16'hA41F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1867 cae38f7d-54a4-4a27-b35a-1beb7a72c3e4)");
unit.assert_eq16(16'hA41F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1867 0a81566b-4c1d-42ea-9185-7f62a49cf95a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1867 2d1ac34b-937c-4750-ac3a-f21117b92e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1867 8a8e882a-0257-4ef5-aa55-a80a50818544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1867 7ca4fdac-f5f5-49a7-8df3-2ad6a7d10039)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1867 9db84656-5bbd-4363-86f9-03b816b0cef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1867 575cb35a-8aa8-442b-a632-cd3a97c48e73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1867 5d6efb55-974e-48d0-9af4-31a02050948f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7902;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0410;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1868)");
    end
end

unit.assert_eq16(16'h7902, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1868 3b5209cf-17c7-4d16-8c2a-8a3414aee7c1)");
unit.assert_eq16(16'h0410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1868 a3cf61e1-1e08-49b7-84ee-6f6c936ce7e4)");
unit.assert_eq16(16'h0410, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1868 c851cd65-f9a0-47c8-b1f3-afb250026f05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1868 01c2f87a-6243-42b7-b281-2a3f3c72b651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1868 d6caf832-7155-4a6f-b620-ccc7dab16ee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1868 88e6a796-4220-45ee-b7cc-e659ce0a92b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1868 5b2dbaf4-6478-4046-ae81-f68184e50df8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1868 e345b980-224d-43cc-b4af-c48f638c8a75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1868 925daf92-699d-4ecb-8739-9579f8007975)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8012;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h135A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2203;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1869)");
    end
end

unit.assert_eq16(16'h8012, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1869 cb7289c8-40a8-493e-8348-9926c98f58ee)");
unit.assert_eq16(16'h135A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1869 aa822e7a-607f-4c9b-8e22-9ee6da56d134)");
unit.assert_eq16(16'h135A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1869 c925b15f-493e-4e0c-88ae-bdb495622d41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1869 79464eec-da33-4340-bfac-185a9659b6fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1869 336d31b3-e00f-427b-8ecb-ddb9035d2dbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1869 844455cb-8eaf-4099-b566-7fb8d6615a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1869 c2ea021b-9d74-4f2a-82d6-9325ae25acf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1869 11c10b73-435e-4651-90f3-2ab8697e6775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1869 57bc5020-f6db-4a77-9aeb-185e1c77504a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h57DB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD366;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h763F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1870)");
    end
end

unit.assert_eq16(16'h57DB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1870 ae02ffc8-9c8c-4113-8e57-326c35f199e2)");
unit.assert_eq16(16'hD366, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1870 6f87ac7c-d666-4ae6-9d4b-25dc02334ce2)");
unit.assert_eq16(16'hD366, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1870 5801e79d-9798-4c2f-8a05-1817f19b7a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1870 84df240b-a9dc-4eb1-bba5-44a3a89e0cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1870 79b575b2-ce54-4621-9d7a-264238f52c83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1870 272cfb0a-6dcd-4b3c-b90f-a4cb03243c3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1870 c8a6482e-d291-4c4e-a7b0-e8f41b135c0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1870 9c508eb7-2c66-4caa-88b5-5d7ec2a82d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1870 83f25b7d-b8fe-4d50-8725-06b910dd302d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD908;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA723;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD8EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1871)");
    end
end

unit.assert_eq16(16'hD908, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1871 e195266d-da5c-4862-809b-d43c974e3b38)");
unit.assert_eq16(16'hA723, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1871 39f8bbdd-ecc6-4d6d-b425-67d4db2e4892)");
unit.assert_eq16(16'hA723, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1871 75afe6ca-4b6a-4d97-a430-7552c6d9f913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1871 80639c00-0e48-43dc-9d91-4bed21000c30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1871 9dafe10d-641e-4ec8-80dd-be8b85e3bb6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1871 d67e177b-30fb-479f-aab3-4b7bd2779a34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1871 d5268932-358b-4d7f-ae10-f10df6f7c17d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1871 ab763672-ba31-4583-a529-5e7b6d1d97b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1871 fbc3cf40-de4f-4eee-921c-2ec952262b92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6500;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hACDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1872)");
    end
end

unit.assert_eq16(16'h6500, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1872 257413ba-d3a0-49b8-ada6-ff3d564d48f2)");
unit.assert_eq16(16'hACDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1872 f8d48227-2e20-4a24-960b-f1e898b10643)");
unit.assert_eq16(16'hACDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1872 45fb7e24-e0cd-4f25-a422-8766a6d5c6bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1872 b273b26c-7dd4-4426-9660-c161e88cbd7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1872 9838ec10-6d2b-4a7e-95f3-f039c9f2b1ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1872 12d95d69-2ae8-4830-b9a7-83e4613317d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1872 bf526031-21d6-4c5a-8f9f-a9d940fed1b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1872 d368ca94-a9e6-44a4-87e0-4bcb1be99870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1872 8085f249-156c-4074-9ac0-72d1c1009dd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB4C5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB69D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1873)");
    end
end

unit.assert_eq16(16'hB4C5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1873 b767ff56-cc8c-4692-88e4-c48056b3d0a6)");
unit.assert_eq16(16'h0C36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1873 97c2eb96-c01e-4eed-b314-a649209f8ac1)");
unit.assert_eq16(16'h0C36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1873 387b6050-fe3d-48ec-9319-68fa27ed9b40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1873 181d2ea9-6969-40ec-beab-b50438e2474d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1873 55d62d59-e18d-489f-8072-4cb0d2b0d8f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1873 b668b0c8-5449-448d-b8c3-4081f49023ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1873 566aa804-a68b-4310-9f47-791f3f5b4237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1873 ac8f0185-2431-49f4-8ea9-9f3a1a0a9553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1873 5cad7e22-98d5-458f-991c-afef76c40e65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8CE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2CFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h167E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1874)");
    end
end

unit.assert_eq16(16'h8CE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1874 43bbb842-7f68-43bb-aa84-976034db1fc5)");
unit.assert_eq16(16'h2CFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1874 a8d82546-d909-45ed-abda-5c162217dfb9)");
unit.assert_eq16(16'h2CFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1874 3707deb8-d4cf-4d6a-a570-69044e7b894a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1874 91cceab7-a64c-4e4d-95b0-7b7f4d1ea48b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1874 4df6de1d-6450-4509-9552-b53f843ec8a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1874 7d56154e-8e6b-41ab-8dad-1741d5565920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1874 cc3e4460-fc97-483c-8770-6943b0859a66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1874 0b3134c9-adcd-4111-9829-a16c630fab5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1874 67b5ecb1-9fb3-4fb1-a3ed-382de48986b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA986;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCE47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h811F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1875)");
    end
end

unit.assert_eq16(16'hA986, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1875 4712a48e-7daa-48e2-b332-a41efcbf1687)");
unit.assert_eq16(16'hCE47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1875 507dab42-571c-4a76-b2e6-0fea41e8e04d)");
unit.assert_eq16(16'hCE47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1875 e30bb37d-d60c-45a4-aa45-85c5dd8c27f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1875 595165b3-3ba7-443c-b556-3200a2972273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1875 5fc72daa-487a-4a21-a1fd-98351a22c217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1875 78fa6cc4-cdc9-4e5b-9f1a-fee505ef16ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1875 00a3827a-6201-44e5-9b21-fe258c60cb0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1875 4cbbf2ae-5ec2-47fa-8050-2944d7c904c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1875 e6046509-6709-44c6-bfa0-4321ad144eac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8D45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h89EC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB887;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1876)");
    end
end

unit.assert_eq16(16'h8D45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1876 ffff3a63-e2da-43d3-8d07-d95b71c727bc)");
unit.assert_eq16(16'h89EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1876 e6c9f99a-15fa-4137-ad90-e44c79205b6e)");
unit.assert_eq16(16'h89EC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1876 0ae6101d-45f0-4721-9f4f-8daed75c9b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1876 642a6aa4-b7e8-472d-80f2-6824e792ca56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1876 3148bf57-a659-4bba-b83e-a89383ff102d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1876 49b2ec5d-4645-4251-8231-e222f5f7f329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1876 8d646cc3-db49-4845-8d6e-53a2e9a13fb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1876 b44ac5f2-2f2c-4b14-af1d-764f19aba8e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1876 3a35a3a8-6754-45de-9d16-6ef341d73e93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBED1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8362;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF59A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1877)");
    end
end

unit.assert_eq16(16'hBED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1877 92aee569-7fbe-4a9f-9bf1-f3562295dfc6)");
unit.assert_eq16(16'h8362, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1877 b299b532-b883-4666-a60b-7f3a81c2c97f)");
unit.assert_eq16(16'h8362, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1877 6f645de6-eb1e-4462-847c-bce46dca6c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1877 f29ef2c0-40f8-4f09-97a0-666d7808bc59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1877 097d3ba1-d97d-43fe-8238-2ff16e321516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1877 c92d3974-8243-4c95-b5f5-4484ccda7b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1877 00f3af67-7438-46b0-ab43-088ba15bd259)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1877 d21298fb-f48b-4590-b1f5-9d83c1beb75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1877 a3de59ce-2eed-4f20-bf65-e5184b9c7a0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC0C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5EAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE792;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1878)");
    end
end

unit.assert_eq16(16'hC0C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1878 ba4ce4d7-9bd3-491f-91c0-12505588da07)");
unit.assert_eq16(16'h5EAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1878 70ac3d8b-5e84-49f6-bf0c-4d2d887b451b)");
unit.assert_eq16(16'h5EAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1878 6c0b1351-7007-4369-a608-a69ae5de131a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1878 4b1e431b-76c8-4e6f-b794-1a8d9a90561e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1878 5d492c9c-aff4-4fde-8323-221f1774549b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1878 77d4162f-153d-45b6-b7bf-83951e999fa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1878 f4c037f0-a48f-4b85-b6ea-bf4e83f9f987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1878 dacff8be-0295-471f-ae43-28c0d87ec18e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1878 f5625b1f-8fff-4f96-8f63-5745b5a6c238)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0BB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h55A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2FFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1879)");
    end
end

unit.assert_eq16(16'h0BB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1879 0e623cf0-0f98-4828-badc-060b3f369b5d)");
unit.assert_eq16(16'h55A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1879 20cff496-28eb-4920-8811-648756bfac43)");
unit.assert_eq16(16'h55A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1879 5dd081de-1033-44ea-ac47-166b4a7038f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1879 d94132bc-3a55-4663-8074-69849a0459c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1879 438d600b-6760-4ea3-921b-552ee9d74668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1879 ddb705b9-a45a-46ac-8e4d-065ef594ce3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1879 68594654-8802-49ff-b0f3-93990de9933e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1879 6d7435f0-c30e-4d59-9a61-ab045d08da8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1879 ab4e04cd-e0c2-4547-a642-1bad68a5b425)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5529;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3251;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h31DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1880)");
    end
end

unit.assert_eq16(16'h5529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1880 8d8ab4c9-f071-40fb-af1c-7ecca853a3e0)");
unit.assert_eq16(16'h3251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1880 dcee2799-5b63-40c7-99e7-cf520696f612)");
unit.assert_eq16(16'h3251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1880 f7694356-fcbf-4b1d-9ca0-70593d7724d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1880 f415bf1f-c32f-4d26-bc17-adcc54876e4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1880 119cc230-c932-4700-918d-ca24b8b03226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1880 f15b1466-ef23-4996-baca-c9ab9c2044c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1880 c6511284-b2d9-4b03-a0fd-e5357776924c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1880 46063134-73e1-4665-b872-a22916430767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1880 79e2c84c-643a-45c4-a61c-810451ee59da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2CCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE7B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0827;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1881)");
    end
end

unit.assert_eq16(16'h2CCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1881 24c1a058-2170-4fc4-b3a0-afd453c54e27)");
unit.assert_eq16(16'hE7B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1881 6a5e6b23-0207-4f18-afc8-859f45781baf)");
unit.assert_eq16(16'hE7B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1881 11d5cc17-2d07-495c-871b-2c9960f4191f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1881 b5972343-3307-4263-9670-18a51e13f1dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1881 1ecd2809-764b-4dff-ac3d-8140c7eaa375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1881 01089bff-bad2-4f35-8853-3b7701dd8e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1881 ec25d9ec-5da3-42ef-9003-b1e14b3a8e1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1881 3c1aae6b-94ad-4b77-aae2-c42ae1a9c1f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1881 6dd5d9b9-1b8e-4c7a-8cd1-31893af71cfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5AE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h608A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2479;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1882)");
    end
end

unit.assert_eq16(16'h5AE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1882 a84e3052-f340-42ac-8211-20b6304acf29)");
unit.assert_eq16(16'h608A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1882 29b33ab3-81ea-4438-b01c-28612b40f1c2)");
unit.assert_eq16(16'h608A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1882 47b33231-ebc2-4b8e-aea7-60e04b6fc7b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1882 1bbd613d-b61e-46ab-9fd7-0e78ec51806e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1882 2afa0dc8-2298-4996-a630-83871d319402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1882 fcb7c68a-5163-4ba6-8371-7311365b4b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1882 d1f81e74-c409-4446-880c-c87548e438ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1882 4d42d0de-0d10-4b87-9a3b-b4e9539aa484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1882 59b16867-84e5-484d-92dc-c03dbd450bb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hEBD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1256;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4866;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1883)");
    end
end

unit.assert_eq16(16'hEBD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1883 dd4f68a1-a436-4f06-a4c1-dbc17a23d1ee)");
unit.assert_eq16(16'h1256, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1883 7f13b3a3-8bf5-48bf-abb2-b78f774b00b9)");
unit.assert_eq16(16'h1256, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1883 147c7375-e513-42f5-a1e4-51ab2e743887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1883 66e40921-385a-4e84-a43c-19639db7c6c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1883 28845fc5-a6b1-4441-acbe-4dbc4a8c2ccf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1883 a3f16d7f-6209-4ab4-8736-40f234de105e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1883 14b05774-fa70-4805-a4a3-e2a659ee9a1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1883 a82c1c5d-cf2c-4a39-8a4b-effbb664ff16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1883 cef6b9db-2de4-4954-bc38-5eb5a097dc73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h695D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4467;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4ADA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1884)");
    end
end

unit.assert_eq16(16'h695D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1884 1f1a9020-b3c1-40c4-aa09-088bfa990bb8)");
unit.assert_eq16(16'h4467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1884 87de9016-8752-414d-8ef8-caba8e6f20c5)");
unit.assert_eq16(16'h4467, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1884 4b178642-65af-4e4c-943e-4ddc0cb3fdc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1884 5a0bfcfd-9d70-41ca-9338-41a1d5358fc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1884 035f2d8d-2fc3-4e5c-a062-8b31782911e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1884 060babe4-54f6-459e-bf9d-3a1fc925d23e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1884 6e790921-1dee-49c5-9f0d-44f09f91abe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1884 1dfd2043-eee0-45d3-b878-5a538b9480bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1884 7e2648be-1095-41d8-b5da-a92885a91496)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE77C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4299;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBC4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1885)");
    end
end

unit.assert_eq16(16'hE77C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1885 5c98255d-a0ff-4377-903a-5d447a74ea80)");
unit.assert_eq16(16'h4299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1885 6750a658-e019-4542-b1c1-85e14bed1b82)");
unit.assert_eq16(16'h4299, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1885 62826e81-446e-4b87-a6af-30f3e870a63f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1885 8a1171fa-945a-473a-b2ad-739fe9387514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1885 4d77ede3-a12e-49b4-b1be-550a0ee186ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1885 a9a111ef-b163-4812-a75a-ac7c1e2350fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1885 e124eee7-6f69-4d2c-9bbd-b7202985fce6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1885 098a8dc4-808a-4fba-8eaa-e9513ce05405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1885 47731313-d478-4ca4-b061-7845fa43f59a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD60F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7287;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1886)");
    end
end

unit.assert_eq16(16'hD60F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1886 f8e40ee1-1dcc-4cd7-9a3f-685d134ee593)");
unit.assert_eq16(16'h7287, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1886 4b9dfd8a-692c-4272-bcb6-e18dc4d36909)");
unit.assert_eq16(16'h7287, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1886 c20eb1cd-475c-4008-9641-e6a2d216a95d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1886 32803528-1240-4a73-b562-097cd8d02e52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1886 fa2030f3-5a63-4244-a0fd-e318e9af456e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1886 bf0a8648-b328-4b73-ab11-6dcc8bd37295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1886 c36f123f-f3e6-4e51-89de-c37601df5757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1886 7c4ebf57-a141-49f9-b60b-4219400dbaed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1886 edb060ee-0bdd-4a78-b04f-2f1db97968e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6847;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC32B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1887)");
    end
end

unit.assert_eq16(16'h6847, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1887 52357d6a-6f6a-4075-a981-7a9cf8975914)");
unit.assert_eq16(16'hC32B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1887 0e090d26-120f-4456-b79d-6a807876ccc5)");
unit.assert_eq16(16'hC32B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1887 68980275-2624-4bc1-acf6-e3eacd027f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1887 8110046f-72c2-4ad0-8e22-7225a79cf42a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1887 ee469f44-3987-4f0f-acca-392d97d8be1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1887 b16fde63-c045-48b3-b9c3-2005d8e5ef54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1887 89ceb024-9633-4d18-b6e9-30fca1106a10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1887 16054fc1-14b3-48c6-8bfc-670b27350b8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1887 d559c6dc-55ff-43b5-a19a-96739dfb8a35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD329;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9242;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9819;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1888)");
    end
end

unit.assert_eq16(16'hD329, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1888 2267579c-9fdc-4be4-8643-58026a289363)");
unit.assert_eq16(16'h9242, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1888 fec070d6-685e-44d4-a5b1-0dab2af6ea36)");
unit.assert_eq16(16'h9242, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1888 0b3753f0-a5b9-46a8-9125-cb501b831567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1888 1bae43a5-ef3b-4dda-935d-7dc1a2e00edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1888 951c5474-0ecf-4b1e-9c6c-91ec03cb8990)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1888 fbcb404d-4d06-4084-aecc-367d5da2e4be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1888 a51e1306-8bba-472e-9a7e-a48b5a662fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1888 f62f17c5-ac73-44aa-871c-7a08061a7bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1888 480f9f0b-433e-4edc-af2e-7e86d93fd3db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD78F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h59EE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9887;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1889)");
    end
end

unit.assert_eq16(16'hD78F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1889 ab58b328-4f5f-4420-a0de-a75b49c50d54)");
unit.assert_eq16(16'h59EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1889 8a4b0816-ec77-4a7a-a760-cf9bdacdbcdc)");
unit.assert_eq16(16'h59EE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1889 e17a7eef-210f-4f5e-887c-b51aefa92a63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1889 4e5a74c9-053d-45f1-802b-f2d1f7fd7837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1889 8bff7c1e-53d0-4e2e-a97d-2c28ba2a64bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1889 496867af-bfca-4890-b9dc-ec7f158b40e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1889 ef4a97ef-0f1a-4b18-b1eb-9c56427437e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1889 40a8683b-24f1-4181-a887-867d832c5985)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1889 f45c5bd7-ae48-46d5-8329-2074bcb170d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h089C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h19F6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC2C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1890)");
    end
end

unit.assert_eq16(16'h089C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1890 7808e986-91b9-43d4-b7ab-75a694ae9244)");
unit.assert_eq16(16'h19F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1890 2daed930-a64b-47e4-8ed7-252231d42a84)");
unit.assert_eq16(16'h19F6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1890 d04c220b-f2d4-4f46-8981-5a931e17ebd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1890 54dae11f-5c8c-45db-9ba4-1fed6304193f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1890 40f0e3ba-08d3-42c8-a937-79433f0bbabf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1890 369ca21e-f0ce-4d0d-ba98-2876bab3ee60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1890 35d61539-45ee-4f02-8723-9015a4bc3e5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1890 f526695d-1de2-463d-91c6-47f6241fe9be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1890 b0240d2a-f5d0-416b-9083-7ba78433c5b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2994;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h53C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2E5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1891)");
    end
end

unit.assert_eq16(16'h2994, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1891 1a7d2142-f28f-4ce1-ac53-0e3fd503d059)");
unit.assert_eq16(16'h53C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1891 7c3b43e9-03b1-4b14-97a9-56ee594a111a)");
unit.assert_eq16(16'h53C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1891 bbc8782a-1b0d-4715-b904-ed48c66db3fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1891 d43ae776-4b39-4392-9b38-9f63fc6e78fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1891 3b3b540e-3ad7-46c2-a44d-159f090adb5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1891 ab255af0-ee8e-48cd-a571-41a30a043932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1891 d386e453-46dd-4a43-8afa-6298c36dcfbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1891 05d6056a-a317-41a4-9ba3-539a86cb32a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1891 c7aefbd0-e24f-4532-9d19-2c75a296dedc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF8DC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB246;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1892)");
    end
end

unit.assert_eq16(16'hF8DC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1892 bb929b32-5842-402d-8906-f8c13d78aa67)");
unit.assert_eq16(16'h6AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1892 028c139b-348c-4ef7-96e1-703461e999f4)");
unit.assert_eq16(16'h6AF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1892 470637e4-19c4-42c5-bce8-39fdd20f157f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1892 367bcfa4-23d2-4eef-9032-ff03ccdd00f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1892 9ddfd4e0-01ea-4ac2-a752-b25749f45a6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1892 6f91912c-9aa9-4339-86c4-97c1a9426708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1892 b9eb3af5-84fe-46a6-9754-c5bfe9a6f495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1892 f9ca1019-4b8c-4675-9137-a1214614ccca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1892 bfb89280-b180-4e25-b73b-234defed9746)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h23C8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB87C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1893)");
    end
end

unit.assert_eq16(16'h5B3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1893 b6a71bb0-fa5f-4aad-96b0-57f34cbcedbf)");
unit.assert_eq16(16'h23C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1893 385e57ea-0d50-40c4-92d8-39e1b363cd6b)");
unit.assert_eq16(16'h23C8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1893 369b3391-f64f-47bd-b90a-2efc6dbd60e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1893 38bd1181-edf0-41e8-aacc-72cc68acc7c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1893 ddcccff5-8e38-4c2d-9612-df4bcba4aea9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1893 57055e1d-5141-4d59-8940-6f9488bc83ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1893 e00eec8b-aec7-4b8c-92c8-563ff5e098d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1893 980477a0-452c-4730-9343-f0b5533a5380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1893 03eba5d7-ed84-4764-8a3b-b24ae6d32651)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h452E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7596;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE602;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1894)");
    end
end

unit.assert_eq16(16'h452E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1894 b1ca3a21-d43d-4908-aa69-5db1bc82fad6)");
unit.assert_eq16(16'h7596, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1894 4cde7785-d6fe-4beb-b7e4-380a4d171f93)");
unit.assert_eq16(16'h7596, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1894 dd71bcc1-b68a-441c-ac14-de063c18652a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1894 55df7923-85bd-4c58-a8d3-8c0f90b1ea2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1894 f32a6488-f961-4326-b540-3a05f155f385)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1894 1a453114-677d-40bd-b5fc-47785c0b3ee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1894 e7a43ec2-e7c4-4325-b2a7-ad1093b786fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1894 828283e0-8ad0-4e92-a3a2-c41f259f1820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1894 027ef30d-832b-4ee5-b5d7-eb794e543ea8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8E45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2273;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h70D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1895)");
    end
end

unit.assert_eq16(16'h8E45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1895 ceb9b56a-4875-4f7d-b75b-3fb9414ac215)");
unit.assert_eq16(16'h2273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1895 075e9ede-39b6-457a-98f6-396d8b5a18ee)");
unit.assert_eq16(16'h2273, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1895 f1604f62-9c3e-4796-a13a-7a4b5ed7436d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1895 08d83387-dd13-4798-8d3a-40d137e68d73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1895 fa4a59e0-c960-4282-aa2b-6875626237b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1895 35ce7a36-e379-4a0b-81f6-009d4b0ed06d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1895 beaee3e6-46b4-4e0a-a7b3-04a4ee764b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1895 de59c73f-f680-4712-a91e-2ef82153eddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1895 cf4fe5e3-16c3-4a48-b8f8-1f35c03c68d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h11C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0976;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h848B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1896)");
    end
end

unit.assert_eq16(16'h11C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1896 70a65456-7965-4d29-9805-e544c47c324a)");
unit.assert_eq16(16'h0976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1896 9e2527bd-de2d-4c23-925d-b0c54b80f847)");
unit.assert_eq16(16'h0976, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1896 e2f6f817-1640-4df5-80c7-056088eef184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1896 7b4a15fb-9b6c-4c42-9c5e-a3a9d942a5b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1896 7e0c7040-b713-48f4-bc99-34049acb3508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1896 6088ece0-2930-4ff4-8eee-1ddbdf97243e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1896 8b77d9c4-a005-43fe-9359-8092a57d39b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1896 b00d5c89-83d7-4221-9a1d-e9bb4db53968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1896 f9023cee-3fce-4425-a25b-2548fc119240)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCCD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4417;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2E8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1897)");
    end
end

unit.assert_eq16(16'hCCD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1897 c195e1cc-c0d9-4ab2-b8c0-005f62e27d4e)");
unit.assert_eq16(16'h4417, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1897 b433bff6-d5e0-4739-95a4-f89d5ab4c98f)");
unit.assert_eq16(16'h4417, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1897 5927c24f-3a12-477b-befb-761aae914672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1897 2ba8c549-9a74-429c-8f0d-993b3b76cb57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1897 e6eb0429-c9ec-4f2c-9ead-d65ec6003433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1897 38abaf57-83ac-4e92-b47c-4d48307fae6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1897 62f08ae3-0558-446c-8c0e-546dae21369c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1897 6da3405b-8eec-40fc-bb12-b553d08a5d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1897 1ed6e4ad-d7c2-4cbe-8294-0b5cb37dc8eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h08CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h131B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h97AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1898)");
    end
end

unit.assert_eq16(16'h08CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1898 6110ea4c-8cbf-41fd-9889-523b3ea31d47)");
unit.assert_eq16(16'h131B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1898 28d6dc2c-a0ae-4af4-a2dd-7b672eb7257b)");
unit.assert_eq16(16'h131B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1898 353a394d-6a06-4521-a8c4-f1d994221720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1898 c48b506f-fd96-44b9-ae0d-df20a59af71e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1898 67b59d18-1be4-4a1e-b473-9ceabe92cdfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1898 31297b27-0f74-4e12-993c-1f0d4b4a016c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1898 10147c3e-3f40-496a-9ca1-d3ac99979844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1898 68166ff1-946e-43be-9430-78a0c4e06d9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1898 76835b88-5089-40e4-9d14-b78c45011605)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7E66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2D0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0E3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1899)");
    end
end

unit.assert_eq16(16'h7E66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1899 cd6f3379-685c-4da4-b310-420a5a9e38d4)");
unit.assert_eq16(16'h2D0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1899 5464fbf0-1733-4cf8-836f-4b773de8b009)");
unit.assert_eq16(16'h2D0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1899 4bbc43a1-db56-4b58-9a5a-d129e5900aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1899 114029d3-09e9-45af-9370-7ddb82feab1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1899 f98f7053-c517-4646-ac2d-3eb96fa967e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1899 42a8df59-4c84-4173-a430-7262e52a5266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1899 8416ec3e-f346-4fe0-92ae-053361a625a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1899 d11d896c-7220-4d36-98ce-eca2472eb7c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1899 b1bc39f5-07be-41cd-97f6-14f2dbb3dc7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA3D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hABA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4EAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1900)");
    end
end

unit.assert_eq16(16'hA3D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1900 32a433a4-9f8a-4a42-85ca-0dfddac6b68d)");
unit.assert_eq16(16'hABA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1900 0d0912b1-48fe-43d7-b408-a8b2fdc74758)");
unit.assert_eq16(16'hABA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1900 89cb1ebe-79bd-4b01-8d09-e63efb8d1a44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1900 99ff99c5-5e6e-4d49-8898-b7c36f3d905b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1900 949da54c-4c55-4d15-be36-204ba890d57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1900 36c868e8-62c8-465d-9b3f-a1432a9f6491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1900 2d08a670-0fb3-4b59-8cdc-50c178823859)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1900 daa99538-fb02-4cf5-8a95-5902b33e01ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1900 39211822-21d9-43cc-8622-a4e6578b4951)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA9CE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7188;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6A64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1901)");
    end
end

unit.assert_eq16(16'hA9CE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1901 9269adfa-3efa-45b5-96e0-c82b016c52a8)");
unit.assert_eq16(16'h7188, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1901 7e12c2a9-28f9-46c9-910e-7d39c7764d73)");
unit.assert_eq16(16'h7188, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1901 815ba310-22ed-4b6b-93f0-3ee0128fd540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1901 d8a35065-d3bc-439f-8d24-9a3843a0e31a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1901 621cc4d0-5e36-4213-af31-56488847f0c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1901 6163139c-c70a-49c8-9d10-21a67addbc59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1901 9c6451b4-b402-4a2e-af10-948fcdcc0a42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1901 02cc3211-10a7-4a7d-9633-3b4d2473bc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1901 f1b11d60-789b-4597-af8c-84bdc52e3872)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB700;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0B1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE444;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1902)");
    end
end

unit.assert_eq16(16'hB700, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1902 1ac987aa-04e6-4ef6-956a-0572d71953be)");
unit.assert_eq16(16'hD0B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1902 a436b0d6-0d6f-4ce1-9c88-57c4c12062cc)");
unit.assert_eq16(16'hD0B1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1902 28f0affd-7c78-489c-9f50-46c407ff75c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1902 0795cb6c-92d4-4684-99c2-ccba074df1dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1902 3a49a7ea-09e5-4485-9ca2-b7a52a9e856f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1902 e016f5f3-6f72-4ab2-aa46-4fae67cca96b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1902 0be91ff9-cae8-4e81-9fc6-67a2bfa4a664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1902 84c58fd1-5077-48bc-bb03-55802b942da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1902 f85a164d-4425-4253-8477-83cdd80b7072)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1432;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB68F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1903)");
    end
end

unit.assert_eq16(16'h1432, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1903 fefb63b4-7dd8-497a-8248-848bd5544b6a)");
unit.assert_eq16(16'hFA93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1903 66a0782e-2b84-4a27-9460-bec010d67d19)");
unit.assert_eq16(16'hFA93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1903 c48e31cd-3b8f-4886-afe7-2ef46856dd64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1903 bfcfacf0-b12f-4cfb-899a-be7afbe6c21d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1903 78cd53c8-58b7-44de-9a18-7bce642d978a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1903 f0a515a5-5bbe-4f8e-b7c7-c705f645a163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1903 b2e20572-8ef1-4659-a5d5-6986b22eaf89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1903 55a64202-983c-4cf8-a48f-f726c7a6f4c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1903 cf77fb23-ee65-4832-9e70-43bb2f47214d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h037C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4910;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD961;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1904)");
    end
end

unit.assert_eq16(16'h037C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1904 9cf4f0e1-9bb3-41d5-97f4-e8c4e0971216)");
unit.assert_eq16(16'h4910, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1904 3244dd66-54a2-495d-a293-48dd3972b5d2)");
unit.assert_eq16(16'h4910, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1904 134e45b8-75c0-41ce-931e-91477ee3e7d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1904 01b5abd6-be64-480d-903d-96e2b5a3350e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1904 64a3d9de-80f8-4946-af2b-5fa6ec94ec24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1904 1a1d2684-9fa8-4cf4-9daa-656968a27144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1904 60397a25-5fa2-4eda-8e43-e1cfc111cc64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1904 559a03ef-9e69-4b24-9257-a609b5bb4d6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1904 a6592a8a-ec06-4374-b7fd-a10d1d3afd85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF529;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h907F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF8D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1905)");
    end
end

unit.assert_eq16(16'hF529, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1905 db846dd2-8759-4174-a9c5-5828c87f1673)");
unit.assert_eq16(16'h907F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1905 ffb57677-a7b8-4738-8927-d91265ea311b)");
unit.assert_eq16(16'h907F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1905 f91404c3-ba0a-443f-afa4-fcc553bb9fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1905 da7446ec-d974-4ffe-ba5d-56cfcef56d70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1905 9f1902f2-11a7-4d81-a36e-d3bd519440b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1905 ac46573c-a15e-4b55-9683-2dd6be94e64d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1905 c6e663ec-3ac8-4cbe-8fb6-2aba305de304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1905 675248b0-10fd-48fe-a174-04fc2b333973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1905 7bea2457-231d-4f88-944f-b86f37ed3fe8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1ABE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9497;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h903D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1906)");
    end
end

unit.assert_eq16(16'h1ABE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1906 afc23c95-d87a-420e-9175-949c44632d03)");
unit.assert_eq16(16'h9497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1906 2cbbe7d0-cf58-491e-91a6-83d03ea9ecb8)");
unit.assert_eq16(16'h9497, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1906 3cee4ba3-ca82-4b3e-b30e-0d35ba2c154f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1906 fa9338a7-6b99-452d-a1e3-7d45a8b55f02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1906 0874c8cc-ddf6-4c10-a948-d0b51c29a2bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1906 c199bd18-395a-4ca2-a12c-1965c9f4fc98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1906 09298a54-7c91-4bd1-b3d1-2f4d0d3ab12d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1906 5644167c-e461-411f-ab17-8aa45fc1b99e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1906 ee615b9c-5e5a-422d-8365-dec2b9e121b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0C78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA4BE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h492A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1907)");
    end
end

unit.assert_eq16(16'h0C78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1907 b0e8da35-3ec4-4f64-87fa-c26ca6eff76c)");
unit.assert_eq16(16'hA4BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1907 f25f1ece-2684-4adc-8605-d31f2d346f62)");
unit.assert_eq16(16'hA4BE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1907 710a30a5-af96-4373-805f-da9eb2a1c386)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1907 0c91993e-c267-47ff-a641-aaa5ef784b59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1907 b01835fb-98fe-4295-b389-7467d779506c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1907 97225d6a-5c80-4270-98ad-eb5a90785627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1907 de6f0153-c781-4d0d-b6cf-360440aacb73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1907 c8577154-e07b-4985-a333-ee929654d479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1907 5f93d493-7627-4446-b9b9-86c1179bfa96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCAC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE1BF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0062;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1908)");
    end
end

unit.assert_eq16(16'hCAC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1908 5618a84a-7f87-4a17-a81a-089a2facf1b4)");
unit.assert_eq16(16'hE1BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1908 c9f9c76d-ac66-429f-8e4e-500b55299822)");
unit.assert_eq16(16'hE1BF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1908 55ff930f-959f-4e91-86d5-36352005f6ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1908 af674535-96fe-4bb4-9b35-f39977765f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1908 9e8dd0f6-dd45-4311-a32f-691364e532eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1908 e06c0e5e-5d19-4d70-8a86-79f8fe4cde1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1908 7121d287-eefd-4249-87be-019c55cf51c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1908 93cd6446-7732-4ed1-92eb-1f89bf4e0f1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1908 66ae8036-3987-463a-9424-2e024e805e04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBD1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h29C7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h446E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1909)");
    end
end

unit.assert_eq16(16'hBD1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1909 086dc04f-0a4f-4305-9b20-fc4e5e9f1290)");
unit.assert_eq16(16'h29C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1909 787d3636-1312-4184-ae44-589521a2c255)");
unit.assert_eq16(16'h29C7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1909 c5b5c7e6-a5c3-4d6e-bf5d-27333f0b0a68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1909 3f7bdedb-4ddd-4201-ac73-fbd0d8ecdafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1909 2a11a253-6eb0-4fa3-ac48-03713c31c0d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1909 d0182338-69f7-4dc3-a9a1-f55775296d82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1909 1d2355a3-75ae-468c-9880-94e73771a963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1909 e0882af2-36ed-4c84-806b-2f5cf424c001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1909 c0e269e1-628a-42d8-9cf0-b120e53c7965)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h376F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA936;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h58F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1910)");
    end
end

unit.assert_eq16(16'h376F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1910 2a4e9165-ec4f-453c-92cf-8b0ba08f2836)");
unit.assert_eq16(16'hA936, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1910 319e4836-a2e1-4af4-b021-26fbab154722)");
unit.assert_eq16(16'hA936, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1910 8225fe2c-25d9-43c3-9b90-e2da10632e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1910 560269be-fb14-415f-b437-f5668e732afa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1910 46980433-7b51-487e-9ec4-b14563196c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1910 ad1f6c5d-56d7-4d15-b326-cbe9288a844c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1910 3f9fccd2-89cc-483e-bf64-0fdc0590a577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1910 5525f0c1-1c5f-4a17-947a-36251f820c5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1910 b7cf5952-6436-4bd5-84b7-496d85eb5ad7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA354;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3C43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h68A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1911)");
    end
end

unit.assert_eq16(16'hA354, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1911 a9d2d9c2-4def-47a9-9d25-1035ac32a841)");
unit.assert_eq16(16'h3C43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1911 4d3f7f47-2baf-40f1-966e-042c5d161121)");
unit.assert_eq16(16'h3C43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1911 704fee4c-de73-4bc8-b255-75722bdc7eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1911 a4f80a4d-1116-40a3-a3e1-c5d4f0d96c88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1911 8a35e7db-38c7-417b-957d-a623329464ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1911 90cf07fa-8682-4d23-ad6b-2ab130f52273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1911 13bce1db-45d4-4468-9896-0d67d9470e66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1911 a8d83eb0-db6a-459e-90fe-69218fc68918)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1911 66218d3b-c339-44fd-ad50-bb3750aa90d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC8E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9ABE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1912)");
    end
end

unit.assert_eq16(16'h0B1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1912 e7e7395b-f1fe-436e-88d3-2de3c24f668e)");
unit.assert_eq16(16'hC8E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1912 d3651261-6b76-4535-acde-7384adb6e601)");
unit.assert_eq16(16'hC8E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1912 d0223eb3-ddc7-47a3-9b54-45dbf331c2c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1912 d354825f-737b-482d-b412-29b9c08e9736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1912 a53081a8-bdf0-4710-a03c-c8dc761b0c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1912 b1bec584-f82a-4251-b9a9-dae1077dd3c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1912 4358f0eb-e40e-4eca-be83-b604fc2e51e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1912 df68d349-1e5c-4cf4-a329-a1222b7f19ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1912 5c7d6f37-0da6-437d-816a-bf43638ff221)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE332;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h75E3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1913)");
    end
end

unit.assert_eq16(16'hE332, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1913 91bf2c29-1492-48a6-b3cb-5f47383b6832)");
unit.assert_eq16(16'h75E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1913 11e4d132-d729-472f-bc44-2ed909adfd6b)");
unit.assert_eq16(16'h75E3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1913 f1613621-5765-4678-b372-4afd17707989)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1913 9bc43f40-2a06-4d46-8ec0-4c627925e41d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1913 ac8e4226-ad20-4d0d-8d0a-d5cad04f06d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1913 8091584b-2b90-4fa1-bd0d-2f4db9351bb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1913 95dbf06e-634c-4161-8ab8-dc2f87f2a396)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1913 a80772c5-beab-4333-9958-6f484d6091a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1913 85dbf360-9017-48f6-ab06-6b0444057c31)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAF66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4FC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h657E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1914)");
    end
end

unit.assert_eq16(16'hAF66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1914 20d6dcd8-9949-4c3d-8882-ce8ccee34902)");
unit.assert_eq16(16'h4FC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1914 368c4af4-e3a5-4c6c-b403-90c181c6f70e)");
unit.assert_eq16(16'h4FC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1914 a7150c84-5338-4684-b294-5307eae9caa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1914 07159da7-b59d-4216-aa4c-e43f8cf4beb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1914 a37ce469-1bd6-403e-b0ca-21a39c3ce76e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1914 2ee6fbb3-d5c0-4337-a73f-59e220735464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1914 e857ca5e-596e-4b13-8716-09389ca45f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1914 c34dae7e-3eaf-4e9c-b001-a2ffcf6e7a0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1914 539218df-3ea3-4a8c-a3bd-c8610ecbd906)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4EB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3808;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8EE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1915)");
    end
end

unit.assert_eq16(16'h4EB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1915 a49783a7-f0b3-40ea-a278-a0f6f3162033)");
unit.assert_eq16(16'h3808, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1915 b2aefd0e-3d71-476b-bbf2-3ba65c32bfe2)");
unit.assert_eq16(16'h3808, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1915 52c4bf07-69d2-4e06-8570-b3a26885e280)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1915 0a5b4778-a54f-4d04-8d19-05ccb46589ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1915 e6df9ba4-552d-4237-8274-433616c380ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1915 0799e2d9-e5c2-4b2d-84b7-ae2698a388a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1915 5d861794-d8ea-4543-bfe5-74d014490744)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1915 eaf31df4-7510-4593-935d-6ff2732b9485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1915 04aeb1f5-e7d6-44f3-8d27-aaf2fbe7c89b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h608C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFCD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1916)");
    end
end

unit.assert_eq16(16'h608C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1916 9d65bbb2-64e1-4926-b7a2-d072537cdbe7)");
unit.assert_eq16(16'hFC95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1916 263859ef-1a3e-4f66-b9b4-b666360adae1)");
unit.assert_eq16(16'hFC95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1916 39709fd3-adee-4ec3-9676-d19c16332175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1916 1409c6eb-588d-41df-8155-0402c4b929d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1916 e3f99484-bd72-4c2f-bc8a-f7a33c5f6793)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1916 a94f9d24-5885-466d-89fc-fab4b44ea2c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1916 63895f30-a6df-4c72-bdce-7b3526d4a053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1916 eb055ded-bb66-4ba5-aaa6-e18c11781955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1916 69843b97-b3c1-4f1d-9d21-44fa3720cba6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF333;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42BB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC0BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1917)");
    end
end

unit.assert_eq16(16'hF333, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1917 2260eab7-5281-49fa-ad42-d1ffcba25f47)");
unit.assert_eq16(16'h42BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1917 280b481a-d4ed-4727-8d5b-fd6093f48ae5)");
unit.assert_eq16(16'h42BB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1917 e7fb79cf-1441-435c-bf4d-de227afa3927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1917 4652c204-e581-43e1-b4c2-b1fcdb6746be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1917 9bbb49a5-cc00-4521-b832-cde47616bfe0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1917 3becce18-fb80-437c-a594-b2efb6c3ba41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1917 3bdcc80c-3786-4d70-bff6-d6b35231d497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1917 eeb5f84b-4a15-41b8-97f0-86d692d7cf79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1917 aed3ff9f-2fba-41a6-b1a2-a15513a9206a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5590;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5E61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBEAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1918)");
    end
end

unit.assert_eq16(16'h5590, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1918 4de849c1-3676-4648-909c-12f82cbbc543)");
unit.assert_eq16(16'h5E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1918 a8914af0-b3c8-46d7-8727-da9ae55feaae)");
unit.assert_eq16(16'h5E61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1918 3a3c5bc1-da1e-42f8-824e-ae753d634d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1918 564cab6c-7480-4e09-9bfc-a276c79b7118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1918 33c2834e-1416-46a1-b614-2181789c009c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1918 738e29ad-3f4b-4337-a31f-c550a93affd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1918 d8dd1fdb-a3a3-4abe-8046-4a570c55b2e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1918 318c7b2d-739d-40ad-8646-668fb2f8b875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1918 4530667c-bfc0-4385-8d6c-64579b7fb8c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA772;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4A82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h86BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1919)");
    end
end

unit.assert_eq16(16'hA772, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1919 30cb25de-4a6c-44dd-ba4f-9bddd1094ebf)");
unit.assert_eq16(16'h4A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1919 91d7276f-c088-4cbe-83b5-9fd753901124)");
unit.assert_eq16(16'h4A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1919 4069b326-63e2-406d-8e0a-56af8977158f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1919 85f36d62-1776-44ec-b9f3-7486883ca28f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1919 315dafb8-38e7-4e96-851f-ff352265b941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1919 8df12d43-8f74-413b-9605-dda62179783d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1919 b4bae835-9ce4-4a4d-955a-0016aa3c5814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1919 d60ed07d-7891-4e9f-bb92-f2098708b1df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1919 e0da1ef1-7851-40fb-95ed-7c1e8938d642)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD5CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDED1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1183;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1920)");
    end
end

unit.assert_eq16(16'hD5CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1920 2ed5e8cc-22ea-4653-820b-4d2aedf7b368)");
unit.assert_eq16(16'hDED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1920 139b4eb4-e721-4dbb-890a-6f7e1f0a9222)");
unit.assert_eq16(16'hDED1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1920 28b5b9c6-8f35-438e-9eeb-94c711786cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1920 97594e3a-1597-4fad-9826-2d83bb602818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1920 48c200c4-a12c-415c-9976-964297ad6180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1920 c75faeac-e80e-4966-a570-e4773e4c4126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1920 fece751f-02ac-4452-b3c1-2629bfe4efad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1920 8668b540-1fb0-4ef0-8580-50031f97801f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1920 49770b21-71f2-441f-a9ac-590266914182)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3669;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBB48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE13E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1921)");
    end
end

unit.assert_eq16(16'h3669, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1921 c5b630ee-1514-4c82-88a6-5d7dec5350c1)");
unit.assert_eq16(16'hBB48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1921 66bef6d4-37e1-4e9b-bccb-cc246a861faf)");
unit.assert_eq16(16'hBB48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1921 9277edf0-3f80-48c5-b4cd-f0ef6bef7a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1921 bbe83865-62a2-4dd1-9de3-f2c80f9c6e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1921 878c9a34-9ea8-42ce-919c-75831366488e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1921 80bb7da7-443f-4d70-9157-1cbbec361dcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1921 d44b947d-9882-4927-a657-94c5af6a238f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1921 21d8d8be-ae46-4361-bed8-4cd743c26efc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1921 8d8a5457-f1d4-443a-9458-f8c8388b33ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE295;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6B8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9C3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1922)");
    end
end

unit.assert_eq16(16'hE295, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1922 94376154-b47d-4223-80d0-ed0942f4f7ef)");
unit.assert_eq16(16'h6B8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1922 f0dc9f0e-b810-4bc1-9e1f-327b87ace2ed)");
unit.assert_eq16(16'h6B8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1922 6421b323-296c-4f75-8c74-2fcb13f89065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1922 ea8f06d6-7ee3-425d-a7c5-34fbacf46fc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1922 bdc61452-5536-405d-a611-0b8e5fb4f44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1922 794247ec-f0fc-4e2a-b1a8-f0e0317d8712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1922 0feb28b4-74e6-4956-bc50-7c457d26152b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1922 daae52ac-883c-40e7-93c2-5080ac00095a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1922 916992d1-2127-4d0b-9441-cc7a2351e50c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0B2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE707;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBF81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1923)");
    end
end

unit.assert_eq16(16'h0B2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1923 0a00da22-a7b3-4dac-a4ce-bb5f86a03d1d)");
unit.assert_eq16(16'hE707, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1923 e91beb0e-b407-4171-b71f-4f9ff114cc82)");
unit.assert_eq16(16'hE707, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1923 d19ca80f-5005-4689-8e67-0dd3dc15f2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1923 3faaf204-b313-4308-832c-d75cee911e90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1923 160cc9e7-9432-4531-b795-4d3e292bf1e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1923 248a68f7-4eb6-40d6-9460-993ea0560955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1923 9ba88b15-1b1e-4c2d-a3ef-911168ecf79f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1923 8356d74f-bbc3-43a6-9c9d-d42746351bf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1923 936f9092-0922-4405-ab49-f80748f84d22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF7F7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h098B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h14CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1924)");
    end
end

unit.assert_eq16(16'hF7F7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1924 a2bc66a8-58b1-4337-b37b-536367a7047f)");
unit.assert_eq16(16'h098B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1924 9928aff5-7ec4-4758-bcc9-1f14915df9c6)");
unit.assert_eq16(16'h098B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1924 dc1242ec-6076-4923-b826-3492334d6248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1924 7bf72a18-0f20-481e-8ba7-3b3d000a757c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1924 21c6c269-315d-4b3e-846c-6aa0c475a912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1924 18e06706-0bb3-4fda-9525-87b92bdbbeb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1924 39cb5876-d83e-4eae-aa10-e04981b94673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1924 4d9e7971-dede-48ef-9a69-0b1f4ae42623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1924 4d7aa058-314b-4151-ab13-15361dd6be83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2D4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8962;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF519;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1925)");
    end
end

unit.assert_eq16(16'h2D4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1925 06f91a1c-06af-4145-93dc-9192581346db)");
unit.assert_eq16(16'h8962, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1925 d956ca65-5f00-4503-bed7-45e68ad1af09)");
unit.assert_eq16(16'h8962, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1925 31273c58-9fc5-4912-a094-e0e758970d0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1925 b5703eb7-3a20-4c17-8e34-ac255a3cd53f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1925 b13d4cb3-d13c-4f8a-ba16-5487fb298389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1925 05ae2f9e-85d1-4f10-bda5-068d9c1f16cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1925 53281ecd-4191-4915-998f-c2135cf6420c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1925 3799d842-eb05-4d8d-913f-5480edd4bcf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1925 29dfa000-868b-45c0-acab-f561a90749fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA1EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h413C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB9F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1926)");
    end
end

unit.assert_eq16(16'hA1EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1926 a916dd80-98bb-492f-9896-f222fbf521ab)");
unit.assert_eq16(16'h413C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1926 ce04273f-a473-4dcb-b19c-e828518b7fd6)");
unit.assert_eq16(16'h413C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1926 da7cd65c-13fa-4496-ba15-fb312322599b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1926 64b3078c-9785-4e4c-8363-1d19e8dd421e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1926 48ab79a4-75e6-4d02-af49-d3b7c450f007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1926 41e928ea-b33d-4e18-afa0-6590bdc9ee94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1926 e935dfa1-c6df-4300-9cc5-6b5d5a1f81cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1926 a31538c2-c05c-4a22-9f5e-4242da571592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1926 1ba135c0-6d82-47d8-b68a-90fd2c0ff58a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8DA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFFA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCAAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1927)");
    end
end

unit.assert_eq16(16'h8DA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1927 ba82d704-11ce-40b2-b15e-b571610151fa)");
unit.assert_eq16(16'hFFA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1927 68020d3a-5dce-4be6-a817-f79de052351f)");
unit.assert_eq16(16'hFFA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1927 2a2bf134-1b48-46b0-bd5a-1fcb0078266a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1927 f61b9fd4-654f-40f7-856b-70d74d408272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1927 d87498ea-5ef9-4b7e-ab61-3e02bb653900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1927 ddb0bdae-d109-4c25-b891-2c6b0bddd703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1927 23d35202-43a1-4a24-bc09-ee1f7349d933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1927 f29cbfe9-559a-408a-a3e6-09d9706e67b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1927 d7d43963-5d10-4efa-9508-d7fb1f0d336e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6333;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA83B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4B19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1928)");
    end
end

unit.assert_eq16(16'h6333, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1928 56c4ad0a-b227-448c-a5bc-076681a1e20e)");
unit.assert_eq16(16'hA83B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1928 ebae7745-0d9b-4812-90b8-77f6f07fb56d)");
unit.assert_eq16(16'hA83B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1928 cb8a869c-1a7a-4070-b96a-819cbc6f0da6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1928 a2346c6c-27d7-444d-8b59-10b5d620f5f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1928 7301c3b5-8ce4-4e3f-bdee-9837a0d74451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1928 f7086c1a-fa08-4151-b8b8-f64ff86b78a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1928 65d96f38-3c4b-4899-b1f6-695293c259af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1928 7bc74b51-7d18-4858-bd71-1e71b51f5234)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1928 98c766fe-0ccf-470d-b3b6-47e4fdf8cd49)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF3B9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA29A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h3A45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1929)");
    end
end

unit.assert_eq16(16'hF3B9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1929 49864cbf-03f8-40d6-9851-a8063982f019)");
unit.assert_eq16(16'hA29A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1929 4eb4bd8d-a75a-4314-8420-d3b8c1365e6c)");
unit.assert_eq16(16'hA29A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1929 36aa4a8a-b86e-40de-b6e5-211fc17d4d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1929 48922cd7-5498-4d2f-92a9-4fc1e214a433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1929 b07644b6-e24a-43b9-bf9a-34c4a5551483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1929 5cd49c0e-a3f7-4475-b7f4-f404a057be2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1929 e0f47014-fe59-47a7-965c-149e14fed64a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1929 82035638-9507-4070-bcab-48eae235ab24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1929 8d5b4cdc-4ca5-49da-b97d-ef4380528cbf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB4A7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1469;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA099;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1930)");
    end
end

unit.assert_eq16(16'hB4A7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1930 6dc5c848-8965-4f1c-ae0f-29075e9f6c70)");
unit.assert_eq16(16'h1469, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1930 e5764841-a20e-4df6-b475-c2f99fd869f6)");
unit.assert_eq16(16'h1469, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1930 288de8be-3903-4ce6-9353-7405acb3068e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1930 1d152c95-1bb7-444a-a1ab-ddb9410cd7c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1930 3a0becb0-4bca-4966-9105-ab580ba2f1e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1930 7df1ee32-0d21-4d5a-b185-f4e8bc762ff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1930 b3aeeae2-aa71-4736-8cfb-1be9fa25c2cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1930 6491cba5-4d72-458e-8ad8-a0e34a9018fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1930 de98d693-74fd-4693-9aa6-75c6f9ad0f66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h52D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9931;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6A8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1931)");
    end
end

unit.assert_eq16(16'h52D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1931 f132bb5f-10eb-416c-9036-48e8131d1055)");
unit.assert_eq16(16'h9931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1931 410aa637-a4b4-45bd-b233-f2b95abb9fa2)");
unit.assert_eq16(16'h9931, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1931 6fa9ca05-96fd-43b5-a2a8-043bddf463e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1931 adfad358-591a-4314-8ec9-513704f77986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1931 3f9a303e-3bd0-46f4-a608-a98c62dfca67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1931 3ae59534-c631-4d75-9ec3-635b8d400ef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1931 9b7effd9-8b19-4578-b8ff-8f9d15eed3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1931 b56ba8f0-514a-459d-8f16-8892c4d0d7af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1931 27132cba-087e-4496-bab3-15daaca06798)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hADE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFC4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1932)");
    end
end

unit.assert_eq16(16'hADE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1932 ae4a12e2-e71a-4393-b58b-9382de871d6c)");
unit.assert_eq16(16'h61E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1932 d189d411-c087-49ad-b0a3-c9b1bb1411ed)");
unit.assert_eq16(16'h61E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1932 9188e0f1-5096-42c3-9677-3ae5816a27fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1932 b3c57ca6-3566-44f7-b162-a7d4a53a7133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1932 c13b8dac-f550-4f2b-a3a5-6f5edac1a1cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1932 29fcecad-c7de-46fa-acf7-26273c82b316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1932 1d0b12e2-a69a-4b10-971d-48c1613d9d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1932 1cc21bd2-d1ca-4861-ad6d-086938def1d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1932 9fa93e10-80a7-4c20-8fc7-95f20eb6b42d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5778;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD4AC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF473;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1933)");
    end
end

unit.assert_eq16(16'h5778, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1933 67ea19c7-fc0e-47f6-9cfa-6b12904c17ce)");
unit.assert_eq16(16'hD4AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1933 d1251dc8-bfd7-4c22-a668-1021fe07c34d)");
unit.assert_eq16(16'hD4AC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1933 6776c8f9-4fa5-4cd6-990b-4ed574d91f58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1933 54a42ff4-26f5-4a0f-94e4-c417163d58fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1933 7f71c81c-7c13-4b29-a4c9-ae4350430707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1933 e432eaa0-df2d-452b-a430-de683a46f9e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1933 bfefacd0-ef3a-4490-9220-ec67d7846955)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1933 bd93fc74-0bb8-49f1-b5d1-502db5f808a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1933 e8a64ae6-0a87-4c4c-83bc-dccaf3a7761b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h21C0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1BF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7D93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1934)");
    end
end

unit.assert_eq16(16'h21C0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1934 14e3bf84-8dfd-48fb-97ef-09d18f5a8fdc)");
unit.assert_eq16(16'h1BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1934 331a5466-06af-4a2b-be76-1d810c336c5d)");
unit.assert_eq16(16'h1BF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1934 58278fdb-cdbc-470e-9866-33d767af34a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1934 4995d5f8-27f0-4714-ac66-a713d83ca1b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1934 97eb17e3-e27e-48e2-b78d-079c9bb16197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1934 d0cca6ca-c7d9-4768-9064-6b43b7fd1105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1934 c02d2328-3828-45b2-adfb-581b1487036d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1934 9aa06eab-4d88-427a-b933-0865bae3e79b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1934 1900bb4a-156c-42f0-a4fb-76f804078ada)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7F1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD7E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1935)");
    end
end

unit.assert_eq16(16'h7F1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1935 6a437f68-23f2-4e9f-9a08-4b002b76e4ff)");
unit.assert_eq16(16'hDF4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1935 446ea966-afcc-4327-ae86-3fad5c02ac44)");
unit.assert_eq16(16'hDF4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1935 f2e7b9a6-298b-41c2-8cf7-65a16c0fffdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1935 b0fbc2f0-6e12-4dcc-b9df-214f39c6dc89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1935 c01129c2-db02-4b84-b8d5-ceddd1163978)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1935 9057fd45-0963-4b35-9446-d40d55cc8c9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1935 be97575b-e948-4467-8569-f1de884e29d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1935 65cf92af-ed87-4525-a15a-535df1e4e158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1935 ac1289e3-e487-4ee2-a3a4-575eefb28f2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6443;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h067C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1936)");
    end
end

unit.assert_eq16(16'h6443, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1936 e4d0aa1e-1935-4974-9eb2-0f7782063757)");
unit.assert_eq16(16'hDE79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1936 8b52c953-cee1-46e5-a798-e64bb35d5987)");
unit.assert_eq16(16'hDE79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1936 4863bbc5-52c9-4fa5-b978-cbad1a24ca63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1936 b1e221bd-5e36-48f8-8ee1-1ac387fc2d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1936 606c0d6e-7b94-4a85-af2f-40793f8d24cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1936 71ef932f-e983-4fdd-b8f0-a6263719fb39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1936 b8575529-5edc-4757-8a2d-48bc07b4243a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1936 61fdbe60-06f0-451f-a585-50d53313f737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1936 958cef14-f37f-4a0f-9c1f-36420c387a3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2DB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7D65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h509F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1937)");
    end
end

unit.assert_eq16(16'h2DB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1937 cf46a3c3-9a20-4e47-bca8-bb40472cc2dc)");
unit.assert_eq16(16'h7D65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1937 00b81403-6d1b-4374-b473-8eac24e25c9d)");
unit.assert_eq16(16'h7D65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1937 2877c9fe-0533-4fb8-ac5e-57e86b359597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1937 6b2c6290-f5a3-496b-9be7-b304038865c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1937 127b5320-9976-4f00-b2a5-9ec3762d7788)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1937 e86e8438-cf14-48a3-a956-83632e352c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1937 2a5e0630-c3ff-4a6e-a0f6-8842766010c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1937 e6e9f38b-29a6-43a4-a695-a7d84a4d3e51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1937 99ca2882-f4c8-43d0-8ede-1f9adfb2b772)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCFA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5413;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1938)");
    end
end

unit.assert_eq16(16'hCFA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1938 b289da99-9c2f-4a6f-b15f-50f4ec9b750b)");
unit.assert_eq16(16'h7A20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1938 36d312d6-199d-490b-ad59-4703be1f6b99)");
unit.assert_eq16(16'h7A20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1938 54c21c4f-49c7-4582-bab3-455fed36610f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1938 ff81e3bb-6bea-412c-91f7-51e451cb772c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1938 434646e3-3246-42d8-8a68-e2fd8f719835)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1938 11402288-3a37-4fb4-a049-699b99977665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1938 a78dff38-f705-4dae-817a-1e7e7c957bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1938 1231a1cf-5370-46db-8b98-46ff3f48a948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1938 05b7fb0a-8d59-47f3-abc6-2aadce55fc69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8FC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h74F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC1A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1939)");
    end
end

unit.assert_eq16(16'h8FC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1939 a1876646-02ed-499a-ba94-75ea0009f2a1)");
unit.assert_eq16(16'h74F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1939 8427d56c-a278-42f3-8976-fe7ec531ac52)");
unit.assert_eq16(16'h74F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1939 823139f3-4c92-41e0-8861-5eacfeaa9ed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1939 122971f1-ff4b-4e92-a393-048ed8313faf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1939 5c5c58f7-bfd4-42e7-b18e-d44f5a7122e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1939 dc7eb051-9d35-4d5d-8c69-4d98e8ac3c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1939 781f8ec7-09a9-4d4e-9c5b-706cd3209b22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1939 754ac1ab-8da4-4d66-a015-7fee81993b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1939 a63a6a97-d1ef-44a9-8d7d-5431c76b5da9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1618;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAC8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9B79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1940)");
    end
end

unit.assert_eq16(16'h1618, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1940 7988e6d8-3c43-47de-8470-a79d1d7d2219)");
unit.assert_eq16(16'hAC8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1940 ceb5fd86-691a-4da7-8837-ca0576e2436a)");
unit.assert_eq16(16'hAC8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1940 c3535a73-89fe-4daa-9cfa-205fd2d44720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1940 d74456f1-77f8-492a-be0b-713adc9a0172)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1940 8cdc1710-ba28-4f43-9e0e-e3a8660f2509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1940 e878a730-46ec-4993-9680-9b09aaa6f348)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1940 ea116843-0965-4530-b4f0-6fafa9b70a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1940 3c6adeba-1fe0-4f06-a7db-3277b931ac27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1940 b0e12af2-56ee-4b39-8869-a8f30792fc6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h32E7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE9F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA695;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1941)");
    end
end

unit.assert_eq16(16'h32E7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1941 1ea61aef-9238-47b0-b4cf-70a4513c1dc0)");
unit.assert_eq16(16'hE9F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1941 f9ef1068-d1ec-4243-9cbe-54cf948ce61e)");
unit.assert_eq16(16'hE9F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1941 acb800a9-3c58-40e3-9120-a8a24fd3995a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1941 ac5412d8-bd75-4fc7-9c80-23dd74b2677f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1941 c2687881-2ecf-428c-8fd5-96397a6af051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1941 a630ad85-3496-40ec-9a8e-9339b70f13e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1941 bb3662bd-7044-44b3-8c9c-aa2b1ef1b175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1941 a234dce3-77ba-4bad-84d7-1790ccc89c04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1941 eec76175-f9d8-4ea2-9120-76096af30bd4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hF92D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD52D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDC88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1942)");
    end
end

unit.assert_eq16(16'hF92D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1942 3f21b5e9-ac23-410b-ba74-e044af1f0ff7)");
unit.assert_eq16(16'hD52D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1942 3ef8a7d8-099f-4dbe-8aeb-def52e048254)");
unit.assert_eq16(16'hD52D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1942 0a27b764-a82c-468e-9332-6041c41a07d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1942 fc940370-f8e8-41e8-806d-73c60e884491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1942 c2241a63-a288-4e84-92d1-956c4a5d029d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1942 14abc426-ecad-49de-a046-d8891c7d263e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1942 072f7474-9ec1-4d25-9677-31b7106e8547)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1942 06ebeb0a-041d-4a7e-a539-5ccc4a569c8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1942 b9555974-0536-4491-b034-67f8bea4b624)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29FF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2EF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hACDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1943)");
    end
end

unit.assert_eq16(16'h29FF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1943 c00acf40-29dd-48ef-abe3-8081d8eda27b)");
unit.assert_eq16(16'h2EF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1943 514e8ff0-a354-46b3-923a-1df5e9d8898a)");
unit.assert_eq16(16'h2EF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1943 515eb4b1-c00b-40ba-80ea-85333d173ba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1943 f2c4e522-400c-4718-8860-dee8623defe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1943 9cdf67b0-16e1-4ed8-a1ac-3142f8d5aa68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1943 2e9f4dbc-7203-4811-8f75-3d82284760da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1943 f7486a91-c27b-467e-8506-077442746e41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1943 8a86005f-5973-4e14-b69e-00b3fb44c5a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1943 5f399235-62f3-40c2-b548-deec902d4a5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5C68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h919C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1944)");
    end
end

unit.assert_eq16(16'h1B47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1944 4611b28e-871e-4863-8132-f104affcacec)");
unit.assert_eq16(16'h5C68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1944 13a22d0c-dd18-4e4f-af95-efab9c5b99f4)");
unit.assert_eq16(16'h5C68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1944 7760309a-7c13-4213-8daf-9184a4933bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1944 a881e975-23f8-4c68-b9a6-1c4e042fe948)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1944 b377c51d-f423-4e06-88b0-bca8df1a02a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1944 6494f68a-0295-46f7-9267-9f4f37b99709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1944 021802b9-8fd0-469a-b27d-5aaaf84fb7d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1944 15772785-aef0-4bc0-86c3-3bcac65c02c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1944 fedf63ff-3fa5-481c-bb8c-3ce61297c88e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD2E5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9EE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8673;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1945)");
    end
end

unit.assert_eq16(16'hD2E5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1945 82395084-1f7d-4152-9445-450e515af780)");
unit.assert_eq16(16'h9EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1945 813c4bc6-47ac-4c12-8b3b-04a280a17eec)");
unit.assert_eq16(16'h9EE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1945 be35cd2e-f9c1-45be-8cf3-fb2cb697aaf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1945 e417240c-963c-48df-9b6b-d73af663e25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1945 d79b4f59-5a23-4157-b294-42aaf0b4ea79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1945 232e9b48-1fec-40ea-9265-f3d74c9f8c0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1945 ebbe4d1d-75b7-47bd-9c4b-c1213cca574f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1945 e5052e98-7d4d-4f6e-919f-af838638d9d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1945 b645e189-5558-4023-8f9b-aacdb921445b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8B5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h649A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4E9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1946)");
    end
end

unit.assert_eq16(16'h8B5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1946 ed72c8d7-1417-4fc1-99fe-61e172cf2cdb)");
unit.assert_eq16(16'h649A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1946 6d6d1c81-0ab1-40e7-83a5-35484966d484)");
unit.assert_eq16(16'h649A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1946 24e9c3c2-5586-4af5-9a3b-b72b42967611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1946 a0009c0f-35fd-406b-b38b-f7f56b031938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1946 2a64f40c-75d1-45e7-99c0-fd126d3e05d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1946 b03da320-1382-499d-bb76-85ce69ebd210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1946 eaa9ed8a-95da-4e48-8368-c07eae505641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1946 31c1f73e-e8b1-4a42-8170-7970f09348d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1946 14be250c-d1bb-412f-abfc-dc01dc1e37f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD764;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEC9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h304A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1947)");
    end
end

unit.assert_eq16(16'hD764, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1947 1cd39de8-74ae-40d9-b978-cd228156396b)");
unit.assert_eq16(16'hEC9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1947 f5819817-9c39-45e9-b54d-5c02238646c4)");
unit.assert_eq16(16'hEC9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1947 429fc7cc-451f-42ed-9f7b-a806ca65e150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1947 2314f73c-d030-4382-89eb-e668b152d14a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1947 c031a611-bfc9-49c6-84c2-298bbf019263)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1947 02f33071-7c3a-44d8-a405-49f3389e5050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1947 4756958e-540a-4fe4-a2be-c72afd746c56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1947 230b7565-781b-418c-a150-91c347af13d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1947 491ef298-808d-4d73-a4b0-d8ca272714e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2F5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFC5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0913;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1948)");
    end
end

unit.assert_eq16(16'h2F5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1948 a8be0b7e-f8cc-455a-84a1-0d93a9fe925a)");
unit.assert_eq16(16'hFC5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1948 1c7ef5ec-e28c-48b3-b671-c5310852cc60)");
unit.assert_eq16(16'hFC5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1948 1de5abcc-d9d2-4669-92a0-27c8a520e1e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1948 48bb489f-a1e4-4909-a908-1061d827d0d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1948 a7b2181c-c14f-4ce8-aaf0-affb121ea00c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1948 8744107b-7fe1-405c-87ee-bb89da5ad977)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1948 6bf62197-5912-4b5a-8dab-140370802350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1948 05cf88c2-10f3-4e6f-b13e-87778ec55718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1948 e29c7ba5-0a31-41db-9f93-7121fa29e180)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA562;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hCB06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h51A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1949)");
    end
end

unit.assert_eq16(16'hA562, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1949 5660e16b-54c3-47ce-b441-9a32ab162a13)");
unit.assert_eq16(16'hCB06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1949 04a185d4-d2df-4ae4-85fd-b085c0105cd0)");
unit.assert_eq16(16'hCB06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1949 f529c7a9-13c8-479a-b960-e028ed19a55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1949 db3b113b-b107-4f0a-8e67-fc0c47b66e6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1949 58ce4d4c-2f21-4e95-bb28-50e7053802e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1949 ac7381aa-7108-4cf3-b2b9-cb66b1ab6fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1949 f74743e2-ec97-4f29-8388-b69cf1e8b235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1949 050fd3d2-9d11-4313-86db-de4a7524b30e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1949 337bb673-f3d7-4245-947b-499a9419f1c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC35A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h77FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE81C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1950)");
    end
end

unit.assert_eq16(16'hC35A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1950 5658cc54-b4db-46a1-bb2d-70eca5ae5db3)");
unit.assert_eq16(16'h77FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1950 53e2236c-3b3f-422b-a1e1-4b9d163bec21)");
unit.assert_eq16(16'h77FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1950 c1554dd5-a127-4812-b3b8-4dea0bc867eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1950 b9f70713-04da-4f55-a148-d90c02a58de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1950 594d05fc-811a-4b43-826d-54bb0b1db0b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1950 73ec40a7-5a5e-4d4b-a4d3-73242a631156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1950 1814bcaa-2df4-469c-a8ce-5efc49bf7c50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1950 1571c054-fddb-46ab-9ade-aa8378eb7b96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1950 8061e698-ad3a-4065-ae1d-3430e835bfbf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9EFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h038D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1951)");
    end
end

unit.assert_eq16(16'h9EFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1951 1ba1e863-5cf0-49ac-b808-f599f18b60ed)");
unit.assert_eq16(16'h038D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1951 5283a794-0e2f-48ab-9d06-36cfb4467e16)");
unit.assert_eq16(16'h038D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1951 684ff1cf-d97a-4b1d-a22e-847239153e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1951 f3cd4eb5-692c-4151-9334-2a637c3895dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1951 76f605f8-3bd0-4478-9bae-4c9181bc2d6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1951 0276cfa9-160f-4369-a09a-2b16041486e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1951 60804cf5-4f38-4b5a-94f4-59f04625ffc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1951 2b3b8425-8209-48f8-8765-8f5303b4d953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1951 1622ec87-9eb9-41fa-8d27-8d0ac3a5ae41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h17FC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8438;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF0D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1952)");
    end
end

unit.assert_eq16(16'h17FC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1952 1bece004-8cf3-4582-82da-d0239173fc20)");
unit.assert_eq16(16'h8438, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1952 fd18af43-c08d-4d78-82b6-02b04d3c7343)");
unit.assert_eq16(16'h8438, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1952 a2ff748b-2383-4ff3-b6ad-2b08616b5358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1952 ab0c58eb-f27d-46b7-b1f7-c5912faf25d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1952 d1150d22-ec60-452f-a655-23068273aa8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1952 622ced44-afa1-422b-b14f-26fd191a6dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1952 81bf8f1e-0444-4ed4-be05-dc30413791dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1952 faa05434-2822-4b34-a66a-5afda5eb72ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1952 7308d036-e557-4457-a93a-a31ededaea5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h363F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hA9DE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB4ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1953)");
    end
end

unit.assert_eq16(16'h363F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1953 9999645a-355e-459e-815e-8ff79805ea91)");
unit.assert_eq16(16'hA9DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1953 7b11e69a-987e-4ffe-a347-6fa55199519a)");
unit.assert_eq16(16'hA9DE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1953 9d704c31-0e13-4f11-a1dd-823c57797364)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1953 428444e3-3656-42d3-aa55-c9b5ebf297a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1953 ac6f559f-4ef8-437e-9372-37761ce7e13a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1953 b27ab113-e153-4be5-82f7-739fd9fd50d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1953 196191e5-be98-42ef-822f-6d8b735211b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1953 77678104-35dc-40db-a176-56a91cb4fd79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1953 e1d8dc3f-3b8e-4e1f-8894-06761d356d7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6418;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6A60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h79F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1954)");
    end
end

unit.assert_eq16(16'h6418, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1954 581435da-ec89-45a0-8437-c76958308927)");
unit.assert_eq16(16'h6A60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1954 a3920d7e-72a4-4a7f-b6ab-8538db9b0784)");
unit.assert_eq16(16'h6A60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1954 885ff5da-30b7-4684-a425-0c3632b1b700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1954 9a31e6bf-c6da-4ae4-a681-2bf861d15c4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1954 6d40434d-30e0-4c18-b6a2-d8239d7118e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1954 dd3c6dc8-7f48-48db-933d-1abe69eed536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1954 72307840-2253-4f6b-b9c0-1703680f38f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1954 fb328cc2-b3d2-433d-8a44-431b2798f434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1954 28159125-8f91-4983-b92f-a5cd0a3af404)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1845;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6FBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDCF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1955)");
    end
end

unit.assert_eq16(16'h1845, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1955 bff33c7d-41c9-403f-98d4-f8bfaa9cb313)");
unit.assert_eq16(16'h6FBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1955 90461368-9609-4671-89b3-b72b7536d4f5)");
unit.assert_eq16(16'h6FBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1955 0f0e3ca5-818f-4c7d-b74e-bbad87a0e5f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1955 5846abe0-58b3-44a6-a903-0840005e5fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1955 40e6597e-4e4c-4c8f-929b-bba77aaaee2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1955 909a623f-8d06-4479-8247-43272fccf6d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1955 ee4ad2ba-ef8a-4892-bc3f-a872b0483c27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1955 ad52e8d3-e2cc-48fd-89bc-08c585d67bc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1955 d6ba5ed2-9186-4bd0-9c44-4a286c003aee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h27E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h52CD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA711;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1956)");
    end
end

unit.assert_eq16(16'h27E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1956 3c4851a3-1b3d-4616-8618-75db2d2740fe)");
unit.assert_eq16(16'h52CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1956 7733e14f-6799-4161-a118-f789a4bc0b73)");
unit.assert_eq16(16'h52CD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1956 6775382b-1589-4b5b-a0fa-a4eb6456cb78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1956 6ae1a8b5-25fc-4382-b3a3-6dd7fd5774e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1956 c9a58a8e-d36d-44bf-9161-3b40b3b22542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1956 de9db156-c6e5-451f-8177-5653b1e9d3a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1956 67c94fa3-8862-430a-9d3c-9605e0a5de86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1956 fdfcbd27-dbf3-468f-a39c-0cdd59c3a32a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1956 f1040d9d-79d8-44ff-aff1-b14706cc82bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBA67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h200A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h951F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1957)");
    end
end

unit.assert_eq16(16'hBA67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1957 fcbbc2c8-7653-4c92-8feb-0753150996d4)");
unit.assert_eq16(16'h200A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1957 63fb82ec-eba7-4eb1-af7f-0520d7df964d)");
unit.assert_eq16(16'h200A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1957 971f4a81-e559-44a8-93ff-9bd0f9677516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1957 d8bcc071-c773-4d41-b07b-d2490f207ccc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1957 8019ce3a-0265-44cf-ac12-0f86666ce388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1957 d0897ed3-e8bc-4ff3-8baf-5a90861382f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1957 492f1656-c02c-40c0-b7b2-e15983d9711a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1957 b19f1cee-63c0-4db4-8fb5-f6696a94c2d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1957 5b95ef4f-f3d3-4895-b195-200c3c888e20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDB0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3820;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1958)");
    end
end

unit.assert_eq16(16'hDB0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1958 6b10ae5a-0c9d-44be-9acd-903bbf3ab3f7)");
unit.assert_eq16(16'h3820, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1958 a63a175b-26ea-4547-8a90-bc4b5612c0fa)");
unit.assert_eq16(16'h3820, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1958 de875e20-78ff-4738-be08-ce827ea2ae69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1958 1ffbad14-8b64-40a6-b4a8-f86d08dabc00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1958 b9cc6a72-fb02-45e8-addd-5c13b21847d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1958 724dffca-62a8-4acd-b78d-72549551ddb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1958 be592d56-8af2-4576-b1fb-5e9e716cb696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1958 50a25d49-4d9f-4e53-8332-34cdc24863ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1958 1b63d01a-6221-4708-a2bc-fcd5fc2ef820)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h42F0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2964;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1959)");
    end
end

unit.assert_eq16(16'hAD9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1959 1da7def6-7161-47ad-ad5e-593c5e7a94ad)");
unit.assert_eq16(16'h42F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1959 a416fef6-de34-4cc9-bd33-8dfcffba9b10)");
unit.assert_eq16(16'h42F0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1959 156f3224-6cb2-4201-8bd2-df341c31dda8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1959 8ff778c1-6ff1-445e-a9c3-f8bb38367a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1959 a624f42f-297a-4bff-ab61-56e17df4905d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1959 2cb7e032-27a2-4801-9f6f-d7656733373e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1959 21617bbd-83f2-4dd6-9257-2d500e8c562c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1959 50371309-953f-4e61-89d9-b41f14ca0462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1959 91adbf8b-0abd-4c41-8ffd-a8671ce0488e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB4A9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5129;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF63C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1960)");
    end
end

unit.assert_eq16(16'hB4A9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1960 5d6ea627-f635-456a-b04b-7af2e7ec903a)");
unit.assert_eq16(16'h5129, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1960 890a5676-e81b-4e96-8b18-2847ed12be3a)");
unit.assert_eq16(16'h5129, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1960 66909055-0562-414a-934a-8e24b9791ae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1960 063dbbf1-0732-482f-a7f7-7abb3114c753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1960 b2a8c599-023a-4508-bb37-da19c9779dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1960 9bede876-ba7e-4c12-ab60-49b8491ddd17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1960 b0a374d7-8476-4431-9790-26b7a56953d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1960 f82cd3b9-cdd9-4e73-8333-7ce347c246a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1960 bffadd7a-a841-4777-a88a-cecec0b6c8cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDF32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE424;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1961)");
    end
end

unit.assert_eq16(16'hDF32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1961 60eaedcc-47dd-45cf-b9f9-679e075b8840)");
unit.assert_eq16(16'hE424, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1961 6d13a983-bd9b-4071-9f2f-ae2670ebb0a1)");
unit.assert_eq16(16'hE424, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1961 59b63535-fc80-45f6-acda-3040c7e1657b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1961 1f8fb7ab-0e7e-46a2-b1c0-a7f75c4b38ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1961 5f119b6f-224a-4e79-9f22-75fca501dc60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1961 d9b43b82-5ade-4c14-bed0-c68684e9cedc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1961 79e77274-b23a-481e-83c8-974fa6db979c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1961 6cbffa46-0095-4509-86fd-0fe38efc9507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1961 b704468d-1414-4dc8-a9c6-4084729aeed9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h27F8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAFD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1962)");
    end
end

unit.assert_eq16(16'hCE48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1962 5dc75e56-eb6b-4857-be93-bf5d19561ffd)");
unit.assert_eq16(16'h27F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1962 788bf798-568e-4475-8920-fff661b2e241)");
unit.assert_eq16(16'h27F8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1962 74f272e1-8683-4f1b-9c76-a3b16d48043d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1962 dd3f2dc0-e529-47e7-866a-3be95a4cc4b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1962 a8966a5a-a53a-4729-b498-4af265d76d41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1962 a7aad78e-209c-423a-8df1-a7e684a4c596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1962 55316ef1-6080-4255-b884-182b47c55ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1962 c5100564-6401-47da-970a-e774320acefc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1962 cfa5f6d6-2d81-4bcc-9d4e-063fd6620a3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE91C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBED0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hABF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1963)");
    end
end

unit.assert_eq16(16'hE91C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1963 43efbeb2-8b70-4781-97b1-96aa10925eef)");
unit.assert_eq16(16'hBED0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1963 df9ead1e-f6a6-4e98-813b-aa3b0a13a06e)");
unit.assert_eq16(16'hBED0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1963 e4e834d3-02cb-44f2-88bb-2a8d95a37976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1963 6115222c-5d38-4381-a24a-b93b7ebc9b93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1963 e5036197-c1a0-4498-b0f5-91bf3834908e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1963 65cca0ef-dba7-4617-af0b-d00df571015f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1963 aaa3d9db-d880-4c38-89ff-34053f73deab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1963 861d1dc2-d930-42c0-8bff-83f54d0ef044)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1963 62e72ceb-204e-419f-9987-9d4b91ff6e0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h74D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8108;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h594C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1964)");
    end
end

unit.assert_eq16(16'h74D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1964 befeb721-1a05-422d-842e-5ef8d7768b33)");
unit.assert_eq16(16'h8108, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1964 3a49c7a9-adc4-43ab-a553-b47216b3ce12)");
unit.assert_eq16(16'h8108, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1964 63c99872-9b94-4031-ae8a-53775ef26f2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1964 a61127a5-8879-4d91-9578-14977b441e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1964 36713702-568f-4c95-94b1-a9145b6192a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1964 51c63444-5d34-44d0-bd09-8a4c89047758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1964 de92e2c5-ad19-4725-b578-1eb955b5b15b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1964 8ef79ca9-ea83-4795-b003-ea46841a657b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1964 09de3846-1726-4f7c-9431-1f684cec9655)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h82D0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6BB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF1E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1965)");
    end
end

unit.assert_eq16(16'h82D0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1965 d5188315-f65d-4020-a0ce-3f0a97fdd8cd)");
unit.assert_eq16(16'h6BB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1965 e6c0968d-b5af-432b-88f4-94b5a57e3e92)");
unit.assert_eq16(16'h6BB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1965 ebf0768a-e561-444c-8156-40c1f68724dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1965 89feb046-7f75-4298-b6c1-2c31f1fe7a11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1965 a5230c64-7cae-41e8-87fd-23d75407103f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1965 9df5d176-f3c4-43c2-b1bf-83b9c0908157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1965 e81ba3a0-37b8-4097-8675-c295f724d8f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1965 76c0ea97-9ccd-42f0-83a5-6ed0ebb6dd50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1965 abbc79c8-1131-4b01-8461-78ad4e817519)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4B5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD156;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h28B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1966)");
    end
end

unit.assert_eq16(16'h4B5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1966 0537003a-9657-4f94-b5a7-e1461efe35aa)");
unit.assert_eq16(16'hD156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1966 761eabe6-0f0a-489f-bc5a-9ad23fb08f8e)");
unit.assert_eq16(16'hD156, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1966 75e247e6-1bd2-4ea7-84de-0107d547b9ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1966 f0a2d785-7ea7-4e0b-b599-448953ef03d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1966 76d0944c-d327-4f9d-841a-f05b64c57953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1966 0037c448-5dac-433a-a2e9-3218d97b23a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1966 7d0fe29d-1de3-4959-93b0-67421e4182e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1966 5728cff8-945c-492f-b47a-111a32f2ed44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1966 7eff899a-9382-487f-ab28-0e750c921fda)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAB82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC834;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1967)");
    end
end

unit.assert_eq16(16'hAB82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1967 03baa4e2-1ece-4dae-bf8b-aed6c16bf003)");
unit.assert_eq16(16'h6AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1967 137f64f0-f391-4393-b62e-4d4d775799b7)");
unit.assert_eq16(16'h6AE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1967 186c7468-1fc5-4b6a-a18b-a2d5445694d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1967 2c442136-e2f1-44cd-b906-eaffd8e72ba7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1967 e2447cbf-b99c-463d-9f92-35116dc8a6e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1967 8ac129ab-cc1b-4001-b779-e4e5518da811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1967 d3d06748-3ed3-459d-b389-aaa1fe1a2aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1967 6854433b-2db3-4116-8e23-f16a022beed4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1967 aa0f260d-f587-4e95-b891-1c900542827b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3356;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h766C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2831;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1968)");
    end
end

unit.assert_eq16(16'h3356, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1968 9ca0b59a-fa61-4865-8035-e26e24668588)");
unit.assert_eq16(16'h766C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1968 8f28fcfb-57e7-4edb-aed2-8686c64ac703)");
unit.assert_eq16(16'h766C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1968 7559cd46-7faf-452c-8929-d7a63774f6cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1968 8b86a2a0-21b4-46de-95bb-e835133ecfab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1968 4edc1016-1377-4ebe-ae2d-aa3cca1ee2c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1968 1d22cf59-262d-48fe-95c1-0655b05d5288)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1968 4f422553-7f24-47a3-877f-60f8b6bf069f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1968 f06c85c2-ba6c-4784-ab62-785b714f52e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1968 c7639d13-17ac-4cfa-9ae2-bdf9e8dff2e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4444;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5F75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0DF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1969)");
    end
end

unit.assert_eq16(16'h4444, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1969 c94eba2c-1c81-4da8-80c6-fe5d01550c96)");
unit.assert_eq16(16'h5F75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1969 554cea3f-e4de-42d5-905e-cff55df9c176)");
unit.assert_eq16(16'h5F75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1969 d7ffa78e-3135-4c15-a727-77cb7d09c009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1969 58e40309-ca29-4e75-88af-da378bc5b032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1969 7a3da6d1-e479-4310-b2a1-9ef389b58b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1969 e7b4a3fa-b417-4d77-ac98-7972dab039ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1969 14ee7b43-a576-44ee-8445-dd27fbb56933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1969 2fee353b-7d8f-4202-b672-cd360f0bf71a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1969 91841c6e-8173-4dc7-b7cb-72d9dd59260d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4F5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB1D5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8342;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1970)");
    end
end

unit.assert_eq16(16'h4F5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1970 7f169b53-ae5a-4be2-b95a-edeab417b10a)");
unit.assert_eq16(16'hB1D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1970 ef1422bb-dfa8-4fa4-8974-1ff30a2e9da7)");
unit.assert_eq16(16'hB1D5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1970 3c388c08-b555-4fd8-a171-844140303d67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1970 ef3e4191-8c61-4894-b253-bbc3c95713eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1970 30bba6e7-8afe-4977-9cce-e6cfacc3d343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1970 e23d70cd-ba9c-4cfa-a786-4cd76750814c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1970 7a3cf7f7-7f9c-4d7d-aee0-bfe4481ac4d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1970 1cdbf2d9-4f22-4408-bcc9-e2e6471a9e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1970 72a7dbde-1bbb-43b5-8876-1655de275e11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8031;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6EDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCD2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1971)");
    end
end

unit.assert_eq16(16'h8031, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1971 a65d1895-bbc5-4124-bcb8-ce8c5c27f07c)");
unit.assert_eq16(16'h6EDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1971 3164e8fb-0782-4232-ad96-4daefc3f8d1e)");
unit.assert_eq16(16'h6EDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1971 dccf9bbd-fa40-4241-a810-95d2578e5721)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1971 776fade6-fc0b-4399-94b0-5ecd09b10fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1971 be47a698-6001-4820-b6d7-7b07cdd59847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1971 9fe2d6f3-ae46-4bf1-a89f-b740235b19fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1971 48317b2c-1c53-4089-9a48-cb9006bb4605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1971 55b935bc-d9e1-439c-b4dd-d0873e9ef200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1971 57b1da3b-3630-4b8e-a534-b08037052fbe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2240;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDE38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDADF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1972)");
    end
end

unit.assert_eq16(16'h2240, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1972 ff9d91e7-d7a2-4fb3-8006-02b94ce8d0b2)");
unit.assert_eq16(16'hDE38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1972 9a62cfba-90dc-49d3-9b3f-760d94059579)");
unit.assert_eq16(16'hDE38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1972 33cb007d-b807-464b-8625-dbd88768a20d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1972 4edecbf7-dbcd-483f-aadc-e32da92b60a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1972 47b185ce-8d1d-4640-89c2-b67cdb00aae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1972 caf7419a-8b7b-4851-b195-82e87251f4b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1972 ada6ebe0-4c95-461e-895e-5c4442abf187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1972 935aeeda-9efe-4487-a497-b3e6d3f22b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1972 ad34b07e-0b2b-4af2-a9ef-242914f53a2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7C7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h24B7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBCB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1973)");
    end
end

unit.assert_eq16(16'h7C7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1973 6be73185-d466-421c-ae67-08ca6dab3e20)");
unit.assert_eq16(16'h24B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1973 234ddde5-49e1-4d46-aaa5-ebc4111bf92b)");
unit.assert_eq16(16'h24B7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1973 b3e8cca7-d821-4b77-8417-c4a430683654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1973 b235ffb6-8ae6-40d0-94b8-d5acc3cbf495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1973 90aa27aa-c859-43ef-b696-5688ee5c3793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1973 f07603db-5d28-4e28-8870-a19488eca240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1973 aa47191e-1b78-42fd-b721-c0eb3b998e5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1973 a1386e24-1b7e-47d2-b7f3-16665834b579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1973 515eeb2f-8233-4ec7-becd-4fc9a73d9445)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6C82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2F4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDDC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1974)");
    end
end

unit.assert_eq16(16'h6C82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1974 e4d5f121-feea-4d76-9597-30f7430dda37)");
unit.assert_eq16(16'h2F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1974 d9ffe407-cd1b-4eff-a033-c8c3d098e897)");
unit.assert_eq16(16'h2F4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1974 34906110-70fa-430e-b7d1-483c43b1217c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1974 5576f84b-f255-47fc-af44-4126bb5630e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1974 7f08d297-ba99-4725-9401-56f11f94a9ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1974 0d3b08ba-e827-4723-bbdf-21b7cc61e5de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1974 a06dbc3b-0fee-40dd-b086-4f0631e67603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1974 7c5ed071-cff9-4068-a385-99ad398a5dc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1974 7b60b4ae-2c0d-4643-aaf3-1af4e0bf162d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6A81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC04C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2CAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1975)");
    end
end

unit.assert_eq16(16'h6A81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1975 463a2dce-bd9c-4e99-9ca6-6661eac55c8f)");
unit.assert_eq16(16'hC04C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1975 74499ce3-68aa-4af8-8b3e-101b5b6a0f73)");
unit.assert_eq16(16'hC04C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1975 5447a0ed-8922-4687-929a-4c53b1d0e560)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1975 df8beef2-ef6c-4197-9d52-4f4acda8290d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1975 2a2f1659-ea4f-49db-8530-ae5343a2d83a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1975 d9ca668e-93de-453a-bedb-4cfc00124d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1975 2e3e144b-687e-4181-a35d-53993f2d8ce2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1975 2245ee6d-a399-4e22-a58e-91fb26873aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1975 77036d0a-b9b8-4031-bd12-3e698b71e85b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9A6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hE5ED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEB57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1976)");
    end
end

unit.assert_eq16(16'h9A6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1976 85e4a7e0-6c3a-43d8-89bd-b3de4a599a4a)");
unit.assert_eq16(16'hE5ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1976 3f512068-4168-4962-b346-99ec4ec5f61d)");
unit.assert_eq16(16'hE5ED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1976 4fe51bab-74d9-468b-ae15-6d1c913d82d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1976 2c17aef7-0b16-43f1-96df-262aa9959b91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1976 bc8bb9b2-f364-4184-9140-4500cd6af695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1976 0286504b-2a89-4eee-9c4a-6fdd72566d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1976 2ed926a3-7278-4469-bcfb-bbad341f63c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1976 4303f7b9-4dff-4898-b3ee-10bc72693dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1976 184cbcea-318f-45f8-8119-a96003ff38d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC562;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h439C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0BD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1977)");
    end
end

unit.assert_eq16(16'hC562, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1977 1a4f41fd-24d6-4ad9-8b4b-2c057edd7bfe)");
unit.assert_eq16(16'h439C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1977 85b78edb-4678-4eec-9a1c-c4d3a29ca0fd)");
unit.assert_eq16(16'h439C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1977 9563dfb6-780e-4cfa-8d32-33ecc09b7662)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1977 9f6a702b-c7d9-4bcf-9274-751c98ab77e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1977 6e884481-b4d0-47e6-ac07-1f7a55391a6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1977 5dcfad06-6835-4b34-b63a-ae4f6fad37ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1977 cda06265-96f2-491c-9efb-d14d462923b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1977 44766875-a839-4c4d-b9e7-5adeb5250ec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1977 5c3e45b8-68ff-4268-80ea-53a17ec22d36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5D77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h726F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE451;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1978)");
    end
end

unit.assert_eq16(16'h5D77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1978 c39e3f30-7f24-442d-89a3-d2e62d94f6aa)");
unit.assert_eq16(16'h726F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1978 0f2f983f-62e9-4ea7-8a77-cc072713b3f9)");
unit.assert_eq16(16'h726F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1978 56ef3431-cf34-4866-baf2-8d958f484a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1978 d5a21d77-d022-4a43-aa29-fe8d63d27efc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1978 b7f1b447-09b6-4dba-9e70-2421318d052f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1978 e168fbcf-935d-40ed-b598-417df3e8064d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1978 2c3e8226-c40d-48df-be1e-523c0fad012c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1978 e078c5ba-c9ed-4d6e-ac35-125785edb5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1978 390ab61c-a2cd-453a-8626-c77241b0b18c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h993E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1AA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1979)");
    end
end

unit.assert_eq16(16'h993E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1979 55139528-72ef-4d18-aea9-e9edd64812e3)");
unit.assert_eq16(16'h1AA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1979 c8df3181-3e61-4951-a535-7b134e0d4239)");
unit.assert_eq16(16'h1AA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1979 878e81d4-f9a2-4c2b-bb42-86c01d3c515c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1979 07a069ae-c888-4cc7-83c0-82bebd2fd4e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1979 a8a065db-7884-49c6-9886-8a6b82206ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1979 d5ab9d3f-0ecb-45f7-a18d-05c47cfb14c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1979 520e9e6e-6de4-4500-a5ae-5e5f63f14ebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1979 cba041d3-2a7f-440a-a990-b29cd84e7c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1979 72c7a82c-31d6-4c51-90ed-791032a69a67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7434;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB725;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEA4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1980)");
    end
end

unit.assert_eq16(16'h7434, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1980 51f1d55a-4261-4cad-9b1c-257511e8247d)");
unit.assert_eq16(16'hB725, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1980 01523a5e-5dd5-4466-8b4a-ec723dad7ae0)");
unit.assert_eq16(16'hB725, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1980 d44fd2e0-15ee-41ed-a8ed-5cea876cdd0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1980 00058ae0-ae32-44e4-acd8-98a8458b24fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1980 3634b303-832b-49e2-8ce3-58aafc1330ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1980 b913425f-57e7-430a-adbe-e8d02c2ea139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1980 9be5fd37-019c-44be-85e7-a79092d6ce47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1980 e112e2e7-73b8-4c1a-b34a-535d5207d648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1980 71404f16-70e9-4fd7-9522-d9e8ec302a53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE6C1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7A07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD2F0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1981)");
    end
end

unit.assert_eq16(16'hE6C1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1981 86011b39-6d57-42a1-8754-77554f35f8b4)");
unit.assert_eq16(16'h7A07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1981 979d81d7-1262-4529-a2d7-f382baeb4e5d)");
unit.assert_eq16(16'h7A07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1981 7ab1e8cb-de5d-460c-83ff-145d5cefba65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1981 db26fbe9-d3a1-4d70-969f-1598bc560071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1981 2121aac6-9c7e-4d38-afdf-ae7004bf5a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1981 70c06ebf-8ec4-4319-9937-13e4b1535664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1981 02a50e2a-d895-48a6-abff-a73aee92035e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1981 81bf8c8c-dc16-4e73-85f5-e70781ab10bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1981 339c8665-a838-4a7a-9a4c-9504ed3a8f72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCBEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2939;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h748C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1982)");
    end
end

unit.assert_eq16(16'hCBEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1982 91a4e898-ddf0-4c20-bbd3-885f491f6f23)");
unit.assert_eq16(16'h2939, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1982 51fec36d-c8b3-4607-9057-4611441fff77)");
unit.assert_eq16(16'h2939, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1982 d5ddf8e4-ab6d-4b71-a384-c6c549f932a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1982 c5ced902-1571-4220-9383-cad78db5f0c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1982 8c7d7158-a217-401b-8a9c-0ab54907bb0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1982 95326684-d7f1-4a8a-99b6-d4936b8daf43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1982 71ab8521-22d5-45f7-9650-4da5afb6da6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1982 879bec06-3a29-4053-bca9-a26d93c93f5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1982 8958d351-72bf-4a42-b9d8-aaec8c783049)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE674;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h2786;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAB1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1983)");
    end
end

unit.assert_eq16(16'hE674, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1983 8cd1b3f0-2429-4f63-ad31-4a52f406c733)");
unit.assert_eq16(16'h2786, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1983 74694761-cb33-41bc-8fad-3ccfcd1472ce)");
unit.assert_eq16(16'h2786, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1983 202955f8-e080-4dd0-ba28-7300055ff02c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1983 c04b21dc-9e08-4016-b068-06a823254013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1983 f3079a64-6f0f-441b-bfb1-82f5a5828e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1983 5a7602a3-c3ed-43e9-be0b-0a8acf5f9dd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1983 d8e0d877-bdb5-43d2-9847-4292d197610a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1983 e620927a-b954-4ef3-bf4b-5357747f4159)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1983 a7ce91dc-9b2e-46fe-9769-9904b027e8d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h29A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h4821;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEDF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1984)");
    end
end

unit.assert_eq16(16'h29A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1984 33b4871d-0b60-4c9b-9178-4fe7ac56e537)");
unit.assert_eq16(16'h4821, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1984 93d5f69f-e449-4366-9fb8-2c777e0a9f16)");
unit.assert_eq16(16'h4821, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1984 71619461-5147-4ba6-83d0-25e5a0c1dbfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1984 28e22ac2-a367-43bd-9deb-8e27b0335704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1984 3fadf78b-b8f1-4ed9-945c-6b9ad8a22b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1984 91224a47-e37e-40b5-a1d9-8672cba6a308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1984 6b4bdca5-dfcf-4f22-a34c-0b9680cf302b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1984 2082a053-1d8b-4298-b83c-1d57caaf2dae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1984 3bcfefeb-35a2-45ab-9912-94d8a543a9d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7AB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h7B87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA4C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1985)");
    end
end

unit.assert_eq16(16'h7AB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1985 64abcf7a-3cc4-4988-a680-674284f2bb10)");
unit.assert_eq16(16'h7B87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1985 56d64056-7497-4d2a-93c0-2279d9a42eea)");
unit.assert_eq16(16'h7B87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1985 9e63cbfa-bd81-4881-9c90-8767da22a5a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1985 48f75378-c006-4392-a08a-66f6628bd7bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1985 31d76e62-8a41-4b4a-ae40-a9bbba778cc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1985 683ce148-cfe4-4e1b-838d-858d65806236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1985 aa6fc1f3-b9b3-4c3a-b06f-13ea5e3e3e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1985 466ee79e-4961-47d8-af2f-526902660dff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1985 61649732-65d4-412d-a283-c9c98f21f9e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9D87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h25E1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h7F12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1986)");
    end
end

unit.assert_eq16(16'h9D87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1986 09400694-7a90-4085-b1f2-b2a3669193b7)");
unit.assert_eq16(16'h25E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1986 b7b45f43-7b0b-428f-a9f0-cb3e592f5b32)");
unit.assert_eq16(16'h25E1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1986 d295e2c4-5c65-4ba2-8d19-075b51fc8226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1986 7ee7c9a3-1f12-47a8-b0db-4f00f4d7830d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1986 7012f2b0-bb37-4fed-83b9-18eb8981fd33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1986 170b3d38-6e02-4840-ade9-5218971e8aea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1986 4cc22e4d-c378-4103-821d-c0a2bc53bcca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1986 a20182b5-0f0d-4b19-8ab8-4f5396012bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1986 98654eaf-839d-4457-80f7-75b663235935)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hBAE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h50CF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h716D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1987)");
    end
end

unit.assert_eq16(16'hBAE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1987 7ed7d2df-2dda-437f-a80a-f706c80ec0fc)");
unit.assert_eq16(16'h50CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1987 778b2cb2-8243-4d00-a6d7-3ee510e48be1)");
unit.assert_eq16(16'h50CF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1987 baef14f3-44b1-4e6c-a177-793bf5464b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1987 e24e98d2-8860-46f4-80af-6707e4c85763)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1987 3503e0db-666f-4dd9-bd92-7cd8fd37aa59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1987 071e9ddb-477d-4917-826c-b64e16a8187b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1987 08ba1715-fc3d-426d-8cc7-159fafeb6550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1987 13aac97c-e7fa-4608-91ba-020fb2639e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1987 a2642a0b-091c-4437-aef8-65086bf76467)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4340;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h20D7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE06A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1988)");
    end
end

unit.assert_eq16(16'h4340, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1988 a132f7ef-c189-4056-8ecb-43a581e52ee9)");
unit.assert_eq16(16'h20D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1988 cac4c529-19d5-4716-98e7-82bc571d110a)");
unit.assert_eq16(16'h20D7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1988 898b5a80-3407-4279-bd76-0953ce197bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1988 04cde95c-3d6c-4208-bd75-3d7caafa1b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1988 bb915a34-ab3b-46de-aab1-2573ed7df01a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1988 087370a9-c262-4388-af9a-800cec28de69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1988 6ac7f7c5-eda8-4d6f-bf4a-79a11628ae65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1988 2f930e36-abed-416f-b8dd-65aa472c8739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1988 5eb854a3-bd1a-4245-807d-eb2fd62f5b96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h924B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD2F1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h687C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1989)");
    end
end

unit.assert_eq16(16'h924B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1989 6b07f517-1047-4578-a382-9bdff8a0c6ca)");
unit.assert_eq16(16'hD2F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1989 ceb25587-1422-4ed8-b086-8339c90bb750)");
unit.assert_eq16(16'hD2F1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1989 ad0bb68e-41fa-46ee-8556-8c8e5bc22e45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1989 f36189b2-c52b-4fd0-8c82-4132fe1d5557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1989 b1ef9f4a-6773-4953-9b0b-ed087ac8c83e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1989 09230db5-2584-4d02-a62f-43c9644ae744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1989 05a43959-fcab-4a26-920b-bfe899e3e11e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1989 95cc94e8-f1d1-41c3-aebf-805cdb836a0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1989 6ed10425-1cab-4822-b4c2-c6abaab2f2b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1678;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hEDF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1990)");
    end
end

unit.assert_eq16(16'h1678, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1990 0f592913-18ca-43bc-a096-95312f900e25)");
unit.assert_eq16(16'hEDF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1990 044eac7b-41e9-4333-af0e-3e4cdd8f17f5)");
unit.assert_eq16(16'hEDF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1990 fb1caf9f-ac9e-4e64-b7d9-3753908d2f06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1990 459cfcd7-0414-41b3-92c5-03a6c4665870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1990 20c013be-472c-4f18-87e4-91c22eec6d16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1990 51d0dd87-9fae-40ea-b075-d6a54eb3c1d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1990 d0e17d21-4e7d-4153-9700-86d478577a85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1990 c4b4dc9e-2cac-407d-a33f-4697f28cf66e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1990 b0e0f15c-3b5d-44a1-9e49-9cef92316eb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h50E9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0A23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA3CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1991)");
    end
end

unit.assert_eq16(16'h50E9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1991 1e2d558a-b8d3-47a8-b446-72baf4b8876f)");
unit.assert_eq16(16'h0A23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1991 beb987f6-d3c0-44ff-88d3-a36a252f2cc6)");
unit.assert_eq16(16'h0A23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1991 4c7bd30c-232c-4408-8675-19fd90143e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1991 084f1293-2b82-4966-8520-7c44511fcaf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1991 42e2df51-e04c-45f1-bd81-aa8aad571a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1991 1a3d433d-ae32-48bf-b0b4-9a2e53f43b63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1991 5dfe5c33-10a6-430a-b63d-bd69a6697266)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1991 f3a1bc07-717a-42ec-b2e4-16437c33feb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1991 c09b2755-e275-406c-8ea6-8d8f318027b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3EAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h61F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF079;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1992)");
    end
end

unit.assert_eq16(16'h3EAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1992 021e5ee9-b73b-4e9b-b836-d6da58eaf099)");
unit.assert_eq16(16'h61F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1992 5e2b4e4a-b285-4086-ada6-a7945492bfd7)");
unit.assert_eq16(16'h61F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1992 af78414e-6978-4d68-ac49-42ac1787c24c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1992 29c4aaa5-4298-4581-b290-7608cab8318c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1992 f0af5377-b1ff-4b4d-867a-8913d1628f05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1992 9b4552ac-f0e7-4d08-86e8-5038c4087003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1992 2b8527c9-8685-4b8d-b0a3-fa68b2b0b441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1992 07c12128-a24d-4697-93b9-27e604bcd5d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1992 ec0de82e-4fdc-4a8b-877a-8f3efe70aa18)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9600;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hBEB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h61BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1993)");
    end
end

unit.assert_eq16(16'h9600, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1993 24c85a62-d0f5-41a6-b21b-1d150eb9c87e)");
unit.assert_eq16(16'hBEB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1993 a249a94e-4180-43db-8db2-b4db4783cfb0)");
unit.assert_eq16(16'hBEB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1993 1079d2ef-32b4-4d54-b4a1-f442bfc13c26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1993 3280d622-3d72-430a-87cb-ee70283c6c72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1993 cdbbefaf-3ed9-4fff-9131-1c8045dc0299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1993 f876367a-148d-4f03-8c76-8ebe491e3949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1993 87584e0e-9beb-46a2-b630-eab9e1fb1c48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1993 b9e07842-18fc-47cb-958d-f6e0cf6785bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1993 edb01b73-de41-4277-b7a5-6598da1d1e1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB829;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF761;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hB1B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1994)");
    end
end

unit.assert_eq16(16'hB829, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1994 e224a050-b670-47ea-bfc1-0e5119a51439)");
unit.assert_eq16(16'hF761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1994 4da3f0eb-dda5-4dd1-b53a-c743f894a58a)");
unit.assert_eq16(16'hF761, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1994 87fb5007-bb30-486d-ac2d-607d099a48d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1994 79b9e965-cc24-4444-94ae-4f0e8785a7b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1994 4b8b4e89-bd1d-44a9-afbc-44b1d42a08c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1994 4647acbf-32b6-486e-86bf-8954812e44ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1994 28e4e23c-57a9-488a-aa29-c4811012766e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1994 d73f2cc8-d9a8-4ae6-8f82-3323c79cfd77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1994 7f99f082-a802-44f0-ad75-3322cdef6084)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h95D4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9E63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hEF13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1995)");
    end
end

unit.assert_eq16(16'h95D4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1995 a67f0656-f389-4359-80c7-a247c7e7ade3)");
unit.assert_eq16(16'h9E63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1995 578dbc43-7920-4eee-8cc9-68466e71e9c0)");
unit.assert_eq16(16'h9E63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1995 b285b273-ce4a-4a0e-a6ad-f572f0a89187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1995 5bbd6522-d454-40b8-8e20-02ed7b8cf8ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1995 d5b0c2f4-2b61-4567-b324-91a20f06e2db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1995 74af1a36-0abd-49ea-b3aa-3bfc90016c51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1995 6496c10a-726e-48b7-8cc0-2ea97a335412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1995 b47c45b9-62aa-4547-8b8c-e74cd6696a08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1995 78544548-a0a6-435e-ae00-5a1bbfb79575)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB4B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFB5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h61DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1996)");
    end
end

unit.assert_eq16(16'hB4B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1996 d89fca94-c5f9-4279-bbd6-a820a4421bf3)");
unit.assert_eq16(16'hFB5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1996 0588fdb0-2da9-4a10-b3e2-9e39b236fa94)");
unit.assert_eq16(16'hFB5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1996 1c9a918d-8545-4c1d-ac40-05f58fe3585b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1996 a6f98122-7f1c-436b-a5c3-076fb2805cc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1996 f37e47c8-a60b-41a7-850d-4e44d28b067b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1996 a43e3ca8-db69-4def-8bca-8ffef58291cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1996 c50dc2ae-890f-427c-bcbb-8dbb70e1f5a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1996 2b060b1d-8ca4-4fb0-b0cc-d2ebb63362fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1996 e3ef758b-153a-43ff-8746-7ba44b984ef9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA1F5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h57CB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE17F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1997)");
    end
end

unit.assert_eq16(16'hA1F5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1997 c396b6ee-0c6f-4a35-9b6c-4095de4d2097)");
unit.assert_eq16(16'h57CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1997 5b6e0f88-97d0-487f-a32f-ccb5e6597e11)");
unit.assert_eq16(16'h57CB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1997 ab4ccf15-fc06-4085-b505-58895fd51b58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1997 a4b33975-5104-415d-a205-113d221a46da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1997 cf6b9131-602a-4676-8f96-118cd5cf2f99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1997 33f07d09-25e7-4367-bddb-a3da1689b424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1997 1ad4d525-dadc-4c32-b5da-525d8c33cd21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1997 d3170a0a-a372-49ba-b721-39d3d9927dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1997 11da62e1-86a8-453a-ab96-a29ee1163a6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4A82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8729;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA51F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1998)");
    end
end

unit.assert_eq16(16'h4A82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1998 30be26f3-7585-44fc-8877-531d69ae7b62)");
unit.assert_eq16(16'h8729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1998 65d7a822-cfcf-4296-848a-127c0c240f7b)");
unit.assert_eq16(16'h8729, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1998 7d2ce9db-2edf-4a9d-aeff-12d238c9e119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1998 ca5847e9-5f6a-4d75-8995-7302705d4ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1998 f5e3f614-204d-4daa-997e-ea507bceb4a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1998 d40ed303-38cb-40c0-840f-1c5f20d6fb99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1998 458c65e1-891d-4420-8a4f-424004324a0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1998 673b9816-c83a-4a58-bab7-4ccacece9f7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1998 eef63b78-b058-4e76-aaef-6d676a6f74b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hDD92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h48DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h53C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1999)");
    end
end

unit.assert_eq16(16'hDD92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #1999 20170aaf-0597-4dff-9573-0689b5b38b7d)");
unit.assert_eq16(16'h48DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #1999 19462a4e-93b0-4b8c-bc1d-63636e833a11)");
unit.assert_eq16(16'h48DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #1999 53abb403-5d62-4f88-abc3-25a5c34d3fe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1999 ad9fd238-e84e-44f5-8caf-fce77cc2fb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1999 da3dd1bd-8e59-426e-a907-3deb71c1137e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1999 50098767-adb3-4d0f-967a-ddcc49790ff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1999 beaf6ebd-0298-4886-9391-eed4b1b0c44c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1999 faf87cae-6c1c-4b83-bf2d-8f40846be6a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1999 c4190c85-d308-432f-9f14-429e745432bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h9A27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD291;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBB1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2000)");
    end
end

unit.assert_eq16(16'h9A27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2000 b452768e-b550-4956-8be8-54da1411feca)");
unit.assert_eq16(16'hD291, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2000 ab2fdc05-a49c-4a9a-af52-69468beddce3)");
unit.assert_eq16(16'hD291, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2000 d3cc1261-2514-4887-8155-f7ee91187bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2000 13eab1be-3d67-4525-948e-d82484bfb9b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2000 7abeb1d6-3f25-4e1a-9a76-65353f8acfe5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2000 884f49d1-99ac-4619-9225-e587d5d898e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2000 10263ea3-d54f-4d18-9a6f-472a77ec12bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2000 f8e6db12-13f9-4dc8-9b92-cd5f7d3958d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2000 cd611436-4f94-4d69-a26f-03f2925a3f44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB972;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3238;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBC3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2001)");
    end
end

unit.assert_eq16(16'hB972, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2001 70b8a373-e3eb-4277-bdb3-303022fc6c1e)");
unit.assert_eq16(16'h3238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2001 e24cc4f5-b8cb-41c1-a8f3-e2df1d552ba1)");
unit.assert_eq16(16'h3238, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2001 24cff4cb-9e44-44f9-a611-242d283392bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2001 426a124f-ad8b-4c54-b9be-23e6977ec63a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2001 e8cfe4e0-3253-4750-8ccd-8fa7b60c805f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2001 8dcfc53e-8448-4a42-ab5b-f76a9908a967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2001 7cf138ee-9483-4411-8b67-3211284c3c9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2001 b8573774-fdb3-4567-a1ab-248f618d9dd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2001 e9e944d4-d1ac-4315-af53-5d4e92b9fde2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5480;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5840;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2C5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2002)");
    end
end

unit.assert_eq16(16'h5480, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2002 c644fe18-1538-48ff-8ff4-149d7fbe9d3f)");
unit.assert_eq16(16'h5840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2002 9ad17f58-0ac7-423c-8288-aaffccc2e660)");
unit.assert_eq16(16'h5840, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2002 bf23edc5-c916-44d7-acef-b67174eb5234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2002 9e2818a0-b869-49cb-9bb7-3269faa4506e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2002 75d20145-b0f8-4523-94a9-6d21108bf8eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2002 b5c7f24a-f170-45de-90e2-edb4c72fb10e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2002 7afa45eb-70fb-494b-a556-73391afccf67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2002 a68394b0-7438-4bec-a713-443e116cf335)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2002 29be9be3-72bd-455a-94c3-c9f280ef969e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8A84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6CA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h30D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2003)");
    end
end

unit.assert_eq16(16'h8A84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2003 503fbd1b-1b58-408d-986b-6c2a3bfd5ea2)");
unit.assert_eq16(16'h6CA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2003 68ffd3fc-3d82-4850-a4c7-bccd038d30bd)");
unit.assert_eq16(16'h6CA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2003 46af57d5-b34d-464e-bb21-9f46e06e6c8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2003 96bb1782-3266-419f-82a3-700fe553b5e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2003 e5b7903a-55c4-4725-9ae7-2b3b9396d34a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2003 1b8e1bb4-c7a9-452f-a975-0b9abef5724b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2003 4c265a40-97fb-4d2e-a635-cc87ade11e1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2003 674ba117-249c-4b8f-b0a8-628b41c1ab0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2003 39701cfb-edce-4e12-ad98-06fa77e70e8f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB0F3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h43D9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA862;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2004)");
    end
end

unit.assert_eq16(16'hB0F3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2004 1752fcb8-9af7-4b10-8d98-8886a8aac7b0)");
unit.assert_eq16(16'h43D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2004 6b1e3d77-ba65-45e6-a895-12a034392184)");
unit.assert_eq16(16'h43D9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2004 070218e8-6d8a-4c97-89da-2100fdb8cfe8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2004 43752c76-5ecb-432b-bd70-07a5365aafdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2004 02ac4b9c-7244-4594-9ce6-3a93749ac825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2004 be9c36e0-3a41-4bb7-8ce7-cd21f5be96c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2004 d1e47b7a-663a-4b27-ae77-1c140bcba08a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2004 30393779-d080-4963-bb72-88666266b87f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2004 d5d3c6da-6645-458d-aa23-5ec00e0fd355)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6183;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hAFF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h98D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2005)");
    end
end

unit.assert_eq16(16'h6183, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2005 8f89be8a-934f-4a25-b1a5-f580d0654dcf)");
unit.assert_eq16(16'hAFF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2005 62f7c9f6-90d9-4acd-aa93-1cd4940f8022)");
unit.assert_eq16(16'hAFF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2005 b46ab15e-4d11-4320-9a6f-e1b07b7d51a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2005 5a015cae-6107-4fae-a41f-82ed9778d7b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2005 ac43773d-7c62-4f93-b649-5c536ec4ea45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2005 9a0cb772-ed0d-4264-9272-d6058aba9563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2005 084c10ed-b440-4afb-b63c-ed1db96f5b40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2005 d8a64ada-25c2-4780-a5b3-d3f19cc37d34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2005 4d884154-6abb-498c-a240-4890f0c7a909)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hCE16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1BA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE5EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2006)");
    end
end

unit.assert_eq16(16'hCE16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2006 1b749984-58b6-4795-adc5-a9dcc0df9acc)");
unit.assert_eq16(16'h1BA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2006 4f32aea1-be91-49ce-b66d-fb841fba89d0)");
unit.assert_eq16(16'h1BA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2006 9b345fec-9915-464a-ba8a-06cc73e666ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2006 1d79a7af-05bf-4f21-8805-a2df76bcbf8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2006 8c04132b-c94f-4608-92c9-c7969deb521b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2006 563897e8-965c-488c-9149-42c88b1b0794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2006 dfba885b-224b-48be-a17c-f1f609a6e7ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2006 cb05a54a-006b-49bd-8af7-4916abaa5119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2006 7e3e8922-7fec-4254-b5cf-344b14e21035)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h155C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1076;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hFD68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2007)");
    end
end

unit.assert_eq16(16'h155C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2007 7b0fa5df-51d4-4c84-9651-e3712d977eb3)");
unit.assert_eq16(16'h1076, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2007 6641a2a8-4e34-48f3-a37c-c945ba8f321c)");
unit.assert_eq16(16'h1076, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2007 f34238c7-ef89-437f-952a-3192823c9af9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2007 5179988c-3e5b-4cec-8261-53b2a7e9134b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2007 ce508e5a-5046-4dd6-8703-aff549ddc2ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2007 de6eab01-aaea-4836-902f-1e64a49c0464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2007 8ea694aa-a1a3-4274-9534-fcd884e9c48f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2007 cf695ebb-2688-487b-b06d-c422b4c235cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2007 2cbff250-8176-435d-9804-8b7049f0d83b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h3BE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h76C3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC9B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2008)");
    end
end

unit.assert_eq16(16'h3BE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2008 60cae981-3710-4244-a96c-55b7265c7bf8)");
unit.assert_eq16(16'h76C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2008 b97d3193-043e-4715-840d-7c6d9c83a085)");
unit.assert_eq16(16'h76C3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2008 1ef60955-a3b0-43dc-9fd0-ff2f81973fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2008 de1caba1-a719-4959-8114-fa7c7fa6c229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2008 d4be2222-92f3-4412-b3a9-abf8c49e93cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2008 093958d5-2b8e-417c-9172-198c6718fe40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2008 038fcb94-49f7-4934-90aa-ba5f4ef98d42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2008 aa4dda26-7c73-4c23-b112-585eb22b0789)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2008 4e0475ee-324a-4c0b-9885-b250150a4c4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0858;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h98F4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9413;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2009)");
    end
end

unit.assert_eq16(16'h0858, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2009 7d5af992-d22e-47fc-943d-598bde7f291f)");
unit.assert_eq16(16'h98F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2009 fc54ad8b-3b4c-4a8e-b8bb-41143857d774)");
unit.assert_eq16(16'h98F4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2009 b915a4db-c4d5-42a0-a2ec-20ff1d5d4c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2009 7fd18801-0cdf-4dff-8f14-6d459987013f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2009 4c737b5a-a735-443f-98fb-dab67bc7c491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2009 674834a3-ffd0-4328-bca9-afecc16956eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2009 2e4129ac-757d-457b-a8bf-e0f5f63d1473)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2009 1465d050-b029-4db4-8cba-93902ae14d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2009 6bfa2cf0-d9c3-4dd5-affa-02cb2364f866)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAE75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h41C2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hD378;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2010)");
    end
end

unit.assert_eq16(16'hAE75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2010 cb723e34-86cb-47bf-86eb-5fe145d45755)");
unit.assert_eq16(16'h41C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2010 6d934226-335d-4ddb-9364-03547fe5bbd0)");
unit.assert_eq16(16'h41C2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2010 3456af79-133b-4755-96df-193e155ace35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2010 a44b1b83-63f3-47a6-9601-4860e03db738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2010 b7f53a7b-6f6a-4466-a371-15a2797c2228)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2010 37c533d7-4d69-4e48-b07a-92a8534793fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2010 082cb9cb-e777-428a-b2e5-24696d56ecd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2010 6b2dd0b7-de02-40e8-b9f1-a2ecf633c58d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2010 0c9a8e27-8884-4557-a3c1-719f9899d28b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h688F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h8188;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA7C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2011)");
    end
end

unit.assert_eq16(16'h688F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2011 a3fa882c-9fd0-423c-8704-a3a9ae8f32a0)");
unit.assert_eq16(16'h8188, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2011 f1b9449d-bb26-40b9-86de-d96c8b83f453)");
unit.assert_eq16(16'h8188, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2011 1707b475-7b2d-45d8-9317-2b4fd4eb074d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2011 70d6ecff-a849-4e0f-9e27-6e05df9a4506)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2011 475dcbe6-d912-4e54-9bf3-04fae98cb4d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2011 b988c546-29bb-4455-8692-6954f4ebc15d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2011 3b0434ef-3c69-4637-9f43-7dcbd2789f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2011 df57200d-9917-41c2-99ae-a4f2676fa06a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2011 2499c64a-70d7-412a-9d0a-616ce4acbbe8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1B2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1A37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h90FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2012)");
    end
end

unit.assert_eq16(16'h1B2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2012 f2ef085c-0e66-446a-8f8c-5460e5f6c4d2)");
unit.assert_eq16(16'h1A37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2012 deec4afd-8522-4aea-9c09-85b5c82cbb0d)");
unit.assert_eq16(16'h1A37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2012 1c2eb751-c7c4-4a44-b167-648f8aff87ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2012 a5bc224c-5337-4805-9020-d5eeaaccb27f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2012 eaeb71e3-185d-4710-9d9e-17a187293a7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2012 4ae7c6bf-e91c-4996-b2a4-57ebc0360fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2012 e4bd8cae-4cab-49b6-b6bb-66e43398d1b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2012 07b951a6-ff5c-4166-8243-0945d92340a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2012 b7d83070-ff7d-4712-b6a2-bdb3148b98e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE74F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h3683;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h34B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2013)");
    end
end

unit.assert_eq16(16'hE74F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2013 057cb5d1-d1ac-4f43-bcd1-276de2828838)");
unit.assert_eq16(16'h3683, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2013 93c1e856-3a35-4b73-9e97-007ee88b6d9e)");
unit.assert_eq16(16'h3683, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2013 ef5167b4-e306-416f-8e3a-6fd34f76a87e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2013 2170398d-76d3-4111-ab1a-1f7cbd30e278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2013 ebb98306-8f4d-4fbf-85e3-0ef3c3b85bdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2013 91f8da37-5091-4b9e-83b0-6ec16cdb6740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2013 7e9d7d3c-6e5c-48cb-b4ac-9d2522b784d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2013 afde1567-98a5-4535-8a2a-09b37313ceed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2013 ef64e086-b579-4c2f-8532-71f77b7d4d42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8782;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC58E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA6C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2014)");
    end
end

unit.assert_eq16(16'h8782, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2014 e6dbf012-9a98-4e92-b326-b040f2c297d2)");
unit.assert_eq16(16'hC58E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2014 ce97bd8d-80f2-4301-b5e1-de7dd9ce88ac)");
unit.assert_eq16(16'hC58E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2014 5e32709d-aa34-4047-b409-03d10f910051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2014 45ebd941-671e-461a-808b-b3a76e355dcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2014 7ff316e8-4adf-46d9-9c5a-8cd3853670c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2014 4f45a578-b80b-45b2-b3a6-9c8bf4fc0360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2014 a62a3ddb-98b9-454a-8c84-066ef71e241d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2014 d2627586-b0e7-4d0c-9684-daaba43b0fe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2014 057496dd-3d33-4553-849c-76fae67a9463)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2EA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF2F2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8790;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2015)");
    end
end

unit.assert_eq16(16'h2EA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2015 321a2500-2c10-479e-94b0-b2101a076cc8)");
unit.assert_eq16(16'hF2F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2015 3f571a10-f2ab-40fd-8056-0e6a336bd4fd)");
unit.assert_eq16(16'hF2F2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2015 93c9205a-cc06-4762-8105-efe1884d73eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2015 5e21351f-6f89-4cce-a555-9a6096cf59c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2015 d1118952-afbb-4d90-bd6f-dd6554304f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2015 db1cfba8-6dc2-4e1d-8f17-6581d850f4b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2015 a20a436e-63eb-4af9-a89e-e3ef717e2b09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2015 e546769f-982f-4ee9-aa14-8efaa763fb6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2015 07aab2e2-bd61-427f-90fa-8355ef7c15d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h92F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFD2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1492;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2016)");
    end
end

unit.assert_eq16(16'h92F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2016 36f2ea69-73c4-4eae-83b0-dc2842c616c2)");
unit.assert_eq16(16'hFD2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2016 71e8daa2-e677-4fcc-8ac1-404e5d932715)");
unit.assert_eq16(16'hFD2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2016 73847a96-cc4b-409f-8e71-fd5384879d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2016 4bc54eaa-1f3b-461b-8403-f6db5520fd44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2016 fe717cd6-2ee6-4194-8392-c7cb6128b444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2016 10f8a4a9-fb18-4132-bd55-7d3920473fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2016 a1d49581-2a72-4d1b-b128-500639190050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2016 172fe75e-27ec-42fe-ae34-510e03166229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2016 227c2942-12e2-443f-b41b-a0c380018a1b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2352;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h34FB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6BBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2017)");
    end
end

unit.assert_eq16(16'h2352, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2017 95dca838-65c5-43c1-9846-6e1668415783)");
unit.assert_eq16(16'h34FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2017 4e93f881-ef91-488e-8491-939e0b208473)");
unit.assert_eq16(16'h34FB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2017 7c458819-a719-41da-adbb-3ee9d4f32b42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2017 5ecf9380-edf9-4b3c-bb6c-dc3c03d38672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2017 ce79ef56-df51-401e-ac5b-021855a5fdfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2017 a054c9fc-0ca2-4708-b989-54fe0bd89e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2017 9fc84d0b-ec25-447a-ba4e-cd2d00f81b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2017 6cea6029-5978-45b5-a1af-75955ee8943e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2017 61dc7329-3ff0-41f4-829c-91cd33339dac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hAD8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDFE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hF3E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2018)");
    end
end

unit.assert_eq16(16'hAD8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2018 aded927a-5c75-43a0-ad39-e6759f8ca46f)");
unit.assert_eq16(16'hDFE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2018 aea49189-f56b-4dfe-a7f9-e2e861aeeba2)");
unit.assert_eq16(16'hDFE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2018 48e1b6d2-d596-413d-8c60-3e5e93874a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2018 e3aae03f-2e97-49d9-98f3-9aa19d9c00cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2018 0b5abc52-896c-454e-b7d7-8ca5bbf25887)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2018 2844f243-86ce-4a29-8cea-3131a31e3dd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2018 15fe601d-495e-4928-97bb-4ceb4b65cd6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2018 550644dc-c5fd-4634-8eb3-8e5a05e377fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2018 dd42278c-4060-4fac-a99f-58bf168164e1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h4174;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0D34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2510;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2019)");
    end
end

unit.assert_eq16(16'h4174, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2019 e6bce278-7c20-497c-b2ab-576ec855fd3b)");
unit.assert_eq16(16'h0D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2019 b0a70b2f-d1c3-44dd-9bbc-3cdb5f87db61)");
unit.assert_eq16(16'h0D34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2019 b261c491-2d62-4b74-a0bc-55c2322ae9f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2019 74da6aa2-7634-4ce8-b809-f04728210c4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2019 6c5a41b9-ec3c-4fed-87be-b30418f2e664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2019 d4c65a4b-f9f1-4aac-9a35-53522e63e78a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2019 3194b294-fa20-4637-b17b-6a8a47ceb90d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2019 cc1d83ba-aec3-4c73-9634-d203bfb5796b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2019 34b4d3b7-ecf9-4f72-b9ff-19df9ac5b0d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD67A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF71E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCB24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2020)");
    end
end

unit.assert_eq16(16'hD67A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2020 bb701977-f875-4442-bfcf-8a88a84d05be)");
unit.assert_eq16(16'hF71E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2020 8c53757e-5a4e-4ba7-badb-b1a043854eb0)");
unit.assert_eq16(16'hF71E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2020 ba69927d-a4f6-4af5-8288-74319d9bae27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2020 00c081c7-b9fd-46eb-9cca-391d26e66f67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2020 b7881661-1a1c-4bca-a0ff-b411e7e952d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2020 dc566d8c-87ba-4b91-afa4-542d32cb1c79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2020 75aca84a-bf42-459a-b5dc-d4494c79d17a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2020 1f1894de-ffd7-442b-9e05-72d0af75ee64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2020 b9ab67ab-202e-4379-a951-e5d4d3451eb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h39E6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h45DF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCC11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2021)");
    end
end

unit.assert_eq16(16'h39E6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2021 a7c114e1-9aa1-4aa7-9ecd-7ffcc9e56d3e)");
unit.assert_eq16(16'h45DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2021 05fbec9c-9ceb-4ec6-9164-26cd48d65bf4)");
unit.assert_eq16(16'h45DF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2021 12e6c273-5d16-4e9d-b01a-3fc61f3f2402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2021 e88780d9-5ade-4a6a-9b25-3f5c856d41ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2021 5616cbc2-f0e9-469e-9b94-9a3cea529ab8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2021 f5b61c71-3d76-4712-8345-82a7012f9bd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2021 4ebce3eb-b617-4bb8-a94d-63ed9cd179f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2021 067abc0e-65c3-4341-8a3d-6f34d81e5cd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2021 9aef9cc2-b282-40ac-8426-81e418b26293)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h781B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h214F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC45C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2022)");
    end
end

unit.assert_eq16(16'h781B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2022 6084b4ac-59dc-4584-a6d7-c57c9e8425b9)");
unit.assert_eq16(16'h214F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2022 d8ab1d89-b06f-4d03-a053-7fe2e0761217)");
unit.assert_eq16(16'h214F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2022 b04a8d46-2b03-40f7-8ce3-fa3a9d33d4ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2022 44b8d430-ee29-4ffc-9f4a-f29dcbcb0a45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2022 6135d8fb-ccdb-4d82-b14e-e5cc37decae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2022 8247fb78-d246-43c7-8aaf-ecf62c048ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2022 c811a3fa-6162-431e-ace1-3e10c80515f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2022 8b6cdc28-7385-4045-a886-dff3fe4999f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2022 ddfce466-ce1a-4b4e-9180-020cbf929201)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5C1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h37A8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h81F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2023)");
    end
end

unit.assert_eq16(16'h5C1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2023 7860c784-abe3-4cd8-bbdd-91efd14c27cb)");
unit.assert_eq16(16'h37A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2023 eaedf19a-16f1-4fdc-bba5-0e96c9d9b3b8)");
unit.assert_eq16(16'h37A8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2023 b253bd73-9deb-4e47-926c-82b92adf2ec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2023 1e26cef2-ba92-422d-8719-e8a7f0a89fc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2023 585e43a0-2b13-4712-8a98-87cd125ff796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2023 265989e4-de0e-4f27-bae3-1a2f6ae1d8be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2023 3c38309f-82f0-4eb6-82f4-859a57efa617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2023 3e91ccfe-c1a0-4d0c-bfc5-dd3b1b3ebd4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2023 34e3ed9b-d58d-4803-85a8-e54ccf26e4a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2024
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1734;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hDF7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4A98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2024)");
    end
end

unit.assert_eq16(16'h1734, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2024 e61bd762-81a4-40c6-9151-7d30e3d164f9)");
unit.assert_eq16(16'hDF7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2024 baa99dfe-f53c-477a-9ee5-8364e8edb80f)");
unit.assert_eq16(16'hDF7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2024 2b176950-8015-41b3-aaf7-e9653535730a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2024 5f89d45b-dc4b-462d-8428-4fd113eb3132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2024 f734129d-60e9-4025-99a3-4f3b0b1fcab8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2024 2a75656a-29d0-49b1-af0d-6f9bc66b0709)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2024 6cd6f3ba-c9ab-4435-9d1b-aab662e4ad35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2024 a544063a-db4b-43d0-878e-46d810941b0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2024 79699085-4901-457b-bb6e-126dbebe8b41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2025
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC2EF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h86CA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC943;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2025)");
    end
end

unit.assert_eq16(16'hC2EF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2025 514c64b2-e908-4b1c-abc0-142b8e646975)");
unit.assert_eq16(16'h86CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2025 406cdbcb-cf78-45c7-90fc-1903c0370029)");
unit.assert_eq16(16'h86CA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2025 a6142371-2250-4da5-af81-f172cb222e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2025 53e9a6b3-f87c-4926-8aee-076b9c4c7558)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2025 9c9a826b-2182-4473-9069-455feb19d27f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2025 79365962-19c5-422b-a811-651c1ebaaaa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2025 6cae83bd-99b8-4299-862d-2abceefce789)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2025 84e4cfbb-0da9-4690-9bb0-b1c4de7ff34b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2025 700d0548-d0c1-46d5-a27b-dba15ec4b560)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2026
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8312;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h547C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hDCD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2026)");
    end
end

unit.assert_eq16(16'h8312, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2026 df19764f-060a-4b77-94b3-d5048acefe53)");
unit.assert_eq16(16'h547C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2026 d3ed312d-1a54-4b34-b43a-89accda69449)");
unit.assert_eq16(16'h547C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2026 f4fc3936-8842-4373-8352-dbbb814c2511)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2026 405fd807-a2de-4878-ae51-c48ec9211f62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2026 81c6aeb3-0b70-4255-ab83-c39157a62c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2026 d9807145-fe18-4656-b947-0ead75b3bf52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2026 5de52f26-2839-4456-aa35-af766cd57ef5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2026 c61ac334-a8a4-436a-85d8-010aa03df02c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2026 36ee59d6-e0ea-498a-8baa-10bf288896bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2027
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5A8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD861;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC3AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2027)");
    end
end

unit.assert_eq16(16'h5A8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2027 5a65fe21-ec98-4f4e-bf99-cf46a32ed877)");
unit.assert_eq16(16'hD861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2027 7319430b-a2e4-4533-927a-e23a8548f2a4)");
unit.assert_eq16(16'hD861, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2027 bf94661e-0eed-4d02-ae65-454f4519b33f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2027 8eeae608-1286-4c4a-9da3-0382a4f98de3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2027 8d96920b-652e-4bd6-a08c-4508436c8591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2027 72b52513-ec6e-4762-b53d-84f870f985b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2027 b48e95d1-7b37-4ee4-99c0-f95564033c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2027 d15f80f0-a2c3-4001-a926-516aa19065e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2027 5a0fdeb7-715f-465b-a08b-b070bd202284)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2028
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hFA68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h889D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE947;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2028)");
    end
end

unit.assert_eq16(16'hFA68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2028 9a0b4044-9f49-4acb-a78b-f0e51162ce37)");
unit.assert_eq16(16'h889D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2028 8d96d0cc-00a6-4377-b812-f83f7a1057a6)");
unit.assert_eq16(16'h889D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2028 fb63d5bc-9629-43d2-962d-b3525e816382)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2028 463a4059-884b-4543-baa6-3527519f5d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2028 fb08a394-b0b8-40e2-b7ad-c61607855243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2028 fbb79ba9-65ec-418d-b3f0-46227744eff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2028 fd1d1428-e80e-40c3-bdb6-a87466ac956b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2028 7bd1a206-c4b8-408d-986c-b4b52eef4e9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2028 92ae087b-f214-4327-a7a7-d2a6662072be)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2029
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5B83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h5251;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6E35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2029)");
    end
end

unit.assert_eq16(16'h5B83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2029 3cd9002a-57ea-4db2-ba68-d028d34aa0bb)");
unit.assert_eq16(16'h5251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2029 85d3c07d-074a-4c09-b6a8-324f0f283246)");
unit.assert_eq16(16'h5251, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2029 b993c5d9-baa9-41a9-8d30-c5513a483b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2029 33226405-ae2c-4074-bdaa-d961720bce66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2029 86badc5f-c1b7-487e-88f7-c6475178a23e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2029 abd0f02d-cbfd-4574-8eee-aade5757fd8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2029 25f22b47-f101-4929-a82e-d6cb05acac1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2029 f309886d-06ab-475a-9e03-781dbe915f4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2029 3f7cf1e4-4841-4e71-8b7d-bcccc47c2b45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2030
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7040;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h66D6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8C1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2030)");
    end
end

unit.assert_eq16(16'h7040, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2030 8b7d88de-3b1c-4fde-9e34-f891b3d8e081)");
unit.assert_eq16(16'h66D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2030 462f4652-1e09-4d39-b9ae-d55c0ddb08ec)");
unit.assert_eq16(16'h66D6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2030 b2d6c520-be9a-4fdc-a04e-44be549a1e0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2030 af46a7ed-95c2-4318-b3da-626e8bde8e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2030 0d48c512-aea8-4398-bfe8-1f3b287704c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2030 f8ccf999-6025-49eb-a9f9-0f009297af8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2030 d67de9b7-0a0f-4fbb-aab9-618373061481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2030 03549c2a-df47-4c1f-b5d2-a3940ca45619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2030 b0851619-a198-4105-9af9-4125b6ced374)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2031
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1D09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC11D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hBA5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2031)");
    end
end

unit.assert_eq16(16'h1D09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2031 408d9a9b-bafd-4d31-8bf1-9811ce3364a5)");
unit.assert_eq16(16'hC11D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2031 7b3e3169-85dd-44cc-b439-ce4a4c1f6f62)");
unit.assert_eq16(16'hC11D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2031 630b56d1-ad18-4b5f-9caf-c8cb7ac651e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2031 60dfae96-d212-4936-bcf6-ab4c766d89ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2031 db9e7bb9-f7bb-4cd7-8bbe-488768d9c8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2031 6ed84766-816f-4e35-9651-bc2d506c17bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2031 fe8bc3be-f2d2-4d39-a81c-f00a034bbd37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2031 a8fb1139-ed55-471b-bd33-e537ec5d4221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2031 25b88493-07fe-4529-94a4-7cea3ac6a693)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2032
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h7DAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h488C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hC9F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2032)");
    end
end

unit.assert_eq16(16'h7DAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2032 784cd44f-4c96-47c0-ab1f-fc242b3a2a0a)");
unit.assert_eq16(16'h488C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2032 45de9cf2-f293-4292-92f3-ed79a88d6b0c)");
unit.assert_eq16(16'h488C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2032 a44b19b0-f7e8-4b53-8de3-4492a5795d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2032 599a38e0-336b-40c9-a4f9-1269a2de653d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2032 20fd6041-b184-4e3f-8745-f81f795c9353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2032 8851a340-b863-40a4-907a-5734a3f52d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2032 eefbb49b-cd88-4433-846b-ff34af6f9ad3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2032 f6e79dac-39d3-490f-afa5-802a084cdf20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2032 f02de0fd-5847-45f3-a2f8-c997e421f94f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2033
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h2727;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC79E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h2EC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2033)");
    end
end

unit.assert_eq16(16'h2727, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2033 e3b7a3ec-c7a3-4bf6-bcf4-88a15a2bda19)");
unit.assert_eq16(16'hC79E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2033 618abc3a-a780-4197-9bb7-761449203889)");
unit.assert_eq16(16'hC79E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2033 d66e43cf-41cb-4db3-8cfe-3f306d2a8542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2033 dfbb494b-64b3-4706-b7a9-e84a13e179d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2033 e4182966-824c-46e7-96eb-18e527fbbf27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2033 472d65d4-99c6-4d8e-a323-91ed45d716b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2033 efd0ca55-e89c-475d-9936-fd16207c2b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2033 d3b581e6-3c1d-476f-8d30-33702ec999a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2033 1741e9f1-440b-45cd-801e-65b925151e60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2034
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hD6B3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0AA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h5F5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2034)");
    end
end

unit.assert_eq16(16'hD6B3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2034 6642e92b-409a-4d1f-9b96-5918b39e17ab)");
unit.assert_eq16(16'h0AA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2034 2e7a7bda-061e-48f9-bbe2-7ad56b716afe)");
unit.assert_eq16(16'h0AA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2034 3e2fd964-0a2b-47b1-a277-9dbfc39d0212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2034 4dcabeba-394d-46ca-be35-3c17fb40e0ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2034 22b816ed-7763-4656-8a99-1c2970d76729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2034 02e49da1-75e0-4e26-8a6a-6f7f774ba639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2034 f9ed9132-e5b7-464e-bce0-db677b2154f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2034 72035580-7833-44b8-aa75-8bb6a5278509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2034 c60d815b-b722-4668-a81a-20a250b7c6c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2035
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE235;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6388;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hAF8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2035)");
    end
end

unit.assert_eq16(16'hE235, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2035 67661368-e6a5-498a-89c9-4cfd37ee3b48)");
unit.assert_eq16(16'h6388, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2035 77aaa841-e6fe-4050-b058-3379d6dd0a6e)");
unit.assert_eq16(16'h6388, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2035 189a4b0b-2a09-4b44-907a-6a1a6baee790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2035 e9598a7d-7e74-4174-8fae-614f3f827656)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2035 756cab02-dabe-4f3c-86f9-eaf379432885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2035 bb3bdfe6-7b32-4926-bafc-bb9c09e2b0ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2035 4d39f7e7-9e36-4a37-8f52-3e30fa909f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2035 285aca2f-bd17-480a-a317-0588087ae9af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2035 e9e56d4d-9129-4c28-a5c1-ccb8c098d57c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2036
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h6653;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h6AB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h4ACE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2036)");
    end
end

unit.assert_eq16(16'h6653, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2036 f4b07ba1-61ea-44d4-97d4-bdc6b6accfb4)");
unit.assert_eq16(16'h6AB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2036 73f0a0ad-ab85-47ba-9b65-41ad3b582f42)");
unit.assert_eq16(16'h6AB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2036 86b0531a-d4a1-43ec-a924-e36589deaecf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2036 4006eb95-5c83-4e87-b299-3a54c4d283d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2036 4640b652-8cae-4441-9adc-ccdc2e50ce04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2036 5f9eb2ab-7af0-43bf-aad8-327aacd5706d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2036 82f40af9-ece5-4e2c-8e19-77821dd46a3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2036 c06a50a4-64cd-462e-87e2-5dd5ee74fc10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2036 ca363170-e5a4-4979-9f64-4fbf29162961)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2037
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hC752;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hC55D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h62FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2037)");
    end
end

unit.assert_eq16(16'hC752, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2037 bb66f85c-3392-4105-b6ee-4d4be757bc44)");
unit.assert_eq16(16'hC55D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2037 5f7fac27-bcee-4acc-a17c-67c4f9a1f496)");
unit.assert_eq16(16'hC55D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2037 f16ed265-4295-4d30-93a5-58a4ab89c531)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2037 ded1e968-0d1e-4b9a-a45a-e7c8b5325188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2037 906a41c3-6398-4c93-93e3-81f4e9be59aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2037 80013dbf-13e9-40cb-a948-7809a9522c8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2037 f78790da-37b0-4ed9-99ec-71b77806ed8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2037 94b19ae3-17a1-4f72-82ad-d23b6b948773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2037 327a25bc-963d-4349-9ce7-726866325fe0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2038
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5844;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hF7EB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h0186;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2038)");
    end
end

unit.assert_eq16(16'h5844, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2038 81a75ff3-735e-4191-a710-c049cc62d8e1)");
unit.assert_eq16(16'hF7EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2038 9b14b61c-8446-423f-954a-342a0d346edb)");
unit.assert_eq16(16'hF7EB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2038 c246d27c-32c2-4e7d-a7a4-65bfdbbeec5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2038 bd400b6e-9549-406a-be97-1f87aeadafbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2038 bee7f151-2eb4-4318-ba6a-f51cd42eee9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2038 02bcacdc-b0f9-4d8f-a425-c5da8fc3cd15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2038 2bc203b4-240f-4f57-814f-7b7eedbe2657)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2038 73a77152-bfb5-44e9-9d95-6b6fb2ca7e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2038 048df219-0420-4832-acf5-6a667043b283)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2039
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hB08D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h14A4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hA5BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2039)");
    end
end

unit.assert_eq16(16'hB08D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2039 1ea361b9-03a1-4131-a2ad-f8e428c6dd03)");
unit.assert_eq16(16'h14A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2039 8eda923c-9f95-4fbd-b315-51ce5586aa8c)");
unit.assert_eq16(16'h14A4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2039 f051849c-b1ab-460d-a743-970d5e0d0523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2039 3299d343-b6fb-4af8-b2e5-1edd4c720fa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2039 868684f7-c353-4e62-a8ed-a0cdfe3f2afd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2039 fcb8d607-1abf-4599-a514-8823117855a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2039 bcb8e92d-5bba-4dc7-b073-ce3093614e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2039 d8122d0a-f9b6-4241-a9e5-47a414fd74b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2039 0c33b5c4-c27c-4075-9d58-060fab1d1ec8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2040
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hA382;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hB631;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h9E10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2040)");
    end
end

unit.assert_eq16(16'hA382, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2040 e2055138-6d59-4d8a-b3cc-b3748690295c)");
unit.assert_eq16(16'hB631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2040 7a4111e3-a175-416f-aa0a-df963a4b1b51)");
unit.assert_eq16(16'hB631, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2040 afdbe6c7-304d-41a1-ab03-95b0ee7e2d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2040 ea9bb810-ef62-4d32-a95d-d85264a2914e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2040 25a1258c-051b-4846-ac2a-50cd6b66d037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2040 87d1c294-2bf4-4e2a-a64b-bcdd199666ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2040 348950b5-6820-4b7b-866b-d6ada48b0ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2040 b76045f0-093e-4af7-a3b5-d814fe659dc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2040 94b8b7a8-145c-46ed-a001-664988b0ea70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2041
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h047D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h1CDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hE7FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2041)");
    end
end

unit.assert_eq16(16'h047D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2041 933e325c-156a-4787-86c6-2d3c7be5f900)");
unit.assert_eq16(16'h1CDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2041 832b9009-3350-4d34-bb6d-cb88fa6d2de2)");
unit.assert_eq16(16'h1CDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2041 48060ff4-43ef-4ced-8ba0-4a427ad8802f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2041 60b0027c-fd62-49c5-bd1d-e5a25676b2a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2041 a6cf377f-633c-4dab-96b5-ea8f5e07bb96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2041 bcccff45-f58e-4de3-822f-a7dcb970d82c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2041 b0b8f1f2-715c-443b-94e1-4771eef18052)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2041 d62f7741-0eee-4030-837d-27692871bf21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2041 b29fd422-0614-46f0-860e-bc2fc4f0e39a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2042
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hED4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h399B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'hCE3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2042)");
    end
end

unit.assert_eq16(16'hED4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2042 536a949c-a939-4563-962b-a525fd01b1d0)");
unit.assert_eq16(16'h399B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2042 b2709aea-ab84-46f6-ad7f-e43696706ab2)");
unit.assert_eq16(16'h399B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2042 2dfb7446-af9f-4b07-8098-84276d61f9fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2042 c94b6ac5-8ffb-4e66-97c3-73c7ccc97d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2042 ea56f4ac-6b2c-4757-b7c3-89b7404495ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2042 12bb2ce2-15b5-49cc-a551-a2aea37cb017)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2042 46462d4b-39fd-425a-8dae-efe16c79eb93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2042 197ea159-dbc2-49fd-8e7d-112a2d9aa3e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2042 e1496113-bea2-4123-8be2-d32676e7c458)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2043
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h8449;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h87DA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h1B86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2043)");
    end
end

unit.assert_eq16(16'h8449, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2043 39f016f0-9b8d-4a6b-a6ce-a91d19bb848b)");
unit.assert_eq16(16'h87DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2043 36c38950-bd90-4856-bc67-b6d573a3133c)");
unit.assert_eq16(16'h87DA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2043 34066763-8f48-4d42-94a1-765030b7deb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2043 9e8df654-52fc-4f31-a14f-e09d67abfd00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2043 aead7741-1693-4487-b12c-80eefb29a281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2043 07f503fe-4491-4fcd-ab19-b241560711c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2043 3f3cf3fa-ac84-4bbb-aef8-2d0c08866400)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2043 dd97dec8-b0a4-4dfc-bc3d-6e239256443d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2043 9715157b-cc5d-4543-a805-5c655bab3581)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2044
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h1CFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h9A8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h384B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2044)");
    end
end

unit.assert_eq16(16'h1CFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2044 4ed09f6e-18e8-46ea-8abc-3bb5b4ad7dd1)");
unit.assert_eq16(16'h9A8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2044 6034012a-af81-480b-b339-3dc4d2402b40)");
unit.assert_eq16(16'h9A8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2044 b186c9ec-2df7-4aaa-9abb-3aa4cdb56556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2044 8bedc14b-059e-4c5a-ac97-ea6f3bebfd88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2044 862c3a15-5823-4642-8413-b3bb95963bc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2044 a05b4e38-83ce-4e6a-a82a-6fe26c087e3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2044 16968c64-8eaf-43b9-a296-18d21e41c09f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2044 ea8b0f4e-f060-4945-9546-6eec870bed8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2044 80405974-d630-4830-bb86-07522bd5ad38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2045
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h5FE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hD0B4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h61E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2045)");
    end
end

unit.assert_eq16(16'h5FE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2045 9828aa04-f750-4ccd-a29b-6b150f91f2af)");
unit.assert_eq16(16'hD0B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2045 679debde-f538-4cdd-a39b-6174cbfcb0f8)");
unit.assert_eq16(16'hD0B4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2045 b717f1c1-3adc-4e2b-ae98-01e898405ddc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2045 e1dfc249-013f-4eb7-8d84-a07ee3772c27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2045 62417436-4ac1-495f-9664-8a5754f64930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2045 f7185cde-1211-49a3-b394-b3a785c7d61a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2045 ff2586be-9183-4bc9-809f-54c58c76ae75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2045 34b80860-7e2e-46ec-9ea5-738d9470b9dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2045 1ac2aed4-1e10-4077-81aa-b1ce439e4b51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2046
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'h0F0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'hFA24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h6434;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2046)");
    end
end

unit.assert_eq16(16'h0F0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2046 aff91231-2fab-4bb3-8df2-0ece7c6ffc9f)");
unit.assert_eq16(16'hFA24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2046 7c5607cc-c2d7-4cd5-9366-0ce542e764ca)");
unit.assert_eq16(16'hFA24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2046 65b6ad6d-68fe-44ec-bed1-47dadbc412d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2046 ebd415e6-10a1-481d-99e6-dabf27bd798f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2046 19c72abf-9689-499b-8b6a-f77e85997439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2046 fe868899-f485-436f-8271-9617abae6176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2046 229b5ba9-0d1b-4ae5-a556-e02b363e44af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2046 505668a5-05cb-4b33-9d57-7ce4ef0ce2ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2046 ea2f5ff9-74a5-482b-a7c5-16126331e8bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2047
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix = 16'hE4F9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy = 16'h0C85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp = 16'h8003;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2047)");
    end
end

unit.assert_eq16(16'hE4F9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ix,
"IX (Testcase #2047 727c15cf-e8ce-43ab-9a3b-2555bb8495b2)");
unit.assert_eq16(16'h0C85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.iy,
"IY (Testcase #2047 e0077e47-2263-4cf1-9237-e7590a22cd33)");
unit.assert_eq16(16'h0C85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.sp,
"SP (Testcase #2047 f9c667d5-04df-4105-bfcc-9d3022c8ead5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2047 69bb73aa-bec5-4a00-a4d6-30782930a314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2047 1e3f7570-272a-412a-b401-472de87f611d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2047 98f4c51b-11b7-416a-9167-4f9ec41b67fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2047 b0c66902-e3df-47b3-be84-d1fce1d3d6c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2047 c2813d79-aabc-4209-b4da-3473cd9a91f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2047 75584c23-abea-4ba2-ba3a-6fc303c7f30f)");

#(CLKPERIOD / 4);

unit.finish("ld16spixiy ('LD SP,(IX|IY)')");
