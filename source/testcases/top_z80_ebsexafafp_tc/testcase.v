unit.start("ebsexafafp ('EX AF,AF'')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #0 43ac5edb-22ea-49e1-9cd3-ebb3cf1bdf73)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #0 65ae58a2-cd41-4195-878f-eacd3d15dceb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 2b375cfc-f1ec-4f94-a54e-20920c22e6d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 f4203fa0-ab2a-4e67-b0a8-f6cca85e0cfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 dfae1768-0d82-4390-ba17-c8fdd456770e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 addc4413-4d1d-4322-b301-9ff00718b2c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 409c1a43-7bf0-4f6e-8cbc-5c56e0e9a1d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 8d4ce1bf-8153-4b59-8da0-a7a5f7301603)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1 fa6e9553-2e56-4f7f-9f3b-ab6144bd7e2a)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1 91beecaf-e88f-48cc-9513-e2471f83f9c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 af7d24dd-9f34-4158-8a03-3e0d428de19e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 9ae7615e-1274-4866-a505-1e973655b1cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 6c011942-ae8e-401b-bd2d-24041b2fcee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 82d697d3-2b4a-48f2-b063-d76d56074d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 5c0b8c15-eff3-42e0-a5f1-20a69c343332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 3ec5eb39-a060-4531-862d-bdac667a231f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #2 5f39be74-7696-4db0-b85e-698f268611c9)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #2 550eda64-201b-4ada-8a18-cbd6db0428b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 30b6d1cf-99d2-4924-b7fd-4432fe004917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 d5cf1bd1-6531-461d-a53c-96da5f040217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 d94c5db8-9959-441a-91c7-1c875460e08f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 1ea35c0b-40b4-419d-b46c-1a2e509f7a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 b0b0fc4e-edca-468c-a1c4-9ecb6d08f6fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 49a77bd8-8b2e-4824-8960-d59a68973d42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #3 e2743aaa-7607-418f-8a28-3fac9fffaf37)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #3 f4f0ed0c-c120-4e37-a117-2d59e18f3af1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 85bbe940-ea33-48e1-bab3-85adb7830949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 02ae3f2f-b7c0-41fd-a05d-7c3b90a36ac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 27d9d3ed-1894-4f88-af68-bb7d8695c67f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 7550f6a0-1c2f-4692-bde5-2baeb83b2f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 99cc2a25-f77d-4c5d-b800-8c04f5bb1432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 f302cf55-24e4-4f46-884d-418b3e7a19ca)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #4 a69eec02-c39e-4f31-8916-393fe6fd6d8a)");
unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #4 741f7dd1-a0b9-44d5-a85d-44480fa53132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 5bbaac46-4d1b-426a-9819-c004cc55ff8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 1b4c1aeb-069a-4d83-9de2-62ad0de02d8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 fea0436c-0666-477a-93a3-101ae3cb2d74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 a79085ba-295d-4560-b5a1-6f68aaaa17eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 0efe1c89-5146-4ff3-9a0b-6f5a9177ae19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 41c51cac-5ed0-4b1d-8044-7a2e03e94cbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #5 810d20d9-24a7-495f-99f0-4707779cccfb)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #5 08932975-7a84-49f2-aab8-01d5eaf10ef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 c31c812c-0e2b-44c8-bb1f-15c764a22ad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 965aa450-0913-4ca3-aa74-1ae33b278537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 da867d79-e961-4953-b303-8bee16d92b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 d001f375-a86a-44e1-a494-bd0c91d39248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 d30d95c5-a1aa-4b06-b00e-54d8b786fd07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 ae896076-8aa8-444c-9c3c-b35142476e1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #6 54f39b5e-c7ec-4335-b19d-a0b75ae29cc9)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #6 666d2f17-fed0-4da1-bc47-34e4c7f01005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 e644d26f-0b7c-4371-8b73-d77066ecaaec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 b833095b-d8c2-4c6f-9516-fe88bda3352b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 e290ab9d-1447-4575-8ee1-3ad5552b32b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 81929487-a84e-45fd-a6bb-e7bfe0077213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 23329d82-b177-4692-9cfd-c176d510dade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 e99d0e5c-1213-44ea-9f8e-70b4caf4d1e2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #7 72d9d6c8-61cb-483f-9eef-83420995820d)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #7 621694f6-df68-4c24-ab6f-191b73c60379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 dc8a10ae-3393-46e8-9ae0-c0f4a23640d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 4012cc55-2ecd-4b51-8039-9c95d5714493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 291403ec-0943-4d3a-9cb6-81aec8292c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 ee79cd81-6d75-427c-9600-d6c696592ef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 36d1e10d-abfa-4c6a-a605-4048183c75b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 1469f7f7-2ecc-4fb3-b6fa-07e3b9290fe6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #8 ff629dcd-927f-456e-8876-3043bb52451e)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #8 56e4f3bd-67f5-47c1-9b01-0e8e77e68840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 cc19a0fe-8906-484b-ac7c-b8ce9bfc72e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 ffe03636-76bd-4a77-b3f2-f166262939ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 566d57b3-00d9-4020-ad7f-19ddc4166f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 e92b0965-d003-4063-b7de-0c06464fc508)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 263606b8-92b1-460d-ba58-c8c78cce5cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 47fe69c7-ee50-4646-a588-d5a6bebea590)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #9 7dd19ced-39ea-44bb-84b4-c5c0fcf249f7)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #9 3ebe62df-9063-4d3d-9a54-8fe02558f9cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 5eee14d3-a03e-4877-a15d-8f5ff1918f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 a097b883-d9a3-4e8b-8f62-0a3a1ab8d65a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 53f61ccd-4f43-4a3b-a490-7b3eb355c917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 c2acb81b-719d-43da-b254-af335d916f75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 a30ba9bd-a9bc-443e-80b2-85f46e28343e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 0d9232b3-8af3-45c8-bfae-ebc6908f870b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #10 ae18d115-e2fc-4f47-9e62-a4b4dbc21574)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #10 0f257b64-e628-4092-b358-fe259942c78a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 c0ab0914-dc77-46b9-84a0-ab955c7ed781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 717a1a47-a6e5-4ec3-b815-2a0850ac955d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 10530730-0df0-4ff5-a5d2-e75b3804b746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 21e5b10c-3599-4604-9cf1-6116bef44f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 f157e4e5-3675-498e-b6e5-dacf255ca7ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 d1c308e8-4dfa-4a48-99fc-e880c1443634)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #11 8baaa026-dfb2-4694-80a1-84682ca5045a)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #11 7a5d2af2-0119-4f1e-ace5-63059fea2893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 af8465a4-bf65-4c78-ae29-2cb4e710d938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 5665eb35-63fc-45d4-84c1-ab666d8805aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 d272548d-12c7-44e3-9fe8-11164126501a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 4ed21ee0-db9d-441c-a639-17dbfe931b4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 1b048bdb-464b-48fa-aa57-c998e5d079ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 f2b39792-6c88-4241-b7f3-3cabf9d627f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #12 5dbaa9ee-0c84-4447-83d0-35dbea818284)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #12 243ee1ff-a9ad-4660-8023-d4f5c587fe10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 3cea9d99-3226-45c0-b3ed-52029123df9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 6157c95c-139b-42f8-b47d-b908e315538b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 479d3a4f-d036-47d6-bfbc-2b5eef8eedf0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 d349e5a2-9a6c-4e42-9de3-34ab145ed69a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 3ef6412e-669c-4015-b3c1-cbd93c82f600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 cc7e1720-479d-4c08-9c4a-4ef0f0dd1006)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #13 097820c6-805b-4a04-ac84-adacaf098234)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #13 5aff2869-093c-41dd-b8f1-0e46eb59e26b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 d4051879-30d1-4fb3-8e3e-1c9295615c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 3a7b9dcd-13ad-4b4e-be94-72d19b6539ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 32fa3046-5144-472c-bff7-f15f33b0dd9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 f3bd9680-a384-4a70-b695-389959042353)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 8da09efa-2f9a-46f8-9171-3efe5e8c5178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 e44f181f-ce85-477c-bdbc-e7467c9b21a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #14 f4091977-1c52-4bce-a86d-da7fdc80bdab)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #14 cbf47b72-ac09-4675-b405-752c3db56ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 a3bd60f1-18de-47a9-b7f2-01f0901539cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 9b4c1937-317e-4bd5-bbaf-96a19f308a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 32c7624b-529f-4e48-9081-f9a230759c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 7bf0d671-5c11-4b20-810f-18eff5b187af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 3da3cd77-9dce-4375-9321-7e373046cc19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 48d64ad2-ddf7-4663-8347-f1e8a080c9fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #15 ce974fdb-7170-44c4-8107-f3fd01d961d3)");
unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #15 06eb4e1a-962b-4570-be9a-cd4b9c396ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 1ca80622-59d0-4a2b-9036-2f53707b604d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 062487b6-e8b9-4847-b898-8d533758bb0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 588cee21-d5e6-4233-9592-9889ff1a43c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 c3ba73c7-cb66-4950-9ffe-0d1e748e2685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 b1c4e28e-9e42-46e0-ac1c-0787d36da802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 ec21985e-9682-4b06-91b3-794396c82873)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #16 9cd48d7c-c52c-49db-98c3-c3095f8cbe17)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #16 bdb7d2d9-47b4-43fd-b182-26d1cd1b7ab9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 c1961f4f-f518-4bcc-8e79-9f8a27d77e6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 6364c584-989f-4cb0-a788-b42f59db19fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 02561cd1-1524-4aff-8340-639ae8e1fe71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 d5303bfe-cd9d-429a-9a71-cc93a81b53a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 7835c781-70eb-4999-8809-8038311c2365)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 e9b063a3-c2f0-4d7d-bced-e62f5f2206d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #17 860b0e55-be80-4569-ac9c-3a276f168127)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #17 22744225-6a07-466f-a0f2-b76a94fd43b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 a7dd7eaf-2282-41a6-a401-f0a98cf24737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 8770a47b-d063-4692-a167-09006f368a1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 df429b2b-d59f-4415-a3ba-93301f78fb0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 8ab36250-d16c-402a-8567-18cc0fa369f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 8c4c8a00-1198-4145-b370-331fadcae859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 3c0efaa6-73d2-4335-95a7-cb45e073b6e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #18 ea766570-6332-41bc-bf4f-102779b6ba28)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #18 70ae040e-7281-4ac4-9e1f-88dce158da83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 60ca221f-7385-4e02-8ad0-55e031bef658)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 ad62f3b2-6ac3-4d81-83a1-f24a39037cde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 e846acdd-36ef-4cf9-ba05-8b6fe93c5cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 0b1c1710-69a0-4ebc-83d8-09876451091b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 4abd8232-23b8-41e5-ae9c-86a4e020fa62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 4fd48d7e-50c8-4308-a499-93b342022f66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #19 333f74ea-f067-48ca-a432-719c18e2f524)");
unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #19 a4cbcbca-9a0e-442a-a3fb-b5d96f9fe909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 49c702cc-0b7d-4336-a606-469000442513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 afd6f9cf-3bda-47e9-bf53-8ea53941aaf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 323b472c-3734-453c-8064-ad77672506d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 fd478915-34a6-45cc-a3e6-cea26862cf0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 5c60c6e1-7ea5-4cb6-aa00-e8ed1e0c1fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 733b9a00-eb72-4310-a872-f7f6b71be862)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #20 adcca960-66e3-4737-8eb7-e0b28388b7c2)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #20 9ace486e-5dab-4677-9735-9373b7168d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 9d4d366d-249b-4d65-81d2-ee83b08edce5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 8c2e0cb3-1eb1-48fb-bc2a-fba40c22c265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 be8b377c-7ea4-4812-99f2-c12d570d69b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 a2772c0c-0603-4f52-91bc-22741f94ddd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 fff13e80-9d5d-4cb1-a2ec-f4f94299be4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 2fa4c176-75e4-48c1-8879-6f43943f2cee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #21 f86d412a-ddc0-4f86-84aa-b91cf724ec55)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #21 040f23d4-5f71-418a-b6a2-dbca023934a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 cf6dd3f0-8d6a-4c16-aaa3-eee3eb73052e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 40980bbd-49ad-4dbc-9280-75692e0e8ea5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 30d28b03-2a3c-4b68-ae90-7bc0303b2d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 5a26f742-5d92-4f69-9165-a450558d6d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 a9403709-2a7a-4e57-aab6-39297f27e2e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 58bf76dc-9c58-48f3-9d90-4d8bf200782c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #22 107871d0-085e-4c6b-97ac-679938f22c66)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #22 a427e1aa-5f66-40fd-84f2-ac46ad9c9845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 81723c16-dc64-4bd1-802f-03db58c02282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 3a3b32f6-7c47-4431-a673-c3b58357501e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 a5ed9873-0f8b-4f14-9f1b-71824f3dd2ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 bfb6554b-769b-4e7b-9341-51b6075002a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 5593004e-8e43-46b3-8b66-c888a3becc74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 5f51ae3e-0eca-4537-8b6c-59f9470d51ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #23 c5ef044e-e6ee-44bc-bb4f-ed2861e374fb)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #23 289e3e13-147a-440c-a486-9cf191fad09e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 a62bc2b2-ea5b-4d4b-94c2-950c7f788604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 a9226a32-1fe7-4d8a-a982-dfd7a3d71a85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 7a408151-d1b4-4550-879f-6038f4dd4bd6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 e23d554e-e895-46a7-a9c7-a7059c18f47e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 122bf448-56fa-4696-b773-01b421e125dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 4dcd0ec5-3444-4ac6-9b7a-c7d313e39ed2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #24 b63aaef9-052d-4b7c-9902-d4c9f8ed2ebc)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #24 74ed7376-7a09-4c26-a7c2-bfac835a260d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 94366b91-7df9-49a7-b05b-3eda50be7d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 7f242bd6-5a00-45d0-9e25-fe9f747dd5e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 cc2b6e56-03da-4937-9a1b-386e525337a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 cd5b5b71-0f81-4908-8f5e-2579adad6e74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 7e54c0b2-2848-4d16-9e39-a52e12099331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 9c83a0fa-1cf7-41f0-a355-cfa02228e4e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #25 f3dff03b-dfd0-4c1f-8d12-4b13e9bdf33d)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #25 4342c9ac-8248-429c-8068-697cb79b795f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 e81fb64c-c7de-437b-9667-bd6e3fe0b07e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 34657c4d-0e48-49fc-810a-e36d0670cd7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 a37d4e27-c0e9-4acf-a569-107699004ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 a6cb5c97-7d04-480f-a43b-1f6860592a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 b0305250-7c23-481b-8437-411f7004cd49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 7c5cd73a-6326-4fd6-9ea5-e302ab4b73a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #26 6999170d-a063-4a6d-849b-4ff486e8dbb6)");
unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #26 74e05bd4-9644-4d1f-88f7-03f24199cced)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 142aba6e-e3f6-4f03-94a7-01d527fb14db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 a43fc3da-2df3-4866-b4ea-08e55ffae798)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 4e24de54-964f-4554-804e-0572d3397275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 bf7de07f-5a9d-4ee9-9da0-9f340119efd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 ba525dac-1ea5-44a3-90b3-9f64393b0014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 8f9e1bea-e0fa-496a-9ca6-6fc25ffbca7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #27 1778b920-6343-4325-89f6-1a21e8f84efb)");
unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #27 619427b7-e1d2-4b21-aa96-5e5c7ec8ff94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 4d7a5102-395b-40df-93bf-aa714e4bd0bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 4be6ae94-9a3d-47fb-9f70-f0542790f96b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 67b47d37-d392-4296-8d14-b987d7f52139)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 739c62ff-5f27-438b-ab21-9b88f53d163d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 0893a1e4-d791-43e7-aa8e-4b2b1efc506c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 ec1e5255-af99-4faf-9c67-cc4e51961905)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #28 1730f957-1f12-495e-bbc3-7974f828c53d)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #28 5b5359a9-4852-4c6b-9f33-be519d16f069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 11f582ca-3eb2-464d-bb35-bfb1ae245d1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 9ff4abd1-f5d2-4839-9e05-3f1146cca203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 98bd1896-e558-47d6-8eac-8ed071717e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 d4bc3c09-b3a7-4b1c-a5dc-44a5568f50de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 2ca6b071-ace8-4f7a-8cf7-c896b8f33615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 710a2851-d52f-473b-b65d-684ea69d68eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #29 8a623ab7-9976-400f-8581-98cc00ba4183)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #29 d95cdc01-1aac-47a6-b382-cb5b04eb6fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 ff166e27-2776-4920-b0cf-8e9be1a8cbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 f7f55460-d5e2-4bb2-85f0-751f71abf9a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 61cd41c8-adce-485c-8dc0-feb777f4ba33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 b01c3df3-8992-4816-a16a-b7a6bbfd3997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 400430fa-65ff-4973-8dc3-86de20b9b176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 c526ca3c-03f5-4cd6-97cc-089b5137abe6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #30 380ea719-819a-4972-aea1-16f616212afa)");
unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #30 93ff6bee-eff7-48a6-97fd-c377b56a5aa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 074a0ad8-f57b-44a1-8bc0-5c11f51c7efd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 9c7ce795-c8f1-43ce-923b-6834ab5aaee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 cbdb7eee-5583-4263-ae94-7e36a007fc0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 4cfbba1b-661d-4c6d-b253-35586f968de2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 9b335fc4-abf5-4ee0-8876-ddea5c972189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 74033523-e5c8-4824-9cae-7be7bb4d82b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #31 904893b6-c7c7-45ce-9e78-097fd29ff770)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #31 3388568a-93a0-4e87-a4a8-ed8109ca9c6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 bb96babf-04b5-4f93-9881-236e8f927ee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 23581ba3-8bfc-4af9-998c-a01f736ec79f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 66187e21-df68-4ce3-8a64-3650eafc0375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 7ff322a8-3db1-462f-95c0-8d85a3ca053b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 4b81c977-7be2-4b3d-87fe-da26d1d7cfa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 b46fea09-8ca3-491b-84ef-ecf324255d92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #32 ffcce205-2b08-4752-b1af-c1e284717df6)");
unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #32 bdad6119-bcd8-417b-95fd-2accf3d593c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 9e2e3990-1728-4899-b26a-b509b10d247f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 260ce2c7-01be-4cc2-8231-dc1c0f1e0de7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 2e4e49bf-5f9c-49e4-ba2a-20aae6d4b529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 d40a9ee4-b721-4218-aa6b-071070a94471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 f069f3d3-fa4f-4634-82bc-fa0f57dc5cea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 15472120-345d-4f2d-beb0-ebab7f5d318c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #33 4af2955c-9c11-4a9b-8aa6-85dfc300ca22)");
unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #33 ccd20e29-a9d2-44b9-9f20-29332f50fcc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 6be80e5f-c1a6-4258-891b-34eadab09c57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 1af23017-ed3e-42ec-b86e-fe01ba2ae1b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 cf716c1f-1766-4aae-9eca-276756bde079)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 23fbaad2-22aa-4a8a-827f-82f9aa9e7746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 494f5ff8-93ec-4b9c-87df-558be3ed8c73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 f6650ee6-ae84-46e3-9f5e-9db4df690653)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #34 e43181e7-c478-445d-8c2d-fe853053efaa)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #34 1a1e742a-9b69-4ba4-91c2-85d2708bd131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 37b4d310-e4a2-4506-acb6-7946fb4a38b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 cb4118ee-dc79-41d9-beda-10cb86cba597)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 16ceb275-8275-45d7-92be-e7eccda2f8da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 75b65052-f322-4f10-a4cf-e57a3f1f6e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 538c0085-818f-4aae-850b-3388a1be39de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 7d241046-d109-4892-a466-9c1c8c3e5044)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #35 40db2183-9890-487c-b394-00e562e3d64e)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #35 9fd2234a-fef0-4f63-8c40-debf3c6e0aa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 35cf414d-ebaf-48b0-a92a-246de7d5851d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 f94b2a9b-2332-4435-b749-e4213f3c2191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 706d0324-a5a3-4625-9276-66b68203bf77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 3d57fe3f-6dc1-436d-8458-db1bb6794ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 ee30d488-ff7e-420e-bf5a-5f0c4348f555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 85e228de-d6b8-4302-adcf-23f85fa9f088)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #36 23287baa-023e-4833-b7ae-a68c45ba9883)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #36 963f0679-34a5-4ffe-be05-91fd9be95ba7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 b48a7271-0b0d-4ab6-add5-c4db9e59524a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 1bfb82fe-4ab3-454d-b2ce-8ab738af9169)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 eac57928-e620-4ae8-ae47-d2dc8df1ea00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 7b9619a0-4fcb-4626-aed3-bce8114c5016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 23e80d24-8cff-4379-ac69-2ef9556a934f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 99997655-4f11-47ab-808e-f6a0dede1eb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #37 7d0e049b-148e-4008-9595-80250be64c51)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #37 8cc29d39-cc32-47ca-bffd-530b457d25c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 c99210e8-ceed-4695-8ceb-b6d81cc18115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 caab08c7-17da-44d7-b32c-c568b2b0ffc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 f5d260d6-5c56-433c-8c8b-b131ae3bf027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 1b99225b-da9a-4137-934d-fc27346f69b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 acd65e30-85d4-46fa-a748-acb318a572b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 2f531fea-8395-4421-b27f-a45ba4989177)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #38 63d4cfce-eda5-444d-95df-7a42e02892d3)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #38 7d2e38a3-2502-4733-912f-d40c49b0eeea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 6fc02d84-8926-431c-adb4-7d461791dcf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 811fff2f-ddd2-4d08-9102-dfc76dbf1be4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 f3358640-aab3-4cec-8fad-3fba3940d90e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 c0da99b1-6788-40e2-8d93-6f40f7be174a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 75ed3cb7-c644-4c3b-966e-769348cabd6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 025ec1d8-5243-4a0a-bccc-859c4a49ce25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #39 fc9449f2-ffb6-4ca8-bfe7-3af19827278c)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #39 d976ae43-d198-4d16-b720-7efdec8298dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 8f1d984d-d1b6-490a-8ded-416a38b49cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 609b3989-56ca-4226-bd4b-ea5f1ecf348b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 9f565f7b-2bee-4cf2-bd4b-7e5c3abbaa1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 56d3fe1b-fefc-4188-a92d-37eacc877c74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 4eb519a5-0857-4b64-8c24-4be35513e631)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 3ef15c48-9ef4-4f87-bb00-3770d72eadeb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #40 085bb113-e566-4fa0-9afd-2d1f648958b3)");
unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #40 a6f5118e-04b2-475d-b22a-f44bd515d48d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 71e84419-59d0-4bfb-8cab-6c2e8f941813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 e92936f9-db15-4389-afa1-6365735e3516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 a039a96d-7c70-47a6-abd6-383e60c65e24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 bf3de613-990d-4092-9712-1d62862279a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 332bc7d6-4b67-48ab-a0ff-e5db0c17df55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 754d67a4-8a07-4d14-9aa0-6f62824d8905)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #41 4f87da6f-c1ef-423d-a6d3-17c15c16ed13)");
unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #41 9b92c417-1307-43b6-a772-33f7890c9066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 9a4e0e3f-89c0-4b57-8151-1c70404a3029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 976895a0-35ec-4dc5-9d0f-b972d156054c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 3a9a5a3e-8e52-41a5-8512-e99254952203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 a588dc06-4eb4-438a-b750-a65eac3b07a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 6d4fe97a-60f0-4963-b641-a1b7c94d5757)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 0269593d-73fe-4f55-b15d-bfd66be0122c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #42 aeb2d0cc-2f3d-4ae7-bb8d-df0bc60330ee)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #42 ec3c60cd-6bf2-4b5d-bc67-6fe4e10b2212)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 5ca3555b-20a5-4dcd-8c82-22b37f6cdb42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 96492822-70e7-4319-858c-aa46f9ff48aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 69222306-95eb-4731-8c75-0e0192fe1696)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 f6700c65-9ccb-4110-8fe5-3031fc0c50a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 3723c4d1-552c-47e9-b6fa-106312eb9f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 6b4becaf-7c3c-4172-ad38-fbd128ab065a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #43 b3f43894-6de7-43c0-a89f-5e69b22d5028)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #43 204c08c8-721f-434f-b71d-9baff34c0105)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 a03e6eb3-1728-443a-81f2-806223a76875)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 e51d2e23-7f0e-43e2-9039-8931f46fde69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 a82fbdf6-c48c-4a73-a443-0d032f7a8343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 2457af0a-7718-4d35-a48a-4503fc231a66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 e69117de-bd2f-4e6d-ad85-9eb5a8b223e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 bb961bb0-0e82-42f5-b259-98149ee9fbc7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #44 573c33e5-22f7-40b4-a766-06f6139db419)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #44 234ad07f-0917-413e-ad58-70db1d9a736b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 a2e0eba5-eade-4131-a34e-06a55d4733cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 46f430c2-95bb-4de5-b0d5-83ad0d1e67c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 6831eb42-f32f-464e-8f8d-7d4841c25abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 e046d326-ba8b-47d3-adc2-8473806956ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 02fa9a9f-e823-4095-9fcb-897d06fdc309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 463ec92a-8e6a-4575-afa7-24c253b0df89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #45 32c0209a-65bd-432a-a464-028fe2e3851d)");
unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #45 396d9bbf-8747-4f3b-84a2-5320cfecf7e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 5a010f00-4243-40eb-9827-1dd83d509389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 23f0eaf9-195a-4480-b554-a7bbc27f10ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 1a852427-4404-4ab3-b07a-6cace7659eec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 16f02e4d-74b4-437f-99dd-aa4e27b97c19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 aca0149b-f9e7-48f8-a291-9479882225f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 4dc26056-937b-41e4-8b96-0ad8f4e570d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #46 c51a0582-5e3c-4aef-94f8-22a5a00b9e94)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #46 3e243cde-03fe-412e-92db-619b1283d2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 dc7148bd-f4cb-43bb-b084-0506f7325a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 5e2d1f14-041c-46c2-bcf9-57e7faca0413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 506b881d-6752-4698-bf32-b004e73dfa48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 c8fdc2ad-8983-438a-84f9-a964577d4676)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 0baaa813-5eb3-48f4-be70-59e8225f06fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 eeb1e09d-c9e2-4a52-b9c2-3b848d213d82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #47 fafa2004-b9cb-45ae-a3cd-fc07528c5e1d)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #47 9653365d-31e2-46a9-9c88-1608fb9ed9f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 8421e90c-96d9-4e43-b294-e121275e7c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 bfe69dbb-16e3-4356-8113-c41afd80d3a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 d2b405bd-e303-465f-9fed-e6996e7a3413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 e2ba6c63-a3fa-4521-a32c-1cd40adcdc17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 d4480e56-589e-4827-bd77-efdfab5a4243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 79eacc75-7c85-4e57-a150-30254a2ef70c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #48 dd97a651-816e-46c4-89fd-2a776e13e136)");
unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #48 d6aab8bc-6260-485a-af82-b1f9900a98ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 a79166cf-98dd-4fde-8af2-31c16f00f7d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 fb13430a-0355-4e4f-9610-568b82f0f790)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 ea739118-8c2c-44d8-8a2d-008952b9f362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 feae7903-8768-4f9e-89ad-2f157e539ae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 266f8ce3-1622-4df0-902d-687cd8abdf70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 9aebb40b-a061-4f58-9ca5-1f036faa478c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #49 7b90d97e-38a4-4ee0-8b8d-80bed3fa93e2)");
unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #49 2a547172-1fbf-43f1-aba1-743d13879e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 383bbef5-2076-4889-a9d7-27d0849ba150)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 137fb344-10f2-45d8-ba4a-8a6bd3f6d69e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 512f0273-ce54-449a-82b7-fb885f5e2932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 d88cf890-cc52-4854-954e-bb9a359c7c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 7aa1d2ef-e968-49b8-85af-27379bdf2786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 650b3827-2252-4754-8081-48b51527b955)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #50 763751b7-4e78-4c51-af58-f9c28e173a9d)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #50 c2246989-8796-4d33-a0e2-d8a0ffeaaabd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 03634ca1-0705-4882-bd17-b764a47f8642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 e5cd6436-1ab8-4d7d-9dec-ed3a09a4df90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 d4606d27-cefb-4cc5-9d65-66081349055c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 46b14efc-e094-4148-b27d-5f1fa7e633b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 3401d8a0-678e-400b-a98a-b681bead2959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 f9f50a63-b217-4104-985f-2e048de702cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #51 2b11ec52-569e-4a6f-aa48-7a7517c84e6c)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #51 6ebb7104-81c3-4805-8750-20fd8ce47871)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 2806fa35-04c9-4ed9-8227-9c6cca17c758)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 09ae8ce1-83cd-4cec-8efa-bef154b41881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 30de3496-36b3-405c-bfb8-3bfb01d6ad2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 6683a482-8e58-4aaf-9822-a5ca8aa233cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 5bf3dea4-5ce6-4523-91ed-e1fb1e48e47d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 27a0201c-f814-4890-b213-22386036b7a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #52 70129da2-23b2-4bae-925d-a2e0394b8ea8)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #52 14d22532-08c4-40b0-af7a-870ae4b815fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 44aec48c-18e2-4953-9158-2633afb4129f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 535b98ab-ec34-435d-9bcd-6d8e5e151e69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 fbbe9d5b-a931-4b5b-b244-dfe90ae90cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 13a61a17-84e1-482f-86bc-27eca28d5d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 5c4580d0-47ea-4514-9e09-72fb2a20f0db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 a24087fa-a943-454c-bc57-0456ba230bcd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #53 47ef57fd-315d-49dd-8c27-34b8f3829064)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #53 53003fdf-3f8f-47d2-b385-3804b8631bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 1180ab82-93e2-444f-91c9-0b09fd95ecec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 d35e8a89-ef0f-4e3f-b5d1-b7871ae348e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 7a4b27bb-7aed-445a-b518-af5db64a9890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 f69ff58d-7747-4204-96c6-f2fb93894605)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 1aa97b9f-35b8-4a89-b4c4-9f5d92bf16e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 bccc5126-a41a-4ea7-b604-a588a88d29a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #54 a43cd569-c3fc-4a1f-90b6-7bb870f80c8a)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #54 d6be111a-98f5-4bde-a296-9287b5a3472b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 71d2e053-866a-4ff2-b506-ad3d3fd95161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 8a1d56d6-1027-44d6-93f8-5d9b51bbf3f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 83cb4636-a4e4-428c-be23-906c42baf32c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 e8c00a25-257b-4caa-93bf-6830c43c11bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 e94c8271-11a5-437a-a30c-e789fd367303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 5a111f38-1482-47be-9211-9a387aeb3c63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #55 e5e328ae-65f1-4d08-a529-b408d608a455)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #55 c3bc7a41-015c-44bc-b4d9-7726b9756cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 78f6a176-8425-4e14-acdf-e7b2e9ef3d6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 b853f9b9-1849-4c3f-874f-f076fe9a13e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 0b78b5f5-cfa5-4ec2-a1f7-2c26d7f74e7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 f5901634-437b-4786-9947-787868e89688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 7ef7cc11-16f6-4c69-8709-01499bc5abd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 be2c7777-e662-44ea-8e77-d0f67a334a24)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #56 538f7159-bb86-4b36-bf8e-9fada993f710)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #56 7122b651-3a78-44c7-9c9a-73c56b54d578)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 1c09d27a-90c2-431b-91be-5eedbd120fce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 bf4751d2-d9f5-4359-a3f1-4374f93c02f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 453d8642-ba38-40d0-8472-2f2d0ad17002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 766bf301-6ade-4052-8b27-f776eb14839a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 8d17c8d7-eb65-4b68-a47d-4a8bd70827b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 b80097cd-30b4-4acc-ade1-f715c789cb7a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #57 508a0c4a-695a-46c7-bce0-104ad4cf2b5f)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #57 18de52d5-2d21-4400-bfee-0de9b0fe8c39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 934cda37-f9e0-43c4-94bb-12c3280d0811)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 dbda9cc3-d3e7-4bc5-9887-e007029343e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 32bd1981-6adb-493a-a6d9-b50b74e6613e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 5a7de506-237a-44a1-aaca-f6db509ff8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 61033ea0-a1bb-4f6b-b31b-a877a5d5e7bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 946cfea8-ed3a-43e8-b337-7635c0921338)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #58 1569e4d3-5c69-466f-992b-4e89371c6a92)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #58 e794b7e7-8e72-41ca-a9a9-d4a717f28068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 bd32bb47-c9d4-4693-bb32-49a2b59c7c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 03721788-861f-44a9-97df-dad0c2668d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 cf78fc7e-fbaf-4961-b594-def1f4c4c8db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 68402732-f2de-49cc-9e60-077c56c25a3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 6035e9ca-8827-4450-861a-60d36d3fce84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 c2962b16-cc00-4eb9-abf0-1a00bf52dc60)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #59 7d9c6d8d-d7bb-46f7-9b5a-1da48328726c)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #59 3128f5f3-d8da-48a1-8662-71c99c87e104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 1efe4fdb-c210-4d2c-b449-7ef28c9dc814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 c74ac4b6-ec03-4851-af2a-ae8da82cc8db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 8d872396-425a-4883-9ec3-a96f08670619)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 bf1017ff-c3c2-4204-b274-f0dd623848b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 5be11ccc-1651-4203-8c8d-1f16e4d3dc64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 87cfd234-a7ab-4f6a-8a2d-df1b2570d902)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #60 2091d95e-1368-44b0-aa97-1d0c464981a7)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #60 87b38822-dd26-4712-b96a-3a097509ac0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 2ffba70e-0230-4407-b3fe-a98309f9b43c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 27cb2555-398f-41c5-91b6-a64f16abc61b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 e38558ad-d6a3-44f3-bf44-8a4295478460)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 99da66f5-331a-4ce3-a7ab-31919ae7a2ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 2796807d-3790-4a43-993b-b70ff5b3c969)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 3941009b-31ba-4efb-8489-20e33642db17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #61 772bbe8b-3c07-4078-a3b4-4e64026e164c)");
unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #61 5956b861-5719-4713-a093-905ebb3be93a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 da95969f-e4f7-445f-bdb7-517c2e7a8825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 1c1dbe12-8d99-4b3b-b9c8-8165c5eca5b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 012323d0-a38d-4b38-b189-bbe8fcc247f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 d2e3c5ec-0b09-449f-a0d4-8a50fc006c25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 6a3228f8-8fb8-4222-8dc6-7ff86303b46f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 2f8ba7ff-0449-4638-9d48-2bf0e5ada93d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #62 85cd8140-31c9-4b24-a10d-96725018ff08)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #62 880cb1a4-a036-4278-8c50-39d76164d79a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 6381f5f8-8279-4886-9c15-c030cb92b909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 5ff075ea-35fe-42c0-a56f-6aee3f020d75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 a96d5de1-b294-430d-84f2-2f59abc6452d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 be0d1e7d-62be-4c21-b855-3b3bb6f6131e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 1adcbdc1-580f-42d6-b4d6-c0a4406fa7a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 13a0001d-d7ce-448c-90a1-07db5bfdc2f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #63 cd396150-42e8-47f3-886b-93f69aae9c40)");
unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #63 0747e69e-d728-4ec3-833e-588de785cec2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 6618489a-4083-47a5-ba5f-1bb067731b04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 99e34bcc-d236-4616-b061-df328d2dab2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 db650adf-a02e-4653-93d4-f865b277737b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 3f261137-d8c5-4124-8b61-f0104b46db04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 6f894868-80ef-4fd4-90bb-e8a9c211ac6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 f9b1fa12-2448-4b7b-a923-2b1a3942a10a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #64 b1adf25a-6469-4635-b833-cb2f6cff55cb)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #64 01ee642d-2525-4ee7-b926-e256c15da9af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 d6712a01-9514-4551-b1d6-9e194a6d898e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 446f5d6a-915a-4c0d-b5b8-cbb8111d957b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 8196b377-f43b-4dca-a3c5-d099a59ee941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 38b34225-c6eb-45a8-bba6-78bf305c0413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 8cef7190-7aea-4713-b067-8c63ae71b1d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 13272cd2-81fe-4227-82c3-d4351f494e33)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #65 5eeef044-2243-4a45-8e44-a7df586d895d)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #65 02c1692b-cdd0-49b3-8904-57ed7edd4e2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 1b2acfc0-aee6-44dc-ac20-5685177b1d40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 81937703-2bb7-4420-b35a-c026fb0e3c50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 46f23ae5-c24f-48e8-9eba-571043b6494b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 8294e619-576a-4d15-bce4-5bec44ce94fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 3fa05ab4-c42d-42ec-a5cb-7ae638696ad7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 64b788cb-05a7-4f3a-9cec-10b948f20540)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #66 61047105-2302-4b65-98e0-bbe226ef005c)");
unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #66 ad0ef68f-c999-4961-bd29-a3501b3a8e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 3c64ad93-5b15-46a1-80f6-ce9e177f3495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 120dcc67-d2e5-45bc-81d7-6409fe0fe652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 1e7f1c79-1a9f-4017-8a09-c8a79f570e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 e031cf65-f03e-4d9d-9953-2ed71011e0e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 e27980ea-9ecb-4ed0-82c2-f54fb07a55d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 9b1da841-5ada-4841-9589-d8e989992991)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #67 dcdc64d8-25ee-469b-b4f8-4c726946d82d)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #67 d724a48b-e559-4078-9e6d-a503439d85bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 68a7478a-e4d6-49aa-8470-f4e9ee4555db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 407bbd91-445b-430d-978d-e1b7e59f78c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 2a752eac-b13d-4159-9b06-17679ac9e5a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 b031ca1f-fa2b-4c9e-8903-47b499c57d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 0c797ea1-2f3e-477b-ac17-544ef15a739e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 6a2af010-9a92-450e-bc9c-d6c21b2342b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #68 b19c4577-c49d-4db1-91be-564acb5811cc)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #68 37a95367-ded8-4259-b844-c7760d759dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 10f1d534-7366-41d4-ae14-8851b9af12a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 3bfaa17c-67bb-4a6e-94cd-f4cde56f03af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 43d6598c-d8a6-4653-88bd-9294c254cade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 6717ef79-2a33-44b5-ab07-d981618eaf15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 e227395c-2bc7-48d7-9644-bf8f038709b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 4a49e8fa-edbe-4e4b-83f5-2134148ef8f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #69 1e86c058-ae12-4aaf-9cb6-5a0fb53c6194)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #69 79c922af-7632-4ce7-8a5c-4aba308bf62f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 0ad121b9-82d1-4426-be87-ab46c575164b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 59afce9a-67ad-4f59-b0b9-ae9251f9a853)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 83ba5143-2a7d-4e75-8067-9da2094815e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 c4484f67-1060-406b-bb61-f4ea38f3a051)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 ad090aeb-7dba-49bf-8926-a9cd62374e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 56526bb9-5c19-4adb-8ce8-4dae8d3e8514)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #70 69e89d43-25ff-414a-acdb-7aafa00db7db)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #70 b543f898-81fb-4803-871a-b0f8637fbc3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 d899ec7f-fc09-4bbd-8de4-67d2c9d8f759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 c6df9450-036e-4747-baaa-18f3ed0b2166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 1fb0cfed-d9fa-4b74-b8d3-1da3924fddca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 42382598-9efa-4013-b21b-4536b4e0f5dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 327af6d9-64c2-41e1-b18a-a4dafa2e849d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 c1a25ab2-b7f7-4d8f-a0ae-813b908e8144)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #71 90a7d2b6-5504-48df-a533-cf2f55d8102f)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #71 7d96af72-4d38-4901-a2e4-3afe5047ad2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 e476a5c0-6b73-448f-a3f4-08fa6af746c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 203910c8-65bc-418d-92e3-b681c14be8ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 de227ea6-e91f-426f-943a-eae0c9062d03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 1afe82b7-dabe-4706-b1ea-2a4b65faad67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 b304978c-bc82-492d-aa68-f8e0dbc04490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 8d8dc183-233b-4d89-b8d0-7154cfba85cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #72 3a98c0df-8bb3-4c06-aba2-7b1d09e385c4)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #72 94c12006-0e70-491f-828e-3f1b7ddf5b69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 81dcc774-4de5-49c4-ac4d-6d38c8a8da85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 7b3e6d2f-4d17-4d84-85cd-6e0dd2685dc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 3d2d57a4-f54c-4ed4-9c5e-b5484481d5ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 47e8b1cf-6586-4d77-a857-b8f28a390e0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 c4da5a86-b8b0-453a-9c48-4afa67c1dc97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 898de172-65fc-4aae-82d2-713d0b3a7a81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #73 1c21616c-f4a7-41e9-9b26-681b7faad66c)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #73 9d7403d7-fb4d-4d8e-b761-12efaf5e35d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 805d9a8b-af42-43a0-bff3-302494f06adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 94079355-36d4-498a-96c1-710bab69e057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 3804ac35-fdf3-4793-be75-b44f42037026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 41cf4dbf-a6e8-4261-b179-6a6f9525f064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 ae9f6fb9-df74-4d3d-b3ed-b0ecefa18bb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 3deaf2ab-f642-4156-b708-9bd8216ef59f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #74 a3a19fba-6f19-445e-8cf3-f87d4e0ac905)");
unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #74 0710355b-7bef-43a4-8e64-5511a790feae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 033c5fae-1fbc-45d4-99b6-4bb48308568c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 ccaccec7-236c-4a87-a2a2-9dc95e4aef66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 08b49a28-b9fa-476a-906f-6e3a86ac0ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 b6f17bb4-f6c4-4abe-8845-90ed175a6a3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 8911adf1-ef5f-4b87-8161-93a5cd188d53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 a5b03404-be33-45e2-95c0-652891bad978)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #75 b32d04eb-3a83-4667-8d51-d15a69e09850)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #75 97f53246-bfc5-42be-a3da-a9b283de3056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 836e94d3-e168-4ad8-8bc0-bf3e9cc68b53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 002e2b7c-919b-4454-b464-5d79fd23c06e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 008bc58e-989a-4519-a956-40e5ddc6b495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 0e74e412-117c-4b0d-bd54-26127de37e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 2ccbfa3d-28c5-4ad6-b45c-dd4f2f694d2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 85895b35-1387-4b55-aac4-20233aedf104)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #76 3b0cd7a3-d61f-4cd3-b394-a3888c30c693)");
unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #76 c62e02ea-139b-4032-b4c7-bfaaa2c7591a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 4b03ff8f-cddb-4579-b2e2-17ecbec5c4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 8a12ace3-7b7d-4be5-87ca-491e6424d17a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 e9b9fb88-0c76-495b-8403-77630e10e8d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 29aad937-2c3d-4f2d-8800-6edaf2d34c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 220fe7cb-2dee-440b-a66b-df12edf9b51b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 a9e361a3-75fc-4517-a1c0-fecbaf8a3f06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #77 0039e889-0c0b-4188-9110-7f8a07e731d8)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #77 4684bfb1-85ae-4324-adab-54df8c790e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 ec947e08-385b-40d4-a482-c9a009fca753)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 1baed64d-b1e9-4737-948a-02a2e277d42d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 55382594-261d-4a4f-a7bf-4e0b2d82bc95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 796c6e09-cbd2-41fd-8bb2-c6d28d4e01f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 fdc7e326-d789-4a33-9618-11e0cd1b476a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 b5eb24cc-ab62-4a1d-a15a-5e6924c88c4d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #78 5bcff387-f324-4035-805d-f3f9f0b0a9dc)");
unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #78 f26d5a3b-3df9-45d7-bdef-56d2441f5bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 c87c7ccb-20f1-4325-a5fb-6f3e7ef397fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 6a28d5a8-16ef-4a74-aa25-b64e0bf2e55b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 a2c45de4-7424-413b-8b22-07b033fe7181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 d5e823d8-59b6-4ea7-bb06-778190ac3957)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 206db6f8-dded-4e2a-855b-63afbf926018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 eb4b7486-8ab5-4bcc-ba06-4d7bb94d75b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #79 87e3180a-54ae-4863-8bee-cbce9a30f621)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #79 2d964fba-8706-4f2d-afd0-0d760274da5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 86af006f-7842-46d0-8142-a1d29487fc5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 a855f9a0-a7e5-4439-bda7-05bfdbd05791)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 7838c601-aaf2-4ff8-953b-61f235cc08d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 e57e3894-3db1-4f23-9dbe-2aeecd0976aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 7fe36cc8-7388-4811-817c-c49a264906ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 834e0242-00af-4504-96bf-9519036e7589)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #80 6817b691-a59e-42a6-8fe9-c7614f55f35a)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #80 b0c367c2-3b55-4b82-a70e-4749ee80a4e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 bfe3e54e-c852-46ef-bdce-1020420c05bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 27affc83-b19e-49ab-92aa-911dcf4af365)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 7b35c144-af49-41c3-8971-8cdfaba24ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 def3ecd8-2330-4cd8-b9d2-66ce9fe68942)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 7084ca04-1ed6-47a3-b6c7-d9a29e04c2b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 7e3ecff6-86be-4a21-b14b-8cb931ee050d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #81 6ec92acb-c9be-48da-8c84-5c39364a6c65)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #81 e0b7a957-47e0-4bf8-ac15-5878b216ad8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 82256cc1-9c87-44e8-b639-b2c7567213a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 3ea99e5f-5f88-4b43-8e28-014352b18667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 bd8d15bc-b8ad-472b-ac77-d2ba87e8b3cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 26551e34-0538-4130-a855-36ab5ec4e715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 7e05720e-bfe2-4aef-89c2-bcbaf0e26216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 895e81dc-c241-4f5c-81b5-f5edde05ffee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #82 63740fbd-2dea-4f7d-a76d-9495885f2e8b)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #82 35e8f4a1-74c6-4f3c-89fc-207679465826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 73fa448c-9dbf-452c-b7fc-823b42500fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 d82545c1-db01-42be-90d5-a7975b6f759c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 68a4f83b-e181-4b68-bd8b-8b9d2f3d701e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 201a260c-36c6-48b5-ba1a-60e6599a5fb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 ba98fb40-f745-4e24-acbc-5f7d472d1d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 4e4b6b69-e996-4d8f-8450-e0d182b7a690)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #83 f2fda376-299d-4a17-b271-71cf8d6ebb6d)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #83 ef62230e-f038-4665-9587-01a713d69155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 3f999c6e-3b71-4bcb-8f72-445076942482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 fb1b4452-b5c6-40d5-bcac-879a39cb8881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 32cb0ccb-8df3-4020-b21f-72f3125482cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 fe659867-d469-4345-8dc9-532b681e50a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 297eac98-eea2-4348-acda-cae5858433f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 6857f6ba-49d2-403a-8fea-02f8ac3efc51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #84 a1f0acd6-ea58-4e51-be86-2f1460fe326d)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #84 52df649c-4990-4890-9cf9-06b24e62983c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 e01547f1-3b32-4507-be7b-8e8ce696f1f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 b27ed5c4-3f5a-49b3-bf14-b815eead72dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 3292dbf6-3ae2-46d8-bd12-80c31c487d47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 b7247b66-1ace-45cc-a946-a6992b4bd2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 406a2fa7-fe32-43bc-bae6-32a22bca425c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 57f286b9-6613-429a-a776-c82a63b9b27d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #85 f0c8ced7-4eea-4569-889a-f40347db4365)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #85 99dd56d0-9685-44d9-b902-ed1283d84847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 9a2594ce-832a-4b7a-92f0-ceb60f4ba532)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 3cd16b3a-2964-448e-8199-93a8a770be4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 94e96a2f-cbe9-485f-a6e3-ca6dda6824ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 736cd4dd-c366-4468-ba1d-ec676f56be4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 ecfd898e-c341-4d23-ac1c-b625a734ab68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 11ef21e7-6cbe-46eb-9f8e-4eaebcbda1b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #86 611296e2-3c4d-430f-96cf-52c63a95f6bf)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #86 0c6571db-aec2-4fad-af40-4f5abc45eeb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 288a2a54-d104-4f04-ba84-96da844e678a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 3ea52b68-ffa7-40fe-84e8-fc1e22635d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 1f6b0fb8-ed66-4d94-a7ce-b1d450b9a358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 1a47ace2-d163-446c-b57b-07fe53b6ef69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 a4ecdff4-263f-4cc2-a608-acf6528d7df3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 49802e00-1c90-4013-88d2-338e61f2b8bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #87 f8c71e45-0645-4649-9494-c4c85096013f)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #87 4e4ca055-cf6c-44d1-a49f-44cdf947cb49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 21962e5d-dae1-4b59-b627-d3d3e8ec6c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 446dbeaf-1d7e-4a7b-bae9-957c958e276f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 bef1fffd-2068-4314-bb25-55eeb204e275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 068b9bbf-2729-423c-942d-faf6cec09411)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 df903350-f37f-4c6f-9ba2-24955f2d5f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 e02ba19a-9774-44d8-a5ea-c8231849125e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #88 301b38ec-f0f4-45ee-942a-1e3973e243c7)");
unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #88 996b1bd8-3dd6-4b24-a12d-a7500dfe70f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 13dce95d-f4a2-49ae-bcf4-cd5d40919249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 58faf973-0825-4929-8e07-a9e324a8b0db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 579f5198-1408-40b4-86a3-ef963285885f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 68a34b82-a401-4640-a320-aa927e230752)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 77e8c4e4-6c26-4d57-b27d-2c682df05cb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 1edc7b2b-58cf-47c7-b69e-54aec5c5625c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #89 8452282c-da67-4738-8019-e7f0b73de2e9)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #89 8ddac14c-8a5d-4945-bd0b-139536a1c303)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 765e630c-d19b-4a50-968a-dc72ad8ad65f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 5ce272bb-dbe1-4e77-8a05-b665e3e3b8fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 1a1968c5-4b3f-4288-968a-c3944c80c07c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 4a91aac7-b55a-4a80-837e-61742d4b1dee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 8357b8ac-7bd6-4135-b0cb-54a078ce1651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 13f0c897-5283-450e-9e54-761aaffe7520)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #90 c5151c00-ebef-4767-97fd-e9c9080d9fd1)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #90 ef6efb08-695c-470b-837c-a338043c6935)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 e6b7c141-a86b-4455-bdc7-d7a5acc0cd1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 ec55f60c-d0bb-422e-8cea-b8fbc7e49acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 54207d70-99b3-4b26-9bc8-3253920fb7a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 222a19f6-2141-44aa-bf2b-df7edcb76c7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 a1de809b-8234-4919-b5a2-9d829d166d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 6a3953b5-f848-4958-8eb3-1efdac34432a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #91 467e30a7-e2a9-4d88-b1a3-9b660f9e4ee5)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #91 440e3e50-7b02-4083-9b44-8c2b1dd16c04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 59962776-691b-412c-b844-3b3a5bdb12cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 b9ec219e-5bfb-48bf-bb42-5b7239e2d14d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 fa2a902d-0065-4f0a-aa73-3899ec258052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 ea857d21-ee1e-4fbb-800a-a96a1c5f6fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 1579f1c1-0675-4bb7-b58a-494f4593a0b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 55ee6070-3a5d-4dd2-ac08-db5548ec7263)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #92 97d5fb66-cf3a-4164-a886-2cc6a011ca49)");
unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #92 b7ff91d4-a409-4c2d-82e8-4b7f57da53e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 d717e899-6d74-4e77-b2a9-e14191b4f176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 4072e510-e3be-4a00-8d19-12b0ead266d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 38ee348b-ce49-4d27-bcef-8aeb2329bf37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 424fcf6b-d34e-4fc1-bd0e-30b7ffd7baa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 294b6393-f995-4053-8344-e80008d14a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 676b844c-c714-4408-995e-2c3c69193a20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #93 f6167579-2167-4174-bf56-0e0ab37ff5d8)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #93 86a1dcea-6954-44ea-a3d2-9f514ca1513b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 ad14bae2-510b-4e9d-a9e3-8653078ff680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 52af46fa-8822-499b-a42d-03537b25f61e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 4e265d45-dc83-473d-a4da-b1360ec4dfc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 36cc4754-c61b-4ece-8603-ef97e32de3d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 61df90dc-af2e-4f34-99b9-c45dda4f53d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 c8cdf3f0-ddd1-46d5-a57d-6f1b854a4ff4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #94 3eea33c3-7026-49dc-8bda-2dd47e9951f2)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #94 8b74ea24-255e-4ed9-bfde-d60630411d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 2e03e064-f3a2-4cea-9deb-3e8f77698bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 48bdde32-3e45-43f0-a2a3-c5d220c04ecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 17f80d55-94f9-41aa-bc3c-a195b564b284)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 0ecbf2ec-f37b-476d-8149-edb5aef2c30d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 cf78adc9-45ff-45b0-9c73-a1775dddf537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 5c39d06e-2ebd-4517-9aa4-c8ff12c3ea72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #95 4887f929-ee4e-47fb-a699-dc16191b51ba)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #95 5c53ca3b-4a5a-4cef-abb5-390361fb1b8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 42c17861-c259-4e85-bd55-bb9dfc0ef783)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 fa19d5cc-c716-4f8c-8f60-b8250d4a99ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 e47912e8-c963-4546-bc9d-9731faf98ff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 42485825-ada9-4a37-a129-fe9618f5d4b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 00fc3318-6d5b-4a6f-a8dc-343b30c3285b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 dd65d0b0-85f9-4897-8e67-0a4aa2768abf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #96 789391ca-ea42-420f-aadc-16822f0d0b45)");
unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #96 82668e9b-6189-4912-9251-f6060d8f9537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 f833c5c3-1567-4e2c-a682-bfa838393031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 f0a76bfb-220d-49d3-85d5-c716c1ef3517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 cfdf37e2-54bc-43ed-b1ed-ee3e4042a1de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 1c95bfc1-f57e-4479-ae75-4c8e8ef85be2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 cd52285d-5dde-4b82-9d59-a1208d0d614c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 7daed80d-6052-4fd1-8753-8a9458a40c7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #97 b02fda00-185c-4d66-95af-c40a7a30589f)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #97 38e50212-00ca-40ab-b548-1037687ddc49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 5a714a0f-4069-4747-ad4b-c561dfcdc210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 26bb7472-efb8-4f0c-aff9-347e83713ae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 bd2d0319-ea00-466f-9932-bdccb7200121)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 a4959bc8-e4e3-4728-8629-81ef670289dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 ee4dfbb0-b6c6-4234-bbb8-56e11e9ea88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 c298ee76-a48e-4a24-b560-5447b0aa3fdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #98 93970df2-4eac-4916-8701-82c00a8943fb)");
unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #98 d5c55c4b-bcd5-423b-8b41-21909c3e0729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 8294e99e-fb62-417c-a37c-5b8c60697bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 0db795d5-4c40-43e6-b0a6-aad23ff91d6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 1abce860-703f-437f-adb8-407faf1e8284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 20be2047-5e44-4100-9e2a-4374e35f7306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 7cbf7816-7fd1-4522-a0b7-e6d57c3c58df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 ffa94dc9-a9d1-4675-81d5-18f1749e6072)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #99 5956734b-2e42-491f-9b86-265ddb75384e)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #99 22643d1c-0920-43f1-a98f-05d0c194fc07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 c901ceeb-ee2a-404d-989e-62ae7762f92d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 a18debd0-d02b-4c4b-be5b-8d8ea14a0f07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 fd529214-2e1b-40b1-a0c1-f1b410ac22b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 b372f847-1af8-4e5b-b3a3-1fba1940a131)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 e8704065-eb8f-479b-86a8-1be978b007d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 26d4c467-921d-4598-acc3-ce8d2d814066)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #100 20853aa4-f74c-48d5-80c3-373c0f1c11f1)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #100 bd543297-b345-4061-afda-344b82c8cf5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 8abeac6b-b431-4a7c-acff-553f30b286f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 e2ecac8f-84ea-4509-acb3-de65dea22458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 67afa1b2-3e10-41d3-8fc9-6777e4a5da7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 c5ace72f-5e67-4c94-b865-33ba273a30fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 05c4cb64-73b6-45eb-bc0a-a4bf74a0bfaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 e2010e16-1ea6-4504-bdd7-9a89685e0a63)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #101 c603217f-597b-4ef6-bf1e-c62d36454205)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #101 f1bb1222-30e8-49f6-84fb-b3211cbbac24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 5a54943b-9dc1-4b55-8427-b7709ce490bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 db598684-841b-4b32-a71e-917f4cd8133b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 e0ef1cce-d24b-4168-bc22-963d69d6b24f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 60e88619-9a05-44ad-8f2d-f971616808b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 7e13a563-0f3f-4ddf-8204-6421a9f34c36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 fc1c9b9c-1ab0-49c1-aa84-c54081e79852)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #102 663b9315-ee54-4a4f-99e5-52e49cf7883c)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #102 d5f24efa-90d2-4175-bdb8-9b1c09e1027e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 e687f7d8-d187-4f3c-931a-edd28873f328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 e657aaf9-6d23-417b-9ea5-f4636944c37b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 075ee11e-6338-4bb1-826c-e292ba4531ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 e18abfba-3f53-4ba8-89ef-67a9455c4690)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 6f5aac99-4b93-47a4-9767-061d4448dca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 15f4e831-9184-4f74-a18b-f4b50d2b92c5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #103 399af177-2dea-463b-8ee9-b809cc1fcc1e)");
unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #103 66fb00f0-f4b2-40ba-9db1-4ee34b7b7f8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 1b30b943-2558-4d86-a7d5-63395587d93b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 0936458b-f9e1-49e1-84f9-cccba343a63e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 05d77851-6c96-46b0-8e6a-b6a5bd7c61af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 7ee50f94-3ba7-415a-8552-1d80a5415a47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 a973bb3a-fff3-4951-9779-f84b38c5d3ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 83f453d7-656e-4dd9-906b-9592a8f00225)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #104 4d834d80-80a7-4106-acbc-d12411fddd27)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #104 22cdd01f-3623-4d4e-b815-dac003929802)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 f2f7ede3-0c0a-4a16-86ef-7afaf54f35a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 3b37880a-07ab-4492-82b4-4cdceed7418c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 97fb2c44-a0f5-42b1-86b5-b5611c03ca05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 0df141f3-422b-4238-9de1-2749020ba47e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 0ecbeb47-5009-4b6f-bb3f-1aa470d6d0fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 66fdfc1a-fa35-4e47-88dd-ebab15a4a00b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #105 a856f300-0c0c-4062-8626-5d8294b9c0a4)");
unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #105 664567cb-d00c-49c4-9834-0a5e14cff020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 a684f826-16ba-492c-abd6-0a858f9104ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 60af3e58-c909-4a79-a31b-98f20f161ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 837ce914-d8d4-40cf-b203-6c7c8852ba00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 2832a5d9-0ff2-4bf6-baca-5e7f143eb7dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 885bf16f-6de2-4faa-a159-8b5dc0c6ff99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 907cddab-6719-4f15-8cae-e71b18dfc81e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #106 96b6f8d4-8aad-4d6f-87f0-20cd86ae7151)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #106 691c2fa7-97cc-4585-a5db-be84061536d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 b6522b48-6732-460d-a1cf-0c47dee2a867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 93554d0d-3450-4916-87d4-4a9174fe2deb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 73e52201-2d81-49bf-a9cb-166c09fbaebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 01c096c5-e777-4517-a2be-f9504d0be4f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 3d055de1-323f-4f92-85bd-f199b9cfe841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 e6ca7f81-1d23-42b2-b8e0-13e661c4e4b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #107 3f13ca42-76a9-4708-b13e-82478e9480b1)");
unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #107 72ef5a14-b405-4e3f-9424-e68089a512fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 471a266d-c720-4d47-9411-17a917728816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 8ea83ddc-d027-4a3f-a68c-6bfedef6fe2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 0c6afff8-e9b1-4f05-b97f-59e275019aa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 8490055f-b06d-43ff-ac11-3fc16c76dfe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 f620327a-1c2a-4c7f-a021-6fd93ff3f8a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 ec3a86c6-c53a-4aa5-a4b1-b222fcbb70ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #108 b9f58084-dfdc-4b67-ba9c-0b59061568ef)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #108 8f232916-35ee-459a-b273-7c2e170b7354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 405a7139-66d7-4ca5-8b22-2f03728ded9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 de55485b-6fd2-4d0e-8185-57b7bbeeb2d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 5f207867-a59c-4dec-be57-bd91ce293eed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 5dc4fdb9-d823-4df9-9c56-18d5c9c9e9f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 ae5bc201-68e9-4699-9982-38248bc24046)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 e24e3384-4a75-4445-bd3f-edb8a78b0220)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #109 f42c99bf-e16b-41cd-bb63-4fb4d5e98f56)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #109 dd907404-6cfd-4648-9101-c41cf29b84d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 b7256733-1be4-427e-a444-37f5ba11d371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 fbc1b5db-fd17-4f70-8d56-c889cd8ab7e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 3993f2dc-ba31-446e-919c-03ef285f785f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 7ca11024-1391-4f0b-9699-7a3e3139ad05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 35842584-2ffe-4714-a573-c25ca023fa52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 4e19426d-0562-4abd-89c5-ac5a7d1749a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #110 0062e6ed-5329-47dd-b03e-930210ce1893)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #110 110979b3-133f-4ee7-8751-a2fc14d398aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 1dd54f58-7250-4e0c-a08f-cb037dc53e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 64961669-95c1-4669-88dc-8ce61922ab15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 fb746803-4369-4d98-8fdf-e7c60ccbe6d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 87a70455-c0ed-490b-83e7-cb0512db9f33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 2db76a45-127b-40be-a08d-68dc57fd69fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 3a2beaa9-47b4-4af1-b8a3-ea415461c88f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #111 7574a9cc-bceb-4eab-91d9-157e1031694d)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #111 1f1b320a-f209-4730-947e-6934fe392cbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 8abbd6b1-767a-43b2-9980-bc96657ae887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 673b178e-54b1-4ff5-9dfd-536cdfc85faa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 51038bbc-2c9f-45c9-b244-58899ecbfeb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 8451d53d-4072-4f01-91d7-33315afe1a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 97a41cbf-b52c-4b46-8343-04aaa1548cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 bf08521d-a756-4886-b9e4-19a859d4b284)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #112 f3008413-24dd-4971-a77b-2adf821d37bc)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #112 7ff5ce74-c4a3-4c0a-93d9-eee91c3a3406)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 bebdac3f-5887-489a-8f1f-21e4418ea1d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 55a3540f-d5e7-4863-bf73-f6b86fa7b28c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 b1b871da-d743-47dd-a011-d5b37ec0a784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 6f5611f6-ed22-4517-932f-b898748f924e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 14f156fc-2378-4d68-b8ac-f76ef4a19d6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 503aef30-b5ec-480b-b428-d0b7632fd17f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #113 4ba19e88-c5f0-41e0-9a25-a4cfe57ba06b)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #113 06b01c33-3a03-4501-97cf-c43af5f0bb05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 8d926b99-9cb8-4e5e-9cb1-c5969c70d274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 1e2d2cfb-e99a-4f2b-a5bc-231339eaf895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 1f6707cc-1290-4d4c-8a78-74f6519dfd1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 be95eec6-1fbe-4b16-a131-d82c98b4272c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 b1d4e569-2fd3-46aa-a837-f67ed94ef4b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 13b5f471-4091-48f3-83d6-e0cdbc1cedb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #114 059be79b-6ad2-4fd3-a831-eb38d504f60f)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #114 75bc566b-f7a0-4955-b7b8-091a59ed6b7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 bbf42596-bb0a-41cc-a56b-b43a9f532f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 48c4de96-b0b7-4b22-8382-a426e14edc9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 532766a0-a3d2-4d49-a3ae-a8450770a8e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 5dc4aed6-c933-464d-85bb-3b2acd2b061d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 9cfbcb3f-0bbf-44a9-952f-ea93a47004f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 9e6d5b35-db26-4dc0-ae95-66093e4c4b0a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #115 953d7ab1-8fe0-4b98-b428-2a15a15b8d02)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #115 f4170fa4-85be-4cc7-8d71-b13f6100ff8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 3e35f3a4-b5d0-484c-9e99-94d63c4bfdb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 5a6e9acc-bf09-4582-b624-0f2af7fdde18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 b51ec24b-fc6b-4dc6-b6d3-f18ac8ed7a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 672a92cd-fd16-4016-af26-f6d30ea98d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 e85e183e-fa05-47d2-af18-96d0aa6bc5f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 4c8fe887-7944-4c8c-9c56-aa5f9240120e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #116 cf5a6387-914d-4061-95d8-56e9df2f4a9c)");
unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #116 4061188a-de01-43c2-978a-d511343f63cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 0da02391-9a8c-453c-b1c6-c447e24a1a20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 d5c766a1-ad7c-48f7-8334-f7aa4caddb6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 71df54e6-e735-44d4-a9e5-3a0e1181372f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 f3c27763-90ea-43d8-be95-ce5ebd310f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 19d8b584-abea-491b-bd7b-3b2bb84274ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 caf918ea-b067-46a4-aeb2-a86fffa718af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #117 16674b63-5b64-4395-9b0d-330354098349)");
unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #117 45d866ce-12b7-41e6-ab42-f12909d8a17c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 ebbcb509-ecc2-4d4a-a114-d88a7d7012ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 5d0f469e-8211-44c8-b154-c888c035bd14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 b9bffa78-9944-402f-b21c-89f3cd86dc5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 f787a98e-c280-4193-8c9e-8a705d011298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 c1ef7bca-766e-4ed8-acb6-aedcee43e5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 894e36a6-cdcd-424a-9cc6-e7a003b2212d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #118 5704a11f-f8f7-4b21-ba2e-d6f250d1fb15)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #118 9df97a6b-06c2-4694-9aaf-388e7287011e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 3f67d58e-81e9-49f4-90b8-de10cd7b550b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 132639e9-98ab-4b02-a087-8fd0b6b17324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 615b942a-c25c-4fa3-b1eb-ff82ee31da38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 ffb73eb8-609a-4faf-9a58-dd6275fd2884)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 ab33ae35-bb9a-413b-b18f-fe44deccbb65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 ac648577-e1ce-4e1e-a2ca-9de5316fa758)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #119 604e73ce-7a5f-4939-8a6d-5cb91ee366c5)");
unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #119 06191d46-7e6d-47f5-bc17-790bf2c80b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 5b856c78-c827-4be8-b564-655f1566d8b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 c1736c2f-462b-467e-80e8-3160ca7c0e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 147eaddf-11d1-42e6-8d8e-7dcbbba49117)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 af6e46f8-a934-4c18-be0f-634819746066)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 ec6f3549-6469-40a6-8916-0270dbea4328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 2d376def-dffe-414c-847c-e32960bef08d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #120 0ed636fd-c4bd-49cc-8235-ae73e06f1303)");
unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #120 e5ecb434-e9d8-41eb-9261-fe4f0193159f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 ea4ee279-5b52-41ad-99de-1365d64b4889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 1426b853-98ee-4582-8c02-9451ec2b3c20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 c0c9a3fb-530e-4dd9-8d8f-aeecf2c7ee78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 aa1df872-bf2c-4e1d-9676-04e396547b83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 b0010130-aa00-4468-b488-8be7d9aaa437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 4eee7327-d363-4a82-8738-db7f9615dcaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #121 ad5ed112-0178-493f-a5c4-e3d305497904)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #121 387b15da-dead-4e53-b0ce-2321f30356b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 38a17a8b-0a14-4e01-a4cb-807b763e77ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 b1f4cb6b-7c0b-4c6f-a55a-7f65ab79c555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 b39b9708-0309-495c-8422-b8721669537d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 f8227ea5-fcee-4cd1-9777-9dec8cc7ba37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 1dcff144-873a-492a-907c-94fbcb5fddb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 775e19cc-be19-49d9-a671-6e19dba0ce1c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #122 2df0420a-9e04-46c0-9680-1bb4d50fab0b)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #122 4da8da15-60d8-4638-9d3f-eb4dc332b290)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 cb6f59fa-ba84-4753-a3b3-431d4a55a402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 27ed9ae3-3623-4e32-8905-4363bf286adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 e6d4d2c7-a4a8-4ba2-abb1-0dc4ea4111e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 3da3f43a-c830-4ea0-991a-8519223bd84c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 bf2ca941-5542-47c1-9e4f-49be61f65363)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 1b4185ee-3153-401f-b45a-ca6624847927)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #123 714c348c-8c11-4000-b26b-fde7a26539c9)");
unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #123 1f5fb909-f402-4809-b063-25c1aaa2a2af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 28a943f5-990e-4ba7-a3c4-cf7fb6febbcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 41cde3d5-00fc-429a-8feb-4adfecf98c06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 1cd08840-074f-4fb5-bb4e-f631b92592c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 a906b528-e328-4e35-a5bc-15ef35fe343b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 97fb9e0f-6745-46c4-90c3-48bdb7e09bb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 417682b5-5dd3-4d6a-8163-3e8471f3a98d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #124 0c4bc772-35d5-4229-a9a1-46307b403f4c)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #124 329873fc-6e23-45eb-bd1c-5637f18677ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 265556de-2f7d-4000-b030-c42714029947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 7d9e03b5-fa19-4d17-9d68-41f68680dc11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 c38aa354-fd03-448d-b1f3-6b2a86de9de9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 d6868b63-ffa5-4339-b09f-20da191a87b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 e0ed03b8-4c56-4f90-934d-4e7844e8e559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 3d7816df-2979-4f9c-af6a-e5b66db48d58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #125 e41e929b-2eaa-46db-864a-8bc60d27ac01)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #125 947db3f3-5906-4611-bb03-52c8f64805f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 01fcc89c-0131-4381-84a9-48c8f3b3c9b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 7624bc9f-6d6f-461c-b040-b57b4d28498b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 ebb65b85-7585-4751-826f-51e8748f2cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 9cd12bc6-f483-41bb-9aec-655de7097590)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 805095d3-7bcc-4ead-9d68-fee99b6f76a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 ae2b60b9-54fc-4214-99d8-6a53b42f3d76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #126 67a6f204-f747-431c-abc2-cada7e9ea995)");
unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #126 2c36cdee-2f85-4102-b7e1-80b563771351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 cddfd198-88cf-4bce-98b9-7ac89dab5996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 eeb9bcf4-2293-4253-a93d-ad28ca150a3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 e5cd274a-f864-4b4b-8a61-412953501b87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 f506d9bf-cb34-47aa-b9d5-a7fdfaa908d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 fa9f5cc0-3585-4c9b-b42a-f722aac47144)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 93f8b010-1cd5-484e-9d6b-9c0dc510dbd8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #127 65d12f5b-3050-4dc5-a31c-406c66a08596)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #127 522cec78-c04a-4444-b865-499587946da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 2139aba9-ce07-4600-939a-2a602b58abb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 a3716962-72bc-4efc-994c-e83d7d3fbc9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 882dfda1-6bd1-4e34-8bcf-7807c1c8f1ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 2ee40d62-6b9e-4557-b325-0a1e11a3b8fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 220f537b-6a76-406c-af4a-db2a2efa4548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 b509a50f-49be-41f1-97f3-54dd054d0100)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #128 7c50b29a-9e56-43ba-bd35-cd0c580d8e3c)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #128 5adea813-97d3-436d-a3a1-8ac367e9651b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 045f0558-46dc-42f1-befa-a322c3995c74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 d2bf593d-96f3-429a-ad86-921958c1c11d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 0f4c5935-a4ea-4e7d-92eb-7b0cc3cc6a35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 881c39ae-bc88-4658-a128-8702cbb0ae02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 3634d877-4a92-47ae-a607-8cda33b7fa4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 290bcf34-638e-4fd9-9391-63a6711777ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #129 e1b41897-868b-4a73-a06e-78ede9fbefda)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #129 cb8fef99-3e00-45d8-8f2e-680d8fa835f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 3fcef385-ae02-4e4b-8344-6f037da4a94d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 c0cf4df3-8b11-4485-b674-c3b81354a59a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 6bf4b963-4b00-46be-802a-341f22e3e15d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 749b1403-bcc9-42a5-8d0a-2b9e30d6d1cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 7facadb7-4024-41dd-a18d-9862e30b188a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 25b7b9a4-7c2e-48e6-a3b9-af9abe8fe112)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #130 125953c3-e945-4694-86f3-1b33789aa79d)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #130 c59e6891-b26a-4fce-b743-eb311f2b7a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 356d028e-c39c-4364-b991-e0fd8be44393)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 0aae5193-22e9-49ce-9fb6-020c39a13b4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 406b7a05-148b-43a1-955b-b77149223d60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 4407d776-53a6-41f4-a9fd-50384a3ac9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 c8400a2f-fbe0-440b-a3f7-e5744d1ec975)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 cefab7dd-bea0-448a-93ae-eab82b3837b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #131 306cf651-8123-46f3-ade3-bbda066e6974)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #131 9d4f6ac2-a6ed-4ed4-836a-5998937d296e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 60d87337-bae9-48a9-bf9f-93328b25bacc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 42e92ced-9762-475b-be5a-2df6393161dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 60a0d407-7708-4876-ba7e-cb6871532c63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 0983eb8a-75dc-4173-a8a9-6ef9b9762013)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 e3661387-2912-442e-8abe-592662c4c829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 f3c92c69-2e48-400c-9c43-03c43d3dde8b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #132 40c7a24b-dcb7-456a-83d6-757347d62bf6)");
unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #132 8ebfb843-6a63-4824-a762-84b55e3539cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 7fa710c8-a56f-4216-a126-927d5d292bb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 648a22b7-2f69-4f7e-8c47-f3bc20361e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 51b2be68-bc6f-4094-a72e-0b8a7bb0216a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 a9bf809b-9cb4-48c1-ab1b-aac34496bc20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 25d490c0-839e-463f-b994-28b87d0e1378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 287c89da-7ab4-4fa2-b1a2-724801865fe6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #133 ee601ca7-2a8e-476d-9fbc-935fc6c22041)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #133 2783b56d-31ad-4cdc-a17f-b9a8c7179437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 3b7f900c-afaa-4073-8589-44e9c5ee83bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 c22f5809-d371-4950-b7d8-d7a31ffa5b73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 fcdacf02-29e6-4c90-9127-155fc29c0c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 45f4c22f-b516-4b8a-bc02-7da2f844fc07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 d14d15f5-3867-4593-bcb3-00c993e00094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 6b59ca66-5dfc-4fde-ae93-630d36ea0f8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #134 93789c1e-f5e3-4d7b-afdb-91af16845fee)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #134 75a877ef-2e4a-45bf-82c4-05efca31e258)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 e6d3be45-7509-47ae-8559-4d3c87f89794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 c99e6fc2-ebf5-4f23-bc0d-956d338ea06c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 cb3fa29f-39f1-4332-b475-8779e1021680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 f0f70f96-709d-4111-bf99-932b28e9c06d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 b066b8b8-888d-46aa-bc24-e6859441a8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 c14d16f8-404c-452a-af86-0a0cc71e6c1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #135 4f3c9c29-0233-4d67-baab-87dada702f12)");
unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #135 15bc810f-c850-4ddd-ad14-ebb92bcef970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 2fa51672-8639-4f11-9699-84f10fa6cb0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 bfe1bd68-6fd7-4215-9a42-ffc1c9a09d63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 12207a1f-a1d5-4c66-a7c3-515cdcf6664e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 17dbb74f-762d-4228-8ffe-e63e35daaa36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 8de8777a-1e1a-49f7-91c8-16dfaaafdee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 e8955f1a-1e08-41ba-ae5a-8feddcc4f00d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #136 a8c75c20-fce2-4e77-a48c-0fd9e5914152)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #136 1005005b-682d-4121-9c09-770851b5a321)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 4471da23-2f17-45c5-a14c-a8fefc6bd776)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 81b5b33a-9f03-4ae1-bb87-08b6d202f6ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 2a270d65-b1ca-46ff-8af0-4a9ce0d0a87f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 5c1990f7-c668-4295-90c0-1a96ed1774c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 7a3fa474-8dc3-4cbc-b7fb-3bd193e24afb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 70b07261-efc4-4e6a-a611-1d8ed09b6dcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #137 18af2de5-f0e6-4e41-9aa4-af57e53c67ad)");
unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #137 c2528944-ce2e-4b92-819c-797f45658a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 85016992-c392-4dfb-b0fe-91d23f6f3e1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 0c2e3f86-dd1f-463b-b154-ff0a8b7b021e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 303a1c11-bf6f-413d-9734-8fcad296c603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 85a57d39-162b-4601-a1f5-588ad38ad3c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 d9c66b71-88c3-4c24-a202-44d2f2bde45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 47e267f7-3257-4add-aab1-0eed255fe5fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #138 391c2afc-2c19-4aed-bc99-b8ec979ab93c)");
unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #138 308f5d5d-818d-4ed5-b4f2-99bef56e6c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 8f7125f7-e64e-4bff-b25e-93487b8ecff3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 3505946d-8f69-4285-9926-cdec0e6a61a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 9b137ff0-8f2e-4274-911d-d238ae09b2a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 ce402d21-06d3-47b8-ba64-43cd0867ea2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 73113733-9772-4b5d-ae5d-c3fd92bba475)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 0ef690d2-f214-43e8-9014-0b9d404292f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #139 ded3d158-f025-4d29-9172-fd92e34913ba)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #139 3461e904-b844-4c22-ad4c-c56e70723d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 dc622bfa-cf0e-440e-b5fa-b659b467cb29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 7dadf07c-7f60-4a17-ab59-d2bbe13143ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 ef7e0046-0872-403c-bbb7-1fbae30a4230)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 4e9667f4-35ca-4fb3-a48d-2063f5909fc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 e893d871-78ae-41d2-9e5f-f8e923e07a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 a7554b2f-50fe-4979-9e8c-f85402d5c5e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #140 70640980-04d0-419c-9b2d-8c79421474e0)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #140 e072ea23-bfec-4ab1-89e3-1586a1a6bcb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 a7ad4de3-8b3e-4eba-b631-cb1efa56f214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 37a35a54-2c73-40c9-bd94-5c788e89ffab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 6579e97c-71df-4873-a63a-dd417d537aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 b16e25a3-01ae-42a2-b14e-f30036e94618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 2551cf1a-5c44-4ab9-a722-1dd4f4d79360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 0dc021d4-43ab-4a9e-8cdd-4e9c815030e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #141 a17f2fad-5127-4f31-a28a-706c67924fe3)");
unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #141 92981505-e395-4989-af37-17189699ef81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 1e7f6514-0c5a-4952-b1c0-10bb0f1128cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 df92a7e2-b6be-4080-9b94-ab4e591fa9e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 14c86d2d-9360-43e2-8954-1392480a6b51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 ae5ef459-38c9-43d4-b873-f1a49186dadf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 e18b6f86-adef-4964-b8b4-dba1bbea1ef8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 fa1c3c95-7bfd-46ca-b7c2-f4ae44f59490)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #142 ece36a49-e3a3-4ee2-83b3-db30e174ed6c)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #142 b5cf5d7b-08ad-4221-b857-e5d638173abb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 80c68320-5f26-4477-a918-c965adb92703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 0bfaf406-25a0-4633-a98f-1c185f94ecd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 2cb5281e-9977-4920-9534-07a5cb6afdb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 1579b245-cc4e-4810-bd8b-86e1a399de36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 7b24a8e5-25de-4de8-b7ed-efc6e386f4bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 fe402013-9258-434c-ad04-20c0e192107e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #143 779aac92-1764-4f09-81ca-4908985b531b)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #143 1ac45c9e-6773-42ab-a613-8d57a376449a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 21094717-bcc0-4ac1-a5fa-f8ef2118ec60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 9440f66d-bcb7-40c9-aeae-0a633e62425e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 5efb6c65-95b9-4995-9567-638644df5cc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 f06de9da-04e4-477d-a4a6-729ec60ba606)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 8e59adeb-5d30-45f3-bf6e-87e28b115d0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 bd9ea691-7aa7-4000-9228-284ffd4cf4ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #144 9ac42372-3d91-42c1-aafa-fa3b2e32466e)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #144 6d84893b-6d04-44aa-83fb-073ec1b6d24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 f9dfa8f4-0798-4c5f-8726-8959af364feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 dfb98d46-2564-4234-83db-eccaa2e217c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 0339015a-8a68-44b2-bc8a-5b18e8ab50bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 0582144f-7c24-46c9-9476-7ce88c3f930e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 8f65d8fd-1a95-49f0-8604-a9847ac1b9ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 92d8b81c-f061-4941-bb8e-3ffc726f5ddf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #145 258390b3-f998-43d5-885d-77bda885ed07)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #145 d37874a0-504f-4428-8516-bf1dcc5b756f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 798b3985-57ad-4c29-bf35-6b05b4b92441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 634e5ec0-d4b7-48f4-bd0b-031e79f63ea5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 6713b140-2890-4418-81e0-798d484a8dda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 4519c122-0426-4b2a-986e-5778d09ec48e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 761a21f3-ca80-48d7-844b-d7539075a52f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 1fa183d7-7680-4c21-a90e-7b566627ff9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #146 1abaecb7-9495-459f-a55c-f440ca5757e0)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #146 6e0a90ec-c603-4fad-a8fb-7a212d2eafdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 4bb76658-4f70-45ad-b86e-d5787fffec4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 020fe533-b9f2-4563-b613-19a4ea988123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 c475a294-e78c-4009-aca6-137b298528ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 af79b3fe-cf09-4b5c-8d1e-f8b645c59ec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 d4e31837-7364-4aad-9e15-b942dc4042c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 cd0479d0-218f-430b-931e-22608f2b903d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #147 e2cdee22-459e-437c-ad6c-60fdaa2f8f87)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #147 95b6b204-0516-4358-a230-f302f2c09c0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 7d44273c-d5ae-4c10-b768-0322f5303bec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 45a81967-9b49-4040-ac15-4d1cc32c39d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 c1ac1e82-9070-4d45-a211-4b0750930774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 097164a9-5515-4860-a5bd-5dd74c2af816)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 7e66d251-87e8-45dc-91ae-8ece3e10a9f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 736e5961-bf2d-4d17-89db-15e442300faf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #148 d0dd7ddd-50f2-4f7e-9b5e-b02316ba57c5)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #148 c452dd4b-cf92-4d13-8db1-82166db62ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 bf19a619-13f0-4da6-b7ef-b770946dce3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 3ea35250-d719-4a38-8c69-71fe31bdd2ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 4f1fb637-dfca-4b64-b84a-fe2ca6b4dfcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 1de26509-5af9-450a-9a66-65f693620f98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 d04f1a3d-1ab9-4c0c-8562-4ba21962f663)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 322f7127-5d40-49f6-867a-dddec8b5baef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #149 a1971917-920f-4a62-8a24-f63c6987de70)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #149 68191641-82ff-4025-ad0b-8598051b1283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 abd1c9da-946d-475a-a5c2-d26b83e8a248)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 5151bff6-ead2-4215-8559-ae8fd5ef6dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 4cc1bfa7-4ce4-40f2-8e76-1df3f43bdd3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 83dab490-edcd-47c7-9e74-f9e83fb0e09d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 1936d321-86cb-4373-94e2-09c1d4beabfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 405c2688-7e65-49e4-89ad-9bd1ffab14f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #150 19eca83c-a4b6-46bb-bbad-bbef08274496)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #150 387ae41e-a10b-4978-a0ff-b5c6be1a3615)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 c0a4883a-d12b-4926-8d7b-e91f5fe3ecf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 de9c5b95-d431-4eb1-9504-1ce7b60b6265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 c8a568a0-32ad-4cd0-9634-f13112a94e5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 fbc6f377-e13b-4948-bb82-9ce2a5959dac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 eabb7da4-9eec-4110-8853-1a9fda49da47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 358ee8c1-8ea7-4aed-ba66-73d0bb0334b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #151 c001f619-1596-4d04-8388-ffe7e1077d4c)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #151 7ddafd9d-dbc0-4c0d-a469-935b402ba9d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 b855a08d-95d9-4629-b432-79ebf3d837ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 5f91a4f9-ea0d-4dce-aa6d-0aec2fe2fbba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 056ee29c-9e20-4613-a016-e0e001b30e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 1726fb99-7b73-4911-8a7c-6be7f61a5352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 9846ed70-2437-425d-aebf-663b11427ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 544a1efd-b25c-4ec7-89e3-77f56b6cef11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #152 906413d2-9167-4604-9fd6-b0bf1773501e)");
unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #152 872b9145-f960-42dc-9e46-5124d06043c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 507e3387-7339-4275-a5ff-df6b27f6b323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 9b3c55dd-3ad7-4a64-911a-5f1f1ef4a06a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 5f9779a2-ed24-488a-bf60-556be1bcf736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 dde1f7af-7ee4-46b9-a409-cf0474759d89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 6edf34e4-93fb-4d59-af04-7d0585826cb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 4f10dc76-1c73-4a44-9716-9a5e67f44f2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #153 d9821457-8d29-4814-a349-3bcccc26132d)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #153 151e0cc7-7271-48a0-b67a-2ba6ebef9a48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 9bcaf585-2974-4880-b28b-b76908fd7327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 d1e7d90e-f4fe-4a8b-9396-84cffcf02913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 ed8a5f4d-5b8f-4e44-8870-319ceaf65bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 3ee6a097-b3ec-4fa6-bf5b-645c27c89f53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 bba46c0e-02fc-45e1-bb6e-d1bb62e82a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 73770f30-a8c6-409e-ab81-ad487d161bcb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #154 9d17b31d-bf43-4be9-b2a9-0247e474a984)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #154 cd822c1b-754c-4155-a171-3ff27edfe2bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 0250e459-f50c-4423-a747-c70bbbed13bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 828b4c85-d4a2-4ba6-baed-340e18918c5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 22a136e9-4f5d-4c98-976b-daf5aa2b553b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 a1e873f5-f6d5-479f-8ea4-4f36da7bab5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 0bc22e8e-baf3-41c4-9bf9-387d8ac5fd7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 380f7fb4-748d-42d5-97f3-baab25683611)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #155 2c5c7ef3-8857-4942-b5df-bc0ca641b51b)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #155 10bb531d-0591-43c6-b689-ae5e412dd87a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 63610947-bc51-4ad3-bcb2-ca78a323cac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 ede66119-bd2f-4b79-8d92-d9384e00bc79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 35a76d55-7fec-4846-93f8-046015a8d108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 98520bb7-d9b4-4bc6-b14b-6adce942484b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 63d0b4f5-937b-4c0e-8a94-3026b8465b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 cec28b79-1f60-4a27-b6b0-944a95bcdb69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #156 bd7b70de-1c3f-4c83-af18-78cbd7a19d2c)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #156 c168e3ba-7f7f-498b-8a82-ff87710e4ac0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 03089482-0559-4bd8-a8a0-1028837abc1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 c398e2cf-0e08-4140-8069-896b8a2d1f59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 2082b99b-bc07-46eb-bec6-eec46cde4df5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 e78c0ce4-38d0-4959-8714-3e5aa71590c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 91242000-9ed0-4d83-a9e2-7c28bf83d840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 07155689-8197-4d0e-8091-33ad30d5bac9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #157 eef154f7-174a-4738-8aed-b51098e1006b)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #157 eede45f3-7b15-4fbd-bc83-30a42c741de5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 706ecf0a-f977-4f3e-b555-9c5afa2c5275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 7b72c9f3-6082-49dd-8b2f-b91bf006a5a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 0eb45866-eeba-4613-aa2d-2fb983f90601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 35a6e5d6-bce8-4da8-beab-ee92d93f59d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 65034a0a-5494-41b8-9840-bbecf5e53e9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 dbfc5e7c-202c-4cc2-8a6a-c96e33e61a44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #158 2d89d0c7-7224-453a-9a23-ccbc6bb8c80e)");
unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #158 ee41daf8-1fb2-4402-93da-7e7c337c703a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 9215f54d-233c-4c7b-a9f8-b39f0cb34d31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 1ef1d44d-7680-450b-8d5f-d0dcdd8571f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 aba6258f-4604-4d86-987c-44938519d3ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 20d96e03-f1ef-4dc7-9736-b5ffa20b0ef6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 e5e6e7c4-fa50-4f99-9531-69a8d284874a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 bb950bf2-4c59-4130-ad8c-967ea84d3df6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #159 48d01d4e-f3da-4e9c-b6b0-56ca4fd39978)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #159 320100ea-e388-4bb7-a53c-a34a73a0b6fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 04a497d3-569c-464f-b1cd-4c7e64954686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 38c49bc2-39ae-46b4-ad40-f5f778e49fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 10073c53-532b-49a8-93fb-6d9379469e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 f92c7262-5e0f-4b32-93ab-905e81a048bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 80fba26a-d163-4228-a8a0-39b2ecf28343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 7610da63-1edb-484d-88b2-ead9e3e0ecd3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #160 bfc48ea7-66fe-46b4-ad62-11c95a040da3)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #160 faa78ecb-35c7-4455-9519-b7ded765c430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 a13d03eb-7852-441d-a752-b43e91e57dbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 5847deda-4409-4f28-b500-4a5cb2033792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 ab19afdc-b3a5-49c0-b262-b8f665860c91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 aac1b1ba-4dd6-4eef-bdd4-6451ce9c7268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 1879888f-3d00-4c1b-80a7-6f17e8da70c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 60164836-7d6e-4cdd-8bd1-7afcfeccde17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #161 86703897-35b7-494e-b722-c0dfb991747c)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #161 c9346632-2194-486f-babb-97e62489fb74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 e16788d9-2b12-4263-bdd6-35ef934f4a9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 c51a7f3c-6ac6-46dd-9b71-7c47a660cb37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 46ca9792-3c2d-4ffc-a022-2458ddc4ddc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 99c4a42d-6d80-4c6e-8a66-188b12bf1c40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 d8218bcc-d4d7-4168-b0d4-92a6cef70b21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 b11f7618-d985-417a-8a75-e908a22d3bdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #162 82e5daa4-119a-4782-bb66-908fe7802225)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #162 87b02131-2f09-4a04-835f-404c34fda345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 3334a183-2488-4266-82a3-2f131a3def8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 4976df68-b255-471e-8f54-37a4d71f5d4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 4d2e6b72-61ea-48c5-abfe-bb316eb86f6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 98d3449d-59ba-4710-9dbe-fa91413e63b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 f3f0e568-b40a-457b-88e6-dca8eb8212b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 e97024a8-7e8b-4f65-b23e-d9b0244e3ca4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #163 89c3ed90-6fca-4926-89ee-f1f27d3f4563)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #163 eceaa835-ff54-4e38-94e8-43b21cf812c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 4c626d5b-7e7b-4c51-b966-7bf99896b3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 fd85f0a4-ba18-458a-a9e0-685410a214e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 f8d9362d-ff65-4ccf-bc9c-3ae00ae33c21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 c6e5b639-9b9d-48df-81b3-fefa117366d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 bdde7bb9-537b-4358-87d0-dba762da5507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 466b4999-18b7-4dc3-9206-ccf623e935c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #164 46feff3b-154b-4902-9c4e-1b93b91d397d)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #164 6fb3862e-f347-492c-ab34-8fbe14921bf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 f64bf5bf-fcd8-4a3d-b932-193b08217cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 63d2d0ce-8a25-4808-b0c6-e0e3df40a79d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 af5aed1c-93dc-4b4f-982e-19e1b17bc7d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 e759a394-2157-4ac6-b27b-3ef3e7bed76c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 c1f182d7-3cea-4d16-b158-c23cc9d7162d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 f8640f1e-5945-4d2b-9336-8d5aeacf142c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #165 c17abd79-aa9b-4df2-b5ce-e2201883c081)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #165 d9ec5b59-b6d2-4539-9027-001b69a4bcee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 d4bebdfb-ccdc-4318-9f6f-9e71eaa70798)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 51ef3148-8468-4724-857d-5da6c2145e5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 7049b90d-9a51-42d8-ae70-9a3193caba35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 32197179-bcaa-465a-87b1-b2fd5bdf0bc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 82ba63d1-7742-4ab6-930d-6c6bb47beb5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 09735e9d-a9d2-45e5-a91b-c7f2b5e73397)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #166 828f48f4-f4c5-41cf-ba71-05cced1116f9)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #166 d15e4c49-6315-46d7-a430-1a746474e469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 76b19fbd-f311-48d8-919d-f61d10e4e66c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 e7c4727d-6e5b-49fd-8c97-4ddf798ada2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 47ecbe8a-2e7b-43f8-8ae6-a1190b36dcc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 20098b52-5883-4bf4-8805-7ee18f8023d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 4ff7ef0f-62e0-486d-9c90-21de5df95edf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 ad5b1c48-34b8-4973-85cf-29ebe3609220)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #167 c5d4bf49-1409-42fa-bc2d-d701095cd2c5)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #167 3ae62bea-db12-4ef1-9b1d-4662a361b9bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 0d1073b3-1dec-4bff-a036-7870412da57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 b820d2c8-7fac-46a2-9e6a-7cecfac17aa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 ee548648-f4d0-412f-af6e-8f5c78f2e1ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 51909a56-1cde-4abf-8c5c-2b3c96de5014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 2885934a-39d7-42c8-9edd-b284b401ec13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 02cffda1-0acc-4555-aca0-b5749b521229)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #168 c8e3607c-689a-4ff0-91df-185d6bbb1ea3)");
unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #168 d0989d40-a8fe-4baa-a15a-4d9a151a9ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 1fb1a981-3045-46b9-a589-97a414d08fa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 df66595d-b612-4047-8e22-6d56903bd3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 9a92d35c-eb9a-4a11-91a1-034224ef169c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 7ca9c875-f71e-4663-b717-b0b47a01dfb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 34ca1f1b-7cc2-44d7-8243-5bf10fa9783b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 cce117de-0e1e-4f10-a8a1-93d4975c1d35)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #169 46fefda0-79c7-4159-bc2a-a86b115577e8)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #169 155806b4-8982-4d2a-b6a5-219ee123c568)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 eab74fe6-9b37-4c15-9925-33d9db8a3b0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 4fdac731-eae8-4684-a7ff-6b1232d77ea8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 4967832f-9c19-4d84-8dbe-6902c80e3258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 1c3ff9b8-df9e-4a63-a0fc-6d38cd43d13e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 e2400d76-d8ad-4469-a5dd-8554b2f81202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 56ea270a-912d-4bc0-aee6-756c817a22a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #170 e29fc6a2-4dc3-4eee-ae42-36f8da3f4561)");
unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #170 3487b58b-16c6-43d0-844e-56f89b0beecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 dd80cd83-8869-4ea6-839b-b6a8977138e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 0d833411-c910-4859-9e6b-6ee4fc66e5d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 0110291c-47ec-4938-ad32-313ff2cc10c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 bd3ae505-5aa1-483c-be07-d04049b08fbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 01133160-ba22-43f8-a74c-2fe0e5f45299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 702314e6-909e-4145-a4d5-213952fef9de)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #171 3764b7e8-71c1-4413-aab8-334d4d0316aa)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #171 e9f1e88e-8393-403a-8cb5-7b2db5f5a063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 1673adca-d610-4f8a-96ac-b3b1c0f08c10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 90fd06df-87dc-4067-b5b7-193dbf651d8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 0615bc7a-7ccf-4d26-9eb1-1301623fc093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 accd81dd-921e-4ef4-8416-ce6af5991fcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 9a6511cd-7783-4c24-a6e4-aec4d7df4358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 78fa62b7-7bbc-4d87-a7ad-5e88c50489ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #172 f9705402-18c9-482a-9fc9-db5b81bf1d69)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #172 940b3010-be12-4b6d-a8f9-128d56896e9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 1e36a7b6-c720-4d8f-b559-e05f49729ae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 24cea329-4e04-4aa9-8d7d-bbd7a15c1c30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 7dc055a3-d662-4928-bf79-02e9c5bb3a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 5aab18d5-644b-42a4-bb24-9cb4ec4e02e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 bac41cab-bcad-43d1-8a3b-34e9165163c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 0e8702fa-71b6-4cda-af4c-f4bf8a7e6d02)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #173 17423229-ca33-4d87-810c-1ca57a7ca0c5)");
unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #173 7f6ac126-15fd-4c1b-826c-7e99d7d60ee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 d1c13bcb-e12b-4849-8073-f0a31154bad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 d3a908e9-4423-46d2-be57-ab21b8896e55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 8485bfe1-c1e5-43d3-a398-a64eb65e91f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 8cd93597-69fb-4549-8ff1-596078bd4796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 f2f60d30-3e5a-419b-88f7-b280fc0ccf63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 1b74c83f-bffd-4df2-8e67-beb75e6c567d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #174 970648d2-4dc4-42b8-8d65-8482c5caeb14)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #174 1e4d5584-4461-4dc6-a105-48f7a4b3d896)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 82c4e72f-9e5c-4164-a4e5-1b5570e1381e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 31f0b8e5-bd76-409a-9c00-a8bce2c1dd50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 56af9b7b-799d-4dd1-a12e-dcec285b8619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 55f98b83-2f79-4a42-b1bb-8e3c698a5141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 cdb7e32d-1bc1-4bed-a79c-b61cd941db72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 3f2fe9ad-8e60-49f3-9793-23797fad6124)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #175 fa29c20c-2e70-4075-b0d0-d2aa2ea8e1e2)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #175 6bbfec00-262d-43e3-a3c7-bc5e5fc89cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 3531357c-a3c3-4f05-8c3c-8a46d93886b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 4f8ed219-2ba5-407d-8c5c-eb6eb2b5c96a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 de81a09c-fa51-4680-9c56-7e43772bcdfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 3503ad88-5be4-4edc-8d71-c54ab559ca9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 ca628741-6626-421c-9d9f-4a28c1dc0e31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 662fcced-5cd3-44ca-94ad-5e25fdd9c08a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #176 3b88c955-ed9b-42ac-b75b-c009d69f1895)");
unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #176 6154b4b5-0830-46a1-a8c1-55dcb3832fd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 e848c7c0-79aa-4d24-abce-1c74c07e13ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 e605651a-74ac-4816-beec-a9c896d4a7bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 f665e39a-2159-4aed-b620-eb769bd04249)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 6b4e4e0e-6389-470d-a6c1-96e0f234eae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 de5cf488-a3d2-4f32-b036-0ad156568d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 430b9d1f-31a4-4eca-83e6-8ca40c5e2bb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #177 861649a6-3b2a-45ac-9042-9f84a93ed9b4)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #177 2bb1503c-669c-4df7-82c5-2c4e4cd9745e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 5cfac72b-dda0-41b2-8995-37c48a8bacbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 ebea3998-d3e0-4da5-89e7-75c7bac3cb18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 12ee2422-3d2e-4a72-80a5-91ea8added90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 d02d2f5c-d648-44b2-86a3-1f795aebc9f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 4fb5d0f3-27f3-412d-8237-eb6ea2282ec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 2f4c90a5-ae7e-4112-bdcd-c4481a3ca26e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #178 117cf426-cdaa-4368-a6ca-8fdfecdd6484)");
unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #178 0eace073-2e60-4fad-bd79-a27c2dc37d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 baa6c107-90e0-47fb-a97e-69d79b3015f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 557004e6-dbce-4636-9e46-3f66a011f20e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 29e50fd2-f3f9-4d00-84e3-b497e023954d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 51e37767-9257-4bc8-bcdd-1b2bee8a2d81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 acfac086-7f87-4da2-8c0e-880e469032f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 b287b2e3-a602-4f4a-b5de-41fddf8952e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #179 24ae00b4-8cec-43b5-a5ea-ffaa9dc2b0b5)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #179 98443acf-7577-4132-a4bd-dd64e18396ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 12e1f439-bd53-4bfe-b53d-746b2f6738f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 b48fa5c4-b4d7-429d-aed9-bd3f6598ecb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 f4783e40-5a82-473c-b0ff-5f841d066703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 08cfe000-11e4-4f16-aeec-731b2a1c4bb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 7f08e44b-18e9-4bc4-ad21-edccba184bdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 3d04134b-b495-4883-9ad9-088dd5402d6c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #180 a9dcd12d-0e61-4521-865d-d75c3848d9dc)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #180 f30ee8bc-8add-44b1-833a-f73fd13924db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 6ce2beae-a1e9-419e-b4af-54dad99ed39a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 2787032c-f5a4-47ea-8816-10921f2f5e30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 bae5cc38-13a3-40b5-afff-53172d5d2c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 5e0a9852-94a9-4351-8cdb-a496e0aad4e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 46445275-ea61-4711-b477-8e4190ad5abe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 8a444215-b610-453e-bd42-2dcdbec5bd8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #181 e81c49d3-2cad-44e4-b7dc-51a50eb22542)");
unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #181 bf26d202-55be-4cd2-a58a-b1b249455aea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 6214822e-62d8-4df1-a4e4-9cd579338cb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 d3d8080c-8fd1-4eab-bfe1-3d77748f4297)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 7a32abae-b3f6-43bd-9519-f873a19238d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 1eba3153-71cc-464e-8027-58a66587fa97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 e9197567-285d-49e8-ba98-d859fc9ebadf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 8ed1603c-d0c6-4a4d-ba96-2743ffaea07f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #182 af24e12e-3e06-4771-9eaf-4cf151f88936)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #182 9a556202-599b-4b7b-8675-494248290f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 a5169b03-b90a-4f07-844f-8698c49bb61e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 0eec6f7e-1ce2-4b97-978e-3b9c7812e95b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 551680ea-11db-461c-a0fa-91ac3ab4387a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 3b4d9767-5a48-4834-b29d-1bfaed526271)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 7874372b-e648-4ffc-8554-0c2d9c2fd52a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 4cc6e2cd-bc29-4ee5-8ac4-3195b20ace41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #183 be64f91c-3c95-4957-b156-193d0c372b4c)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #183 c4b2577c-26f2-4eae-a159-1bc7428e08e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 031e4b85-f35a-428d-943d-ea9c62964192)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 6340d1f1-6ff3-4669-a3fd-30f6ce9adbd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 8aa42ed1-d051-41fd-932d-e5709bd476b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 1d613617-b556-4850-aad7-62443204931b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 7dbb16b6-36f8-4bd5-8bfe-4427f3006f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 f2dceaac-cd4f-4f5e-bd5d-a01ae009df46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #184 f7b2c508-3450-4cb0-8dd1-9f5d20779e33)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #184 407b17d0-185e-4b74-8954-c6100cbd6184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 ccace30d-3d07-4afe-beea-1d492d3823dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 6c7a8c7c-a439-4649-8d3f-05a121e728a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 837d0b2d-f117-4a31-83e5-6e818de15d81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 a27ce209-861c-4259-a091-e7503fc3a329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 9b90d781-8674-4d84-a93d-154a706391d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 b714de1e-fef0-443b-906a-928caad92d65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #185 c13cb9b5-d763-4a23-904f-47fbe922e6c4)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #185 c3390787-f7fc-488c-ae94-0e8f42e86ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 ffb1c038-2f6d-43b8-aa3a-b4c96d485768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 d9a38099-4ab2-4263-ad92-f5a28d8dcaf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 b78a09f9-1839-402f-b865-044630e1c3c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 bef462a0-4d26-4028-b854-3e41063ecd61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 2160ece9-7b64-4e34-a61d-756aaff80a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 03084c61-8fcd-4767-9c72-32e4cc7e0bb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #186 6dde4656-b8ba-44bc-b049-7ac0d6d45c65)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #186 20f8f79e-9866-49b8-9620-9921d22d0b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 e0ecfaea-1419-4193-bb1e-a0fb56f87990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 6d3667cc-299c-4764-9001-0e77bde25ed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 f23bf5a1-274a-45d4-9dc1-e8650b312601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 3e305ba3-96f5-4152-aa7c-e86497809f7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 3cd08590-0a72-4615-8e2a-c99ec104892a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 2e0453eb-69d2-4120-916a-69c09ac085d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #187 90f1de4c-d29d-40df-9468-b7fa10158f9f)");
unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #187 72902d72-eff0-428c-b699-faa336b4eb26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 cda7be20-834f-4d8e-9582-9cd1053189e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 e0937014-0498-48ce-8a91-ae3244aca0af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 7deb2c2b-b1f1-42e3-9b0d-7256eb937c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 8c7feb3d-fe97-4ec8-9dce-812661310b9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 f50d8fc6-6a8c-49de-8606-cc14d67ad98d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 9227528e-608e-45e8-bb1b-23386f903a82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #188 b3b92560-4efa-483c-8dff-bbfcf59f2f6b)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #188 8dfba218-d040-45c9-9e4a-19b1eb98ca2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 b0e07d25-3bc2-4125-b168-67c95db95e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 7a28c8d3-b395-49c4-b2dc-6e9d04e81947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 e32f442b-dd98-4472-af41-97c92b95b24d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 3016097d-ece6-4c68-8ade-c4a90b0da7d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 75ef439f-d40a-42b6-9c08-6442bf636bd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 8222e02e-78b5-4e9d-b76f-e3990a45bc52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #189 446e83a9-fc3e-4af7-8cd6-dfec2961eb80)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #189 5c4ddb03-c5de-4c2e-aa10-73144bfa27ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 76f094fe-33db-4299-982e-f81c84df3a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 d9356392-5bb8-4c41-a760-2646ff335ca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 fb286a5f-68de-4c9c-8be9-c676931a1f4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 691ac219-c8c6-4914-adb4-cf52a6316dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 6a5bad4e-6e61-4e05-b35c-343da3c7e2ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 8c42c687-4003-4694-b048-822e201b4b79)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #190 034e21a7-e88d-4482-b697-42314197966c)");
unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #190 bea0acc4-c252-446f-8570-3464568a1a4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 85336f8d-9862-4671-be2f-935fc28b8e7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 b47eab5c-5054-4a2c-adc7-4157187dab00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 8cc856a5-584b-4c4f-99e0-3b7a079b37ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 e6471f39-ed6b-4e1f-8a86-fc679f320bbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 846b49c6-d72c-4f56-8843-f59b26573191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 f1e3e7ae-bd3d-437b-9372-849bd0b16d0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #191 ea5749fc-1472-4bfb-ac6f-5d2775ab8f09)");
unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #191 d8dd59d9-a4a5-48f0-a8bb-a99b251f0b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 9e24bebf-1413-43e9-9680-ab74b557a74f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 0d885702-be26-4524-a4b6-318b00aa93d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 965a60a4-edf0-4c31-9b33-6d5b605a3998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 22d7a3f5-6810-4dab-8bf1-bdca4ebc153d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 74364e88-a0fe-4122-b7ba-a354793b7ef6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 0bfcf8bf-43ac-4a82-a93c-aab9192542ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #192 67d59f81-b9e3-4d52-a24d-586b8fdcbec4)");
unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #192 8565251e-19cd-4c69-b4d8-112167a30e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 e127caaa-0ae6-421e-8b53-f94a565800aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 28290098-fbc5-4e4e-b137-fce0291a230a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 d82956b9-37c3-4d92-94e2-85b59ed521bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 502396ca-3aaf-4598-89b1-a7769b01a034)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 0fbdbcbb-900b-4990-b217-e73f1aa343c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 7c8ab6d6-38a8-4156-b7e1-cbf4a17c2984)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #193 bfb8f120-20ea-4d57-99ff-769f773d432d)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #193 099a1caf-a198-447e-83db-ba733452ef96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 560b9b2b-a944-4c13-92f5-66fddd8c7294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 7069149c-14b1-4d72-8fec-ae5862233059)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 55f2b406-4256-48d0-b47f-61e32ef0d4da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 ec0b6918-132e-4ce7-bd04-fe4a99df3ca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 c05454c6-7e0e-486f-b5e3-cccbab6ff3df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 6599f591-4141-49ee-a6b8-070cb40f88cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #194 58e7c5e4-382d-4f13-8f82-860d97a76982)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #194 09f4f73c-6277-47e3-9abf-f71a666651b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 2e80c429-22c6-488b-8814-0ae918774e67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 a11749a1-b73e-497e-891b-ffa6fc46cc45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 782e4cfb-333a-4b6c-b253-d80271f61351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 56f85fa2-5f26-40ab-b625-ded89172eb9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 2ca53bad-d236-48df-9ee7-6f5bd4b55d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 8f44103c-8352-4101-8906-2248b0a9ea83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #195 16f45e6e-22b2-48ea-9299-059d702f74dd)");
unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #195 532b55bd-5f2e-4685-974f-0100f675dfb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 6a3225d7-4192-409f-b9a0-3f886bb98989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 d6767ad2-5f2b-4853-963e-e2dc815bba85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 895566fe-d7ea-4bf1-b8ef-73fac9f6cba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 284dae97-1401-4fc4-96cb-b70cb1487a62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 091918c1-9a32-406d-96c1-09670911d83d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 9d6b7b4a-4c5f-4bb8-af00-b520de1c4034)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #196 370e4528-4e46-4a49-a9eb-3ab4901287d5)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #196 10032d16-ab24-41bc-92c0-b08b58f5a010)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 ad340767-d42a-4c70-a7a7-3ecfd5787836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 6a6fb833-cd8a-466a-bc9b-90dd92596d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 08a650bd-a968-4832-8c8f-b48d13808535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 6b895773-f2a1-47a1-9331-20488158dff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 fc9b96e4-7a66-4d88-b352-2a4a0e6dedd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 9b8f3791-cfbf-4f79-a85c-830ed10aa36b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #197 25f3e794-77f3-4128-9f27-aaf0892c7a58)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #197 4d5cf2c2-76fa-4adf-9cf9-277415471f17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 e5700e2d-3f2c-4b51-8bf1-9b020e1df35f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 d0d55370-02b2-4d6d-8974-721d9551bfab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 7cedcbc9-1a18-4039-bc70-db8939e1be44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 97528023-062c-4131-ae0f-7482bd6ff74b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 ad4e3e4c-73b0-4990-b3b6-375a3b5729a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 316cc6a1-fa56-409a-af0d-8e741bc8e077)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #198 da8e1e51-5cf6-4578-a460-4cdecc7c7114)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #198 1461d992-268a-4005-8342-0e02e020ad8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 7bd39701-ebc8-42ba-b564-852246b1f2c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 37a112ef-5e3d-45a8-a00b-070e38d7a8cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 fd664398-301b-4ac5-acb2-f391b514d722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 930d4173-1169-4f31-8292-958c6e8e1293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 7dad9155-68c3-4ea8-bc47-a5ba9e0e535e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 2f8ca2e5-10c6-47d4-b69a-9fb5a4370a47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #199 0d6d626a-9ada-4656-bd27-d79d6880127e)");
unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #199 eb8036ae-48ff-4d78-af3d-3935a2309824)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 b6863ed7-9311-4d86-9a91-264074636479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 747ce5fd-75ac-4c38-a9f1-5b31019042d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 836199aa-1677-4eba-822a-4182b762e123)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 91a44e77-d83f-4822-8128-e628d5542a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 3dbf6f1b-ce3f-4063-bb23-53c066cb471a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 a4ce83ce-2a12-496a-98a5-10b120c7cbaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #200 0257555a-6b5b-496a-9d6b-0c8077ec3fe4)");
unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #200 1859bfac-c0ff-418f-a727-5c36ad1c31c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 002514dc-ca8c-4f4c-8466-435fee98f429)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 43aa88d2-71b3-479b-aced-f017a0195a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 ed89a68b-a1b4-46ab-a145-2b64e6ec5458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 29f2d86a-6a9f-4735-b40a-8c432a878a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 07e88d9b-14d8-41d6-9393-4eec173ad146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 679c0b82-1677-4017-9209-c82d5d324eeb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #201 705956aa-4cdb-49b8-835f-4d8f2dc8c947)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #201 d85b9695-1f97-4b0a-9da5-a1940dbd4d09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 230bb8a1-a928-4c85-8a78-b0e7bac5ee96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 bbd7e865-be0e-49a0-bf0e-b717eb7f4e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 8dae1a2b-35f2-4119-973f-417edb1b5a1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 2217c433-e9aa-40bd-a1a8-1ab4b9bebec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 4fa72081-d70e-43a4-b747-3e3a9875bfc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 04e4cd51-4e79-4aee-9fe7-cb9a9180bdc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #202 eb3fac19-14d9-44dc-ac55-eaf1ef6c51f6)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #202 bc12f9b2-0486-4fa7-890a-3e2c4a5c2440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 f7427a0c-048a-453c-bc67-a0651880739e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 b4b563c2-3a27-4e62-b2d9-f24ea4d70bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 30233a58-8409-4870-b914-28abd00c9cdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 07171ce7-c265-43c5-b279-f40fcdcc355a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 1635f374-8780-495c-a64a-fb15ed2551f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 60a360a6-a483-4b85-a1b7-05682738843d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #203 4deb95d5-0b99-46d1-8938-9df7288f03df)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #203 6b2b6c4c-141f-42e4-8c85-799a35ad2557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 c065fe25-855b-4850-ba88-69604159ead7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 d3acb82e-5a2c-4322-878b-62337cb20258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 bb8d0b83-720d-4176-9cc3-2269cf0f4bc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 1edb7857-ce0b-4b37-ae47-52d3930c8f23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 dbd9a2ba-0979-42d6-a1d4-60a9d60e8e1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 85ccaa2f-12ce-4a03-97eb-46bfb21595f0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #204 1991162d-5b53-44e7-9d59-8dad86334383)");
unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #204 8e878d90-c232-4ef4-8620-f61969a12fbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 00656b13-33ea-49d5-a897-536868a2b2e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 a4d30826-2a73-4923-9d20-db39e1db24a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 b12404de-bf22-441b-b529-ee1824aec3af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 a5debf49-7a36-412f-ade5-569c57b465ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 55fbf759-dd67-4edd-864d-020899d91889)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 17737425-997d-4136-9e02-6ed5fc441a19)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #205 20c19e75-13c5-41c9-b881-041d8159cd5a)");
unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #205 1d5f4c87-4917-4900-8a7f-5f4832572643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 76f16fb4-21d9-4a87-90da-f2404614d068)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 ad9c8365-e3a2-43e0-bbb5-149664e09ad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 c5bcc29b-397c-4cf1-9ff8-a05c9fae8d6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 2a38454b-6700-4602-9f39-6a692cedb1c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 488e1644-91ee-4de3-8af4-2348667ca5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 b69f075c-0111-4378-a377-e8327abdef70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #206 37a3610c-b3f4-4115-a538-6d35f58471ac)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #206 8267b144-b9d9-4125-81fe-47db2ccdb245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 07c99f53-8e97-465f-9a87-16853ad64f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 a3aa554b-073b-40bd-b90a-37f7d8650f3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 d428e79a-01f5-4296-99cd-65e61d777fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 f658190c-7d5e-4250-8753-0d1c57b26808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 9fa47eae-da36-4fe2-87f5-0e5688b7cdad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 cbcd79d7-6069-4811-90d2-acbc56a11eec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #207 3279577c-af33-4294-b8d2-495cf425ab4d)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #207 b64e0ff9-f291-4882-922e-e611827b375a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 2c32e222-59a1-48e6-97c6-e87f2448c07d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 81478d28-5ebc-40c2-9815-6468c519416d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 179e97af-71f2-4377-8b17-b10b8ab9fbd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 d9846727-004a-405f-b301-5407a5f0b724)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 f5d787b2-585f-42fd-b220-95d59df436b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 3a13d1fb-e971-4dd6-ae66-046f4e5a8788)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #208 f5a92737-6ba0-4a31-9059-e81a0b009428)");
unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #208 15298bf3-9945-4b4e-8fca-f60fe6498746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 32763cc0-d277-4f03-9b7a-484a6e2e6e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 c2a735cf-45ef-4663-b52f-71b784522443)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 54387761-5c86-419c-bef9-458588eb94ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 6b3e9bf2-ded2-4d7e-ac4f-dfb1991d5d0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 e6a82fde-1b62-44b0-bd7d-09d49b38e0d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 971f655b-c326-4a4b-aa65-10b7c7d248b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #209 ba8fd4ee-8d52-4d9f-a460-7cbad873e713)");
unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #209 0551390f-59a7-48c0-a2e4-cad6dd9f0e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 a285545e-2184-497d-ae9d-d4050075e273)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 a0b6b852-5b31-4a7c-90a5-393ace712a45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 387d5ef5-8a13-4500-ad50-ec79aa71b4ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 eeb7060f-fd24-49b5-a849-8f08bf5981ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 63991f4d-98d6-4fb3-be34-70c3eb8cae6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 404691c2-9009-4393-8f0d-191bbfbe309e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #210 88b948f5-bfd2-4b7f-8fca-bf285e0b3673)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #210 dce57ca0-75e1-4157-a53e-fe9c406d5cd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 171ae7b0-1f14-48fa-9dd0-50fa58474455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 d1650fdc-b839-4660-b8a5-25ed326501a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 8287d58c-fe23-4f7a-ade3-6994b27d5ecd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 fcbf6919-c26c-4cac-ac0b-d0611694ece9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 05c29b5d-8930-4221-88a3-7d30d1fa7f54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 70030733-30d8-4a46-9bdb-40fed70027ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #211 d1068b1f-0ac3-4359-96b8-dba83a7efbca)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #211 1c7b4afb-ac9f-41c9-824a-28247f99c733)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 6f8ac262-9630-4b01-8bae-b3e6f2d849fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 26851142-4f71-46c2-9932-5557281b4d1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 cdd9774b-cd22-4fad-b808-7904a77e61de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 07fbbb56-c920-4674-b499-7d6289253198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 2223aab6-3fe5-4000-b41d-02fc460e5f79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 b8b45890-718e-4a5b-a653-a5860c8e8c53)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #212 5b5f563b-8025-4725-88ba-f22b908e1429)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #212 12b79c04-a06b-4477-a3ef-02d3afe37c2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 f0b8c7a0-6a60-464d-ad29-34b61ec3c0ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 b6b3b356-b0b3-4454-88b4-66cfd215aabe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 6d8f76c1-fe3e-4e4e-a65f-7349bbc336d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 e95993e8-2f1d-4fb4-92eb-c3efa3edb523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 b7fb762e-0f6d-4036-94ab-fd942be6d8f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 088bee29-6a00-4843-b108-dbc0445d54b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #213 d3b64527-0fc0-4e75-a8cf-21cec478bfb0)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #213 a1edad76-12ca-4357-a2ff-dd8f80cdb9de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 b61ffb82-3cc4-433f-8a7c-cd3fbf0533f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 5db8a94c-0a31-42f4-8fa0-84c522489a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 83d69827-d055-4506-85e3-21bf38490a87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 e406d4af-185d-4630-a2b8-da827fb7f2e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 26c64e70-a0a4-453b-98fd-be7f9544cace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 aeeb5020-ddcb-46c4-8aff-d4123810f429)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #214 78714f0c-41f4-42d8-a0db-56584b2cf495)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #214 9fabd0b7-d28e-4da9-b281-5452b7647af4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 d9393152-f2bf-47a9-b574-4c1ba02b1ae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 d197cb1b-3d48-4ac5-abed-29788f518863)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 f7a44621-2568-43ca-b84c-73e7d01f5cbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 147b588a-4152-45bc-b208-db5a03ca6716)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 84f3376f-4416-4aa4-941e-4a2f00a00b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 df79db09-a05f-4d78-b675-71a7297e9348)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #215 55c6a93d-8b81-4107-8fc7-6e140bd83e44)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #215 d68e93c2-0773-411e-9bcd-5d31791cf740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 7c2dca13-3237-412b-930e-203338b6c714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 866d35d3-8136-4a95-a786-3cccee89d874)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 abad3dfa-2e9f-4316-a3fe-b6ef25a9c01c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 3ff86e42-f4d9-4edf-94a8-975c17f54d35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 ab7b9836-3369-418c-96fa-6f90efb08132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 05d851f3-0fd5-4f5d-9d37-435cbecd41ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #216 7baff3a7-079b-48a6-945f-958813a49072)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #216 3ab63602-6e2a-4f09-8c63-b603bd479f8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 c865a522-ad5f-465a-b749-b2fd5db46de4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 1efcd060-b355-4d31-b6fd-af402ffcecc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 bb303a56-cdca-4be9-8508-21e618c0039c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 53b4b86e-fc0d-4f4f-b269-30f3b93e9a7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 1933291c-d721-4e7a-848b-ae50a5ae3e93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 04893290-144e-42cf-8f97-50c752a0a0d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #217 87640896-5d48-4731-9e5b-91a88e9ad024)");
unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #217 88447603-87ee-4da7-8d92-4f69cf844f63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 72d3b13c-f697-4204-96a7-82aea69e7c3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 9c699b45-78b1-4688-8a6e-0d37bc12ea84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 d4c423a9-befa-4197-a2f3-fd29555674be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 e0953c56-ffd0-497f-b6a6-8ff5135eca7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 e933af4f-1f81-4513-9897-cb38b60aa785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 a63be7fd-ef84-4597-8888-31c5b40b0b1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #218 1ede7cad-1df4-43ca-80a3-8f0392bd5a3c)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #218 b4c951dd-2e39-4456-b566-36cdb95954d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 7b0531d7-cb05-4efc-815c-a7bb6dc58bf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 57273c8d-eb08-4dd6-934d-dc2595a53d3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 e57fb10b-b583-418a-8ed5-fb8b285fe299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 40c0ae78-a040-4a00-9e65-dc00632b630e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 90ecec76-8f96-4f74-9876-9c8a38b33701)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 4680ce56-6892-46aa-b012-051fd7a4d7f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #219 cda89d75-09e6-4b23-89cb-2f09170639f1)");
unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #219 68ab8da8-aaaa-49b0-9014-a38d6a03d8fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 a4264368-c31d-46a2-ac6a-3a9220c280d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 23d95615-8815-4429-882f-873713d131c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 96779e95-af32-4c39-ad74-7240c12487b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 b6158e37-b4d0-4e73-b8ac-6601817237ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 2278736f-dc2a-4e9f-936d-237dd1efd18c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 b3b2952e-ec39-4a28-b7f1-bacae97377b0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #220 977630d9-0bd5-4e29-8b62-74d1c040624a)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #220 1a73384f-d23d-425e-8a06-f10d99efe79d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 ac058863-a12d-4e4a-b4fb-ba6958d86053)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 87f4b3ad-88fa-4c63-b5d6-b9a13abb8a9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 4607ac32-4303-4d7a-bfca-c65d10b8ea95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 ac5586c7-9288-40cb-9af3-4256102477b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 4332a2ac-15af-4c75-adc1-ef6c0e986abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 98662f51-7eca-4491-aa79-c82fa351ac2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #221 33a0868e-a710-4412-bf84-bc8646b9ae51)");
unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #221 87e16d24-cc6d-49bd-ba5a-a97bdc5624ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 f318f721-b592-4cbd-9fea-344b077d54a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 dd99fc34-6602-42ad-9cdb-00fc50df3c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 9e985217-45e5-4425-85ca-30db69cefed8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 07c25beb-5e00-4e1f-9598-2447f0efb97c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 019b24ae-6e0b-4855-8850-99979320374b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 65b8334d-cd9f-42f9-8659-afa728b532e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #222 59f1b0c9-3fd5-4ecc-8616-3f54891e6be5)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #222 dd8b80ee-974a-4260-ac7d-75d2fd77a92b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 29e763eb-b017-43cf-a222-01187f3a4b31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 c190dc14-09b1-4da8-a151-f2aa7bff9b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 9236b533-41e6-41a2-895d-abd6174c04de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 595f5f2a-c4b8-4555-98ee-3dbf7a017ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 b3e80002-1c01-4f0b-bd5c-2ca82af2d063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 b523240c-d2a2-4732-8e2b-e43c46e11adb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #223 b87b579d-371b-4e82-8c89-65769d47e798)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #223 82385cce-62fa-4a13-8577-6433b8a8e76f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 21d85ad3-9270-4d33-ae32-0a8053742ade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 3b03c52b-3204-4bfe-aa21-e8839533789b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 6f74e2bb-0852-4ffc-925a-64bce41f70dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 087842ad-b57b-41cb-88b2-069ec90f09dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 8db9939b-256d-430f-ae32-7b143a14a765)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 ff4d3e31-e655-4748-a3a1-80ccc7660b1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #224 f67f2524-78e1-42ec-af41-1450b8c13aa8)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #224 feae9ba7-9cf3-4707-b58c-bceb186a00b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 15ada25c-b3f5-4952-a736-38738aace601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 658b1fa8-2733-4042-94af-71e70bb10cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 a8760ed6-826b-4338-b3e1-5d4d7cfb3184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 1d9ae097-7f68-4c06-9d4b-9a84bf671e97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 a8f099ac-a0cb-4508-8066-ae9952560b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 8dd6319b-0c30-43da-857c-9bb727d7fb9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #225 8a8493db-5aee-4af5-b0c9-cce4323923d1)");
unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #225 900c5acf-69d6-48cf-a07f-b799c3778165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 b705989a-548b-48ea-bd8f-5fa52671f678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 ee1935f0-c744-456e-8ad6-0a77b0e3f4d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 699f29aa-eaff-4483-a3bc-b19fa8985d95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 d4c1d515-dc45-4d1b-baf4-48922b3c2dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 10311655-d769-46ea-8e9e-90c0da7db431)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 707f3b7f-3fe3-405d-9f8d-862d86c509fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #226 3de6bc23-aa57-4318-afc5-7ea5b9f5a909)");
unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #226 2d58ec9b-877b-4d12-bd3d-d438c4b60027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 e2e91264-9b22-42d6-a654-0c3cebf7fa5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 415fa8e2-c89c-4435-b950-9cac8af621ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 5bc4f1cf-f434-4771-9a94-b2fb99fb6e8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 aaab4373-d17e-4e86-bd97-8987fe260352)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 a76ff2fc-6ace-4b3e-a9de-8553ffe34247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 03044baa-2274-4fed-9b26-bc3107bdb266)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #227 5044362d-32c4-4c85-9575-66aa2b5f4c8e)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #227 1d0d338e-d206-4212-a26d-4e4b7d85569a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 5a4f5f8d-c27b-4718-bb2d-95e444fe9d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 5527e8fd-133b-4fb0-ab60-8da6674e4a5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 4ca34a8f-89dd-4a47-be25-786a1bc79087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 5dd29ea2-3327-41b3-a501-a8ecc76ae83a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 75f08ab6-a6f5-468d-8210-c1345c8bfe54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 48a2b453-01e0-4b01-8f95-414dfcb32def)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #228 78cd3b23-6b21-472d-884e-bdbf20fe4ca0)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #228 2f9048f7-55b1-4433-8364-b8ade1a8b60d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 cf0f1f18-9a60-49ee-84bf-e785a1f419ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 b80bf49f-ccca-4009-b43e-b0625094d889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 119829bf-4055-45eb-9c4a-35910ae34fe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 781c2ad4-6dfa-4cd4-a899-78cf4adbf7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 ac42703d-851a-4060-a899-3a0a5f8c3829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 08563066-6de3-4d6e-8ddb-a34cd512d451)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #229 9e4ed0ed-4987-4d2a-9cc6-c729fa43e9e8)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #229 d50b4c27-5bed-4254-ba23-c5fae3777aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 77f0abb8-f959-4323-910a-4b1cf4d90cc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 315754b4-54e0-44b7-b238-8a3197514063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 5c68e47e-abd8-4b13-bcc1-c69bae595bcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 9e0117bd-78aa-4d8a-9d08-e4d1d0b5c299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 2a08c3fd-885c-4242-9a18-039c5bacaac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 d2f51221-da2d-49ba-bf6e-47cca14045ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #230 f8ec9870-cf99-4106-bab9-e11459c18a01)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #230 b634e1c5-c7c6-46b5-b322-aafaced977b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 06b8dbe6-64cd-4d77-b59c-ca149860631b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 9eeecda3-61b5-46e8-b01b-7b3eb4e1d3ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 ec707fa2-8035-402b-ac7a-c70683c80f3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 6f271f1c-affc-4a2e-a4fe-596e9514ea51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 cdd961f9-1eae-45f2-9ec5-9a94561706d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 92b9bac3-7cf2-4336-997c-4e7fc4d09d59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #231 be60f49f-3718-486f-9a84-30292d57c48c)");
unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #231 f45fdb80-35ed-40cf-86f4-315bc48b1132)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 e54ff05d-3b54-42b5-8ef6-c1d1004e0448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 c6a753b4-ec7e-4d80-931c-b3b57975d2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 55183890-ac02-4a2e-8fcc-16a1dd4e686f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 3f3956b7-3f5f-4122-a2b7-55c5bba9284f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 bd4a88ac-69c1-40d2-92e1-e64ce71329d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 8b16901c-fea8-4cc2-8615-8381f67f5545)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #232 311f04a3-eff4-4b59-911a-e2040ad86312)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #232 bf9e9819-9839-4111-9520-d53332db6081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 65076379-d6b7-40fe-8228-b420bef9cbf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 e7547687-a83e-476b-9cf1-0ca965f41ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 9a1849da-b075-4b86-b8d6-619c3f1b3b22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 58e76582-e345-4224-99eb-128d6c08b6c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 088e4975-9bfc-43ff-9388-a2577f578cb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 2dca9a7b-7d65-4712-9114-83876a30591e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #233 93da24f9-e3e1-400c-80df-91ac81b78367)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #233 8a2a6dca-19d3-476f-a568-c54cef9498fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 3f5a9847-74a6-48cf-92af-2522cf5e4ad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 ce1242cf-714f-4d8c-a825-fc0636278186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 14aed463-2698-4918-bdc9-47dafb3753f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 ae3ccae4-b297-4120-9515-19ca05f922d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 eb64bcc0-7b58-4c1c-8610-d0d633c59b61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 83a018a9-05b9-4176-abb1-d70880fa96f4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #234 53174557-05a6-411f-87a2-99d6b63e9725)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #234 b98783ec-2861-49de-8025-e49735544065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 b10d3136-404c-4198-a54c-8751ccfb811b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 584fd9f3-8866-452d-b3ca-ac86caecd900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 c61a550f-901a-4133-850d-0b080b4162ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 25d54b47-b5be-4af3-afcc-943750c100f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 c2626caf-097a-4be5-8a26-e52633e46f6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 6184cea6-2e1d-4bfd-aed5-ba821a039c06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #235 c71492cd-748d-4943-b0d8-75939aa70833)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #235 3c5a8090-9bbd-41fb-9fd3-4c7fe919e4ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 a7dc7e9a-0e52-47c1-8d74-5f970b304e10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 f7ccbe9a-f403-441b-92ef-74bf41dceddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 30d1912b-4fbe-4c8d-9d4a-950985ca28df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 4c663118-fba2-4833-8c65-2a95b3b2a90a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 458d02d5-caa3-450a-8ec4-9bcb2ba20efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 7b6e1bc4-5c7f-4490-a4b3-c735f8744306)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #236 80fcecaf-1166-443d-b10f-b352ccdaadb7)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #236 1172c419-f0ae-45ca-b282-20ab8739ac5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 9e223ad8-d533-4e8e-9af8-bff93b8e26d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 31ac0754-62de-40cf-8ac9-5d6587bcb401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 96684cab-b708-465a-963c-f0f00fab0fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 09192852-3b97-468b-b755-82f1b365b10d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 a728d002-319e-4b6f-9871-43284b4e4dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 abbc9432-1ca3-4f65-b98d-a3b9ffe0e390)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #237 621deff6-f864-4b8c-9c7b-968d92f00d69)");
unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #237 fd8970a4-3c9d-43f1-b9ba-a994c38881e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 8fc606eb-e477-45fb-b2ba-b7eabaffaccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 55d2c5de-2097-4698-b31c-890c8535afc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 dd233f0a-d408-41ab-8002-3626755786b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 d25c82d6-ec4b-4e98-a79d-94359e55bb72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 9f017e8f-96aa-41c2-b297-7b773418ce08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 40db0757-9452-44e3-a327-83f932252343)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h23;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #238 6fbba215-d557-4acb-b336-d833bc9c3bef)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #238 4ea943c7-81c0-4d30-b13c-31a859b7ea8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 8eb79896-64c7-497b-b7b0-a605326af194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 f0f6dbfd-6665-4910-bb43-e89ca7a5fa1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 77664494-f943-42c4-acf4-ac8d39c68a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 7b99538d-8342-426f-bb3e-a2c2cb341eb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 2e05a3a3-0df0-4817-ae43-c46ecc341e2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 baf7fb88-743a-4501-b0a9-eebfc693c223)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #239 87dd88d2-5b1b-4161-a827-e5f191470a34)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #239 95906a4c-8eab-401c-8b05-9787a969fa7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 394292f8-65b0-4590-8058-370175661c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 f172db79-6fb8-4642-965a-54363e722c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 1417a213-ae75-4acc-9a32-312ffcf279fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 b44ad1e4-6eb7-42c0-914f-92bddcb862bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 8d2c8350-cda8-462f-8ed6-a4573cce859f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 16ba3c6c-c0ea-4786-9b65-46852877e06e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #240 c7678ef3-fa99-4658-97f1-3be4a84b0f43)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #240 6701ac7f-b9de-41a7-bcd6-d271886bb31f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 d593884e-a6f8-4acd-ac84-44a412aa69ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 34dddb9a-a949-48e3-b245-aa9bd0a11bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 661f9262-9628-4624-b25a-6ca5892b5d4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 de50fd5e-2c75-4a58-906c-effb66f58436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 f37d6dd6-1562-4140-81e1-11149c4c940b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 b1b80dc9-94fb-46c5-b9a2-970caaf4ff52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #241 c4e4960f-a6dd-43c5-877d-cc933e3d70c6)");
unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #241 fbf1bbe2-661b-4d78-8edc-31d62f14f6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 e51f7c18-9e4c-47c6-ab04-0865d7fa29b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 1d899355-ba6b-458c-9440-96eb5ac8877f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 c92bc0da-ef0f-42df-a782-c96664f99c7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 08193a8e-873a-4d24-99be-832eb5e62d70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 7174b205-0f8d-4881-8d8a-40a4d8df5184)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 d9ae6b63-84e6-432d-ae36-b8be9c5e0ff0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #242 1d4566b7-7ee4-45f2-836f-ac1adf080c97)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #242 15696d29-5192-41b8-8faf-c2b4b629c96e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 b1dfdc5c-57e6-4b6b-bdf4-52e0538ce3c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 37438f3b-c99b-4677-a1c2-744ac62b1b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 3af692dc-c6f3-498e-a5f4-ae44ff7f8f0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 f2e29ca1-1372-46a5-b4de-81dc3ca8a168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 4534e7c3-96b8-400b-8296-97634a338a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 051f0aba-fdf2-4e89-819d-27e2ea6b738e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #243 6fdc23f6-d18b-4b59-b9cf-2b4827d4f923)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #243 24d9bfdf-8b45-42b4-8208-d1ffe56667f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 431e22d1-8f7e-48c9-854d-850b1c8ad21a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 410abedd-c3a5-483e-bd36-c6d070bea3cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 67d565a5-5346-41c4-b51e-0cd4216e1f1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 1c1da28a-4918-47d2-9f0d-3c88a113f779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 adcbbc4c-b08d-4a52-9363-93c613e9286c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 67b29778-ad98-4805-8cc0-8ebc6258668f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #244 e69c5b65-8720-432e-a756-6150bef5fcfc)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #244 e0ede7b5-6c2b-4ead-8481-17508cb66eb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 1b18453b-2c33-4cb8-9249-6f976be58e5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 c14f8ba9-7fd2-4487-a629-53c3c006ca07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 6d87b00f-fa61-4853-a98e-e714daf470a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 88afe355-529b-4a34-a4d8-ce971aa968f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 ff55b4ae-8524-44c9-8e06-ffd17f26a378)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 e36369b0-0ac0-41fc-be6d-7a9e7d66feb5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #245 411b677d-87cd-498b-8e43-d6a5f71e956b)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #245 c2c7151c-d31c-4ad9-a05b-256005b3956e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 bf7bf362-8e21-44e3-adb9-b690490987c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 b94c854a-56fc-475b-ac43-e8e63f65cace)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 3c9ea66f-45f5-4ca7-a4dc-5d1e8836a9fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 f5b586b5-16d6-454a-8e54-3b83fec5014b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 4c622a14-366c-42a2-a930-03bb80247b1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 dbf9ebac-2511-4d44-bcdc-f308a153d25e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #246 741ffe47-abd7-4245-83f9-dd0c756217b1)");
unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #246 e59c42ff-3b95-4dbe-8df0-f7a572a0c7a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 cd8cc31e-ec2b-4c82-97b4-6cf233eb7777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 2e7b659b-084d-4e0c-88c8-46af7dc92b35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 6168337b-a7cc-49d9-a408-e966cb181681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 7ff80d7b-f8ff-462b-b8d7-8f9e4354ade1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 a71d9423-fac4-4b2c-828e-f12e7db136f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 3081bb54-942e-49cb-9029-195b6900adbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #247 5825450a-bd59-42ba-93a0-ba760583c021)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #247 21a2bc98-1a4a-421f-887e-fa2c33510133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 281cf3cf-7d56-4ab0-b9bb-7f0dd05720d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 7a7aa028-b78c-4330-9a4e-76b400ca5417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 58df78ab-f10d-4b9f-8c97-59e2630060ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 76b4db7a-a657-40f0-aa77-aa5849b4a2cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 b6138674-9324-42e1-a509-85cf30f469eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 c1df9773-3b81-423d-8675-815f58883371)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #248 49e5bc65-6bcb-4560-a34f-c97c48a95622)");
unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #248 a1bb7318-ba9f-4150-b44a-2f163a5e8f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 596bceda-1df7-47ad-ac78-266d6e6b3d61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 5c49f53d-f4a4-4cb9-a7b2-bdd8ff3bef2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 3ac6dd48-9b93-4f82-be90-5dedef0c3209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 bb7d3e35-d782-41f7-9ed0-16c2cb92abf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 2d8d95bf-b786-4735-992b-ea6a52cfe055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 41015764-c74f-4cc0-8d1b-0911771995a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #249 39d96bd8-64a5-4338-a43a-a3ad42351fdf)");
unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #249 e1c83bbd-87b5-4e25-99e1-dbdfc2284463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 8d6a626a-ccfb-45e0-9f16-e71a91cd1f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 b39f33d0-201e-4873-8b72-7e7a65aa55cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 3ee395bb-c0fb-47b8-856a-c11b3dafe8d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 b3959d87-487a-4c58-a662-f3fe6e6b5c0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 61e514df-5e5d-44e4-8d32-b5271eadc133)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 d9845da1-ba93-4acd-89c1-08c39bd49237)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #250 76362063-3b39-4506-bb2d-cee0595902ca)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #250 61d7de79-fe61-4f22-bd5e-4d3a6d5075f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 1ec7dc33-5cd4-4995-a4f4-af70e32c5938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 a7f4868d-99a5-414a-b3c3-c889b080b95d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 bc0699de-bba3-48d6-9bf8-10552bb6f073)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 74dadd04-c4db-47c2-8eb3-1d9a1619ee26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 da4a3620-ddd4-4a97-82f8-e4ed7f070f9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 8edb6238-0293-46d7-a60b-ceb86beb3d58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #251 90d24102-b70a-4a78-8880-17c5de9bea86)");
unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #251 e26c21b2-2730-4d6f-98bc-875511cad6b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 17a5a58a-0c5c-46e4-8730-a1f64e69db97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 4335317d-599e-4c31-8a7f-b3fbefd29f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 5b2590f5-ab19-4682-af96-5e7f07859b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 5b05eb73-e8fd-4cd3-a78b-29693befb7bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 c1e82686-9f24-420d-a48c-18e133fe718f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 afc35d32-bf59-4e38-91a8-c672acba2656)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #252 9d2e0caf-3f40-4aba-9223-cb1ab7e7fa5e)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #252 1c2d764b-3a20-480d-abf2-661a21d09cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 33ba251b-4490-488b-aab5-2ac22b652fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 5f423495-6e30-4d73-bc5c-e2fdad2ec203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 9eb7ad39-e6fe-4334-81f1-1919ff192e62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 7d2eaa74-5685-4383-ba07-a34969a42381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 898b7f8b-39bf-409b-b28b-21d608c7cc26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 66231f69-a5f6-4ba9-b1c4-4bd0414f6dd9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #253 3cb0b865-6f4a-441d-a3ca-eb0084efe3f6)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #253 2f3df323-acfa-400c-8a96-72992d26bf13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 13401a46-d4e1-46f9-bd54-5c8633fc3a18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 3f0f3f20-7f3f-4c88-987f-05a7ee326323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 d0323034-bd5c-41e6-b744-00b06cab04a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 923b43fd-eb10-4f36-afb7-71181606be8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 fa12c5f2-0c65-4b15-8b71-279fade46bfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 b923ede0-58e0-47fe-b5e6-942c7063e355)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #254 2a3bafc9-bd97-48f8-ac93-b96aa6fb9116)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #254 049c0780-b0cf-4560-a6b0-9debffb9adf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 451ffb12-e157-434a-89cf-c7b101735b01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 efcfbb7f-63f3-4f12-9512-7641216c1a00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 713da6a1-a1a7-4013-a0f5-e3c4b358bcd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 10dbfe2a-be7d-4d2f-8caf-9f45fa821de5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 e458f0c4-7039-4027-b86a-4daa103cc7d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 baceb683-e1d4-4f5a-9348-8b4c6f614b59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #255 cda20ba4-d774-466e-8c05-abfd9dc8ee72)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #255 572f1cf1-ed3c-4c4e-aa85-463f4646d6d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 de48d6a6-2741-4efe-8b8f-9f08e13a72ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 268c4d9b-8f48-45ad-b6d1-f8235454f459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 613c779b-46d1-4930-bbdf-66feab8abe7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 f261124b-eea7-4b24-9ff5-6dcd7adc3b06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 b810ce91-8a61-4af4-8107-52b75d4580d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 21c0e122-f44f-4080-9db7-f505392ee05b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #256 8c537cb4-70bc-4674-be7e-71ecdae6f089)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #256 6e0e3985-4ee4-494d-96ce-128b23ad8cd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 1edac2bc-148f-4b85-a667-9aeca5f2dea5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 673f01d6-6238-44e5-8cec-3a0727f70cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 adc683c7-fca0-44b3-b041-5af196c9ff33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 cff8ad8d-b85c-4eb3-8b0c-1815488ee846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 75e38fd3-8ad5-48d7-ac5f-2b7b37e3509e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 31846355-ca09-4a13-8ab8-80394ea86c3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #257 f4d67fd9-c3db-469b-865c-53caf0395036)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #257 ff71f509-a197-4632-8884-73b558aebbcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 7c7ba4d4-47fb-4916-84a7-2d5243d7df59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 9aa36480-07a0-4055-adad-a2e5ea9b1642)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 7fbe4c87-5a26-46f5-980e-744c924eb073)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 36816065-ba56-462a-bd7d-54fd5024bdfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 fac47ba5-372f-4d19-9e30-30fbf1a47e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 6bf934c2-e329-4233-9bf4-47fc990d2fbe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq8(8'hE3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #258 c5365945-4dfe-4686-b773-a4aec3420fa7)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #258 465897bd-2ad9-4b90-a4a8-607366e09e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 5e49434a-4529-4cf7-a460-2321368d172a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 653ca99e-54bf-47c4-a5fb-f5fabd21e3bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 4d88ace1-c034-4902-ab36-b4c6634f6e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 d2bef797-465b-45cf-90b5-99bf1979d4c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 2c1aea8c-811b-4445-88b0-9e5a582cc892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 ded36e27-1d22-4d31-9f57-61a044f4a5a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #259 b12ff2f0-efa9-4811-bf70-071bfed857f3)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #259 3a68a9bd-cfa6-4421-86cb-c35b4a929718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 c6ecea43-2093-4fc6-9dc2-5d94c7cc5819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 c9567ecf-55f1-402b-9d05-f5d2200b2abc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 64354b4c-504d-4707-a518-f4cf915da808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 c5a197c5-c2f9-456a-a2b2-499e46aa2ae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 598a9440-f71e-4085-ab86-6c14f3a7cb91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 03880ca6-ddd8-4722-9b88-fa1a73e8ba01)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #260 7ff00e2b-f5e8-4c34-94ed-48e57c386d0b)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #260 1cdf6b50-a616-4801-b98d-9acbe93c8305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 c1950065-987e-4624-8446-f76b9b545eb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 3821b065-4101-4525-b384-9be64f946736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 d8c88806-fcd8-4304-9807-63587a833522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 9791784d-2119-43e4-bcf7-25cc122c9f01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 f0865746-fcde-4e93-850e-3843e32a4482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 ef74a29e-6762-4571-97f4-911c5e7dc523)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #261 d17b9746-aef2-4e56-a673-755f02c8295d)");
unit.assert_eq8(8'hFF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #261 bc233c1e-9ced-46c4-8d9f-b00493406a70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 75164ad9-7bb9-4759-8ccd-9a86a517af86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 95e72fae-5a10-4ae2-b9cc-df88cf376145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 d7a1e62d-00fc-4035-8a67-a42f861b0f09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 c705a085-ab62-4848-9b05-27bf514598e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 c9fa5d81-bbfa-442c-825d-061014ae1114)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 994bdf33-c058-4288-a6cd-12dd6cc6fa6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #262 cf718d4d-1061-41f0-8b67-5a5c49285301)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #262 b8645ceb-5c16-4663-8557-fce14b42b5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 e19ad2c5-ec7f-4407-9114-8fdb7df763c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 2e3b9083-c12b-45ca-9fd3-ca925aa5177e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 312ca62a-bcac-45c9-bdef-58c106fe0491)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 717a37a6-4545-471d-92b7-a5b6b487a48c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 6d9d9b04-1490-4775-88f6-4fdf71a2eba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 e124ad71-8c62-4cbb-a47b-dbf02c72a99d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #263 412d7436-84bd-4830-9889-931cdba2ca08)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #263 35be4e56-fe12-4d97-a2e0-f4f801872cdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 04d78b84-e1b3-47fb-926f-1a8ecf915e82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 a29d3061-db5c-4785-803c-7c3fad109c99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 16edd178-ec41-4a6d-9e26-50afc19022fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 c5f4867e-7937-47bf-b857-30c09568d570)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 6288907c-6742-4dd2-9b33-bc083260caeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 406ac3ea-974f-43cf-87bf-b954c065fbe1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #264 c9719eaa-311d-41ed-908e-5c09b4f75ca6)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #264 631c7aa2-1f83-48fd-939a-b0bcfbbf7b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 db8a4fd7-3562-4a5b-95c1-76c064b3888a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 efc17ba3-9bcf-434b-98cd-69b6f64f189e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 b90253a0-2d53-409e-a799-cc9b7578a3de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 adb679ec-2bd4-4c24-887e-4b76111a8069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 8c1af8a0-4e3e-4e98-aa59-bc795290f528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 7143fb76-84f7-46a1-99fa-4a1b5c2ed5c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #265 9d98ead3-7088-4905-9690-0aa4edfec019)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #265 dbd2adf9-c075-47f5-9edf-a30c11b4c37f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 3b427c45-0131-48c2-ae83-08ea62ce581b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 e1b26694-b9fa-4e8c-ab91-3a812b840b34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 70965c44-100a-4e77-99b1-33d69ee670f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 675091e0-80d2-4ea6-a1eb-03192afe90ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 e5e051db-3b62-4a51-9a15-9ce3e055ee1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 df6f16e3-2512-40ed-ac56-85c85069296e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #266 cabbf34b-ecd1-4d7b-9944-5540603299f0)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #266 6138e0ef-8903-4af4-9306-12d8b39e5d01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 2ba6cf9a-bd2a-40d3-b1bf-c2a88d643527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 18b55314-f5b3-4388-a0a8-e69d2c057c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 08d3572f-ad28-42a4-b302-f137103516bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 30d28779-6e52-41aa-bdbe-075461acd287)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 572144e1-be90-40cc-b094-948d4ef0bca5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 b300d28c-f93c-4ec2-86dd-c4bf3d97cb83)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #267 ca0fb584-dbcf-4fce-af79-920594215430)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #267 78cdf872-83af-452d-8107-5dca7cba735d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 601e5d2c-3c39-4443-ba5e-ce35eff094d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 7e870e63-b800-482a-a80d-72568923f5e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 360727b3-3616-459c-87f6-070c0975eb2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 2ee8365d-16eb-422e-b7ed-524025c585bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 718d7b6c-dc37-427d-b6aa-37d0abcf2a2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 888cf8a0-b9ba-46ec-89ac-bd5cb626490b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #268 c0cf9641-0180-400c-8c8d-de2eb032c77c)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #268 aac9fd17-58d0-461d-9586-793430c2b786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 83dc62ee-5d62-4fbd-8fc9-3905bdb6b3b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 5e87e5e4-6f07-40da-9b24-f994df2cae61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 49c1109f-5495-48c1-b6ad-e4601049338f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 739d8c90-5dd8-44ce-8a89-a381f39ab2c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 dc68ea80-0862-48ae-8406-993714ae06a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 2414bf1c-ce3e-4fcd-8414-63f2dc6f1798)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #269 52efa66d-f0c4-4a4c-bea4-70aa66a19869)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #269 dd78f548-9512-4ff6-957c-5dbe2b8da3f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 10768fdd-2a36-4dc0-a462-54d9053b0656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 1893c0f2-7929-4039-96a0-cc3830099965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 4577033f-22b0-40ed-a159-ab46c13b717b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 1d20f440-80b8-46f7-903e-fa2efb990f72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 18a5734a-dde6-489a-ba2a-6ba193ed631c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 f26544b7-c72d-4b81-984a-5eced741fc68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #270 a76bc2f7-d3b8-4639-91f6-383353d57e27)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #270 6d7601d6-1241-4bed-b352-3cc658355225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 f7194530-0244-4dec-9cdf-0459bbaeb093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 214a177f-c542-456a-99fc-f2cd6d414c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 807e8395-2755-4eff-8de2-79898fa2ef1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 23ada17f-28a3-42bb-8023-4f4618a14e19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 4225c017-3f70-4730-ba04-3100f85bbed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 5ea100ff-dba4-46cb-a4ba-1dde50f89892)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #271 5d5138a5-8f48-4ef6-a429-38c50c2c6300)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #271 6e53495c-89ef-48c9-bf1d-80c2f2fe3c00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 61a5de9d-418d-4399-b1e6-7d2a2ac250f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 f47c51eb-ef6a-46a3-a8dd-effba92869e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 0469717e-75bb-4993-9a68-c44782fb20dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 1a86ff01-d1f1-437a-83c2-a366c812d1ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 dc34824b-47d8-4c06-ad6a-dd56352648e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 2cfd871f-6845-4338-85f9-5c8c28d257a4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #272 abd79503-5e35-4811-9dfd-d882335a7c26)");
unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #272 8deb7a61-d2a2-417c-812e-1a253ec6fbf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 0838d294-7eeb-46c3-9710-c8bfea9c39f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 1808b840-92a0-445b-89bd-12cc8e7b81c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 ff229752-cd05-44a6-b055-318affe3d668)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 c910c508-e8bb-402d-8306-ebdf93142a22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 501a5b56-7da0-442a-a7bf-dc61351c3795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 10ab3b03-30cb-42d6-9d9f-c38299755274)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #273 ef291d62-ec2e-4b17-82a3-a04974797177)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #273 6660c479-612c-4de7-a096-314311edf30c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 2750bce9-55d4-4ecb-98df-64f3f99291cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 5cfcb1e7-4aae-4d1d-84ee-d1131d758ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 bda71d3d-dc7e-4aca-a24a-dfb664ab1d7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 4dcd9661-dab9-4610-9e0a-f3099e17df88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 ac0e5ee6-d46a-4288-80e7-d09b09d19ba3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 fe9a62cf-4d2e-483c-a6b8-fe9e83e222fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #274 121dc4a4-61d2-424a-92aa-b2b123857ec7)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #274 708362a1-b12d-49d8-a63c-fdfb05e3412d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 37726a44-5929-44e0-8d73-4f2d9d2d2619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 2eb38e94-e8e1-4d92-910c-0e1add3e5a01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 48284d1b-445a-4520-8239-8ea378360634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 03538a7a-d9cf-412d-acbe-d7333fd44279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 6488b6bb-e9f9-46f6-bd93-bb074307ccbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 c13c2241-bb83-445e-81d4-a064f80be3c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #275 ca6dc7d4-6afd-4327-bca0-b5bf1b398070)");
unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #275 7390896a-3cea-47cc-8e3f-2c32ff54d187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 640aa5a9-294e-4572-9698-9e5a06555858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 f925305e-0a98-448f-8008-6845716c4bba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 8624e8ef-9721-4bae-ac9a-133d14b4d238)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 c41c1962-558e-4ada-96c9-34a31a8a95a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 1ce60e7b-1644-41f6-a8ae-be9b84eb5960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 af6d14db-54fb-4c4e-a9dc-8bd12e71c03d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #276 a571a06f-3e2b-427c-a9d1-8bf1ee9d3119)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #276 43e721ec-3f3a-4b38-a856-2134e9d1509d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 24df634c-82f5-408c-bba1-2e9eff7f13f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 3f4ef507-3919-4bc8-a9ea-48fb6b79a7ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 de0b4c4e-cb7c-490a-9908-5b071f810ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 6988de0a-1e78-444b-a5ae-cfc79f2d9491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 3a254cc2-e124-4da7-b9cb-c6c4267a0e65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 4e17d677-47fc-4b54-9072-64fc810acf45)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #277 6e164b02-81ab-44c4-8934-fa0118148406)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #277 23b0a545-7878-45fd-9216-4e040d458d77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 186e9945-9547-4521-9e6a-1639661e2171)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 3dcfd6b6-7bf4-4d89-8329-e528a4ab8182)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 19dbc087-8e75-4b53-aba0-3e9424be6a4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 a05fb6c2-e7fe-45ca-a4b4-426ecd4b0b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 16d138c8-dea8-4570-ab96-b57aefbafe22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 f2bbc245-d6e3-4c01-b795-7ae7b245040e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #278 f0fa0216-58ab-4972-a371-ed4da1a6348e)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #278 c59084a2-ccac-4225-b216-597f6ed979d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 5685575f-6c54-4d6c-903b-ca5440dc76b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 3e7082fd-860f-4741-9215-0808223a738b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 82876792-bf19-4110-a7db-f85dd97beeb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 5cbb0c83-9e11-434e-be06-e6a9604b93ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 699a1332-239a-4d18-aa93-e34060a935bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 ebf5ecd3-f1ff-4b34-beb0-7a1b1befe260)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #279 c424e646-153b-4b11-9a98-7026524c0ece)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #279 180dc1c3-6484-4d66-bb10-769ec9756dc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 3ad44693-1ab5-49ab-9b0e-5082a884b427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 9c165142-6565-4cff-a631-206e20f50518)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 fda80406-70c8-4c3c-a2fb-affe81b487e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 f5d5cc26-8067-475f-87c3-ddf6520b60d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 565af27a-68a3-4cee-8f4b-7307f03fa921)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 676028eb-a76c-4d85-a2ef-9d78557c02e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #280 208cb078-e4a5-4ea9-acd2-4544b8e78351)");
unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #280 fb4fa6d2-0573-4c90-aabe-00296ecf7f4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 ce2767ed-636a-438c-abdc-2b4ba036b94f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 cdddf396-6db1-4a2b-96a3-9ebd776bd37b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 528d471a-d9d9-43d5-a90f-498f72ea3f41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 862a8f27-4f20-4545-a6b4-878b1a0965b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 980ef788-6222-4842-9fb1-2646a2319d8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 ecf38626-3d78-415d-9078-f3ecf973f458)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #281 4314d195-ad98-4000-ad94-34f0d0358e47)");
unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #281 9fa519eb-8d25-4d74-b276-9284065c8078)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 70910a7e-a3e5-47d8-8dda-5e3e4f8047ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 b1b90570-89d4-48c9-9a48-6a864ad2bbf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 047bf2d3-a713-45ce-86ef-fc6e069548c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 f95d7266-4ef3-4004-9dfb-07ad2cb6d6bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 ad8b0ace-6d68-4c73-8e55-e63e6c008b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 6f4ac757-c98f-4b83-9535-295544fb4239)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #282 5d48102b-3213-4a67-b309-ec528033ba9a)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #282 32daa462-8b38-431c-baaf-c8aff18e82d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 1b3c5c4c-57d3-45b6-8dfc-2807999ecae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 d7eea00b-8752-4d02-bbe0-dcada1a34e16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 1a71b3e0-fdb4-4e86-8bb1-8a7ebcbc7b81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 506f240b-69a0-4c0d-93c2-0c88c0a03a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 a8b4b094-5b7b-4c5f-b3cf-3583773183eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 e1a58767-a8f2-4450-a106-57dbff26dd73)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #283 30faf052-e92c-4b17-adc5-55be160dd502)");
unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #283 06792271-40f3-408b-9426-e9f2f4b1d2b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 a58c4233-0414-4b22-8eb5-57d7136ae71f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 210ae0ea-b26a-4831-a401-2904241d053f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 fdf62481-9e76-428b-b1c5-f92f8765f9ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 86f91396-b441-4fb5-a28a-fd0703add91b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 7364bd9f-0598-4dfe-809b-c8bca454992d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 7fb868c0-7117-4dcf-8ee9-27c0fdf6784a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #284 701a37d6-bce9-4243-bd7d-61de8dc87095)");
unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #284 a950c48a-5ffe-4254-bcc1-25393bba46cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 5c3856e9-e2d3-4510-b87f-75ea9b34b158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 12f361ef-f011-4f2a-8607-b9b5914504bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 1c8135eb-2477-494d-9f0f-7b40d17b572f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 dce95f3d-b69c-45b4-8ff2-0dcd900ce635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 d6470140-dff1-4817-b270-db04a7b0e767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 99f3c124-b5ef-4acb-8229-029228adf259)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #285 9a055756-88b8-4b9a-ac0b-ad2550dd5e66)");
unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #285 2fe098ae-41cc-4a80-a065-51e8c68dfed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 8a416765-78aa-4a83-922a-3963fe3d7e9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 98167e50-6338-465e-a7eb-c7a3ad8cde4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 3e4c1c81-b13d-4530-b059-8b8c7cfcf04b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 9f66edc7-c167-428c-b632-2fdf36393d16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 f9cd2df0-234c-4b9b-b687-4760afe0bf98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 0c602354-f491-416b-877b-25d20bbf3be4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #286 13fb6cb8-37f0-4b2b-b657-06ee6ff014c4)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #286 644e1d06-4cbe-43ac-a413-9e0ac9c7bd41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 d331244b-e6d4-4a01-85dc-659b691400b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 58b80f86-fa8a-4a7b-ae98-307124436dfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 50b21518-000f-4fb1-8823-c91644b1824f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 b146cbc3-5723-42dd-8c79-03df81415a0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 f3f607dd-6de2-467c-a219-5e19cc0fe8fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 88fbb692-e565-4259-aae3-94b2c398a648)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #287 cf1af7cf-0943-4ae5-ba77-6070ca7836cd)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #287 82d6b4c2-7764-47e8-8d3e-46526995b85a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 8e1d94d6-26c2-4105-911a-387ad1a01c94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 7504d278-224b-4a88-9617-dec84197bd55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 94c8e76a-62e8-4204-89a0-a8da2213eec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 30b9dd35-ac06-4b15-a0ec-52161d745d2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 8e72de2f-97a2-4421-9804-93390a5438b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 6ac4fb60-b5ce-4959-bca4-a7a702935ad9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #288 f5c22c46-ddc9-44f7-af13-c52578e4bc19)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #288 f0c64b74-4731-4f2f-9a66-49e5363ad50f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 c004b089-d9f5-45ac-a290-eeb15b574756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 0c4e89ae-fde6-4c3b-85f5-5d7cc0a5eba1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 de6283b5-92b1-4e1c-b579-061205e8e006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 84f59448-d044-48d4-8e6c-ff129dcd069a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 ea78a1ab-df4a-426d-8c6b-de82535445d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 094d53d7-27ff-4a6d-8421-aadf4ee4df0c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #289 15961b04-193c-46fc-80d8-ad81aea92e4a)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #289 32b8e4a6-f2c4-44b5-bafe-83e7aa600123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 52708059-0275-46e2-ad2c-3e3201c35ddc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 427ff2a0-3bce-43c0-a767-2355c4742b40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 786aa953-874d-4c94-a5b9-f18bbe586a59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 5743ab10-db27-426c-bb23-90ce8a3aef2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 2ca55286-b831-4ab1-a040-75ac6eec2a2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 6e7ce44a-9fc2-4ad0-9a03-f29b8d3a41f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #290 57f78334-afb3-46e6-a7b8-426db5bf70e0)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #290 6ebddc9b-61db-48f3-950a-cd1a420aa05d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 48ae79b2-8e1b-407e-bcab-6895209f98a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 03cbea11-af7e-4dc3-a903-624682c84d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 a6de5203-514b-487d-b3fe-ddfda151b3f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 f8c636a5-5453-418d-a8ff-ba16bfd656b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 16373931-9f21-4add-b04f-4a8cfa3e1f71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 f74bac23-aaf6-4105-a5af-722ef621f5d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #291 e75d77e0-c986-4319-b7fd-3ce32889b01b)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #291 02f5d127-4e23-4be8-80de-2abd987ce149)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 d41dda76-5e1f-401b-bb8b-e5c8559c8505)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 cc513e11-f0e9-44da-97d4-1e374c8fcf20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 f603d106-fec0-4f19-b386-8ecef91dd201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 8353a26e-82c7-4782-b60f-fabce1edb361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 b6d018a8-25be-480f-88e3-fdc380d6d6f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 9655ff52-5817-4600-a22e-077496f0df97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #292 d8124e69-d3f3-4445-a825-0f7876815c9a)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #292 02504fad-76d3-43b0-97d3-b5b66efb27e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 1f4f7dcb-f34b-4751-9b0f-d6017df7be12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 137d8bd0-c12f-4ca2-b565-8b5cd91a25c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 37a88581-a63b-4d7b-915a-612b67914641)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 e2d07f72-74f7-4860-ba56-5763bce6022c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 f3dd2955-8fc9-49af-81db-514654c047a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 bd333c66-2c7f-4af9-b8a9-992ff3c9ca78)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #293 6f52e201-001d-47ad-a218-0301b0fa85bd)");
unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #293 a51df7c2-56a0-459e-8b9f-6085d3fa94af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 5174c384-4cb4-4dd5-870e-9f6d487496fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 adcc6939-af94-42ce-a448-2fad655ca903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 38780f82-56d0-4570-958e-2504c8828e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 cd4327e8-7003-4ab4-a826-1bc72ce39cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 09a2332b-262e-4ac4-b63b-40decc27eb4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 6cbb212b-4fd5-4641-98ab-d4c45c1c05b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #294 dfa44a8f-47da-46e2-8f1a-084049bb7d5b)");
unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #294 23c1b7e4-2130-46d9-9e69-1bb15c6d2e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 4b0f1d10-dc05-42e5-8c3f-0095e7000e8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 dfbac5d2-0ea2-4e49-852c-599ee9163504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 a33dfebe-07f8-4e76-8a40-52df1257ec29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 430b913e-38a6-4c18-8cce-e71413ada214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 ed305a83-f8da-4ece-a1f4-a40e16d52e25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 527777a2-3728-48f7-9d6c-056add8c5603)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #295 76179fcc-1d8c-46dc-bb2c-bbdacbb02053)");
unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #295 c9bd46a3-28ae-42a6-b67e-58305dcdb434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 e9f3ed4e-0219-43de-a11f-b13a61e83c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 c7be2f18-e55b-4c73-b05e-cd4a5ae4ff61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 6691830a-2bb2-44ad-8f0c-189ba724750d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 8292f249-f5a2-41c5-9f43-ca85fdf55db4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 a3f578ea-5826-4666-a302-dc19d001b1eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 667ffb1a-2636-4c0e-926c-57adc2f40cfc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #296 efe2efec-84ec-4d28-b8e1-0bf0b347d030)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #296 4fbd895d-9838-4d77-a750-75d0799f4582)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 78a30613-bcd0-4386-af68-ce724785e45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 af24d4a5-afaa-4f38-9196-809c9f169ec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 c3a1ffa2-0dbb-432c-8bcd-b286e74c149c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 429afde0-581a-4b84-a7a4-66cd27939f83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 405ce94f-c72d-4da5-bd49-5d04224cdadc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 0163245a-8572-4edb-a0a8-ec2546ed1cb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #297 4c27f3dd-46e2-45e6-8f31-8b168f85455a)");
unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #297 e1dc15fc-f3a8-4772-804b-d25d0e920bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 490ebcdd-ecb4-446c-a449-222585ac30e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 345f83d2-379a-40d7-b278-b1e7f6783525)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 37beb961-87a7-4be4-baf6-19efb65686b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 f070b1f5-1bb1-4e37-a646-bedb4c9ab39d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 29c20203-fae1-4b22-8faa-b5617ebc341b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 7e052c84-1fe6-43ac-a992-6c4d923c0ee6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #298 7c89c84b-b7b1-4b27-a59c-709adc4cdeb7)");
unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #298 e10863ef-1fbf-4f98-9025-2aa07b12f7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 b2f3f2a8-8372-4bd5-a5e8-89b28ea25b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 601ab384-cbb8-4dff-8e77-1e4c0ca70c43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 2b09b7d0-2a52-4772-9763-fa35341281f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 1fdddc57-de4f-40c0-8c18-7f7f43aac73f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 6862ad51-819e-4d5f-aafd-5c16fd8424f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 8bdec10b-c8e8-4d2f-9fe4-48b122c91ec0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #299 4fd2e55e-9fa7-401c-b39a-ccb9d8fe3fa9)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #299 bb8af40b-8ddc-4ff0-bf24-3475487646ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 e119edd9-3b77-46cf-b2b8-0c994dd3ec44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 72e58046-36e6-48fe-a71f-c711ae55c190)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 a8a7efac-f4de-4a01-866e-542b55b538f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 34b57e54-27c9-451b-95b3-4f02e3b5e2a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 062f3191-8e8a-4e9f-ba90-c29f87d2b8c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 956f8531-008a-4cb3-8407-df185051bf6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #300 10635344-984c-43c0-b737-205b2587c7a9)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #300 7963b304-8b82-4abf-9a64-46ddc0aeb86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 a3a668e4-bc01-4fa2-99a3-86fafe399527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 545a0e7e-2cff-4434-ad20-bea7bced32dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 c8c78c19-ca8c-4964-b592-687b54085803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 c42700f1-1899-4a04-a58a-c27175911313)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 3e913dcc-4e5f-4ce0-902a-f4d12a9e86f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 81f8d23e-2181-447b-86bc-4e34042a3ad4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #301 35b3cc1f-c572-48e7-884c-063e678225f9)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #301 d98b44f7-1bf8-4aea-b9df-c3d9289cdfdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 c667661f-bd3e-4466-9a0f-31dd4f39a070)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 da10a36c-8e56-4eb4-9ee8-febb00690202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 0fe226eb-65e7-4ee1-b2e1-2b42481ddf5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 fb0e6b66-66d2-45b3-accd-7c785b1ec4f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 df7ebc49-599c-4d03-bff9-5375ed30ea92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 583477c0-6b4a-4972-82ff-2c88cd0228df)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #302 932e28d8-bc15-4b0a-a0dc-2b879da0240b)");
unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #302 b853ea6b-2a1b-47ad-9483-558527914c8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 e5f2feee-0ad0-493e-b60b-0fe29319b119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 6f51ea62-1b76-4a2f-b148-563d5697f75b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 441991d5-480b-4622-8914-9605aa05e2fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 11bfac9d-0af5-4073-b696-2cbe88f1cd75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 23676f86-dd42-4ed1-ac11-a3ead036f5a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 cadb69a3-ea19-48e8-9755-906f1345e462)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #303 aabc755d-a6f0-4cf8-a970-2048d43657d3)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #303 1383180d-08e7-4540-a411-66d2e7f4215e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 b9d75d59-7cae-4fdb-8562-cf5f7b8c4794)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 74beb833-d085-45b3-bf59-5ed39a893feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 7b000dde-c69f-4a5a-bfc4-0298707898eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 7de6b16d-b0e2-42e6-ac0a-70562086f138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 a7ddab9e-985e-4cc9-b0af-88629e355b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 153b0265-47d3-40c8-ba17-d81832bd0c07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #304 d3d17400-466a-4583-84ec-8cda94ff4d0b)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #304 2bbc8ecd-bac5-4f0f-b891-d32c3f211031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 287b3aed-c968-4092-8b62-b023bbd48945)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 0f6b26ff-2ef2-4b26-8ebe-5e9e1f3c3889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 ad6a15ad-8dae-40c7-bc95-57094541b1ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 ada89256-73cb-4428-a81c-a72f965f7058)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 82fe12fe-f9a2-42b9-b8a0-ca49d9a53ab8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 22d22447-23a5-431f-8e55-81181e34b7c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #305 a6b92747-bac3-440a-a57e-c2ce80ad7055)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #305 278f6012-c24d-4f36-a632-f3e29a7d7af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 333f1871-e765-4f03-81e5-0454804165fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 f3731124-c64f-4826-ac85-7d2b6cf87e0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 dc9eed6c-59d3-496b-b98e-5dcd12029627)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 c7a78bf7-a496-4196-b081-cba1e4b97283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 b9957622-ac77-4050-9aa0-d481be05c557)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 2c17a97e-e88f-4c04-98ac-b201ffede78a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #306 483aa432-d036-45c7-a47c-60956652d0a3)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #306 79286077-7f20-4a6d-a1cd-634075fa13db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 06e30cf7-2921-43e6-876c-c4b382363ca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 711654b2-261c-41ed-b045-2e887bd622ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 d6cde383-b04c-4005-80a6-2d68f30a2a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 ff71bac4-5e6d-4647-b9e0-b59bc7a45666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 0f449c61-01d1-4e6a-a118-97dd51bb6af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 40c0beb7-0d57-4aed-ba41-1d5d4b769be9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #307 b2e12945-6273-4fdf-9f27-ff752be77604)");
unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #307 0fa3d66c-8520-4a92-af5d-9f3931b4c545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 dba9e252-cb00-4514-8033-ac8f5fb7a2ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 4e0ec79f-95f6-44c0-baee-8200537fded5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 42cfe7d5-b019-4722-9f06-3a909841ce65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 3668adbc-455e-4423-a382-1a33e65bfb36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 38032bf3-b608-4fe3-b021-83e5649ac3fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 643700a0-e051-4546-bbd6-270221ce7ae6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #308 9b3e6a50-d853-4970-94aa-ab6cc69dcb47)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #308 c6d06892-1f39-4853-99ab-c952aa8e7ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 0c0b081f-487f-4801-bb1d-3d5ddedc8e45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 10c8f073-2d83-48dc-a734-f13d42594d07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 45655a17-5bf1-4e3e-b0ab-274d8bd05194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 47ccaf40-80e5-48b9-859a-f105ac78ffd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 085bda95-3828-4476-96cd-0b64fc84873e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 819b3a66-2bed-4067-813c-329bcbfdf06a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #309 dc18a15d-ea63-432a-b717-8116992931a4)");
unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #309 e45dba42-a7c4-4c75-94b2-70d7459c30f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 9842a87d-8e83-4509-aeae-1280f8c33888)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 fc409cbb-14f4-4cd7-a0c9-8203656adbc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 a9b84fa0-f9a1-408c-a493-7f7f2b503227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 ea7a41c3-13d5-4839-8c51-c54046a2f399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 dfad39f2-adb6-4949-a810-223f46f23660)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 32a5fc6d-6960-4223-bee0-4e4c9c1cfedb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #310 7451c5b8-49e3-4625-8718-7ed77a2a9f6c)");
unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #310 8886c705-0497-4b17-8b33-cd382acc0f0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 853c1bdb-c823-4b73-9b30-8fb153040fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 54f0f945-8c5a-486f-889d-640a6fb3dbe1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 44087ad9-f94e-43cc-b85a-e3fdf5815593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 39e85787-b4aa-40a8-b9f6-0cb145df5916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 74086263-fbcc-48ac-9994-ac3c0947fec9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 e02c3328-bd4a-452b-90bc-1e2ccbe1253a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #311 ee8f6382-9565-4dd1-9976-b64a0b6f14ab)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #311 b59bf232-46cf-4b72-92bf-10dd16231b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 dff5e6c1-a568-4110-978b-0759196b6b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 175268c4-96bf-4fe6-a0e6-f2173efe1ecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 e457bf67-e7b0-459a-9818-263ba4143a78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 e6d4273f-058a-45aa-91d7-d7c76526b499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 305d2777-7e8f-4d47-ad20-1b93c8020240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 77850c05-cfc4-40c2-90dc-bc764c653059)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #312 9268d337-caf5-4748-8eaf-83e87e668c51)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #312 a740266a-a021-4814-932a-005fc4e4da63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 789200a9-6a5b-4071-9432-03536acfa04b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 07616b08-f6e6-422a-af79-099c579a0476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 b2f37876-e2d0-4549-8551-6db2d6fee9ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 6ab3ee81-ef2c-4e05-bf65-be3aa8e7b95c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 d95520b3-c3d1-409e-a6ca-17c36ab911dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 9ffba961-3279-4afd-b1ec-a047c8f428ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #313 9dfadb15-207c-463b-a214-2ea79c425ef7)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #313 64b13f8e-5269-494f-921a-c0e39f562103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 a3ec6023-27fb-487c-b9bd-e4e83660a5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 9750498a-19e3-4407-8a97-7f54038ba9a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 e51e1969-24ef-4231-9464-f14070d989b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 79eb674f-06f9-470e-a9c6-10285d5a820c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 7d720684-5d0d-40bc-9c89-e374d7471b78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 f1452b44-26b4-408d-8d68-ed9f837a304d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #314 253f200e-bd55-4db5-84a3-5295224e2d74)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #314 ba43a2cc-3f0a-49f4-ba9e-a90fe4c944fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 ebae3270-ef8f-428d-83d3-cc64a212d6d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 9c3f50ae-8e3b-43cb-8c2b-1722957e1672)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 988df89f-0f33-4b94-acf1-70a53fd51752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 4d6ca8a5-e686-4ba3-bf79-5a863e841fe9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 aed9db61-f832-40fb-a6ef-508f9e99538d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 8595a2de-e16b-4869-8895-a3b621c74631)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #315 34ee282f-fd15-4c3c-a63b-762d69584b02)");
unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #315 766857cf-fe22-4d18-ac25-d35de9e2c6a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 28c14e03-1e97-460e-b1c0-bf9dcdf98216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 5121ce7e-cd21-422e-89f9-06a4fb1fd31a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 3c81ba35-1055-491c-b622-c09a37dcce63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 a3d2bafc-71af-4214-b2b3-0be6668a7c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 201ae020-00af-4b22-8f60-7f6092fa80fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 fbd6f9d5-88df-4c28-9972-ac70ddcb745b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #316 b143459d-696e-402f-8d30-d080656da1ca)");
unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #316 bef30738-1e70-4d8c-9a04-1d9a7048b7a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 7e270557-c8f4-4429-be11-3fd46151f4b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 c35f0552-d37a-4356-a056-c1851c1aa2e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 f8452b71-e730-42db-b40a-ab2a91e82eb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 13116e02-aaab-40e5-b184-60381e7b0e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 58e87360-0bd7-4fbb-9519-59f41e9e8649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 6e15a59c-0c19-444d-a826-3cc77cf89784)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #317 098e4ee7-5178-42e8-9e70-ce086bdb7371)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #317 65f401dd-b417-4b1b-a358-b0c8c70abb01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 2c9356b1-8a0f-4021-bc63-b24a51ddfadb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 a44d51cc-5c2b-48a3-a18f-9d0f076d6340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 99d1ea06-0781-4bb4-abe8-8de25f142d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 f39e00d1-b65c-4d60-9a25-3ddc0fd9a191)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 339297c3-0788-4ba7-b5fa-420e9cc924c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 cc9c8457-b47c-49ea-9f1c-b69f343593d6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #318 7b8972f8-890b-40ee-9b3b-d0327132a76f)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #318 4d7d84a8-3e78-4d19-b828-6765d144a746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 9a0343ad-9c67-4f72-8ec4-8ee11f2f2d3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 e88a9a5a-4873-4e98-9149-39ec33b4789f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 16cedee9-151b-4bdd-a8df-c134b47b1a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 4b8952f0-b9fd-46ae-8d2d-f99882af8c83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 5cf2f7c6-32dd-45cc-b04e-26d91ea6da33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 7969f750-3ac9-412f-afa3-c12e274ebdfb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #319 5047ceca-3cc9-461a-9457-f373fd8f5fcc)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #319 961ff7da-f962-4244-9f7a-87069bd8fd63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 7a5038d3-0281-4f61-8577-371ccc7e01ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 9a7a01e4-a0d0-48c7-ae0b-0e3e30d5efa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 da14a044-51ab-4253-adcc-ba6cacc3b1ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 c3f7a119-765a-4236-8db6-023547c85828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 f83cc68e-9cea-4748-964a-537db35f8a76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 bd3fff01-d8d2-403e-8619-66fbe7c85829)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #320 6fd28611-5134-4092-9b4d-9b2b24a69ff7)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #320 6a7a0ea9-c32b-44f5-853f-af5a484af72d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 dd137376-d43f-4bf8-bc03-013631c7153b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 1352b7b0-3db6-4c25-aa35-9a923a16d82d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 1033db97-a8da-4e51-a7f2-181141a128ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 9c4ddfb4-0472-4556-8461-98eeeb15ac0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 3dd7f36e-238e-4459-8035-7d43296c6216)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 a38d8fb0-040b-4cf3-8669-4ab8480fff65)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #321 40fac2f4-4a9d-4cf5-805f-9deb5a23f294)");
unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #321 4d5d2ec6-7aac-473d-bea1-65ad60b8fe3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 e89ddf42-5d87-42c2-90f6-1833a71ac323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 8e5f6d8b-f2d2-468d-b8f6-1109e7bfd44e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 3b0ba948-0f89-48ad-94d0-bf77ba082698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 e974884b-4db3-495f-ad09-4ff7d93b50cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 3c97f02d-fbf0-43da-ad45-14ad6432550a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 627dc546-a830-4316-8316-4d02252900dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #322 f45b88b8-e6c9-4b1c-a00a-2f4ffb3df349)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #322 554c2e3d-518d-44f3-afc8-e303ba3ced6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 7b624f68-6407-4d80-b236-73eb75826e95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 7b20df14-d4ac-4f3c-a380-dd131a7a7a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 779b866f-ee79-4f8d-92b6-ca624c641b99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 4b2fc605-d458-49d7-a146-4633a5a1582b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 4dec4d0c-8112-45d6-b086-1959d6ef61f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 dfb4a20b-db67-434d-ba98-ba3fe9f2b0b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #323 1e0b0f0e-080a-4b02-83e4-56b4f52139ac)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #323 ce6f8b85-7b6e-4210-88f8-7489bde2db63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 5840f8dc-042b-4c6b-86ba-757a776e310e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 eb4de080-d0e2-430c-bad8-b24e333959c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 1d6b0514-3f8a-499e-86fd-261d23929b8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 b9a5d217-738a-46c6-94ca-78ae7efd440a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 aab6abab-fb01-4491-a918-23a8aa13b26a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 fc415069-75cb-44fa-8da6-ada6aa6861b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #324 f5b55611-30e7-42a9-a880-819e7d4026b5)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #324 40686884-940e-439b-8ba8-1f71d27cc8dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 103802a5-1fa2-40e4-8de1-049c4fdbda58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 9987e451-f3da-458b-b1d5-3740df9c07ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 b86a0348-312c-4926-8a60-eedc47e89092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 9fe8b18b-e9c8-48a6-92fd-a6f55fb6d985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 d6112e71-cff9-4862-b726-d8ddc8238966)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 2163a20f-08de-433b-ba3d-b30b9fbcba9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #325 f6a16442-f0ae-4c3f-b991-0b67ab5e886c)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #325 3fc19025-a8ec-4362-83ea-78ad0412ead5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 f581705f-094e-4a31-b5d2-52500d9a2af9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 edfd2108-fc67-417a-b828-6c1f57bda207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 e8b4d947-88ec-4622-aaec-3109ee377644)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 5a1a04d4-e107-4dd1-b222-e2d11ba85113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 8cf8bd8b-bd0a-4fc6-9e03-542b0c461b34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 5d68db94-7833-4b8c-ac84-0ba105f99e30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #326 8e278c75-bf85-4cbd-99f3-8bf9384faba2)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #326 e1d5f308-5d8c-458c-a52c-1c3f2daa078a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 5b68ecca-9344-44b9-8177-54f734693a50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 af6576e6-5110-430b-8daf-7e470832962a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 402cb05a-3d35-4857-8d26-324393eef0a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 c5f9d5e4-5c77-4c4f-9a10-027d09bbb109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 1ea1f60a-310b-4b11-b797-02e7b8b538bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 57cffb92-2678-4c7d-b14c-41cccd331cd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #327 9f8078c0-bf59-4537-afc0-1414a6af5dc4)");
unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #327 0aa0768b-b665-47a2-a15d-81d2ba297d84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 7aff04e0-4194-4734-904d-12b61b543594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 247b27dd-63b5-4314-b9ec-e361930587d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 c5d23451-080f-4235-b507-e7e54917f448)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 219c7ba5-d865-4dc3-8b75-f23ecf4aa8cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 a1e0a6db-43e4-4221-8f31-7d19611a18c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 8e589482-d7e1-42aa-8ea3-71f02d9d3b11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #328 d31b1cd3-7f94-4f2c-8eb5-75f54f34d3bf)");
unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #328 046da979-68f6-4dd7-b7dc-8bf10e1692fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 dd4d5908-cbd3-4089-950a-a5479e02a6f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 5c867ecd-9b96-4a5a-9a78-6cd262d81225)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 452b6121-d3c6-4c03-b377-897a9b203336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 0cf1a0ed-b125-42d1-aa14-2f96290d9081)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 4e434a73-f910-4036-8701-7b99855dbc2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 3380bb61-f718-426e-9443-2619bccdd393)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #329 b4df698e-874a-4424-8cb9-f32765236017)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #329 dda9ca14-d688-4c28-9b62-441579bda8dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 c6b7e3e4-41f2-445d-ab5d-a87f52023113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 1429589e-fb8d-4b49-9012-29ca2ae83891)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 2e03efd8-8157-445e-bb12-bb160bd8bbb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 e48b153c-ac7e-4617-867b-3452c99e13fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 22d5a45a-2e54-4d9e-a080-b2ea5a54fea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 6d0d564f-0cb2-4cb5-ad32-8b4dd5d64261)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #330 e0fe6cf2-63e6-4fff-89b4-04245729766a)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #330 f73d7fa6-8ab1-446f-9f4e-87970c083210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 4939f4c8-2dfb-42b9-a0f6-4cc95335389a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 9d6a4bf5-c38c-4d3e-a305-d0b0e0f8c2cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 003af0f9-eefa-4308-805a-67f6ce340d3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 54ef1423-f2f5-430e-9357-0e8eb5631fcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 34d57f21-c8cb-4a12-8598-de80b5895d90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 6b1d2546-23bc-43ab-9ee5-021da758c9f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #331 4eee2fd4-cd24-4bea-a74a-73a8d3807d3c)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #331 711f31b0-78a9-473e-9283-d05d7eeb9cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 62749d07-4ba7-4134-a072-439ada2dbf91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 3d5e3082-d616-4851-8a03-9bfb9764fbe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 27c7cc92-e805-46b0-8191-71b351de1b18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 b25812c8-47d7-4f5c-bbdd-1ca241a39e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 6df93938-c9a6-4d7b-b716-718aeb4aa4b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 42b5cd07-8f7c-49ea-abbf-2f37efbb85cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #332 99f8f81e-1797-48c4-a929-61ba9d3f91ab)");
unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #332 4e0bc806-2270-44df-91c7-6a551fda5825)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 4cb14767-d951-4c57-91d9-56a9fdc25233)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 48a05503-2413-4321-a220-680aa359cb86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 db3e55b4-3cb0-4ed7-a575-052e8d9433ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 c15f20bb-97ff-4a5d-97b9-f11b6d6cf377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 f7719c20-2127-4f92-930f-6c7a57eadf4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 480629e5-773e-4259-97f2-1ef308b77b82)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #333 4037aa52-1699-470d-90fb-87c119aebacc)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #333 b631aa33-b3db-478e-a0fa-3865e5e8a350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 7f7c0c12-298b-4f95-9a68-e3ef957d3caf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 c2d08a8a-bf9c-412d-8107-155da4338018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 279d3b9e-9bfd-47f0-8a26-6452c22ed702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 b5d2c999-5500-45d9-b89c-2cdde722885b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 1b9e047c-9878-4a10-ba7b-7aaa889eee69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 ba56dc11-2a91-4dbc-9f5d-e811dcd3c707)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #334 68294d79-1c7c-45ca-96ff-97223bc37009)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #334 e857b6c6-e2f7-4f11-9daa-8bd91738216f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 6ea65fb4-cba6-4b24-8b20-9a75299e0f5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 69078c43-7e0c-4e53-82b0-ffd9aaed8f10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 72fe047c-f646-4cd3-8641-df36285fbf35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 3e093bd3-2836-4dea-92b3-e5c151db4551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 538dfa20-14f5-496f-88f2-d7c97157a075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 af1455f0-8661-4d4a-b755-5744cb1ad6d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #335 a0afc74f-1a39-44c8-bebf-a793634462bd)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #335 c328c332-fa88-4080-b3c8-b9ba78089881)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 fb8d49f9-5a62-426d-a205-bac27abb4cc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 e921125b-8272-48e7-9b6e-a66ec96aa809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 22c881cb-0e23-4274-ac11-b54b74d91f31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 3892daa0-34e3-43aa-a625-f34274884479)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 37b88de1-67aa-43e0-b951-f2582c9bf2df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 33c7337d-f10a-4f78-86b9-0b955ff69592)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #336 d25b8291-14c7-45c4-8ded-2d50b528a5e5)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #336 29296611-a9c2-4998-9306-46b9454b7ab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 a02d0b14-46ac-414b-a448-b293adaa6373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 e7c0ffe5-8d8a-415c-89e5-28b7c6970342)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 df96b0f1-1e67-407c-83ba-c6713090a2eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 69ec6b65-1191-4a7d-9121-646c97887a93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 8a5c58ca-4068-4950-812b-a5afc6b0bf3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 337d6a49-162c-4f1b-afb5-40f6898b4ea8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #337 8294b721-535a-43b7-8407-ef6a5cb12a52)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #337 22e1cf7a-2165-446d-b235-7440cd67fdc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 2b886bc9-742d-444e-9bd9-4e7ab6d1b430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 4ba019a4-d204-43f1-8181-ff053c9bb166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 c3956474-96bd-45b3-9ecc-0788bd936aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 3cc81c2b-bff5-4b90-955a-47449c82f04f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 e2002252-de3d-416a-be7b-2145166eec48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 524aa203-fb7a-4200-83c6-c8965d8b00a8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #338 db543345-849a-45ce-9b0a-0c21a7520eca)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #338 78b1db00-1946-434b-9d51-74c7e1d16a67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 9fa5ac3f-e6f2-4288-b688-4d0d517485e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 e85e3a98-79d0-40ab-a022-e07ea7f5d782)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 5fdb8006-b692-41d2-ade9-2be13accba94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 d5cc365c-ac91-4142-b24a-64709b19ff3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 2cc444d9-9480-458e-99b5-1052b686316c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 63be457f-a57b-4b13-ab71-23b55134a5d5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #339 ef2a4710-ed03-4f49-85db-1538b7aa020f)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #339 12117de9-e99c-42e0-a3e7-6589674fcaba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 15c80dc8-08c4-4673-8129-cbfdc652dd8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 9aceee37-e771-4658-a18f-9e9ea20a935b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 2c26fb2e-364b-41bd-9322-b4e9e3d3c87f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 56b720c1-fb69-487d-8d15-39bfeef571d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 43819eeb-28b1-4b2e-9c30-841517f2854a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 df78c7e5-b162-4584-96bf-af5394f8bac5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #340 79aaf28a-8865-4dbb-b048-d70a3c75a1d6)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #340 c47be17f-c025-41b0-8d48-9b9286e0ad7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 428e0e1a-7914-4ed3-bfe5-a7ea35f622c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 1bb388e6-94b0-4367-b295-0bcad93d652a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 6612e5be-4abb-465c-bfa4-41048ecf6a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 843db4a8-c8c3-40ec-b4fe-94ca7bf875fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 59ce20be-c856-488c-885d-940481285a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 83a1b984-6518-4c01-9750-38b2ba8416bb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #341 4fa7b077-a917-4d93-bdf5-35f44c6f4a79)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #341 ebe6cf5c-7996-4819-84a7-25bbb18bf413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 bbf9d367-76e4-48c6-9600-fa353b069f0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 afd9f954-2da3-4897-9fa2-98210fe3a685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 bdb24667-c8e4-4962-9af6-62c97681c0a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 b6628338-bb61-46cd-a4bf-dcd295714636)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 aac79493-b60c-4475-9e62-fc5e115a9ea3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 290f1e5f-ad14-4702-b310-d17da841adf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #342 a7374534-e0c0-4f31-b9ac-d8411335d38c)");
unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #342 42b4acc3-895c-4236-b60f-7f3a7b58c44f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 bf5032b4-32c6-48a1-b7bc-286566b138fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 8da032cf-1fba-4702-b6a3-569c7fbc9354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 bf2a4d06-8b53-409f-bc5b-869fcfdaa097)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 cfa446df-cf1e-4a22-a07a-f8d0268d08eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 ce066ae6-1839-4999-aaa2-d54700d1f4eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 2e65a4ef-122d-4437-a035-fb84f885867d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #343 f936c359-989b-4552-9edd-0b6a1d57da3f)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #343 8e8f15b7-8906-45b1-b09f-a754e4c688f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 57d8958c-8fc1-4c4c-8058-e1dd1aefa471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 ee21cd36-58db-4a91-8e83-79e56ad83555)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 af3e153e-f933-4fac-ae9a-96f4acacf80c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 e602c134-d3cf-4642-ae46-3757e8544292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 02b15539-3050-4dd5-8467-6eacddd65f72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 817a051d-ae71-46fa-b4d7-fe8c47c4114c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #344 0496481a-40ae-4d9b-b65f-ed3e6374ebb3)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #344 b12801ee-2df7-43cb-a4ae-3617cba17ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 6fb900b2-cba1-4d0b-b92f-2a9828d47bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 a88ea7d9-1d54-474e-a2be-9f582084d179)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 a5e8588b-d81b-446f-b654-ecda861d9292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 6196b86a-3f3b-4d95-8d54-1001d644ec98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 db85ecdd-22eb-410a-9cb1-72d78d6d44d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 f5226b26-556b-4a26-bbc8-15cc9498b769)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #345 93ddebef-0ec1-4541-a89c-326744761cfa)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #345 f7893c78-7794-4a1e-85e1-f0712b1e88b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 b76d7bab-a3ca-4abd-bd63-800a35709648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 20b78e62-3d30-4914-b973-48497bb33a17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 124ff330-8860-451f-8968-1ad39c041a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 2322e758-195e-42c0-ad17-3cbe294a960d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 942a9b59-c161-4a0c-9451-a3bb7b37b57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 821cfcf8-433e-4ef4-8bdd-0b3f12190de1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #346 8dffa646-eb80-4369-abc9-8092e504d878)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #346 bbf3bd60-edc6-48ec-8173-3de56af8003e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 99b8ed88-f24d-4282-b2b2-c5df7beb1549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 43ed9b88-b11f-4934-9b22-ebf41d46f6be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 f257c6f0-ee4d-40da-b9ad-f865fe2c0f9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 da40b9ac-584f-41f0-99c2-905ce1809b3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 a739d35e-7ddb-45d2-b281-cf4c3253e447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 df1756ad-cb6d-443f-b22c-1783f03cfbe6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #347 e7cb90af-9539-4cf1-8655-b441accf466c)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #347 748b743d-89fc-4d72-a031-48d583419cdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 b8e7309b-b9af-462d-879a-35f27062d56f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 ea6a00f8-3c4a-4103-86ee-6740fa4278ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 85fd139a-cc25-4a40-8ec5-a14b9ec335c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 b41adb78-5348-402d-ae5b-cfaa33b8585f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 bcf5767c-4003-489b-891b-5142080ab3cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 ce0200a0-b2e4-42cd-83c0-d0eb2b6425e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #348 bdb07d7e-bf11-458c-9a53-ccef512957fb)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #348 a71f733c-71a8-4757-a791-295c578a1de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 ccbca78a-b4e2-430e-a073-f47c1b518e84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 842d89e7-b12b-441a-a83a-3f11e788e612)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 f2c92028-f511-4ba7-9556-8bec2b4c3ed8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 12875cb5-5683-4003-86ff-7084d6ce156e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 68bfa004-b3cc-4498-8548-b5f48e2c996b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 53727feb-0f21-4fb1-8b44-ad4f01bdae3b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #349 5d818d3a-0caf-4713-ab1a-22f981b65842)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #349 b8d23951-bc92-40e7-a581-01c361c17c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 13b3f643-5e7e-4595-bce1-98cb5d692d24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 60829f74-4c8d-43a9-bc30-f97005167792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 1d6613b0-b3a1-42cb-835e-dd4a9b2ed9ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 96c3f94d-c803-4207-86d1-a46e85a56751)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 d6fb1fa2-c2c0-482c-a0a2-464c223c5984)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 e1828d99-bb71-42c1-aa9f-c5f87f96d75a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #350 dc3f1b62-27a0-4535-b25a-64a7d461295f)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #350 533f2888-98a4-432d-a52c-789714d5bbba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 50ff3a9c-875a-4d35-9eff-b7750aff88dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 447ed79c-453b-44f5-bdb6-db4814004dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 833f7244-1a4e-447f-8de6-fa7f260cc653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 07c8b487-531f-4d6d-9f19-d0b355f93e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 f3c014e5-4b24-4a3d-a3b0-08e3c65060b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 656a9478-8713-4c92-a97a-4ae48650ce3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #351 16a6b19e-7349-4ec8-8020-90dd0b476201)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #351 537ef5f0-7632-405d-b9ae-cda4b8d7b42e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 b2ccf4e6-72d1-4e23-9aad-b5fa9e9f91bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 d40e8b20-164e-46ad-ae38-5278263d49ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 e87b319a-ed1a-4970-98b9-201ca42dd703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 ea5b95cf-bb0f-467c-b121-22e6b2d25591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 9e6b4ff1-d889-429a-b111-82290d0123b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 652cd515-7b2b-4209-9a5b-8470a525aea2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #352 4dd0bc10-c4f0-434d-87d1-869012152eb6)");
unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #352 f9d90554-0a8a-442d-b152-978aa7adadbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 086d8a32-17d3-46ea-bdff-7a0c324c1750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 41efe048-2fce-4d4a-bb02-e5e8a8fa4622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 cc3f23d8-5129-4755-9456-92350419af56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 487414a1-cb5f-4666-99e9-e24961442c73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 45f37425-d7fb-46a1-bd78-66557ac0bc82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 0ff93735-b7bc-47b0-a3a8-3d582fd28b2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #353 4d2df850-eec6-4c35-bbe9-fe7ca6ff71e0)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #353 1d219d3d-c297-4d30-92df-aeb082831598)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 67c8c030-bf23-4335-bb6c-97a6ee5dff16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 e326439e-5b3b-4eef-8e4f-b62e6286fa47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 bc50e42f-5cdd-4ae0-ad99-32acd3cd8d7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 a54ae204-256e-4ba2-8a72-ef8b5ce037fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 afd6b274-d299-4fb6-8e97-e167781ce4b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 10c99f6e-8442-4c2a-b7e5-6aa6a7699b30)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #354 aadd533d-20dd-48a2-b849-45373e2f3c57)");
unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #354 1a841fc6-6a33-400c-b773-a341ec2c66f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 af0ae0cb-ec73-4614-baa3-1942f5d09952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 73b74e5c-c819-434b-8b93-de37ec3ee30a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 a30a8884-89a7-4fe6-8316-bc2b311fc8a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 99fdbdc8-019c-470c-bddf-c435b3ac7311)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 c4263d54-492f-4f5c-8908-d6f6291408db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 44d5b75d-4d31-408b-800b-4f595a67bc0b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #355 04baf36a-9ae0-4b12-8c43-3807f646fb9a)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #355 1df01292-2ca4-4156-811d-28e2a743e509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 978fd670-6aac-4e90-acb8-d66b8bc41902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 5ee04f18-9fdc-4cba-b13b-1ccf26d68a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 ae8c9a2a-e35c-401f-b3d8-384dbb3d3f6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 2e187ebb-d66b-49a0-8549-a4e89819a7ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 53c24593-93da-4522-8cc5-085266e76446)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 dfeb98ca-4a31-48c4-b920-f8dfa50b86cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #356 657a67bb-91f7-4cda-b18d-0c9b3198fb35)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #356 373b067e-7303-4362-9bc3-ad9b220393ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 25541b2d-9158-496a-b536-8f35c41f7db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 e218ce10-b254-42fa-9917-4085653cc81d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 1871365b-d998-4038-ac2a-499a82227431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 af8259fd-decf-4bdc-9752-e209af76d51c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 7e3fe248-a735-4af5-9d45-cf8f18891e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 c5054471-5ae3-4c38-86ed-d1953338f6e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #357 3f3a43b0-3813-4105-849e-20c78eaf3664)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #357 9c10868a-b6d6-4df5-b482-bceab51255de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 2ce6227d-2c91-4f36-b250-902b8b8f281d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 cd08b669-ccbd-4620-bc1f-b38cb45017b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 b3abdadc-8998-45b9-aa54-418fb76dee6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 b04b4407-5236-4e57-b54e-aba5e72fd846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 98a8345f-d188-4494-a0dc-bf7be06dc673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 1cc27c0e-ff08-48d4-ab39-b0d95aa01921)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #358 f2f85846-7157-4d6d-aab5-036d817fff99)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #358 7980b8d6-daa6-46d5-a1d8-8033d8b3b97d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 8cf44784-e0fc-465b-8893-56fd39c7a9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 f601cea9-9cd4-4708-a661-929b242725dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 0fc9f4ed-910f-4787-9715-7cd5b51364c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 f115d6a3-32c9-463c-b3b2-73113d9ce20a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 6dd86537-fe2a-42a7-bca9-5c256b5c9a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 bb03ad94-720e-4783-ad76-09226ee27f4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #359 c548ffc7-7ce6-40ba-b224-177e6690559e)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #359 207a76d1-9346-4c92-9ed0-f210de918d83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 e5321680-5e78-481b-89bb-d549cdeba4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 245e210a-be9e-499d-a8e8-2128ffc1731d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 2ef11bcc-d693-4c4e-8b7c-3ed6a7686fc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 c1c7a00d-8999-4a55-bb24-f144b2efd4fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 2f8ade10-d1e6-4e70-aaa6-4f0aabe04dfa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 b48d62f5-4c74-42c4-a74b-f23678cb63cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #360 b9c16eb1-8800-46f2-bc3a-8ab3cf7706a6)");
unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #360 a12a2465-52d5-431d-b2be-c70232398646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 f6b796b0-96aa-4e9b-bdd5-9e8cab60ae7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 714a6d4a-353e-4bff-87f3-7ab8f3e7f553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 d363b96c-2843-47d1-be01-b3f5cf10d9e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 19f67ee0-950d-49d1-a825-ecf7123b23a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 587c2641-7ff6-4eaf-a583-9a5019fa7353)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 9b0e9ce8-9866-4176-b91d-3b67d134e642)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #361 2d118bbe-383f-4d02-8811-72a11389f1c3)");
unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #361 a67709a3-d104-4e58-bd3c-3313477d3c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 d635b3a9-4e0d-42d7-a377-b769c2db906e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 84cda629-60da-451f-81a3-06c6c84069e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 c18b94d1-e83c-4a35-bb6a-24e65f77f6cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 8736af5c-28c6-49d3-a2a9-a63356bf9045)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 a653d9a3-62f4-47b2-b2b7-525962cf8d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 de30c8a2-6344-45e8-9d9f-a288827250af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #362 c903580b-2b71-4e96-bd24-9f2aca034c2b)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #362 1dddecb9-0281-4382-a676-2c2ee943f0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 072acdf4-cadd-4aa4-9b1a-9ee41a6ffca1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 b8b3ce56-7253-4396-bcba-8a9d18001ef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 89714128-2458-4ac8-a21c-8565adce6bdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 b0c0eb65-27e5-49fb-9c83-a7c7d7b7c2bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 01af2e0f-e4b5-4c9d-bb14-15958c448e86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 74c04147-df9b-4f82-a0f3-459acf38cb12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #363 11403f2a-20ff-4ed8-8833-769f46ee20fa)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #363 e70278ff-6522-4c46-8f29-6c990485dd52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 aa3f9230-1e74-4bfb-b20c-f9cc1d25cc33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 62222b64-e91f-4306-9f2b-9149c925778b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 9e8e3d1b-846e-44f9-80d3-8ce63d3eadbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 e3df7b03-0db7-4127-8070-8a4a330ec189)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 fadbb983-fca4-4cf0-9bfc-a293d3fd2efa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 23549b73-abc0-4096-9622-0c5e8d2519f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #364 029ab5cb-6299-4b57-8d1f-fdf3be0a666e)");
unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #364 d026e0c7-1393-439c-83ae-9fa0c109a46c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 0e355679-61b0-4878-9852-d12a442fd843)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 e5bbbcb3-a13b-44bb-954d-eecc2e4aaa79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 b69313e4-bad1-4606-a359-29b69bbf995c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 233dedb1-ea34-43f8-81e5-030a0d44762f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 4c7e225e-41e5-4cc6-be36-992547be3545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 e6e559e6-7c25-4731-b0b3-ab5853b8c51b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #365 d098da32-67bd-4302-a9e1-cb21e8155e9a)");
unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #365 b4fd7226-8d42-430f-a326-71012421d8bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 a7a8bd72-3412-410f-9995-a2f2b6e3faa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 3164b4d9-91b6-40ea-9302-a2bd5d0b4b95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 c9f01c56-3c64-4d51-9fe4-2a933b7f17de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 b945d8b4-9de3-479a-a43a-e458a0feae9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 31ad9ad6-b37d-4855-adb4-a9456bc308b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 740229be-5320-4bab-8302-7c6e76c9014a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #366 4a70de20-58db-4b68-92f8-453d9440e9e3)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #366 601893e3-aa7f-47e3-8550-57d019af4401)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 7bee4e4c-2467-4104-a25f-5e4c00e02fb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 51650733-8d09-4fd1-87e3-921a58e40720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 41026254-0d8a-45d8-ba0a-60c68abd31a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 924b942c-cc68-47bd-acf3-6cc34cee66a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 1f20e57d-c0ef-4e56-b6fe-dc24022a2dba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 e98cb82a-9f51-42c4-9742-06e5c6b5697b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #367 e7c6cab1-dee3-4174-8275-b62c08c625e4)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #367 44d142d9-1275-46a8-90d9-37ddd700f1d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 3f4191f6-efa8-4248-86d4-9c84946be5ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 0c35b170-07e2-4859-88fa-e7d0843100ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 d05a7130-3ea3-4729-925f-7b5f8cd6af5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 2172699a-5262-45d5-bb36-713f0ff3ff00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 f021ff9e-3ff5-40a4-a1a8-eca65ecb4541)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 45a406e6-1f1b-4667-8fd0-9c92ee620f72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #368 9d305df3-7edc-4931-bc26-c853ce2e3d7e)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #368 0c378c8f-eeeb-4a99-9fd4-cca66f9f8520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 8145462a-9279-4912-9e43-44ad72e26218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 25f8781c-c333-4328-a65b-4984ad6a43c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 82e6634a-f2f8-4caa-8a06-47c4476b1af6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 76be1535-54c4-428d-aad9-75a4cc716b1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 ddd3ddca-c2f0-40de-bde3-da4b7edc7a0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 dda7a886-dfec-43ac-81d1-5120871200c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #369 81aba4bb-bc49-4d26-9e37-918281cbe43a)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #369 79671aea-8e19-4409-b8bd-cfc7d2a47c7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 6e6cb398-798d-4cae-b679-283edbade7f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 df239106-26af-4a1e-9d43-c30870510b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 f8e7241d-9ed4-4ee9-836b-dce277f04b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 e08879ca-b42a-4eb4-9008-80f53393287d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 aa1e2040-8f30-4a2f-a42b-ce8e846b0587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 44b3fd6c-aa83-4efc-acbd-321a2187261e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #370 ffb677d1-91bb-4c1e-825e-359dbf34b576)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #370 43113939-dfc9-4ce6-985e-fd2eb9e10308)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 7f06be64-9484-44dc-b83b-8af250e2657f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 2aa08558-7458-4df9-8cb7-1a6c615a5b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 a4a80e35-93b0-4a2f-a36c-203dafaec570)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 345d6d28-dcd3-4e77-a814-32545a9ba911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 2b7b1a2f-5897-403d-8992-d541ed54efe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 740ef213-edc8-47f7-b867-dcca7e5de666)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #371 720d08e4-602e-4ef4-847d-3166bf5f377b)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #371 564a7925-28a7-4968-927c-61dabe6aab30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 2a76d20f-d160-4a2a-b90b-d72bdefeba6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 cf3eebe6-7a48-4a2a-8b85-a78b828f2fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 4cc0fa31-c2d3-4f94-ba35-c98ce212d2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 8089a80d-0af4-41db-9ebc-87b80ca5a4ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 55006b32-60d8-4c97-86aa-747b811ea37b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 83751cde-4e06-4cec-9876-f28260f5a112)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #372 6fff91ab-18ee-44a8-8f10-874e2a2e1f3f)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #372 a0f2abb9-02fb-46b5-b85d-e9fc35e625ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 e1b7b73e-6ad7-4831-98d2-60954ee66c1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 9c2690a4-8e9e-4d97-acfd-5283cb749702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 4594e26f-3c7e-4b53-839b-e4b625dcc986)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 d910bfe4-a49a-4d8c-a8e7-4f730d52b086)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 63009e03-c199-4f9f-978b-ec2391b32d2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 b9ca1344-2411-45cc-991c-273208ca42c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #373 c9c01b81-d101-4c12-bb9f-94ba1a05593b)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #373 14c836e7-6ff7-4275-906b-11bf915c75f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 229af457-0840-4bb8-968b-6e62801401c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 4f8275bd-f7e9-48f6-aedd-345b2fc5b803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 4a3fba1c-64a7-44a4-969e-f29f76d7ccf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 1798fabf-d43a-45bb-925d-eff55871d1e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 925f6111-64fe-4727-aae0-830961a4b694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 e4ec3944-5425-4502-8fd0-73dc74844d1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq8(8'h2D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #374 9ec5ef9e-cd1e-4f19-9534-9c122b8c772f)");
unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #374 de170af9-db4b-41af-9684-e62706f34ea3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 2a1019a1-1c4b-4cea-8282-e3d9fae967cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 efbc9d9e-02ee-46fa-aadb-18395c15a634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 74497452-ea41-4c5d-8290-0d90920437c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 07fdd7f9-fc13-4adb-b403-25d6ec2ae299)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 394b64bb-271e-44ea-8d8d-410eb0ed02ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 a4eff41d-aa05-4798-98ef-434d630496cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #375 7edcf36f-1145-4e29-ab6b-edc785f6c6e1)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #375 f598ab96-3735-4869-afc8-5fd2005efd3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 be1c7f60-aab6-46aa-b3b3-0033a79af3e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 f5a79170-3023-4b28-989a-37cb24415207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 0c23d100-5cd3-41a4-b058-f522d2d2a43f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 3e454c5d-7b7e-470e-a995-67891cc0b562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 af25d3ca-00ab-4614-921b-efb189aa538d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 1e045535-9758-41a3-9222-91e52d4c1947)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #376 55bd0d7b-a322-47fc-a2aa-6a72da006682)");
unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #376 c0db5276-50ef-4248-bda8-a4b5a5fd8c2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 d095ff57-fccc-4cbc-a62c-af57a65284e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 31855cfa-7ca0-430d-877c-3fac0e6582d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 1724af10-e169-468a-8ecf-ad8095134f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 882d18d1-27f3-4294-bfc0-aeb250e5e7c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 9a27cdf9-ed9f-4486-9baa-12cb92b4fec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 013900af-61b7-464e-8b57-a31002ff217b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq8(8'h2B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #377 edbb6ac4-8a5a-4376-b2b1-2b3959768340)");
unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #377 fc860e1b-4aba-458a-8161-d7d8ca87b4d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 a08a470c-131e-487e-be24-12ed9703cb97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 7fdace78-c26b-4567-96c3-d20dbc5c59db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 5745b4fa-dcbc-4c0d-8e70-6a20f5a1d23e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 c26e5d9f-3dc4-4629-aa1f-dc9718596a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 b7420d76-5cf8-4d97-9919-f5b6ade88f0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 a64553a6-f371-41f7-8321-6932afcb7c2d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #378 a45b1507-e333-42e5-b2c1-637193b7233a)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #378 9e984e15-3380-4269-ac2b-32f17ea75b94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 b83c8f01-67af-49b8-b4c1-d544c45684b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 0ac81f44-07e8-4362-9455-c444da55215c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 675f17b9-9163-44b1-878f-eacfe459c651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 d2df15a0-db11-4002-aaac-35dbe0f49ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 0b9b7227-d687-4424-a7d5-3b7e4a819f10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 15f28d2b-df49-47e9-8b4b-012c714740fd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #379 ea7c8006-922b-47e8-8aee-d97ac1eb6d21)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #379 b24c5294-a55d-4c5b-b427-de99ec2aaf7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 914aee17-311b-4e00-b28b-c1c6dc67626c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 7d251dd3-c035-4697-a77e-6436783ad080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 ea8f7403-ee06-44fa-a79c-ee74220757d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 5c11fc41-8948-49e9-b98a-a47dab98a6b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 a6afd994-ef87-4490-a5cc-4e89f86851d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 0ee769ff-6c3f-43a5-955f-2559af5aaa95)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #380 c581c78e-0a9b-4989-82e9-3905cb0c1ca6)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #380 1a99fa03-6ec8-48bb-a2d7-a403f5635132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 1dda4cfc-7b74-4cb5-a6df-d6b04aeb0b35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 5fe80acf-dc2c-43e5-a6d6-560695aecdcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 1e480058-76ba-4c0e-b845-86e47fea484d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 53b5f184-52c6-4d2d-876e-a2bb39c15da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 14a0e8e9-fc44-4449-9a6e-bd6f67970bef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 c46067d6-394b-4e91-bd5b-44de08cdba8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #381 be0526f4-fab1-4862-aca2-d413db75eb62)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #381 795da54a-984f-4d95-8281-524ab8c70aa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 fb06bc1a-81bd-428a-b92a-df2e96353b85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 adb15fe9-f234-446d-9e29-9d88a51b040c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 719b79ef-f3be-475a-b8b6-4b1532ce406d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 75f4d389-2620-4afc-8b72-1c6311433f38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 406bf553-f4be-4bbb-a2fd-56c496f649f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 2ed7a29d-e01f-4c62-b30c-9bdfd8ab79e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #382 d41038d1-e295-4f8d-8a09-10faab784820)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #382 0279538c-2273-42ac-8372-0d13e724bbca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 0f43246c-3944-4863-9b0f-4372eeef6d96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 7e07d5f3-171a-47fe-95d2-e8922c4dee4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 19c2a690-645b-4250-84c0-3a6ddbeeb326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 eb77c5f5-8c70-4444-9454-72eebe995140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 0b322454-1eb8-4cf2-bce9-456ac2528735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 b6ab99eb-b08c-4578-a82d-e9093970695c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #383 2b3714fc-c9d6-421c-a2ab-83c7b63c456a)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #383 620a1d87-67a6-4b0f-a606-9fe168882a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 dd65e243-decf-498f-bcee-fbdccbfa1ce9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 522bba67-7dbc-404c-b180-8aef2891ec24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 c950934d-fb84-44ae-ac28-7d87d8020ba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 ae05fc1b-b232-4206-88ba-4defd15dd0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 3798ea94-54d0-4ea1-a3b6-ac4318e1327e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 d138c3d4-6432-4ae8-8819-e272bab90d92)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #384 be2ae232-88cb-43c7-8b33-7009ce920a1c)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #384 9b032f57-5df4-4b8e-aca6-7dbd2bf8c067)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 122fbb4e-11cb-409f-b294-913a6fd93758)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 73b6a3f6-fccb-48ea-9c04-985e5cd0e0cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 f8f994e5-e3f8-47eb-8d0f-325fec704542)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 a983df62-cc5c-4330-87a8-7b290268ccbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 a910b136-5257-4ebf-afad-765534f79f7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 fe734c3d-34b0-4ba6-8715-75c50d6604a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #385 fc135e42-2568-47e5-87e6-7deb29b18a60)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #385 e714dfa7-c9cb-444d-8c4d-b1e32833f911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 a1c86715-398d-4c2c-adf9-f45873955e8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 4f2bf4d0-4b82-4dd9-832f-0f33dc9db59f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 8691d705-7398-4844-a127-28f44db0599b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 583c0b86-f203-4f4b-8b7a-9bfa6428e222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 b46b4b39-808e-4477-a9a1-2767b1504012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 446e1f32-aea7-4063-a243-184c5926699d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq8(8'h53, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #386 23b766ed-37a7-45cd-960f-c781bde1f732)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #386 e8266b12-2468-4c23-a1a7-749de6e1eca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 a6665476-b1ed-41f6-b5ed-7d7fca35fb3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 29589ece-824b-4a23-a07e-2e02591e6338)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 3da876b1-1980-4abb-9ff5-db9d139032d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 61003108-bea8-4d92-b243-9f6e18680d99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 e5f7e884-e093-4d20-8412-0ea810462018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 0edddcb3-1a44-4ca9-a3cb-dd3f525783ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #387 13041085-f14c-420b-b5b6-2be332a4406f)");
unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #387 c9f3688c-605c-4468-a055-f7649087da28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 2c9d4246-5bfa-40d4-baa5-a6391c9e295a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 991f76dd-e453-4df2-ba55-9677bdac56d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 5b2e6f96-c2c3-4304-9363-9d51bdbacd62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 e7366f06-423f-4ca3-af8c-aee1f95f197b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 1e68ca99-e563-4134-ad79-72b3a1eb06f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 5ac032fb-a59b-432a-87c6-8d3814622475)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #388 dd2f4e5d-b9c8-43d9-9685-634a51c229eb)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #388 f5895bbf-c8d3-4a78-8464-49eda02c9963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 a8add348-34be-4db6-a450-a524fa84ccb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 71ff4667-a892-470d-b1e9-a34a7ede968c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 e89742ab-5d9a-4863-a96a-f2905c9931c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 56a56ac8-d0ef-49d2-b219-4825599f9ae7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 45e940e5-0667-43ba-944e-c83dd164dfca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 aef58159-1437-4567-bf5f-cfd85381ac9b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #389 4a624816-13ce-4b14-98af-2fdb43da9599)");
unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #389 3902edb4-a8c2-488a-8bed-be2f8eb20ac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 f21364fd-ac87-4a32-8289-a6908f2b5b6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 eb7e6bb4-722a-4877-a09f-509a4b925141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 4249e0ce-f90e-4fef-b60f-0068b1c492c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 2a2b57a1-8096-4f22-acb9-5124b3adb370)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 e4149425-e241-4678-a267-35f5ab492503)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 e21977c0-3122-4941-85c9-9a07b00dd234)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #390 f4f6d2e5-339b-4bbf-94fe-34270678f35e)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #390 146b74c6-b7f2-41ef-aa34-7f049bd1699b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 52554930-2180-41d9-95d9-3c2dcde69645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 c692458a-7055-4df4-84b9-156c2879dd59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 2dff9a2d-b0f7-4149-a0c6-7a75bb5e26fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 e619c5d2-d01c-455a-a2d5-8db6f72737e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 5b38b15e-7b89-4475-aa09-013d0b19af72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 92eab314-0ff9-4093-8fe6-ffd97fcaa53b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #391 6cf8dc99-4913-412f-8c68-37ce60f19969)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #391 e441fba2-74b7-4ead-abf2-64adb981a4fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 555301fe-f246-42c7-8547-310a8f036432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 b43b5857-aed1-4d73-a1bc-93ba58d5fdc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 990ac86f-40df-4fbb-bb1e-ccfd526bfc0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 ffc53621-1b05-4b03-8e99-422e4fe8dcb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 93810c5c-0ef6-4509-82bd-95acf2d4c57e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 ff517612-24c9-44f0-bb94-4f0e6b0863f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #392 59664921-8a67-438c-ad90-1e3a3db57994)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #392 93d87aff-61e1-49c9-81d4-4470bce63d47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 beb6207b-7031-4352-8742-086397b268de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 8aa3190e-a83d-4633-ba83-bcd107d4ab32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 3afd8144-3662-489a-a470-8041962793da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 e585d51e-967a-4833-b815-fa51a3586bb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 4a8efd02-49c2-458a-a3a1-f44accc3665d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 c4e5469b-25e4-4fa7-89a3-6098b803b365)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #393 187f2791-b450-4956-8692-004fd0a50eee)");
unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #393 146015b2-8498-4602-a1f7-b395bea03331)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 1b4b8ece-f98a-417f-b7fb-1f2aa2393bd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 04f9dceb-c59f-4993-9854-0f109ca43134)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 52c579c3-cc7f-42a4-b02f-b8b4ab24269d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 4e1dc606-ce10-4b58-a14d-bd1389f38ae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 7cf828af-b3f0-4278-b7ac-8dfe1cdaee8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 cd00fc2c-b5e4-44e0-96aa-9411c1255155)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #394 0dd70cc0-947f-4cc4-9524-b1387ac98b53)");
unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #394 f70114a8-f299-4863-9816-33417ba0ca89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 a3671de2-4265-4eb5-8032-4f660c64dd71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 e3d0316b-76e3-46ae-a65e-6b024775d5d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 2faa05c4-503d-4122-a457-094c7d5e80f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 2b44c760-ad98-45f7-be6e-3eb7295bd881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 8b2e8dc8-b595-4dbb-a997-a728f1ee517e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 88d2416b-d46f-438e-9bcb-24a968814607)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #395 ace8603e-cd01-4a2c-ae22-7a6437bce32e)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #395 53443bd5-d364-4c3d-80c0-13e1ea6de7d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 287892e4-40e5-4fec-b30a-a89472a6ab9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 40470926-6a58-4603-a980-d272378f7a76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 db770c19-fb8b-4445-9aa5-9f9b9ce70031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 6fbc8042-780e-4489-bde0-21a1896f8700)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 bf0c1fd4-05e1-4543-8252-419b200e3d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 96488479-cff5-4610-995e-87efc5592cf8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #396 dea8224d-423e-4e10-9a65-18ba5a2b5519)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #396 051d5feb-6fcd-4ea8-83d2-efad4ff33f5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 496f4959-ee07-40d8-8440-56fccf3d6182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 3fbc284b-e9cf-4d69-bb99-3b25bb040cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 8fb0d593-f401-4f7c-b86f-90f8291bd553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 a7dad34d-3557-4b1a-b4d9-780418dc67d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 7eadeef2-09ab-4c4c-8fb0-02407b11a383)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 0970b540-cffa-481e-879b-f327d28ded77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #397 1ec4f125-a18d-4500-9c6c-d010e455d17a)");
unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #397 35ded706-cde2-4a02-bcb0-6b0f6b1fdf17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 50927661-9fc2-4dd4-9b3a-21d75730bb2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 a85aaa6e-6d68-4b48-9cdf-d72b9e34b7be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 4b4943c8-70d7-446e-876d-2fd5ba2bffd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 7f6a6da5-79d3-4b40-a446-117c3875755a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 d58852ca-d26f-4218-915d-1a0ddd71dfd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 e2562abe-c053-43de-bfe7-23cc1438771a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #398 7dcb6c3f-a345-4cd7-a6a8-00cdffe0f1ff)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #398 d41f37e8-f9a1-4c56-bbc4-d344eadfee24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 2b958d93-0b59-4f17-b70a-e5fdf11757ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 bbe73333-72d1-4b30-8846-bbed64279f3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 6934bf0e-9d10-415f-a6a5-79d577e74084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 7fd12707-6101-478b-80d6-731a7b4c4be1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 93e65a4d-9055-48c7-8934-8c906b5fde55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 2a0b44f7-7ffd-4ea7-a786-d2a4ea3e602f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #399 98357c95-98ca-4c99-85e4-2dcea2af91c5)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #399 c7c0126a-d7b3-48b6-9b95-6ad06bef679e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 247f62c4-00ad-487e-8015-e20086bec8b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 1666a15f-18fb-4d00-9a09-bb4f8623fd41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 61fe8fa8-426f-4653-85e1-87b0358451a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 28b6751e-2ca0-441f-b18c-3240b2746af7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 4d6d94cd-45f6-4ffb-bf97-8e3bbb34307c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 8f581957-9e2b-4ac0-8dce-4b36b3d20cb1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #400 e7120e66-781d-4616-9936-3827b33b7992)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #400 3fce4035-d949-4823-860a-a62030d5c6ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 9f68d655-fd88-4374-b33d-a75f803b45ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 6a843e41-0680-4c88-bf86-c7d69729e050)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 c6c53548-2a8a-4053-b034-025fb9913246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 d31d2e31-bd31-44d1-9797-797167b60b6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 c58d1e16-7786-4017-ba7f-1ff95bfd03f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 9a058640-ce76-4341-9f39-6f9919f89428)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #401 ac1f3fc2-8e5d-402b-aa98-1d8cb47b540d)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #401 4813f18a-ff9d-42d8-9bea-e69d21c10d2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 30bd4afc-4a4b-499b-afc9-0732431815b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 c0aaabe0-99dd-4c62-bff2-bc62d8e20e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 c9be7d06-483d-40bb-b6a3-29ee7d0c76ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 f7892d61-9cc3-4d03-87b5-a9e0b67b698e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 0fe93766-b2e5-430b-a33e-edea3ffbc810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 04ba2654-80c8-4e94-8ae3-fe52d3efb27e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #402 5cd5d473-5169-42a2-9275-df4570d53ad4)");
unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #402 f536c841-245e-43f0-acb6-404b2d2f5da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 af6efa41-20a3-4869-8cd7-900ad89f102d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 7ca19299-7a45-4254-a17d-1dca6203738f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 1e9b6273-36db-48a9-9d47-f1f1a3e52da5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 1781af91-704a-48d8-8650-f5cd7664820e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 988858a1-26ba-4ab6-831b-0a8a63370408)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 2857c35d-7889-4c24-a723-5c1c97580a71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #403 28e54100-9aca-4c4e-be45-6b8d3709f280)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #403 8e65baae-1906-422a-8adf-3e9e2c54dbf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 04babc9c-3464-481b-8405-8c14ba1bc38c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 b782ea29-ecbc-4ab1-ad61-3b7c115bb9a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 a3d6cfb3-517a-4d75-bb81-bb2cb59e12cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 63d62e83-0faa-4cbb-a5d8-b6b9cf394d4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 ede3702f-396d-4971-823c-a0d2d418bad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 887e7fb4-e92f-4188-a16e-010e3b93395b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #404 f834ce3a-a6a7-482f-9288-9563d9f066eb)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #404 56bf33c0-1db5-4e25-a01b-fc90cd1caec8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 d0f891ba-278e-4962-8134-211cb6acbdd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 e4400c30-93f2-4631-b533-91f1cb4cf84b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 3b09085d-646e-4a19-82a0-c6d54c0dcf21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 149fbc06-72ad-4648-94e1-c85396685599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 eb1f9d63-c7d8-4103-8845-82750aff0b8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 68dd445b-c224-413d-88ac-bf237368ceed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #405 b3bc36cc-3add-46ed-99c9-cf781eacf562)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #405 7aed9298-da38-4056-9818-1987072b2c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 4636ea1d-5d6b-4dc1-8705-4c3e7cc2f878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 2d2fdcf6-6d5f-4bf8-b896-5d17e3d1d35d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 a83bec55-c153-47fd-89ab-39f4046d9d55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 1ecc627a-04e0-444c-a879-e999c2a4f5d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 45485f56-27ea-4ece-9089-ad06d8645346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 33f96bf2-ecfc-421f-977d-67155653595d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #406 30105656-e487-496f-93f1-a0fda9ecaa77)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #406 bf4e2df2-fd3e-49c8-913b-37efa05e9e9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 7ab71b4c-933b-422c-aaea-e6561bf87877)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 24a8787c-1915-44f0-9b3d-cf4aa96999ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 352b438d-b0a4-4ebf-ba05-dbfeab5d199a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 a3377858-2db4-4066-ac4a-379ae0abf2a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 439511c6-4ffb-4321-9d9f-c3f2241ecfb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 b74e6a9b-ba14-4219-8c5f-3da1636b0589)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #407 d96ff790-68d4-40a2-97fc-de55d17f3822)");
unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #407 78732050-75c8-4aab-b00a-0efc2eb3d3fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 6595cf69-6650-48e0-bf84-0a13a9b98782)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 a69b12f7-7a72-4504-ae65-4d0941e65fad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 d7719fb4-3026-4d0a-90e7-961d82d20972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 9a351adc-2398-4acc-a46f-2e298202ce81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 18c13f6b-d944-40aa-9c4e-422005eb6550)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 6e600848-f4ea-4a09-9cd9-0545295b5011)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #408 da1d96fa-13a1-4bba-829a-53dc82670c2a)");
unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #408 0c0aef37-be92-4fcc-855a-2c34de051779)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 1ddcb6e4-2c8b-4e96-b416-813c1aeeac23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 e5db48bd-5fa4-4f98-924d-92113659c262)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 7f6be18f-c686-4e1d-a955-cf5eeaf5799b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 9c819b69-0606-4954-b828-eeb1bfedf5bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 e436e158-eb39-4236-ae16-9cf78b7d85ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 a8a76148-0aa3-4530-9fe8-f1f2bfc57856)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #409 048d8f01-9f25-4860-af07-b4c92f58132b)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #409 4eb830fa-65c3-4202-96c1-e4a282c6fb61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 5a6f3114-5cf1-4161-a77f-17566cf4262b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 9db87313-2ded-47f3-bab0-afb0ac13f8ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 78273344-06b6-4c9f-814a-8985b0155161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 ee87b397-5c5c-4e38-8891-77b9cb523bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 0639a27d-9c06-49de-98fb-eb7194800290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 5af899e9-04af-415d-90a3-bac13b49aab1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #410 d8e9e89a-3f71-4708-bb26-113c9aebcaf3)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #410 aee54fda-e6b4-48f3-92b5-7e2bdf2d5fa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 b144f25c-5738-497c-a1f8-a60983e3017d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 dacff7a5-84bd-4811-8d45-4e384d64169b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 80f2a99c-beb9-4ab1-9d86-2458cca06f0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 c570cb8a-ef97-471b-994e-b77586a04c36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 9c71e5fa-82b1-4d58-be56-c20c0f1f7462)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 25f93f69-b711-40c4-aa33-ba9973f28b52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq8(8'h35, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #411 837aa1fc-ef6a-4c26-94a4-20a1e418ecdb)");
unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #411 916f170b-7d68-4539-835a-c0cd4982cc20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 1c9762c0-b3af-46ed-8fcb-9f9f1a001f6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 cc4973d3-d3df-4e6b-9736-3ddbaf6990aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 a2828e8a-076d-43c5-a21f-b4c1c720523f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 3c992991-f864-4ce5-8f3f-049f8f1f0dbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 c09e7918-586c-4380-98a7-2bce85af2278)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 54ab7168-d595-4b39-88b9-8f36e2e61f84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #412 023c5748-2767-4b65-8ff8-b58d0dd6f2d5)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #412 c8f028e0-4fd0-428d-afe6-e2149b669747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 3be011e0-f81f-478a-b500-7034830dfe93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 70679ae4-7f2b-4f8c-88f8-549dbd5633ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 674829f1-147c-4a8c-b7b9-172d2259245c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 ecb857b6-de0a-4b43-a6e5-3a8cee00a91e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 71ecc4e6-97f8-40b3-a9e3-c9658fa4dd86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 695774eb-207b-4ca5-b417-4c1edccecf4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #413 5a47faa4-2788-4c3d-b34e-1f15207fc5c9)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #413 9c4b8389-543c-4ab7-b759-e43ced85832b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 fa61aff7-895a-4143-b98b-8823ead6fbdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 80885d0d-6398-4578-9302-3c02800f2a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 6c767ed4-559f-46a8-bf9d-421a9a7a4a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 1360ce29-87e6-42f5-8ee2-1c8ea50971d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 0f298716-51ad-4470-a0c6-ab2cbd48a23e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 7b0c0f4c-ddfb-4d10-b2ad-1b008ba7da7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #414 d9e76cbb-26f3-4591-a086-f47ff26792d4)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #414 aa0bbeea-7bc5-4cac-b9fd-53af0ec9b6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 105451e4-e25b-4e1d-a47e-bf2d24114534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 8116ff2e-a3c9-4923-a4ea-fc4b06dd84aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 2ec0900a-45ec-4bb3-892a-59cb244f4b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 740231cf-7d11-4c3a-8465-65b0af17eadb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 4dfaeb5d-a71d-4269-92a7-a1fc08d9e37e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 bbd930fc-e62b-467e-9776-f9b92c9a951e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #415 b626984a-5f80-43fa-9af5-b0be564bfe54)");
unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #415 f6a2da42-fe5a-4462-a586-05a6a5db6f02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 5824e268-7327-44e2-a322-52023cbe46ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 96f9b3b4-dee3-4e33-a2ce-4c88a36af4ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 6aef597c-8bfa-4fe7-8558-f6c530d3bce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 4d4673ec-9692-4efc-842e-cd793fc80a2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 5daa746a-d43d-45b4-8607-fe9ae909b047)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 f45b2721-581e-4275-8b27-c3c7a9219342)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h96;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #416 ce424677-1d59-4f9b-b05e-24d609c81f86)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #416 f4109de3-19ae-4349-aa36-9e28e8033749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 503f1236-699e-4e0b-848a-06db07b676a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 6e0ddbcb-4cc2-48c1-a95e-935cac4fd8e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 752acb6f-9a56-4124-924f-5175dbc8e886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 4268d9ce-e043-4724-94b3-fecdb990a5cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 c9229bcf-b583-48ea-bbef-85f47b35de52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 a27b637e-a3fa-4f94-9947-f81710daa665)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #417 7688d427-e8a6-4f25-8bab-19df2bfd37da)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #417 b2c77b71-82c7-410c-a052-c74f1dc26ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 4c83cb28-3ae1-4f4d-b98e-10c35d0bfd9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 a0d967d9-b059-45da-8136-b83741598ae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 6990acd7-ea69-4c82-b7d0-5d980e9e9a74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 f0c419d9-74ec-4f3d-8361-f75fe3a3d01f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 52dd5405-d434-420c-95f7-65451b537c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 146e87dd-a60e-40ca-aa5d-ec8027a0fb77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #418 9b3cd14d-0ddb-4c24-9d86-f9404fba0a69)");
unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #418 264a9ecb-8a6a-4c53-b58c-726734a83fb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 8bba3496-5edc-44e4-8c4a-e7abbab37517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 bbe6a831-0631-4b54-857c-f75349d1cb86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 f52b6b7c-90f4-4212-a42f-3be37eef9829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 d73e4146-6cb6-4a67-b5ea-8b2816cc76f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 8c333e1a-6aab-4e0b-8245-8bb98c0155b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 f10e81bf-9621-4f03-af44-d39b3b3fa0f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #419 d7ec76c5-4de6-489b-bb2d-2aa12f2eeeb7)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #419 3e430f31-f3dc-4b7d-8433-ec351d32ce19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 9cd8ee7a-f0f2-4995-b7a6-a893ed5bedbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 42fc0a5b-8cb9-48b0-be9f-0d3d7e2652b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 f41f5387-229c-4f01-9d23-e7334e189cbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 fe8dcd07-d186-4eff-9804-61d22c2ff6c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 043e1989-96d6-4f6c-8f64-214a77d39876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 c494b779-a323-4143-b080-9d984edad884)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #420 082e76b9-2be2-4754-af28-114c6884a5b0)");
unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #420 93f920b9-de0e-4ad1-8212-b34da1895ff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 e4fbe2f1-a7f6-4a9a-bd11-ae92fac94e6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 850f6cc3-a585-4cde-ab84-466e9539562d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 e564e947-9876-4338-a9a0-4a17fa0b8ad0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 dae2e604-7b55-49ad-b904-77866592f6a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 30fa5d75-5d6d-4ef7-80de-54df7dc62ead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 868eb9df-1639-4c88-a148-b3bec493af57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #421 906ddf3e-6094-4fed-901f-cd9ad6254f41)");
unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #421 1d0e0abf-c785-4670-b8bb-5524226101b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 9677df00-a4ca-46b9-b67e-1bd39e740d20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 58bf32de-fe74-4bab-a712-d61ab235a5bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 e13b8437-d1e4-4c65-afca-0e60a336755d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 f511d642-f48b-49b2-9c49-383731cfe7df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 6456f901-7cd1-4373-a882-87bb9394ecf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 d51c03e0-da73-4ac8-8c16-e298e8a79c70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #422 69258d02-7639-40ec-a4ab-9c8323e905de)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #422 443417a0-546e-4d0c-b0f6-73deb8206608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 472d9416-300d-40b8-af90-2785d8495cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 23414f25-d1f2-418b-becb-169af2528c1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 de7cfc09-441b-4902-abf6-fae42ca5413a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 f1fc6963-dd89-4259-95b7-0a6f27ad5065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 ae966a7c-e049-4fc4-b6eb-2583a1d1bdb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 b1318ab3-2e53-4a81-895e-cbb8b0a7c1dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #423 d054a739-9c77-4033-8cb3-3f4f17edaca5)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #423 c985da72-89a4-401c-862c-4defab30ac53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 c26c1f2d-7fc5-474b-916b-c352db584c06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 7de00e08-2e3e-41da-ac10-5239f784f27a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 6b558344-093e-4cea-933e-5fe52f95a256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 2868e8a8-5bcf-4845-89db-8becf3dabc3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 2506a02a-399e-416e-836a-2a18ecbbaf3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 06180f84-70d1-432e-99ab-c8d71e2f48b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #424 26874705-164f-4238-91ec-55ade4257347)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #424 fe5264d5-1715-4531-bf79-0aeb73b8b113)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 0e554a7d-2870-4566-b14d-9979a564abe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 89e6e4b0-9637-43aa-8a80-12491f48055e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 423c4cd4-121e-4e7c-b751-c0bccbb1ba9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 9328cd87-80c8-44d4-9f9a-8ac08f439e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 d6a956d2-742f-4171-8838-596bc6575198)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 59aff627-5685-45e5-87d7-5d4326026596)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #425 15f95c6d-0bbd-42b3-af8e-851fe347e8ce)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #425 6cae89c8-6de3-4a51-824c-b330b3613a3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 bea84b0a-c5f3-43ee-ac40-ca26566e822e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 49ed20e2-989b-48c6-b772-52b099063659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 ad42be2f-34b0-4172-9660-3ce7bfe4346b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 fcebae97-a377-4e3a-ac6a-19328ff2521c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 ea4ebac9-c782-4c5c-8d09-55e7c772633c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 bc17b7f7-9caf-45e1-b0ce-a2acbd94b616)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #426 dc669973-f557-442c-b70f-06bc7d04492f)");
unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #426 8a178ef4-bc06-413c-adde-66e16bece1cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 ee5f217d-d488-4795-9aca-9d4bafdd2585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 1920c18c-dcf8-4071-a191-36d6b018e041)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 7b44f315-8af2-4c74-8ff7-5b322fcfd770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 4873e200-bf44-4af2-adee-b7aeee5459af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 7b8728e2-b4b5-4a27-8b1b-9df19567aa55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 46fd8f8a-9c4c-429c-8f01-9401515ad74e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #427 bd4a3345-bd3d-469d-bd67-9303f1704838)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #427 9adf4bdf-3328-43b8-aa8d-5516cb40efc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 9b392b87-97cd-4baa-afd5-86447090c4be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 dd459b88-2946-42b9-90b0-7808f62ededa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 c84f92cb-4f39-4d99-98ff-e4c18c7b0560)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 e671e5b5-5cd0-4a1f-b153-b376c9664c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 1f991fb0-c158-4f78-993b-604cf7911f82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 8fa0b65b-4ee7-43c7-bd7d-5d0567737a03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #428 7641c062-0bea-47f0-8288-910d3e470474)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #428 f61daddd-992e-453b-ba10-6e404d02dc1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 fd19afe3-028f-4b0a-86af-2b97207f506d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 3dba29e9-0868-4fc6-b5ca-810114757e20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 0c27a4fd-72f8-43c1-a0d9-cd21f3b2ed27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 4f57f38a-dea6-4858-81c9-294ad6fd41db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 593680c4-95ad-42ea-afda-3adc5ed7049f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 ac3091e6-edac-4826-a262-9b608e2683b4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #429 a6027253-e1d1-48ab-8678-a0056b9b4a6c)");
unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #429 93dcba76-24dc-4ba7-8f02-9dd229567eb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 a18c4436-5604-4213-9335-94e03069c38f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 eb87acac-ea41-40ad-9b75-c2d4bd1555c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 67af77b1-4923-41c8-ae5d-59c6f58935b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 12617b6a-2e15-47ab-8271-7ca0308fd84d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 75124d44-37f9-4f3b-95ff-aa89e5f10fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 5c3a0377-e31e-4cf2-bfb4-07d552fb2c62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #430 488067b2-fcd8-4601-abf8-27ecf3fadc21)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #430 3a95a60d-f835-4674-85ba-cb85048b7134)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 d141905b-a363-42ad-8c06-6fd584f8f4b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 9672dac7-31ff-4a06-b1b1-f4d4ea3a772f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 e7b4f14d-631e-4a69-a5fd-d4dbffa52d7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 9c8e7763-a182-49aa-9bb1-f62cf4571092)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 7c160ec9-c69b-4cb8-8413-2a5146effff2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 23df8f4c-b72a-45f3-946a-945eb10ac6ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #431 970e6e42-f31f-403a-aa80-4f9b4505daf7)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #431 898c9064-4192-4a75-98b8-bfc9aaa8e7b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 5a60da17-1569-483f-87c0-7c08b6a5a1a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 82126022-c374-4ae4-8572-92555205fc85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 e69bf180-8352-4d63-8553-807601b94591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 46cc6d17-d77b-46ae-a7ef-3e1b33e107c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 04a6f845-0d74-48bd-925b-da3c52f476ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 8d728cdd-30ff-4f96-ab5b-c0b9319c1fa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #432 8f8ce79c-75be-4080-b2cd-9f7c57f36e7e)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #432 59edd524-a00b-498e-8486-6bbf6e73eb89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 c51e2de1-01da-4de7-9cbd-02da67104f89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 683bcc40-798d-46d5-9a27-f535bf88554b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 382320dd-56f6-455d-a6ad-d29268b9d2aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 43e46c2a-ee32-4573-84b3-4a7cc66edc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 34d2eff8-3030-4f89-81a2-f53232f5c320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 6a66ee92-ed1d-45f9-b062-28fa391796d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #433 cacf819b-bdf8-4e8f-9ea9-f958a069c82f)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #433 3bb6d5b8-9530-41cf-ab5f-ea8f60989e94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 56e334e8-d104-4367-b9ef-e7365a0b1edd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 9fa5c6b9-b1da-4e31-ab45-7c1f0eb44464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 04600b22-06a9-48aa-85de-ba15b42cefa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 31b79051-df61-4fe0-87fa-0f4e386927c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 b30feb81-fc83-436a-b4f7-46210b524b1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 da7fe749-d2cf-4ce4-9a0b-ec1b49f66909)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #434 ba38946e-03ba-4f41-ad3a-cd0f3134defd)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #434 29dc35cd-6d2d-4b66-9f75-3e06b7407ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 a0c31ee1-352c-4385-8ae2-6c1533f6bfc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 5a47bbc9-91be-4088-bee3-e24f9f02575f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 d86b3e6a-9ecc-4b21-8968-60dd7d5d7155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 72c47361-23b2-4538-9861-19b415e50498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 fdd1c755-c21e-4f79-9d3f-e5ef92956380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 d9a17e71-d317-4218-ba1c-8592e13708fc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #435 8ef80f66-ac9c-40d7-a4f0-c03d4eb02c57)");
unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #435 89f93f70-9940-4e74-a0d5-d2f3fdf879cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 8c850e63-9460-476c-adaa-fd3d1677cb48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 e6651ff1-3c55-47c1-b64c-0278fac351e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 9ec18b7e-cb99-46f5-8183-4920292f61e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 dfefd795-82b6-48f2-a220-64e91a3d71e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 f4e8ab15-5b35-47a3-bff5-1747f77a417c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 bc2677cb-c3d3-476c-8acf-67207aefae5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #436 4acdd478-bf12-44bd-a9f7-d6f45cc81eef)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #436 3071032c-2ad2-4549-8c9a-4beaa932c8c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 a187aadd-1b0b-4b20-9d17-25ba5fdc37a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 f30f33c0-caca-405d-825d-a1bc6706e090)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 8a4bd56d-7af1-4d5c-a700-f40344e358d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 8c319044-05d4-428f-a34c-aebb2588e895)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 3d9ce7e5-8955-4ec3-849d-0f547a5293d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 1cf58ed4-0859-4db0-835b-58e2a0e05e84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #437 e27a12d4-8abc-4ef6-8bfa-770917e46e0a)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #437 1c1ef119-5e1b-4090-9060-2d3ff2501ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 38cc318b-fc46-44e6-9627-cab02859aafc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 c9d7a962-d689-4bbe-a5cb-83cd4edef909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 e21648dd-07d8-4f6c-a5a9-1910cc1c1bc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 df172343-d79d-4244-93a9-86bdee9029f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 ceb1cb9c-13ab-4418-a2ec-4322eda0f0e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 6ece2a2c-0173-480c-85ba-228df7f521b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #438 fee988da-d472-4d88-a021-a07b185ad28a)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #438 90635e21-1aa8-4f90-a602-f2e9f70a3495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 7364b1f3-ffe5-43e7-b127-e7e1f50d74b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 7067bb42-10a0-4b84-b844-82ed2476f2cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 f11ae71d-f16c-42cf-90f6-e2ea5197c84e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 1eef3587-76d1-4722-a3ae-640e172ded8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 15f4325d-80fa-4b36-a2e0-da2b5302c6ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 bee302b6-36b6-4a5b-b2f8-8e6f0b69141e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #439 caad736f-85f6-492a-a213-a5033ace5ab2)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #439 29a2e4eb-574b-433a-b343-9d862f576816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 676d36a5-6c41-4ba6-bc64-f76f11494df5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 d7dce59b-2361-478a-8c00-2f4b92053db6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 604b9864-30c7-4347-9fb7-7564a5b9c27d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 afb44b37-ebb5-4060-9097-9304ba9df8e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 33aa37e3-2afe-4bfa-8386-167e38b953f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 be8bfa3a-6403-474e-b117-509f26887b8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #440 a15388ba-7087-41d0-84b9-cc123c3e3bb7)");
unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #440 4e09cbd1-8a07-4c4b-b223-c306a0eccae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 fa1de1d0-5e7e-4877-9191-e9fc14f36637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 ab1b7026-f2d9-42a0-95b3-5a7833fa6ad1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 c00faf69-81b2-49e0-bed7-8f89885ee427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 5a98e415-3831-4e42-973d-3b49dce028a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 b222f5ab-92f3-4c6f-a139-20f2c6f154fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 f3f511ad-35e7-475b-842e-2fd74bc469e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #441 8d1d3529-6703-497f-8192-fd2721810e56)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #441 0a87d0b3-191d-41eb-b3b0-64515105e3a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 e21c76cf-7167-478a-a527-930f3e55f78a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 08258b90-f7fd-45cb-a431-1e31ec6ec08f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 a6f75918-9b75-4a58-8aec-6c64257b41af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 dc8bfa0e-849f-4108-ab6d-1f5860c827ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 47768266-0964-4985-97bf-5cc7311f5ffc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 c54ae44a-4353-4c9d-bbc5-1b33356fba88)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #442 cd5af9b8-349f-4f24-8139-ceab67781e02)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #442 c5a17acb-2e5f-4903-94a9-88b1470f690b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 49d1ae9c-1001-45d3-b57a-9e36901eb982)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 f24f0883-6ab8-458c-ac34-c928558011aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 de31b411-bcf2-4b5a-a483-00c700a4eaf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 b829afc4-0f44-4b64-a2a5-36d275b36ce2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 7d81157e-e818-4bdc-8be6-1604f26820dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 0fd98592-3177-4a15-b0e7-caab6b8b5276)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #443 12b64eb7-8e4a-41a5-8629-1b58586f73f2)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #443 c40179c8-56c6-4e69-ab8c-164127239946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 a49e2a2b-d8ce-4cb8-a5bd-451c427e9b81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 a7e4c27d-3840-4c5e-b2a4-a0be50b3f1c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 e76f1fa9-aab0-4f1a-a62c-fd4d74edf440)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 bd4c0e53-05db-40b0-abe7-0096a5babe66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 dd8ff76b-e140-45ef-aacb-e8f26ef25397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 4a92345e-10da-4265-82f3-fcf0ae24559d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #444 c0a7abd9-4632-4e07-88fb-8e6a56cb4fe0)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #444 92ee8b5a-923c-4550-8248-d81b98d0fa5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 3f28c20f-045e-456c-9431-8242e037215f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 be6cb648-8c53-422d-b2f2-e26a6c230519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 fc8bc05f-6a7c-46fe-9cd9-bbda021dc838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 213ecab4-deb7-4381-9116-471d2ade6a68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 b4483d4d-1a4b-4d40-926c-595037068407)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 73137168-e4c3-42db-8b43-68716003cae0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #445 74661344-e374-4b1c-abc5-8a94f00333d4)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #445 0c109ff9-8d23-4e1c-b0e4-cc784bec0cb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 cb6c5101-a3ce-41ea-946c-9c4f2aff80c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 7f849386-678d-46fc-8746-8ac0ed1bcfe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 557814a3-0102-413e-a3f5-3d96934bc253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 67ed16bb-54a8-4df1-a4ac-66f155b25c0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 ecdac0ae-1199-41b3-9a1f-4720ad073a36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 215da6f0-888a-4825-8d1d-0db6ea659eab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #446 0ab4b0bd-b7fc-49f3-ab2d-d52c34506e7f)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #446 3c6c6a59-cd48-4765-90a4-9b65ff1ad11d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 279382c0-7e0d-4c3f-9bc3-e867a75f3786)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 cd77377b-23a7-4826-a01f-e02e71690c2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 04c00abf-86ec-495a-aa3c-736f81d99db2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 49ff9a67-00f4-4970-9d54-93c9525bbd0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 1f8729a7-7f4c-4272-90cc-005bcaacde38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 f6f259c8-58e6-48a5-ab5c-41afa09d9af5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #447 ff41e6d7-5d71-40c6-b0dd-a4d28ffbe2c4)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #447 291acb2e-9fb7-4f96-ab62-fce3efd1073c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 8bd24c02-ac3e-4ecf-bf3f-b48b55d8cdbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 d3c84a7a-3de3-4df0-b358-48203ef280e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 07ad3711-a17c-490f-87f1-d971f846204e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 ad119d8f-c321-4501-93db-ce715877b8aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 44c9bb65-9afb-444b-b8d5-ab5e0ce9bb71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 5594c67e-7f9e-45e2-b332-3680706daa1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #448 233cc4e4-fd3d-4985-a82f-6452c89a709b)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #448 0a2c4e6f-62c3-4068-9b58-dc8429d7fee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 25084a81-b965-4507-a966-8601b6ba0495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 18f86910-429e-4d0d-b231-7d9f16ca8f2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 2ce788c1-21d2-4636-a111-2869c833b349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 4186cb25-db08-4f7a-a229-172c93f54382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 d9228c2e-a885-4e25-957a-f2eb003a95df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 30526937-041b-4f65-b460-30ecd869dab3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #449 955b1053-e426-4035-bd09-1075d50fecff)");
unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #449 ee485e41-df75-42fa-bf32-2a19b314f82f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 7ae38b4c-8ded-470b-a890-6d8c7bc9f8e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 994f0f4a-5cc1-4f5f-a649-20ab3f051f85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 6e3bbfe0-865f-4777-af02-41953f2509a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 b9491608-2c83-4c89-8425-9f4bc1950ade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 8d292fe7-66c9-49eb-8f4e-31f74bcdb255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 80c8c524-23a8-4114-a149-9fab14ebe6a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #450 b6570933-14b9-4d45-aead-987104b07061)");
unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #450 396e351b-66eb-46cc-95a2-91ad66e7c926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 54f4d617-ef94-423c-b350-3e25516df883)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 09760f87-e1ec-4a93-b0e8-272ffb62172d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 0f5b2af3-1b96-4d75-bcc5-a6af4e471695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 cddad119-e2d8-4f2b-95ea-42858a557a34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 b77114e5-23dc-42a2-8a73-ae46acee12d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 0ba0f136-14a2-4aaa-9e73-2ed2e74e4683)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #451 10305ab3-a55a-462c-ad28-f53d00ecdec2)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #451 e4cf5ab7-a0f2-45aa-9f68-7670227389de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 a4bfc87e-4826-46a5-b6ed-0941052c11e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 860dc023-675a-4654-be90-2dc172a797cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 9daaf554-f19c-47dd-a441-b3fcaf2e8f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 70eb8cb3-e807-4455-ba1e-8334cb971254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 3d9c42ce-3f35-484a-a686-5405ade47e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 976636b7-e8a3-4055-a444-1b7ac0019b26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #452 48aa11e4-c653-456a-81a8-48a663a5bec3)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #452 436ab284-6567-4751-97c7-29ce1822b71f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 9c9bcbb7-1ebb-4d11-b0c3-8d112aff20fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 56583252-99d9-45d1-a7bc-069acf425a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 b0dbf1ab-a136-461e-b1a9-42d9699ebd6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 298b3776-d9b6-43af-ac4d-36c29e34932e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 db6a1af7-4602-4edc-b664-76e5f3c1416e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 f6b26fa2-a903-40ee-b401-4838845821bd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #453 5ca4721b-2102-4e8d-8d6a-60fdfcd02bf2)");
unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #453 114123f2-3bff-41db-b620-ea2ee8fe84be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 e8e42b81-fa1f-4a40-af59-e175298b4151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 a2502ee1-8c04-488d-8b8c-7cd9703accd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 5217c102-4039-4620-8d22-ad81e48ec3e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 08845a94-b685-441f-b7be-81ad3210a9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 a0cd0f4e-30cb-4050-aca2-08d9f3364cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 25affbbb-6a3d-4aec-992d-0b444b1b7ec2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #454 e531bb06-9f20-4b7c-972e-46b7a8cfd4f5)");
unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #454 570c8276-e9e9-453d-8236-4d6f42f78b23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 51f7e6ad-c17c-4a37-8e27-68acbb7460b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 1713e4f4-7854-4261-8ed7-2e07593f56ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 0ef368e1-8def-4ad4-96f4-d7056aec2e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 503bc427-9e55-4a7f-8644-dbb99fd9fd4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 56321208-ca79-492d-8e80-7e6277bb5898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 28b3787f-9b6f-4c6a-8f4c-be67c589d2d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #455 f8ced651-15eb-4df0-b9f1-1561a4877fb9)");
unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #455 3bd75d27-30f4-4182-ad10-f84a76f62dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 3563a316-b763-414e-9bbc-4f6908767540)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 7f77bf43-3f32-4deb-8f20-ff2888abea3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 7578ca95-bdd4-4585-ac0f-373c8281ab29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 6a3305e3-f2bd-4635-905a-2d0f4bf92232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 e753bd91-c421-4426-b8a7-d5414c92a679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 90e060e5-7442-4eec-aaa6-6833c9468ff5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #456 f54e10c2-3f5b-4b5b-900d-18c6791c09d2)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #456 9aef2665-b317-4a9a-af76-45e7a267b565)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 a87a3d19-dc97-460f-8442-21a9a79eb5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 8948bf8f-4d2a-4de3-8ab3-8c946854ad38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 b899f39a-e765-442c-95b0-66b773e2c9e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 bc3bdabf-bc93-466c-97bc-600c2ef227c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 bce49e51-4b25-45a3-b34b-8b29db3027ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 dd034604-a57d-420b-8a11-1d4416832871)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #457 38d8522e-2548-457d-839d-05a2ad96bd51)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #457 f862967c-6810-4139-962c-abb08ab436fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 87eee68c-e7bf-42e2-aa0e-baf28aa10430)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 2af2801c-db76-4395-abec-f63b39e83113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 10d6961b-d86b-4b71-98e2-8678acd687a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 4c259f2f-e125-4d34-8081-0aee49a1d42e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 57899f78-657e-413e-957c-0c81e64d20e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 2d422ba7-9e92-4da3-9824-aeb6426b9592)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #458 965a042e-6209-421a-b823-7faa240118c9)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #458 898d8886-7773-44bc-b876-7c2348bd7202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 8ce33987-88df-4b32-be0a-5a6094ed16e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 5172781f-ebd7-4e3c-97a6-57c181d09346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 fc8c2eac-0568-4754-9a30-973f5795148b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 0ff507d0-8d77-4c71-905e-45ec38e64677)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 312b5245-41e4-430c-a4ae-0b0a1c251486)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 eafae8db-2aa0-4860-a122-4353ee0f85c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #459 57272e73-8c5e-4264-b1c2-a5dcbc572073)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #459 97d9b8e1-312a-4b7d-82f0-748ca0a25e19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 511d9aee-baf2-46ef-b447-35dac241ed58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 846a05ed-06e3-4a18-b771-5eb7d7e14aa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 bebd20be-920e-4b39-9bbc-78456d07b3af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 eef250bf-d61b-4e26-bc87-e56775d4d41f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 656714f6-b946-44f1-9359-22f94f48128f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 c6888504-ce01-43e7-8669-c433162c1223)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #460 f39d3344-6322-4ff9-94db-920e5a5366b3)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #460 64d0ec19-bf7b-4aef-baca-05350296f250)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 ae40936e-5eb3-44ef-8857-15a779762c5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 77800c96-53a4-464a-a464-8ec26393536b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 857d456a-9ffc-41bf-8556-4fbd314c8a0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 dd3f4947-dfbd-4539-95af-49e5f4a610a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 77b128d5-c480-44d7-a9b8-3dccf8bc7104)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 6ef7d9fd-ff08-491d-a3ae-18c59ff28a75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #461 a81452e8-c3ff-43fd-9ee3-a66694998087)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #461 e1addae2-e62d-4170-b2fb-9a36ccccb9a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 e90af380-17f7-4c5e-b878-e56efd4dd8b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 af54d003-8dff-4497-9b77-910cfa812806)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 3c299165-adda-4881-a4d1-12cba473cf45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 a2574647-57b2-4a7d-a677-33e961f6df93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 94436bb0-10c0-47b9-bf2b-6647fe2519de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 d383a706-a4fe-4131-a546-5b6599457c52)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #462 e1528e38-da92-4e77-b9f4-08c8f60e7419)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #462 ec50ed14-a652-483f-beba-8614ef523a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 1b87e63e-27d8-4249-9087-5f71702c6498)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 c26a5c58-ff60-46a7-97b4-386f8fc0b1f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 d59519c5-489f-4b03-8c0d-2a86d206d1b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 bc5020fa-eb3b-4713-bd90-45eaf8749202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 6315d8bc-5897-4611-b2b3-b2cc055fc7a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 5c9bf0e0-20d8-4653-8452-ebff8edeec64)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #463 5883e3ca-63c8-4bab-b368-5da466470459)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #463 8a0d3c8c-4d2e-4974-b738-d3fe0cee8ac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 8e3a0553-aaaf-44f1-a43e-e9de3f2c86e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 cc3f5131-c81e-4fec-bb2d-042680e69700)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 1e035d33-c94f-4d79-8996-1885f5468118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 a5bcce8e-ae78-4f5c-aa8b-7ecb215fc5c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 738f480d-6ba9-47c7-8c29-24d78a42e0de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 6709c669-5eb0-4154-adda-22abb92eb7f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #464 97857983-ba57-459d-9e92-f2882c88cd96)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #464 2ee49529-a359-483d-b5b7-901fb14778f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 d04b123b-acdb-46e1-8d85-78aec8ed8634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 d154061f-c922-4356-87c8-ab39ca1e5db1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 895ee505-6903-4b7b-8000-503a00af144d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 d7b8b39f-9a15-4615-8fc6-fcdddd4ea813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 170deee7-0b59-4a8a-b28a-8eedd19099cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 d804d70e-70a3-487b-9806-bb4e7c666397)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #465 0f66bb68-99f9-4b66-9bb9-6e2bbb93017f)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #465 8d69fc0b-f5ba-4098-a8f7-20f976f485d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 b7d43cdd-b2ac-479d-bd38-3766e0db10fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 f8fd59c6-4a75-4477-8ec0-74973081d913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 08405f68-e317-4f98-9f8f-bd36ae28782e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 c696450b-e191-4a87-8b84-b9673bcbe0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 06b275c3-492c-4ed9-9d18-db4059cffca6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 24ca9863-90b1-4358-9c30-2e570dcac8d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #466 0d6b16c5-dc97-4eef-bc90-fab43dd4d90e)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #466 de79d359-e696-4f84-9408-ffdc01310d8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 fccb8e77-71df-41b3-bf6b-60ee0108d99f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 d225b645-c017-44de-a58d-005e4340d5cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 762d0c08-4595-41df-a402-c725931f1258)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 c9931ea2-4f3a-42ff-aaf3-9b36d1d8e9af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 13dffcdb-ef9d-41f0-a5dc-34a1972c7599)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 dc8dd15d-e5b0-4369-aec5-2902c24ce5b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #467 915a51b5-e474-46e8-b60a-0be3c22dff0a)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #467 fbb7266c-8196-40f5-9973-f4a42e82e0da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 f94211b5-7b1a-4a62-8b81-d1206b44b59a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 1f1ebe06-1452-428d-b494-e1a967375acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 8790f9dc-abcc-4cb7-a465-487d99b16834)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 314fd3b1-3392-47c2-9397-b14b63ccc09a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 2ca1bcb3-65d1-4b05-80bd-4645f354b453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 5c2344e8-31f1-435b-9d7f-56dfdf9f713e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #468 c9849b60-9090-46e3-80da-c5c3201392b2)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #468 55074805-dcf3-4161-b022-9862facd2521)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 fa723b5c-423c-439b-ac57-37f5f08e3591)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 ac192d55-bbdc-4d5f-98c6-95cc5504205c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 690c1ab1-6cf4-4125-bb31-e41912da67e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 68b59813-f9af-4eeb-90c4-8cf966c8d9d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 15b8aab8-a692-4189-b584-e381d64d46d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 554aeab7-29cb-4d71-ba3e-411a218859bc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #469 2bce1545-334e-4e3f-92a0-9add4f06b05b)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #469 bad73ef1-d74a-464e-b8e1-96bbee77d417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 ac693e8b-fc19-4ab4-a566-1418b25cb78c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 99d03fd6-ee05-441d-9606-b0521e46e3b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 db1adb3d-4072-45c9-b118-ddbbc474185f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 9c9d7561-0774-4144-90b6-6d61beda5908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 cb1abbe4-778e-4828-ba30-827b740eeed0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 30dfa4fc-6384-48f7-a75a-dde7ed788bb6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #470 39b34c79-c6f0-4bb5-b89f-a5fc10e6b99c)");
unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #470 01c6cc61-a3b6-4f09-8136-2598b9965585)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 cb471b7f-bae0-4c26-9279-f1323324596e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 8150182a-0c8a-409e-b3ef-77595286e28d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 98651cfa-7877-4efc-a0b3-2fb4312bb95e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 cb6595ac-1348-4e8c-8cf2-f166c92a89ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 5e7298a5-3405-4011-ab4e-b21f2d63a8f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 ee817322-574d-4c7e-b381-592cd52797e4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #471 710b57b8-ad6e-4a97-832d-73cff9b09c29)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #471 866b9ec6-05f6-451a-bcdf-8bb3b260ed7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 62b5fbeb-f1ba-4c90-b4d5-a668215284da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 efdd52ed-e5fd-4f5f-80ef-e01a455189da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 6517aae2-63f5-4e4b-8fc7-1f12b0b43574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 6c5cb447-d42a-4bfe-95e8-033a9a9b9c11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 5595aabf-e07a-426d-b685-87bcbdb680cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 0c7d3972-47b0-405f-bfc7-e69f91a51492)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #472 68460338-347d-4e9d-a163-f197250eada6)");
unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #472 9e424f97-8f82-4aa4-9b58-00b33cb87f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 61c06ea9-cb23-4f3d-b0d8-20e17865d59f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 9c1e936f-0cb1-43cf-88b9-ca9c42675672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 bb212248-ecc3-4a8a-905d-63fdbcfdf14e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 494e5681-2267-4a25-afd5-2c542baa7966)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 c5546b9f-953b-451d-88d8-649e27d630f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 23139e9e-0665-45a7-9a2c-dbe4fa22f61a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #473 b5e5853c-b844-42cd-bcfa-bc187508a783)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #473 f683884f-4749-4f59-836a-4f2fcae446b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 84059a27-3963-442f-97aa-3e8181afb164)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 55dd041f-7928-4fb4-89a0-a2d67ea9bc91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 cfcbcf31-aa0c-4015-a4b6-5ecc8cf716d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 db3f1c84-8d79-48eb-a598-79721cda3b3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 e5f19775-665b-46ec-80bc-f686e4e9cb82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 37fb74d5-8811-4730-b041-5f8e628ed4fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #474 d9f9629f-5e3f-4656-a80a-d1ada50ad4a0)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #474 edbeabe8-9b6c-4c6b-8fd0-2300c1b32ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 80825eb0-740a-4f53-b42e-38348353a254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 8d34130f-8f81-4db4-90f9-d1cb6c3e9abe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 6ea4bbc0-7888-43dc-9c94-9a77c4e31fca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 299d537e-5d3e-4c9c-8402-7183c85ac513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 1d36d197-5f73-48dc-921f-0ba3a4dd5da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 a34dd514-535a-45ef-a35e-c167d9b95ea8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #475 d0916dba-ee3e-4f0b-96f0-6640184ece9c)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #475 5324c5ba-2af9-49be-b388-0e015edcfc35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 3984fc27-f470-4b4e-a2b9-68721fae212f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 d87635cc-3d00-45e3-b0a1-43037cda699a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 a876a34b-cfa0-46db-9519-9060478d03e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 14f03b75-47f5-4a5b-84f7-215e17f47aa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 7de4edd0-f44c-43dc-8e79-fe8bc47f6e45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 9402269c-e6a1-450e-8ba2-44d48afeb42e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #476 7a1b4b07-2dc5-437a-8de8-d508c2314569)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #476 d125770e-9a8b-4d99-9b68-b7e86009157d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 021d8033-40cd-4e36-8663-cf3321710310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 ace72e30-133f-49f9-b16a-11f9080097d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 242c7644-cb67-4eb2-b624-775458a5d125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 b7362dd0-f6d9-447f-be00-e8e3010a4a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 ffb9ae17-37ec-4db2-aae8-110951d2cd97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 b7873b93-9876-4a93-95bf-ddec8cb054c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #477 ff37631c-1bc8-4d09-b134-2d8ee1415de9)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #477 23e0c6ca-fddc-4002-9c4c-2f9b26439d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 7b916752-6bf7-48cd-853b-6ed0d2eb126c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 c8654fbd-0ff0-4599-acbc-9c918e958e7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 c2479e06-fc33-41f8-bfff-e815d232ca0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 be68feb3-5d1b-4ac6-99a3-ca065dcdd290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 c41b0b7d-d9c1-408c-a24f-cb4d8416602b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 c373e3ae-6296-4a9f-969d-fb5a343c9c97)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #478 b822d72f-ba30-4d71-81c5-89faf1be8ca6)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #478 62ecf779-ab51-4ebb-88ec-3a720755305a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 62dd321e-97d2-48db-9734-00eb119eb4a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 d3dae081-7eb9-4b13-8afe-5a6d7173e915)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 8e836a42-9ffe-40ac-b789-4c76822b001b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 ca46134d-deb8-4ddf-a7a3-02bef75ece4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 1c34836f-0b99-48b0-bf8a-885ff43f3a83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 bc8b7ec8-b8ae-48c0-9635-d73ce124b8f1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #479 8956ef55-8157-4b58-9498-75f051758074)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #479 bf228ba5-33fe-4102-ac79-cef29aef731b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 91f9347f-c171-430d-bb03-336e89856203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 ad51a0fa-db69-4a81-900e-563ff802e346)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 7cab70da-9f88-421e-8d00-da37232de207)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 5c35a4e2-b32e-4c87-b01f-e1f5265d28c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 ac007ac0-a08e-4b0f-8ad6-1e176c6c0846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 f1607bc8-91e8-416a-8339-538723c60f6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #480 77335c0e-125e-46db-a276-210c8ce4d62a)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #480 105ce3ab-7cd4-4e4d-b303-353f25b4f8e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 08147a5a-1d29-4774-bd17-df0a66b35062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 1a9b9bf1-5863-4ae7-a7a4-7bfd43d26b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 59d4a74d-ef22-4afd-9d50-5bad23a65385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 324b5091-6ef1-45ba-9d53-f8e0951e66a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 2171ea2d-05cb-4708-9515-4ddb681d91e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 62aed571-eb50-4b81-84bd-422187142cd2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #481 d463b4d9-bde1-4d9c-9c3d-927675004205)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #481 437f24a1-a801-4b57-ba07-9ee311ed80c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 53565a64-da6b-4da8-b849-9584365e9422)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 1ff97ab9-4eb6-45a7-9577-42bc6fe3a255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 f5ed1706-5ba9-4ab6-95d7-21beeccb83f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 d1206345-9fc1-495f-b53b-e3d9a13c9b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 48b6d477-4b3d-4f66-b706-cced74a183e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 91b244bc-b5fb-463a-8072-e55dc19accad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #482 73f1c275-5416-4963-8571-77ae605402a4)");
unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #482 49a81573-e6c4-4752-9e7f-4474d9ed85d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 d497f262-8bd2-4e88-b03b-9145d028799b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 6e7a57c2-cc2e-4828-8fd2-9a9340cc27b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 f9f0fcd9-1d93-4ca1-92c0-5de79995e46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 c9dbff24-95cf-4c64-ab81-0e3e94396dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 9a2e554b-208b-4c9a-9c07-26bc80e6155d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 fe317ee6-3881-41d7-8546-9af217fec3eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #483 9df1ce55-c7fc-4124-9808-7a1815486c67)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #483 5ebab323-2b3f-4057-a594-5a25ca8bc991)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 3240a224-1e5a-45d7-92bc-72480333fe48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 de3ab913-e1ba-4122-83a8-5ea510adb42b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 6daf9497-0543-4187-8797-799315169602)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 d48fdfa3-ed94-4757-8793-3c2b916d3817)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 e15bc26f-59e5-42a6-8116-2ff49d0e5b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 e73d1ae7-dc05-4b9e-aa0c-fc93daf39c8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #484 1f95e2db-cf50-411a-96b4-f4216f288fdf)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #484 7e4674bf-b49b-4dcf-8175-a9cc0f5510c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 d0e037d6-eaa9-4e1c-8ff3-f390fe00b151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 a5354ed8-7618-4282-aa3d-c837ae936fee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 8b5df6dc-3e6c-4c33-97ef-b1575af4e616)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 f4f08a53-4a61-47fb-af3f-36121d2a6b16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 cf1ddd76-7d7f-4a32-ac64-87b1616da03e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 690163ae-6f0a-4f79-9ac6-eece72b9384b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #485 d49f4af6-6fb5-424b-9567-612835e7eaa4)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #485 5ef1973c-3dea-4fb0-a884-bb163daf9e0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 1dfaff1a-b82f-4116-9f8d-237dd2ae8fab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 4f4610e8-50a9-4806-a97c-7acc2ab7d790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 451c8e0f-438f-4b4d-b889-d8998efc2dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 8c7ec7dc-89da-4712-b765-5e283b069127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 c60c8f78-46fb-4102-b285-4e3b8d3d1f1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 fc88cb23-6144-4c32-8351-d5fe25f00675)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #486 a9bdf42e-6db7-4865-96bf-84cc90f7ab50)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #486 3c97062b-5217-42e1-a4fe-3eae61ac9472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 fcf59e1a-2a8d-4a3a-980f-40d54fe38394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 3ba90d37-703c-4ae6-84ed-d78ab26c51f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 3298c597-7ca4-446a-bf25-81736145d06b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 87c42b5d-0fbc-44d8-8756-38dc4094a025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 8db9c562-af2a-454a-b4ab-7cc7690912ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 1401f1cc-5a15-4632-a852-80dcfe87e602)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #487 47f16773-de32-4af0-ad4c-7aadcffa286a)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #487 303c2799-3757-4e19-8ae3-48115a68541d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 5f663e02-d59f-4658-b053-3185257cea7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 ba31b9dc-3f25-411e-bfa2-565e4e090968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 c6c05357-7b31-4958-86c8-bb59da97d0b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 9c4e30a7-d38f-4630-a121-1a3135adf7e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 b3e70976-9574-4785-b2c0-f9fbdd1c720c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 d306d05a-39b9-4326-bef1-9803d61972f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #488 869fd3f5-da40-4d10-a33d-fc02649ac4b8)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #488 49d1faed-c90f-40a3-8456-82edad8a0530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 7eccf319-8c9a-4ac4-9f3e-3be2d9e92042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 95ca257f-1134-408b-a141-9c76c3e8cdbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 6f6cc971-18f6-462c-b2b8-1467c7f9595b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 c446d2e1-0220-46eb-9178-2f0507b6bf34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 68b2d1b9-52a1-4c1d-a338-fdf9b24531f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 5bfeed20-7d98-4bf2-88ad-57fb7eb67fbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #489 d489574e-126e-4d99-bf3f-4589b4a83371)");
unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #489 fc539e88-1075-452a-be64-49f0a95ef090)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 8c531448-bc36-4355-9173-d665bde20be5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 1c8a886a-ac65-4307-9026-c58f31bfe4df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 7c810277-5431-46b5-a338-d9198ec53a27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 1e66e985-ab69-4b27-bf8a-4e96c8e99638)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 37381373-89ce-4aea-99cb-3b672784048c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 685b59fd-fe67-46e0-93f3-fe8af06ea7ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #490 76536e15-44e0-4d66-a9d4-71c80577f9f0)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #490 d3499c3b-d639-4235-b41f-5a8074afa871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 9687db54-ca51-4d85-ab98-e3cc1561664a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 73b40393-0f35-4bda-a790-69ff7a1cfe2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 cb37c5ff-637d-427c-a7a9-271a009f2856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 4f15b746-3692-4f5b-ad91-684b8da746e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 db7d111b-7649-4b29-8f7f-907c9d1fc97b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 e99f2b1c-0ca6-4cd9-b1c3-cfd600edfb04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #491 67cbc3dc-86db-45d2-ac03-c132759b3032)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #491 7fb33a40-b960-4982-805c-4a2bcd8ad045)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 1226f18b-2ef4-4f7a-ad04-15e19f1923e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 504aa88e-9926-4f0e-82f9-cbfd10d97826)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 7d09ad22-856d-4560-a143-e26ab55f3f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 530d5d81-1e71-4fc1-afaa-ef46fb8892fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 93827e4b-ef5d-49bc-a4f0-63080438eb44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 9dfe0f23-d87a-4d1c-b6c8-12cb00991a26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #492 9a84bf48-5938-451b-b227-2705accbc409)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #492 cb3fa020-7b67-4ada-801d-811001695655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 5aeb6813-e756-4b16-b677-52eec353c3c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 20d9e4d7-134a-4ea9-bcc4-33444245c118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 1c877917-cf53-449e-9e46-ab9460c0c4d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 0bc53cd9-ca3a-444b-960c-ac9edacc2f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 0545a980-7efc-465b-b9c0-0bcf774b84df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 7b18ec93-5aa7-44aa-9638-cbe7d4d3aa1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #493 53aa6855-5da6-48fe-aa05-1b4b30bcfdfd)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #493 4f25a145-58bb-471c-b630-0e6234b37c2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 f9bc3636-2e5b-457e-8264-b5a1acfde6b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 63f2da2f-8d82-4b6d-88c6-94c0be68fa07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 7a27d8d3-f0da-4712-b936-a9ea1831bc02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 2f2d4cc0-c262-4c12-b763-6851785c45c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 c6ab18cd-73c2-488c-aec2-aae92512e838)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 d607d8f3-5cbc-431c-82e9-a6043bb6ccce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #494 bb4b3b21-505e-4556-97a7-e7cd86aa2fab)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #494 2727489c-470e-4d7d-a160-30549e653f9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 ca20bc6a-de48-4a46-90f5-e66871457d76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 f9182bba-d730-4fcd-89cb-12819c00ef9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 01c0faf4-e14c-4dd1-940d-d097b72a57b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 90ff275e-0ca5-4d2d-82c6-fbbe6992760d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 6fc5f121-70f3-42e8-82d2-3cf49ebf39ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 7c630e64-ec67-4927-afb1-0ab346cecda9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #495 38a7a46b-32b2-4f9e-bea8-da742f746525)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #495 c6c3829f-986a-455c-93e0-9f45d82a409a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 498f8fea-4591-44f6-a04a-32590639559b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 81f13e8a-dd78-44a5-979c-37bb4c2fac71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 d6a66ef1-ecbe-4542-9c71-1b83814914ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 771309e3-654c-4d43-9bbc-b3d23a41aa5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 a31f7c46-d657-496f-b051-c5c0061e8729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 dee8380f-3bf8-467f-839a-1f5c83b3e7d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #496 865f9428-59fc-4fb8-9167-0e86b9ad8858)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #496 8b0e3328-0027-4e9d-b0cd-dd8e7af3fb33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 246d2407-0855-4c2a-9521-486f05afade3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 3f2a359a-429b-4cf7-b8ce-344229249718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 0aed14cb-0ea5-4f7f-8804-c3fbd411d961)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 2cdcac33-bec2-4379-a5c8-fe0d9116338d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 97c6e3a7-00bd-47cf-a8cf-13b18715f943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 922f60fa-198e-4807-899d-5b5b3568a327)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #497 9e67d939-f9d2-4392-b24d-bf9772bb8f99)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #497 619ad1b6-d789-4be5-9c46-bbfdccc5cbb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 52d18a6c-e5fd-43ce-bb2e-f550e9aeddb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 1af4d8ef-170b-4ee0-86f5-f4d8ff38d01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 ffb7c5da-5638-49a2-9247-45a60661e3ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 2492aa33-d1a0-41a7-b4b8-448e5d5d0af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 aaa1c0a1-5824-45cc-a947-560be9635659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 7d730b5d-a67a-43da-b357-0e143b2321c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #498 91f405ea-dfb6-4667-9cad-234d00d2fe95)");
unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #498 8b0d1d25-a72c-4a25-8211-758a0487fa99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 4b920f23-c19d-4f32-82fd-00225fca30e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 368208ce-ffe4-469b-a991-355f394fa898)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 1c584637-fec7-4df1-9e58-7056b2911ab5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 85e84d52-c973-48f0-94b1-c5c2b5caecc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 e03384d6-8c6d-44aa-91c5-6c00fd9d8ea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 12535b19-cd77-4f33-846a-a0936b6f376f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #499 e3d86c3a-e0ef-4612-97c0-751ea4b004d8)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #499 6f9ee140-a0b1-4a66-9da5-382bf4768fd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 126939e5-818d-4c85-8722-718eb753815d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 c5a57999-2147-4f3c-9647-0d33a5cfa152)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 62ba23b0-6d0b-400f-9d2e-e5de19722bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 280a990e-a4d3-484b-9bfb-9573539c2ade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 771ea821-fc64-468b-9b6d-1697ab8d73cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 afb843eb-6c23-4afc-b379-966f7b3b9140)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #500 0c60f268-9fd8-424d-ba1b-ebd784a40c78)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #500 bf9c1971-9196-4847-aee6-d8eeb09b3438)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 121bdf32-55b2-4a01-8073-8275aee25ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 e253ddd1-b5c4-47b4-b554-925dea8eb0e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 0dd15543-32c8-4544-aa34-f360ee9b5941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 2acb9e22-73f4-4b31-a934-a65af7cd6a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 d1ad8dbe-4430-4332-be1d-28bd1c9500d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 01da72f9-bc30-422f-b0d4-0ddcccb5029f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #501 eb129da7-87b6-422a-ae9a-454595ecd1e5)");
unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #501 4b240589-df34-4c44-b866-72ce3b55b775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 1c82ffb9-6bcc-4a3c-857b-237ffde2d7d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 f8469e33-e44e-4769-944a-f814b84d9adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 7ac885dc-cce5-4989-95a6-816d4359fb52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 e9694d30-1721-4423-9629-273cd35bbca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 ba5be0d3-60ef-43b0-b880-2ef8dba58f77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 d565a012-c3b8-437f-92f2-621700ede28c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #502 63ce35a3-cd5a-4fe9-b9ce-69cecca568d7)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #502 52d23817-2517-43a9-9f39-c6d0fc26ae93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 85ff63c4-9186-4f59-999a-99f09b0f70ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 700d4259-bcbf-42a6-8912-61d33ad8db81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 54af8955-a693-4f74-b4db-1be0e8f4da8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 1c3b315b-5e74-4f56-8a25-eef3ebb6eee3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 5953c4ae-3e44-4108-90ae-860ae5ad0b4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 58935c3a-dc43-4974-a69c-1d8dbf4f96c8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #503 e46828d7-4663-4cb0-ae3b-0cc3949d04d2)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #503 7dc3f40f-e6d1-469a-9460-4b807339ab82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 daf81c25-78aa-4404-ab7e-780d5b2f99ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 e816ff6d-17b6-4d2e-b5cf-d7010b471d2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 c2f67a26-7d84-4727-ac7c-7b98ea54bae2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 69c357b8-05bd-4c13-b6c4-8a676db1c53e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 09b2fbe3-74c5-426c-8c6c-c876ca2859bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 cebfbebd-cb39-4f39-ad96-7dc8f8cbc015)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #504 197a186f-6042-494e-abf7-a1f43387eb23)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #504 d864fa70-e74b-4405-9c1c-51bf42993b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 05ebc710-8a27-492f-9c86-54c7798b678f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 b8efa483-08a3-409f-ae42-d224402d47ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 5b2ada20-0246-46d9-99ab-3be5ded60dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 08daf0c6-c083-45d1-aaa6-908aa500dec9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 8f5bc170-c2dd-4bdf-a5a6-2ac8b1b65a4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 1ba7c14b-7b8f-448b-9828-3ecd051bc6db)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #505 65436769-d8a1-4ab4-99f5-397ae06953fb)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #505 aa8d4b6c-0d60-4676-8979-435e53df06eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 08bc5cf2-6b7a-4ae0-a34c-d72f1dea6b03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 fcbc9d4b-1e77-47c8-aa47-963412b70f3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 ee614b8f-8650-4605-830e-94d9e72bc4c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 ea608b5e-1bd2-4e18-8d7e-f51ad0860ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 0e227568-67c4-4eb3-8757-6530970ed112)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 71d535b6-2644-4571-8287-3e1ef6d97e3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #506 40d42337-f47e-4a81-a402-a9d0c1055a74)");
unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #506 75f80c49-ca99-4c86-9f0e-e99a32950078)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 6268378b-c6b3-42f5-a513-18ad8ddcfa0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 b94cd36a-aa99-46f6-bd19-5bc58b9c942b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 6562c22e-1cce-4724-9f3f-c76313ab0867)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 38c817ff-8bad-46a2-ad39-e3d1eb119960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 cc3b215d-344a-49f5-8391-8af615204fff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 4ef91449-676a-4b28-ade5-471c6183f5a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #507 5ffbcbaf-b8bc-4bc8-a436-5e0cdd54362d)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #507 9e19fe2a-ca36-49f1-9773-82b82ab69d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 db188417-ce25-474d-baf2-3d0a05bd6344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 7b342a09-cf9a-4276-a62d-1f54d2772326)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 39512f29-89b5-417d-bbb8-4959bc00cdb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 c7507f17-49bb-48d6-956d-b6821acfdaa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 0c99481d-3d10-4e19-afe8-76f894f4592a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 309f0865-5137-4291-8f2c-8e84e96cfef4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #508 4b99e60b-8800-4d20-8be0-a1d49089890e)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #508 841e7639-beac-4f40-b36a-55577a9c2767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 bd446f60-7fcc-4352-a825-b642ed3e7f41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 2b62a79a-7fb2-4ef2-aebf-5f2fca053958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 d45a846a-ed90-45ba-8913-bbb0bd9a7cff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 57367a0b-d32d-4dca-ae1c-75cbfaaa0a9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 736440a4-c918-4c82-a6a8-9f45c3b5a5e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 ef2a02e5-1011-4770-9681-0b4bce95617b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #509 18d053a9-b01a-4aaa-b7f8-d5481fa790dc)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #509 e07a590c-c482-40c6-b14c-18051b57a376)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 9505b041-b4f3-4d6e-b9ac-50299b96624c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 efd8c9a8-a00d-43bd-ace6-290c5badc859)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 4a96c63b-90a6-484b-bde1-49da7ce22d84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 0341eee6-a80d-450d-9486-b1a8579e9680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 85e06902-b37e-40a2-9cd3-48cf19d829ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 664a49da-b622-4816-9f10-9ef42b91c7a7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #510 6717f4b7-20b1-4182-bd30-de17a2c0a7fe)");
unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #510 4ac5cf40-e26a-4249-ac35-e192e27e14de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 985bba8b-cd19-4ec1-a7c4-9e42f154f25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 9102ee2a-371b-48c8-976e-3d4a3ed08b3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 7f6264bf-556d-4f06-b18a-2ef34277c06c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 7de6f234-3f52-446b-a4fa-38dd05d730d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 fdbcb76c-e3b7-496d-be16-07b03f5c7920)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 e722a14e-44e3-4def-b15b-467206584938)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #511 c057c454-462c-4f4b-812e-1b4be57844f7)");
unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #511 d6fb37f5-3d81-4bd1-95d2-7e4295a77493)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 c8c6910d-5efc-4405-8432-d83e6eb62dea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 ba064c1b-7910-4ed2-83d3-544706f361de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 547f6746-e279-4763-af10-2ff447ab38de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 76642825-32ac-4193-aa04-77e818e745e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 c9945495-964a-4258-b879-07806f61664a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 b8f6a462-49da-4d9c-80c8-1f51a4ebd06d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #512 e061584f-1a89-4d9f-b5f0-39b52f8eaca6)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #512 5f588db4-d466-4ae8-ab6e-c83dd22c8cc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 51388494-ebca-4b6f-b774-78236441eb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 a0d6a208-5382-4ef5-b79f-41fdb77bc882)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 acebe011-11a8-4b2a-a1a4-cd788a9dadad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 6daac443-88e4-4a7f-8de8-0e6355d50b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 233dcb6a-c536-40de-a9bc-ee92cc87db6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 12b09998-f44b-41cf-9255-c64d07a5559d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #513 9d9530db-1a00-4bd7-a666-cd0cee580ccb)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #513 d78433b3-2a50-40f6-9b89-321574acdc10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 2360f473-6a72-4f52-ab14-7315273aec27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 d1604c02-a70d-4610-b200-e1a5fcdfa206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 384aa21b-9ef0-43f3-86e7-ec4147ddd0e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 89a7f84c-642e-4702-9a02-9c42757dac2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 4cec26e5-a409-4721-ae6a-bba2364fd42c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 521bafea-2aaf-47cc-ada4-6c6846c34f34)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #514 9d4e39f6-095b-49c4-b53f-78fe2528c2a5)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #514 85242485-6e10-457e-92bd-88bc587790ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 8bdcdce7-b83e-4760-a4d6-104de073a6e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 25d25cb0-6148-47ec-af19-f8bbc0694ff8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 1a1db6c1-257c-4d6f-9c5d-3926efb883bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 6167aabd-36d6-49dd-99e0-5f05315cf8ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 8d59ea2c-e433-47dd-ad89-634abfc0b6e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 a80b1db6-d00b-4205-ad17-0a0900e693d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #515 12123817-2a90-4460-93e9-0d41d47318f9)");
unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #515 288119f2-cbc7-4b24-85cd-595d5ef339ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 423a4565-4fcb-4367-b9c6-858829d2d126)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 4394e147-16f1-47f7-8731-75cc3e211543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 1fdac2d8-8c85-4f3e-97bc-21611d15f9a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 be61ee24-e5ab-4b28-b8db-25f39586cf36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 3d1ae428-3d2c-403d-a3c4-d5462a952fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 8a946af3-b35a-4045-8270-471f60d65b84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #516 d6a41e44-81f4-4af1-ac12-4432cdc65807)");
unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #516 c512afec-0933-49a0-8dc1-29a55945db27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 599660db-16f2-4453-9411-7130105c1ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 8d1c137d-3b46-4673-8ce1-f364ee0f2332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 de652ab0-bffc-4fb3-9512-e0606084228b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 a4c6210c-a01c-415c-89e8-fae137cb08aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 362f740c-bdd5-4964-bec4-7e405fd276d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 cd1c1b72-cfbd-4b85-bdfd-ff6fe3b05b26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #517 aec00aa7-bacd-46a1-aef0-eed3acb572f3)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #517 d48ec715-41b8-4ecb-9d93-9934c57cc0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 cbb47485-6c48-4389-b61e-db93d628550d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 799b541d-86c9-4dc9-a4d6-e53e6d2a381f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 95009825-2f1b-43ad-8345-6759c67914ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 3738eaa4-2079-4e51-b5eb-9887431a20ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 b52ee1f1-c68c-4367-a5aa-4ed0264f8197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 7cbda59f-d8f7-4ea1-a650-713fa7da8153)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #518 971234d1-6b6a-4b6f-93d1-5ba5a97db901)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #518 b94f1238-4d58-45f5-872c-380e2ff968af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 423177a5-397a-4d2c-8911-28495119eb4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 a723ae73-b570-4359-ba55-fc42698f10fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 a9adc6e2-3fed-479d-b981-b9e8b5634a33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 974b9d5a-e8cb-4cde-9878-604c6d07ce0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 02362374-eeb9-4685-96ca-a4407dbe8aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 93a2eabd-c13f-454f-9679-b918abb52052)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #519 b08f7ffe-e052-4f04-960f-860402d7cc15)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #519 a19659a4-0d37-42ff-9881-be91f940fc0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 911e22b9-e0e2-43e3-a7b4-ec3f529ec89e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 b21b8d08-b1f1-4e00-8232-bb1cce08f238)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 8b2323fe-40ef-4248-adf4-3897801ceef3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 5ea86982-26ed-44e5-b7fd-6cbd273c3563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 fcf572ad-37fa-4fcd-9043-9034d0997063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 a1e24fc3-a3d0-4f03-8912-a1fdf19458aa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #520 a4456428-6351-4c77-830c-18d8a559d170)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #520 7c8c7fed-3cee-4380-a8d3-c4182e9100e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 57349ba4-9fa5-4f33-bbde-c996d392f38c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 68ccb239-90fd-4ee1-b092-91af2cf33ef1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 e0d6972a-c2dd-4a0c-aedd-fcf61cd8e2fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 82392209-ed74-460f-bb94-3cd9c1a556ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 f7a25a6b-ca94-4d78-81ee-79e271305fb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 68cc9d6f-2908-4e78-b249-e516c1acadd8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #521 8a9d1363-387d-4fe5-84b2-aba4767f5c2e)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #521 f3c7b255-095d-49d6-9e2f-2a97c3665e56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 3bfa8879-1897-4106-af9f-56db7cd24e49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 6692fd7a-7733-43ab-a7e9-6909d3d90f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 70173a93-c0cf-4d26-9aed-d08cc8a04469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 9a7f9ae4-9e14-4700-b3a6-63c0208b7591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 9d37ac55-4a9c-4b7f-bf3c-415c3e13c2d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 6e1b73c8-4bee-4122-b02b-c479d9d2ae4f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #522 1610a18d-bcd8-4d92-b110-dc60cc1494a1)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #522 c39a6aca-57cf-40af-81a8-0c5bf2229471)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 74f07a78-129c-47c9-b4d1-299b9451b53c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 abcd4ca1-fd77-4f2c-a757-d4320db5b3f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 c88b7f38-038d-4820-a025-9ab3a9a14645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 501769a8-cb33-4a3a-8245-005854526892)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 7cbd4433-bb33-486a-9366-4fd3ec96fd62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 50231d04-797e-4af7-8083-d647f87c8056)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #523 be61394b-d373-45d5-8495-e0d0cea832b3)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #523 295e9d97-2891-4d3f-8637-f25682e3f1c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 a19a85d1-6cc8-47b8-8329-a807b6db425d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 9721cec8-dc06-4da6-a4ef-3d6fbdddbf04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 145942f9-618a-48f6-b9a2-c67562330aa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 37ad8032-8168-45bb-a0c8-dbcfc89f2610)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 2acbf955-dff3-4397-8340-aee6c547af63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 f5e2e657-f7d8-4081-8e97-776ac99c2cf4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #524 ec3475f3-aa0a-4fe5-a633-d694a5fcc194)");
unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #524 79a97a48-0c71-4d93-86c0-d5ace8fb8c7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 9c488fea-8386-45a6-9e79-9dc2217c934c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 1aaa012f-b8f3-418a-8eee-ea3216425bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 5d3a98e7-a1d6-4370-91f8-0406822b8597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 db552051-ffb0-40f5-b841-59be7f7b9df6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 bfe8413e-0665-40d9-b72e-8c1905dc6427)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 416acbf0-af3f-418e-9e2e-c53aecea0c8e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #525 51cad6f1-ebf0-4da4-a112-0c848d693a1b)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #525 ec367924-9a15-439a-82b4-4e560726ba14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 73291053-37be-4b3c-8b6f-643eff8401b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 87e2fbf3-ef3c-4414-90c2-935767262f01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 f1aa0574-affd-445f-ae47-a018ea9b5ad3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 a10b5079-3985-4c69-82a0-a9a4ba60df1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 83b4f802-ae32-43f5-85a0-7c2cae8f01ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 77ab5eba-6dfd-456a-8333-3a0488ff6598)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #526 aed19791-d59c-4d8c-a2d6-3fc7019756ac)");
unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #526 121b5b66-3983-40a4-931f-bd044c419161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 255cbd1d-aedd-409a-9dc1-b35fd93042cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 87284164-393a-47ba-b331-46a623766484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 700195c2-7d6c-4e56-a3c4-4088b2e5ca41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 81bd6e2e-d2d0-4a37-b1d6-760deeae25b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 fd511296-8fd2-4054-a97e-fffe0c66364e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 1dfc397a-0f52-43d1-bd6e-a25f3a25f40c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #527 67a65d15-799c-4be3-a9ee-7aa59c7b5592)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #527 ef79d158-1951-45fc-ac98-de734f46d3b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 dc8f0c06-f2a0-4ef3-9a6a-efc6fb82aea4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 dade6dc5-4927-4882-9d67-6bfb0d9e3682)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 4bc3470d-1ab3-490a-9c97-005766df8fa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 068b02cd-01b9-4af3-981b-9a2668f3b690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 c3d2de55-a841-437f-94b8-b55b90463ba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 2d1bfc73-632d-4f9f-b0be-3992508e4ead)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #528 181ce12c-e8b8-4759-82f5-5acd133413ec)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #528 d754ae84-956a-48f5-b19e-f7f53c489f4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 51cf180a-398a-4099-af20-0cfed64a411d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 e8034b46-f06b-40d7-b2d4-afc5869d8451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 6045f068-abe2-48f8-acfb-7748fd509096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 837edfb3-e024-4385-9c26-b0c19a3a72fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 b49074b7-3f35-4a85-9b71-e7dc40b5f70f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 8b9556ee-cae4-4e2c-9eed-d0a7ab5084c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #529 2b8ff887-c9a8-404b-8d7b-92324fffdbe4)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #529 8b3805c7-f605-451b-90c8-bbc89f1025b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 a7574773-d144-45bf-91b1-a072c45e4608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 3c277fe8-0268-4116-888d-26482cbfee88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 923f34e6-1c2d-4c9a-8af6-aff53dca025f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 744a99e9-8a72-4121-b14c-de032ba9f415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 3bec6d37-8156-4099-97b1-c2a5a39f8a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 fe2153f6-3a4c-43c8-af73-b05af22c4f8d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #530 76074dab-4ff2-4002-8222-5f6a27a61fe2)");
unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #530 8e4add06-7b3c-4e25-bd7c-bf80fb6f7198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 35e4ab6c-1e13-4734-b36d-87e83f44c306)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 0e7093d4-b700-45cc-a215-f8f8434cbe77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 5bdd34e5-bea1-4436-9f68-298d499c00d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 e363f279-4c68-4a45-99dc-b8d78705e841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 1c2b0787-dd7c-4e57-a259-96881eff2f47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 4f5caa57-4da0-4941-8283-ef1c8be1c4bf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #531 8bb5a5f8-1aae-41b6-a77c-ef74b4aef3e2)");
unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #531 874460f8-6ddf-42ee-9724-d7b967b4cec2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 078b81d2-31a4-4216-9ad0-b658c415a961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 4643ec4e-4b71-45dd-a8ef-94429227a2ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 66579336-fff5-42ff-b89b-db775bc9b2d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 6fe45099-e04f-41d6-9833-4b43b7d99e4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 9df9cda4-ae9b-4f36-afe1-7d5962491da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 2eb9ec89-22c9-41f1-911e-44eee376de44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #532 03a58ed5-60f6-46b6-9209-0e6fe72ba804)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #532 156b76ce-a1f9-499a-abcd-502ed68cda77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 62aa4720-cbd2-4455-9fe0-ff92e8c62c96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 2370374a-233b-45b3-9144-54c27f5093c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 0c41a079-6f50-4936-a4f7-d3439aa9e5dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 0d1f38bd-3779-4097-9977-3e44b48eb62d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 5c27f1a9-9673-491f-949f-799a66652421)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 f4bc101c-6a5e-4ede-ae21-f96fb272dd7b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #533 13da0f65-e46b-4447-8590-38ec541679cc)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #533 a4a9573b-ac15-43a9-b1b8-147702d8459f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 66eae45e-1177-46a0-bea3-db7080a39d27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 0c4ed32f-09c1-475c-acdb-045604a7cea1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 434aa16f-58fc-4c32-984e-dde90c79c49d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 929c2dbe-48a6-4bf8-99a8-c60e7368db1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 2f2051af-3715-47e3-84e3-019c11ff8037)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 05b6b92f-fcab-410b-9b16-e2b8500f325a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq8(8'h12, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #534 9a7fc1a3-5f8e-4d5a-92fa-94817dc518b5)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #534 6541a14e-4163-4ccc-a609-be6d9ac90f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 a800ea54-db73-4245-8dd0-ebf466e41c44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 9145324b-606e-45cb-aa2b-f457fba278c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 8d59f441-8bf3-4d78-a035-f6b1f99698b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 e5955523-3575-474c-8179-b17da6424954)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 16c25349-ee50-4b66-afc2-85f61221237b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 9a1a4b37-a6b2-4388-91e2-372b0d12fa0d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #535 7d340b29-b780-4d19-943d-1c312c8af2ee)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #535 889ebad2-aacb-4477-abb0-b337cedf4571)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 57525b7c-cc75-44a6-8bf0-16d5bf918eac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 5f2a8d30-8306-4cea-8f48-a014f49f0ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 2d9e4053-1d99-4622-97a6-215f190fbaaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 17df4db2-641d-440a-b939-fe0b0a055761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 594b1af8-0a73-4888-a7ad-0bd40630a565)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 077a9655-c256-45c6-8117-a762d9e53b38)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #536 5020d991-bc48-48e8-954f-441ce22ec096)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #536 db9e9f34-144c-4680-a3c5-7367eb8ba097)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 3f8ae395-0851-4da4-b3ea-bcd21bf3346d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 7ad59dcd-2008-4dd6-b440-5d13a988158a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 365b1c8d-7dfe-4e18-8b0b-9c8eaabcc44b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 f827db0a-a6a2-4041-b95f-e58139e4464b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 3ed5e297-2caf-46e9-9525-74d2104c0bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 b9f166bf-f234-411b-99b7-a1c06ba6c8c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #537 2cef4e60-ce30-4c19-8d84-e9c77d3b9157)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #537 e92e71a9-0658-432a-b8b5-179b9efe0f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 4dcb46d1-a03f-47c9-9e31-0132c5032e8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 de1867a0-0349-46cf-874a-30a333515132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 764c9478-49a5-4423-bdbb-cc7d893c1e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 0d274c4b-a636-4faa-a515-4497247bb64a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 994016a3-a8f2-4f2b-b8e2-49e5abc21770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 5c8bf79d-5b3d-4d64-97c3-9cdec055fb84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #538 4914ad03-dd80-484f-a42a-542ff714c2f0)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #538 f66c666d-2ba9-4c06-b16f-b7dcd80878a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 d5da2945-edcb-46aa-8025-772385082cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 f4c3dbaf-ac10-4511-8ab2-9237611a923d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 746ede04-83a5-4632-89df-93363168f71b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 3f9d2898-f878-4a08-a6c0-9145cdef5ad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 3cc3a368-5f04-4b1d-8c9d-ba0143690b21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 793ae4d9-74b9-4a19-a5fe-f7cf3ee0fce1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #539 3babb341-3b59-4f3b-87f5-a05d9c913041)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #539 cb5e0600-bdab-4011-9095-90841bdd8239)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 2b688bb9-9ba5-4d8f-81da-954165506a6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 a7cf3e01-4dfc-4ce9-ad3c-73825b2eb0b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 5f48c16c-5527-4656-a54a-4f47273bacd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 6e393ca9-9b94-4158-a144-6094c20d4ece)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 069543ed-532c-409e-beff-9afbd67e040d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 ea91a920-3804-47ce-acd9-37fdf8bb9a68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #540 c26f8046-9ac6-4cee-bf6c-cae3b9415550)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #540 9617d7b4-597d-4fc6-9089-8ce46cf66967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 3e098e58-1af1-4e46-9710-40b3b0d952fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 742046e1-d648-41cc-9c83-6a3fb0b9c21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 a47bd3ff-0081-4dd3-9b58-d058070a8fde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 d9aa831b-295b-4f50-9bf7-97dc639f280a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 7743a59a-ec66-473a-9b7c-cc3ced3c3259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 c5c9b9d2-5698-453e-b39b-5cecb90235d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #541 71894d71-0054-4a50-a5cd-a07f78577b9e)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #541 c4aa3a8b-74b5-4649-a0f2-fbbd7a7f414e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 a3a484c5-d267-4fd7-84dc-cf4e82691343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 441f1805-90e3-49e5-961d-0c1913317327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 ee29965b-231f-4643-9d16-ff2c3208c57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 44a93d00-494e-41d0-9f72-3d46474b6b12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 e75ffa7b-e978-41d8-8156-5a4f5484902b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 4c53f6e6-2b26-4307-bf87-811c458c2908)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #542 e2e7af59-2572-4dbf-86a8-ea126a9df72c)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #542 7c5cfd94-5a44-4cca-92a0-64d84f1bd968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 e0e2727f-92e2-4dc5-b0ad-dfc6e183878d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 559f1122-dd58-46f0-b404-2ba27a9dea15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 99ef5083-b032-4046-8502-6220d0f1d9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 786df720-ee63-4161-9139-17387a847931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 a53f30a1-4b7c-4fbe-bcf8-89e8afb6effe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 2ffd8060-90f8-49aa-bf89-839ea31cfac3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #543 9b3e66b1-4a33-4847-92d8-aa3628f5ea25)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #543 5ef02114-5165-456d-84dc-03352ba058b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 ac33e756-d8a9-4625-8e8a-eb01a79d8e91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 77eb07bb-4b04-4abf-97e7-e9717c434bee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 ca88dda9-411a-457a-b063-5db6928c7b12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 64c57712-be58-4737-8bcb-2e1248f8d60c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 e6aeaea4-f4ae-4b98-8e37-ac7235770edf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 d11004d1-8409-4d07-bd2e-332dd991825d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #544 74a8da65-67f8-47fc-ab0d-d7f16261ff51)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #544 e5c9f967-ffad-4a39-bbb4-6d8559e896c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 39f1f332-1b22-4eab-8396-79f6e919dbf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 556186f0-e17a-4774-8d02-d22b630d8b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 ffd16ed2-0fa6-4f65-a631-f4fc03092f0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 ba261de1-6ecf-4bb5-a59b-486d854bac82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 0618215e-e4d1-4692-bdb4-9bdc14e7aee0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 3c1d41fc-9809-475d-8103-a0e4873494eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #545 a4014420-b75b-443b-a0b3-96bb45208549)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #545 f4bc0926-b5d0-494e-a291-8777efc37a3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 11e8df45-e1c1-4f5d-ba76-e0f7197f452a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 edb5839a-1824-43b0-9595-ee566262de4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 ecbf8a2f-e413-466c-9e0f-6b1cdf0d62c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 f9b1816b-32cb-4aa8-ae34-de9d5487a1b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 406c6185-5afa-4b29-97bd-e7d8c65e3979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 353491c9-316e-452b-9c17-aef658415184)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #546 16acc44e-39b6-40bc-a548-7e5974c49ce1)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #546 bb152fb1-a426-4773-a1cf-c22a4ddaf0f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 94ae524e-e17f-4e93-8014-c0f27952d67e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 1bf7ccf8-93c7-43f3-a076-d90500fddf52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 3f71c598-8c82-4aac-9539-48ee9577a95f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 4925e2d9-8fda-42f8-9ed1-2fb886dc9ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 bf271489-a64c-464b-9d42-7326434fdc8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 cfcc95d0-b88f-4ab0-bc1e-6a19b7c011e3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #547 275d0319-7ab1-4402-9391-808e9d2e0ea5)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #547 88fd8c8f-f824-4253-acce-b276e49b5669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 24ce2271-4200-4848-b471-3bbdb64504cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 d0cd2602-7b14-4c16-b236-8d352b12dd38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 d0b6a7e2-ba1d-4a6e-a9eb-3eef714fd6c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 fac85c3d-faea-4580-827a-cbe6062210fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 87ee4077-79e7-4340-a3f2-55e9c319f447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 40aa6a09-545f-4b8b-a607-b00591206f72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #548 cddb9b9d-b7c4-47c8-b34e-79eff5b06450)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #548 e224855c-e8a7-4f9f-97dd-b2364b042602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 1f7f37ba-fead-431f-89fa-9eeadd3466f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 3fc2645d-e901-4b1b-b71a-aadd7dbc8cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 97ba9cf6-ae9e-4216-a78d-d4f6575623c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 1c6448ad-4fac-4083-bf12-593ee5a00db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 36b51997-f9e4-4d01-8381-35b756bccc7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 19008923-1761-43fd-8800-09362c5822b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq8(8'h74, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #549 62779daf-4d73-4349-b13e-7e622ef986ea)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #549 59e3edd4-3808-4302-b2fc-d66c215b2603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 dab52a11-a569-4322-a252-e53564cf8c48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 2d765bec-e901-4ded-8300-e9539a78bdf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 2416e359-46cd-4559-ba81-022ce117d316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 d875687d-c827-4665-a2f9-c83fc4f48c4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 76369f35-1fee-4929-8686-438cf2a475ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 dceaa0cc-e6cb-4e1e-b6aa-12f9135f77da)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #550 28ad0d4a-6a55-4f90-8d9f-157e37d057a8)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #550 8b8f8f7c-20f0-4994-af02-a543d6bb772a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 2db67e06-6bdd-4cf8-8f63-052aba524191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 0b9d35fd-7c9e-4ded-ae4b-96dc9d239802)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 e68bea80-0012-4c60-a021-756edd7c76cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 146e3858-81bf-4599-930b-cd0c853fc600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 807424a5-515f-441d-8736-e0cd9386f84a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 36700e5d-04ab-4b46-8f19-45bbd99dad13)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #551 ac7208b8-185b-47f4-bb81-fac91de25cfd)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #551 feca5f9f-5056-4b26-9956-ceaf3772a2d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 ac402e62-6d51-4710-a887-4d4733f0b7ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 fe83bd43-fd22-4032-b02b-5a4851f65d69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 82d92e10-4e71-45cc-ab79-1c008fb72c91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 a434b954-52a9-46e9-9b6b-04b0b772d99b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 e0a842e2-2161-4ae5-ac8a-b77b3ca9b6b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 fa9e131b-991d-46bd-8d7a-ecc40d9571f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #552 2190d773-5529-47fe-ad24-12dc72503416)");
unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #552 1ec638bf-508f-4750-afe4-6b49aff56cc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 ace827e6-8066-49d4-babb-3c9ac645b2e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 fb55e135-cda3-4870-b23a-f10aa5b050a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 d84d88b6-a123-4d60-a33c-fe74346a4a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 2b338bcb-d194-41d8-8572-0409f9e5b842)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 051114d8-3c8e-4307-a5b4-9094aa4360d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 e380e8c4-b1f4-416c-b70f-500f8c765d46)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #553 cd8f1928-7f5b-4946-beff-a5323de81cae)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #553 3133a941-95cb-4ddb-9493-dfa72d5663a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 e7995b98-6c3d-4e0b-8394-3df51c4f2fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 d6bc6a72-671d-4bee-91ad-ea1b2866409f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 8fe2ebe4-0294-4218-8c09-993d0f5119df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 afe14f96-3496-4de9-9f8a-7ad5fb805ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 f7a0f11b-82b6-4589-9b71-e665ea33a013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 1056e0d8-c885-4084-bf32-b719e6b714e5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #554 eb0b8f4d-38b0-48f0-9b77-6fad6a64fb2e)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #554 b82f9d1d-0589-4e19-9748-21db21950e98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 f50da570-2356-42ee-9fe1-198343239950)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 743316d1-a486-43f8-a03b-cb4822a8be16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 1815aa83-6004-4097-9aef-94658cb8bd0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 2eb19090-afbb-4a87-b633-4ba14f161dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 839824ac-5612-4397-ac48-028349664911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 76935864-2771-49cf-89f9-c38e6404f85f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #555 726de421-d58f-47b5-8db2-730e9e843a53)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #555 6f9f8f3b-e1f9-4a25-a2cc-e692d91a521c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 5de2068b-6f77-4e1b-a09e-222ae9aff385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 62836455-edf4-49a7-9b83-04079bbe29db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 fe7f7c99-179d-468d-b38b-7cad33114895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 6c200194-3c66-4986-a9bd-64d6f3a2d01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 6074c5ee-da65-45f9-921c-2612e712408e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 008db202-f7d5-4566-b775-c424d626a8ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #556 7aa5f561-aff3-4420-8955-f30ddff85182)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #556 1b477003-65c6-4cb0-97ba-d93981a1ec81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 804cf5a5-5b8c-42f9-aed1-3f8f9f83c136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 f5d76867-9d0a-42bb-9c58-76b3898d6c65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 3b7e2641-2e9d-488b-8ce5-4c60dc598224)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 779a1f25-d702-4db8-80eb-34ebb6bb8c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 55f9fe72-847d-468b-afb8-37b8a82a9af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 f8dbdbfb-7a49-489b-adb1-fa2a66f32acd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #557 b3381de9-1c8a-4baa-baed-681b6397f3d6)");
unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #557 1641a14a-e64e-4876-aeaf-2c2f9a095775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 f58f23a1-fc0d-40df-a987-5e6c55214197)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 f3ed23f3-ef6f-4611-8d7b-4ea1d3d230eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 30c8e794-1f5d-4ff4-8296-b1253af9b223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 04d2aa4b-600c-41ba-a036-44881d6f1b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 f201b5cd-782d-490f-b906-56acd9882c17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 5fbbb7a7-8c42-4ea7-9acd-99033ecc44fb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #558 4812de7d-7075-4b29-a138-5f647cbf759d)");
unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #558 532e1278-8c35-45c5-b1d6-0fcb4c962aa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 47798f36-b113-49bc-9507-e76e0147287e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 eab542e7-8088-4dfe-a307-673a5fbf9f9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 c2b327f9-836a-4141-9bb0-a32e612df1d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 457ff43f-f6d2-4321-b927-c3320a9f876d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 61097a8d-58ea-4857-8b7c-dcfeeddf9c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 13aa0e21-b1d5-4c4c-9781-fcad0dacc988)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #559 0352eaaa-b2ca-4ef3-a1a1-5bbf47d98925)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #559 e3ecacbb-a998-4f7e-97de-9048a61584d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 111409b8-5e9a-4d7b-a1ea-245c7904d04f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 d5fa690f-a2ca-4f20-b96a-666a07d8cef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 d0391735-cd11-4441-9542-f4f1062b3ace)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 b54887fd-60a5-49ef-81be-f230da6bd095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 471d6661-360f-4dea-9ee2-5b4ef2b6fc73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 7b963e90-b004-43b2-bcfb-bbc74304bcd5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #560 316dac97-4af3-4dd1-9687-20ce40b37fa2)");
unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #560 3da4a80a-bb81-4f47-8e53-95545e039096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 3456b4a4-855a-4d2f-9440-3f3eb896cba4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 7364ee0c-02f8-464f-b64b-d2ed8c9ff6f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 c318e106-f0fa-4ff1-a97d-a5d748824e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 98e89e21-2192-4089-867f-1dee91c4faa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 2c7fe229-3723-4047-89d3-56cfe50ea0be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 795b97b4-820c-4033-ab10-52320350f103)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #561 d9399655-a58c-41a2-9811-08caa92e8f11)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #561 423b045a-f57e-4b77-98b4-1a61beee73c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 6879e564-055b-4d5d-8699-5d622f692162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 0f93c978-e871-42a5-89f6-e0dc726d9f23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 30fe2f1c-90bb-4d09-a10e-ffe2bfae30d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 f953470c-40bf-478a-872b-829c6b9621c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 3371880b-1154-42dd-aee0-6a4c477cadd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 ebcbc73b-9f4f-4160-8d90-626b504df892)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #562 059ed519-e03c-484d-813a-c860241e9b33)");
unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #562 337410d6-b993-4745-b9a5-29b2e6cfead6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 512d31be-b7b5-49e9-80e3-c719e983209d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 204c3345-d159-4f98-a999-f8027d3ca8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 127ea200-2e60-4ef5-9e69-6ae9dafe4f9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 206ca70f-6885-481c-805b-ad5a90b1a932)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 f94ee38c-f93f-49f6-85c8-e429ba6e751c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 336f2022-7b9a-4c69-81e6-44e3bbcfcff1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #563 b2c51e69-ddd7-4a0a-b6f4-2dde26b5f919)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #563 ab4519ee-9bb7-4957-a254-0229a82fe057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 f99b6e6b-32a7-4ffa-b920-900773d9aa78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 ff242388-df4a-42a2-9347-8d1d0ca32259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 0939709a-0215-453e-8f69-6bbd160a2e42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 7d2e718b-f879-41fa-b006-69422ebd9496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 a6871586-7dcd-42d5-91ca-598584560a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 05d8a25c-e09b-448a-840c-af8140b9f209)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #564 66681114-ead4-4caf-aca3-d439ca4ae3ea)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #564 6957bf9c-bfe3-4bad-bec7-9b1e862555dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 94882cb1-d639-4c77-9323-ce84d62003d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 80579cd4-509e-47e4-a26c-d2addd8bfa89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 bf3e68f5-7db2-46e3-82d7-e040bc204f5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 3b22bf95-1eee-4412-a6ed-4a12fede4bef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 8be31a94-6fda-4b9d-be2e-a95f01666d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 261e1e04-2dd9-41be-ba04-3939c39f2651)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #565 23c0cd41-9b33-4a02-9efc-14f98670b390)");
unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #565 ed8e99cd-ac3f-4f2a-8923-4e07f33a2e17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 309ab06b-b4be-4cf9-8499-fc917c4809be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 7ace0a18-275b-4e9b-9d6d-2292e1165cfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 4207b394-cd08-4e79-89c5-2f436816051a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 2fb00785-356a-435a-8bab-eb2b305f9322)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 b0f43dcf-1322-4484-a823-9d3fdfb06a54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 1401866e-2199-49ae-bf70-ade9aaf41a72)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #566 a649996d-bc39-42b4-b49d-1539e14cdd4b)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #566 340020ed-c4d1-4e32-8ede-0518e137ee8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 5b5f51ec-29dd-4124-8846-d6c29641fd16)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 3e5794dd-ede0-41d4-ab63-f390c37713c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 dfc7a59e-fc35-48cd-835d-585af8ecbaa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 0aef9d5e-2077-464f-ad4d-ac7ca13bc576)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 e7a4911b-86ae-43c1-a354-e7f0dc6f89aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 7d4299f8-9921-4b66-b6a5-9278465ada54)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #567 052114d7-86e0-48f9-a341-4c129249ffbc)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #567 f3b0cddd-d9f9-4ec1-9b3c-b323ced3506e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 6529cd71-d2e0-4bb6-b25c-c981d33eca82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 cd1ecf25-9aa5-4654-abcc-0e3e138eb8aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 9382e43d-3d55-414a-9061-c2d56b73ef2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 1082f822-f23e-47c3-894d-9674df54cf6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 c1ed50f7-d77c-4cd8-a07f-3729ee87c88d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 47dbde1c-c912-4ac4-8dd0-5504660516f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #568 eb941a23-e6c6-41ae-8a03-d24f1347e59c)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #568 14e5d94e-d2b5-40de-bc4c-610912e66118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 77281571-a0d4-4757-8922-f49a287d1d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 46c5012f-bbda-4d93-ac01-7d11a2398951)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 6dca64cf-ce18-417b-8a59-0c0185617d23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 a6aa3eea-8448-45db-b0f6-b78266f2e85b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 fa032cc5-2e62-4a12-a9fc-c35cc8b76d86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 81f83887-74ad-470b-b8b8-b443bbdc2b67)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #569 7ce2522e-e2b9-4bb1-b06f-14270b608418)");
unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #569 6ffafec4-ae43-45ad-883d-de88e2a1ad8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 544787ca-36ee-4070-ad40-20a523cd92d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 6b0a579d-65b7-47a6-9935-1b179ed4285d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 4860a566-1930-43e1-8b1f-07174d52ff48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 a289655b-f039-42ec-aa3a-c0b11d6ad95a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 99d9292d-441e-4488-a34e-9d94d8b5afd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 b7ea8bdc-598c-425c-9f79-a1dba8f04bd1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #570 4586c670-623f-4ac5-ba9e-f02d051e4172)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #570 a90f842e-c73c-4b50-ae40-dc92be26ad3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 57dd670c-30ad-4d1e-92b1-40305e05f92e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 a50fbb6a-d3f3-4bce-8ec7-521d89c83d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 a1e81b88-2f76-4169-9c48-c29001360e3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 a317d5da-937f-4373-a707-2085ae3549c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 e70a0098-f58b-441d-b53c-7a2b26b6dbaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 cc520c98-be64-4d3e-b744-3c0cabc45682)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #571 d4ceac8a-5089-4dd3-a480-ed300fd75f25)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #571 6f5539ce-9dfe-48b2-8449-a98811544e47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 6034f174-4066-4179-bb38-2a641d2d38aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 f42b73a0-a883-4d2c-9a93-f84a3c4c3591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 9327f9bd-cad5-41d0-8b28-0342a44b0607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 33acf9aa-0c9c-4fbf-ac85-ce9e19e571db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 e3b9669b-6562-426b-ae81-eb5745b9d88f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 1ed23cde-2339-4334-9a2c-1792a790cdb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #572 7f9c4f13-2d94-41ec-b8a1-2c5e3b6125da)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #572 560fce00-f318-40c1-90e3-ab2ede399aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 445d4186-a532-4686-9f01-b6d2ced9ab26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 cdd1894d-1e8f-4f8a-a326-d32fa1ddacee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 7bbee806-2767-451a-be51-d03950af9b20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 bcde1d21-3465-4021-87a3-140befc04492)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 a4094847-8f2e-4ffd-9555-55e6a12e50ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 d9984a5a-1fe2-4fee-b416-75de33b76fcf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #573 e298f3fa-ed33-4135-a841-89f88d633e7d)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #573 3c0268c1-6783-4e35-bddc-11afb8c72911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 e38ba90e-1fc7-4f0f-a7cf-38d1b36098c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 1874e50a-18f9-4530-bafc-4661489907e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 af32e001-1496-4bf9-aee1-9d57d2f45801)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 d3466522-baee-45c6-8879-c1eddc72c94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 a07b7213-caf6-44a5-a8e9-6ba5f0195c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 933e79c1-f812-4be4-aa3c-2805a716c457)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #574 c95162b0-a8f8-4b7b-8fa4-55206ed7fa04)");
unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #574 20424452-ec85-4e46-bf5d-e4753958d6df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 2209969d-76dc-40fb-8261-5ba2062c485d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 1c6ed96f-3e24-47cc-93cb-735df3b26e0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 23202592-d138-4171-82ab-8161a2ee5ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 1ce90f7a-a6eb-4560-abbe-dda7f26c4913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 b9873f10-0667-47a9-932d-547784ee09b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 f0a4d224-9870-4374-826f-12609fbefc10)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #575 fe4eb22e-ed54-4f1b-826e-f24bba8c38b5)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #575 d6814353-e21f-402b-a4ab-838bf803741e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 462a6b51-3541-47a3-9640-c23ae173ba6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 b501e17f-7881-4e18-8fd6-310baf7eea69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 8edcc6c4-2282-4521-97ec-663c7b83a58e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 7cf5d264-4d11-4ef2-b263-fbc46078812e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 5adc6bcf-6d55-4a32-b155-203a38223d08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 a8b6760a-0948-4673-85f3-466af61698c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #576 7aca18e4-e982-4d4c-ad5b-80468fe42cec)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #576 691b3808-9841-4dd4-a1c0-0b113022863b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 f0be0a37-95a1-44f4-8c41-bb6c103f922f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 af8524d7-aa26-4c49-b5b4-b0a29ef9b168)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 bf5c814c-b5b9-4052-8290-e7895af774fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 75f7592a-86f6-48ef-b8a1-352c522d3b9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 09974533-39ec-4634-9861-d1811574dd8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 4c12ecd4-784d-405a-9e13-ff66d58e3808)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #577 d8162eac-e21e-4026-ad2e-1335bf4b0279)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #577 85d176d3-9f9e-4d5f-a683-647f4c87270c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 b142502a-d86e-4388-8741-cbc72f06ecff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 7c2aca44-107e-4382-b552-69858815c07a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 4aa0cd9a-c011-463a-a85d-856008c44e5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 bbb9a012-701f-4587-a53b-7f13d6c8bc42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 b6e14f57-8024-45fc-9c37-948a73b3940a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 99e22499-3714-44dc-b5dd-4933da8b5d61)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #578 4c252fe9-050b-4c69-8db4-f836728d9f84)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #578 61972584-3ed4-4ef7-a2d2-4c26d09482a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 88eb7b29-e681-4ba5-8949-3fc52095c9d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 fe4b63d7-4008-4f70-9a8c-957add60c042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 4fcdb8fe-551d-42bf-b7ec-eb7145395127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 af76b806-61af-4a52-b4c5-4496a298f0a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 7f1448f2-957b-4dc3-ba65-c4cafc78745a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 d3bbef19-0d0b-4478-bc2d-ff618a53519b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #579 775841fd-e65d-4c8b-af1c-b86e71ba2538)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #579 9a7a3e0d-dd92-4d4c-b8ae-bb78d54d01cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 8bcd3060-d1dc-42a8-8e7e-d0d007971a11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 19404f2d-3d07-4fcb-b0ab-d685e036160a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 e77eb76f-9745-49d2-8910-fce4c73a1cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 b31e8fdd-6b3b-4874-b55e-147028c9db4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 0a966803-cea4-43f3-b6c1-9dbcd1a5893c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 455b9049-5814-42d4-87f0-4bb894227890)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #580 3a286ec7-94a1-4108-a88d-6ebc7bdbf307)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #580 b756a701-c4bb-410d-8ba3-9ca1277fefcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 575e0c11-6bdd-4e7d-8fe0-f5146a46fdc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 74c0069a-1d82-4713-b25a-39b8bef6a659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 27065994-251b-4f1a-8d25-06e1bf9e7fc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 dd325050-c2bb-4e7f-a407-8ccf455b2234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 6894be34-02a1-4ae3-8e99-c0fb17d8c9ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 0f00996a-d820-4640-83f6-e027f0e97bd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #581 9c8a682a-e174-49a6-bb82-3b8bd5a6c3c2)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #581 ab52abd5-4faf-4d54-bc61-efd322c1a07a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 fbc4678b-d175-4771-a97e-ea8b0ba7e3e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 c5e7ce7d-26d7-4887-8b69-42e10d710f1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 5d4f01f0-1654-442f-bf58-185c6ebc0d17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 3fd61140-a3bc-42eb-8420-077cc2da0f2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 a57a3c29-9545-4ac6-a8f8-1a5f64232c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 19deb8f8-71ad-4c30-8535-215b013723dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #582 471c94d9-4468-4408-a111-9bac4b6e49d0)");
unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #582 afe8fa38-d551-4524-92f4-67a385740952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 4b483c57-2146-4198-8a76-2d785ee08048)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 acc8ac79-61c6-4c2e-9a06-fe1fdca47eed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 ccd42dcd-bfe6-48be-a58b-5e707cc4d9b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 68474cdc-d16b-4e87-afb8-cc667790ca3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 224f9544-2230-4377-bdf7-5885355103dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 d4fbedd1-7bfe-417d-bb9c-1dd91fb2045a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #583 5f65c3e5-8581-4c9c-a51b-fe1275733db4)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #583 e6854abe-0ccf-473f-831f-b952495f1369)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 17f9fa71-2eff-4b1e-b3aa-8fc7cedb3500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 b79f7f3a-3b33-4db7-b155-fa213b00bc46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 4ca1acf7-6e7e-4b2a-b2bd-e6aa6bd6af91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 6e2cce48-903c-43c6-80ce-c8bdb83408c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 cfb78d9b-5b77-46f1-bf7e-6ee2427a369f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 28512b24-f2f3-4302-9efd-3218db81b1ad)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #584 b1e315f2-c8be-4601-a88c-9d1b3042d4c2)");
unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #584 ec3275bf-5bcb-403a-88de-7590cd85406d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 b707416c-5fae-40be-a6bd-e91a912ff6a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 75880eb2-bc77-492f-b251-3726e78aaa3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 da0ce8ba-d052-4e06-9ff0-803e5950be35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 293fb93d-1968-41d7-8869-da7c57fc230c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 f8ef5b4b-8d12-49cd-9b69-12e239d4d8a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 fefd5d8e-807f-43f1-812f-493660a1ac75)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #585 ce250ccf-2c98-4fa9-999e-f6784517446d)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #585 40c17650-bd1e-4589-9b34-1d9e224f5053)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 7189b27b-e698-4544-aadc-538836c5af0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 78dc23f0-015b-4810-9cae-d02ead78ab34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 41635384-49f0-484b-98bb-4575b614084c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 dbd44de5-b930-44a4-8a50-0fa347ead6a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 e8357aa2-4cab-4e53-a4c6-b9f540872b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 89a3f8d1-154d-44f9-8f21-5a94d8331f2c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #586 d1afe773-b68c-4ff9-acb8-b80ce0c7698d)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #586 fdbd6099-a2a3-4229-9d3e-a27720431ca3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 b5b8b8e3-ac68-4fbd-9408-9e2634d9e613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 78aa23c6-5337-4b7d-a8be-856abc6d1bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 f789b719-2194-4c2d-90dd-86496f5b7349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 bab3dfaf-cd00-4f87-86ab-49fdcfdee8d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 d7908085-ce3b-44f8-90dc-e86fc185eb35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 36107e44-cb67-4bc0-8bfe-f198a7751908)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #587 cfd09ea1-79cd-47de-ab8d-443ea155bc1c)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #587 37f17970-8709-49ce-8385-6a7bdd824eeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 e4adf95f-494f-4ed9-86fc-5042d582842c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 ac74f594-159b-4165-b54c-d761307f7f90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 9637d29d-7aa6-42d7-ba2b-de2c4882ad03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 b3dd4d67-f36c-43d2-b2e5-a72571e8c61d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 ba08fda8-9475-4245-b289-0c9d77d4389c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 423464b8-9f30-44f3-ba03-acce4468aed1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #588 f9cc3416-ce4e-4701-89e5-ef6820e75c86)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #588 e0a103c6-f319-46fe-bb23-a26b9838d470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 92cf83d2-a255-489e-8081-5b228128d116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 bae5d2c5-7123-4cdf-8ab8-1f0ec902fe63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 7f13a70d-7cdf-440e-86a3-240b35aa14f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 89507d4e-a64a-4718-bcab-cc45cac22f7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 e9819bcf-199c-46ff-bb94-682cd2df0a13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 d87f7a4b-0cb7-4c37-bc4e-5618dbcc7a3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #589 912f12fe-bad0-4d16-9037-4bf0cb251a5c)");
unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #589 e4b99697-6881-4e92-9dd5-027ce4f063a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 0efe58fb-19a8-4221-8cc9-59219e89c67e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 7f7d9974-8af8-4135-aeaf-9069651ec21a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 1b90191b-9e5e-4b0c-96f4-3b4f9183b9c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 22a854d7-4186-453a-83e6-2db1a8920b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 7842167b-69e2-455d-8b9b-0e33682c98bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 4d7049fb-8190-44d2-93fe-10fa9f3a96e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #590 9de30219-910c-4e37-a864-43e6f7c0d7d2)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #590 a90468a1-decd-4b6e-823b-dcfc889ff69c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 32942c80-8446-4070-96e6-5ab49ae19f7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 df954d43-1c6a-4ce0-9449-d42b7333398d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 22a459c8-1013-4b05-a133-5942258e4484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 2ae06211-77c2-4564-a5f6-2516047b2d61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 8e70c23a-114f-4d83-9b2a-7e4ad6c521ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 55b85888-9bbf-404b-9b3d-d7d59d112294)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #591 50102cb4-982a-4f31-abe3-a07ac5a6ad20)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #591 39aca509-3aa1-4c38-8b9e-bc38d98c4dc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 f843ee49-1ee6-40ba-87be-c2aaf1f1da6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 af4607c7-3e07-4beb-8d52-c6184b7d04d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 fe99209d-a5ad-4d07-8094-cd1e1c20495b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 a0641989-ebc9-4408-bc93-5b97eb4b566f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 bdc34579-4eb3-47ba-8f08-9cbbc8719172)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 53950f4e-d184-44e0-b064-a0509ed35a17)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq8(8'hB1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #592 3c17da51-ca0b-436b-a998-d2592e784ad6)");
unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #592 f5e30925-5f0c-4b74-8c4e-abaa150f4323)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 6f4aec95-8346-4a57-8789-cbb90c24bd7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 23064ad8-9a4b-453d-809d-e8ec88290d0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 0970739f-9895-43ba-8cbf-e28bd6d6d062)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 622b5c50-953a-4ab4-9d73-9ba8680e7c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 44de20a3-d804-42dc-9df5-c34db9c66b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 26678d09-ceff-4510-8a52-a388658d130e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #593 03e01b4d-f3cb-4850-8c16-902ecdba90d5)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #593 3604babb-9735-431b-802c-708c180902eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 b0be2084-6191-4dc1-a416-5d9adc5f80dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 6a3d0005-a2b5-4d9f-8da7-3e67f755d8f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 57d94d2a-3872-4abf-ad8a-0f9579a4b06c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 54b19d1b-61a8-4e04-bb6d-31ee70d8b58c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 2c0041cd-d673-44ae-8ac6-52c8ab86af77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 24a3911e-875f-4037-8730-b61d71552c66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #594 4b030dca-4362-47b0-8f57-a9d4648f020d)");
unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #594 6962f1b1-3fcc-414f-841a-4b3412609682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 c95af70b-244d-4f77-99bf-029b3a056f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 4f053855-6dd0-4d8d-a3da-be490681190d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 ce26b263-533e-40d7-a591-cb410a8d0cf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 3a2094f6-430f-44c6-85f1-45f4d555d48e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 737e1958-38c7-4149-aa68-447c56e85811)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 15bbd051-854f-4fb4-90af-823f86063e14)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #595 cd5414ab-7abc-4d66-af79-83b19c232eb4)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #595 294faa87-2ac1-41d0-9ef7-d01afa0c9ca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 81fcf120-fd1e-4a79-8d5c-cb855f00218d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 5ce408f1-9086-48cb-82ae-be10bd38700c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 28f98124-dacf-44cc-9cd9-4d514d997808)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 3a7fbba1-814a-45de-8661-0e24eda35fbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 c970def4-9ebf-4738-946c-4eec025e6cd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 72ca67d7-22ed-4f43-bb08-fe903bb67731)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #596 7415edc9-a04d-49f1-bdab-3debc272f128)");
unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #596 d7db2f73-9e89-4433-9d56-10e159f7a736)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 aabbd98c-c7d3-4750-92b1-b406b94b4b1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 711385ea-ce32-495c-a4ac-19e6c62eb574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 8cee8111-3def-42e3-8a41-a9e0b0f94efb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 e8f0aa32-8ed6-479e-8e8f-5fa9315ac272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 cbada24d-f487-4d37-959d-abd6e67bfe8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 3f7a1ee3-a02c-4a6a-9f52-e7832b009832)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #597 ee0c006e-93e2-4fda-867b-5dac2622a4f4)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #597 84501328-aede-45ee-854e-01aa2957d4f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 8b2d4102-1d5d-413c-81af-53b839915247)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 b2ecd842-20f3-421e-8369-107b774f2e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 93ad333b-fbe0-4204-a7a5-bf4d5a4556c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 39a176ce-4ecc-469e-a6c9-a8df12f935ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 7fc7c552-e199-420a-9175-1a247f1afa2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 60aaf8d7-8999-42d3-a0fa-d69f0d0dfc71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #598 4f9d0f1c-8738-4d7e-abeb-e6e29753c876)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #598 51e6451d-95f2-4188-9578-a7e79f53e6a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 39dba1a9-4be0-44f4-af1a-b135bef081b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 ec1d81b1-a319-480a-a119-095b37577c59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 95002f28-d185-4e9c-930b-bd85db728f86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 1ca06c19-8eb7-4699-9b35-e16698b91d93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 995b41bc-d392-46ee-9e76-141c198ca75b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 18857df1-6a4d-43b7-93ef-bcffd57c0667)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #599 29f18c13-c749-4e2e-9d6b-fe3fd74f0d11)");
unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #599 1a865538-9b14-417a-812e-42e85fff8f18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 bcbaa58f-8cf5-44f9-a62f-3a0ceea97507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 f1498b96-0409-4892-8a96-41ffd345795e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 574c5cd0-e190-45f6-8569-5dd1de3a1139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 ad2301a1-be79-4a7a-83c5-9a421bc3eac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 a768f6da-263e-4681-8d75-2a0daa07e239)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 4b94b833-425d-49c7-8543-859f20dca48d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #600 b10a55ec-ca27-4b53-9408-e31e79fd3035)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #600 f01c99c7-67df-404e-884d-dcbb6562d71a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 00d0e528-a4b2-459c-baf6-b4329f96e0ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 e378af4a-ef19-4f94-aaa5-ddfc2529d50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 132ad0ae-445c-45fc-b710-1cfbda054048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 fc48ec7a-3955-4894-943d-f8aa6aca756c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 0b9ec621-d068-4158-aef7-a964a43cb8d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 b2b3aab6-d373-42c8-8fa6-0593859b89b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #601 dc7b7f41-6af3-40a9-9a2c-b0aab6889d6a)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #601 3fc39978-b6ec-434c-b3f9-415d496530be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 90dbf77d-eeb1-423a-8fa0-cbe855d130e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 f473c14f-ec9a-4175-b4e6-7ea44818f9ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 8fd4ba88-09f7-44e7-94f8-e7939db28bdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 2f444f69-3c49-4aaa-b577-542d2f0ca1d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 48a4185a-d8be-40fc-8b78-1b7b680329d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 4e1de2c1-6ee9-490e-a274-8b2a38434d1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #602 74d72d26-198c-4eb2-88fd-1e781cf79c9d)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #602 0ba20cea-9828-48f6-8e8f-815f051eb73e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 fdee6a32-00aa-4a62-b264-63da8b60dcdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 2db61751-6dd3-4a0e-bfac-881e7b1ee6a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 109cbd46-49cd-4448-bd69-2b485086fa3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 84f43664-f878-4877-a81a-a9a21e6e3d54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 8239109f-2e20-4ae4-bcad-24cdbc19d338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 35c257d4-784d-4cf4-a33b-e9749d2d3f77)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #603 7b2d8ae5-b08d-47b9-bc3a-0710d99471cd)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #603 cc575b75-421d-49f6-8aaf-af813ef0089d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 8d7cba22-4b83-451b-84a9-10282286b5eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 956794b2-00dc-47c1-b386-9e33204905fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 0fe70f7a-e333-42be-8671-976ea8e77482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 aac7aef8-37f7-4b58-802b-0fb415c7d72e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 c3ca735d-2819-4e79-8b22-a7620480a164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 8d26312c-551d-4b62-b69b-3ca24fbc0d42)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #604 8091970a-756e-4204-b4d3-cb193bd5da22)");
unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #604 88cd0be1-fe1b-49da-b030-164e6f6d5db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 a7f94ef5-7d2b-42b5-b4d6-12258acadea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 42ce127e-8632-456c-93fe-057d540dc1b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 de37feb4-bb8d-40ee-b81a-3051f0a0ed37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 0244985b-06fd-4d17-b238-252ae7a7dbd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 97ba5c47-1677-41ee-a524-9dab12287135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 580de7f6-2980-45d9-8dda-466ff2faa3ac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #605 8668d557-8a74-4e96-bec1-b1b831c4bd9a)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #605 13b53328-801c-46d0-a254-318a556746da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 b63af797-7533-4178-b1f1-e19eada3cbde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 03b6a8bc-4d41-4cc9-bc80-7b5640a4c6a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 f4a68696-b4b0-4f0e-b69c-80d942ce2267)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 682ad87a-010b-4914-b512-33befad6bdee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 c04c67ee-c4c7-4e0f-97ae-467cb4565617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 4880624e-d0e6-413c-ba01-ff66c54232f9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #606 030ae116-0e2c-40d2-839c-85f00c694095)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #606 465e4a1a-d5a8-44a0-b70c-b45ea4ff6f17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 bae57807-a4b4-45cf-8b11-bdfc67e55ea3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 4edbed5e-3aa6-4476-bfb2-9c0e885d4f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 9fcf979e-d1ea-43d3-a60b-86aca891c67b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 649d5a1f-8c07-425f-bd93-ad4bf4c188d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 0d67c5e9-b72c-4d79-8637-0c78a4b06005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 e72f75e1-60bc-4510-9e97-c180e4593df8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #607 db4e6432-e72f-4356-9cde-fcebfe439e77)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #607 645f16b4-feb7-4a77-8e7d-1dc2f527e664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 e0213c5f-a6bc-4784-90c9-728d0603ed6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 60fa011e-5c31-4426-aefa-665e84cba774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 fb9a6d65-4530-4514-9354-38b06bd85b72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 e9f1ce87-cd82-4cca-a0d6-db42629a0c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 0f3af632-7839-45d9-97a1-563c95ac35c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 821ee968-5459-48f1-8b6b-d7719696571e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #608 a730be0d-3254-4b7f-bcf9-5ca5847778e2)");
unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #608 f9f7a110-aaf4-45f1-b60f-008c12399003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 dd23068d-0898-4686-b06c-a58c3a760517)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 96212804-9891-420c-a1e9-d523d6f7c8e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 46b8dc1a-2809-4ca1-8652-ad33851dedb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 c0dfc8b9-f3ab-4b0d-9a88-f83288391fd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 153d31a4-49d7-4a4d-a76b-686159056ee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 1c2a9ae1-4308-4316-a41d-401fbf6884a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #609 7f4edf65-c882-44d1-8170-6e290c49a74a)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #609 e243b840-b9b3-4a09-a56c-cfd69975868c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 952398df-93e3-455f-a0ee-2d7f0b3f4926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 08ca7b31-7850-4803-8746-b00b7bdb8cfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 184abee2-0c02-4bd6-87e9-ea6b260b36a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 32113738-b4be-470c-be46-116694039640)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 f97c9f3a-6154-49e0-9442-bbc74b3565dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 a65742ae-cba9-4beb-84db-429446d7f288)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #610 280d3b4c-bd4f-4bad-8680-850656cc49f7)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #610 453af772-38d3-438a-b9d8-b00008199667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 98a1b0e4-26bf-4e1c-aef6-9b54246961d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 74e1b3a2-f6fd-485b-ab00-abf56c09d251)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 8de3cc56-408f-425a-a6fb-0f731a680b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 30fdb168-b278-47d3-886f-622273653469)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 6f1639b7-a614-4d5b-8ba7-dfea1729d953)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 7e66e9c5-fca4-4ebb-90a2-f38419eae114)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #611 ae9de471-e896-403c-a2fd-2488e50cdd57)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #611 9203ca67-3577-4016-b42e-dcf0355eadd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 6f0956f7-8149-48cc-9f39-68de284525c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 a9761d8f-2599-4cee-b457-0c8a331140dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 6c79324e-2807-4f2d-a515-1020c758ce35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 12cd9887-f6d7-4c78-b0a6-0e750e395e2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 32009954-eb2d-47de-9fdc-71cffb3b2dec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 33909385-0726-44f4-9fd3-00b55cbda5c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #612 7da48ea3-35fc-4349-9266-d868d4998a19)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #612 5bf44616-ef77-40bf-905b-2a514d7f9fa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 a92b70cb-07a2-44e8-b541-a35774e79494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 2bd580b3-bf0c-4109-9551-a5ef3aa5356f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 22498a5c-7d42-4346-85f1-463daef64b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 dfb0e65c-3133-4bd8-9c43-6e533b04abdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 ec0c59cc-3b31-4198-ae9b-c9126ee2e455)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 34fa0212-7c68-47a9-964b-78370cf48ef5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #613 33c725d0-2cba-47a8-a323-b1e983264dfc)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #613 e984ac90-af54-4038-8f7d-da0d893720ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 e03db5ae-0153-4b2f-8500-706f63b85815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 36facb2b-a878-4bd5-affd-3781bc08666d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 eee7266e-295b-4630-ae8b-3dd9b3ac84c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 63ee6b13-f0aa-4456-869b-abddc35e9cda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 88cafcc3-0489-4393-96e5-9e22a6461990)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 e0a35e29-c0e0-4414-8292-1df0ae6d319b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #614 237f9a0b-6dae-48af-9fba-2530e2853255)");
unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #614 18937de2-fd92-44f4-8169-7cc66c817a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 56319238-c777-466a-8267-345c97e48160)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 99a8bdfb-7192-4dda-910e-af08bffa43b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 3c9703af-8fe4-4c52-b01c-2839f6d98fa0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 e46ef569-1e5f-4253-9df8-bd35dd2906b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 b7d2d923-5b95-4314-a531-46e6253e56b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 bf45394f-cc76-4f4c-977a-fa5a888993e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #615 a275484e-9548-4095-94be-f9b31addb40e)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #615 ad270226-d194-45fe-8b1f-c27849659724)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 484eb52b-465a-4a8f-91ee-cbed4a9a1c3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 2c140334-d260-4813-8439-49e5fd9ae6eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 9bb1212a-ed69-4286-b7c5-7bc1b0a42cf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 8c0947fc-64a9-41ec-a018-dddff5722eb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 7796da0c-9b39-4b7e-b2dc-b1a0e791b3c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 563e63a0-2b79-45c1-8f6a-67c7fa2932a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #616 7fcd2771-9c68-4111-aae3-a7b3540ba84c)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #616 1b12b62d-18e5-4441-a5e8-0e8b3c7edd42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 e6648110-e2a2-4d2d-b5cf-051f785b98d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 5a95ae82-6173-4e03-979d-ac3b7396ab74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 61367e97-1d9b-4b48-acb8-205ef34ee0c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 570d78dc-9911-4a53-affd-b87aeeef274a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 09216b8e-2e25-4104-b2f7-caa7401e19e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 2c922cbe-beba-4e8e-9b22-a313705c3e25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #617 5aa7d57a-d58e-45d7-a77f-41e33d457eab)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #617 1af55f1d-b718-4452-a4bf-e8de9f1853ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 012fef48-4248-4b6d-871f-cf6610efec74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 887bbec7-ec21-4e9c-ace8-7c5f18784a71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 6d3f022c-08ff-4e86-a4b8-2a93d43019c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 a5489430-5a8b-459f-be9c-426f39fb379b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 ebd37ba9-f31b-4400-a552-8c699a872aec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 acb5774d-044c-4d4f-bc17-358c0f73ef37)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #618 a2dadd67-b016-46df-ad98-0f7fb848c7be)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #618 438f53cf-1d8f-44b7-97cb-abca397476d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 5202303c-b460-4229-bc8f-4983fb574987)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 d12b1fe5-c4c5-45ee-818f-d31f33224adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 75107dbb-610b-4ee1-8628-737e87090b54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 60053654-c4a3-47be-91e1-15b9bd2f9adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 8b3866d8-67a3-42d1-b9c4-223e1f2739d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 5e9f5feb-3721-4f00-a716-319808b027fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #619 fdbc6d8d-1414-4574-b439-fc0ae4a9b987)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #619 a87f6d7b-95a6-4fdd-b81c-c7d2213d5ae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 518c5e86-782e-4dc9-bb28-4f3a3e351c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 a3625ba5-3238-4dbd-84e2-a4f195930b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 57fb1cd6-67f5-4a84-b255-7e51638d4a55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 60bec759-01f7-4ce8-8197-9fdab396b53f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 2362a2ec-ae59-4861-af2f-b08029b3b974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 64ccd392-f8a6-4277-9b11-d2178c3538b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h17;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq8(8'h17, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #620 eee20cb3-aada-40d9-89a8-22b2a048efa0)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #620 2be67b48-0978-4510-abb1-b735e679688c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 568fd5a3-ea4a-4ecb-b23e-20a9d4c6a4aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 50349587-402b-4ff0-9dd9-038b6c53e737)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 e151565f-9eab-4679-a5cc-bdcf0520a66d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 c116cc5f-fe5e-4ada-aa43-833580d5d233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 390421b8-6585-4c95-9c90-de511cfb330b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 15470a02-580e-4b81-a050-560fd3018342)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #621 669ee827-a32f-4670-bf49-4d832bef0e36)");
unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #621 5ebfc1c3-1378-459b-82df-dd20cdef5510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 3723767d-c499-40b4-8bdb-a5ae602c3300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 95ae116a-6754-458f-9ead-5d873a178621)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 5a43ea9b-83ab-4354-90c6-55c959c2e559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 570f0544-3012-4b34-b88b-a034b84d3e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 1af75d1f-bb0a-482a-b5d0-e81a730044ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 0a22d7b4-0c3f-44e7-9d37-fad8c7ae7a89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #622 215ef9cc-8022-480a-876a-83688b2a0f44)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #622 bba5bc15-a127-4c8e-8037-f05de9f4ae74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 287debb1-3237-44c4-ba83-5509fa1d21cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 58b3a231-406f-4300-918e-4afb1fb64c89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 ad49d34a-41e0-488c-bcc7-586df85c7446)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 f8759681-e773-4019-9da1-12b02434e2f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 873ce83a-961e-43e3-b972-d4572309085c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 88d041be-9825-4123-8907-e8a9be078aa8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #623 1e99ea88-614c-44e9-b190-926db185a4cc)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #623 68674d62-4230-4533-9629-5dacec6fe054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 d833cb40-288c-4d87-8aab-f1c791f1a099)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 854701e0-6e47-4a6b-87e3-c58916c38594)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 a25984a5-5be4-492b-9d4f-57178705cdd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 2fa560b4-beda-4266-9d61-2ee955c8470f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 68a17748-5591-47a8-8dc1-eeb2cf6a5459)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 0348d4f8-51e1-415f-b632-9879565b1195)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #624 424cac47-2a07-41fd-af45-1288f81cb5bb)");
unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #624 1953c449-9ce4-413f-a4c0-323045ce4fcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 4ace00ab-20e7-4f9f-a15f-3097788d9c52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 65bdf58a-6eb1-494b-b464-615ec4fcf190)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 08395525-da92-458c-8448-6f5710da68e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 3ff13999-d434-438f-8ec1-82266fd70e7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 d0e2707f-5b8f-4f81-98ff-806244d24c59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 3c3f8876-ddd0-4d94-845a-3e27e7bbe449)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #625 f048b386-0579-43aa-936b-03716cbff471)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #625 364be192-a162-4d4e-af2f-d7a53e773226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 d3652461-82af-4fb7-857d-496139e8a7a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 ed33c18a-60b1-4aa1-a510-67b14bab664d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 47dd8448-98d4-4907-b008-6442efda8318)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 14a55e8b-6f9c-415a-bed4-489e6c5d5e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 1eab8abd-a834-4094-b059-6afbc3db50f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 40ad40bf-c523-4aa9-8229-270b35b6cea5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #626 fccbedb2-200e-4d06-a033-693054cd9a77)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #626 d9d6ad5c-6671-4cc4-99e2-0c782f1d81ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 1bdf8d1f-cc54-4449-acf1-bc0a363ea6d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 c93a1611-ea45-496e-9f69-42eb42f8c8ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 d98a1a9d-4260-4297-a420-35075fef2a13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 317aa324-d176-409d-9573-9e5c3686e355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 b8cd1745-f1fb-49ac-9010-1797c5f72d7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 0225a465-a270-4cba-8b65-a0f41f3e3230)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #627 4f6c636c-ef7b-427a-9a0d-e082342ad4e3)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #627 1679066b-96bd-471c-9888-ee5f7d4eff5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 5defd288-cbb7-40ba-9c90-c0be21526166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 0591bdb9-633a-457e-88ba-312ead366c34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 469547d8-d83d-4828-a096-8812c3316d00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 c603bcfe-236d-4d28-a9c1-e216dabbc0a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 b8c93096-c59f-428f-b1de-4a0c15aba264)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 70f8e98a-d980-4509-81db-c8b43e4ebf70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #628 aa0dc674-5451-4ac3-93c3-0b105634c887)");
unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #628 2c9cb0a8-0410-4af4-9cf0-d547a0b3097c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 ed659afd-8eee-4f8c-89eb-07ba5ab13f40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 be65b4d5-cca5-476f-b068-07e00f5dfffb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 2b03a519-4618-472b-8b83-063d0169c749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 29ea49fa-f601-4a5b-85e5-7eea3eaef1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 a1af9b2f-7e65-4904-b4a6-5c6cc17a0ee0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 3cab47fd-3867-417f-9c15-bedd58ea86eb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #629 bbd1a9a6-533a-4766-84a1-d05c0b6a8e14)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #629 b130c180-e6f6-4704-a809-9799eabdac55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 9d9308a2-715a-473a-9f90-8bce1ac4ef74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 e25cf4c0-dc68-4033-98d3-15d97f4be392)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 e63e6c7f-75eb-4837-8abb-a8e9a9736878)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 8cfa75d8-0ec4-4a20-9aa8-77080a7cf61e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 04a34470-45d1-4f64-b531-ac38381cf3e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 a60ab005-c8a3-4da6-96c9-4fc895a3b345)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #630 a04f5cd4-8fc8-4f4c-8be8-4889b34431af)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #630 d15f5d4b-1db7-4ee1-abfb-1b288684b344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 32842902-0fce-4ba5-8e62-f674befd6d55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 17748bf9-1702-4d1c-91a5-9f4575fd1727)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 657a45d3-8c40-493b-a4df-bf99bd415b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 8009d715-71ba-48d1-8950-25b250329937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 2356e794-9a52-4065-adb5-444dc60abb0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 5a873e63-b892-41de-b17b-edd2ea9b4234)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #631 8aa39f53-b7a8-4101-baa3-d26bf584f2e2)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #631 961fc665-7c7c-421b-ad00-d880b291e9dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 2b607b27-3acc-4e23-aed9-ccf425b640fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 ce442dac-973b-4028-8b2d-63a01d932632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 144121a8-a572-4c2e-9ecd-b9cc442004c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 aa3fd6a4-c547-4059-9fca-bb1107ac7f31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 feaba952-a842-4a6d-adc7-c616595d0551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 2d580836-ad92-441a-8cf3-acf87449cabb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #632 fa10f9e1-a314-44e1-aa49-b783c2118be4)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #632 1448e17f-d080-4c2f-8823-c56e637ebff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 ad5db389-01f0-4896-9371-82d12fb500bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 d7f82d0d-f37e-4ef0-a73b-9909aef2621a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 8fdf0b04-93fe-49b6-bae3-66743750e0a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 cd106ad5-ac53-40b0-8d45-d936e1c6e40a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 f780b468-6931-4c18-9c54-081a7b03b784)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 af157327-bcff-4663-a78c-2cb032d8c5ea)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq8(8'h39, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #633 f0725b3f-440d-448a-9328-07bd76d85deb)");
unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #633 5dd056a9-1788-4ce3-a8b0-cf122570ac8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 d497fd56-2ee1-44fd-bbf1-c62ab0b5822f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 d3e6cbe9-8d9d-45d9-a529-81ebf1d2690d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 13cee160-6d3f-4b0d-9c91-9bcdd34ddcd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 48882c6e-488d-4266-b0c8-b09d029b070e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 3008bae9-d2f9-442c-887d-cfed6ea2a337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 4d2ed872-e90e-42b7-a68e-837a3621aa12)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #634 6c0338a5-11a9-4cd1-a3ce-bce14fe7844f)");
unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #634 a5cdb724-4f25-487b-a9bf-d3f0a69860ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 7dc4a518-e929-46f8-b1b5-bf314dd9f1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 6f427561-c56c-4abc-9d62-e805486f30c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 750045ac-b8d5-4d25-89db-5f387b417666)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 15b6d20e-3716-476d-9689-59449d151fd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 0bc840de-7326-4c4c-a0b3-eb4d903c1c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 c7124f87-f81f-4be0-97b2-5996bc6e8f58)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #635 bbb9e9a7-e153-4b7c-b529-2d1b387a7593)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #635 e59c0d37-4433-47eb-8f34-a9dca19447c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 201ef6ad-b911-4cad-9c66-48e30d958afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 57735f46-8e61-460e-a4f4-d9573395b734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 313a29d5-4726-4fc8-b13c-679f67c314e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 86b49421-ca30-4fd9-a071-69d3be8cecab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 a6d0b698-4801-46f7-9002-6e615d743a1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 d14ad700-eb88-436b-8244-133840b1465f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #636 455962a5-f031-485d-99dd-146ebf059e0b)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #636 c778debc-8042-4dab-9a6a-afbc08d1b497)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 faae3be3-b738-49b6-a371-85e090be3f0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 065e4ea6-878f-44c4-bce2-da0bef9425e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 426055a1-7b2d-42e3-a041-0b427a3a0275)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 c5d6c877-74ac-4967-9b2f-6c8288dd6cdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 2babfc21-64a2-4679-b877-d0a0cd006064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 7e2af56f-6b6f-413d-aca9-aed95bd3f98a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #637 46213012-90ea-48ee-9276-c2e96553dd3b)");
unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #637 70ded47f-943a-4d52-a3d2-87aac3366a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 d3a3a61b-d433-4d63-9d87-b2a767741960)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 27c03f0b-a8d1-4e01-b299-fea928f427c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 9e868ab9-4873-4ac7-abf2-ac4d06257dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 d759d0f9-6e4b-466a-b82d-4936107de1c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 b22aa937-932b-461e-ae08-87c20a90b2da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 8c3d1a36-aa0e-4576-aece-f9ae8b2c3f04)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq8(8'hDA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #638 1e04b143-b316-417b-9b7b-99bd081cddf6)");
unit.assert_eq8(8'h6A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #638 91e2a41e-e9ab-4e1e-909a-f34fc5b66ca1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 83db815b-72d9-4422-8339-6c13bbb989d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 fefd50b0-3753-4c75-b349-88b980f1542c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 4fe01711-8438-405f-ac05-4201280b813b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 f14bd0df-5806-483f-b261-2e294abe612c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 596e6177-016f-4dfa-88e1-b5d3065e951b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 01d57153-58b8-444f-89d8-2f12552fb93a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #639 9aa8aec7-f888-432b-9d9a-2813c805da4c)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #639 4c882eeb-012a-4941-9195-05cee539d507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 8da0b764-fc39-466f-a361-d7a72c7ad87d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 3737ea43-e3f6-41ed-9625-da8219957761)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 fbd208e1-e5d9-42ac-b305-5f5582c5cae0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 0d829556-1b9c-46fd-89d1-b26ae1f5bba2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 c74c82f4-5bc1-45d3-95f4-84cbbe470d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 8a7d80aa-0f0f-4fe7-8b8c-6f0d4ccc3f3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #640 426d13e2-5a7c-4795-8736-467d63782c12)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #640 75e19f06-77a3-4c05-a45c-21a27635ffb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 41e83421-eb2f-41f6-87fe-57bdfff78afe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 465c8f7e-5fa3-4f82-abc5-4358b0e2f5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 ba3194b6-834b-42eb-982f-8d9a5df82a11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 f844a43c-3c19-4fe0-978b-fe3c350659ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 7deea596-497b-4015-a0e6-5e61492dc31d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 64ff566a-0295-4cb5-9949-a1b63130c132)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #641 2d626e0b-ad44-4dec-9923-5874d931b934)");
unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #641 4bbb98e5-e637-4510-bc18-e2972006a9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 bbb3c3b1-9787-4ce3-8a3b-877ccdf17cb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 537d7fbf-16ba-4140-a0c3-c90650e1d3f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 32139163-bc68-4bd1-b286-d659f472414d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 1b7e9b6c-5f60-47af-9b9e-1f7e3bdc2b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 793c7cec-97a9-476a-bbda-88ca8a0ded0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 4d3b4768-5ef6-43b1-9dce-bc55cb5a42f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #642 093a7d90-cf0b-4c64-8463-26f149d87191)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #642 b89f5514-ba88-4d69-9311-9a60baa9e3b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 8593f4d8-25e6-48ac-85c9-20490a5aeb7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 bcb2ea6c-e128-4100-bc7a-20ed0fa333cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 fb02712d-5da7-42df-b487-0b0cfb6a533e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 9ee5c153-cbcb-45d5-943e-2e35af63e0d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 d289c971-6044-4526-910e-585b354184db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 5c6f9048-7a50-41ce-9dbb-8b2187773117)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq8(8'h91, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #643 a3226cfc-0b41-468f-bfb0-541c03cc2abf)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #643 7841e043-f76d-47d1-a79e-d5d8edcc82a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 cf4e0251-71c1-4409-a6f2-d3fa33521514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 a0b0d3b3-a053-464a-8791-cba2618e3195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 ee660256-c163-40fb-86ed-3e52bc03f5d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 1ccaa02b-3f6a-456e-a772-8384a6ab5dd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 c64d68c3-2241-4e30-a132-f33c2789e22b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 c46c2658-67d3-4f25-87f3-78a229b40067)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #644 b171985a-56d9-4702-be4f-66578580c841)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #644 b29802b3-b5ee-4402-8b18-8cd1d1acc665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 77c7a00c-08f5-4e54-9ef2-050f788fd673)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 fb54e502-e84b-4aee-811f-f50db87edc2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 6a24be24-1fff-431c-9787-51348f5afa65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 eba0bb60-3183-4930-971a-863a57ba67b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 ee0c2eb1-1bb0-48c0-a05a-d9d609d8745b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 320fdbe2-3939-42a4-89d4-fb436a0ead03)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #645 3f8b77d2-3b62-4ddf-9dfd-6119ad8caf34)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #645 8c0af7fa-41e0-4874-b2e6-6d50f10b572a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 ca95c198-97f4-4728-919c-0155bbc14d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 d4f198aa-9815-47bc-a9f1-fb65a6408a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 7c78228a-48f6-40b7-be97-de0b2156c44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 894398f8-c575-441e-b5cc-daee667efcd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 699f2b54-28a7-4e0b-9e4f-a9209737dbfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 61dde2ed-da02-45c6-a54c-8dcf4541fabb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #646 dbcdf3dc-0115-4205-aad1-ab6ce5bcf8a0)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #646 bd631e17-6b14-4f1a-8320-8545ac6a6981)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 c669098f-3f40-4f2c-be27-c914afb7aee5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 c3557e2e-38a4-4a54-9336-fdb10327bfac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 8285c304-cdbe-4286-a593-dac69dd94719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 d32ffb56-0fc3-405a-bed5-1d5fb74ff2c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 d2553b2c-9cbb-46b4-ba43-44a35ec50229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 7bcd5f0c-9d28-41ea-9bdd-19a049078d3d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #647 a9f0f0b6-e3d4-469e-aa96-e4fc4b0b0645)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #647 43766bce-64e8-4d53-b757-1eef53e8f453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 bfd60c41-33de-4129-85d6-32dcfd51c8ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 6e7300f3-37be-4ebb-920e-60c9a2ac342d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 f5a76483-705c-4d96-9d2e-9032f92bb6cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 df5e70a8-f819-4b5b-8bd6-e357001d941b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 1f461b26-237a-4f0f-bc40-07de60f184c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 e9165d43-330a-414d-8f9c-ec37167ddef5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #648 7c789238-1801-489b-a6d5-c616a345044e)");
unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #648 f128df10-017b-41b2-ab1c-a22cdfb16997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 59957e8d-373e-49e1-8e2b-fc2720d382f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 70d35c98-8876-47ba-acef-7c94ea940983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 06386e4a-8048-4dc7-864d-1b9632b0ed72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 59b349da-7e58-45c0-a799-4853503a2e1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 b49ef861-fa62-4732-bbcc-ca1e1021eedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 f01da20a-f022-47a5-9059-566acb588033)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #649 450c2de2-e27d-4755-b04f-b842706ebae8)");
unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #649 a5e6c022-284c-48d4-86a0-6970ec44f02e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 5605e855-b8b7-451e-9940-ea05b2f1de67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 c5086b8a-88e0-4f16-a46d-46933bb3fa26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 bc4b9be7-f2d0-4749-ab2f-41c8c9464a27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 f6134a2d-bd6a-4ed1-b981-5af7dab2e7a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 d6a9a299-5ecb-41c4-a11f-4e0690fdb8e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 d32610c7-fb64-4d8e-8fc1-c5803bef3a93)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #650 ec55b942-047a-44d5-8a4f-b41a5d206b51)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #650 51f5a54b-7176-4f80-8036-867609e767d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 b1f4f58c-df7f-46b7-9981-ba5da958c7bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 7ddd5d9f-1279-4d4d-9bff-a1ea2139ed64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 d9a9615d-73ab-4de9-ad71-65a8da76d564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 cf22eb89-9fdf-4643-a693-e2ea0368c3b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 edc36907-57cd-48b0-9076-26f6396bb643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 43f8b7c1-3766-4c27-9f56-d277001c7b7f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #651 459b9117-4072-47d3-8299-c685ce1b4ae4)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #651 681126a8-b476-46cf-9a7e-34f97880327a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 79b842d7-a66b-4b91-8253-c5bf06dd6691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 3472f31f-45d1-4e56-bfab-a5844d83c320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 ef24ccca-e2d4-49fb-b5d6-76a286565245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 7134ad63-3bf5-4165-b1de-481b98440533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 39dde4d1-129a-467c-b5c0-95d2e1ae3c0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 c991ea29-4105-484e-bfc4-a0b26950a0ec)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #652 4099dd5d-a9ef-43bb-93fb-72f8b62b4efb)");
unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #652 a76e0b89-1c78-4557-a119-d8ac531f8256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 baf8cd01-1f41-471d-b979-2abc7c6ec810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 15798e02-ecdd-47fa-804c-dcb82a461725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 8aaec1a1-4020-4643-9548-fb87064f8acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 02e716c3-0c36-43a2-90da-040664398b35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 9517702f-8bdf-4a22-96b4-e1dfb77d7abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 88f99a52-976e-45fc-87b8-095beea83859)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #653 f4aa7c0f-3bcd-46dc-a4f0-f101ad34c6fe)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #653 63f45c98-7062-4c68-8495-f94a63f6838f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 22000091-c688-42cc-b9dd-878f5971c91a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 27271343-4fb5-43e5-a308-0d9280904085)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 28a81051-563c-493b-af70-41a62bc2217c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 9f381236-6cc9-4fe8-a9ae-8fd3b3d6b5c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 6e8d5ea4-a022-4145-880a-0142f39699ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 ed5dc142-8712-4510-b3bf-98a8cb50af1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #654 09252fda-bd3b-4f6c-a0de-2d86aff7480e)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #654 0c9eb6ce-d08a-46cf-9d5d-39817cf576ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 e2281257-fea6-44a2-ba5c-2f1a95725207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 b754f1a7-10cb-46a6-af79-0a8a8e6c7969)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 12e3b097-643f-43ee-a07f-8864ba69b25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 2a5eafce-1244-414e-a5a2-ab26b70f0f8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 da5bac50-99cb-40d2-8503-5bb9681394ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 f9ac9bc3-d359-4cc2-b737-8a3370460022)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #655 8321ab5d-d057-484f-8566-7cc580ff2d3b)");
unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #655 63e20242-5d56-4614-9cd3-ff6a6d736a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 1a5ca9c0-5c16-429e-8ad2-613b00057e8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 2c3da062-9b05-40dc-acfb-10a9e0f70ac1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 79d70ef3-1b02-470a-b2e9-8ff49a9852f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 75140198-b45a-484d-852f-e73779348209)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 996001c7-9d34-43b6-a079-0087ca30e1aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 7f8b4bcb-86e6-4cbb-a444-b89c618f8679)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #656 302797c9-d685-41f7-9256-94366381ddfc)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #656 549d28dd-f2ca-4ffa-bf38-bd0245025529)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 96d8349c-990e-4d37-b254-9678eabbcd16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 6ab0eda1-022d-481a-aa6d-e3833289ad84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 59ece8ee-04d9-486a-a436-6730e9d056d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 210a8649-4ffd-4785-9380-9a16be53edd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 977cbeb9-bbe5-41a9-b1ae-1708ee821a8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 11b20cf5-1626-4bef-8f62-7de5245fa141)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #657 8eac00e8-2e85-408c-baf3-484a9d474dde)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #657 c7c688ec-1104-427f-ad18-69b7aea144a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 98e94332-f219-446a-9481-d63847011578)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 4ef5cc57-6ff0-4ed1-94a8-c4e23c304eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 ef710d95-5675-4d20-aa5c-49572b863a7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 0d4eaca7-5207-460c-ae1c-3a275d241f8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 57a3cd7a-c0be-4d72-ae7b-760f1e01e336)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 a9543bb3-20d6-4d00-a4be-908cf7b66783)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #658 33cc3e34-b344-4ca1-a372-2ee44d1e364f)");
unit.assert_eq8(8'h85, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #658 e089c418-f7e9-4439-99f0-7fdee88b9a1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 5af3290b-4a2d-4227-8c45-7e852163d0b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 33ac8937-1ce4-44e4-84f5-4f2f0375a924)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 e0fdc68e-0740-48f2-b825-b15b2054bf8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 417e19b1-9008-406b-a512-3b5b877e020f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 7932601f-9843-44cb-b0ee-2e0dc23402e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 0ef3beb5-3b50-4569-9bca-3e102125a9a2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #659 3b9b1045-6d6c-4fdc-867a-f130c538e1f9)");
unit.assert_eq8(8'h5E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #659 1d60a5dc-29a8-44e5-a09d-754f698282af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 77d96e75-35c9-4064-8edc-e39769efc4d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 d945428e-f840-4aad-8d03-36ab7ccbcee7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 fba43945-9db9-488c-8407-d117e539aa52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 34fcd2f8-630c-4b35-aaf3-b77531f45849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 6fa8c7f8-f41e-43ee-b479-bc4555b2d155)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 803800e2-a27a-4b75-8e01-3e675bc44dc3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #660 2c961c78-a7bf-4bd5-910c-65938d51f0d6)");
unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #660 9f56624c-bed6-4448-a1aa-79faf010f35d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 c1a01b17-fb4b-4143-a626-6d00df05004a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 ec8976d0-1f0b-4ec1-993d-1b957fa133dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 0bd06c67-774a-4947-9b30-407a2daba1b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 4c76a511-0a00-490d-87c2-06d4f878fe85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 6ce42a2d-c0ff-40b2-a98c-524840ce00c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 f0ebf5d6-96a4-48a5-b9d7-cf76f07d8be9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #661 a7bcb608-002f-4c37-919c-e87a60c3b4a4)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #661 96bdfaec-68ae-4381-a2b8-15245fcc4e11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 97696959-a897-4c78-be5d-6b079a0d3f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 39552805-3af0-423d-87f2-0ba2e50670d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 ccc0cd64-aa5e-4207-963c-c23fcd633adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 5c2cd504-a3ea-467b-9afe-debd6db52015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 bd2d46c6-dc66-45a6-92e2-c4b28deaf3c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 c263158c-43c0-48d1-ac59-03c02ec7c184)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #662 8e5eb619-d675-440d-86e8-14b0a8637844)");
unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #662 6f4d5392-6ae5-4cf0-9fa6-637bb6612ded)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 0d001b68-9476-42b7-a60f-6f8e394522e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 5e8b7977-2451-4ece-9d5b-2c1354d2449d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 8754a9ce-e000-4499-9915-03456150defa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 7108cdfc-b032-496e-9aee-33686f89025f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 02ad0a42-4f69-467d-97c8-7f61dacca8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 5436f0c7-9b3b-4d0c-b278-fad08ef2b58e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #663 e7dc0272-5614-4f7d-b8ac-cc67eeafcce0)");
unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #663 39e25337-4225-4666-9647-e447d3cc0102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 4a976368-6f45-449d-a114-7599c5e2dd89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 c2458cad-1db1-42f9-ab6e-8c2cee785402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 1e014415-0aa3-4310-ab52-e43352950260)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 b18d9784-ea47-4c07-ab0c-fa894c72a69b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 6385ce5f-78a6-4b67-b290-55f79fdccf5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 e457d315-47ed-4ec3-9f80-b4e6aa8a0939)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #664 0f5d3a03-2746-4fcb-8b77-303db6c0e181)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #664 5304ca87-7ac4-47c9-ae28-6d73023eb4c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 c1243acb-b819-4990-bc6d-31ac0fe321a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 23354fe6-598e-498c-8104-d5de466db3c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 66d387ca-d3f1-4cd5-a654-094e83c05f2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 7d2b630f-9cba-4fd7-ae41-488a107a2bab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 cf440367-8290-4366-9712-15378b291177)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 5ce636e6-e5ba-48a2-ab32-a23831d68bce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #665 db0db32a-8ae0-4eaa-8871-64cfc9b81073)");
unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #665 b00719b0-66e9-4959-8290-8a6bef3dba48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 ff137eeb-23e6-4932-a58f-bd7ebf2c779f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 b7475fab-c244-4c06-9549-51c882eb6eb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 ea0d89bf-bf13-460b-9a22-98b81ea6738b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 a5ef8a48-98c4-471e-a98e-39c8861853d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 ae62f054-419b-4212-b34a-4ffa763678b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 cea0eaab-094a-4815-84d9-fa9173b527ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #666 bbe62890-b4c4-466d-90b5-4a17cd6d9580)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #666 8c922823-6a12-4f85-ac52-7d6231f799ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 7dbbaaeb-6b58-4ca2-8829-2b66813a6277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 3f2c12ac-bf64-4eaf-bf7e-fc7728ab38df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 3bced9d6-30cd-4b18-b2e9-81ca38f9d7e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 b5debab7-c52b-430c-8e51-78ab48203e67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 9e3147c4-57ec-49fe-a5b9-f4e6d5ca16a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 f5b75bf7-266f-4f94-9eb3-be5a8a1c7ba7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #667 5857c59a-9805-4dab-8044-097caa3f4568)");
unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #667 692abcdb-9806-43a6-b4f0-4399224172fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 aca15201-b4f4-4753-8863-c81782a7c73e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 ee0f182b-6516-49e1-9fe1-9bf5606a65f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 d1284606-ca7e-46fc-8b58-c1d40f1a0404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 094c7c93-8491-42d1-a296-dc4e4e893ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 2898c596-9000-408b-829a-759b05cad6ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 b453404e-7302-4d68-8409-d991ff3de3a1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #668 dab566e9-b346-48f8-9120-46b2d621780c)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #668 c32247a7-2362-4a22-b8f5-fdb97e1a0bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 2f8af27c-7acb-4d0d-b4ab-4fb07dfce005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 62c34243-2ae2-468b-a2ec-92b8f4001658)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 bb0fafe5-6e67-4ed7-ae90-9a10149db086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 397a72d7-8d20-46df-81ac-0db175c721d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 8404f901-e2d5-4017-930d-8b7281a48b28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 a4395e20-0cee-43b5-8cbf-2d16a356c1b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #669 5c81c9ef-b26b-4f12-8a61-8d9d0f8a0887)");
unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #669 752c3431-affb-406e-b7ba-ba05e38b9e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 7e9fb654-70b1-477b-90b2-6fa8e5c2e580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 4bb619b3-1785-4628-a71f-4d2cb3e2d5aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 29a1b494-d399-49c2-81db-f64c99afedbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 f6aff0e9-3ea1-47ed-87ac-29b3167546eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 394a4812-67bf-4be9-b98b-7ae874664e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 11ab5a96-b255-4c2a-9869-9066676e179d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h31;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #670 e04b2d61-2f4d-4905-9b49-65c75649d457)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #670 a588153c-2a6c-4ffe-9d92-fb349f7e0e4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 04fedd2f-ba94-4309-893c-dece4a667c79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 a578369d-5a9c-4f71-9738-54fe61c0998b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 2d9c10fa-175e-4928-a128-eb40a24e3300)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 e889ad11-5d6b-4987-a45e-22f924a612c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 940176cd-45bf-447b-b78f-758264ee66a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 8be86167-40b1-4193-a0d4-80e85060dc0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq8(8'hF6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #671 58267dd2-3195-4614-b885-2cc65203e8c6)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #671 51b25bae-5f20-41f6-9a4f-b636f4e6acc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 2c4aac95-488d-4d07-b963-c9c613c82bae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 dadb8952-5ac8-4d99-b292-c8f6ae4825e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 9463740e-0935-48ee-8c7c-b4098dddee7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 ce4ec04b-abd7-483b-89b9-89df87327ca4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 91750e4a-9aa1-4586-aa26-773402af73f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 779840c2-9704-4d9a-b384-499c583d175e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #672 a673d318-c4d9-439a-98f6-a3128bf81bc4)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #672 e8480238-04b3-48ce-8c44-b69aeb157583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 57bd9a54-671f-489c-8959-37f9d9fe70a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 91c11d99-92ff-4b35-a6a1-34dd6969f89f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 3781074b-210f-44e0-a751-3334b5c3a61a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 a1f89a68-597d-4e2e-8bee-4f3537bd5b89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 b2ae2eff-2a19-4a16-adb1-4eb8478f02ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 4665f893-45f2-45ce-baf5-ed6361ed59ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #673 ccb1de07-45f5-45f9-a193-59a29ac6a8cf)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #673 ee4300e1-ab83-4356-a78a-6629ea8aae4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 488bc17d-ce69-49c5-bf1c-db21d48c29d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 c512f860-11c1-4d1e-a52c-bbae50567da7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 3023349e-d414-4a22-8fa1-a21a28d1601f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 e41ecd75-af64-4f32-bd63-34f9d0efffee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 f74aff63-fa25-4258-97df-114170ef364a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 a79177d3-8c81-4397-93d0-008377bdd437)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #674 86d12186-a071-4240-91cf-918b1f1986f1)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #674 f4d45ff9-3d1a-4463-9c09-bbb6976598b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 30d48ecf-cea0-4ccb-88e3-972b248caf49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 49e05ba5-f4f9-41c4-a189-eadb1d89208f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 72573c7f-e6a4-49f9-a3be-de1784ba7268)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 feb824ba-4021-4078-a0b7-604b75f73c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 2a039574-1de8-4f59-86ca-168350de64ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 8cdbd407-659a-471f-9180-cd7a9bdf39b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #675 6847b77d-ae12-46d4-ac32-cb04277c2147)");
unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #675 ea1746af-f2d7-4770-91c7-d01d9f2a566b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 b69e6206-7e09-4816-9d12-7f70ee8e45fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 f0c5e618-3711-4c0f-a5ff-e789ee277f2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 645e72df-6b9b-499f-b63e-1a747023f6e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 5b1fbcfd-2aff-42d0-b4ac-3d2e65504970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 2e2235c9-6983-49a2-9306-eb77e8d57db5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 392c139a-9598-4331-b15d-fc834466d518)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h98;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq8(8'h98, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #676 fbd7d72b-d571-4ff5-97cf-9c15bfa2de19)");
unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #676 6dea4740-c371-4d0e-abf3-452cdef00b72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 64bf7a17-4bfa-4553-870c-8cd1177be521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 60bc4c91-232a-4632-a1b9-644c493dae66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 35b9940b-8da9-4ff5-b467-785b2a3e2a81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 acfa1f0f-53f5-4ad4-af33-8af87123cc58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 a5a63043-b2c1-40f3-bab0-913a29a41beb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 b0fcf738-56f4-4f9f-9593-c3b8333edda0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #677 8015673e-7365-4ef2-90f4-3ba52ef6fbb2)");
unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #677 645642bd-a8fd-42a8-a7ad-245dced8fad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 f08ad696-1a6d-4692-baea-66b86164f7e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 d8dc371a-c229-4f52-93cd-b68b6a695340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 65abb61f-4719-4c41-9d67-c0a4cdef5667)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 5c9ae9c7-dc2c-4981-9f3c-862c4ff39b4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 8826ac4c-e15d-40a1-b010-21c573dcb541)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 98bab53f-a36f-49d4-832d-a011ddd26d85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #678 75bf5e5c-4cd3-49fc-87fb-798bfd7d106c)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #678 ba988ebe-de85-4ba1-8f64-bc0c0165714d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 fb7d3dff-a353-488f-80f0-abd1173ab62b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 3ee597ce-0515-4915-b9eb-79e00ade946a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 676ebaa4-9984-4d73-8a41-e878abc279e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 fdcc8181-2601-4366-a77d-7b45c771d917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 2a1804ea-ae03-4631-807e-59c8d800b3d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 312826b5-6af4-436c-9397-08035350aad4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #679 1a61f7ac-ca5d-470e-baae-2d352c5c8f72)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #679 88ebaca0-fbb1-4982-af91-2b05492ad23b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 7432d2ba-764b-43df-aa6c-e3049bec1e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 42d5cc23-e9d0-4651-8448-900ac2943b9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 2ee86bfa-23dd-489d-bc9f-5affb41887bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 1a63eddc-b17c-4f35-a80e-bb12f422390a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 e9dbda2f-0b01-43b0-bf9b-65f9e4ff985d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 eb348912-4766-4135-97b3-2ca277c75314)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #680 e1cd0f32-c87f-427f-9a60-8557338e1eae)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #680 4be34bb8-d77a-4f84-8066-fca377f3caf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 be3b7e97-7e70-44e6-aaca-be81a2cc0f06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 ff9fbc50-781a-4cd5-8dbc-b9a9b7905a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 908cbdf7-2375-4ddb-874d-087ae80d5d31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 3151b464-093f-4f34-afca-39d207a0c5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 7fa6b0fd-ebd0-415f-ac27-baaae0e1b485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 50809c58-fbd4-4c77-960a-4ed90beddc71)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #681 5958e4f6-c18f-485d-8f4c-5bcdc5309bba)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #681 2c3d8c82-6b97-4a5d-81fd-34abd99aba67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 5f6897f0-b6fb-40b3-b68f-13eed6e19a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 3e3ed338-5fed-42a3-bfac-337daddba81b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 c0cf981b-e116-4b3a-90aa-7dd1910c2b71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 cf964a59-02e0-4df5-b60f-01b3d94f7527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 dd4486e2-0daf-44c1-912c-580a41498eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 c3e2e693-670c-4f9a-9f9e-87e7636ed7f7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h63;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq8(8'h63, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #682 e771e3bd-a120-4813-9a2a-aba49926c9f2)");
unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #682 9ae3291f-3040-4180-bdce-44bcd8c79552)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 31cd5ef6-4aca-402d-bd00-6be826b7f319)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 76f4f263-e3f8-4d5f-8683-1034eaf3b580)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 3a872361-d071-4840-80d6-39cb1c2dbac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 99cba99c-89b4-4e28-988b-ee7310edd428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 c0aac92b-7deb-434f-8b67-216deba8ab99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 3e7db830-c34b-49f7-9c40-be651bd85c3e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #683 26de0f71-2ad5-4fef-bb07-9496c458dc08)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #683 7e339aaf-42dd-46f4-baeb-dcad32eb6bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 24afb541-5fda-44b1-8a95-9525de24c707)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 76a4c7c5-001b-4783-8bd1-380cbe5ed6ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 5bc6a828-1af8-4ab4-8739-a20495c5aca3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 487d85db-6018-4039-92ca-eed561b33067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 5d2f6bd4-9650-4d6a-9383-0a3c910c4e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 5937cdff-aca7-4b12-9b6a-36546184fda7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #684 adc4b7f0-0177-41b9-a1c2-51b0db662801)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #684 69717644-e382-4dc1-bee8-21e0cfc462ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 34c0dbdd-633e-4843-b778-ee01e6bf93bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 ad004f74-a773-49c4-a002-26ce37cab0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 4f147a68-323c-4ec5-9cf4-902002a17f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 3467838d-edcb-4e58-a6d3-e185dd5a5b5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 58ea88fd-2d30-4885-9c9c-287cbb2935fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 c56b033d-26be-4872-9dd3-e6f39b7bcf5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #685 bac8447e-98ad-41fd-b06d-eea8d732668f)");
unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #685 b0ef2d1d-f0fc-490b-9fd4-3878de6a08a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 02eb0041-40b9-49aa-9931-342745ba7c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 a9525722-6dac-47fd-aa6e-1903d4cf2a3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 63d85b3b-212e-41a7-aaf2-e3ef4147055a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 a4804a95-547e-4f6a-a90c-1259b82d15f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 57abf299-7a5d-49f2-b9a0-55d8a8fd596f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 52f045db-8aa8-4009-bbec-a86abb391c5a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #686 d3e29bb2-eeb2-4788-b979-1a8391b765a1)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #686 d7f5eb40-e66b-4165-ba03-cbd8e0cfbdc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 2486bb45-315f-4f80-8755-e5d4a93a7c72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 00cd6c21-e22c-462f-8a61-af1b9a261bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 8d7953fe-b4e8-42ee-bcad-5b3cf831ad84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 904048f1-4323-4363-afbc-d0b7357e2820)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 349ccb66-7bb2-44ed-87a5-c7b1fbdaa9fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 575393c2-bb0d-49fa-ab32-0d147051788f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #687 a7395064-c18c-458d-a5da-fb5e63b3ebf4)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #687 87582850-3d9c-4cdb-9611-5f7c6f53bb29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 a19a77ff-612d-4321-be94-ba1ce46125a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 d1f8f463-574a-497a-b897-4dce41c0af49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 91bf2748-08b5-4c69-9cc3-e51a1fda17cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 6c300b20-209b-4cd3-87ae-197cbfe856c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 14ac8744-e6eb-440e-bfaf-4ec0258c851d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 abf175a9-78b8-4160-9322-282fdf45f07d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #688 34055dd0-22e5-4343-897c-da926bb204b1)");
unit.assert_eq8(8'hBE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #688 d16c10c1-a0e3-4d39-9a3e-5402c597f0e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 86f483c5-b6e7-4a2d-abd1-5678646ca7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 bc7c2c3a-4a41-4b0f-96f1-73a4a436e4e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 3633b074-d1b3-4907-8f47-68eab4133cea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 26559044-57a2-46b6-9e8c-45b3d2edb539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 b7b79715-17a2-49c5-bfb7-56af5b87d6de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 a47c8b07-5a84-4669-b720-ddb74768b266)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #689 fe469b6d-dc07-46c8-924d-0502e9ccccd7)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #689 b6b46fb5-8dbc-4791-a13a-9e71943edc26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 030763eb-d566-4e18-adab-599dd1b86c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 b7aed0e5-b0c4-4ed3-9967-c81b56c2d1b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 4631c055-3c08-4176-be83-b9c9c6d4d630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 e477536f-77b3-4bc7-8599-87e3ea8394a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 f3780214-9057-4309-92a8-8be04c0bd4b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 1c0e2360-7cc9-4bae-a861-6e523fa9ae5d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #690 1aa19cca-7ee8-4c4d-b533-a2d017604633)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #690 bae82d6f-3ab5-4eb3-aca1-38574a0567ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 0f6da31c-bf35-441e-b6d6-0471f70c0a5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 7a65436c-a613-406b-8cbe-feddf9a43af1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 e1ba2e99-cca1-48ec-b6c0-daa380cb1f07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 32203709-d0d3-4ed6-b059-9ffed08f2094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 8d57e061-85e1-45e0-aa95-1e95f05f33b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 6fbe3972-4723-4d6c-be22-f340ff7d4956)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #691 33ad072a-4936-4b76-a437-4676920a7648)");
unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #691 b559a8e3-2585-4a4f-9b9b-50281c08391d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 2fcc07ce-c0e5-44e2-81bc-2bbb2b748c5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 c563b622-02f5-4349-97dc-bcf8105cd907)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 811a9476-8187-461b-a0eb-b9d02e39d39b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 c5082478-903e-4d24-8b7d-c40f03a6a2b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 d5ef5823-6353-4c53-bf04-cc789acda4fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 1c0ffae1-a54c-4b11-9bd1-12299ddcfcbc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #692 c876b9b8-e76b-4073-b790-bf421ce30eb2)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #692 fbab8a4d-7c5d-4400-bde0-8052c234d676)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 29b9d2ee-f5c6-40ef-b504-1f7271c1dc5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 8c13220d-bc3a-445c-b66d-96722c46ebac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 04069efb-5ae6-41e8-b51b-29f0815b2ebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 c6aa60f8-9938-4bd1-8e81-a62ffe830678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 ebe3a5ef-4af2-439f-a21e-1d76b9134e8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 cadc8728-bb85-4b81-8a51-bd3507db5561)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq8(8'hC6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #693 3618540c-45fc-4957-90e4-001c5e040365)");
unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #693 0e9a4683-f64f-4b91-9d7f-014263d3e6cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 74fdbe78-95fc-4328-94d4-97b40bc87220)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 003a6f7e-d493-48f8-b5a4-863827594a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 217fba45-feab-4159-a5be-c3650812514a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 7b4c2e66-7226-4edf-8355-1d35eae12705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 6ffa51fd-ce6f-450f-b522-82b7704814c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 de54bc0d-5485-4180-83f6-b6fd4ea73da7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #694 2bd22cad-63e6-45f6-8f87-5ae4f3a45571)");
unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #694 9f77eacc-ad7e-4989-a548-f0f70519f596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 424b2683-eb62-4402-97f5-c9e6b6636406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 57402366-b782-4cfa-bf26-cb123caba3de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 b9316474-5acb-4c5d-b2e0-eb755333a670)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 bfd3972a-0747-4204-b382-1abbd47ef362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 7d79d81b-ae29-4929-916e-e918944294bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 65613b47-abbc-4a3f-b026-e24597e71458)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #695 ff0e78ff-6675-4df3-8304-08ed3ff2cf81)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #695 870ad53d-e258-450e-af82-a353ac021f3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 17e6ce53-7852-4727-bcda-167e4dbf7cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 7c68e4da-2fed-495e-8a41-e6f991cbf861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 68d58183-955e-467c-ae4b-a5862780b231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 94a93663-4db4-4ac4-9db8-1c61588c0024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 1db81d06-ce8b-4806-9d8d-4a8bb421feb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 c98d4dbc-aeb6-40a1-a289-593e2ae59e25)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #696 f61986d5-f059-4738-af18-19f2268498c0)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #696 e6e3b2cd-478b-486c-b955-3d3c0c9f4dbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 01fcd0bb-593e-463e-b2a1-5cdc887e6aba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 761bbc3c-ec14-490f-9783-7b58802144b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 ee273b66-2591-4455-b32d-2a336a19a55f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 be23c634-6a92-4ecb-9f00-d211441a2170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 cc835c2a-1a27-4beb-9d22-ac4f846c7cba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 98b1203d-5911-4832-bd78-345cfad74a9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq8(8'h1C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #697 3a2677ae-90ab-44aa-a897-1942c6a5d1d5)");
unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #697 31bd8c92-527e-48d3-b566-7cbd9162d282)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 ebdb44b0-728f-4b68-95ff-ab0691e700be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 269dc3b7-5817-4818-afab-ffaa26424fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 c73c93a3-d964-4572-b715-65e277061256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 27388f00-2de4-4441-bdde-bce404da8bcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 35c06098-8374-4088-bbb4-dd1923467a10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 59db8c1a-5e82-45e8-b628-5e1f0ca9ab1f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #698 d1a6792d-45ba-412a-949f-17c2e082ef13)");
unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #698 600e53ac-2f05-486c-8f50-9f13965fc2b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 1dbae8a3-063a-48ee-9569-c8df5dd0c88c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 95f78ae3-3a09-4b05-9693-aeaedec1c86d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 76f86c17-e6c9-4e39-8f33-d489ac2233a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 1a06365d-afb6-49bf-9548-cbf27ea98633)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 deb48c6e-d5cf-45ed-9e34-d8bec8aa4166)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 682485ed-ca4c-4ee1-809b-231a70881911)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h19;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq8(8'h7C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #699 a63ca2c9-f742-46bb-8ee7-3c8a7571e615)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #699 1c94c77d-798f-4bf2-aa07-a591d279a345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 5c810843-743b-4d12-bbb0-185c804ff82b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 b07491ab-b404-4855-b752-fd053054cb85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 bc3e08d6-b077-4b29-bd53-4d315e74a1f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 e759d705-9ae0-4eed-ba47-1e0fd51a7573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 13da7d22-d77a-4f80-9e58-ad1eb8362dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 0bdf6c09-4594-47f4-91e2-7b68e0a3cea5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq8(8'hB6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #700 a1f48e3c-648b-44d4-9e91-6317bb22d83c)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #700 f8b61b0c-ea70-47e9-ad75-39aca7c1f5ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 96caf9bb-2958-4cda-bfbc-a1243a672a36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 5a8b030f-adc6-4a70-89c7-1d451f3c1cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 170a283b-4fd8-47e6-90c9-f4c2afdd29a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 f3214dea-5509-4e1e-bae1-60dce7104138)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 4ce1779c-c343-44e4-a3f7-037e81629eb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 8b4d50f0-ddd9-4352-9926-0fe1c4ea0100)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #701 80418beb-f5c2-4a21-8ca9-50b244bd7d9a)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #701 513fd144-2232-442c-bbe9-32e7eb88799d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 4b9b1dd3-098b-4e60-a13e-770bf21101dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 bd0c7ea1-bd9c-4b32-92aa-3d887e3766f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 2e706fd5-1c30-4c4e-80bb-a156e370c27f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 6d9904bf-7270-4ddd-ae65-d0e408062eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 dec8bbaa-672a-4920-acbc-fd89fb2d8507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 a786831e-7fa5-4c7e-add9-8688670d7b99)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #702 ff729d61-4574-4de9-be22-8aa0624d6882)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #702 df048ffe-e389-4ec2-9e0e-3233317dab0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 e806ccb3-504d-469d-8fc2-91ceebd40e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 bc0c3a02-b312-44d9-a0e0-d07023dae54c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 d03b8493-1f9f-4306-b2e0-ebe5869b54eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 85b339c2-540c-4e38-9f9c-300fae8506b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 ac06599b-0af6-4943-8234-957a473e4b56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 c7136fbe-bc06-4ee6-89fc-20bf36ec5f7e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h90;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #703 75290f63-1f9d-4be1-9246-81f02574a3b8)");
unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #703 0c4485d2-2d22-4f26-9b45-7d072c170d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 d5c569ec-a463-416c-8631-0f116ba75c1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 f718e956-637e-4830-b7ea-0e6f1f07a923)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 7267d6b2-2656-43a3-bf9a-861873b8c3d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 2ebcbb22-680d-4058-ba74-d25ed1da94cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 4dd679c7-63a8-40a0-b681-37ffb8cbda03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 f2a5b485-51cd-48d0-bbf7-11f2bd6263d0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #704 39aa1a07-e6f5-4d1f-b4d7-e9ac9add9074)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #704 a753101e-4c1a-497f-8f91-6025671c4f71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 20f82578-e6fd-447e-864d-09b13d67f770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 3bdff799-c276-4069-96ed-313054bf6407)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 07ba4757-f4d1-47a9-b632-c86fd420ddda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 474d5733-6ee9-412c-8069-4fa71b77637f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 797e4543-7767-46a8-a399-c844d0c1413f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 a9ad87df-6d9e-43a5-b0de-4b7ba367f8cb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #705 eff72f67-cf6c-4cae-a3de-b9b6f4fa5bfc)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #705 7e98f636-d289-46b7-a8aa-14526c58a1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 e131d3fa-7fc0-4c76-997b-3492ef453115)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 fe7660d7-1aa0-4bef-a779-1e3e224d965a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 48652e4c-8bde-49b3-8834-8fd575671125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 fa986ce0-0f10-40c7-b6c1-24d38bd7cd11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 cd4d5041-5a82-447e-9b92-05f3870a0566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 b9b11da5-7924-4410-906b-a1ea60d75ab1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #706 a590e797-3aa3-4855-a3ec-15809eff03c9)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #706 6e3d2866-a73b-4b35-8281-6a019619bfcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 d1b039d1-7c11-489b-84fc-53395e9528f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 72ea5ff9-2174-465c-bfd6-447fec395efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 221c2330-05b6-4907-9a2f-e07d7d7bb7fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 6d8f0aaf-62d8-4811-af1e-5c88bd41ac88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 2fa16b4c-e4e5-449d-b488-de84dd730cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 04e7ee1b-237b-44ae-a2f1-bd5964982b7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #707 a297f598-fcba-4b51-91c9-7fe505efde81)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #707 97ab427d-8a5d-4cc1-9dc9-aa48dcb14489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 418a4ffb-09e9-421f-8e93-d2c6723ba2f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 2c165479-f288-4957-9862-10e0a806b316)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 d7296066-83f1-4214-809f-39c8ef57a54f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 389d1605-004f-4896-b11b-5baabe552da1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 b04b9fb2-68fc-4be2-8332-7a721851daf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 0bdb0920-050a-4bc4-b6df-023b0687be89)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #708 a3b9d938-75eb-40ed-898e-088bb32db0b0)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #708 5ae56d92-2b89-4cac-b2bd-2a1e0311c9a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 afa6ab2a-e286-4481-aa25-26949dd2f94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 b59fa6e7-8253-4f8d-856f-0dcae23a8e7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 416e7d17-08cf-47af-9236-e269adb44f5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 1811ff9f-a367-491b-aab7-4f363b063fe4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 59604c4e-e5da-40f7-ac8a-19fd9ccf92ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 10c2045e-d47c-428a-805d-ce18ee9af83e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #709 38957222-3a9a-423e-bac2-96c1020bb518)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #709 3bed1de4-ee27-40c4-ac1e-37d5af5623a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 e6000f86-4de2-4a35-81fb-e2e6d784b23f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 2ad339fd-2014-47cb-b2c0-2318cd4011da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 58cfff62-aaa8-4f4e-8d62-0d394b32cef6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 4a37e9bd-8e60-4607-b9dc-de3d3e742702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 06563eaa-63bd-4c4e-b1da-3d21eb605315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 db10c5e1-6378-49f4-a56d-6b32b62d1480)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #710 767fff07-0c1f-45df-bbbd-36126ff24d97)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #710 19d051ae-1cf8-4947-80a2-581016471f47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 3b00b25f-3e18-4e1e-9ee9-78a43b1394fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 36362a76-975d-4c29-8c10-3d0abeb33188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 9e434bfb-4cfe-496f-9196-517e8a381837)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 2ee16903-f476-4bb1-a8de-189cb3f7d5a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 95865d84-cc17-4daa-8717-d5efc33cc336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 1d552330-f393-4a7a-a4a9-53a64d77017f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq8(8'h3B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #711 0ed859a4-792a-4f12-a352-caaa627f6c5b)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #711 a338e39c-a4d9-44dd-99d3-49958830ed25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 35ec684f-b616-4be6-9654-95c7c86f3e8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 30de867f-7708-44c8-bb84-ebd141a1aec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 67de827d-928b-4a6c-aff6-4955b35c5bfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 7f625e5f-752f-4007-a185-e000cad17e17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 6933e904-2178-402f-9a4e-6e31b43b311a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 eef4e260-7602-464d-85b6-eff23a380ff5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #712 07a48eef-20aa-4904-adb0-01925573bac8)");
unit.assert_eq8(8'h56, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #712 9bbb2e51-45bd-422f-8088-39f15b83d43b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 e85b794a-203b-4463-ba08-65eaef75c21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 a1d4e0ce-5295-487d-8047-e001d4d7e17b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 b6df9e67-56dd-42c9-8aea-9db70db68a37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 4634f96d-131a-4b84-8e31-14e091d3c60d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 d8c4acd9-899c-456b-a24e-025b8d8ea6af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 b6ae9269-ec07-421c-bd5a-d0767d8543ba)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #713 aec11e4e-d8d7-4b59-af5f-a319d2c2f55f)");
unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #713 03b3f45c-03b7-435c-a77e-e53ebe8ab337)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 0875b14c-5440-445b-9368-8baa71e3a55b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 fbb18672-e4ae-4a73-86e5-b63499be1fbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 e318de85-6cba-4399-aeb8-9983de8b1d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 6053ff30-4dde-4573-98e0-da2bb075034f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 f75ba485-43db-4b9f-9fce-83b468623b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 ad0eb3c7-1c4f-4014-9f9c-4edaf0d56996)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #714 f3539a6d-b0d2-45ba-8ffc-d10032e69f1e)");
unit.assert_eq8(8'hA6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #714 92f9e3f9-e762-4a8c-b662-b8a6fa16cf54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 f8508958-f25e-47c9-8c49-93a45da517b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 95760ab1-6fae-4e62-86c8-fe5bd350c425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 0ab69f26-e70a-4b9c-a9b8-1ace3e8a8718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 3fc27a90-93f4-4913-a775-29cd78fef47d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 9b6c67da-a9a9-4d5c-9a87-bf1e57235de9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 7dc78eb8-0558-4cf2-a9c4-4fc59d41f153)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #715 b4f1e799-99f0-4d8c-9d5b-c046c956792b)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #715 07e0e68d-f081-41d0-b1d8-e793563c48b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 078e80e7-9423-4876-ad93-c01f35ee1c4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 a069b7b5-0ddc-4d0c-804a-53d17a87260a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 5728604f-5f1a-4891-adeb-222ec3a163e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 ba22c0e8-0ba6-4dd0-81c1-fa6c415c0be5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 bd9ee60c-12ad-492d-97da-9fc7fc646290)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 2ba4a443-b858-4be4-b8ee-dc13b0011f91)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #716 0b899c19-8a04-4847-a066-18a7c58e02be)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #716 5a28579e-0109-4d2c-848e-21530a07c51c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 d712d8e5-2354-456d-9a2a-6437cc2418e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 1bdb0ffb-cd87-4611-9229-05e2600cc527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 7654c34a-897a-4900-a4d0-90decc24e59a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 eb12bae5-1119-4dad-a456-0e67c10319c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 40053b67-a1a2-452c-abc2-97036b1ff2ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 7983d831-3089-4a6d-8a67-21bfafca7558)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #717 349cc5b9-1e11-484c-b053-236604b9a8fe)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #717 6e4f33bb-0202-4fdb-863d-ae3df1b42da3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 b46578b7-b835-468e-b487-eb6076e02c5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 7d6abe77-3184-4619-a6b4-9e8a6e47225e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 05e002f4-f19f-4ee0-883d-efa3cdc47725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 64a904bb-e15d-4c5f-a06d-bb36e795e9c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 0a364894-5258-45fc-ae33-0d306f42a818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 24b932e1-54b0-46cf-a48c-5c52a0fa59ce)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h35;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #718 bce0024b-93f7-4e69-8c51-275bb5cdd704)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #718 21182273-7833-4ff9-b05f-397ecedaea28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 f249b8b3-03bb-4862-ba8a-7d10a87c4646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 bea28624-c1a3-46b6-af5c-01ae3ae50763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 6d5adc0c-f3c0-4d90-82f1-cc4f55801e37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 a3ac7c3f-0695-489f-af4e-a4b7fe252c8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 ff5e3d00-f108-43cb-ae27-ef3f68cab009)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 1dcae123-2dca-4203-99a5-320da7edf850)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h15;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #719 213d688a-0a03-46c5-85ae-c4769895c539)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #719 682fcc96-2b38-45a9-84bd-6eb4fa35769f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 d0f78177-9151-4806-b5b5-ce92939faab7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 e19996cf-3dff-44fe-8f66-e3187a0aeb9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 298c82b9-5605-4cc4-afa1-547bf0c337b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 6f4c9390-74ec-4b36-8fb1-b230c7ff6d27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 9115772a-e466-43d3-90fa-bf00ab83b426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 bf63cf25-71fb-47d4-919c-9b00dc1bb557)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #720 e7acea80-3777-4261-885b-37f46094419f)");
unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #720 fd82a02e-e24f-4cbe-ac87-649e27435db0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 12684820-bb20-4725-b20f-60bc4b58c99d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 9007755d-2ef9-45e3-b0bf-a7bdf13447fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 89835b44-0d2f-4977-83c6-6fab5bacaf03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 583baee8-e4a1-455c-b0b1-dcc3097d1b3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 742a7768-5d3c-4391-9dac-c13aeddeab93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 e84e7c94-ed45-48b7-83b0-c5279a11c223)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq8(8'h88, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #721 f2f1bd3c-9b72-4002-af31-b78dd8833c67)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #721 4d3eeb57-e04a-40c7-a70b-0d3d7c034928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 8b987db7-6e0a-4e91-9e68-7df8bfd7b415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 6e9480d3-7143-4ee0-997b-94444368e432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 4c2e6251-5cfd-4c73-9d50-d6edd7a8ceed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 9e741685-bcbf-435b-b921-417da619606a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 bd05e9bc-9ad4-457f-b865-e15c0a54f127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 fd6aabcb-e248-41a3-9313-74e5ba0c68e7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #722 8a7e49cf-37d4-49be-9d37-36b3949a1df6)");
unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #722 049a3755-b961-42d5-a8a1-819907ace081)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 cd52e191-19f0-4433-9b4d-1ee8848fe16f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 e6f63a37-4161-40fb-b851-1e56cea4ce72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 6c4250a4-c9c3-4e4e-b397-bf4e3afd0060)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 02c09eaf-6d37-42db-9919-880028ffd523)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 e488a4db-0d24-4388-9777-ec945cd98deb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 7dbf987e-b63e-419d-be65-f828be50e57a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #723 d1d85746-b405-4dfb-a0b7-b2c6cfee5be9)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #723 f95c7a3c-e37e-4866-a2b8-a10a4b6bf849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 5c34474d-cd7c-4299-9a65-588576e61375)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 53e06d3a-b407-4c71-b9b1-036018e29df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 3982f7bb-2461-4bef-b61f-7ad79fb29fba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 4996e04e-7c9d-4a56-b067-e19211076ac2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 5a493593-6319-4908-a721-e125a8a4674b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 39badfd1-cf46-4820-b7ec-d28d21602854)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #724 06eae340-7fae-4752-8fd9-6b92a149e8e0)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #724 b0f1473a-4be5-4867-9f03-ba58ddc56182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 4d315a85-3f63-4fb5-8e40-7512bf133cca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 c096d3a8-9ed7-475a-918d-613b0d505314)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 f1b6e133-eefb-4541-bc99-08d3155cd21f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 caf2223d-f7a3-4a99-93d9-f8b5fda833d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 da444b05-e2d2-45eb-adef-753924325276)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 5a1f45cc-9f27-4e8c-bf22-a1c2e013da8c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #725 6c7a2182-8b38-4f65-8875-8e6ca18174b4)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #725 c6ee1d7e-5782-4099-be5c-41734fe2bc63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 d39dd749-e6fb-477f-a648-44046c1caaf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 1d679f29-547b-4273-8527-f5ddb68e0f12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 3d8439c7-ae49-4088-be10-6d1a4d4c37c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 827c6a24-871b-480c-8a6a-f3be3ef449fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 7dee5866-79c7-4228-b372-1689974c6aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 4dad3b97-cbd1-4a12-b6ff-76b674894865)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #726 2280e406-995a-401a-abe5-44c352b125d3)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #726 b791351f-f37a-447d-bed5-197ca9d44536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 8b9cb641-9a46-4ae6-8715-fbbb7f93e470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 bc68449e-69e0-44c9-bcce-dcb09515066c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 72aea148-717d-4be8-815f-c42c6371dd6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 58cc895d-d5bb-4c6e-b96d-245d9ec1b58d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 c14ef65c-54ae-4499-9224-220d2ee96b55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 b707d20e-1b39-43d8-96dc-a1ec45256ea7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #727 4c8ed349-a04a-4708-b9a2-0631e8cd4549)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #727 301eee04-ab3f-4240-8dec-69970ed16f5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 03ca9fdf-b4fb-440a-b19a-a5775883cef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 087066b5-88f9-4f2d-940b-115ed722e941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 d0b51a23-9741-4723-9e42-fc2f90d16ff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 bc82c972-e412-40ca-ab0a-81bda2a37051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 2d471f63-3f2c-456d-8778-b0323d031c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 055d8e02-4177-4ee0-8a19-48bbd2a1e98b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #728 c1d35172-3655-487c-8d95-de1f03a27e8c)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #728 57354acf-e3a5-48c8-896a-a8d9cd614101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 63f43c56-4358-4795-9309-30bd2eef27ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 d6ba55b8-8af0-48db-923f-058cda0bc748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 6316d3c6-2dfe-4780-8a6d-05789dfcde27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 f99a5e1e-8fa9-48f9-93e9-43c224e1f85d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 fc1bb074-9805-47d6-ab10-de7221088301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 09a1f4c7-8a5e-4273-b3d1-331e2c6f2078)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #729 de7fb7ac-2630-4c1f-b550-69447ff7b9cf)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #729 2489f7c4-97e8-4591-bc64-4b0e218ed530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 6273f372-059c-4fc9-a4b7-21618868a39c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 0560a5e1-1c9b-4dce-9bb9-dccff065cc75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 668776b1-8071-416e-b2c1-223608b09056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 19242910-bb2d-4e72-839f-0def98b7423f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 bc55c425-08f1-458b-b5b0-1c7b732c5109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 5dfb8ba9-5549-4f78-a06a-9d406cc1afe6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq8(8'hA0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #730 70227e20-8475-4d30-821c-28b9d1b7f3c8)");
unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #730 4c3b861a-dd65-47d6-a4d5-232058d6f5cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 d02bde9a-d531-42b2-b528-9752f40bf2c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 b805ee3a-2956-4025-90c6-ed8e77ec363d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 47762331-e0a3-449d-b186-67ebdf70cc1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 71a9129b-4eba-4bb3-ab7d-cfc342032195)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 06fdef5f-8cf4-4f76-899b-34a0a753763b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 9b8f13c8-3e6f-4e46-bae4-b3c0b954c167)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #731 a258d2d3-b67c-434f-b2d8-65a7b6f3d2f1)");
unit.assert_eq8(8'h7D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #731 ec1411ee-234d-4e36-8046-e0a6bdfc30f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 f3508e24-8d8b-4877-b852-4a60478ae465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 990bb664-1422-4a07-a4e2-eb9504e80f94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 5c16a093-c9a4-4d50-a5ef-f721eb68ba15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 f39d2256-15cd-4f55-856c-1a5678f3ee0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 e533c223-dd8f-4292-8fb5-2d550069b6a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 e4a1c4fb-33bc-488a-8e99-4e32f461fb4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #732 af3a1973-1d2c-439c-93ff-977154f7ac5a)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #732 2cea87ff-42fc-4fd5-8cd9-4a3b1e9b29f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 05500fac-af16-45ab-b1c5-bd11c96cb1ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 1af285ff-30f4-4bb3-b7ff-72c843c8177c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 15c5711e-8826-4d62-a2e8-9a3c305c2694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 f89c2799-4e96-45a1-b1cd-3c0cfcbbfc29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 6a80ce75-b808-49b5-8210-a9b648121ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 f92c3eac-7e0b-4ac6-af4c-64f205ba571b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #733 7cc553d1-b6a9-45e5-aad8-044f8c4749b3)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #733 ec44fa66-769f-4ab8-93ca-a7c5b083feac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 86afe931-d5d5-45b2-bd93-4c8d375a182c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 fe529fcd-8278-4c85-9cb3-726fdacb340a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 7bd052b5-55d3-42f4-b344-11b004b50e04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 21ad1c66-c0ca-45dc-a22d-998807212d36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 da1edd28-5bf5-4e1b-8812-235dcbcf16a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 e896acc8-450d-4e8f-a912-3f89fd811d94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #734 d279338d-9091-4091-9fa1-ec18e7a303b0)");
unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #734 0a651fea-a84f-4104-8472-f3a089aaeedc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 4b00337e-7816-4fcc-81c7-ad5642749873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 98f79a93-be94-40a0-9aff-02f7b2290e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 f4f98393-2524-4169-bc53-406ebf640585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 94cb6fbd-953b-47df-a913-48f287669006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 1f774638-ae1f-4a6b-9011-b48c4595bd1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 59345286-7231-46c3-82a1-77b9896e172a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #735 47efdd72-be55-4146-a2a0-cd473a62b87d)");
unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #735 41bac712-b022-4618-bd3d-49197bb7bacb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 e26b7b2b-d4c4-4529-88ed-2ea5d92f1ff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 d2601bea-0810-4789-a241-7b5b7a8fb82b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 17918c7b-9d13-4198-90ec-c1fcd83dc363)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 61bbe6a1-f502-4de9-bf37-3c170d977d64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 4a9f4714-9940-49c1-a30c-46268096c8a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 fe21a92e-8717-4f0a-83b1-e7db0a45cb6a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #736 2f248506-77f8-4911-9d15-d953a091a306)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #736 11152e07-dfce-41eb-8737-2d099928f584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 30564e4e-d5a6-4780-9063-2da1d0e72105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 5f7a9377-14c7-4d96-a055-29727b548580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 1f62e959-4f22-40a4-9f18-6eac04e874cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 96a989ca-2845-4afd-bd8e-a30987feadb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 7e83b634-ada6-495a-9dad-3554bcc5cb07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 705836ec-e178-4384-93c4-ef65f8d2bad2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #737 8c2af784-a614-4695-a9ed-358b1a8f1e13)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #737 2cf85861-0d09-45cd-aa7b-feaee469bc0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 b97090ff-2835-4fa2-b9fb-8b3ed9e1fc4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 f42a3e8c-daeb-4b28-965c-d22310703960)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 98627911-f122-4cc2-8f72-129be2c9ef0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 2977cd0d-0b09-49bc-9d77-7b5a0ee1247e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 f836ce64-eb9a-4839-ab1d-271945f5e5b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 dedaab8c-62e9-4073-abe5-f2014d9f99b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #738 b325f005-02e6-4091-bf61-a721e0f843bd)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #738 f74d04f3-937f-48e4-9187-a30431d70207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 2af6c469-b9a5-48f5-8769-8f7366e9e292)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 c5436c8c-f939-433c-b155-3bf95e67e6d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 af8b7e99-0cf2-4971-a09d-b255c938f9be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 936eabbf-7fe6-4c44-b52b-76ab536cfbdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 3570ef8c-c796-413a-8722-200dcbdd5549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 0f359db8-eefd-4ce1-9cc8-e14ffa412608)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #739 1c8fa512-eec8-4320-8d73-a135ad618ec5)");
unit.assert_eq8(8'hC8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #739 bf1864b0-5e4a-45f1-9022-b20b4124e959)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 b688ea70-0d85-479a-8699-edbd4850f371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 93d2b832-05a3-431e-bf18-e928dc992d23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 7cab1c28-dabd-4d68-b159-57758e361fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 2ef27826-f081-4eb1-b44e-698df26ec83d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 ce55fd3d-aa37-487a-95a2-eeadcd26f7fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 be3bf200-5a1e-4e2f-b17c-34df3d8cb824)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #740 4ca5da0a-657a-4aaf-8e5f-a323cdb835fa)");
unit.assert_eq8(8'h69, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #740 b6d3eb82-b62d-4074-9bbd-027d82b280c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 1c57dd23-3961-4907-8450-2f78372effdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 7e2770f0-6a36-48ac-bbc0-c70a50fa1eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 d6a63ab0-3e85-446a-a7f7-8d15fe7c9d95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 0cd3446f-3f7f-4d73-8010-5324e13a449c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 454bc0ce-4b34-4c16-83e2-b5ebcc57f2cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 983e823a-0b3d-4842-a345-babd5dea8ee2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #741 8ab75832-b2a3-4bcc-8fe5-75e89f8acc21)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #741 d2d00837-0fef-4465-8a07-f351ba46a841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 dd824e80-488f-47a3-b1ca-9d13793c7aad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 cee078aa-da62-40b8-b313-dc8a1cca3cd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 2b28a0fa-89c5-42cc-aad8-5902c338a6e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 cf256f38-852e-4a79-be8e-4a5ffd2e356a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 0f7517db-3785-4e66-a2b2-6c5d64245a42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 ce3296d4-848f-4c38-9e21-b8f3f2acd0dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #742 b510b3e4-6c59-4fa7-a191-8ad4276c0bf4)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #742 eefa0f28-369f-4a68-aeb3-bf098e0f5665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 194659d8-3753-405a-992a-1082f0ced33f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 38277ad4-96c9-4c35-a0bb-eab89c2721c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 373546c6-4382-4580-8b2d-12c7b58bf5d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 93ea9289-6b2d-449f-9ae1-9cde7feb8539)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 cead0b00-bd99-409f-a582-00d0a9ed97fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 a881460e-a3ca-479a-bb3e-96764dc83986)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #743 35768fa2-e9c4-46c9-a497-0531b837e1a6)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #743 023be0bb-4ada-4f5a-830c-db56e10131ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 8ab352b0-5678-40e2-b9f8-777cc39b4c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 4539a570-11f5-4341-a31c-e2d250d1cbd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 daf1eaf0-1321-44d8-a7f0-01a4114bd72f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 c14d3fcc-b59c-488b-85ea-a4086169ec5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 540a2ed4-5d1d-4873-a7ce-b2c91fedb5f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 cfebddbb-43db-4c91-a890-fb75f0f55c44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq8(8'hE2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #744 75c61ed9-b384-434d-b1a7-5a69fc3362d6)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #744 4c4876c7-ef01-4e09-81b4-5c15610e1763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 1054cc67-69f9-4e63-a4ae-0aa4bae1aae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 bb050125-85e0-4ffe-a606-c04acd1f3da6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 d4db2df8-3f3b-49b9-84c0-2796333dff72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 f764a558-9ed7-4495-9f43-53b37021c8d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 d734a65a-d71e-4239-a667-42280ca57f80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 d9fcc537-8805-4d7f-bdf0-f8896838fdc5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #745 b2f5479d-19da-43d7-92be-e3d41e6ceec5)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #745 7f48f956-0556-4706-83d2-0afb9615c06a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 6b46d737-ce45-4f02-bac4-66ccc2d55e0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 8ce088f6-365d-400e-b5ed-f548552d2cab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 a45de287-c5fc-4c83-8c21-9da7bbe99745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 e7632036-59f4-445b-ba1a-b4cefa4aac3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 9002f25d-71d8-48c5-9ba6-ce259cae7f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 82868fdb-a492-4f6d-a8d6-5e9bb9320a69)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq8(8'h37, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #746 caff20f9-460b-4e74-ac50-b82817694d12)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #746 eb75cca4-305f-45a4-a1ae-f7853d82a4f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 d176f246-ced0-4d30-9783-b75b0200c80f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 a8544b11-7d43-4993-a3e7-fdc6552145ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 9ba54d5d-7ca8-4db5-9e9e-a0e99cd2e0f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 1c7583fa-e357-48be-bdc6-68a753426a5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 0f58588c-00e2-4830-b7a8-33240779a73a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 5520e5ad-ccbe-49a6-966f-4f4ea880c267)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #747 3c03dd74-0114-45bc-8fc5-ad2537de0352)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #747 35ee40ca-5811-45a2-945f-51db384f3f3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 ea098a06-efc0-4937-be4b-ac7ffb295a35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 828623fe-bb4e-4d5d-b105-74c71e1bfaf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 fee8f313-8433-4d8d-9d46-b46b5bab7b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 f1a3191e-53f2-4c48-9910-3bbb883366cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 78806c9e-51a2-43c6-94f9-05935ff06809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 a499e185-5c1b-4b5b-87b6-8818bf45ebe4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #748 9e7344cb-ec6d-48ca-9a63-280192fc3eee)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #748 2e9199ec-584d-4205-a1e9-4b6974a5e941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 461b9bae-da24-4d22-a13c-072a66918974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 c6decd41-83b9-4720-92fd-6a43a80c05fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 2d7f08aa-07d1-4694-bc7b-162794bb3c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 b4c524e5-ac6b-4466-b231-f77f57021944)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 6b652416-ff38-4ddd-bde3-80534fef8211)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 a7199fa8-9dda-40dd-8d69-be5c70ecdfb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #749 8862da73-dc02-4441-8cd2-86a7c9ba8d1f)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #749 50c23104-b61f-45ce-8fd8-1abde56fef96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 a6ce5afa-553f-4fb6-9cf6-0b3f835bb5ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 1acff23f-5433-41d5-9c07-8d7a0408cea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 d3f4f48c-d692-4ae4-bcab-60c05600b72d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 6ec58932-af18-4230-9249-e687274a398f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 5d4b6ae9-1dad-4340-af67-6e1835bd9f62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 e456a00d-f4f3-4ee6-909d-edc344794fa5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq8(8'hF5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #750 8bceffdc-5387-4287-a310-f8fbc033cccb)");
unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #750 be4c28b5-ddde-4a75-947f-e356274ad964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 a005e9e1-e9a0-4dee-ac8a-7060548c714f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 136db719-0e8a-453c-891f-f3f14e3dadd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 f7a45df5-a90e-4df2-a6da-2f8f0241035d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 6550fca2-07fe-4401-b05b-a33a10b49480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 963202e4-aa2e-444a-aa3c-5071cc0d8bff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 98dff189-4c31-4198-b2d7-31b1521a800b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #751 5c00d219-cc54-45d9-97e5-a483e8ac863e)");
unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #751 e81a5598-9561-4dd2-8893-20381d7858eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 a7b9db57-ccf1-4bb1-9d63-99fd2fd16d5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 a0292c6e-d1d8-490d-b1f2-569cdd64051f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 33fd3231-7195-43d3-9748-1ae809a2d33a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 3d926fd6-5a42-49d3-a837-116d5ecda4ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 864d420d-4970-4e99-b3e4-551d35e50ecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 8ec5de8f-3a38-49c8-b1ad-9197fce20d26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #752 4138f987-f44f-4550-adf3-b0d94a3116b5)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #752 43fa1845-d317-495e-9978-3c28e35816f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 3890dbcf-951f-4325-b1ea-583118efaad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 1305826a-d0fc-4de1-b806-dc30dbf8712a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 933c5945-5398-460f-9aba-a07692ecf57f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 d758be32-eb57-4277-ba6b-244f318e808c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 428ad5eb-1e3d-42f9-86e9-288d5c180a6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 029236cb-a4fd-4c45-bc81-c0c615d7a0af)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #753 011771c4-4444-4cd4-880c-dde45f73b842)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #753 4ea66d7e-4e28-4a18-9557-9551d6539ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 0e4f104a-57a2-4257-9590-76c8afb23fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 0794393c-2fdf-44e2-8545-a6074901a413)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 b1bce4c1-f69b-4305-8ed5-c00db84cd528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 254517ff-a334-438d-8459-4e03788cb435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 ddaf9b5a-8e95-413a-baab-14a8bb7817cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 b5d2b555-76e5-468a-a034-503243db7e0f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #754 53d7d8fc-7442-4f87-9690-eed77cb0f28e)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #754 73758eb4-193b-4316-adcb-c93ba8c85a29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 781e025d-3415-48f8-b4c2-145e8b262d3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 c5a26d75-8a1e-4175-964a-43060ded1574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 193f3593-1be9-46a7-aadf-e4c59505a051)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 2cdfbc95-49aa-49e7-9fc8-413a6b5cb2cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 c07a1096-0d70-44e8-9bfa-92339960ecec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 3a3a5ed1-1f13-4240-affa-64e71f11a474)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h08;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #755 993c1113-6e7f-41a1-bf34-cb988b72342a)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #755 fc646cfa-ebac-4f14-87ca-f5cf2d170c79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 1bd66bdd-28cf-4394-afb5-a35b528cf6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 a79fd5af-6fd8-4d86-b207-c89cb5a4b83c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 8a87ccca-a830-4db3-94f8-d1d1f43f9d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 0f424e0e-6b09-49f9-8cb2-99d0bed86a49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 189f0957-1204-4417-83c5-7409bdf7ea63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 b26f481a-3e71-4e5b-af62-e0ff084918b5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #756 85cfb665-2c55-4d97-be89-ea3b8ad7072b)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #756 cf873c35-d438-47db-a6ad-99ea3f6465f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 94867e91-c25b-45e8-8827-161659529b59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 f2f6f6aa-aaf2-423e-a7e3-46e401de3c54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 84289f68-781c-4836-ac21-5cd434b0f1a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 d6644434-179d-4661-ad61-e3bb290f9d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 1ae61bea-640c-4f6a-a915-d9b19a962fe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 baae1862-3738-4756-b1f8-93dbc0afde47)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #757 3cd0b000-241c-4375-b48f-8adc3a4d5e95)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #757 eaf6b189-0452-4758-b3b5-082f543cc01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 15571497-51ae-4387-9d2f-c3d14965777a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 b661bc42-a557-4d0a-be8a-684fb1ec1cd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 033af3d3-4824-45ea-a9a0-2f5f3cbbe28c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 2edac9e7-5e06-4a6c-a0f3-11be9d543100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 5e10a7a3-9e84-471c-81d4-5f7f14c0e829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 5af37120-5374-401b-afff-50ba53354a32)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #758 dda4e210-08d1-43dc-8ef7-48a41e7e73b7)");
unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #758 d961e5f5-6111-495e-9636-9d5c4ea1a8c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 d72edc71-861a-4aac-9e86-a1a0b9f07762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 42d86521-fd8f-456f-a58e-2ca18c99d342)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 e07bf98b-65d8-45ce-bcca-0bf16d91821c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 f7780e2a-9345-4791-8998-ca05ccacf1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 da25fdaa-da28-4849-8322-899ed46194a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 84514e8a-e96b-460e-b3d6-21a94120f111)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #759 57395dd5-449f-4c9e-ab30-2336ce5eb278)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #759 e78936fd-46e1-4f74-b459-1d8ac8033bce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 beccb229-433b-49a3-8d58-5ed72738dcbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 05bf5809-6cc7-445d-a81b-edff95164ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 11fc83e3-3013-4990-aeeb-138e2becc87a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 3066786c-20c9-4001-a3a6-752c599c7dc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 de4a5719-44b7-4192-870b-3ffd0605f39a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 aa3c16b0-33f7-45c7-9db3-5823c5c77cbd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #760 65b1c4bb-799c-4518-9fcc-7aa74206ed18)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #760 b3413355-d7f3-457a-89d8-98534067836f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 fbd9a5d0-5c6a-496e-8c23-e053302ef81e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 bfb07051-0db5-4490-93a4-5d91daf13e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 e04bbbf0-b75a-4c80-8fda-25b82603d72f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 d46d0bb3-2289-409a-8c37-3d52f3a55d71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 9ef2817a-f329-4f58-a261-ca17017b11b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 c3255f9b-4ff0-419d-b37d-066c1bbc0a29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #761 b6c462d7-ccfc-4753-925d-ace7e50fea32)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #761 63a9b39f-608b-497d-8a79-ec170f4640a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 fe3253f7-18b8-4572-972f-16255ecdc9d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 46876fb6-1fd3-498b-8e24-764623369131)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 0459b177-43ed-4233-95d0-359b1dfee2e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 2583bfd4-ed52-43dc-89c1-4ab84d064872)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 bbce665b-9bb2-4fb6-8a9a-de550d48a810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 8d04a958-5b5f-4195-9be0-ddb8b2f96674)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #762 bf44c55c-c58c-4306-87ae-19f7d6a53446)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #762 043a49c5-5fc7-4d75-a312-e107719d8154)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 4dd6ca0d-94f7-4724-a0a0-63933c47d07a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 20f323da-ba86-4f57-8b35-81dabeafb4f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 2006e0b3-2bed-4622-83b9-4f85da8b7691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 dc83c2fb-c85a-4417-896c-f9d2a3651b5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 ea05778d-9f2c-42cb-a767-22b86ebbf937)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 b05a4394-5b76-4c89-a9a9-d4c988964deb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #763 6e4b7d91-82a1-4d59-82f6-23453d61cda2)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #763 4ca585c9-3ded-40a3-b355-d6ca362f53cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 0bed2f3c-b841-49b3-8977-01896fe70de6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 818dc448-9c4c-44d9-be97-eff860cce539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 f66f15f8-7878-40f5-960e-e4b4512bb0ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 769905a9-dab2-4367-af9a-c0ba9857bfd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 254c0ab2-c43b-4093-a9fc-93dc06e17535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 68a7b608-1229-43ed-8de9-41def8afdfa6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #764 80dd8e7b-c5d1-452a-b730-944f0fe943b3)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #764 1542059a-3f00-4e7d-a1a3-0bbc54fa039b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 b3119dc4-bc30-486c-aebf-77020c057a54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 1b3711cb-44cb-4ab2-a0d9-461f099b4948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 03b7303b-48f4-4c85-bff6-7737d3a190e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 d4418c80-01d0-4892-a121-d7a583ebbe8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 251b0739-a5b4-4513-95d1-f2801810fa20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 9a6d6cda-1697-4698-b262-b8127d5b0c76)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq8(8'h84, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #765 fa4a1ae3-d3cc-4619-b0d2-2c4dbc19f112)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #765 bcfb2d41-baf1-4918-9814-73c261d9dd12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 f4609f44-eae0-4abd-b229-1a227bd08b6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 a9776384-06bd-4470-8eee-fcf43e530815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 c68b62c9-e1f1-43d8-8bee-c836d2e8e7fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 8579a369-0370-4547-8925-9573a15aab9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 eea8cb6e-eb25-4b63-962b-64ef1e2acca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 b7210d66-3456-4340-958e-1f9e292c3df0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #766 3f59ff8b-5c90-429c-b515-fb56ef9d1169)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #766 3017a31a-6231-4d10-8aba-c0b1af605ee9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 cf976088-a632-4a49-8b68-f58a8763c916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 adcc64da-1806-40e8-8905-b28cf513c180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 aca5c12a-1d2b-49e9-9097-88fed509cc06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 a6901894-53c6-4349-be09-f7b45c459292)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 b1c3d6c4-39bf-4d6d-9eaa-3021600bed77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 f0e63afc-f92e-4c04-b827-ba1b392a7c9f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #767 4b2240d9-2d33-46b4-85c3-55d6a5137be6)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #767 e6ba615b-1bbe-4126-b666-30cc8710d2b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 5396cae4-abb8-4760-aacb-9924de41adce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 2ac1fd21-bb8c-4406-9d07-9e85bb0bdc21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 849923d3-6ec7-4da5-bb0d-8594adb8c405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 c3f641c7-e9cc-4770-86d1-f96ff632ff67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 9d6b9f1c-a845-46aa-ad93-7c8a6815bcbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 f78db201-7838-4657-9ee6-2b5fdaa53c00)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h98;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #768 e8a76186-b512-4903-a336-3f1e6cd43dab)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #768 e3aa8f07-de24-456d-a0d8-2468e636f7c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 5656c525-225e-4098-85df-e77516e74f34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 ec2fa8e7-0bc5-4be7-8607-0513cfb566d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 9f3a4fe1-f30d-400d-95db-3039726553e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 3cdc5043-bcc1-4438-9392-738ef7e9243d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 44ce69ac-e5a1-4fa1-a32d-e46d94f2d2fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 b34646fb-77e6-4ec5-9718-203d2bfcbb6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #769 f5b857df-9aea-46b9-b669-2bb7d50e79e7)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #769 9b67dd7e-0739-472c-8440-c130ed56404c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 bcdbf09e-48c8-445a-abe1-87522f74970a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 1b029ed9-b51f-43ac-97ee-1a23a8bc57d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 bcdf2288-5068-4ff5-b527-425b7d93006f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 7931e0d2-0ab8-49f2-ae6c-8224cc449c03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 bbcbe5e2-9e09-444a-b0a0-022aae6685b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 d6371739-389d-47de-89f4-8c288df0c006)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #770 243148a0-69c0-435a-b708-290b1e0f1b93)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #770 2094aa8c-dfa4-4741-a7a9-4a998636cc3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 5ce82e1d-5989-44b8-93e1-7fa287fd30a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 7e45e12b-75a9-4376-b981-68b2179bad61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 f53b2252-2c2f-4789-99ac-bcadb09b089c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 f03c3d29-aba7-4e0d-a955-6107c16fc6b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 d8beb8d4-f80f-43c0-8df3-32cc287d5e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 ca59bcb9-f796-4b56-98d3-3a7bbdd1397f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #771 60b43fac-323e-4c8b-9922-37157de6e279)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #771 2b83f9be-847d-4230-9f59-accfce085733)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 2f3a0976-7272-4ea8-a48b-3cb84eb6c9e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 4542526e-f7cc-4d37-9615-46ce0a2a46ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 a737ed83-1c6f-497e-bc42-0ef9c2402be6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 1c620bd3-bd92-4ce4-9b1f-6b33e2ec2ec4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 372f5e17-71f3-4682-a0d1-ae730354a488)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 fc8562e2-6009-4596-a65f-16c511b0fa6e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #772 23871dc4-3e66-47a6-8ca1-7165234def38)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #772 47fe5f49-dbe6-482c-83c3-091dd304ad91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 76eeb185-c42e-4ab7-b5e5-8b4716c88b8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 b81b12a6-8946-41aa-8512-dc556a870810)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 81d66498-3bc6-469e-8b64-e7f7016fff93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 9b91ef0f-a55d-4e53-97b7-df20e67c24af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 f9fd47d5-74da-4078-87b8-6f744ad08ec5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 cefbe38d-7f5a-4bbd-b452-87f1b6b146ef)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #773 98115a59-5c72-469a-9ae3-773e9d864b75)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #773 c4005d09-44bd-46c9-ad19-81e8e4f5c71c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 2d33a251-9cf4-43f0-b015-c7f27d83a00b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 10c60815-1acb-44d2-8c87-492f3cbd78d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 ce826390-0d6e-4b0d-8360-117974575487)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 bb01ef93-42f2-48fd-b5c0-3702c785280e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 b6f0dcfb-3aa1-42a9-a767-cb8fd08ac103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 2a6338d4-e5c2-4a0c-80e8-7a8d4da47593)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq8(8'h76, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #774 f80495d8-9dfa-4584-95a5-4acb2373af2a)");
unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #774 dd318672-f7f4-4746-9589-3da999cd89e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 8529556c-9b77-4f13-9227-f57d41a758a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 05768836-5a9c-4e07-a4e8-27ac935db7cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 3bf0d310-aec2-41d8-b6bf-f5ed0877f818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 a2c76abf-9ce9-4b87-960d-f0aa1521f4cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 b4ea353d-9ffc-4aa1-8373-efa4734892cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 aa0562b7-ca65-40d8-8fbe-c55d96851bc9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq8(8'h9F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #775 e450aaa9-0943-4187-96ae-4b7ac36fb694)");
unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #775 637520b4-77d4-4c7c-9f61-c1297588d2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 d5a64325-5b13-42f3-a9f7-7db305de0c0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 91231a15-d4fa-43d0-92c2-73ad458fed30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 46e82582-9e4a-4ab2-8b84-4fb471f16ef0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 30b87903-9a1b-428a-9c72-0276f3554058)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 ff91f0bb-2b26-430c-94db-c4847635cad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 93793211-6741-4cac-9219-2692cb9c7c57)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h44;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #776 cda5fccb-da1e-495a-bbfd-7810f96306f8)");
unit.assert_eq8(8'h44, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #776 6a8b953f-af78-485c-b24c-d1fcab7f6ab8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 1a22e5ee-7d7e-4992-bb38-30e8b09aa86f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 0f9432e2-7070-4d7b-a1da-2e5beb3fd1e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 cf76c01d-3e0e-4916-9346-aaf8eec4dd32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 39a26932-616b-4bc6-81c0-d7667b2dbe23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 2b621821-6ea6-493d-a13e-d53d65bb156c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 56644b70-338f-4475-923e-147a555c4f9d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h22;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq8(8'h22, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #777 a17377c4-6d60-455f-908b-409efe97e2e3)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #777 590970ef-8c55-465b-b01b-15eef457fc93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 9acaf0d4-b7a2-4f9b-8465-25c7a2b15d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 01c29f6b-2c65-47f1-a806-436606ad036c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 8ee0180a-b148-4c61-b550-a28fa0dec47b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 2615efea-02a1-4a27-aa2e-f6c7d599c4fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 0a2ed543-f5f9-4a4a-a0da-79e572940ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 24e8f196-f78e-480c-a085-04ad9b136aaf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq8(8'hC4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #778 259e4558-8c46-4ce4-b568-eb54366c9815)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #778 67a4b38c-0ef8-4e30-b7ad-208a6e7cc730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 e305c5a6-9b85-4fe2-9e98-73e68cbce6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 297f83c0-55af-413a-85d0-63791316513f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 cd103353-ec21-4354-9108-b8227d2c0f5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 314a1632-d7ce-4021-a35a-77f75638414f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 7292fcbb-8ef3-4262-bf97-0bd23a0f6537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 8d5fdf60-7a85-4608-8199-475fd1c7571a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq8(8'h23, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #779 7703dbb3-05ad-43f1-986d-b499b842e6a3)");
unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #779 ec2abf3f-c117-4308-b845-56e13f17d3a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 a515e2bf-e97d-4038-95dd-4803e19739c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 fb21dff9-2cac-4f09-85e6-191a430e3feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 1a3d56e9-1181-4977-ac04-0a2aee49e22a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 0cde4ddf-f5fd-4f14-ab8c-aaa9a5e5a89a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 9704452c-b728-4031-bc52-a511b78bb1e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 91aa8498-0650-4c15-93ae-cc5ea3a2fb66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #780 708aba48-c664-405a-b5d5-7234877ba5a4)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #780 191c98ab-fb4e-4c14-9291-1c5737186f16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 9b0e1f18-94cb-44a4-a36b-77d5c9b16757)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 2b7250ef-f984-4559-af8a-c50fd5536553)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 0c35b901-3fa7-4601-bfc1-65ed5a70c6be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 cce49782-4d95-4aa2-90b1-86b5e282ec4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 0b2ad4aa-f0c1-4dba-8bae-13689201acfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 82ed0be8-431a-41bf-b0e5-dbc7a9e9f00c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #781 ed9025e9-d7a9-446e-88d1-3ecb906326e8)");
unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #781 11ea32c7-4d0b-4749-b851-734c112df7f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 88822de1-04d5-4437-a70a-12af707d8c89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 c5f26a8c-eb3c-4e7c-ba1e-da57f4b80667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 1d8fade2-8da7-4a5e-ad75-25ca5662f669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 91e286c2-62f4-4adb-9672-d5c681563fce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 2bee185c-8079-40a8-89cd-fee8f4e24a20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 9883c3e7-6ec1-4b24-a75e-fafa25d91c20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #782 ab5242b7-e476-4667-a066-9c1b64f04caa)");
unit.assert_eq8(8'h26, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #782 a1a70636-2710-4a2d-9852-f8d908b95ae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 03611847-69ab-4d5b-b417-3940bfb49423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 8075c062-4aed-40c4-8300-0327a6baf8cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 5f5665fa-4c08-4058-a8f2-2f64a3f7c241)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 a20bc1be-a4eb-4245-878b-9388318dcb9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 6459735d-9b8b-4d4f-9919-96ff689c7feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 55b0e4ea-54e0-477f-9b62-bfc4092ce1d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #783 a984fd18-f4d4-4f7c-82f0-3e08d69f89a7)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #783 7851fc5a-0113-4046-824c-26029f896ef4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 9a349a35-70b6-484d-933a-376181594995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 8f8e485f-cd6a-4a91-a889-778781e988db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 d2d3de11-ffba-48ca-b614-9fc7e2b9cb4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 401ff1d3-7884-4515-a2d8-ad0293f48147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 13b0fad4-5ee5-4b26-8e6b-604b47d67dec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 e97aece9-fecb-4e6b-893a-a55b126a8dfd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #784 d9cb0487-a5f3-48b3-9ccc-94b9ee056366)");
unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #784 0dd1d170-8d97-4dd8-a9b3-dd7c1a6b6fea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 bdb4a5f0-c1bb-415f-bc0e-4335fb4dbaf5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 93f485dd-1fd7-499a-aeae-8da2d5668604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 a0a5f5b2-4a7f-4c4d-a24d-dcc32052d9a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 4b58d69d-1a4a-401a-8824-095f98c9ad5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 a92e2cdc-e644-4b47-b3c3-549caec6ab7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 0b2133a3-6134-4b56-b394-23116dd01d6b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq8(8'h6D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #785 6d499aaf-0942-4464-9a90-c93bfaaf6c45)");
unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #785 70c6bdce-a9e2-4467-aa42-35a5d9fb6415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 d9e2cc6f-28a2-45c6-87b4-b3c9086f226c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 3f9e1860-7126-4506-9669-091f69ddf99f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 7265c790-c193-45b4-999a-d343f0e6e7c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 776b760e-563b-462c-8e7b-a38c43cfc2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 44d8a47d-b713-48f5-8820-a590455d48dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 dca3b4c2-2baf-4727-b972-df530ad156c1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #786 f5681e48-c3bd-403b-80c4-162f2472e659)");
unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #786 8127e0d6-3df5-43af-a1a2-eb1173385d0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 845deb3a-a086-4eaf-866c-2d7b0a6b6b77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 7dd3c137-6c9a-4cb1-aac0-8e7746def746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 ed0b2502-2d97-4fa3-b7e9-c318ffc3c710)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 a65e44b8-48ea-43e2-acf9-33b41cfeaf6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 a3a75d1e-01a6-4af1-8077-c7b1f97d368f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 e7858929-fe86-4dbe-a7cc-3e22a22b0d3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #787 cc202531-f4f9-4807-a070-5938d510c6fa)");
unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #787 34c33932-eb3c-4d0a-8825-6499b22ad972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 00a31754-751a-488d-99c6-9e36f47583ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 5cf90b75-e4b2-4bf0-a857-9eb74ce3124a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 f7e59609-8c2a-4ca1-800a-abf6a9fe958e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 023d38aa-bbe0-4900-8609-2b24f1a64974)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 a01ee4cb-3fb0-4df8-8c17-beb45a793839)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 6dce57d0-790f-4cee-8bdd-45fec4f8fd1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #788 9e686912-78e9-4930-8332-5d5894475df4)");
unit.assert_eq8(8'hC3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #788 8da25f13-e0b2-4a1e-9a34-c35244e993e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 e20ed2b0-2223-4327-b757-8faf839d887c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 fec05ebe-336b-40b4-9c8b-13710a40f354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 50c477f6-2e6e-44a4-9a60-7d6f2021d8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 41070b06-456e-4201-822a-a0b88965535d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 84a8d340-b7d7-4acd-9df7-177d90918048)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 fb9cc264-f125-4f10-9ea5-393e02d93992)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #789 1878ea16-12a6-46dc-9138-a13a8af8df25)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #789 2897feb7-0596-48a2-9408-070c13261023)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 6b78302f-f011-4e5e-9e98-df574b369301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 4ae05125-0a05-4170-a671-0b4d205d7e38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 d3663b31-4880-4b8a-b4a1-0805ac71bebb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 59318f6e-713e-4e6f-bf06-13aedfd6d3a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 9bfd96a9-3010-4131-b90f-87ec0518b7da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 fb31f407-473f-4cc7-b0ff-68eb46af1070)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #790 f43812b6-9ee4-44f9-91a6-2544c61e3f0f)");
unit.assert_eq8(8'h31, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #790 7faed528-5b49-4046-b508-052f21cd76c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 520c00c2-2117-4276-abfa-e69bd6f69ee2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 fef427c0-65a4-4c6b-9258-dffb1b9b4532)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 bbf59a58-5edf-47a3-ae64-b024b83463a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 c5318f66-6447-4d4e-afb9-46e21dd1e609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 9b1805a2-6339-4070-8f4d-93e258cad5ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 23a89c8c-74cb-4021-95dc-20a9935a16d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #791 e56fd274-5401-4829-a81d-23ba2fc42ead)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #791 76008a5c-17d1-4242-8c4f-3f6f92c25366)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 4d2ad847-1a8f-4cc7-83c3-59429954b8a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 2b41506d-2859-482b-9df3-41a4159828b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 db55a824-a44b-4bf9-ae9c-65cdf97d7cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 9f188506-d54a-448e-bde3-47ba8e82a82d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 bc6dc10d-56e7-4eae-8638-0f5508ff5979)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 87eb068c-1906-49fb-8b40-304271af789b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #792 4b52fb7c-7118-4f60-bc48-b1bcc9879716)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #792 607d3eaf-720d-4554-8817-622ef81d8311)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 dfedc63c-9ced-4019-989d-d2a236f3d034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 2891f71d-cfc1-40ed-99af-7bfd4cfdf377)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 93b58949-ae49-45e7-8de0-d20c862a4ca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 e629d6ff-ea7c-4b0d-817f-7fa479ed178c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 bf46d310-183b-475f-b296-f1f047b8643b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 3c0a483a-1205-4d5f-8073-c659bb2ee22c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq8(8'hBD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #793 6ba719de-5948-427a-845d-71a66ad251b1)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #793 a9e77d16-2eec-443d-adb0-a9669ba4cc43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 7ee4e8c1-caa0-4119-8b42-4cf5c6c9b527)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 0519d622-ce74-4281-971b-7e7283137e71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 79039ec3-2a16-4156-91d1-86f3819ecb96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 4111a492-8563-45d6-ade1-df20a97e035a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 d5c94d26-4fce-46dc-97d4-4ce880595679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 3e0a43db-f42b-48ad-a058-bee782855f5e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #794 0fbc1ea7-23ee-4bfd-94a0-41da7fa4de52)");
unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #794 9d895dab-619b-4178-9828-fba6138dbaf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 70aeab8f-24b3-425c-9ac5-9b5a74b11399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 b8dc6e95-3579-48f1-993e-e25a947719b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 6ed8f5b1-1562-4d02-8b1a-0f67528f6118)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 7fda0112-12be-474a-83e3-3a05a99239d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 efb93f44-031d-4490-bf58-7ca3d088e8c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 9e86bde8-db16-4dd0-8038-0b10b0c7de0e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #795 4f6e22f8-6981-4d09-b8e0-4d92e6c6814c)");
unit.assert_eq8(8'h11, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #795 fa301c3f-a498-4102-aeb1-b270d64ebb83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 3f526f29-e921-4aef-a71d-488f644ce4ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 407533d6-479a-4dc7-89ef-e38ab19435f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 fb417c07-09d1-4318-8130-b59105293ebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 add7b827-5c3e-470f-a4dd-6534ad0e5f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 6d7e61ab-da81-44af-9296-65243f0ff11a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 f6f90aca-9061-4299-a5b3-306e34a102f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #796 76282f37-c42f-4ebf-875f-7832070f11ea)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #796 079ea248-d314-4aee-94d5-d96e512d91d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 e6058140-eda7-4bcd-8b17-3ca3c53e88a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 455f695b-1777-4071-92d8-fff4c4aec9cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 b40d7726-3625-42ae-84f3-8c09f3a740e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 14ef9eaa-3b70-410e-af66-56252a401c16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 e5dfe538-bf3a-4fb9-90f4-a162706f87ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 794fd8a2-abba-4da7-a459-96af7544abf5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #797 22d47c57-ab72-4396-9730-070105ada19f)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #797 28dd2424-34df-4eb1-819b-928e8e8fc79a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 15a3b0c8-b7ee-4829-82c9-8e16cbefed17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 3345e335-71c8-4641-a92c-18b84a39a7d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 ad317a9e-5bce-4e42-b25a-c38dda51e37d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 ea367c1c-5722-4495-8b8c-a4857cff12ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 130ec3df-3fb3-487d-8a7a-488c3b949b78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 3272cbed-ebff-4646-9287-e115c4110da0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #798 21ce39bb-d207-4460-bde5-e2737925bb7f)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #798 08024b81-2136-4de5-8c33-3a235ecd47d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 548d6737-4d7a-4353-a3bb-1d08d7d1d309)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 2095ff4d-3fdc-4497-8184-8e2501d24eb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 ffca9023-7374-4ef4-a7aa-20d63c4a691b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 015a646e-425f-4f3c-9755-843bd3c6b218)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 f9ebc0f4-215c-4a80-a9d6-750604091b44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 50954659-0282-4ebf-bbab-a8f98281a9b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #799 ca8fe1bf-5f0c-4641-9bc9-87c86e6c6fbd)");
unit.assert_eq8(8'h47, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #799 dd54977d-8338-4088-9a2b-0c24986add43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 0b9d146a-c1a0-4d18-89ec-171d5cc179e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 bec29673-19ea-48f3-bbe6-fc887f6c063a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 8b55493a-4650-4957-a091-30fb3525d528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 7e7831cf-9ea6-46b4-9989-25b212f251f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 e98678ef-b353-4ab3-8864-c6e9565f3ab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 9becf43f-4190-4263-9124-beea85eb6b3f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #800 9d78f6bb-3b4c-4ebe-97c3-7b04ed16668e)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #800 676f69cd-3872-433d-a690-835e266a6e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 55b66150-b99c-4307-9b2f-979ca7c49057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 ff27f4b2-c04e-46bc-83d9-f1899c67c3d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 c6837a8c-738c-4b67-af12-ba973cb1a823)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 b8b989b6-ed17-4da0-9060-7ddc836ee34b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 8500c9b6-cc49-4931-bfc1-d73b10326ef7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 fa9edce0-8ce6-4282-912c-8aabe60e5236)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #801 6dc28d4e-db80-42f3-907c-2104b3255c5a)");
unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #801 afb97871-a39d-4479-9ed7-dca164bc0f2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 4ebcfc0d-3f97-4c15-bdc8-1b6d520fa61b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 85dcf73c-9752-4580-8568-a64a779a4439)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 7cb49e58-9caa-4220-b82a-418412f9f1f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 a3ddc9c8-f8bc-406e-890c-6b2f893c1876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 e393c320-7266-4578-b68a-4d6f797e955e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 94b7fc9f-837e-42b6-aa26-7512e7c95b7c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq8(8'hA8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #802 6a109d92-330f-48c0-b008-acc785d91ce4)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #802 318fb99f-874f-431e-8004-2074c3a9f2ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 4521da4b-e4bd-4055-b450-51c05547c483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 74c18dd9-d316-4b1c-9e7f-183fc706cc5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 539d9def-84c9-4a97-ab6b-f381b9beac5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 2bf00360-7679-4150-a5d1-b476ed6a719b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 6b83fc38-c212-49ea-b852-972b86be6c64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 3eb3fa2b-228c-43c2-9770-79512a6c6678)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #803 5895a352-3373-4b45-8feb-8e916fd7c02a)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #803 d00ff6ee-dba9-4b4c-9106-c6e92506aec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 dc12ff92-f1a8-4b83-81ee-23ed2196bfa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 6acd48ed-fe68-4a6c-b9ff-91ce0fd2614f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 a5bc01c4-153c-4448-b70a-a3ab6fcfd2f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 fb4a5ae0-89be-4625-80df-2759c2c94596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 b7fde05c-81be-4f88-b4df-e3ceef1a90d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 fd068af3-6981-435a-828d-711e3b4c0611)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #804 6b7ccfdf-9811-4132-ba33-45efa2e6617b)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #804 1ff29a10-d8e5-46f2-bb94-4141115a6d29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 88a55010-c2f3-487c-8e83-d234e93ff2e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 7dc32c12-fb4f-47b2-94d8-cfd8958a9ac5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 668c61a2-fb68-48ac-88ae-810bdb079ff8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 aed773a5-83a3-4e7f-aa85-b56233f93e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 d2a383c9-b16f-4db8-a985-8a185443d4dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 3b9a01ad-f0ff-4716-97a9-6ee637904b1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #805 0a737e86-fdb1-462d-84f5-93e24962543c)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #805 7a575c92-90ec-4647-b6ec-5c0fe1f0bb87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 fc5afef0-c6f5-4d36-9ddb-41ab8b0751b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 d8810ab9-e20e-4746-b252-71449dc15664)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 77ea38e4-90c5-4690-828c-7bdc7f4929a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 41f0607e-2492-4f94-8bff-37cbd945a606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 24f32f5c-5290-4e8d-bcd3-788d9e16abff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 16a87664-93d8-4e62-ac05-dc9a7f77977c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h95;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq8(8'h95, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #806 fba241c9-b167-4f19-aeba-5d9849b8b8f2)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #806 6e0b5408-f69e-44ee-b0aa-d88ea5ec0799)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 705cb7ae-af35-405e-bc43-478c6a495c76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 294d8b25-694a-4a43-9402-1b5fa749f3c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 2ee6d517-2282-4a72-b189-b852fc257667)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 7b25247e-f28f-4012-a7a2-a1f5e13b9775)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 9c88449b-9cf3-4ac9-bc1a-4232dd0d460a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 bfb50672-51bc-4c0d-a009-a56d54099a07)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #807 0e69616b-9ae2-4e91-8cd5-5ec80e51e0e5)");
unit.assert_eq8(8'h1B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #807 f30861f4-360f-442c-a00f-e15853e97952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 8c40f113-8eda-41da-8f05-8976da6245fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 288a4ccc-d071-42d7-971e-faff7d966531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 72798d83-9ea4-4fdb-b62b-cbc0ff459c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 de0057b0-f179-479c-a181-dc292c58b998)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 ccd7ff33-491d-441d-adc3-97e07eea2e78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 f49a2cdd-d0dd-491e-b0fa-c785b1684096)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #808 1418b090-d30d-4bba-9c39-2f4c45c43bdb)");
unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #808 968b7623-6c6f-4dfd-9f4a-f3269d6423fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 35d9db64-f7b1-49ac-b730-6572deda3007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 b0ab08b4-976f-4a2e-a6de-48b00c78b496)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 316d215f-b25e-4e94-a4b4-01d58470ad8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 16ee0fda-55b3-4ce9-b559-718d856618b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 4cb82f71-12e9-421c-8cde-97f1611f2abe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 f0f47b6b-cd7a-4476-befe-97a815640c1a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq8(8'h6B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #809 f6128769-059d-448e-9bd9-623d1968ee99)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #809 3af6b085-c788-4f35-8a70-d88b909eddbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 b4c9e93d-b8be-447b-b3e5-c0ab66011387)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 98b0c214-b243-452c-9a2d-f270fdefac32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 4f951c2d-0bbd-4253-aa90-a0042b8a3f0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 f6160e74-eb85-4b50-8a56-1b9209a2c14a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 2551dfb3-fb78-4e44-80f0-de88eb15c32f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 52b86953-c04e-41fc-9a42-0054ff62ebd9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #810 9899620f-3413-4dc7-ab7f-bf7a88c43fe4)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #810 9c81a529-60cc-4d3e-ab91-130b68e1b287)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 b3e7b7c7-d99d-49d8-86f0-f6ebb125fcfa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 4888f8e0-eb9f-4ce6-9980-41af95c40091)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 d88c76bc-a953-4fc3-a3fc-2479d6a6baee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 0decdb13-eda8-4a46-90c2-e38bd627559e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 5b7f91be-4823-4620-b6aa-355d454a7eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 d5d0d0b1-ebee-4c98-9196-19cad0e71345)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #811 9674af0b-2dac-4401-8fcf-8e43151d26b7)");
unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #811 7b4d6033-82bb-4738-a0b9-ec98f61f5fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 a828abb6-74e2-46b1-9802-ee27edda7c76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 48028d0c-034f-4666-afdd-aef0bdc06338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 02ccaf4b-d049-40a2-a4cd-559d31b06bbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 e44a4e39-9b31-41d5-95f5-709d335d22b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 368ff7e8-d593-4286-b317-8c4a701a1851)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 65f8be12-58de-45cc-922d-4f64889d787b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h47;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #812 99eeb04f-6cab-4968-842c-74ac7997a83b)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #812 666ec4e1-6564-4204-bbe7-e9d4da0f3949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 3bc805cd-b36f-46c3-92b9-bac556a5b2fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 e79cac4c-e33b-4d47-8f70-5ac966bc68ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 f9c1d495-a150-49ce-882d-3be5d122b2f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 a0ecc238-4ff5-4cc5-8ec6-bdfeb683add7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 04b395bb-4dd7-4148-9c6d-6e089d5e279a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 7df7ad77-9a0d-4670-a8ca-081649461131)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #813 6b3764a8-a812-404c-b6cb-526e9e6e0f21)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #813 7f10a57d-a053-40d9-82c6-b08dca292e36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 77be1dd5-7157-4709-91bf-d3c580b73e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 f1e3d691-8f62-4e95-bd3c-29ff77857a2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 7564992c-bc05-477d-8612-7961cfa729ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 3fa24543-fa64-4482-88ab-d725e43bf413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 7468a519-57de-44df-90b7-2adc8ce5e76c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 196b87bd-c4f7-4b72-b4aa-ba707e3a66c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #814 2e5f3592-e49b-4a9c-a2a7-147ac6603908)");
unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #814 b46ea542-8a8a-4b5b-8081-99afb6df6973)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 784cf066-89b2-4950-aa35-785c24bd87dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 49312cbb-f509-4e4a-971d-eaf4cd4cda62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 b04cf342-6ab6-4089-986e-a231d19860eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 4ebb6b00-4b53-4a15-b0ef-1d2953b3ff71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 71c09caa-268e-42dc-b6fb-452a3597a42a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 0eb1c2d5-2ed0-4571-95c2-7fef0d91eb20)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #815 9a161bf6-c8a5-4049-b2b7-93483963ee67)");
unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #815 fe8eaf21-0c98-470b-960b-41d9559ade02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 1659c50d-c7c8-49cf-81fd-be4727c8c62b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 1b38f9f6-bc0b-4eab-864e-e5fb47e2a650)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 2290d202-811a-46b0-b577-6c37c9e1143f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 e54ac343-e7a1-42c5-b490-5439ea60986b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 28fe2f06-b33d-4064-88ed-0667c57f5e7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 82feb9b8-f118-4b21-b2a8-2fac7f60cd68)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h61;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #816 bd0396ce-921c-437f-b504-992d82ce1792)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #816 988cf0a4-4b5f-4465-ac15-6b97af1efab3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 a2f7e476-508a-45c5-81c7-bc50c7ec8e32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 9d9a1b68-a4c2-4d89-8a61-026d35cc2256)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 a8a79cef-733b-4416-a04f-645f1bae3744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 b2923c9d-9328-4ed4-9554-6d0c07047fe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 f955f75a-4d04-43d9-ae70-5674f9dc8662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 e7f47ad5-4534-4446-85be-7b287420e13a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #817 f055a6e2-83b1-4856-8322-8c799970e51f)");
unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #817 a4d8f452-8d84-4280-8509-13226709b8eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 8a4df92f-93af-410c-8316-44e7e688ded7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 f32d9c75-73e4-4ee6-8ea3-a2702921447d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 e1a897ae-1f77-48ca-bc8f-37f8686d3061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 eed8a322-61de-4b40-b3cf-347fe9dbcff5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 1c2faec3-8c71-4f37-8e81-1a0eaa99427f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 69c2d242-0a4e-4cfd-bca9-14aacf7ca539)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #818 a67a03c8-8460-492f-845d-db9af8c944e0)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #818 0f02a131-c46a-418e-8130-2ee02f050b41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 713381db-e373-4095-badb-d930d2da373e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 801c7584-6b2f-4537-9a1e-30ea6a6dfb3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 290240b9-7a28-481a-bec7-8c99857d84d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 061a1103-cf9f-4664-ad32-8d634594bc5c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 a1efa058-d12f-4033-9339-96cd858f0d05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 a593151f-7c94-4e38-8e45-606962e387c6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #819 02946656-638c-441a-ba07-e5ed54558fc3)");
unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #819 7c95c68e-d979-47c6-b090-15b6596131bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 5e8ae8cf-956f-4244-8cdb-361168d4dd92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 4b9b7c9b-3ad1-4979-9d44-e269a6445899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 0eea95c5-f31b-4669-9979-43b2c6939490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 728e5523-f7ba-4102-a0c4-8f20ad4d2a44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 40ad3148-941b-4f4d-9a3f-5437c702db4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 d97c3e7c-95fe-49c8-9922-363eacb1a450)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h71;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #820 1bb3eb34-64a4-40a2-ad89-1380d9d5ce5c)");
unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #820 d9857afc-02c4-4d16-8f8c-2ff8f66e7309)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 f8af1912-9274-4a4d-8c9f-fe1935fd4047)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 4b114e6d-742c-4372-9134-6a60fc244179)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 953d24c7-d099-42fd-8705-3607b9778ec6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 6e420a14-f32f-4923-8570-1f057b815a59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 0360599a-ab89-4f7b-930d-df672f829a59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 5b90b3c4-c3c9-475c-bf0c-1b58f16c0198)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #821 10e90a56-bc37-466d-8921-dadaa8eb71e2)");
unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #821 972c617e-c73d-4fe5-b54f-0a6c7dec6273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 68f19a89-a80a-4089-bb9b-06a40a4c805d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 6d33b717-ce37-48b1-97e6-890afd01305e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 89c2e795-6bf2-4a1f-b3c1-fdc35c82700b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 83be28eb-867b-4612-9ac1-ff86e0ac0390)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 c61f8b5b-4220-4941-8e98-f9ef04bf847d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 573abfda-5a63-4d9b-961c-5d09c1626fe2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #822 2b3934d8-3b7a-45e4-b101-c4bfa8ec8635)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #822 7d066235-c50d-4604-a82c-124462c3d088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 1dbdc030-9596-4af7-9891-8c066e556101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 939f69f9-c1b6-4e95-b2b7-78e5dfeab98b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 c55ab36a-d197-4372-9052-774b7d4d16df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 d240c78f-ee93-4909-9051-e7bb82363516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 3bb8b540-4516-4dbd-b74d-1872f1f7d94e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 b225639c-99b8-4250-8de6-c1b63fdf1536)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h69;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #823 9c3b7d18-1101-4035-94d7-827a7f22487a)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #823 da58b32b-44e8-48a5-8bf0-beaecc4181bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 bc0e4e9f-17da-4117-8651-5bd0335cf036)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 48ad6e48-99a1-4097-806c-7cc706202294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 ecffda54-c0e3-49b9-8b8f-277997bfee6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 fb63590b-342a-4888-8e3c-a75d713af13d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 945be703-872c-43b4-95b1-6399459e52e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 d6ec1210-404b-4881-a70e-34f5640019dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #824 9fc7784b-7cf0-4606-bb93-0de25aec01dd)");
unit.assert_eq8(8'hD7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #824 0c8cc61d-121b-496b-8c0e-f9bf6bb5d746)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 ed13f159-4f03-475e-8bd9-6183e0a83410)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 76e128f7-e04d-4ee0-8299-c279ccab2919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 3c5c91f1-26dd-4e9c-aaba-6edcc71d439b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 1b737aae-d457-4829-832c-221eb4cd5426)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 1f8c7cc8-3d5a-40e8-97b4-450581fe64ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 6c4dfadd-6b59-4615-961a-7cdd967d944c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #825 a60a6e44-595f-422f-863b-dbf37278b8e7)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #825 4e3b7473-5f01-44e0-a112-1e922d171075)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 81f35250-baff-4b6f-812b-1987beb5ae7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 0181de94-c1ae-48a2-98a6-2fc2e3488fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 eb00e1a1-84b0-4290-a1e3-ff1cd3257acf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 237e0ae5-c548-4ae5-9254-c0f78b38634e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 5611ca95-01c2-423f-8814-da82099c6061)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 5daa6f20-7da6-41e4-97ed-bc8afd5919d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #826 ce547e0f-eddf-450f-89a5-44c6f68cc86f)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #826 ffed4ae0-0255-4ced-ad12-42458ef6c1d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 481f4c31-e8e6-412d-a6b1-04c3f4632e86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 1a0e0718-ec71-43d6-b0dd-29b8b718f4cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 bd1297ac-8f1b-41cd-8de4-c0db1364c989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 ce0bc895-8c85-4621-9a92-28c13474d93b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 cd201fbb-fa4c-43da-814d-abe7e14aa5c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 528beb52-bb58-4be2-aaba-497d499fe0f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #827 a7b01408-6862-48b2-b3cb-710aeaedaf0c)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #827 dd4933cf-1757-4812-8b96-ce03a6c0dbef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 f5d007b5-8f33-4c6d-abfe-e26bd124017b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 d6d28a7e-5079-4101-93de-c1969ad57cd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 6bdb86cf-3d19-4e40-b547-e2b93f923148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 d8336d21-0ba0-495d-a800-5d9cdf580f9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 daa316b9-a14e-4612-ade7-915ed46138a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 9c433206-051b-487c-bd97-a79de0b3116c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h84;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #828 7f5ac07f-c950-452b-ae8b-e6b2e232ba8e)");
unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #828 653b64ba-8be6-44ab-886a-d9dd0ababbae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 8ad2c8a1-f096-4647-ae85-92d395dd9d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 b03be308-2dd5-4db8-b780-b63112f50e70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 bd2daa79-db8f-46a3-a910-3a5da450e3b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 e74c4656-9543-47d1-9d1b-843e23a70b24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 ce25c28c-14a3-40e1-95e1-8ad395056121)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 e8ecc49b-670b-4329-80e3-ba86ef3541c0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #829 4900b793-5729-4e85-bbda-2d311f5027f5)");
unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #829 1c573f85-0da3-4012-860d-5baf5d71eb06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 0917fcf0-f0fb-44a9-9420-982979ac0464)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 6152a403-ba67-4bba-82dc-8fa12a8ad691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 24d381fb-6bbf-44c2-ad1b-0f0a4f55979a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 7be42c5a-5b50-4143-8e48-f68f91fbe9bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 b0716cd6-5475-4980-b76f-01b1df6ad972)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 53b9470f-8c01-4637-af47-9b2e01e65b2a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq8(8'h61, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #830 bb9820ee-29e5-4f1a-93b5-2c8213f94f37)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #830 3e2264fb-bd8d-4614-92cf-6bdc1bfac72a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 dd0cf53b-71d5-4757-a238-b598f44ad90c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 80e06034-e006-4066-9309-153ab26f17dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 383e9c3a-42c4-4e4d-b216-fda75938df0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 cf583463-2f2a-411f-b114-14c270ab032b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 34b5e39b-3d3d-42fa-92ac-123038bf4148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 a71a5b5d-1056-4e50-a2db-bc460059144f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #831 5a7fb937-a905-4613-b901-e587a5f6320f)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #831 bcb33715-5fe4-4280-b6cf-ba1126906e7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 a5e2a778-9bf5-44c4-b5e7-9a7b31ccf5e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 e89a7bdc-56a9-42bf-ba88-621bffcada9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 48317154-1b2a-46df-b449-f8405901fb64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 777edf0c-38ba-4362-949b-7062c64a30e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 e107c440-464a-4b20-b667-483d13134af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 a0310f80-5253-4af5-b603-18eb8cddabd4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq8(8'hB0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #832 63877d31-2b27-49f6-aabc-e1374788b781)");
unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #832 80aab0a2-082e-4be0-95c2-41bf45e7363f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 2a54cd7d-0385-4fc1-b0e8-67e8ba9e1cfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 ee885316-c58e-4876-b9d2-769aa828908f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 ae4ef048-a0b8-46bf-88ce-7dc03961ce57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 6c94e958-df11-4c1a-bbde-993a6a7a01b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 39c25384-66da-41a4-ab2e-0e81c8475628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 052d5b9d-13a6-4c2a-a604-f0c67efcf55c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #833 d4b402f8-9715-418e-945f-d4a8dc826640)");
unit.assert_eq8(8'h5B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #833 251bb4f6-3e53-4c7b-a694-3e4d4673fdcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 aedb2f2a-a556-4c7c-ae84-29732e6c7881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 a2ef41e2-bb51-4cb9-acb5-5b191ca0c665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 720824d2-c889-4bb4-9659-f28693943675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 09aed63b-ad55-4a13-9fe0-c82b1743fbbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 715c0181-423a-4550-b04c-b06f3867e058)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 6d6b64c7-cfd7-40b3-ba01-e720730d8459)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #834 fd9e1c83-66bb-4ca9-a86f-73129557bc92)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #834 c0d9d33b-2ed0-44ba-b49e-8d89a53c53da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 ced7b5e0-3026-4104-a8e5-3ed42474c251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 54991594-9590-4c88-b562-a851af3810bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 f3966415-6b6d-440e-8b01-888f788678b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 a212d785-27b7-43d4-a792-4b732b7c8174)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 b7df579b-bca5-4f4e-a9c1-912f1f4e5cf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 9a7f8786-eea6-4eeb-9d8e-3c02e2bd6fb4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #835 26c30f32-3163-4285-a63f-e3f8f886efc6)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #835 86296afc-7424-4f51-a7be-a2dd045cf163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 ac28b633-1641-4183-b3c5-6766d44ab2c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 5b671959-50b4-4a7c-b44c-2ab8450f1ca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 2555e46a-7e17-4de9-a7b7-f94544c13e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 10ccf906-baf3-4f00-aaec-b2a3a98e6687)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 d88c20a6-dae4-49b2-8302-5451cfb28aa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 41f83191-568a-4779-9596-f11fa5d83c5f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #836 6a250357-1cd6-4164-aab6-09fbee0612d3)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #836 d942900f-fc5c-4dfc-89b2-f553361ecdec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 c3d54736-0b44-41f4-b09d-52e3211cac33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 90f65cf0-f832-4e22-80e4-17ceaf3692f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 44831e41-7952-4a2d-bb94-b2e56fe5e6ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 cccd5cd9-b2e7-42b6-bef0-c54d8ef29af8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 9a47e50d-09f2-440f-8761-33d78dacc5ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 e72e6319-702d-406c-8164-41aa79953dbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h81;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #837 817dd941-3efe-4d8f-a391-a51e268e375e)");
unit.assert_eq8(8'h81, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #837 d4785a3b-9731-4dbd-91f6-862672f39b3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 697adec3-1a62-48fe-bf7c-d9eb3031c97b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 a1b02acd-071c-4911-9af8-769f223092fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 b1daf6e1-8991-4ac5-b7dc-491eb1147880)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 6616635a-b5c3-4270-82de-a578ddee4ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 55816bde-6e25-4a0e-a9e5-5ed9ab7d0725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 64d3e66e-3ad4-4cf7-8f15-e2a38f36c624)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq8(8'hAF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #838 9a51da58-9e5b-440a-82f8-fb88af578e2f)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #838 55ec98c1-89b4-49f7-af98-0e503946e0b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 8fc3a4f9-7b96-4e44-ba56-3791a3a899a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 877109da-14cf-44de-822c-eb1a405b6ac8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 7a83545d-9b6c-4e67-b438-03d269a6c41d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 806c5dfa-2849-4382-8856-3e5c424882af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 17115c96-d3fc-43bc-a270-fc25a3014302)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 a64d52b1-66cc-4d1e-b50d-0f34f30692ee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #839 f2f79a48-0f3b-4f4d-85cb-6f6369d0ba9f)");
unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #839 da947bce-df3e-4a4b-8e3b-35a5eb70bf94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 725e210a-7e2a-41b4-8cc8-1592a75e2164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 31b01f49-6840-40c4-8bd3-5719ff0077a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 4c31c850-2b8b-4c3e-b082-eff454383885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 995949bc-2868-42cb-8398-fface3e4872e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 1372bdb1-a952-43a6-9728-515688390e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 afdb572b-fe62-4339-899a-2bafdc578735)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #840 3bedf5c0-96d4-49de-8685-8818fcdae8ad)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #840 91142a3e-6c4c-4179-8dba-5e12b7cbe44f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 5c8232b4-0153-44bf-8412-0bd29f68163c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 ad62432c-5fcc-4b81-b1a5-ab028bfdd8eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 efa2be98-fc21-41a9-96a8-6888bdf099e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 738a229f-b409-4036-9d17-948b2e8ac02f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 cc14768a-0bf2-4816-8503-69d828e00979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 c0eec5db-24dd-464e-9cd2-616616a460f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #841 30bac819-73ca-4682-86d9-307ab4f374e9)");
unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #841 262ce1ac-9095-4e6b-a3f0-29a03f50bb06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 8aa0d302-10c1-4beb-ace9-8ecd0c3d451d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 ab5b0bbc-fd1e-44c3-a94d-eec6db35237f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 3f89372d-3bc6-480e-b66c-77170b1badec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 57f99c58-5fd9-49e4-8e7e-d8e9bb085bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 22a37c0d-891b-4f6d-a313-6b479092da75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 0a0124b1-6598-49af-8c03-b249492b10d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #842 c6eeea7d-f52d-4ae7-bd89-2929e06fd3f2)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #842 82f2cc8c-2c9a-42ac-800a-d8e4af803ab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 02371414-4a10-4556-863c-c7e831572005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 4878d4dd-eb85-4b66-9318-670f38ccf8dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 06df3d10-b33b-4598-b95c-e9d91b30a26a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 5d8c43a3-ee4f-4c33-a0d1-f84d82033372)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 617707a4-b0b9-464a-9745-3fcfcaa4656a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 18d5f3b8-8a51-4850-943d-429737847be8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #843 89b1f731-f8f5-4353-8f9c-b430d35ef8ec)");
unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #843 94a2730a-14c4-4e5e-b4c7-80a021bd594e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 95999467-31b3-49f7-abc3-9f06009b979c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 1618e6d9-51f4-4c01-99e0-7c14a5fca161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 b4dcd9e4-b180-4efc-865e-99ad64206a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 9a71b905-f83a-437b-9a27-80c3f048b556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 13b6164c-a405-4de3-ac39-cfab4e5e8980)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 3d333fa1-1045-446f-a7d6-3139a08afcfe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #844 8f21162e-c0eb-4f3f-92d9-bcc8e896c3e6)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #844 3baea80d-6cac-459b-9b1e-73a7ac5971c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 d4cb6319-d28c-4d9d-aaf4-85c68d5215e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 3c9daf59-86e1-420c-b3d1-e5fc83e2f43d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 3c950c89-9fa9-4018-b268-d32730fe7b5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 233ce41b-6d89-497a-a863-37c6606f5591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 4feb215a-e925-4d8c-8cf1-22362b03fcf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 f5e454ae-6c8e-4b26-8f10-8fef4f88bf36)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #845 35b96588-b906-4d8b-bba2-762961cdc86f)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #845 2cf2f548-339f-46bb-973a-678bbe86e96d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 1a967824-8050-477e-a5a2-7bc451580968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 fed774c4-d1fc-496b-8538-d6e32db985ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 43854c5f-f84f-4074-ab31-c21a331dbd60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 cc6b2be9-7c06-4bc4-9cc9-2f7c568024d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 0562b3f6-50e6-433e-8134-51b1dd7899ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 fba80328-5f0b-4268-bb15-6ed744a96baf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #846 e563bee8-03e3-4202-aad5-89f5e733f908)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #846 864dbc43-2709-48f3-9613-69d8cdc0f607)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 10156c54-008b-41a6-a485-43fb676aeed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 a076c6a4-a822-4cd4-9686-296f6aa19425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 ea63295b-6ca0-41cc-9b09-67f79d3c93ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 ffdb201a-2705-4f97-90f4-79439f1be4b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 aa910766-743b-490d-b3d7-cdfd578e16cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 199881de-978d-4438-9b32-d8cd37421756)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h74;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #847 34cb1f35-6dd5-47e5-a120-ba4a0ff43f80)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #847 e780d93c-eb7b-4bd8-bd3a-2dbfe5618500)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 13659288-0621-4f5d-865d-7d0e7ec79255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 6b1fc42e-1c91-497a-aa56-4f62a22476b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 c214c685-30da-45c4-a9e5-ee1298f481bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 ade90a6a-3cb6-45d4-833d-03e9674cdffa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 1f919902-b859-4f2e-b2ea-addb5ac8bb05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 87acbd1c-57d9-49d0-ae40-8dd25eff1594)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #848 a41c3d45-85b6-4f4c-8d19-9725ba03664b)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #848 dde9df5f-fb09-4514-bafb-5e4e81eb7dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 5cb12090-63eb-47cd-9f70-d09c4d13b67b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 21d9727f-fa52-4102-b7c6-5bfa69d2c51d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 14c8c3c1-0e9b-449d-8808-e71dbc182327)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 29f78b26-68ae-4bc1-b81e-ed3398c28a02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 0eacbd3c-e35f-4816-9719-67c085d4a83b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 93364666-07f3-4147-9e57-921ae0ee596e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #849 65d28393-6069-4c86-ab2b-4bdb841fe0b8)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #849 7773bcb5-bb34-46d7-82a2-e6bae73b4318)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 b702c657-e68a-455a-8484-decc1e564c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 99bbe328-737f-481c-91b9-9907287d223b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 7d5b467a-7dd6-4a46-b43a-56c29677ba80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 3657e5a2-5b67-4181-a127-dcc6f32cf453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 e903d070-8117-497a-a8ad-6489b1abb593)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 f125df2f-6731-4f4e-974d-b584e5b7b7a6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #850 d8e46871-068b-44d5-aa65-be5815d69406)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #850 0a3eff62-0fe4-4c33-8fd9-a7105a74b345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 9c0968bc-295b-4650-aa22-d542fd2f6fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 f431ff9b-4bca-4895-beaf-484ce7cff02f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 9b3c9064-060a-4cee-9138-53b693d73a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 e895aec6-5bc0-4788-89c7-84f9b551a81f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 0dbeb1d3-4168-4eac-81f6-66c904f4343c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 8c2ce627-2e1d-48ff-94cb-fe7e99c4a5cc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #851 da40714d-633f-4782-b1b5-ec1b2ca0e4d5)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #851 cdbc20a0-7f7d-41dd-becd-0e69a2fc7718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 895a4ef2-6713-424d-9531-4b967bcea99f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 74de57af-8b35-461b-ad06-f18e877b71de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 70abdb2e-3b68-4dfa-9449-16df5c9ad528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 45d7ff19-9fe2-4b0a-bd62-a1cfc620b4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 22301351-aaac-490e-9a6c-f39dd1606ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 4a2e8b42-6cb0-4faf-89b4-b0935b8801b3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h75;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #852 cc8c297a-2a08-4cc8-b99a-52b24f13e743)");
unit.assert_eq8(8'h75, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #852 a2dd8b48-5e30-4393-9981-574fd2437c64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 e0cd07ec-cf8d-4936-9714-60c39a30e261)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 f0909ed2-0d02-49ef-a7bd-57ecae0ccee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 eabfdc9d-5ea0-4201-a8dc-0805f62c713c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 4888cb2c-bdbd-43ca-8a39-5b0f050a03ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 243db0fb-7f06-447a-a105-b34917f37bc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 3829089a-8c70-4017-a21a-969c1d19e6d9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq8(8'h1E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #853 08966766-f669-4984-8a04-5ac352b90dbf)");
unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #853 c515a91e-dcbc-4689-b6cf-9fd2124f0af6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 1a910ec3-e681-4d3b-81b9-da7c78756d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 f56ee35e-d5e2-4439-8060-bb68d8c063f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 488ec1c3-d7b4-434a-9a25-432923b8be40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 ff32d65c-cee4-401f-a03e-1e5d84667b85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 30e22d24-a963-47fa-8ed1-d083b19afead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 2518a737-24ae-4dd4-a210-e0057fadf844)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #854 050b7cff-e924-4cb6-99cd-0927d90b0f70)");
unit.assert_eq8(8'hFC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #854 13f46c59-2091-4b39-aefc-8329ce704c1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 865c4278-d37c-4fe1-9b44-6a6abe6af06d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 b5696359-0beb-4caa-bb03-c0ee8189504f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 f23baaf0-cdb1-49c3-b34c-5c92d9c09544)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 43d9b58c-ccdb-42e5-9554-0af4dfa3a515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 ed27f7b9-a0d0-43c6-8f7a-8dba1634c2fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 f86e3382-a175-49f2-8261-d87ec7bd0cb8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #855 b93b3eb8-5064-4f41-abaa-1da1922ab034)");
unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #855 38f20af9-e038-4f4d-be65-83df829e3db9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 4b05461e-8c9b-4fd1-9992-e089829a7c01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 75249058-3705-42d3-a6b9-8f1ac3ab757d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 62e1a5eb-12f5-492a-b543-fda364facc59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 f98fb61b-fdbe-4359-992a-9778ee9e9118)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 b01c7de4-dcb6-404e-b776-557bb3d98f75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 856d8250-2914-47e8-af46-8c963bbc2d51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #856 c342c89f-297a-4f4b-a108-76d585d004e2)");
unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #856 2e17fd27-9f91-4280-86fc-badeb7d70cd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 e6117d5d-ff46-45ce-82b0-47f3ed985770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 c6b3b89d-a426-45f5-a7ab-5072b3bbca11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 6ff03932-7727-4315-b593-6b1c086aa137)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 d7a8cec0-23ae-4059-95d9-373c9fcb256b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 1614e339-2e6d-498f-a144-d8888b05c91f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 4311de4f-928b-41a5-b49a-0c278e00654f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #857 033e12f5-a8ab-4aa5-85f6-0f3ed7864172)");
unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #857 84a9c593-bc1f-431a-9062-9eda2b638197)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 d7394db0-628a-4d6c-af7c-129763aa4ede)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 511d6980-298c-4045-9d0b-84beb5a93e35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 89393b4d-d1b0-4a14-b065-af5013151332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 a673d803-cd9f-4a0a-bf88-fbed0dfec0dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 dc1ed5dd-34d9-4490-a74d-de45413bd441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 2d5f2c6a-c7ed-4796-948d-6304b85dc5d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq8(8'hA7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #858 213fa425-4d5f-48fa-b515-22abcf2bd876)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #858 c60742b5-0aca-47c8-88d2-64c750297e6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 44a3bf9c-704c-41cc-a236-4bb413d02c29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 1bbfe7aa-7611-4326-9bfe-65c155d2bd49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 b093b195-ddc9-4425-a06f-01a9999796f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 e542049a-27b7-4ccb-9e1e-12d9ff59f22c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 2e7072c2-3a1e-41f6-b257-615e3641c037)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 670005ce-3d89-4e73-81f8-7d28770b6efc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #859 19244fdc-029d-4d4c-8d54-bc5267a6f1a2)");
unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #859 763391a7-6235-4ba2-a71a-8a452f193d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 cd5ec2a9-4c66-4062-993a-2b5e7c9ec735)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 c601face-a282-4a13-9b17-2c1828fcb55e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 55c55ec4-5b9e-44b2-bfa4-a052bfb739d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 f5d9d20c-7de6-4644-bdbf-b959262c9a26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 73579d84-472e-4b03-b073-c6ff57357ee1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 0752c8fd-205d-40b8-bebf-be58ff85dcb2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #860 4b6ff016-f377-46d2-ae0f-db4c6399be7e)");
unit.assert_eq8(8'h0C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #860 d6d7039c-a93b-4fd4-8645-39c38f6d9953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 505c6901-45dc-4e02-b563-4ee1821bbc50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 aa59599a-daa8-4527-b578-b02c84020cef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 09cb7c20-a0c2-466d-9f0d-80fa52cb973d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 e2ac7700-b7c0-44e6-b20d-ed23c0539c4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 72a04f07-a1e1-4046-a6d1-1127db060160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 ea29b503-0e03-4891-9653-b25d6688bf85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #861 1c823fd2-dab8-420a-8eab-616cdc2febb3)");
unit.assert_eq8(8'h8C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #861 d554517c-2681-41e2-9016-4ac653df7676)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 085171b9-fb17-45d2-8464-c017c07bd3f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 48b514bc-7ce0-4f4b-8cbe-a34fed00549a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 152477b0-05b0-4843-8669-5d6236d6b988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 393d10fa-878c-4f49-ad6a-6b82b693be73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 6bf4a333-8de3-45e4-9978-29492c3fd7dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 e300fbb9-2e59-46af-9615-9468ed98bf62)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #862 d873c22d-e502-47f8-8f53-73cc1af8b05a)");
unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #862 edec3cf4-1c93-4333-8b77-1b9bc0511054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 a5633e2b-a70d-4f6e-83e7-0a4648ba5cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 8f1a5d7a-dcc6-4c94-b18b-8b54a507d785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 1b34d6ac-371d-40ed-840f-2d39fbdd127b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 94ef8435-e368-47d5-b321-191c138d38a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 eda4ab76-dcb2-4649-a09b-98dae5a32445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 42c29f4f-83c1-4553-add5-fa3ef2e33ede)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq8(8'h1A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #863 6c70e3bb-a33f-4c23-8077-63d8d3857935)");
unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #863 e6e2e7f3-828f-4d90-8a6d-0caefd810702)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 0e3bd5b0-e2e7-43e3-ab1b-9683fcd071e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 1404feb4-4d8d-47a9-b5a2-44bef0bf22f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 bc48bd46-d0de-41dc-bbbc-91c036f85a55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 dcbc6de0-6e5c-4086-86de-2ba8e61f1a87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 72163327-207a-4257-b63c-d173861c1de2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 7ccd5e64-4a8d-428a-b82e-8177a8b0bf26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #864 80912fc9-3c29-40c5-b904-429cf02163e9)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #864 0c4f6ba2-487f-498c-85a7-95eff7370813)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 897599e5-5fb4-4ca8-8e3a-ea1810f29976)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 a490056c-243e-4b7b-a2c5-b65f096999ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 847af20e-c978-4886-aea1-ca9847c0d4e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 ea6ea3dd-4887-4a2a-86d0-f2932826274a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 5bf16dec-12e6-45a8-81d2-21b48727265d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 a95e83fb-7a75-481f-8673-cf3921dd4703)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h72;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq8(8'h72, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #865 781b8e8c-bff4-4461-b658-c523e0305515)");
unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #865 46a591e7-c471-4c73-9ba1-f049df11e584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 bdcffea3-ef26-4e77-83ff-0322a15baf25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 4c158b04-f1bd-4875-a6ec-e916eb452f6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 0f2971b9-1967-49c0-9d5c-bb4037ec7251)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 ca08a979-9c0c-4374-9a23-b9946e5dfddb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 bdbbf810-ed2b-4a2a-bf40-373823e6ae63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 048f3370-eedd-4117-8d2b-280678db800f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq8(8'hEE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #866 9629e01e-f4db-4bca-8a70-a7158cfd9e9a)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #866 b63ecf8b-6f31-4f6c-9375-cacae5efd40c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 02379d70-2d0d-4138-a8c1-53ccf84db852)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 62305251-970a-49e4-8509-fbb24dafa99b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 5185975c-d49e-4efe-97f6-85c3854b2a97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 171381b5-ce29-46b4-8afd-1a6c9daedafc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 626de1f9-195f-48c1-a6c9-64aec7ae50a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 dfd95691-8b87-4ac6-a724-26e65e64d725)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h31;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #867 dfa1c3ed-13d4-483c-886a-9e6e419c3032)");
unit.assert_eq8(8'h8F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #867 508bb3e8-3ab0-439d-b304-37884c5114c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 c0e6b6dc-bdbf-4d67-8020-867306929ec7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 a167b783-56d1-4070-bdb5-74667ba102ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 51297ae5-1353-4c79-864d-ae34b1f459e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 7b196b1e-b7fd-4c29-b6cc-9bcee2195b21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 7bb1690f-f189-422f-bffa-70a9c7fc79e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 342cfc7f-2770-4db9-8fb2-f6b7f351472e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h71;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq8(8'h71, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #868 81caa643-6c12-4ca4-aeb0-72c89d59b6ce)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #868 b79fb431-537d-4b79-8600-bb0987a8bf7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 2ab9a596-824f-4421-a9c3-08022d81f8da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 d17bf2e6-d3a9-4270-8b5b-ff2840bcf52b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 cf599c2c-18c6-440a-bb3c-16e96bdef284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 db938ece-1eb3-4a4c-8f45-5e955cb5790a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 27a488b9-7fe9-4162-b5e1-c05052fc9e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 daee2669-5908-4c36-8ace-213df9decc5c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #869 6bc0f71b-9efe-4aa7-9896-832aeba463d1)");
unit.assert_eq8(8'hF1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #869 b93800ae-8629-4b08-a3aa-d52c910201e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 16c41eea-8a2a-4751-bcdf-dde61da8d227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 aae6bed5-f2a3-4d78-9290-60b1c80c4389)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 aa3a3e45-b2d4-4335-9a82-34d7f4f856b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 1825c890-6610-446d-b3f0-3b86dac50186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 1aa3045c-4775-4cb9-b383-241c48fefc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 42e5697e-50d2-452d-8b24-3513abfad077)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #870 adc1ba1f-957f-4f9c-acb3-94758a1275cf)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #870 3d15c81b-78f4-49b9-a67d-058f6e89b086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 dce2ed24-7a13-4e9f-aa93-86135cba301c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 f09c32e9-04da-4296-a016-93728e751d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 e8ad3e6a-52cc-49f9-8fb6-2a6123c369d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 bf76aa5b-8289-44ed-8178-60ae72a8c346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 3b2680f2-80f0-412b-90c0-0939eea3b170)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 9e21ac70-e6e4-4703-b491-403e9070f7c3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #871 11194f1f-60ab-43da-9bf3-290d593a0267)");
unit.assert_eq8(8'h60, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #871 954c0356-2ce0-482b-9e07-82ee0c580839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 0d0d2908-8a97-4154-bc93-d1e2ade965e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 2cc3d144-d2fe-473a-96c5-c6966621c0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 4e7e8808-f8a8-4d4e-827f-9005b7a47825)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 c6209af3-c05c-4cc1-8895-c0eda36c90c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 2e9dfa9e-9d67-4f07-ac4e-c9cbb372d9db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 82c06909-83dc-43ab-a81e-7b6a3edca071)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq8(8'hA5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #872 cdcdef1c-7f4e-4a3f-8ee7-15b5aa03e5b4)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #872 117f7957-44d2-4569-8e12-572203eb9e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 817f665f-d6e5-47fd-af68-568028b8723a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 7d1409c1-fba3-41a9-9f96-c3c45e9479fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 3fa96d2f-c348-41be-ace1-762cc888d086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 9674ba49-85ba-44b8-adc0-6276b231543e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 09b39e43-f079-47b0-b349-4613de83cf88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 40078892-27e8-495b-81c3-efd14cb897e6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #873 9cb95841-0435-4772-926b-9ee1e694276e)");
unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #873 6c341cf1-7c81-493e-8b4c-d40a89f54989)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 d6eeea1d-f178-4ad9-84ad-d1a71dfb281f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 ea5db578-4ed5-4cfa-a5e8-36bc8a33a461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 02651d6b-87bd-4809-bd96-ea79c1248bec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 3a4656b1-c959-47a1-877a-514d62f6c936)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 e842906d-c79a-42c3-82ce-b79a5c31cb85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 606d7df9-4dff-4269-a64f-39c046baa829)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq8(8'hB5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #874 4a1d5c75-7eda-4323-b92b-0e140d884e46)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #874 3fd11ec3-8ae4-475f-9951-098c1381b604)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 e1152be2-11c8-47e4-b723-4d4813154f9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 420008ec-447b-4876-9a2f-a699aa69a49d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 28aacadc-a2ab-48a1-97b2-c90b5fddf1b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 a75e64a3-952a-4e28-862d-c0b8132b5352)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 47b47ad6-5726-4adb-8a6c-8a2599e689ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 ff36bf57-2b20-4234-b819-ce673f0a9fed)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h23;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h03;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #875 95632447-f964-41b6-85bd-811c56f283b2)");
unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #875 5ede26e9-3722-4d38-9dec-5af01ab6300a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 ca987a21-94f1-474e-b857-6a356dfb8c0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 4e92c2b7-71c5-4e5a-8640-59dfb247ebec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 4e1cca37-5f78-444b-8e71-f209b32501c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 576b2ded-6fc9-4883-98a4-1f3e36acff92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 34a1fd53-8ab3-49fd-858d-83c51a069583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 ac4da635-3cd4-4786-a5cb-eed96d7d63ae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq8(8'hD9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #876 9c71ed55-00c2-4708-8df4-03b7bf328e95)");
unit.assert_eq8(8'h55, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #876 7bc1e13b-53f9-4e9a-a5f9-9fc723cf7379)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 a2710e09-10b7-40c8-8c99-3ef5fc7c8c4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 be33c12f-638f-49e4-aebc-1dc6a63ce0eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 76301700-68b8-4bf6-836e-9058a62bf1f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 dd33c9ea-b0ee-43b9-af1e-20097156713e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 9d2a43d0-141e-47c6-8c71-0ca032b7dc0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 143a6cb1-cdad-47ed-856e-6ff7f99176e9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #877 fb1013a5-8008-4e78-b57f-7a343c38201d)");
unit.assert_eq8(8'hC1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #877 f22d4ea0-4c72-49c2-890f-03731421cfd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 fdfdcc2a-216e-45fd-be90-c648b85cf09e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 1412199a-9165-4a13-9906-acfdb6b328d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 b840b908-925f-4385-a417-83da58fd5b43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 cbdd6ad6-2c7f-4598-b449-f4a65b3bb794)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 9914754f-73be-4b33-8a14-b34cf9c9dff9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 c14f17aa-e9f5-4dbc-93d5-4dc5cf733d2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #878 379879e2-3585-4552-ade8-2d0c5b894795)");
unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #878 d638b03e-bb25-4867-8082-151f4371dd84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 df1a2928-459b-4ece-9ab8-f8f9e34f5eec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 de61999a-0ccf-4f75-a34f-9860159d7b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 6e2ee58a-05f5-4dcc-8bd9-f832579a9434)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 9978036d-a0d0-46c1-a4d7-a7087cb29236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 30674c70-274e-4f8b-b5e4-eacefad65103)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 cc028739-6810-4621-aea8-ae10d1701f4a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #879 5a6b6475-b424-487f-8a51-3ac6d5f2228f)");
unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #879 a16865fa-d255-4d1c-92de-e4c7c8e282c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 180a212a-3d57-4580-a102-54778a0e808d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 4490f049-1f72-4ff1-b583-51156d039ca5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 c43e680f-b3db-45db-89a7-e37f73f4975c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 66d4b448-ce86-47f7-a2b5-d2e6f917ea27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 bef04df7-26f1-4276-8cc9-7483f0fd97dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 caa72cb2-b2e6-4b05-a1c8-d64c17ce7757)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq8(8'hC9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #880 37ff2432-75a0-4a07-bd63-1e455e67e6b9)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #880 73e4c38b-9dee-4444-bab1-8cbb05b8d2d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 7c392b83-75a5-40e9-9c81-fbf9fd02218f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 87c4234a-5b30-4a0c-b352-75bc768d53c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 e4389db9-77c8-40de-b3d5-c51f579c0cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 c0fa3a56-6a1a-4adb-91c0-1f037ace03de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 035410b8-3920-4825-8512-b11818f4d303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 d7faa766-1944-418d-ba1c-94c64227564e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq8(8'hFD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #881 ab07b6a8-3897-45c4-96b7-5017d220bf4d)");
unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #881 ee59afe0-d29e-486b-b971-43c6cfb7bb74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 cd1f18f7-0cf5-4822-82a0-b81ff4fe0409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 cc2ebb8d-64dc-4702-a8d1-f7e6e69a518b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 459eb883-ef42-4ae9-8468-5ebb1889abe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 87dadc8b-ff34-4990-ad33-92c5796b3025)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 6718f7e8-b786-43bd-94fa-3ddecb045bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 5b24ae75-bc93-499e-8f38-6f91f14a2adf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h10;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #882 7f8722cb-0e31-47ae-bd7d-c8232b8a6105)");
unit.assert_eq8(8'h10, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #882 4e63e90a-509e-4742-90de-2f0bce61e956)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 ad8a0937-5352-4fea-ad44-dba22d9c7b20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 6b469c0d-6e6c-4127-a2be-14bd73d7df27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 1a793e33-2ca9-4757-9b88-68ef32ec745b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 8eefe317-ebd5-4cdc-8ecd-67b7e0963c1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 cdd8dd4a-0a60-4359-9a55-044b2cd61d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 51d74b01-8f6e-4db3-ae3a-c3a8a740ae41)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #883 8b5de738-1ba8-4f8d-b71a-a35879d20e8a)");
unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #883 32d00650-46e9-4399-b1bd-4803d0ec0c7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 e91a2655-3a2d-4577-86d3-dd01772e322c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 4e64e2d8-a824-402d-86a7-5cb8be456412)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 5f7b9c7a-47f8-4481-ad7c-e2253ba67ebd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 05c32d8a-85ae-489a-8c9e-a41db6f879c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 291f0242-a23d-4b06-90fe-fc3bca0afbc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 5537e967-d156-48b8-9e1a-206edcef1990)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h39;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h03;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq8(8'h03, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #884 b9e84ecb-8943-4458-b43d-3eb19186816c)");
unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #884 1c95863d-016c-434f-a496-8484d09fbf45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 898f1e8b-c1e9-413a-a17d-06c503250784)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 10d07aa9-7508-4cb2-944a-fe891ab093df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 3737cec9-a237-421f-b4f6-3522376dc057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 d326dcc2-393a-4fb4-8e0c-b92f300880cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 93899715-7a78-4d7d-b352-552c13795d03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 d8e7bbf9-1127-4623-af7e-15f4517738cf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #885 09a1d548-f733-455d-a86c-30da61716062)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #885 875b2cc5-7b7f-4d46-9095-cf4df28348b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 f9a1cef5-270d-4c1a-ac1b-91ba2b5eb548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 0fcee35a-0c3a-4128-b14a-f70d8435715b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 5a37ac3e-2e84-4cdb-97e2-f22b032fdeda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 018c7bd2-28b9-4d21-98b9-97038eacceda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 14f46643-61de-42af-8b94-16d191cfddeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 74630381-fec2-4588-bc9f-1d702c74c0e0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h09;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq8(8'h09, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #886 d1a0ec2e-226b-49d4-b41c-95c19cdea8e7)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #886 a4b85631-c8b6-4cec-bf61-daeb92d6206b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 7811dba2-7cc1-4db0-bd2a-a21725e15683)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 bb6dec89-b7cf-4b76-8b91-108545c8c90f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 f7550497-884f-4349-8f21-d56a5895f30e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 d19c7ca9-8b79-40a7-b6bf-29d0c3b0cf6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 a012e8ce-e78e-46fb-89a1-1a13e4e0eba6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 8c693c93-aa49-4526-b2e0-204ccb2069d7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #887 c4c8100e-7f09-44e7-9e1b-b581a928177c)");
unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #887 6b252c4a-ef7a-4032-8b10-f4649ee5cfca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 269f13b9-a389-40e5-b0f3-3878990d7b2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 83cb0008-b248-4a69-9b23-1adfac198f62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 7d5dec3d-123d-4f91-95c0-e071af42fe82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 05d8764c-127b-401c-9aa3-9fddce72e7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 1cc17957-0a82-4660-9363-fd3b575dd944)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 e91e3fd0-378c-44b9-947e-acdbdc5cfb09)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq8(8'h5F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #888 e7c9f589-ec7b-4267-a3df-6ca0adb212eb)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #888 f80cd4ae-1eb3-41c0-a9e0-ab8fc9a021d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 395e719b-5d3a-4275-a6b6-ac2f3fd9ec21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 4d0a40f0-9dec-48e6-9f72-f96c189d5e26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 6652bd18-dfcd-4fee-94c4-19b0b2d5802a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 748854e5-3179-4057-a77f-2aa11bec27cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 5fe8c16c-40d8-467d-bf49-adfc3a577241)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 28a1e70b-1830-41d1-bb94-87baf7d4cc44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #889 ba29b740-3cbf-444d-865b-03f447b97473)");
unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #889 8bc22122-b21e-45b7-8877-1adcc02c4e71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 752040d6-a7c5-42be-8482-ccf35b59c32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 fa085acb-dc95-4c4f-8e43-4d1343979add)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 a76511b3-bc4f-4ff3-a560-be995f59ac69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 8a1637dd-7577-4dda-ad73-9e6d574e19ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 03b86828-844d-4f78-8a57-61fa7378bc33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 8a8854e6-4788-4d97-902f-66afa298d370)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq8(8'h0E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #890 5a298218-7a65-44e4-a089-f43e2310c61c)");
unit.assert_eq8(8'hA3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #890 e49ad119-f25a-4b12-a57d-c4c341a4501d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 7ca934e5-08a1-4feb-955c-7f8e74ae337b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 05fc73d3-c7de-435a-b749-f7dbef15428a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 41ababbd-247d-4a34-b480-7d17db09cbc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 5dba9906-5c88-4bba-ba90-a747563a7c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 cddf6c11-5f2a-427c-9953-0e8be7b87d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 b8eb8f8f-6be5-4d8c-9d25-4bb6a7175130)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq8(8'hB4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #891 09671751-cae1-4e64-bbdf-26e9c5d9251c)");
unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #891 11d77e65-1de9-4873-b27a-19ff18f47e52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 25aa4ae4-a9f0-43c3-8c41-e0ce35f2da7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 27278473-9cc6-47bf-ab3d-57d68b31dbd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 f35aeae5-e648-4a6f-962c-3ae7ae8802be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 ba3a556a-a6db-4186-9caf-1f353d795263)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 2a21bb85-0174-448b-851e-7703c03d36c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 b4dc4a96-d2a7-4148-b2a4-5e8b1d7327f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq8(8'h92, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #892 679c4f0b-2b58-4ac9-8bb0-74a366669123)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #892 e0b6ac8f-c9c1-4a26-b571-e38b3ba45d63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 83d7b92e-23b7-4524-99cd-d1f4957f1f3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 1a7a1c6f-2eeb-4d9b-bbf4-993dad689aaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 28309a2e-3232-406e-8731-371be2a9ef4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 9960ef36-1d47-420f-acea-d9de207a01ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 93051207-8ab0-48fa-adb4-4c5dff72ad64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 70a253d7-d020-4d07-885b-b137d3216cdf)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq8(8'h6C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #893 fa0ed3e7-3a7e-407f-bfaa-bec1b2a66390)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #893 13ac57c3-b486-4ce5-bccb-598ee663fab2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 de3ec155-e737-454d-89cf-2656cfbbf94a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 b72c4092-a43a-44b2-9e6b-0096982f435c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 5e0f39e9-be88-42d9-8ba1-a319b90b876c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 57f6e91f-4c78-4617-97c1-a9dd8fd6bbec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 eb0966fd-eac4-4151-8882-828c2bb7fae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 1a3da969-bace-4221-af20-01752302d224)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h1B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #894 4aa16f8c-ab1b-4825-ad5a-aaf6e7822e9d)");
unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #894 20191247-849c-48e7-969e-2a5fea9bf105)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 832766ca-4101-47f9-8525-6cb467c0ab13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 956c6a6f-006b-4064-beac-d60d35c864e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 34a22a16-bcbd-47c3-9036-1c5a2e967cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 ca05c0c0-c9f4-4cb4-8806-0a7a6f75b1b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 ed1d8cc0-6221-40bc-bce4-11a0425552e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 980a850d-fae6-4bea-84a1-b33ca62048b2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #895 5524489d-e417-4f46-886b-1a545cc9080d)");
unit.assert_eq8(8'hE5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #895 047d3174-1add-4140-a893-9f88260ab536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 6da2b85d-4f2e-4e1d-aec4-4a10d5d2ca7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 8ceec2b6-5b33-4935-b0ef-4c39aabb7100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 2c345bc5-d1eb-4bbc-b21e-a55aa567287d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 8594ed2e-d497-441e-aee4-5cbf4f15c067)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 ef017fc4-5640-42b1-88d1-842aa092a184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 f475011e-8c72-4042-92c7-bfb5f73ce4a3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #896 36b64e09-ba9e-4bd5-b346-0c4b00274f36)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #896 2982142c-22ac-40bc-80b3-cfe603aae44d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 3ef8b3a5-43f3-4387-bae6-1726e521c6a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 ee2bedbb-eb37-4017-9bd3-86947786735e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 99f7522e-e3eb-41c8-8b1b-df224b165fe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 4682b1a3-14cf-4b5a-b458-f57ed1f42548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 a90971ce-1746-4ada-8bdd-7ad646f2b167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 6ee7a0b4-c905-48b3-b5ef-426ee46159e8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #897 c93b61ec-78bd-4a85-a56e-0268b7c4f10d)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #897 f53775c6-c091-42e0-a45a-823a82381614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 bac6a5f1-3461-49f3-bf21-aafe27c5580a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 0d681451-a032-4210-a09d-cbccc84aa2c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 775454f8-fe5b-47e7-a449-abee8ecdde4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 8ca1c197-08aa-4720-aef2-5a6fdd2d7b19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 9fa8ce95-dfd5-40f0-8f48-6aa17c0b7596)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 7ec986fd-8a87-4951-b1d3-92b20680c35e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #898 90ad4bdb-587b-4583-ba3b-fb5999ce1a88)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #898 1529dc10-9cca-4d12-a993-18cb2876bd85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 7654e4a6-a545-4ec6-b6b5-286d76935fc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 f74306ee-ce20-4e7c-96bd-0a70f0bfb9db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 f0ae311a-3df7-41bd-9452-78f4a269234d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 93d187d3-006f-4b48-a2cd-4ad75b5060bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 927a10b6-e576-4d3e-a4b8-32bc75619204)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 bf39e3b4-b902-4717-a0ff-afd101e1bcf8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #899 6c0f06e0-1cbe-4891-9b47-5ef95ffab652)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #899 6642ed2e-9c5c-41b5-9555-d0c9e9c74912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 18375571-1557-41a2-95fd-e0004f2a0916)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 9f731375-1d00-41cf-b682-eeecfe40acac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 2805a82e-e3de-4f20-859f-28945ab95a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 5f4eff76-c710-47bc-81a3-a1b38d44441a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 abceb44b-ca05-426b-9459-3e4b77a4f283)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 fba8adcb-b6be-4fd2-a675-bf780f2dea21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h05;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #900 db24628a-6755-4dc6-90fc-79e146074586)");
unit.assert_eq8(8'h05, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #900 31d28f0e-b0a6-49ec-a49b-a0bbbac7a39b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 c3ca6c44-a730-44cb-a206-facb2d45fd33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 2e6eaee1-75c6-4f0d-89cd-ea60480e28b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 f45e16b6-412a-45c3-9564-d8af5c2f85e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 f010ccb4-a694-4b77-878c-a130d3cc597d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 57b32e01-2a55-49ee-a6c5-7fd58a5f0bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 fc89bf13-6c47-4ca2-a267-0c1f66dfae23)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #901 2dc88edb-6048-4b02-884d-45bae9ff56cf)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #901 8f15ec20-14c5-435d-a0d6-2470e5fc3e8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 6e0f2060-f7f0-42be-a516-951ca9aa651d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 48b1d9ca-c12b-4137-b090-40308331ef5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 96a0a212-fa57-4d90-8483-c872055d0760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 66df6904-4cbf-40c4-96ec-eb6d5aca460d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 54ba463f-fdc7-4c82-8d24-373aec3a5338)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 b92d261b-44c7-4cf6-9a96-0bc89f68d8d8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h16;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq8(8'h16, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #902 215623b7-e106-44f6-80f7-e0f1c39dafc6)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #902 6bbeb2a5-d395-4390-9ee4-ab5669c6f9e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 adb2b9c4-73ce-44ad-b3bb-71a543adfdc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 aaceb9fa-f880-415b-a179-82826d36464d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 0ffa9458-4fa1-4af9-90e9-3b144951d9a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 2917556a-a14f-4baf-a15d-848688fff54e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 12d86be4-c463-40d7-a321-73645de5f8fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 79a48e46-a0ea-4229-89a1-306c31b6f5fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #903 3a73f60e-61cb-4bc8-b42f-6a35e80d658f)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #903 9ea1585c-8de7-4258-8796-5f3a6eb26444)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 f30d73b3-b38b-4a01-b8bd-ebda706bf303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 2c672cf0-89ac-4f44-abbf-def4d74872d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 5f0ea598-d2c4-4bf1-ab57-39dd404f6de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 15492635-d835-4dde-b93c-aeca8f16dc7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 6323eb8d-3fff-49bf-943f-0241c69403cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 921438d6-eb24-4707-8b63-135a2cca1ace)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h68;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #904 7313c5e1-fecb-43c9-b5ab-28cbb02e75fd)");
unit.assert_eq8(8'h68, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #904 2a2e4bef-0d99-44ef-accc-f3fa45ab5ae8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 0f3bb812-21b5-4a12-8533-c86b3bb3cafd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 b7a8c47e-30be-4154-b05d-bab45b0e3f03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 56f87f32-3fb4-4ef2-ab65-7473bb82c207)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 20dffeb2-1ea0-4c96-bceb-cbfa26c732bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 f668c1bf-676e-4279-bec0-ed6c85c51c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 3be1ae78-8ca3-419d-9109-9174a7e08cbb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #905 7c0d5c02-b943-4e72-9d2b-34363595776e)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #905 eafc9fdc-f112-4936-acbe-d2a38722ad64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 d618c295-4782-42c7-bea7-50b384094eca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 3618eb0c-21b3-4378-8724-c930b19c02bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 50b689cb-dabb-4bb4-9a8b-cda510be9b8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 113be5e6-8829-47da-9678-c677f6aae386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 6c954ea6-85b7-4107-9fca-684646231dd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 f06cf700-f3f8-440b-b5a4-524464376d2e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq8(8'h2C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #906 a2ee6ca0-de61-4031-aa8a-4be9abeeb4fd)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #906 7edd6641-2218-41aa-be19-9571745484c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 d0160b74-ad70-4c93-b92c-93677f1f83db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 3837bc11-19bd-46ee-be6c-3a83846752d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 1cf6a6c1-12e5-4abc-8b18-6b9d19650b79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 a64ab12f-9731-401c-8cda-dc7e23d3b93e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 798a1d45-d8ea-4bfa-9db1-537671bbac4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 a7c13022-6ea4-4469-bab9-4556cd82855c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq8(8'hCF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #907 78fa98e3-9441-4f21-8d70-98d03557dab4)");
unit.assert_eq8(8'h94, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #907 4b5fa0de-6c50-4acc-b583-af662c6d8530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 97d015c0-f315-49e0-9e86-9d6704ed0608)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 c89d3cf9-3e3e-4425-8940-5565b2dd8be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 4870c5df-861f-4ca0-8c82-b060ee573ab0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 3d70a645-73aa-480f-964f-1471f17c3228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 c5b8d714-8b78-46d1-8178-38f48b952fc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 4e6d45ec-068a-43aa-92b4-92ecf792644f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq8(8'hD1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #908 d879e4c1-ad16-470c-9f2b-9a321d7f006b)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #908 405dba6e-afac-4b15-bdc8-f1e15dd97d56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 4a935a49-893b-436e-b717-7e475236d510)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 2ff7c961-b443-4c3d-9359-b79c1839cc7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 615aa5d3-0aa1-47cf-a180-48f75961d156)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 0e117044-6a41-4332-9dfc-134f1dd95637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 bb273530-b10b-4a3a-ad25-1eb3637410b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 7d498657-0a46-4d60-8852-ce59b38fb2a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h79;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #909 786cab43-cdc5-4a3f-afce-3514cffdd552)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #909 4f9028f0-5ba5-4666-ba84-096b21fbde3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 635d9195-bb0f-4c36-9498-00b98045fa54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 629d7a63-825b-42d2-a2d7-0f9dd52edd2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 69a7121d-bafb-479a-8f9f-9097bdad83f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 c77be135-0e57-4b46-aeb0-1b4d9376e795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 f3e0feae-0a6e-43b7-900c-8ec4c7a05e40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 2389b40b-ccce-419b-bcad-b8445d9a0d44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq8(8'hB9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #910 4dc0aa36-91cb-47e6-9ea2-797d9aa9ccb4)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #910 b20db4c8-2ec0-407d-9642-cb134780bb83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 467c9031-87ac-4c7f-86c8-00a72e0c79d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 b8639a83-47b7-4313-aeca-819b4c3906ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 8b7c17c5-7b2c-40fe-bcee-0b64b592d6f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 cee6edc8-b3c5-46f7-bc6c-f3e49f2cc3e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 04c1bf17-60f1-457a-929b-8697f3e33be2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 98018356-2f56-4bdd-84e9-337477cca885)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #911 5f94b952-bb44-489c-8c93-4a3c5e2cf3c8)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #911 3390f048-1901-423f-9bca-cc741733131b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 a3ee44cb-5a44-4783-88a5-d5971502aef9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 8cc08044-bacf-4b32-a805-7e2af3259879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 75ea911f-6565-41b0-8645-d0d8df79b64b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 7416f244-4907-4690-a875-7411bae586c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 4cf54493-4f6f-40c8-8885-ca35c0d6e19a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 879eec97-ebe0-4e7e-9599-d397c2b10e94)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h62;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h34;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq8(8'h34, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #912 a364a7eb-481a-4e8a-9648-a9dafa3d21b4)");
unit.assert_eq8(8'h62, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #912 17d97fb2-fd42-4e39-aa12-24c77855d13c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 c56f8c22-6968-4697-bbbd-2e6771cd85b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 af3e985d-76d9-4d99-8117-f1d003eb6d75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 38142ce6-376a-4747-9170-530e530d343e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 f9b25166-8e2c-41a0-b23a-a2f5fcfe4780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 0de03d8a-83de-47c1-9c68-cac096735caa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 38f9367b-2bae-41ee-8850-67ba29e9fe86)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #913 98ae4b6c-ead5-4979-8f7a-6318e28cbdff)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #913 a0eb940f-37ec-4662-b700-9a07eec79b0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 2e462cc6-d61b-4af2-af7a-807cf005d575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 3e989031-9452-4503-9aa5-67f38aad059f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 06783371-2db3-4ffe-8346-413e2061bad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 8a788065-3b3e-4ef7-a7d1-d275fed1ae1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 81bd66d5-f981-47f6-baa2-72158bb04b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 2d3b93fe-0872-43e6-96fc-2ae43b433ba9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #914 b2f4e72f-ee31-41d4-b6c6-7fd98eab3c5b)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #914 ab9424b4-2d57-44ce-9353-78ebb96d7050)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 e93ef677-13ac-41e2-bae2-a7195865e58b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 e87348e1-ea99-4f82-bdb6-65988f0c9770)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 5a0f3fc3-197b-497b-b366-bb5f7c21dd7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 784988f5-d8df-473f-a9e3-ab1ec7fce2f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 a687d995-e5e4-4af0-b896-3c9e15db9d9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 1e4df4de-a4e0-48eb-a2ab-a1fe450ec2c4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #915 e3e739d3-6c68-428e-9508-9a61f1dc32f1)");
unit.assert_eq8(8'hBC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #915 fa686794-dd9e-4db6-b8cc-b575cd1d53b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 99432199-1585-4092-9e49-69d160251220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 de45e46d-ce0e-4e65-b59a-a7c161ec2d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 4b3a2c52-b18b-4fc0-b139-f496d44477eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 61af8cff-858e-4f27-9358-56a32dcf1efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 35095124-be00-43a0-ae06-8e46d394d92f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 1ff3d033-c554-4446-8bff-99ebdeb11cdc)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h0D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq8(8'h0D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #916 4d01257d-78fb-4578-87b3-c1f540e4534f)");
unit.assert_eq8(8'hDD, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #916 c2292fa3-aaf1-486b-971e-d33d9fa15fb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 9ed97c9e-684b-4ac8-8816-c31bfc59cc87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 72e41672-10df-4060-9ec5-c6873ca1ac71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 ae62f0cc-12b7-40ba-b288-8b6fd528a19a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 31739482-4a0a-40ac-a877-646284df2b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 cd1b9675-3613-4f53-8867-c92b39d4ed68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 596367a9-08cf-4f36-871a-c15b20147761)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #917 f9061e28-a4bb-4372-8b75-55df203d3de3)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #917 89977a2d-2a0b-4d45-82d6-8db36ff47bf4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 cd6aff5b-4c02-40f9-a774-ddbfd695cb47)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 c307ad67-760e-420b-b205-847e00f5c468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 3d711f17-f883-4ad5-b3b5-edae4b1c5062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 dc860c7c-5da0-409e-92a4-38bd4c8c4910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 55dd27cc-5c3e-4745-a63c-51f5480ad573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 6bbc39b0-cd4f-4971-b0af-f135893b982e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #918 287e8faa-145a-4ca7-bbbd-9a8fca3c67f8)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #918 29d62b48-5c23-4027-b993-5adcecdc9256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 35eb35b4-8403-4e3f-907c-0a55823366fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 42fb7b6b-86e5-4266-9cd3-7c03de679a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 6605b62e-a395-40e9-b19b-c9c218ec4ac6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 fd9d2405-3c28-4a73-8ad8-3645d7a2e3c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 57c23336-ec99-4afc-9660-9fef3a93598b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 10809f24-2c22-49b9-9967-7d808ecde056)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #919 9a52e570-979e-4d7b-be3b-5ba44b3cfa0c)");
unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #919 4e2d3e22-b15b-4625-83ee-b9f1dfecad7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 e670cc6b-b3a8-44d5-91d0-98f9bd2b84e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 30e69c3d-d33c-40e0-9a37-5107016b82b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 977a345c-1954-4592-bd7b-eb7b2c2d988f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 d36be0f5-f94d-421e-b1eb-ad5c1512753f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 a8acd162-ab92-40ca-b782-151ad4a58170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 f34a9b76-b609-4014-a6f3-57161da04905)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h38;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq8(8'h38, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #920 c5317263-fdae-4c28-a445-ad9ef00c844a)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #920 fcc6dd8d-bd9a-4dad-a25e-d2e53f51c0e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 a48e75f1-b9cf-4be4-b082-8bc4ca97b752)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 25c2848e-4d71-4cb6-a258-eda96d15410f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 78ccbf88-6f39-47d4-a740-f1cecfd4e639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 353f45d1-014c-4f55-aba3-cbb5533287d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 3e4dfc4a-2803-4f4d-93ef-c0f034337755)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 6a6ff919-24a4-463d-9dfb-530fc44e61b8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq8(8'h7B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #921 32a49905-b79a-4c78-8e07-677a328cfbfe)");
unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #921 5d83f18e-28c4-44f0-82eb-7aa35584ed59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 331e276f-29ad-4c5f-b92b-0b2ed24eee1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 80b15d12-4803-46da-b34d-979c8ac0ce0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 ecbd956b-cba1-4486-ada9-93cac1205369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 7d420f27-3584-4a97-ac67-d09415b2be4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 ee03f933-9113-4025-a6b6-542fa0a3e4b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 cf36b0b7-111f-4af2-8750-ce6d85997a21)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #922 0e4498fa-63dd-4d49-b565-e82595d8b8ea)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #922 7d075725-f137-4166-a4ac-e6e63690b3c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 d6f3e7e2-9703-428b-9a4b-7459c9bd07a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 99ce478d-a839-44e7-a585-892eaa87e111)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 3c4214ec-165f-4ad3-9ba1-0983b97ca657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 f79bc17f-8cbe-4230-99a4-908bcd4099b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 0f214f60-23e1-4f0f-93dd-b0706f22e098)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 e983abfc-0e0d-42ea-ab79-9026422a6fc2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #923 17b1a596-b8b5-4d11-ae51-f78905e0288b)");
unit.assert_eq8(8'hCE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #923 f3472ab0-6715-4773-bc30-4eb9e138fce0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 94c79e82-e3b6-4397-bcb8-f204a3b70630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 95003894-697b-4276-af2f-62121a574429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 88714272-609c-42f6-a2fe-71aaf16c92cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 2f60d809-5ee8-469a-8789-5727598dea22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 d38d738a-c1de-4be6-bb09-92f02a00b691)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 91e8f097-cd2f-48f2-8a61-18506442b6f2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #924 7350185c-ee65-4186-841f-a8cc18772667)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #924 d7575a3e-bba8-45b5-8d61-d70f0dbba143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 0101056b-adc6-4e54-9b65-8dede5fb6b43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 61537f76-2f44-4a4b-af72-974371679c45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 fd988e1f-d959-4e5a-9be9-39190803a27b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 03e72ff6-d043-428d-b3bf-b9e3a07b80fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 fba79283-1377-4c56-ba06-34e8710b69e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 755131fc-964b-48c9-b972-843861cbff6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h37;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #925 f1f90ad5-90f3-43e3-a7e3-ae3cce71224f)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #925 8090a9a5-b6d3-4b37-8560-7de00125bad2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 bfbcb9f4-aef9-4fee-aec6-e106c8d0969f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 3eb53cc5-6f33-47da-9e67-7459cfcf1a6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 c8c2dcff-574f-4f3a-bed1-083304aa3985)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 0afb9038-82b9-4951-b45d-b9bd367cbcec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 11191743-4b2f-4361-803a-22933932f215)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 e3bbdd48-de4f-404e-ba73-5674a0889d16)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h56;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq8(8'hF0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #926 75df8194-b808-4a16-857c-28c604dd8ead)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #926 37709a46-02e0-4ef3-b3f2-0bdf166a39fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 db273477-4e5c-41b1-93aa-6f939adb553e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 2d7cc0bd-479d-457b-a87d-0375205f5742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 8fc2bf77-809e-40e9-a4e7-7643cd10d641)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 124acd2d-a3ee-4a35-9561-2cf1908efd25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 ced7067e-2dfb-4384-903d-2d463970ad18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 91b93c04-6424-476f-8dcd-ce00d14e0f1e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #927 d4b2f655-ca72-4ad7-9bee-6c320621bc0c)");
unit.assert_eq8(8'h25, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #927 af0dba09-5e60-4180-83c7-117af363c125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 22eec40f-a438-46ef-9dea-ad34fcbd7c21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 74e513a0-e982-48ce-b412-077d5f9912f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 b072aced-0cd2-453d-bbb2-f7c9da3cae97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 8badae5d-055e-4167-91c7-8e62bf961574)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 5bea4364-e4cd-414e-9174-8fdfe6bfbc50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 891d1439-f1d1-46b4-bac7-b36804398f84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #928 b36ad1be-b8dc-4d6e-8388-3a2587099644)");
unit.assert_eq8(8'hD0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #928 1ab878f6-5ffc-4bd4-bb1a-46f4b8fe98aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 2c4191e0-bf74-406e-b00c-f5920dc270b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 afe999fa-ed5e-4651-81b0-201dbac20861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 b009bf0f-20c7-4f92-8c7f-1bf60d0ba3f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 d5ec7417-27c2-4b89-849b-6d57d1e2e80b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 8b48d023-7c96-4057-8cbe-580e19693a74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 1d174a52-287b-4645-9b9b-278785f029d2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq8(8'hF3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #929 4c961bae-8791-4578-b0b4-a001dc460abd)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #929 2c4cc9a6-219b-4523-b366-46a6b9b31850)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 288ea3e3-3993-438b-bc61-1ef36b7d2a61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 f8712fbe-74a4-4bdd-a830-653bbc8b8865)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 5e09f58e-847b-4913-969a-9ef11af81201)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 0234b8d9-7c72-4e7c-91b0-59cd9e1f96a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 486d3778-b436-4945-bc96-9d8e1348ba41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 b5f29b88-6d6b-4374-a3c8-3bb321e37578)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq8(8'h4E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #930 e485763e-b8d8-4639-a402-86ea793fa98e)");
unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #930 d2616ddf-10c0-467d-b8f2-6063544a0459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 9c1fafea-d7a0-4a01-82be-bd0d5a034857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 2042039f-ee42-410c-af16-530b599f6054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 1db9d0fc-5fbc-4c01-8652-467525ed24f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 a5964067-e31b-4ee6-ab8c-59e7f11bbdc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 936af880-7c75-4785-8d37-0c02652dfa50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 c4fdbd6f-5f33-4d47-b8ff-8af1076b799a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #931 7f82f667-1136-4f83-9130-ad3209e94dc7)");
unit.assert_eq8(8'hAE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #931 ea0d6da8-31d2-49ce-a820-f8da7d94ab5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 9ae4a366-e2f8-4d91-8d20-0827b3f5fef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 5dac8c89-c14a-4872-bc89-f12dee583f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 0e43d8d9-ed60-47c6-9d77-cbf4735b7795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 0ead303e-9a90-41d0-949d-76de55ed464b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 ead7e461-db08-4d94-a25e-141f9d266718)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 9d0ccbee-c982-4346-b9d1-e64756479649)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #932 5b1dcd2e-92cb-4cf5-a0ac-bb6a62aee19c)");
unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #932 c856ff46-e9d1-4b50-9d5a-a355c37250b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 cbe9719a-c77d-4998-af50-125683e119c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 ad670e63-72be-4885-a5ad-ab22babdaf5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 34f1608a-8d24-41da-ab17-d4057c5de9ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 7396fa87-efb7-4462-bda4-c51db31d2006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 3ea0b1ee-f81f-4e87-8759-5dcf27899cd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 9a752162-8f60-453a-acdb-7ce354b649b9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq8(8'hF2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #933 5a9dcd46-8b20-4c4a-9d4c-91efebd17708)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #933 681682ef-2ed9-47a1-aaf2-40071e98e1ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 901229b3-a0d4-4e79-a569-731d9ddc0a53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 1a69b174-44ff-45a9-aa05-14a8d140042b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 6f334585-3e8f-4de7-ab96-76f0b9e1751e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 890ac9c7-2d53-494d-8f2b-17423590732d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 961b28a3-6a7f-43d3-98d2-a57f2c13e0c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 8936b289-28ec-4bcf-a87c-319721e87dd6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #934 5e66df17-5689-43e5-8ac4-9707400374a4)");
unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #934 79fca439-9fe4-4031-bfb7-be60de2ff0ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 37178b0e-047f-464a-a315-e64de5a0f71b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 9973be91-7185-4e18-87d2-536f8c434100)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 f4126921-e634-4b97-a065-acd35832ee52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 b002b688-3d5e-4227-8359-419ae2069cdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 316cb03e-3dfb-4d65-9402-3752c891ace3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 9d05288b-aab4-43e9-96fd-e574e46201f5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h7F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq8(8'h7F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #935 f23f35f2-207b-48fd-b583-ea503d27bbc0)");
unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #935 fb85c781-02ab-4c21-81a5-54955102024c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 660d70e7-0d51-4032-8bdb-b817c1be8307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 e6407628-113b-4e02-b116-1d40aa85db09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 e8172107-d693-46bf-85bf-f2104f441ea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 15f5afb4-7db1-4315-afb2-1d5c5775dcc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 1931baf0-41fe-42bf-8ab4-454d3e46b51c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 e913aa83-2502-4fef-83ce-ec312f2556cd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #936 bc0fa683-ada8-49cb-89bc-3283f1bcc8df)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #936 cf8a6065-41af-4679-8943-06c83d55be61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 a7f51274-6077-4fde-b871-c4ea68511772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 972a7575-f256-45f2-9994-97914966e94a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 5049c2a4-8ffc-49dd-9b62-3416037f2056)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 9598689d-c712-4bcf-b873-f800b9f744ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 c25d2a11-dfd2-4139-b3c9-d6844b93e3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 c448591c-526b-457a-b906-3dd2047d5db2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq8(8'h42, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #937 7e45248d-01cf-4c11-82ba-aecb4b10ce4c)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #937 4b274a64-c075-4923-843d-20c385ba266c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 4002c4b8-b9b1-433f-a863-5868d4a5b843)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 f84f5794-f9a3-4207-b3b9-e7ae4e317316)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 384b5e29-2663-416f-b39e-c1c165b42be3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 8f722921-f719-408d-af44-976848003351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 dbd6f0b6-442c-4571-9e72-bf14421c5eb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 2762da4f-00e9-4a00-9129-009e6fd9e48a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #938 5521d503-7a37-4264-82ac-9927b88ab5b9)");
unit.assert_eq8(8'hB2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #938 b0d70fb0-dcea-4d7f-acf2-7d6f98f8434b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 497a06e1-9d0c-4859-8e0a-024778798529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 d7458b19-81a0-47d0-9a92-566c0da732a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 a88f753d-b26a-4d71-8079-8931b3f81f19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 8b66dddd-571b-47ec-9099-f8bcaf89ee0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 cb81e1d4-dedf-4ebd-8a95-03ddafe5cc66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 c5eb2ae8-fabc-463f-892a-c839916dec85)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq8(8'hD4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #939 c0dbd105-80af-42ed-85f3-8ca3a01a74e9)");
unit.assert_eq8(8'h93, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #939 899bd41d-fc26-4d0a-b63e-c10f3b17afeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 d6265f52-af93-4470-8fa4-b03b3b0c5ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 477ee45d-a030-4da1-8b27-37a801162484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 7d8bd842-d5e2-4fe9-b028-b8bad4820437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 7858d270-fa9b-42f6-8ad0-905c68b548bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 bcea27e9-4fc4-4e28-b712-c063ea5a1e18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 e6ef2bc4-0cea-42ef-8a70-6ff974e832dd)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #940 622d1a0f-cd56-433e-9b88-c0bb350a1a6e)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #940 a211a1a3-a679-47ed-a4ac-bc5da0acfe66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 ea3b4267-5d01-4671-b26a-c52f50da4783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 8fe75ce2-4a1c-421d-a9e7-995db4cd0768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 04c5af26-f490-42b5-8a7c-c2548838c532)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 cc595958-e140-4a83-88d1-be759f1a5aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 251acfcb-5d30-4fa2-910a-3c06b1396549)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 b0b5cde3-8b65-4177-945b-595755566e44)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h7C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #941 7e84b853-8c29-442a-94df-6c196b69a498)");
unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #941 ecd544b6-a52c-42ce-92cc-d951cd4cb1a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 938c85f5-fbf4-408b-979c-91890b9b821d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 2cc0a2a2-a841-4ba5-a102-17266e78feea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 b0986215-ba44-4b92-b55a-eebc588852db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 de3e5b4d-2b36-45e0-9eb8-cb20952b5bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 929f1b2d-afe0-404c-a496-33c9a5c275c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 1abbd957-98ef-443f-8702-7f0b57e9aeee)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hCE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #942 a8c17d11-5bff-4a6f-b89a-818978d7d8e3)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #942 21023142-e158-4263-a9b5-5a8d0a278b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 c61d2b7e-c5ac-4fb8-bf4b-6ad082224eea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 4db5b453-5fba-4891-bb83-ba6aca9dba21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 389b13f7-a503-480f-8479-0d588f1e237f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 8432f391-e3d6-48b9-902f-72264aa2e84b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 31ed642d-6256-4af0-b447-df82cff2f6a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 a36302a3-a734-4102-93c3-43ce4db2fa06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h58;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #943 a599d561-222d-43e7-87b7-e2f94a964e55)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #943 efe92467-59a0-44b8-b005-c6bb9809fe2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 faf0c64c-585f-4b6f-85f7-1aae16074619)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 634794d5-175b-485f-819b-2e4575826e3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 b7587704-ffe9-4936-bd2a-dbb37ed248b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 ff2f217f-b34b-47b2-b6c0-b5d80f604069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 916bc614-55ba-41b1-a144-1eb1c8f4d780)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 4736b890-2879-41b1-92bc-365a683a5e06)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h26;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h58;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h69;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq8(8'h58, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #944 3e819492-e8b4-4d82-9242-366eb3f6be96)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #944 254b1c2c-ae80-442f-aaf9-3b763fc10f17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 394deeda-cad1-4225-a916-204898207aa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 c21f4d22-7e82-470d-9641-e7f6a2ce7651)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 cf3381ba-0c9a-493b-86ff-32ee2d19dfc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 881d47cb-e5ec-4641-a6cb-df5d98fba53a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 17b642ea-6adf-459e-97e1-11e51f6d291b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 3d47d48b-b1cb-42a4-b1b4-74911714d921)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq8(8'h3E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #945 6fdb26a0-8add-4beb-a0a6-e3c419ddac89)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #945 4c385abd-a2ac-4b9b-974d-d59578eafd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 21c67349-481d-45ea-b613-b6e6bee07077)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 f4cc5c9c-602c-4304-8b63-b9627b3fa240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 34756422-43c9-4d56-a417-57bf729ae165)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 dd66dfa1-df81-4872-ab3d-a4b03a598f10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 476a1b7c-5ea7-4f88-9bc8-02cdb442c99e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 eaf5b86a-be22-414d-b261-79fdec1f6286)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h0E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h54;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq8(8'h54, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #946 eaae81d5-1c68-4c56-8f3e-9338da0a0944)");
unit.assert_eq8(8'h8D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #946 473f63f1-8195-44c8-b9e6-29066e3dc7ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 66a67c6a-ba10-4cde-ab06-d61fe9b7a94b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 2b5c8b87-06b9-455d-aef1-6be4050acfbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 d5bfa5bb-7ff3-4fab-9cad-f42157277bc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 ee632831-e132-49bd-9219-1a5e9c73f9e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 d51c8534-07ea-4d81-8abf-792a752762be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 82a0f1cc-de73-4324-b24f-70cdde7a150b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #947 94dbaeac-9850-40dc-9d1b-32a1aac6e61f)");
unit.assert_eq8(8'hDE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #947 be7f1b7a-6b99-402f-8ec2-14e8d724299a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 49193e86-7d09-4212-ab42-911f0441a377)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 a1fbc563-9190-4d24-be8f-7eb088c87350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 30861eac-9957-4e55-b7b4-8e0131975b7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 fe6b7a8f-a18c-4925-9708-dcb95e146f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 954fb5db-5c5e-4083-ac16-41bc9f081a03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 21ac7c99-71d6-4e67-b871-13bc407153b7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h66;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #948 872f48cb-a898-4dc7-9f1d-442b69f4826d)");
unit.assert_eq8(8'h66, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #948 2980f58c-1d24-421f-87c6-7ac8ed3602aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 85859aee-5364-4bfc-b851-709341944542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 cfa5437c-c583-4842-8a74-0f56233db210)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 5f4ddbb1-5a0f-4890-bb02-55bb7d1b9929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 5600f0f3-09c3-4a93-aae0-8caf09bc0fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 48dba816-ebb0-4f01-8e9e-a8b3fcd4a78c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 7592735c-514f-4b66-8354-3123e4f4dea8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h61;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq8(8'hBF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #949 41cf74e1-0c54-4d0c-932c-89a1db8cccb1)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #949 6b688ae5-3590-4d6c-bcfa-85d9c8553fe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 7429d828-899c-4f29-8a37-35ce8176b9ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 5f76ac38-60a8-410a-961a-05376b62ecab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 eb4da3ac-c234-46b7-a77a-193b70d3cce0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 35cd4601-e976-4621-ace8-0f3a0b1cb476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 96a49bf6-72bc-4bfc-a9d3-8b26cc7ab9ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 f78c5646-ff0b-4049-895c-97d0f567b10c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq8(8'hB3, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #950 1fb2ac9e-40e7-4607-bf13-cba19aee9b53)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #950 78e7ad50-aad8-4659-9703-016d60b688eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 602d0a3a-27e0-42c8-b991-19ca4dcd4e73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 08e5ae30-1db9-4275-af94-c56fbb7a36f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 581f8ec2-654e-4aaf-a649-661c868fd9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 90f6918e-e0d9-4aa5-a7b4-2fc9c928b4a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 15536d0f-4934-40cf-a53f-074284eb7fce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 f336570e-5cb0-4114-8ca2-2765527c7356)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h95;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq8(8'hD2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #951 63051d4e-1577-4055-b4a8-d414c93811c4)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #951 cf33d692-ee36-484a-ab11-e36968357b16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 177303bc-36c1-478f-a6bf-cadf4e8a1c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 7d440336-1c9b-4c59-a8bf-5ae0c81657b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 63cc3236-c008-4096-b665-2609e276e165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 ea119699-ba2f-452c-ac66-355e57dfe54d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 3c5a21a2-83d3-4661-a032-287a6dc8bb2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 6abaac6c-b58a-4ad8-b420-383c73cccddb)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h3E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq8(8'hE9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #952 41feb335-bc76-46cf-b315-e7b298f62d58)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #952 48fd1cec-0952-4862-88fe-a2f6f35165a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 2f552dd7-6826-4773-92a9-9e2081f63885)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 4763e465-d824-49bc-a414-1e0d8ea060e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 a845b9a3-ef28-420f-8f0e-b0d3f09f60b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 0ba1ad30-c753-4957-a4d7-4809e63c88cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 e89e805c-8602-4209-9ffb-b3c9c90a0b5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 698fa56a-4fa1-4e0f-ae84-37741af50b96)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #953 e378520f-67c3-48c2-907b-9a502e92bcdd)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #953 5162ccb3-19a5-44b4-9de9-f2817bb986e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 edce2820-0ee5-419a-a06f-8e114260c8d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 99b1b891-35cd-46d4-846c-d698cbee7c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 fc24ac7d-56d9-45d2-bf7d-14537f594c20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 97102b1c-9170-4534-b50c-a9031e36758a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 88a6d587-c01d-42c8-93cf-c862d026ef12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 d61d631c-7f90-43f6-a4a6-6c58d42e7bb0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #954 ffcea655-2949-4225-9bfa-ff99b29b9287)");
unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #954 24ade3ac-d2f9-4982-963b-23ec4a7bc4fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 32e58c42-4759-41b6-aeb2-a056e76dda16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 2a258361-af34-43a8-b96f-2f8482b21d91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 9b908c6f-8b07-4b19-8571-d5626ac78e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 bdaf705b-7a36-4c46-b6f3-0ce5951f7637)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 680441b0-6eed-4221-aa07-41495e2966de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 e72af525-66ab-466e-bf9d-0432450b594d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h41;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq8(8'h96, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #955 5f208efd-295f-4667-be13-32997a76758b)");
unit.assert_eq8(8'h41, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #955 71a7565f-288e-49b5-b079-2a51e2c762cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 1af1ac26-c869-44c7-ae49-ce2b22d8af81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 f275e84a-5c37-449d-8044-63501c20a11b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 0f7418f3-1543-45e4-a7a3-626ae5039c4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 ac34c02e-e0a5-4a5d-afed-2dc89cd8e0c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 8cffe49f-91e3-4baa-a0dc-dbb8946636dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 d46648c1-a5ed-45ef-ae4f-4a77365e21f6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h60;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #956 25a0bcc0-c59b-4999-bd70-804b1175980b)");
unit.assert_eq8(8'hA1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #956 d0495e94-2446-430f-9d40-6676bf1eab79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 e3555b44-065a-47b4-950b-013ea8490eb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 dec7a97f-fe9c-4ed3-a582-53570f530b30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 7fcfa170-0247-4b20-bd35-c45e41a888d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 d517a079-fa92-4bd5-8bef-3b0471458622)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 27b1b86a-d436-4023-988a-523936350429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 3c6c19d9-5150-4ebf-966d-5b3b3c5b2073)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hD6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #957 e2785a45-9bb4-46e4-aa56-3334d06ab5e6)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #957 7102644d-ccd4-4757-8131-174ddbe9b851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 21931e2b-bdcd-4790-be3b-848ba872c83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 c2f1af4d-39d5-468a-9dc6-33dfb4c0d669)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 94043566-c6a6-4252-b719-dcd575a5bb11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 120dd02a-a2a9-4c54-88c6-82e65c396057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 a7773c9b-2594-4c48-9d4e-5220a81d2731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 22a83b43-422b-4f00-8a8f-a0269661df81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h30;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #958 1cdff5c7-139e-481c-a24f-dad5bac97306)");
unit.assert_eq8(8'h30, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #958 7a4e89f6-f916-487f-8579-ffb78b1cc0a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 b587f40c-0ae4-4f9c-9918-84e963e3f2a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 02b5d5e8-7d95-49f3-a121-abb7ce3e9ac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 c112d64e-a31e-4b10-8dff-883e7c445841)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 2c3c6517-32ae-47e2-adf3-40a11647a892)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 98349545-9342-404b-ac02-a6bb71f15132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 f866ece7-15e3-441c-8ef1-cccf91cc35ab)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h77;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #959 f0a8246f-a4b6-4489-a048-0e8dbcdb25c5)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #959 201cae68-58f9-4cb0-ac7d-a87b02642909)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 14cfa2c3-335b-439c-b508-487135f90bd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 6f925c04-1fc2-4871-9030-d4de25ee7879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 f2d3d9f2-c911-49e0-823f-ccdfc764b4fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 104333fb-5d27-45f0-979f-c553e605bacc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 46d07b37-ad28-4c0a-999d-fd4ffec0b775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 a1210419-dc30-4f04-8ae9-3c50dc7b8e1d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #960 4a8de2d6-b041-4b85-bfa8-af70d1e785c8)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #960 45be74d1-5939-446d-a632-fd577ac7a481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 e80081da-3c9e-4b6a-bad0-a2e4ab93a76d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 c9ac1c6e-ecf6-42dc-a343-87ee25a32854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 4bed0333-1957-4372-986d-50eec231f9d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 fa2d7be4-82e2-43a2-96c1-3be1f37eb374)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 d0319951-364f-4387-bd87-127d62cd89f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 063130d0-6049-40f4-86da-af1d0b155a98)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #961 2791ed0b-9da0-48e1-8705-cc4ee77de5e3)");
unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #961 b0e822b9-7450-4af3-8daf-c999cd9f0efb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 849c5d1a-afdd-4565-aecf-ae20c6cfb9e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 025a0d01-ffe8-4063-a90d-72eb2babc032)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 bcc6ea46-265b-4f07-9818-a38899a03dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 33a13e0e-3fe3-442f-9ee7-128946412a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 605cc439-420a-432e-99fe-6a2a275d4f02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 61f2e0f6-6fd5-4775-bd1b-f0f6d51aea29)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq8(8'h89, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #962 cf337f4d-2ec9-4ab7-b1f8-f5d90aa45ff9)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #962 1daebaa2-2d4d-474d-adce-09ae9fc5f40f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 1c2758a0-d4e2-438b-90d1-ff0d38b4fd9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 0763e202-f6b8-411f-840b-0cf1adaa87a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 9a0e23e6-6e7b-42dc-8d97-85fdfdd1e119)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 bc29352a-3e8b-4932-8c62-2d1dfcd434f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 b2c3d11c-9f01-42ff-b604-2445766cb791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 baa82aa2-2afe-42b5-989f-6c742135e0fa)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h48;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #963 38a1c2b3-3996-48ab-8b51-6dbe39bd6fda)");
unit.assert_eq8(8'h48, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #963 0a686b54-b62f-4b17-ab88-0967f5593f28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 a1f1f04f-ca7f-4a52-92a8-e0124a6e6ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 476940df-b768-4051-b9d5-6b56d6958723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 918d3cb7-9d81-415a-976f-1aa803821d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 2417ed53-9700-4630-b4a2-744a77a5f388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 85c3f0af-3b27-49e7-9058-c3f7d568b07c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 6ee10905-cff1-4261-86ff-08927e812f22)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq8(8'hAB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #964 d77d842f-9d89-44d5-a247-1e7c4c3aa340)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #964 38b25c11-3c09-4ce7-b62d-f4ab7391489c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 67536244-a4d6-41b5-b4e5-d95c4a0157d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 0fb6e798-1d3e-4bea-8e46-d2a09f764d5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 f972c198-6e65-4462-8ed1-afd5aaa76f76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 7c6d4196-83e5-4523-82f9-bf4e5be242f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 2d6c91ba-27b7-4762-826e-67100308c1f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 857df6ff-1e84-4be6-a90d-a71f159f6f84)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h21;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq8(8'h21, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #965 8f5bb4c9-8f4a-4fb0-9716-38ad7f3415d3)");
unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #965 03715fdf-363d-41e0-858b-27e473191beb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 d2e1cd2a-87a1-4e16-b7eb-0e0839d23293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 bafc800c-564a-4c30-9aee-d373de90b577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 723b6f3f-76f9-4a28-a240-edf9151e36d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 9e3a279f-72c9-4005-a892-6b86dbd5a7e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 a1683db7-882a-4836-97c2-6ca2855d4182)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 a994f314-69ab-43d4-a593-2a7cd11d500a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #966 e95d6050-f91d-4755-b568-eaac3ce6f156)");
unit.assert_eq8(8'h2F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #966 1e4c3bc7-8d50-46c1-882f-cba334d1163c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 d691cf77-14f4-4261-9de9-0e7e824235f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 f1b268c9-8638-496b-bf3e-235d442f0c43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 15193f67-e777-4630-8934-282f6c31a5e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 39f18522-d333-4208-864f-348dcc4023ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 9ffb6f2e-a319-40df-9c05-f20731cc77e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 66afb230-d6de-4e12-85d9-de8403fe65b1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h65;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq8(8'h65, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #967 29dfda6c-5adc-4fc8-bbe9-35864eb686a8)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #967 dfc599f0-e7eb-4660-9c50-d9503fe92c00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 d4cd1398-3f1e-45f2-966f-9f487c98524e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 38483fb2-d9d8-41e1-b610-7cd2a7ad709c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 52fe032e-53a0-4b09-988c-b199ca460b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 e1bc6a81-6442-4f5d-8e9c-18307e36d7c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 f5866266-5140-421b-858d-cbb886da484d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 8ffd5f02-a04c-4f17-9cc4-4eb943f5861f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq8(8'h8E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #968 a58bdb3e-6b18-48fb-b214-dbb572907683)");
unit.assert_eq8(8'hFB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #968 a64386bf-cdc6-4e71-b5fe-c0994ee4aec7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 f0693020-9e16-4a22-9296-a294d6e92055)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 55a0e471-3e58-4f48-95d6-87fc93842d37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 b6f083ae-0dc2-41ae-bfc1-6d14e213354d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 f45452c0-2622-498e-ac54-5454adbcba38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 2a2bf279-cf77-4083-ad13-683eca0611e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 b5b44459-e2e7-4837-b403-3e1ac4e37f70)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h1D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h25;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h24;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq8(8'h24, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #969 4ef0f467-e524-4000-badd-5eb35cff9412)");
unit.assert_eq8(8'h1D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #969 e3a64799-92cf-472f-894f-62283b316e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 3945d46b-299d-4a21-b109-b22458f9bece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 7b6f79a4-d2cc-4cbc-8ba1-f770ffd71a9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 c6cf1168-76d9-4c5b-8573-ede0fd8103d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 a0a18e9b-cd6b-4504-8478-4d64810ae639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 9b22871a-1f64-4df3-b290-c12e437d6470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 7c37df08-27ae-44a0-baf8-16f531e25a59)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h78;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h15;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq8(8'h15, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #970 df65a0b6-2691-40b6-a741-8f7690003dc0)");
unit.assert_eq8(8'h78, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #970 df6f1118-a64e-48eb-a9ab-98006a2f2204)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 a8f10abb-b169-4b02-9ac7-653689cd5c1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 b62cab28-cd22-4ce2-bef0-e749a16cec49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 ac0af430-3a30-4a77-9541-8df833cc69bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 dd90967c-f712-42b1-b9fb-a6092e9b006a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 6402eeb0-2d3e-4380-894e-80b7995c664d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 aeac8c90-7460-4049-a943-a5d2abb3604b)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h6F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h1F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq8(8'h1F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #971 c065431e-80e3-410d-88b7-4a6375051417)");
unit.assert_eq8(8'h6F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #971 611f8fae-6907-4e95-afb5-a40f6a093c70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 d649abc5-eaf3-47f1-95d2-4ea87680c2b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 8f2edce3-9845-421c-938b-1a6d1fb61eca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 7da40767-a230-41f8-9eb9-0145235d3bf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 21952c26-5e87-42fd-884b-ac0361135b5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 21505778-ff8a-4f98-bc01-3307acfcc85d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 590dd18b-f790-4fc9-9d51-34e5411ffce1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #972 85a5ccdb-9ff1-45e6-b045-b3b612a68a00)");
unit.assert_eq8(8'hCA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #972 bbef288c-0592-4e25-b257-2519056bc0b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 2f627565-c705-4713-84a5-1669bf8a9236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 cfac1bb4-4c82-4686-8949-48a75cadd4b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 f4aee0a4-c612-4a85-9089-4183596abb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 cdf4eea7-27f4-4457-9763-7df2f3dc56dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 6a1b2591-ef2f-46b2-b45c-75c7aa9c0c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 41242d44-1b56-4dbd-b4fb-8c520382872f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h52;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h70;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq8(8'h70, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #973 3fb7f036-55f3-46d2-8c68-66e21dcc8fd4)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #973 11f1f435-f70e-4759-b317-cec29afa547d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 081bc797-3629-415c-a5e5-ffe4011f4e3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 23bed156-3412-4f34-a657-f87dc08a00dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 b2539eb4-43b0-4411-830e-e7ea045b99da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 70e2c33a-f1f2-441d-9ab3-e6d058ab363b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 57f0f4f8-b478-4d53-85b5-bc1da3aa6990)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 60162824-33c8-4441-9e19-1827c99b2cb9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h49;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq8(8'h3C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #974 57727c20-537d-4e3f-93a0-276917546e3d)");
unit.assert_eq8(8'h49, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #974 ff0fe71d-02a8-46c4-b753-44e25e4cbc4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 a48b0a0f-6681-4f71-849a-88841dd0794e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 9dcabf58-75c0-4f0a-9b49-8daa4aae6c7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 5697522f-3c9e-4aea-935f-140f026ccac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 51fcd816-f51e-44c9-9d8b-9bc0ea801175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 ba268b00-3dcc-495f-a548-0e15d4f19e59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 1c8e6884-e625-43da-9b12-c4d08410a9c9)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h0B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h40;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq8(8'h40, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #975 375ad674-2039-4a83-b657-66ea163bd35f)");
unit.assert_eq8(8'h0B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #975 a0b126a9-45a5-4145-8bb1-023dc52986b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 665ae599-15f0-48f6-b63c-c39ec71f0332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 eaba97db-53e1-4885-8a46-b970d1293583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 cff4c05a-ae32-4592-946f-754f47537e54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 324abe79-d47e-4ec4-9f16-d668bf00b54a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 3fb97744-b71c-4743-8227-9963678625c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 5f7f3662-278a-496e-8e4e-dfa96e724857)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #976 03e5526f-4ff4-4a2b-b8ab-e5433fc2ff3d)");
unit.assert_eq8(8'h18, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #976 86f83f31-af55-4980-8883-e669c022713b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 d9f7aa37-defd-4a2d-83b6-758f36252435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 919129b0-2e2d-4726-ba9f-aa7a5d8be6c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 d8af6812-0959-4568-b5dc-d6b7cc9e9355)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 82e2f77b-1e7a-4e24-acc9-8040e4b5f24e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 1d997fbf-2711-4dd5-bc6b-d9505338b03c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 6dff95ad-0011-47d6-8308-b12a253fe2f3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #977 de3267f4-c538-4b7d-a120-1854cea9348f)");
unit.assert_eq8(8'h06, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #977 22264a33-a4f5-4328-8a33-d0b395c09ecb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 c390f311-8e48-4705-90b9-da4021df1801)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 df072748-3f9e-47c9-a441-6dc4c54736e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 1141155f-d748-4f6c-83fa-16f09e464a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 410e6288-978f-4582-b3cd-54798909aa4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 a78e8fb2-a27d-4bd1-b188-76f30be4bbb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 8318f75d-395d-430e-a54e-ed886dd7a46f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #978 52900500-eee9-4083-8e7d-64e0cf655644)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #978 f9be2a08-68b8-4775-96bf-2fd7c5f0d84c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 a21dac3b-0a90-40d1-a33d-42c228960382)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 f52e0925-8b88-4eff-bdf9-9970c4a66af2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 2d2f23a0-1ecc-4ae8-ae9d-6c3877343e59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 618c9728-42b1-4875-952d-44a66e30af75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 2ca6dd53-34be-497b-8fcd-75f1a756143c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 8dbd6dfe-3a8d-4b2d-83a0-8f7f1e9681d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h27;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #979 7a564c36-7684-44f0-a8a4-6a9f6ea75ffa)");
unit.assert_eq8(8'h27, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #979 fe9428d2-b86e-4f3c-b545-f70891fb58d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 da9b46e3-d4e5-4d4c-ad16-c9c2f192e394)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 2f353946-0fef-405c-aba0-4f04915a4f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 9f6f0edc-bdfc-469c-bc42-ca397e3fb915)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 fb19d3d4-91cf-46da-93e0-df8c09393310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 2f9835f3-2da5-4748-b161-1087fffbb52d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 48f35c77-6d19-4480-9ee8-b6f4a84cbcae)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h07;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #980 2a55a6a7-2478-44ec-a90c-db9423ca584f)");
unit.assert_eq8(8'h07, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #980 b1337048-b656-4bc5-9a41-03c9c1fafdd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 5bb08f5b-7bc8-4ee7-a548-c96873d0e975)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 0efdbec0-1f06-4443-b366-fa221f1a1a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 cfdabb6e-5d57-452d-b4e1-bb8565380b3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 57efacfe-38c0-413d-aeed-356d5b5c7a09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 a4320fd2-4669-4f14-98d6-7bc4aeadfaba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 1f1b2b67-4c10-46ae-9140-ebb2d8384431)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq8(8'hA2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #981 2c52ec75-21d1-40f9-b61c-d1c668790146)");
unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #981 79ff7316-97c3-43f9-aa36-c9daae1f86fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 b463d24d-f9ce-4270-ad9f-541c98ff6f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 fec62cd5-888e-4cc7-b450-b82ce0befbe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 385c6ad5-1108-4020-a888-21aca0081886)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 f8cc5234-2020-486d-bc71-7ad782fb67d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 a7b5e22b-0bb3-43bc-9207-38c6a7de5254)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 2e9290eb-4ca5-4797-a398-e65e6bec1668)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h45;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC0;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq8(8'hC0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #982 6c31b710-769f-43a5-b11c-e160d8ba161b)");
unit.assert_eq8(8'h45, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #982 8c2ccd82-e6d4-4935-9894-ae0fd0a6fd2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 ec292d62-bd4b-4e24-a7a1-a0357cfcd5c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 119f57cc-65c9-4cd7-9a05-00ced2994c6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 a973cd68-dd2c-4786-9e6a-b7f67ef26602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 afab9904-445b-4bb5-b4e4-70a6fd712617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 a37bcb9d-b732-42fa-8a05-0c19985d3d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 5a6dee90-a0bb-4f1f-a843-1a2807433fac)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h9A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq8(8'h9A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #983 beec64a6-1b30-4541-8ec2-f8a04f9f4631)");
unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #983 8518dd1f-4ef8-4653-bce4-a5da527caf22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 04a9a06b-1636-4d99-bf0b-9caf08a48a2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 c67c08ee-0f7e-49d7-8a21-23a6cfc382d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 60317b22-59c6-4c9b-b669-1513488acced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 d1efd34c-19fd-4149-b710-a45c314e0653)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 03888ade-1ddc-4db5-836c-c5939f7aa234)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 c768abfb-bfcc-48b6-a487-f4605b610d26)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h80;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq8(8'hEF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #984 22b534bd-c4b2-4429-833e-3c4db565d8e5)");
unit.assert_eq8(8'h80, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #984 eee3d8fd-6301-4b44-9152-c3af5c3ebd55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 79ab4b01-043d-44f6-ad06-270c44db53c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 bf949dae-217f-4c61-b298-3e3ed4ba2e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 7b84f479-7e9a-4788-8b16-9d03e41f60dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 e1f56443-c619-4432-b76e-dcf1e388721c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 97c70cf1-ca54-410c-8278-aa2dabc93b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 f880cc99-e961-4c9c-a5b2-500894e4623a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h67;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq8(8'h8A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #985 7e788843-5480-4265-8055-75f599a7a3cc)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #985 58ac6ca1-6847-4761-ab72-2985f348c069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 f944a18d-a1b5-4bd2-97cc-afa3c37b0590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 d6ff663b-595d-437d-8392-977325eeac8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 8d623b9e-1f14-4939-a1d2-79674b2f642f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 6cafc521-a38a-4ecf-825a-be63887e1035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 439d3239-ea21-477c-80c7-8099eae01af7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 1a638aa7-60cd-4695-97f6-0e4f89da93d1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hCB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hCC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq8(8'hCC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #986 a477109a-0417-4e99-a80c-0c2c5f50eaf9)");
unit.assert_eq8(8'hCB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #986 9f3d1637-5747-42f7-8b5c-9a7e54acdad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 3617205c-cb33-4ed4-a0bb-50f64cb321f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 16d925b5-29cc-4c13-97bb-052b42f2f65b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 a335763c-24c1-4bc2-944a-0632612f1d5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 b1a97ed3-2268-46b5-b084-36325c2a1695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 c6aee353-4030-4e62-8d24-5b4fc8d6ee03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 7a3aab9c-7373-45fb-adbb-7d4fb43738c7)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h07;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq8(8'h28, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #987 e9abe1cc-39a4-48a3-977f-4e0ffe075eef)");
unit.assert_eq8(8'hF8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #987 4b2effdd-2584-4237-80a4-70ce2160eb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 b7826e0a-85cc-4064-a375-a6451bd1f8c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 12c2a932-8c46-4ad6-83d2-d9cca9452d04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 f966241f-6004-4c3b-bbe9-50eebb4f2305)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 5cd66a24-9e59-4902-be1e-a1daf2d1fd71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 66a41b0e-731a-464a-9e87-d950c89f9e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 ee8a5e3f-258b-4ea8-a7b3-bad5162f3503)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #988 61c0f7d2-4b93-452a-ae33-dd8d95a623e0)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #988 0461be52-60e5-4787-8f48-9e7fb546bc42)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 11f61f0a-050d-477d-b4ff-bd2b3e454509)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 faff64e5-6c15-4d32-9ba6-8cdd0191f146)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 07fc187f-c661-4249-b896-90e900a8604a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 ca9a14d8-2cdc-4b95-ba57-d82feb696e15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 9b239c73-4e20-499a-a338-ef55175a2bcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 200aca5b-1de6-4f7a-96bf-69f0bd9f74f8)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDD;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #989 60e77bd4-c838-45e0-9648-2b09cd287cce)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #989 1590cf1c-195c-402c-bc7f-76ad4e448040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 6b2c38db-6892-4afc-a091-1d8e4f903c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 5dabae8c-ae90-4e04-b7e4-b862de3c9e6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 a5d62e71-4d01-4e86-b303-3bfeb7b994a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 5b9d370b-cfe2-48cc-83aa-2a137ab1ef60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 27ec2cc9-6d8e-4920-a63d-a511be4b2eba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 802b5bdc-4f4f-47a9-a87c-448485b391c2)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h89;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #990 91f317bd-444a-412c-8625-e4c549abd5b0)");
unit.assert_eq8(8'h9C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #990 85f973bd-b17f-4fcf-8efb-f38f90a6b879)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 de813c76-9d83-44bd-8a2c-3cbb8f9d809d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 724eb62c-6a15-4d81-9f2b-a1c0e4ad736b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 3efb9649-9c28-4d0e-8948-0974185a023a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 41fa052a-d033-4c2a-b96e-1f239ba15f94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 84d08b89-1e1e-4ec7-8b7d-e677667c0e93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 120411c0-faa2-4617-bd0d-23b4465e297a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h3D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq8(8'h3D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #991 c4ae7a64-a141-4a1e-bc55-6e7e85c80c12)");
unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #991 54143759-606b-40f5-99a3-07239124005a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 a43d93e1-76ae-40f7-9e69-c165a20735d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 fce46730-8b64-4f8b-84a5-363e8b5545a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 8e06821d-9358-477a-9376-2bcc3cd82e43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 4e7e1608-fe8f-49f1-a078-fb1f7cf9741d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 01e4bf86-7f1e-4652-b4be-2be61cc89eef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 5706e899-3505-44d2-8d13-8a2d3b414ee1)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hB4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hFE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h14;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq8(8'hFE, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #992 d3ca885f-84a7-45d9-a48f-759e0cd792f3)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #992 b5754ba6-3ab8-403e-8808-8e6518b1deac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 44705560-c755-4ced-a4e6-681412609c43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 03fa4c11-40c3-4fe9-8484-d7fa588bc1d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 64ca692d-d18b-4b10-8d42-d54ec66bbd86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 9771533d-d07e-48cf-96c1-547d58c93b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 a4491bea-4068-4f7d-b84f-a35bfcc2872d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 e74a1a0f-c008-42b7-8bb5-12ff7d7f1a3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hF7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h88;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h86;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq8(8'h86, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #993 18aec8ba-aed3-4d39-aa98-163c5151b0cf)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #993 82b7186b-dc00-4f46-b2f9-a6813caae23a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 722cf6f0-1af3-4a97-9827-96e076b32d91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 e074fb99-80bf-4a69-a1c6-b3ab20ee6cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 db4e016a-450e-4e10-96fb-7428c1cc0668)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 983b8201-d3f2-4872-b754-e001f68d0fa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 5afcea94-585f-40b4-a81b-5840cab0dd29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 df8ff3c0-bd4f-4823-9307-9f8347720559)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h5C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq8(8'hC5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #994 6c58da4a-dd20-48b8-808f-f73f5ea354e6)");
unit.assert_eq8(8'h50, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #994 0e164d96-cb3a-4b99-b944-1821d10f2191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 dfb80322-8a81-4c13-a637-7afcb099569b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 5f33aeaf-5654-49a0-987f-f05250e6f02c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 1cabd73a-1023-453c-88a7-f17e81a6f335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 92b2844e-cca4-4d07-8a51-9170be6cdacf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 1f94cbaa-5983-47a1-bd81-334e11af7f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 768cff31-b71e-47ae-9238-534f62131c4e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h5A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h3F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq8(8'h5A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #995 ce38295f-3bce-46bb-8910-36665a014e84)");
unit.assert_eq8(8'hE7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #995 d91bdef7-457d-425c-a95f-6d0c51cc4dc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 b5a02b57-236a-43b3-b195-aae094c2196c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 ba100c27-253a-4c58-9d18-8b59aaf1d845)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 519d78a3-c888-47be-bb99-f598fb028cc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 68664f8f-319a-46df-9467-f0b49c6e97bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 d703e72a-52ef-4457-9787-08bc737a43bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 c7f95b83-52a4-4c32-bc85-f98acb887ae5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hA9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hF4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq8(8'hF4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #996 1cabdd5f-1ad8-4367-9e37-0d0ab4778723)");
unit.assert_eq8(8'hA9, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #996 3cafeceb-29d0-426a-aa9b-ebb0d4fcda54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 17bd1789-e9b1-40a7-8f62-98efa5a24818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 6fe3d238-f24c-4ffb-9aff-40d75e3120bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 54a6d906-492d-4b3c-aa48-be0a6869a6d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 58ec77ec-d90c-4df8-8933-f206a422b424)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 2d3981d9-d51a-4755-8d28-b1e03e7bd2db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 03a66b1d-b5e3-42ff-aec4-8712b701ba6f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h46;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hC2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq8(8'hC2, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #997 2af8e5b8-04d6-4653-8aa4-51f0a0232d98)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #997 37c3fb95-3042-4f54-91de-4b2dc6a7c4e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 83211c7e-e5c8-4bf9-bcba-04350b708a04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 e1e3a002-d052-4080-8f82-ecf7377eb529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 e591b8e1-76a5-4034-a744-fb301943c015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 7d7463db-1f84-443b-817f-427cea1ac9a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 c36884c1-3105-42df-98d3-422d3cdaa052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 e111c469-e412-42a7-8b39-48d487c5e60d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h29;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h08;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq8(8'h29, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #998 43bcba30-cde7-4b0a-aa68-01162435f75d)");
unit.assert_eq8(8'hB7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #998 fb82ec57-b30e-4384-b0c4-88472e179bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 a8dcbe03-cdc0-4ad1-ba71-18067d292a9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 d7bdb33e-1017-4eff-bd17-8c867acf4d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 c50e635c-29de-4f7b-94df-4860c0cfb93a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 e02fff16-afd8-4df0-a567-ee34cc31662b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 f01be6bd-b82c-4fcf-855b-2d56270eff7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 97ceeb7c-8929-4c4a-ad1b-95ef43edd822)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h14;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #999 aae8cc77-11b3-4d12-95b8-2f7189aade9a)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #999 dc1251b6-d7a8-4b87-bd1c-8d934a3fb75f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 9bfb2c8b-d4d9-47e8-8967-7a6f45cccb62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 bcb3a0c3-24b7-43e5-a023-14d006a0c9f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 f4310535-e39a-4873-af58-08150d05eeba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 4b082287-e949-48e4-86f1-ab7ca272a4c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 a08d5d0e-6567-4770-b760-c1add518a1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 8c22d189-c182-4e21-8119-61b999108e81)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h43;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h8E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hA4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq8(8'hA4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1000 46878aac-b41a-4863-a4b4-6f3ffe9a7744)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1000 39f2708f-81c8-4981-8a88-2b9e3baf038a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 45fdffe6-72e5-4e6b-890c-67796c859db8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 a1f61284-c637-418d-8f90-6e5425560a04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 63c7fc65-fde6-4d14-b7ab-58a389579e36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 19de6056-d359-4ddb-a9ff-c37200ef8d85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 99c165b5-d5ec-431e-ad17-f2ce3fb4196d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 a556dc5f-b517-4d79-90aa-68b05c0850a0)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hE6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h76;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDF;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq8(8'hDF, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1001 157106b4-c278-4a3a-98fd-dbdf99e57e32)");
unit.assert_eq8(8'hE6, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1001 ec421c9f-6ec5-4cde-893d-d5b2e27687a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 638696f9-45ea-480c-b15c-e570e678c863)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 befd8dae-81d3-4162-838d-9ccdb64eb8ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 730e65cf-3ad9-4fdc-aa66-70d8e8bece6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 a16d4694-0726-425f-9ab8-98a6d0d75e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 7b73f0b9-2dad-4cd9-94de-8bbc32b580d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 e36f0bc3-e579-4f89-a74f-2dfe18d2c352)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h04;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq8(8'h04, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1002 5929eecb-0f6f-425d-925a-ecff6a41fd1a)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1002 d77b6e85-b3be-4edc-a037-853979e06b1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 f36adb02-0ad5-42b1-8c50-11e1964ddf9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 26b05df9-e970-4e3a-86fe-6a0fc6938f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 a9f64cb5-5e56-4b9d-9c60-f9f152ba0796)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 503af1fc-b03a-4953-833a-71dc19cc5295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 8d208946-4ee8-4cce-93b5-b1cf300d9abb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 8182d28d-47d1-449f-819d-89e0340c2417)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hDA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h97;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq8(8'h97, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1003 7475c1f7-ebdf-4098-b0f6-65071a5b9e57)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1003 03234cb7-eca2-4ab0-baa3-6c7912c8c26e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 33aa65bb-d797-4530-8258-80bcb8838d64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 daccafac-5ca3-43ff-9d82-7c09f8aa1788)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 08d8d78e-548b-4d0f-8ace-41812b16f0dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 461bb639-6c6f-44fd-9aef-e34b2c0e367b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 5b78e3c6-e24c-4e36-b9fc-ec289da4de82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 1f11a2e3-f657-4d0e-9564-fb698ac25f11)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hFC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h33;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq8(8'h33, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1004 5303741e-3e1a-49df-b8ba-4ccef41c1f99)");
unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1004 315a4c38-a259-4dfe-a71d-c4b41950b01f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 45fd471c-4180-43eb-89e7-215047334aa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 3803a515-8cfd-4f8f-b527-1402b879b543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 cacd0af1-c32d-4836-8c7c-38e55bc95e63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 7e25effd-25fa-4e45-a44c-e8d0436bd29a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 a104f49d-29f2-4d27-815f-b2eab9c22963)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 273d062a-fad4-4740-a9c4-d59a9eb9de7f)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4C;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h6B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq8(8'hEC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1005 dec0bbe7-9843-43eb-ada6-5de34fe5495f)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1005 36f3e3e6-8da1-4da7-a91b-5b8e02f0da98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 d6f806d4-4794-4bbf-b51c-a1cb13468103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 850511c6-a2e2-4ac4-9bff-8c6013641f84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 f44b3d75-d0de-46b7-89f2-314fca63a79d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 6829310a-6c0d-449d-894a-78a8deef28c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 51d6526f-200c-4744-8084-ac190c7692ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 9248e25c-38ef-49c2-a9ab-3afb9eb745b6)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hC7;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hAE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h8B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hAD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq8(8'h8B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1006 341bf523-9d20-4c9b-b6dc-4818cbf0b6b6)");
unit.assert_eq8(8'hC7, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1006 8ff7c8f2-fa6a-407a-a8b0-8c3a153ae66e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 5d5f0c76-a551-4ea0-8f39-7c73270ab405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 29259a0d-d0f2-4d83-bfdb-11ed7fb4bf97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 802cf2c6-8427-43d2-a7dd-86d9bc7f68ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 37fe55d1-f0d7-4051-a87e-3c6233ff15f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 7fce2aaf-676b-4a83-a6e4-2b0a0500e548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 11b4be87-f29f-47dc-a8d7-a5568f408b66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h59;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq8(8'hDC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1007 0846d16c-984d-435a-b347-eb32e7ad6eaf)");
unit.assert_eq8(8'h59, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1007 0953c61a-4c7b-4787-80c7-240db25d25c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 b6d14713-873f-4214-aba3-07ded0569bf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 149a49ee-6a7a-4662-aaf9-88c566a6c59b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 13bfcd74-5302-4f0f-a5b3-527ce14c252a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 c240e436-2b28-43d3-a772-6a6533e595e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 de50e8c4-558f-413b-b76a-36edfd9a9202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 3f6ba454-4c5b-4c45-baee-4e73014eb282)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h51;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h32;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h57;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq8(8'h57, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1008 f5503a29-c966-4443-b94d-c72135060c72)");
unit.assert_eq8(8'h51, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1008 5ba83f1d-4dad-4418-beca-be392f69f007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 55a49971-4842-425c-ba54-66a62c1666f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 2281b09d-74bd-485f-8815-3d3cec00a799)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 1b2d94ad-0821-44c4-975b-23bf5a2faaf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 3cf99bb9-a0d5-4f8f-bf99-44c04eacaeb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 e286a1ca-7fed-410c-916b-ec8d86b39a26)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 be644591-6fad-49b7-a829-7c690782ab66)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h13;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h9B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hBA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq8(8'hBA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1009 47778e2e-9a37-4af7-9bf2-ee164a7f191a)");
unit.assert_eq8(8'h13, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1009 205316ec-2faf-4986-a49c-c127ed955940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 5fa25d54-aa4f-4175-a4c3-3e0f4e95f71f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 f8e16610-5863-4bab-a534-49afa2d96add)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 3d591861-c956-4a77-ae57-a6c51eb4693e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 4752dfe2-77fc-4667-9941-25fc298931c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 fd8d79af-000c-462d-8a71-8fbd44e83cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 78a78692-b7db-49d6-98ba-68fccf18dc8a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h5D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h99;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq8(8'h99, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1010 b529fc2e-ae88-4b5b-8b2f-643317000816)");
unit.assert_eq8(8'h5D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1010 9bf383c2-c82c-4f15-a021-ebbea2dc2678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 e0a45c13-97fb-4076-9e51-a4db922be08c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 9c6c6f89-a7cb-4eb9-8fd4-d5e2d152e102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 530513b7-31a4-4f26-8538-ec74a314b380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 f694ec72-2f18-4e3a-a282-9082d22ff738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 a0cb7b5b-56df-4e02-83d2-835a528d306b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 61c020d8-f316-44fe-95e6-c4bb507a0965)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h3F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h7F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1011 84739e78-5b58-4cac-8c5f-59fe75df3b87)");
unit.assert_eq8(8'h3F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1011 91e2821c-a172-4be1-9023-3912964187b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 eef72780-0c15-4d0f-ae56-63bd2a592270)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 ff6ad4e1-a3df-4e8a-80e6-c5fbae528cc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 544c44a5-ef40-4b60-94c9-379aa1d70c3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 2830835b-0df9-47d9-8380-3bcf73b0499a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 af90525a-49ce-4ba6-81c6-204dfd78f77e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 f7a001a5-fa34-4d8a-ad3a-4991b276ead3)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hAA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA2;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h73;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hB1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq8(8'h73, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1012 69bcb102-9fc4-4404-9c5c-47cea6bbd76a)");
unit.assert_eq8(8'hAA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1012 b5cb265c-d4dd-4ad2-8543-75e1598849c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 360a3167-e2a6-4872-9247-7d6f096df7ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 4e7a89d1-c401-4c53-b1f2-481986a34d29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 40185c49-0987-4e20-b0d9-cbb090987281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 722eeedd-0cd8-41e8-a32b-d647fd396f22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 73f30a44-ae95-4638-9c34-5647b9ae7b4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 fe5c3ac1-bf5f-4dfb-99f6-d662c8ba3609)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hED;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE4;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq8(8'hE4, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1013 6e9120c0-7290-4a5d-ada8-d6568e153554)");
unit.assert_eq8(8'hED, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1013 45a0008a-c2c4-4f15-81b2-2d81fb1f1b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 52454469-1faa-4e88-93e3-a9be3bbb2417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 45e130fb-539e-4f68-9971-bfc83a840fc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 b3c5d99a-df4c-463f-a69c-4277701af9a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 d8866983-1170-4ded-8719-1c34e8e699d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 352e1192-bab0-4f54-b4be-4dc05da6d158)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 b4300ad9-6fea-4939-9fbc-833be682446c)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h7E;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hE1;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq8(8'hE1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1014 a81c98bd-b46e-4a39-b184-0cdf93409804)");
unit.assert_eq8(8'h7E, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1014 1feff46c-f2db-40a8-8b80-1a970db2658d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 4fc5b376-0862-4fdc-8a66-1106a68ef2e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 f1f121a2-8d52-4b79-a74d-592095c59c77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 1f7d7bd4-12dd-44fb-b2cb-fb3d4be614e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 277da3cf-fae9-42ee-8fe3-372f1504f40b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 6be4983a-6901-4581-859e-2f66717e6f63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 ca12d52e-5e87-4cf1-ac7f-62a703e6063e)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hEA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h28;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hD5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq8(8'hD5, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1015 a5314774-6a8c-4fd0-90bf-5ec8e7eefdfa)");
unit.assert_eq8(8'hEA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1015 a401734d-f322-46f3-88e6-232cb08ef5f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 3fe14fb8-2156-401e-862f-dfea4708d5e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 82eac683-b783-4fa0-9730-1fb1cc6fc336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 b72425e2-0057-4c62-81b3-2af04c483817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 48f33ad3-94e9-4cca-8499-0b3e5cb51df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 3ac96941-f9f8-411f-bfa5-33faf97a56f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 4b154d1c-2446-435f-aa7b-352ec02cdc87)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h9D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hF9;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h00;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq8(8'h00, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1016 ab49eec3-3677-4353-9822-51136912cb11)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1016 9b74715b-4d18-42f0-9b6f-1055fc941340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 4e362c1d-2cc9-48d5-9743-af2cc2a78514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 7a89b1c6-d7ff-44d5-8517-c7c262632edf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 35421260-909f-49b7-82d8-6e1544df7ae2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 3357e3a7-e608-43a8-a46b-d4ec9eade1a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 9e903574-b3a3-478e-9573-806a90ce3180)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 4070824e-d4fe-409c-8f9a-8072a659f76d)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4B;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hA5;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hAC;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h79;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq8(8'hAC, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1017 11c583c8-aebf-4e9d-8dcf-de25f24cdafe)");
unit.assert_eq8(8'h4B, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1017 6fa38249-3f90-4fe9-88f6-aeacc32d8007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 2aa2305b-4af5-4819-aa9b-583adf3bb8f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 86e7a7c6-6caa-47d8-947b-fccc378bdbc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 7229a172-3c85-4eb1-811a-48369edc2bfb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 d6753255-37bf-4856-9999-ae49b956938f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 5e202410-6ea5-4e54-9556-f83624044cda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 6475bee2-b90e-4b41-a344-ca5c43eb83a5)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h2A;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hDB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hD6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq8(8'hDB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1018 ddf81029-4a41-409a-a414-f5d8cb3718c8)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1018 07c4f77e-48cd-4b19-8713-e8281f3581c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 27d72c80-34f4-4ff1-8b28-0714a4066126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 5a371bda-1488-4379-bec6-27ee5bce199c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 88c67ac5-7358-44dd-a74a-7d36718a2cf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 15d0606c-0502-4193-9fee-a0307e637bfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 3081d472-b8c2-4fce-8050-2c19239fbe59)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 c2fe7a8d-7715-44e6-969a-dbf548f74a51)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h36;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hE8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h90;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq8(8'h90, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1019 205943a6-7ecc-4736-99a4-8e9992aa9014)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1019 a69aa542-5332-456f-8ac5-e040b412dacd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 2b09fa78-9eff-46e5-b621-1d44e8400ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 15678b98-2019-47a1-bab6-27bde562dd23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 c493972b-e785-4e7c-b61f-dd4e0ab9f860)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 aebbdc15-941c-4c9d-b0b9-ad918d98ea19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 df616293-42d8-47a7-9d29-f2ee264f1c74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 0a6a3065-52e4-4ecf-8163-d8bc8878725a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h64;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h4D;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'hC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq8(8'h4D, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1020 0895d497-348a-4c4d-b3b2-b404e84deb69)");
unit.assert_eq8(8'h64, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1020 85258021-f79c-4313-8e0a-eb83cfb4fb6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 05b5fafb-8ea3-449f-91ba-4d1320414257)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 13a588bd-9a75-4603-89f3-51fe48669418)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 3405a56a-e0e0-457c-b6c6-b6bdb29be525)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 94c482a6-72d9-4e85-8743-dd8fd57369be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 2adb32cc-1bc9-401c-9313-944d42a6befd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 534c1c59-5152-44ce-ba61-59529f2f71fe)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hB8;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h20;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq8(8'h20, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1021 7ed0476b-2269-41fa-a3e2-afaa73ad239d)");
unit.assert_eq8(8'hB8, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1021 026b0b0e-1ebe-48d6-9f88-f1b3538a7b96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 7eaf9a48-d5c4-4bec-b11a-4dff4f4325ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 16f1e213-b6df-4236-b035-105c6d0eacc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 e513cffb-9d5e-4c67-85a5-364a989c89d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 359980fd-2bae-4405-a06d-ed4839173c51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 5cc064e3-32e6-4cc3-82cb-b89357b0ad8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 d1a3925b-47a0-4274-b344-2bee35e3c6d4)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'h4F;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h18;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'hEB;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq8(8'hEB, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1022 9621f29c-0b19-428a-921a-5f528db4f763)");
unit.assert_eq8(8'h4F, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1022 531fcb6f-69c6-48da-b381-38589416dfe1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 de167e81-1b4d-4b59-bb25-ec09b1ea8642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 55978bdc-fe64-4a89-898e-01a4a1c93c09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 116c7761-63d1-4ef2-ad51-3a82cd7a55b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 ba3b2877-de26-43a1-a8d3-6a3fca049777)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 d405e7aa-0fb0-4a6c-9a51-a901c19115cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 18592969-b33e-44c5-8add-19a600c41b3a)");

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a = 8'hFA;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hBE;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap = 8'h82;
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.fp = 8'h5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq8(8'h82, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.a,
"A (Testcase #1023 80e2f1d3-946e-4125-a1dd-0d4cc72da215)");
unit.assert_eq8(8'hFA, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.ap,
"A' (Testcase #1023 058cd9c3-f0fd-4511-b38a-2f58b3a2d107)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 a62731d0-9926-46be-8d1d-6e1cb8cbd5d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 742a3833-5ab8-4803-b82c-7729fc0655fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 5043a962-5d81-4e46-a0f4-ee2f57868ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 18fa0060-1b59-4dc6-b6ef-0e47e96e9e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 de5f35db-24b7-4903-b76b-5a5cfbf173aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 f53e3478-bcfc-43a5-9588-1518a097ef33)");

#(CLKPERIOD / 4);

unit.finish("ebsexafafp ('EX AF,AF'')");
