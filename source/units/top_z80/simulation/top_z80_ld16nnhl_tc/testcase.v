unit.start("ld16nnhl ('LD (nn),HL')");

// BEGIN TESTCASE #0
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #0)");
    end
end

unit.assert_eq16(16'h3B30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #0 3304b598-e359-475c-b955-6d8c8887f41e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #0 735cda81-4bc2-46c4-a29f-91ab8f7d3513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #0 e4079ebf-6a61-44aa-aa0a-7ff7c0b1689d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #0 fae3a542-c8fa-48af-84f9-4b186b543a41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #0 c4576938-94f3-4c2d-aad3-c6d302dab516)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #0 5b4572da-3112-4535-b504-c14e9c322b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #0 c3a620be-f1f7-4193-a4fa-3f3b8f4f279f)");

unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'hE7B],
"EXT DMEM (Testcase #0 c4e88743-c764-4ad5-a251-e3deb7ecb9b4)");
unit.assert_eq8(8'h3B, datamem_ext_i.datamem[13'hE7C],
"EXT DMEM (Testcase #0 4374a10b-c6ec-46a0-8be8-5b6e69e6a896)");
datamem_ext_i.datamem[13'hE7B] =
datamem_swap[16'hE7B];
datamem_ext_i.datamem[13'hE7C] =
datamem_swap[16'hE7C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1)");
    end
end

unit.assert_eq16(16'hC0F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1 c93db224-1006-4914-85a1-2359bdc8be4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1 4fefd874-783c-499b-9d37-033d6232fe32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1 83449736-35cb-423b-85ed-494f7d79258d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1 5bb06479-7631-443e-92fd-03487660d7d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1 69211b92-8db2-4dc3-a1d2-4bc46019e50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1 e5c78c98-6c8c-40bd-969e-ff301a1e5339)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1 7726c7e1-7859-45c1-b33c-d39f0f01ca58)");

unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'hD2D],
"EXT DMEM (Testcase #1 9850484f-1c42-4e6e-95d0-71332bcf0155)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'hD2E],
"EXT DMEM (Testcase #1 b4a052a5-e808-4199-9da8-83b98d5927a4)");
datamem_ext_i.datamem[13'hD2D] =
datamem_swap[16'hD2D];
datamem_ext_i.datamem[13'hD2E] =
datamem_swap[16'hD2E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #2
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0457;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #2)");
    end
end

unit.assert_eq16(16'h0457, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #2 a6c6c264-7165-4f5d-bc79-5848f9d20a35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #2 29d4872d-53bd-4cbf-8c54-2389a8d92f0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #2 e47f3d3d-08b3-4eb7-9070-e8c1ebac991c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #2 ac4b4482-75a6-4270-a1fe-fe483b3b9db1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #2 1b9c345d-dcc9-4be9-be84-b9a65c54dbf1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #2 3fc45185-b8be-44f0-b22f-8510cd9aac77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #2 ba461be1-7e50-4586-8a7c-6d8c8f01a506)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'hF8F],
"EXT DMEM (Testcase #2 dba50fc3-008a-4c42-988f-f3ac0d5fc1cb)");
unit.assert_eq8(8'h04, datamem_ext_i.datamem[13'hF90],
"EXT DMEM (Testcase #2 2e02edf8-b851-46a9-9ad3-4b1c57cbe5d2)");
datamem_ext_i.datamem[13'hF8F] =
datamem_swap[16'hF8F];
datamem_ext_i.datamem[13'hF90] =
datamem_swap[16'hF90];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #3
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6BE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #3)");
    end
end

unit.assert_eq16(16'h6BE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #3 83239873-99d1-4bd4-b536-0d384a2468a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #3 a500717d-d01a-4c16-b6f7-76ec81faf44e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #3 5da4ae42-e7fc-4759-af5a-ab54d828037a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #3 eebeafe2-6b10-48aa-a62b-adee4d041e99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #3 5f4d3e05-3ef8-44a3-8472-8450c31fc51d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #3 6eb836b0-127d-4f4e-a763-76564b8d9f19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #3 f80f7579-57f2-4b0a-acdc-bfb338766667)");

unit.assert_eq8(8'hE9, datamem_ext_i.datamem[13'h661],
"EXT DMEM (Testcase #3 fec03526-5bc7-4b67-893c-8592e64729f2)");
unit.assert_eq8(8'h6B, datamem_ext_i.datamem[13'h662],
"EXT DMEM (Testcase #3 78466aca-d0a4-49fa-a6e7-552c7ebf7493)");
datamem_ext_i.datamem[13'h661] =
datamem_swap[16'h661];
datamem_ext_i.datamem[13'h662] =
datamem_swap[16'h662];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #4
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #4)");
    end
end

unit.assert_eq16(16'h0B6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #4 0afb661c-41b9-4059-ba31-f07a2f5504b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #4 02e34ea5-6849-43be-88df-e3ea305c41f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #4 c9f03071-a5d2-4a87-9198-21fb361ce27d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #4 de6f6f82-5412-432a-803b-84cbef6e9065)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #4 76fba79a-89c7-47b1-b9d5-5e2b38372471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #4 f25acdff-01ea-48cc-863b-65faa524fed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #4 667ada85-26f1-4290-95fc-2fecf418965a)");

unit.assert_eq8(8'h6D, datamem_ext_i.datamem[13'hFD9],
"EXT DMEM (Testcase #4 1e765f0e-8d20-4a8f-b7e4-69f5156b74d5)");
unit.assert_eq8(8'h0B, datamem_ext_i.datamem[13'hFDA],
"EXT DMEM (Testcase #4 619a46db-5a97-41a9-9014-fd9be44513dc)");
datamem_ext_i.datamem[13'hFD9] =
datamem_swap[16'hFD9];
datamem_ext_i.datamem[13'hFDA] =
datamem_swap[16'hFDA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #5
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h849A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #5)");
    end
end

unit.assert_eq16(16'h849A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #5 e21d515e-7fc5-487c-95f2-5d77990756c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #5 f72da408-bd54-467e-9f03-eb1f59a2ed3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #5 9da3d818-24d7-4d0d-ae41-faec5ae38ee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #5 9898ba91-624d-4af7-b243-8501d6ad972f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #5 9159184b-dd41-43bd-b1ef-2268d8c68cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #5 149e0c9c-a94b-4a83-afae-0825c71623cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #5 7cb673e1-4b59-44ba-9c25-c7f1103a2782)");

unit.assert_eq8(8'h9A, datamem_ext_i.datamem[13'hE3A],
"EXT DMEM (Testcase #5 51b55458-327b-4e21-82c7-56b4e3cf60bb)");
unit.assert_eq8(8'h84, datamem_ext_i.datamem[13'hE3B],
"EXT DMEM (Testcase #5 4b38069c-fb2a-4038-ba46-4de28415feac)");
datamem_ext_i.datamem[13'hE3A] =
datamem_swap[16'hE3A];
datamem_ext_i.datamem[13'hE3B] =
datamem_swap[16'hE3B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #6
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5AA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #6)");
    end
end

unit.assert_eq16(16'h5AA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #6 7eecef42-3cbb-4f85-ae53-fee90bebdcd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #6 89cfe5db-d95d-4931-99e0-85c9e7f3053d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #6 437d53a7-f20a-4fb3-ab34-d56e301420f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #6 83a05a1e-ed0c-456a-a456-5942fcde90a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #6 9b111f00-336a-46f5-bf2e-28963db5d151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #6 5202c719-fc96-482f-ae80-b97ad61d72c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #6 831a1103-479d-485c-824d-021b8de1c448)");

unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'h4C0],
"EXT DMEM (Testcase #6 71aebca5-05d5-4770-ab05-be8e73ecd66e)");
unit.assert_eq8(8'h5A, datamem_ext_i.datamem[13'h4C1],
"EXT DMEM (Testcase #6 2ea3668a-f5b6-4d47-8f4a-3b59c9bea05a)");
datamem_ext_i.datamem[13'h4C0] =
datamem_swap[16'h4C0];
datamem_ext_i.datamem[13'h4C1] =
datamem_swap[16'h4C1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #7
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE12D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #7)");
    end
end

unit.assert_eq16(16'hE12D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #7 ab7baed2-c10e-42b0-903b-041e8797c5e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #7 349f64c8-c0f1-41a6-bc8f-02450903e76e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #7 d6220bb2-6a41-43d6-b8ef-640807af4d14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #7 bfd3ae13-1d7d-4d7c-a295-9abdda0fc6d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #7 a5378b09-0104-44e5-a328-936f6ecf2f5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #7 f20f4266-af59-49d4-8966-5ab4c5592919)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #7 efceeab5-3085-40f1-bd1c-beed2a9a60f8)");

unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'h651],
"EXT DMEM (Testcase #7 6cb04ade-baf9-430c-9666-c348cd05e72a)");
unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'h652],
"EXT DMEM (Testcase #7 758092ae-c9a8-4795-af1f-4c4d52f67ac7)");
datamem_ext_i.datamem[13'h651] =
datamem_swap[16'h651];
datamem_ext_i.datamem[13'h652] =
datamem_swap[16'h652];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #8
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #8)");
    end
end

unit.assert_eq16(16'hDA10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #8 b6ac2e2c-9829-4c1d-b74d-c52c3e464919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #8 4fa84a29-63e1-4ec1-9f75-9e3b4446ff84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #8 695277a1-9d38-4d26-95f3-162a0ba94690)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #8 49d96870-569d-4089-9be3-af91e330bed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #8 f584796f-411c-4ea6-9060-f3f31f20cd02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #8 d9f7e842-913d-40b1-8ee1-3d57a28c1a38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #8 dceef7af-dcb7-4d20-a017-d6e6003896e2)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'h897],
"EXT DMEM (Testcase #8 c1cad0bf-ae8a-4bfc-99d8-63ce49a6edd9)");
unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'h898],
"EXT DMEM (Testcase #8 5f74117d-85a1-40bb-8df6-6b1ffc4b0c46)");
datamem_ext_i.datamem[13'h897] =
datamem_swap[16'h897];
datamem_ext_i.datamem[13'h898] =
datamem_swap[16'h898];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #9
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE7D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #9)");
    end
end

unit.assert_eq16(16'hE7D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #9 eca3a17e-1a88-43e8-a8cc-eacfec438362)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #9 a1f45dbc-a3de-413d-9915-068678e59a4f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #9 99c123f9-1f4e-41cd-b44c-205643d2e31b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #9 b2bb2cc1-2cdc-4ad5-b558-43eb4f33e74e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #9 08e29a4f-88e0-4701-a066-d247a37730ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #9 bb74fcf0-4d32-4ee8-9133-52f823d119ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #9 84be632e-f41a-4607-9fb6-ab2d0b09efb2)");

unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h755],
"EXT DMEM (Testcase #9 4d845549-422f-49cd-9621-5811f2da4953)");
unit.assert_eq8(8'hE7, datamem_ext_i.datamem[13'h756],
"EXT DMEM (Testcase #9 bd1c4ea8-0ae1-4ca5-8b6d-963d10d4755c)");
datamem_ext_i.datamem[13'h755] =
datamem_swap[16'h755];
datamem_ext_i.datamem[13'h756] =
datamem_swap[16'h756];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #10
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h51D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #10)");
    end
end

unit.assert_eq16(16'h51D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #10 64bd037a-99ed-48de-964b-f3517efa56b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #10 50a955a5-ee75-4408-a354-68501a2a015c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #10 32317ff6-4291-4961-8b2d-9f81858ad9d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #10 12b8354f-57b5-42cc-b2be-4298e19a261b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #10 d964f7da-6cdb-430a-bbec-ef541d6438f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #10 c2d98986-e674-4684-b331-afc45a5a855d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #10 f196d572-b4d4-4c13-b70c-4bb0f6495f23)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'hF82],
"EXT DMEM (Testcase #10 4ebadec6-c7dc-410b-84da-082c38db90ca)");
unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'hF83],
"EXT DMEM (Testcase #10 5514ed4b-3fde-4440-ab65-bd0135338221)");
datamem_ext_i.datamem[13'hF82] =
datamem_swap[16'hF82];
datamem_ext_i.datamem[13'hF83] =
datamem_swap[16'hF83];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #11
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #11)");
    end
end

unit.assert_eq16(16'h3C1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #11 550bfea1-8a67-47e1-a405-4c56bbcbbf61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #11 c2e5b655-1c9a-4255-b851-9cb49a5fdf1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #11 341804c6-60a1-4e98-8346-0601f5d47a22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #11 2b959527-4988-4fe7-b2bd-55b76f509639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #11 6e8d6403-88e2-4717-8c40-06c39a9a755b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #11 a8e17fcf-e7cd-494c-8577-02bd0196e838)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #11 0a149820-03f4-4fd3-aca9-cd56e097c665)");

unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'h990],
"EXT DMEM (Testcase #11 adb39f87-1c2b-4d62-847c-e58779667d78)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h991],
"EXT DMEM (Testcase #11 10d01d5e-d48b-4f3e-a51c-43e3a40ec4e8)");
datamem_ext_i.datamem[13'h990] =
datamem_swap[16'h990];
datamem_ext_i.datamem[13'h991] =
datamem_swap[16'h991];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #12
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7F09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #12)");
    end
end

unit.assert_eq16(16'h7F09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #12 9504ccce-22f7-43a3-8c38-6932e7549445)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #12 7621464b-5f74-47d6-a67f-c9125dafc5ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #12 dd86752a-f42d-44fa-b42d-963a9c529a39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #12 bd62e972-895e-49fc-bf16-bb33254b8797)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #12 e1a10390-c221-444a-9cc3-82d315de5395)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #12 3cf06750-000c-48bc-a97e-2ce2946ba2a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #12 d189bcb8-9896-43d8-8f6b-143cf6d566d3)");

unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'h730],
"EXT DMEM (Testcase #12 39583716-7fd6-4651-a2f0-f94ce5a60f39)");
unit.assert_eq8(8'h7F, datamem_ext_i.datamem[13'h731],
"EXT DMEM (Testcase #12 3be6a1d3-a99a-453d-8397-9552487aaab4)");
datamem_ext_i.datamem[13'h730] =
datamem_swap[16'h730];
datamem_ext_i.datamem[13'h731] =
datamem_swap[16'h731];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #13
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8C83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #13)");
    end
end

unit.assert_eq16(16'h8C83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #13 68bcd059-523e-4f92-98b6-1a42ac995f00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #13 9ba5b3e0-4ca1-435a-90dd-270000371ea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #13 4b80bd17-30d2-4dc9-9655-ad4c9a2af899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #13 5fc0feff-99d4-45f8-8bba-f66df75f743e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #13 4961b5ef-c4bd-4827-8e53-979c340d5645)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #13 1605b2fe-9ed0-4d6f-9f48-c54507a36081)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #13 370d27a5-f178-4628-bd13-4ac71d76b7d3)");

unit.assert_eq8(8'h83, datamem_ext_i.datamem[13'h6AE],
"EXT DMEM (Testcase #13 9f309d68-6867-450f-8a6b-6a81209eb39d)");
unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'h6AF],
"EXT DMEM (Testcase #13 3e22c633-c183-474c-95f1-1379534a919c)");
datamem_ext_i.datamem[13'h6AE] =
datamem_swap[16'h6AE];
datamem_ext_i.datamem[13'h6AF] =
datamem_swap[16'h6AF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #14
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA319;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #14)");
    end
end

unit.assert_eq16(16'hA319, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #14 bcb4652a-23f8-4e4a-bd0b-995d8089eb1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #14 fb10137b-7b5a-4df6-a9bf-2e3ad591755f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #14 03fc35d9-1672-4855-939b-35d7c5293d97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #14 9225444f-1e0a-48d7-a7fa-682c9e960a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #14 2f0462ff-7217-4f7a-bea4-0fc2fc1ce01f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #14 29dc95af-0b95-4d39-8b60-c6e270a995f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #14 d9a79578-3e23-4dcf-af0e-bef82dc94dba)");

unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'hA16],
"EXT DMEM (Testcase #14 3a79ef2a-fc06-4cad-8573-de5dfc7a17d3)");
unit.assert_eq8(8'hA3, datamem_ext_i.datamem[13'hA17],
"EXT DMEM (Testcase #14 c636dec2-a525-453b-8d8b-3fb0044d4581)");
datamem_ext_i.datamem[13'hA16] =
datamem_swap[16'hA16];
datamem_ext_i.datamem[13'hA17] =
datamem_swap[16'hA17];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #15
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h76FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #15)");
    end
end

unit.assert_eq16(16'h76FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #15 4ff4a9e7-a461-485d-99c8-6bad2fc041d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #15 9d8d981a-dd5e-45ad-9b34-d11a6a056970)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #15 3fbff308-8547-450d-8490-3de00f1c8394)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #15 efb9537c-9945-4bbb-afc6-a3e5ee075840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #15 0c7a6c6c-c712-4142-a877-0ae422dd480a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #15 16f1ce16-c7cc-4966-84b6-42c61809bb73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #15 182dc782-7d19-4882-8b27-38460bcfdb8f)");

unit.assert_eq8(8'hFB, datamem_ext_i.datamem[13'hFED],
"EXT DMEM (Testcase #15 aa7c0a23-c5e4-4ab0-800d-6b73a4ca2637)");
unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'hFEE],
"EXT DMEM (Testcase #15 202b98be-d061-408e-82bc-69beb4107af7)");
datamem_ext_i.datamem[13'hFED] =
datamem_swap[16'hFED];
datamem_ext_i.datamem[13'hFEE] =
datamem_swap[16'hFEE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #16
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB741;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #16)");
    end
end

unit.assert_eq16(16'hB741, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #16 bad07b57-6eb0-41a3-8ed4-80174693d402)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #16 e1c700b1-4581-418c-ba03-92dd548083b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #16 d4ee8762-885e-4cc9-abde-287cbbb04580)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #16 ac52be29-a450-421c-9dea-dc65969e2e6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #16 b92ec7cb-d2e6-43bf-bfc0-0e907d85d1ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #16 fe413394-2a1f-4b93-ad19-e77df9837c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #16 bf5898d2-dc55-4382-9d4d-db5c92ae9804)");

unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'hB02],
"EXT DMEM (Testcase #16 df1ccff0-de85-4468-89af-9a9810416f02)");
unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'hB03],
"EXT DMEM (Testcase #16 8c45eb5c-215f-4af1-b1fd-f8ac0b42a545)");
datamem_ext_i.datamem[13'hB02] =
datamem_swap[16'hB02];
datamem_ext_i.datamem[13'hB03] =
datamem_swap[16'hB03];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #17
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA5D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #17)");
    end
end

unit.assert_eq16(16'hA5D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #17 67701528-052a-476a-a9c0-14ead27b564e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #17 68fbd2dd-0ddb-4681-bcab-a09a5376b847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #17 a159a77e-d299-43b5-840a-0af2655df9f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #17 d95e35bc-19ca-4907-ab3b-ccbdf27632b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #17 94bac9e5-19a9-43ba-bb12-c067575f05d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #17 336eed1d-6b95-4019-8c2c-1ff9f6b5c8b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #17 7cee0482-f204-4195-860b-9fd389be3914)");

unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'h42F],
"EXT DMEM (Testcase #17 f1b3cc5d-eda7-4a54-82a0-256a14711a56)");
unit.assert_eq8(8'hA5, datamem_ext_i.datamem[13'h430],
"EXT DMEM (Testcase #17 bf278932-a5f7-419d-b492-d4cf789cd76e)");
datamem_ext_i.datamem[13'h42F] =
datamem_swap[16'h42F];
datamem_ext_i.datamem[13'h430] =
datamem_swap[16'h430];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #18
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0068;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #18)");
    end
end

unit.assert_eq16(16'h0068, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #18 08371b31-8e8d-4483-8da7-4a4099ce7a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #18 b0ad4e6d-76b1-4a1d-89ff-ebfcbbdf5fc1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #18 96d20810-3f15-47a1-8edc-90c29da85959)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #18 621f21ff-97bf-497e-8dc3-db52df3603ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #18 74366166-b7bc-4d3d-933f-44fc80028fb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #18 d0292e37-2402-433e-b084-5602658d5244)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #18 a8887153-66fb-40d1-ad06-094facf7e68d)");

unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'hE51],
"EXT DMEM (Testcase #18 f70edb2c-4248-41e9-879e-13c520cb03b4)");
unit.assert_eq8(8'h00, datamem_ext_i.datamem[13'hE52],
"EXT DMEM (Testcase #18 c5f446d9-f50c-43ba-92fb-56e81d8d4e80)");
datamem_ext_i.datamem[13'hE51] =
datamem_swap[16'hE51];
datamem_ext_i.datamem[13'hE52] =
datamem_swap[16'hE52];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #19
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h50C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #19)");
    end
end

unit.assert_eq16(16'h50C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #19 277aa36b-5db7-4f6d-b45c-3a8efaccfc8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #19 eeb3d32f-c9db-4e5c-b798-42473d0085f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #19 bb8e3ecb-980a-4fb2-84fe-954cde731a44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #19 241f2d6b-8782-4f03-988f-1c88c93fac04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #19 6d90a39d-c7b2-4f43-afa7-4b0039f79f0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #19 418983c8-d77a-441e-ba16-8be95eb68e3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #19 daf6bcd8-3ff5-481b-b6b4-13a4d591816a)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h642],
"EXT DMEM (Testcase #19 5d39d487-3326-44d1-b7d1-9bcdcc762b4d)");
unit.assert_eq8(8'h50, datamem_ext_i.datamem[13'h643],
"EXT DMEM (Testcase #19 68c5c0de-694a-453f-887f-b0bff04c9c11)");
datamem_ext_i.datamem[13'h642] =
datamem_swap[16'h642];
datamem_ext_i.datamem[13'h643] =
datamem_swap[16'h643];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #20
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9828;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #20)");
    end
end

unit.assert_eq16(16'h9828, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #20 80a30f98-7a86-4a97-bb74-5b7d29e49b94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #20 819c20b1-f45c-46b3-84ef-4a9fc607b821)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #20 1de79588-debc-46aa-bd33-15dfb3524914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #20 145f8871-43bc-4c5b-8ca9-cf649c49269b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #20 3d27fb3f-a334-48e4-915a-460dcf54655c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #20 c355f93e-5192-4056-a756-650e350decdf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #20 9ea12a7e-30cd-4764-b79e-e367185ba111)");

unit.assert_eq8(8'h28, datamem_ext_i.datamem[13'hD2F],
"EXT DMEM (Testcase #20 ecf3a6fa-4a4d-4e89-907e-76eb0c8a9e81)");
unit.assert_eq8(8'h98, datamem_ext_i.datamem[13'hD30],
"EXT DMEM (Testcase #20 2c7401a1-7b85-433b-8cd7-f43cb9399239)");
datamem_ext_i.datamem[13'hD2F] =
datamem_swap[16'hD2F];
datamem_ext_i.datamem[13'hD30] =
datamem_swap[16'hD30];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #21
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA5C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #21)");
    end
end

unit.assert_eq16(16'hEA5C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #21 3cc4570d-7aeb-494d-98c2-250a10416d80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #21 079fb0cf-a348-4ae0-89c7-0c85b111546c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #21 12f3ca9c-f3eb-4e22-b73c-d5e60a2321a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #21 de4b164c-fa06-44ff-a5df-42f1209fabed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #21 af7ff206-fa0a-49a4-8aca-7672b033f236)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #21 640dcc86-3f68-497a-afde-5a45fbaaa0dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #21 25c084d1-2350-4fa5-b11d-5de9e2cd22ea)");

unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'hC12],
"EXT DMEM (Testcase #21 9f0c2f9c-d29c-4edc-92b8-485aea9384df)");
unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'hC13],
"EXT DMEM (Testcase #21 9289ba01-ff4c-4f6f-8348-689a7b61202b)");
datamem_ext_i.datamem[13'hC12] =
datamem_swap[16'hC12];
datamem_ext_i.datamem[13'hC13] =
datamem_swap[16'hC13];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #22
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #22)");
    end
end

unit.assert_eq16(16'h3A3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #22 91ec8bdd-02a1-4bc6-8724-1302e29ad8cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #22 4f08f922-4ebc-4c32-a01b-0d4e98b7bb22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #22 b5a9d4e2-539d-45e1-9795-6d72d7e650a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #22 f0ef9e95-a679-4c4a-ba81-23760c5d95c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #22 f8589c4a-adf8-44c3-a41b-a059abf0194d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #22 a27427f4-fd8a-474c-8a09-579386c4d60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #22 ae63d336-9378-48f4-ad21-87fdc30ccfc9)");

unit.assert_eq8(8'h3E, datamem_ext_i.datamem[13'hD66],
"EXT DMEM (Testcase #22 c63e80b5-0c9f-4f99-b701-9ed7c4d90c3c)");
unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'hD67],
"EXT DMEM (Testcase #22 2ff4bd6a-0b00-47b0-95e4-47badbb0235d)");
datamem_ext_i.datamem[13'hD66] =
datamem_swap[16'hD66];
datamem_ext_i.datamem[13'hD67] =
datamem_swap[16'hD67];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #23
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #23)");
    end
end

unit.assert_eq16(16'h6F85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #23 d1686965-b9ac-47b8-aa1d-8d08f5ef70c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #23 0a3a30e4-177b-4068-9ca6-b2c38356867f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #23 0f75a9a5-a090-40f4-a3fe-4a79bc3e9dd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #23 9b78403a-4d4a-4983-aa58-936445dc02b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #23 1b06a4a9-fb6f-471a-860b-77681058f5e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #23 b4bbe9ae-a163-4d8e-b9fa-d00a6a5c1726)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #23 a99b0bb8-861a-46c2-8eba-83d601967654)");

unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'h85A],
"EXT DMEM (Testcase #23 6dacdc4a-e77c-40c4-91e6-f7f4c5e083a5)");
unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'h85B],
"EXT DMEM (Testcase #23 f22d386d-a08e-44d3-94c8-232cb00368d0)");
datamem_ext_i.datamem[13'h85A] =
datamem_swap[16'h85A];
datamem_ext_i.datamem[13'h85B] =
datamem_swap[16'h85B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #24
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #24)");
    end
end

unit.assert_eq16(16'hF1B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #24 4e9cbcc3-2087-4b93-a711-b9e1c5eddb1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #24 511080bd-4095-4f88-8f21-284a7c64c810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #24 f5113e78-f1ba-4b32-9c85-5366bf784bf6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #24 058f55c8-6ddf-445b-bd81-ff3511f7c958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #24 87766d42-448f-4850-900c-4051bd38f4ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #24 bf8285cc-0c4f-4541-8297-044acf1aaa9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #24 99604b1b-6102-47fe-acad-ddec35e3d71d)");

unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'h3CF],
"EXT DMEM (Testcase #24 77b0a143-dbf3-4b97-9e43-303b85734243)");
unit.assert_eq8(8'hF1, datamem_ext_i.datamem[13'h3D0],
"EXT DMEM (Testcase #24 df9dcca1-8444-4f1d-9e53-fe5f2ff607d3)");
datamem_ext_i.datamem[13'h3CF] =
datamem_swap[16'h3CF];
datamem_ext_i.datamem[13'h3D0] =
datamem_swap[16'h3D0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #25
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #25)");
    end
end

unit.assert_eq16(16'hAB59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #25 35964082-c202-444d-ae01-d79a07df32c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #25 ae9b62f6-da17-4f81-a3e6-bf199e21e971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #25 d64d0e29-dccf-4205-a7c4-5b20c8ef9441)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #25 573eb9a5-f488-40cc-8adc-0f00a86c9b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #25 151dc681-6bd8-46e0-90f8-b479ddff2744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #25 0d2f3c88-8219-4111-bfe3-cdfb1a2bcd2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #25 106b39ec-b5ae-499c-a935-362f215b7255)");

unit.assert_eq8(8'h59, datamem_ext_i.datamem[13'h735],
"EXT DMEM (Testcase #25 119d4800-62e0-4c1a-a570-e259927b1e6a)");
unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h736],
"EXT DMEM (Testcase #25 8c5cd959-ddf6-4802-b60e-b7ad61df090f)");
datamem_ext_i.datamem[13'h735] =
datamem_swap[16'h735];
datamem_ext_i.datamem[13'h736] =
datamem_swap[16'h736];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #26
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9EEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #26)");
    end
end

unit.assert_eq16(16'h9EEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #26 d31d7878-ef5f-4453-ab1e-e4a97d5d5277)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #26 3289e83d-5801-4b36-9a88-6882c072f763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #26 557abdc8-e1ff-418a-bfef-be0cd322244e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #26 99e436d8-84fe-4fdc-b914-7946a2e094c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #26 ee11db87-00ec-41a1-af89-98322dc04b47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #26 b2617556-44eb-4e03-8bc9-91e03568b82d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #26 7dbe9dca-a5d9-48e9-ae69-165b5b458de7)");

unit.assert_eq8(8'hEB, datamem_ext_i.datamem[13'h644],
"EXT DMEM (Testcase #26 3458086a-78a2-4e7b-b92a-f11da855758f)");
unit.assert_eq8(8'h9E, datamem_ext_i.datamem[13'h645],
"EXT DMEM (Testcase #26 5e6fd670-6b7b-4cd2-8ebd-a069a80f2d1c)");
datamem_ext_i.datamem[13'h644] =
datamem_swap[16'h644];
datamem_ext_i.datamem[13'h645] =
datamem_swap[16'h645];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #27
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE946;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #27)");
    end
end

unit.assert_eq16(16'hE946, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #27 503ae125-e1a6-4b47-a9a2-9b2f91f5aee5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #27 26491031-e35b-4c92-907b-7869710b2538)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #27 74311ef6-ba48-4bd2-9f9f-c2871ca92fe5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #27 f7a6b5f7-6487-4f70-ac40-dabb7c75d469)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #27 721a01ae-dd8e-469a-bc57-0ee56a9f1bdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #27 e0d619db-e2f6-4124-84c3-6fc3ad8e4ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #27 28f8bd57-c7f4-45b6-9c6a-dd5a5c7c8e2a)");

unit.assert_eq8(8'h46, datamem_ext_i.datamem[13'h768],
"EXT DMEM (Testcase #27 9da34ced-4a6f-4948-983a-ad6a58120722)");
unit.assert_eq8(8'hE9, datamem_ext_i.datamem[13'h769],
"EXT DMEM (Testcase #27 20a6909a-ba21-4686-8821-faca7880a1b5)");
datamem_ext_i.datamem[13'h768] =
datamem_swap[16'h768];
datamem_ext_i.datamem[13'h769] =
datamem_swap[16'h769];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #28
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD651;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #28)");
    end
end

unit.assert_eq16(16'hD651, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #28 a8096c43-b856-4438-8bb1-404fa294e71f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #28 f1cd3390-2067-4416-9590-2ab665401819)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #28 093f7121-f4f7-4569-90b9-7524f2f04f78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #28 b88f4806-e228-4c27-9696-2e80bf98972b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #28 abeeac1c-b1ad-4174-8990-38be24050f45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #28 82b86544-4c62-4dba-ac0b-d7a1478785b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #28 43550237-6545-4aac-b932-86bb469186ac)");

unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'h846],
"EXT DMEM (Testcase #28 727f9e11-6505-40a9-95df-47dbaf2b0329)");
unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'h847],
"EXT DMEM (Testcase #28 469c93d3-85fe-4353-8a11-bc2e051d4921)");
datamem_ext_i.datamem[13'h846] =
datamem_swap[16'h846];
datamem_ext_i.datamem[13'h847] =
datamem_swap[16'h847];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #29
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2006;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #29)");
    end
end

unit.assert_eq16(16'h2006, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #29 29f6c2bb-d95d-46f5-b43b-3a612a132049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #29 53374279-c3bc-45ec-9420-a5810b5e2333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #29 01532b0b-7519-4a25-b876-713f54d10da2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #29 e473f605-9108-4a65-90f0-c83eeedbbd4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #29 e4d8c662-af6c-4106-9693-e9f8fdaefbef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #29 003c4189-7e37-4c65-b3cc-d471f30614d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #29 45ee475e-2485-466f-b38d-de853e180be6)");

unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h46C],
"EXT DMEM (Testcase #29 c16e5ada-ae5b-4d65-bb2d-1cd369868c20)");
unit.assert_eq8(8'h20, datamem_ext_i.datamem[13'h46D],
"EXT DMEM (Testcase #29 43919bea-73d1-4820-ad84-5e90fef8b9c4)");
datamem_ext_i.datamem[13'h46C] =
datamem_swap[16'h46C];
datamem_ext_i.datamem[13'h46D] =
datamem_swap[16'h46D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #30
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC649;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #30)");
    end
end

unit.assert_eq16(16'hC649, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #30 d1963744-59f2-4ff3-a90e-d5ca94747761)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #30 0cf2cf04-ef6b-4a74-a8bc-a924cae938a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #30 d0844dd1-30fb-4a01-a8fc-e2d6c682738c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #30 3f4b788b-cf16-4952-a044-a71d58f6c745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #30 d483df8e-4501-4de4-913b-44868430d708)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #30 74b819d7-f2a8-4ef3-b283-407ade431ecc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #30 d8fd284e-f352-4e44-8a53-5a6b71e4b9c3)");

unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h752],
"EXT DMEM (Testcase #30 ca2ae7de-9ba8-4eb8-a90d-161659db8c81)");
unit.assert_eq8(8'hC6, datamem_ext_i.datamem[13'h753],
"EXT DMEM (Testcase #30 6bd43ab5-ec3a-472a-ab5b-e42867be8d89)");
datamem_ext_i.datamem[13'h752] =
datamem_swap[16'h752];
datamem_ext_i.datamem[13'h753] =
datamem_swap[16'h753];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #31
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC94E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #31)");
    end
end

unit.assert_eq16(16'hC94E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #31 fb175f75-4e70-4790-b165-8e2f3a684169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #31 229b3954-640a-44e2-b6e3-227219968da9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #31 8aebad36-fd3a-4178-8ba5-0c7e14781681)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #31 a2635ba0-3849-4dac-b5f5-ac5d517bc174)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #31 70c66aba-9e63-4b41-bf61-55e7af9c1fb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #31 0e4c6348-e4ca-45a7-a8ef-da756c1e2004)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #31 57b3947c-b261-4bc0-91c8-c638468fe28c)");

unit.assert_eq8(8'h4E, datamem_ext_i.datamem[13'h6F2],
"EXT DMEM (Testcase #31 71f5e031-fe83-4de8-867f-cdbae4345588)");
unit.assert_eq8(8'hC9, datamem_ext_i.datamem[13'h6F3],
"EXT DMEM (Testcase #31 f718e74d-f4e7-4caa-a4f9-6445490a717f)");
datamem_ext_i.datamem[13'h6F2] =
datamem_swap[16'h6F2];
datamem_ext_i.datamem[13'h6F3] =
datamem_swap[16'h6F3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #32
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5882;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #32)");
    end
end

unit.assert_eq16(16'h5882, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #32 62e7dcc9-baaa-474e-8b56-5adaa41c4e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #32 0ab06c13-74e4-4a74-add4-e5293b5e4b75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #32 b2d330f3-603e-46e7-a8ea-e964c36378fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #32 4ae6a688-18c0-4eab-ae48-82629d14e652)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #32 a912f7ca-4fbb-4e1e-8869-78055311afa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #32 1d5375f3-ca54-4f37-b565-1935fd5f2221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #32 e2af81d1-97ea-4ff2-bad7-d2cbdd6295ea)");

unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'hD3D],
"EXT DMEM (Testcase #32 2d99d511-fc3e-4c0d-83ef-b8bc7bf649fc)");
unit.assert_eq8(8'h58, datamem_ext_i.datamem[13'hD3E],
"EXT DMEM (Testcase #32 85b7d86e-d861-470f-bf47-c6a9afeccf7b)");
datamem_ext_i.datamem[13'hD3D] =
datamem_swap[16'hD3D];
datamem_ext_i.datamem[13'hD3E] =
datamem_swap[16'hD3E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #33
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #33)");
    end
end

unit.assert_eq16(16'hFE1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #33 f6cb13db-9ca7-4010-8ca8-b972b3bd48ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #33 feb04ccf-1957-4f3d-a213-ca1d5f196042)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #33 29fde6a9-12d3-4b8f-8c03-119fa1d59d87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #33 df761f07-2cfc-4b6e-a137-021725409109)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #33 43d4c2cf-9134-46b7-96a7-d16fd936131e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #33 67775d2d-5223-44d9-9eea-52e7a4485f2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #33 7f44e08b-2a18-4a76-9970-53a2e41f8cb2)");

unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'hF04],
"EXT DMEM (Testcase #33 1c2836f9-c58d-4b5a-af75-c2fd1a9f2b2f)");
unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'hF05],
"EXT DMEM (Testcase #33 8175423e-ea95-4b10-9ee7-898f37223d48)");
datamem_ext_i.datamem[13'hF04] =
datamem_swap[16'hF04];
datamem_ext_i.datamem[13'hF05] =
datamem_swap[16'hF05];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #34
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2B21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #34)");
    end
end

unit.assert_eq16(16'h2B21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #34 a0c2cd04-df09-45ea-aebd-6850fc05c47b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #34 4e07c17d-7729-4166-b133-efe26c0f7c17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #34 e987e19b-1b1b-4bf4-b106-83c6e027dde6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #34 1abf3164-8b4e-4987-be35-2a929fb8c93b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #34 9baaf58e-b8e9-4054-9897-d8033d1a5afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #34 48a2533b-2ca8-4592-a151-35bbd7fb38e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #34 18e6aa42-fdf3-4b18-a3c1-88deb3963ace)");

unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'h966],
"EXT DMEM (Testcase #34 9c57fd45-5d9b-4850-894c-579b1ac3812b)");
unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'h967],
"EXT DMEM (Testcase #34 87c01175-62af-4daf-b695-2e16373d9e0a)");
datamem_ext_i.datamem[13'h966] =
datamem_swap[16'h966];
datamem_ext_i.datamem[13'h967] =
datamem_swap[16'h967];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #35
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5ED2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #35)");
    end
end

unit.assert_eq16(16'h5ED2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #35 c2a2b5ae-ab80-469e-b36e-754ee88b930e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #35 c59ce054-1048-4f17-b297-0e25ff9c85e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #35 c4c6944c-caea-434a-8c9e-81050f0cafbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #35 201113fe-a1a0-4c30-8e7d-7a3afb9621aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #35 e81711af-2ddd-4917-b036-5a41da931766)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #35 6a260d71-38ea-43ee-bc52-dcb8a59c88c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #35 ba7faf1a-51ba-40eb-abe9-1317b69fb6b6)");

unit.assert_eq8(8'hD2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h04],
"INT DMEM (Testcase #35 5e7b0d0c-6533-49c2-af92-a9ab599d9c37)");
unit.assert_eq8(8'h5E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h05],
"INT DMEM (Testcase #35 6992c86a-0fc4-4398-960a-8a11e4cf813a)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h04] =
datamem_swap[16'h104];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h05] =
datamem_swap[16'h105];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #36
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h92D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #36)");
    end
end

unit.assert_eq16(16'h92D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #36 190fbd4d-850b-403d-85e1-81e10b5c8fa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #36 fe0ba428-4ed8-4b05-ad81-9a7fad01f5d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #36 eebb71dd-def6-4624-955a-f43927212d6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #36 9cff876e-ae7f-43ed-a3d5-69efb6eb78b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #36 5a653b63-369f-4393-9b21-f2d598bac7d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #36 0d0e9ac4-61a0-4505-8230-65254acd5cb7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #36 bada3037-cf45-465a-9954-8ed1d42a1c0b)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'hC6E],
"EXT DMEM (Testcase #36 21ea788c-0a4f-43f4-889c-c2f1944a82db)");
unit.assert_eq8(8'h92, datamem_ext_i.datamem[13'hC6F],
"EXT DMEM (Testcase #36 74ecd752-71b6-4afd-92b1-cd8a8ca630a1)");
datamem_ext_i.datamem[13'hC6E] =
datamem_swap[16'hC6E];
datamem_ext_i.datamem[13'hC6F] =
datamem_swap[16'hC6F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #37
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #37)");
    end
end

unit.assert_eq16(16'hCA38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #37 9e4c459d-69e0-4f53-a5f8-87657203a8ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #37 1259dba4-6b1a-4f3c-b1c2-90a79d5d63e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #37 8948c732-a1af-4bd0-8c08-4027cf1559ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #37 53e71836-e019-4267-948b-ef9ae80fe2e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #37 88468f9a-fd6a-43bc-b29f-294208d517c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #37 39baab13-fcd8-4209-8525-881246c7d35d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #37 8acfa337-2704-4ea8-9ab8-aa53ba4d0443)");

unit.assert_eq8(8'h38, datamem_ext_i.datamem[13'h49F],
"EXT DMEM (Testcase #37 b97f741a-5064-4a4f-ba6b-03ff33187cf4)");
unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'h4A0],
"EXT DMEM (Testcase #37 2dba2c22-d00c-41f6-8bf6-7b4aafd43f3f)");
datamem_ext_i.datamem[13'h49F] =
datamem_swap[16'h49F];
datamem_ext_i.datamem[13'h4A0] =
datamem_swap[16'h4A0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #38
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #38)");
    end
end

unit.assert_eq16(16'hFE9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #38 c309910f-cc0f-4144-818d-9614e82fa756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #38 d1cbdade-287c-43eb-b251-36b405851ff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #38 8ce7d8e9-5d26-485d-adae-4ae1e41ab718)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #38 6606460d-4702-4f02-9499-5e16f8991ecc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #38 7b6f11b7-9d44-4e04-9edc-d939bac69e7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #38 cf5d36b9-8893-4a25-bb97-3398701eae3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #38 b8f48e4e-8a60-4b59-8b4d-17e02e01b556)");

unit.assert_eq8(8'h9D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA9],
"INT DMEM (Testcase #38 ef27b79f-6767-4b91-af65-273fadcd823d)");
unit.assert_eq8(8'hFE, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAA],
"INT DMEM (Testcase #38 bef2ebbc-ed36-43fd-9f71-27b80e04a7db)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA9] =
datamem_swap[16'hA9];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAA] =
datamem_swap[16'hAA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #39
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC5DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #39)");
    end
end

unit.assert_eq16(16'hC5DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #39 d5c1e1ba-0389-49cd-b51c-4c1b8bb816bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #39 aa5aeecd-0272-4980-8915-29994d2efcb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #39 05d004e5-795c-42ca-90e5-24a4dc4ba9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #39 0fbe0f5a-b769-4119-a8bd-57c1084f028b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #39 fd9b9874-9232-414a-8c84-1b10e8f8aa80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #39 ddb312e6-b337-4975-9fb9-0bed5ee27035)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #39 14ecffee-5d90-4744-90ff-771dbf24d163)");

unit.assert_eq8(8'hDB, datamem_ext_i.datamem[13'h55B],
"EXT DMEM (Testcase #39 11dc6a9b-cc82-4172-81b2-df009553fdde)");
unit.assert_eq8(8'hC5, datamem_ext_i.datamem[13'h55C],
"EXT DMEM (Testcase #39 fee58a92-8369-40da-b79b-6d92e39d0231)");
datamem_ext_i.datamem[13'h55B] =
datamem_swap[16'h55B];
datamem_ext_i.datamem[13'h55C] =
datamem_swap[16'h55C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #40
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3AE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #40)");
    end
end

unit.assert_eq16(16'h3AE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #40 77d80d9c-3127-4560-8b97-6dff5fa21ee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #40 78da8eb0-8230-4dd4-8927-081e0da29142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #40 663e5bad-7819-4331-8e78-fb14112a3a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #40 93db11d4-d0c7-409c-b13c-df332899fc8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #40 a783e88a-7409-41ea-a968-1f2f2c9a5864)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #40 5c060870-b41b-484e-b71c-0a1d6eaa3ce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #40 4c8072b1-6e94-4889-b56d-2df2c874ccc3)");

unit.assert_eq8(8'hE8, datamem_ext_i.datamem[13'h6DE],
"EXT DMEM (Testcase #40 0a4119fa-e9f9-4917-ab6e-3cccf9e95dbb)");
unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'h6DF],
"EXT DMEM (Testcase #40 f13e9fc4-e2eb-4b0e-82e8-a6660d5f958f)");
datamem_ext_i.datamem[13'h6DE] =
datamem_swap[16'h6DE];
datamem_ext_i.datamem[13'h6DF] =
datamem_swap[16'h6DF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #41
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0EED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #41)");
    end
end

unit.assert_eq16(16'h0EED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #41 31e8a0fa-7f4e-4057-882d-aae1a89624f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #41 fc6b1c30-66e7-400e-af40-7227a2638f69)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #41 f4642bba-48f6-4084-81fb-6e0029fbb8d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #41 780b27a3-909e-42ce-9c36-f21725641b45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #41 b47f2547-b6a3-4d48-b7a6-62c2fd07be6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #41 2d1f9329-2e7c-4b8d-a86c-352a66cae686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #41 cf3a9c36-d400-4db9-b602-5c49b2f30e90)");

unit.assert_eq8(8'hED, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h23],
"INT DMEM (Testcase #41 714b61c0-9166-4e6a-984f-7809bae795f6)");
unit.assert_eq8(8'h0E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h24],
"INT DMEM (Testcase #41 db186ee2-fd29-4109-a55d-a4401f9ff413)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h23] =
datamem_swap[16'h23];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h24] =
datamem_swap[16'h24];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #42
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6E12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #42)");
    end
end

unit.assert_eq16(16'h6E12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #42 6d6a21a1-b265-4e8f-9a33-452542f81acf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #42 12f5dc8f-0119-4698-a02f-9dec2d67e0d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #42 423dcf9b-7c79-4540-9bc1-7778b20ff31a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #42 8948eec2-7a9e-4eff-8255-370f27f07a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #42 ada207b7-562f-45e3-9b9c-de9a89db4293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #42 741f272a-9c8a-4aca-abe1-2d409c2dd219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #42 94717432-a554-4b89-9484-6fdd92224f55)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h505],
"EXT DMEM (Testcase #42 246461b9-77a6-4d5a-a4c7-2f4ed5185559)");
unit.assert_eq8(8'h6E, datamem_ext_i.datamem[13'h506],
"EXT DMEM (Testcase #42 732bcc2a-aaeb-4d58-a330-fef8d83d193b)");
datamem_ext_i.datamem[13'h505] =
datamem_swap[16'h505];
datamem_ext_i.datamem[13'h506] =
datamem_swap[16'h506];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #43
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h09BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #43)");
    end
end

unit.assert_eq16(16'h09BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #43 70f58e8b-cdc7-4e73-91f3-c436310dcd8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #43 67ad0f57-4ed3-4e6c-9195-2eb634e856c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #43 a2dfcb24-10ca-43be-9767-6e4b6fdeafab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #43 40618fab-1311-4168-9275-bff908a337a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #43 4db041fb-c619-4fe5-88a8-323c6a886aae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #43 49a539ba-b7fd-4ca0-b41b-cdb82f975f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #43 ebdc1bc6-c37f-4840-90ae-f508e3cfcd45)");

unit.assert_eq8(8'hBA, datamem_ext_i.datamem[13'h7D5],
"EXT DMEM (Testcase #43 543a231f-3202-47a6-9e33-0372ba5b95a0)");
unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'h7D6],
"EXT DMEM (Testcase #43 3131519e-c706-4d21-a363-2f06c61cce37)");
datamem_ext_i.datamem[13'h7D5] =
datamem_swap[16'h7D5];
datamem_ext_i.datamem[13'h7D6] =
datamem_swap[16'h7D6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #44
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #44)");
    end
end

unit.assert_eq16(16'h6C74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #44 187354ae-26d1-44cb-82f8-9d3da41c788d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #44 e310ce24-d29f-42b4-8330-908d3dce668d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #44 cc9b812a-7ce9-4d38-bc63-cda869505943)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #44 c2761ae6-6663-4132-9848-3e7386d727e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #44 ad172433-c0b7-4e35-83ee-b5aa5125735b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #44 e3d7ed2e-beee-4301-b66e-902af8b7cfcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #44 58784f3d-a1b8-42a4-9eff-4c490dfd5312)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h6F8],
"EXT DMEM (Testcase #44 a1338c87-7310-48c7-aef6-56c2d1db1141)");
unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h6F9],
"EXT DMEM (Testcase #44 fd9eefd3-abc0-434a-886b-b64e5a351896)");
datamem_ext_i.datamem[13'h6F8] =
datamem_swap[16'h6F8];
datamem_ext_i.datamem[13'h6F9] =
datamem_swap[16'h6F9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #45
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #45)");
    end
end

unit.assert_eq16(16'h0CE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #45 7727f03a-4e69-405d-bb38-e47b922d3209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #45 cdfea15b-e65f-4e52-8474-53c3f3336fca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #45 79644950-ee94-4a4b-8c49-6a499db67ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #45 535b9107-4699-4654-97a4-2c157d355ff2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #45 6ef3f71d-f458-4fc6-84c5-9794c91480bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #45 47d8f932-1a18-4598-8c8a-09cb83112be4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #45 aca5cadd-ddc5-4bf4-9c2c-0c9effc2da5a)");

unit.assert_eq8(8'hE6, datamem_ext_i.datamem[13'hFAE],
"EXT DMEM (Testcase #45 147203ad-f98a-40ec-9c0a-407ca83dd815)");
unit.assert_eq8(8'h0C, datamem_ext_i.datamem[13'hFAF],
"EXT DMEM (Testcase #45 108d83e9-15d4-46ee-aa46-e8099a83166d)");
datamem_ext_i.datamem[13'hFAE] =
datamem_swap[16'hFAE];
datamem_ext_i.datamem[13'hFAF] =
datamem_swap[16'hFAF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #46
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #46)");
    end
end

unit.assert_eq16(16'h40E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #46 bc0262e8-d6da-4a20-a8f1-5c352c2081c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #46 d2a9f145-e24f-4313-88dc-01e2e8c764ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #46 6b0d1f5f-7bac-41c3-bef2-40794a0c1f92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #46 d2a9631e-9ef4-46f2-aa43-cd44696edfdb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #46 b9adc83f-204f-44d3-a07b-cf438b6408ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #46 9d499495-764f-4ef9-9780-70d5195c7367)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #46 7f09dc5e-20c5-4f5e-9178-63d9a93b2140)");

unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'hFA7],
"EXT DMEM (Testcase #46 1bdd8bd5-250a-4115-96cc-530deb78b197)");
unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'hFA8],
"EXT DMEM (Testcase #46 4b5887c0-bf0f-4b36-b006-3d130fa22e9c)");
datamem_ext_i.datamem[13'hFA7] =
datamem_swap[16'hFA7];
datamem_ext_i.datamem[13'hFA8] =
datamem_swap[16'hFA8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #47
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #47)");
    end
end

unit.assert_eq16(16'hC1E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #47 4c9d3e96-d833-4d67-bd72-f3746911a939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #47 104d8476-73af-4f1b-a70d-74c0ba88547e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #47 e7cc3a5e-2549-40f9-8853-dca1be98d57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #47 4835e7a8-cffb-4793-813e-9a9e6a492f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #47 a290194f-3371-4fdf-aabf-847e3e7f46f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #47 e2f76cec-6121-4587-b52d-525e569d9eb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #47 5416ac6c-0ed7-4775-bdbb-1c2107734dd5)");

unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'h560],
"EXT DMEM (Testcase #47 55fd8e36-f983-4da1-b773-9cc24ffbb0f5)");
unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'h561],
"EXT DMEM (Testcase #47 1e66f183-5d74-412a-be40-bc272e57f263)");
datamem_ext_i.datamem[13'h560] =
datamem_swap[16'h560];
datamem_ext_i.datamem[13'h561] =
datamem_swap[16'h561];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #48
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA424;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #48)");
    end
end

unit.assert_eq16(16'hA424, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #48 2eef6c41-0dc3-4037-8cfe-50c3a545ba78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #48 a4a58a0b-eb14-42a0-b463-78eca1833511)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #48 2c146be3-0ec7-4030-aafa-7727ca816649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #48 e7c45bdc-b235-498c-a210-50393fd0ea50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #48 d54a4c4c-f870-43f1-b388-a5c768420599)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #48 15965673-7081-4217-9fe3-49ff25a72f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #48 d317a015-9699-4316-b4c3-a9b1cde41dab)");

unit.assert_eq8(8'h24, datamem_ext_i.datamem[13'h2A5],
"EXT DMEM (Testcase #48 ed94fb58-3255-4940-94b5-2abfac6a00dd)");
unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'h2A6],
"EXT DMEM (Testcase #48 3fe5382d-95c5-40a6-82b0-23b563cbec23)");
datamem_ext_i.datamem[13'h2A5] =
datamem_swap[16'h2A5];
datamem_ext_i.datamem[13'h2A6] =
datamem_swap[16'h2A6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #49
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB77;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #49)");
    end
end

unit.assert_eq16(16'hBB77, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #49 8ae4343b-4fc0-4cf8-954a-fc4dad7659db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #49 36e91fa5-0bd9-4486-9b0a-6fd272332766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #49 d222da08-75ea-48aa-9917-a4c9f640a5fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #49 2f5f1c8d-d555-4cbe-81b6-d245a90e91af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #49 d9bf0b05-254c-4dcf-9049-c1dba1192cb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #49 329af374-b6f8-43d8-af18-c4b0d9346054)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #49 07f34c9c-02ad-4514-b64a-6ff04574a790)");

unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'hB11],
"EXT DMEM (Testcase #49 540c703c-0dae-4708-bf74-0fd1dcc5cfde)");
unit.assert_eq8(8'hBB, datamem_ext_i.datamem[13'hB12],
"EXT DMEM (Testcase #49 6b51197b-7c82-4e46-9303-de0c9ddd71f5)");
datamem_ext_i.datamem[13'hB11] =
datamem_swap[16'hB11];
datamem_ext_i.datamem[13'hB12] =
datamem_swap[16'hB12];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #50
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6FA7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #50)");
    end
end

unit.assert_eq16(16'h6FA7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #50 2eba00b6-5bde-48ad-8ebc-d17213b001f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #50 7c4e3511-adc5-401a-bd4a-d23c8b849f99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #50 a5803083-ecff-481c-ae88-e784ea4bcdc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #50 36716972-3fb8-4ca0-8de2-06e6555b59c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #50 1c58bdfb-fcd7-4301-a950-566f5facb629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #50 c3e7f226-a2bd-4fd3-9f99-94a4295291a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #50 fada5075-487b-42b1-80a4-8c825295a6cb)");

unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'hC79],
"EXT DMEM (Testcase #50 515d3e00-d865-4970-99cb-712d1f25a0e0)");
unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'hC7A],
"EXT DMEM (Testcase #50 84a0a88e-f4f6-4b36-bea4-b41feb8a0a54)");
datamem_ext_i.datamem[13'hC79] =
datamem_swap[16'hC79];
datamem_ext_i.datamem[13'hC7A] =
datamem_swap[16'hC7A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #51
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h822D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #51)");
    end
end

unit.assert_eq16(16'h822D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #51 b6d0ccb9-cd94-40f3-83b5-83b910243613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #51 06f619e5-c940-4eae-95e8-d4d663adfd79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #51 f07a2d10-8bb5-44cc-8d7f-7d8987abc166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #51 b9100dfc-3f6f-410a-bb3e-7c21ab5787fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #51 3e8b132a-c688-46eb-b39a-649f47e0f3e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #51 56910e44-eda3-4b9c-aaf7-c21c7405ffbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #51 bd13f9f2-3b28-4e31-ac9c-0c443683bb3c)");

unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'hBC4],
"EXT DMEM (Testcase #51 34cef1c7-7b33-41c7-b0f3-f967e0fea232)");
unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'hBC5],
"EXT DMEM (Testcase #51 b4f96e0e-1356-4474-9493-9152ef3dacf7)");
datamem_ext_i.datamem[13'hBC4] =
datamem_swap[16'hBC4];
datamem_ext_i.datamem[13'hBC5] =
datamem_swap[16'hBC5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #52
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #52)");
    end
end

unit.assert_eq16(16'hCC0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #52 9e6e3896-dc0c-4b50-85c7-850f4f24cf6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #52 7899cfaf-edd9-499c-a7ef-1bdae6d83a60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #52 122fbd9d-9a61-4bfa-8926-fb6430992381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #52 01e8d156-3ed3-4e28-a75b-2fa4c2594cd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #52 7a59fe38-bd43-4870-83ce-778bb092330f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #52 6940cdf3-f163-4c53-940f-2767c3293187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #52 45103a57-34af-407f-8b5f-f44312921c40)");

unit.assert_eq8(8'h0F, datamem_ext_i.datamem[13'h500],
"EXT DMEM (Testcase #52 7072bcb6-d4e1-4391-958a-897728c6ce0d)");
unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'h501],
"EXT DMEM (Testcase #52 1ca88419-b683-49d7-abb3-de6340aaaa23)");
datamem_ext_i.datamem[13'h500] =
datamem_swap[16'h500];
datamem_ext_i.datamem[13'h501] =
datamem_swap[16'h501];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #53
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #53)");
    end
end

unit.assert_eq16(16'hF2BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #53 e67e054b-d1d8-425e-b7b0-6a9d90e3b11d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #53 f66ba307-49bb-4ab8-86d6-8491142b029d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #53 96f9a551-b2f2-4f67-ae2a-41fddca2b395)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #53 c24ac25f-a4f0-4f0a-8884-c83e992f0028)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #53 d6bd8144-8830-466a-9143-735d1153ba65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #53 aa0e55d5-7267-4738-9094-393b39af3aad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #53 cafc6e0f-85ed-4083-8913-621206389185)");

unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'h4B1],
"EXT DMEM (Testcase #53 0f815164-d77e-4f1b-ba7e-2cc2c9672eb0)");
unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'h4B2],
"EXT DMEM (Testcase #53 8bb3e502-ee4b-414f-9aa9-3431e3e2ba0f)");
datamem_ext_i.datamem[13'h4B1] =
datamem_swap[16'h4B1];
datamem_ext_i.datamem[13'h4B2] =
datamem_swap[16'h4B2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #54
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #54)");
    end
end

unit.assert_eq16(16'h0E50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #54 bba87c14-291b-4b9c-9731-1abd6a2021bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #54 8cb6455c-aa14-4747-8d95-7a3735e39ab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #54 13c69c60-4598-4540-b867-ab2326b00426)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #54 63c2e7df-42ad-42c4-b7a4-ab51d4b76e64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #54 125ff1cb-c568-4cd1-92df-a8a6344b0573)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #54 9ce79db3-bbf8-429d-bcad-885308dfb645)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #54 0ccac25f-5ce7-4e65-9648-d60fd3f22b66)");

unit.assert_eq8(8'h50, datamem_ext_i.datamem[13'hB5F],
"EXT DMEM (Testcase #54 6dbdda8e-e5fd-4a30-9864-6507a889941e)");
unit.assert_eq8(8'h0E, datamem_ext_i.datamem[13'hB60],
"EXT DMEM (Testcase #54 47a1098f-27c8-4a28-aa30-fb02b1f5bdb4)");
datamem_ext_i.datamem[13'hB5F] =
datamem_swap[16'hB5F];
datamem_ext_i.datamem[13'hB60] =
datamem_swap[16'hB60];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #55
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h009C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #55)");
    end
end

unit.assert_eq16(16'h009C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #55 32059dba-08bc-4ec1-9fde-083d2b967414)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #55 a59d4c81-b1c5-42dd-83c0-48d082610a32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #55 98fc8eb2-bf8b-4202-b167-d9a730539069)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #55 3b64bb0a-19c0-4678-b41f-b448b9ca0da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #55 2027994a-65aa-448c-9a05-fc97326da587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #55 2616b2ab-f0a2-4891-bd82-d25fd18b7acb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #55 129a56a1-e5e3-4c03-992a-fe3dbfad230d)");

unit.assert_eq8(8'h9C, datamem_ext_i.datamem[13'hBA5],
"EXT DMEM (Testcase #55 110f2bca-fa64-46d1-94f0-48ffcfcfbd57)");
unit.assert_eq8(8'h00, datamem_ext_i.datamem[13'hBA6],
"EXT DMEM (Testcase #55 577948bd-c94c-4c41-bfc2-9285ffec3370)");
datamem_ext_i.datamem[13'hBA5] =
datamem_swap[16'hBA5];
datamem_ext_i.datamem[13'hBA6] =
datamem_swap[16'hBA6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #56
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD147;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #56)");
    end
end

unit.assert_eq16(16'hD147, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #56 7c75ee93-6bad-44d0-a661-8d56115c2871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #56 cf36a01e-8c02-4ed1-8ad7-6e7ebc176cb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #56 82736589-a7b6-4f89-b48d-c8aadbdd4d8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #56 eb45e3dd-44cf-4275-941f-22f84aca78c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #56 e431afcb-bb32-4652-bb9a-e1aa9d8519d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #56 49c673d4-4aa0-4cb9-bc81-b9f78585c1fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #56 4d415288-0980-4f5f-ab10-a68a29733937)");

unit.assert_eq8(8'h47, datamem_ext_i.datamem[13'h9A1],
"EXT DMEM (Testcase #56 f4a688b5-7d6c-4db8-9199-a0f6a6d5292d)");
unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'h9A2],
"EXT DMEM (Testcase #56 be172376-49b2-4650-805a-66e48221fc49)");
datamem_ext_i.datamem[13'h9A1] =
datamem_swap[16'h9A1];
datamem_ext_i.datamem[13'h9A2] =
datamem_swap[16'h9A2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #57
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD81E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #57)");
    end
end

unit.assert_eq16(16'hD81E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #57 c9ee3619-7392-41c2-a44a-6679b168480d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #57 36e02810-94c3-4310-bf7b-565acf29980c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #57 01fc2a4b-1522-4924-b02b-4a85ff167688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #57 d78bfde2-320c-4407-9d03-b45a5e449ac7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #57 b82dabcf-f409-4f42-a4db-f5da0c41e7f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #57 35ed03bf-f881-4aa7-a858-3e519de73b37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #57 b198f00d-d8f6-45f2-9c19-5ebf46da755f)");

unit.assert_eq8(8'h1E, datamem_ext_i.datamem[13'h43B],
"EXT DMEM (Testcase #57 e91c24e2-c8d1-4790-9246-ddafc24ff883)");
unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'h43C],
"EXT DMEM (Testcase #57 4ad80338-6529-40a6-b85a-d985fa64574d)");
datamem_ext_i.datamem[13'h43B] =
datamem_swap[16'h43B];
datamem_ext_i.datamem[13'h43C] =
datamem_swap[16'h43C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #58
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE179;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #58)");
    end
end

unit.assert_eq16(16'hE179, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #58 5f6d266c-b280-4c0f-89d2-17d88b6e2e03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #58 2188c345-c362-4dbf-81cb-98e0baa856ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #58 a79bed84-6770-4c9c-8b21-83e51b94d643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #58 fa0f67bf-8188-40be-a113-0b9e8cc6a135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #58 7221d63e-482f-49be-9570-f1ffdc7fa3af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #58 f56c15ea-6920-4666-a9a4-fad97bf84243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #58 78536622-93c4-449d-ae9c-67bb4cbcd948)");

unit.assert_eq8(8'h79, datamem_ext_i.datamem[13'h8F2],
"EXT DMEM (Testcase #58 44c6f571-37f8-4beb-b1b7-3dd08ec5d292)");
unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'h8F3],
"EXT DMEM (Testcase #58 8b7a072a-befe-4aa0-b513-07380c474116)");
datamem_ext_i.datamem[13'h8F2] =
datamem_swap[16'h8F2];
datamem_ext_i.datamem[13'h8F3] =
datamem_swap[16'h8F3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #59
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7787;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #59)");
    end
end

unit.assert_eq16(16'h7787, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #59 5ce949e1-4a43-4e98-9533-00983fb71af5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #59 eb29a77d-2e6d-4de9-8c1d-bda55feb82e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #59 0c65da76-fead-4377-a5c9-98b90fd2cfce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #59 9b6bec6d-c23c-4651-81f6-c4839c5dc492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #59 2a6392b3-4a73-4b0e-94a6-9df96ea9e61c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #59 e1ba0db1-9be2-4b4b-b569-86ffd94ae2bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #59 d7df74ac-9945-4dbf-a941-cdc720a256e9)");

unit.assert_eq8(8'h87, datamem_ext_i.datamem[13'h557],
"EXT DMEM (Testcase #59 97b84a7d-fef7-4991-9691-a2b950084c8d)");
unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'h558],
"EXT DMEM (Testcase #59 10aefa64-af59-4cbf-8a2e-8af18a85cc50)");
datamem_ext_i.datamem[13'h557] =
datamem_swap[16'h557];
datamem_ext_i.datamem[13'h558] =
datamem_swap[16'h558];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #60
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1783;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #60)");
    end
end

unit.assert_eq16(16'h1783, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #60 6d5a24cc-05fc-4da1-acf5-a3b06ea86881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #60 71d77116-47b9-4f57-ba19-3edd1bf07999)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #60 dc2d83f1-23cc-4a3b-a673-6f360579e2e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #60 961c558a-ce4f-486c-a273-4db8c61a802b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #60 c51bef19-d80f-4fd4-a50f-e3a9fc8b3537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #60 d3f26551-191d-419b-9871-544d9b11e183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #60 d0b747e3-6736-4bfe-81e5-6aa485657d22)");

unit.assert_eq8(8'h83, datamem_ext_i.datamem[13'hA73],
"EXT DMEM (Testcase #60 328cafd2-e490-4621-a144-f5d627e240a7)");
unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'hA74],
"EXT DMEM (Testcase #60 ceef2413-cd21-4674-b308-96d04b8ca852)");
datamem_ext_i.datamem[13'hA73] =
datamem_swap[16'hA73];
datamem_ext_i.datamem[13'hA74] =
datamem_swap[16'hA74];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #61
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6501;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #61)");
    end
end

unit.assert_eq16(16'h6501, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #61 fd3feefc-215e-42ea-957b-48d9aaf4a7bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #61 84d28db5-c14c-485a-a6ee-d02aa1c9e041)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #61 1752c7d7-1cab-4fc0-9029-d45ae2b927f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #61 80224cb4-e167-4bba-91a4-82ef1a8baa03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #61 ae4791da-ff29-4ea6-96f6-e1932cfa8d65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #61 a4476f92-fd9c-4c82-a1c3-8036a6f5f227)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #61 ffc23e6f-9aab-46f7-95c6-edd383230950)");

unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'h484],
"EXT DMEM (Testcase #61 5db83a99-4465-4d72-9914-ad98aa4acd84)");
unit.assert_eq8(8'h65, datamem_ext_i.datamem[13'h485],
"EXT DMEM (Testcase #61 24d7d8e3-9914-4cbc-83c5-d80fa8fd54f2)");
datamem_ext_i.datamem[13'h484] =
datamem_swap[16'h484];
datamem_ext_i.datamem[13'h485] =
datamem_swap[16'h485];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #62
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h604D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #62)");
    end
end

unit.assert_eq16(16'h604D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #62 68d84401-f83a-46a2-acb2-20833c7f7e79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #62 970db06b-a64a-4b4a-8922-899556f179f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #62 15c353fb-5547-4341-8f04-dda678565c1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #62 5f3b0e7e-dd4c-48e0-af1a-c4d948ec5abb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #62 2599a514-95b7-41f5-84bd-a7e0ccf020d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #62 84148e9d-d723-4ed9-ba9e-900735f5f03e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #62 f99b8ff5-0575-4f2a-8811-6031c94fab1c)");

unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'h8DE],
"EXT DMEM (Testcase #62 0465accf-0c47-488f-aaa9-a1fab843773f)");
unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'h8DF],
"EXT DMEM (Testcase #62 584e7fb6-5074-4e31-8d5d-25982f01cc6a)");
datamem_ext_i.datamem[13'h8DE] =
datamem_swap[16'h8DE];
datamem_ext_i.datamem[13'h8DF] =
datamem_swap[16'h8DF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #63
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3257;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #63)");
    end
end

unit.assert_eq16(16'h3257, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #63 7cfe837c-c464-44d2-b4ab-24b6138ff1b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #63 3adcae66-e8f0-48d7-80e4-91b9ffe882c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #63 567ae24b-93ff-4420-8540-8d131f9cc343)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #63 e23b7746-62e7-47ff-8d5f-5898c86c4665)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #63 5d1b9f66-924f-40bd-9109-94eea3b43326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #63 47d48a36-2bfe-412d-a3d3-ac7b54dd9483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #63 1c3cb079-2a92-446d-984c-dcabdddf2b34)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'h205],
"EXT DMEM (Testcase #63 87c92f6a-8d45-4152-90c6-c9e30bc5dce2)");
unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'h206],
"EXT DMEM (Testcase #63 58422aed-33f0-44f3-a4ec-3dcf0c68f028)");
datamem_ext_i.datamem[13'h205] =
datamem_swap[16'h205];
datamem_ext_i.datamem[13'h206] =
datamem_swap[16'h206];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #64
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h138D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #64)");
    end
end

unit.assert_eq16(16'h138D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #64 c2fcdab5-459e-436b-acb4-bdc46da498f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #64 b86a85d7-78b7-4d40-921f-bd34c15ceaee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #64 cab5ad88-f411-4895-88e8-49a8937b08ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #64 b017fbf7-68e8-4081-8546-7bc8f1d5a022)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #64 d7b9cb30-8d33-4bd6-8d4c-1a15b14e6934)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #64 65bf769c-1102-41db-a7d3-2f7359192a9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #64 af37e372-7a6a-484f-9549-d4855ffb8c40)");

unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'hE43],
"EXT DMEM (Testcase #64 c75fa454-87da-4389-8093-d29a1bbfc4aa)");
unit.assert_eq8(8'h13, datamem_ext_i.datamem[13'hE44],
"EXT DMEM (Testcase #64 6eb70e2e-4b8d-4ce2-b9c1-7d457b60e544)");
datamem_ext_i.datamem[13'hE43] =
datamem_swap[16'hE43];
datamem_ext_i.datamem[13'hE44] =
datamem_swap[16'hE44];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #65
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hADBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #65)");
    end
end

unit.assert_eq16(16'hADBB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #65 b8783983-2bc1-429c-9bed-c0280bf63561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #65 dc7c21c3-1e23-4412-b2e7-2c96bf28cc36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #65 1d035066-d53a-4b52-956b-0501961af417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #65 4163cbec-6bb4-48dd-bae5-7899f91c70aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #65 88df4b3f-6814-4fb2-a8e9-4e512daddb91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #65 147308b0-d4bc-4cf1-96f8-fa619aed0205)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #65 d191b0fa-ec50-4475-952d-4aa6796918ea)");

unit.assert_eq8(8'hBB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h29],
"INT DMEM (Testcase #65 5da92c68-8264-464a-bae3-975eb07f14e3)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h2A],
"INT DMEM (Testcase #65 af44995c-4114-4f10-8449-b879b1b43df5)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h29] =
datamem_swap[16'h129];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h2A] =
datamem_swap[16'h12A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #66
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h772F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #66)");
    end
end

unit.assert_eq16(16'h772F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #66 ca850751-32af-4fe1-9b2a-57f2fbb808cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #66 bcb8526c-4c0d-4f06-b09a-d89c18eded00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #66 1b89172f-8756-41c9-b2d2-751325c602c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #66 3f4a978e-1dac-4c74-9b73-340e981487f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #66 d64a1ba2-5790-48f5-8b14-ac8b0a7c0b93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #66 9dce18ca-68b6-4675-a2ed-4ff5afabb4c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #66 abb7eb05-dc92-4aa9-95dd-241dcaf2eef7)");

unit.assert_eq8(8'h2F, datamem_ext_i.datamem[13'h2F1],
"EXT DMEM (Testcase #66 b3063b8d-d069-4baa-8948-66d00c203eec)");
unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'h2F2],
"EXT DMEM (Testcase #66 597f13cc-c3c1-4df0-90fe-d0d620323701)");
datamem_ext_i.datamem[13'h2F1] =
datamem_swap[16'h2F1];
datamem_ext_i.datamem[13'h2F2] =
datamem_swap[16'h2F2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #67
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #67)");
    end
end

unit.assert_eq16(16'hAB57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #67 6d74fea4-b2ba-45a3-82ba-25ddc7a9f7f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #67 ca63f633-47cb-4a0e-a2f6-74267c821195)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #67 098dd38c-d0ab-49f3-9dd3-386533f76dcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #67 eaffc22b-9b30-432f-b8cb-6c8509f76671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #67 19cdba2c-44bb-4515-84cd-f243ee012c97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #67 68884c78-1f2b-4fdf-8401-32d4798b9756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #67 f4810043-ddf9-480d-b104-ef3167971111)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'h7E1],
"EXT DMEM (Testcase #67 21ef94ba-f2e1-4bcc-bf26-f72c50370dd2)");
unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h7E2],
"EXT DMEM (Testcase #67 fb8450bf-bc12-46a8-8985-41e8a600efe3)");
datamem_ext_i.datamem[13'h7E1] =
datamem_swap[16'h7E1];
datamem_ext_i.datamem[13'h7E2] =
datamem_swap[16'h7E2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #68
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBAC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #68)");
    end
end

unit.assert_eq16(16'hBAC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #68 340592f0-dda5-486d-98ef-3525ef36fa43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #68 9b5b2afe-a2ec-4072-9aab-25ce3b49a5de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #68 bdcc8cf4-05c9-4c88-8d07-d5e0ce21d8a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #68 91493ef6-d937-4e2e-8803-025475dbf24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #68 be63a21b-371a-4644-be93-73ea0c8f32d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #68 84e33b53-c817-4bd1-b790-81f815a8c45c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #68 9056ebb7-4778-4ae5-a02d-fa1246549c62)");

unit.assert_eq8(8'hC5, datamem_ext_i.datamem[13'hD05],
"EXT DMEM (Testcase #68 93725728-2250-4fe6-b17a-12f403363b11)");
unit.assert_eq8(8'hBA, datamem_ext_i.datamem[13'hD06],
"EXT DMEM (Testcase #68 6fbde7d1-2c1e-428e-92b2-d47e62a25bd9)");
datamem_ext_i.datamem[13'hD05] =
datamem_swap[16'hD05];
datamem_ext_i.datamem[13'hD06] =
datamem_swap[16'hD06];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #69
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #69)");
    end
end

unit.assert_eq16(16'h1B59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #69 d0673bca-418a-4323-8992-228b99751495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #69 7913de30-cb1a-43c4-a867-56a5cc9e287d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #69 686e95c4-579c-4708-a40c-e25b49ba18eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #69 0c6e357f-a5ae-4093-a951-1e4d51ff8711)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #69 29559024-8dcb-4b58-9eba-ba349b40f6aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #69 33a51478-b66e-4503-95b3-4720787a0c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #69 e18c435a-588f-49b4-8c07-e3f68d8509a2)");

unit.assert_eq8(8'h59, datamem_ext_i.datamem[13'h786],
"EXT DMEM (Testcase #69 90d21c58-fc5d-4382-97bb-3bd721122a7d)");
unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'h787],
"EXT DMEM (Testcase #69 29251b72-f792-4d19-85a4-cb1489653c6e)");
datamem_ext_i.datamem[13'h786] =
datamem_swap[16'h786];
datamem_ext_i.datamem[13'h787] =
datamem_swap[16'h787];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #70
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F48;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #70)");
    end
end

unit.assert_eq16(16'h3F48, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #70 c949c85b-0f05-41c2-b189-02dea67b3587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #70 57ff8095-64ba-48ff-8bbe-a14a3424ab72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #70 b005447e-df6e-4361-aa81-b6a6b99e8470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #70 1fb2dfd1-5454-4bd9-99d7-be7eb9107005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #70 6e2e4c99-6650-4849-aab7-778e78dac374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #70 0f7e5109-36e0-464c-811d-dd81f46f973a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #70 9470dfbb-935d-42f3-a92c-50b8007977ee)");

unit.assert_eq8(8'h48, datamem_ext_i.datamem[13'hB32],
"EXT DMEM (Testcase #70 b2f19695-1827-42c6-bd20-d78c14f6572a)");
unit.assert_eq8(8'h3F, datamem_ext_i.datamem[13'hB33],
"EXT DMEM (Testcase #70 6ce6cf85-82fd-4e15-bdb8-95c049e43744)");
datamem_ext_i.datamem[13'hB32] =
datamem_swap[16'hB32];
datamem_ext_i.datamem[13'hB33] =
datamem_swap[16'hB33];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #71
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #71)");
    end
end

unit.assert_eq16(16'h3F76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #71 d764efff-0480-4c48-8375-ec820689d21b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #71 46e10e19-4797-44e8-80a8-05eaa1417c6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #71 20133f59-9be5-45d8-b418-5ed04841fb2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #71 4dd6b8b5-43ce-45bc-aac2-31b22f6fb23b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #71 418c222a-a0be-4ee2-86e7-44f08bb84a15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #71 5f669de2-a4ab-4735-a71c-e6f472c621d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #71 05f2d5fa-86d7-402d-b48d-3ba3e556bb58)");

unit.assert_eq8(8'h76, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA6],
"INT DMEM (Testcase #71 b2e9e912-06b2-4795-822c-f9d8f949cbe4)");
unit.assert_eq8(8'h3F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA7],
"INT DMEM (Testcase #71 88c20a5c-46de-4d2d-8b26-33996ac311f6)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA6] =
datamem_swap[16'h1A6];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA7] =
datamem_swap[16'h1A7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #72
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h97A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #72)");
    end
end

unit.assert_eq16(16'h97A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #72 6f32d3b3-9a71-477f-84c1-28bc594baf22)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #72 563fc8f7-327e-4b0a-9316-cbdb49faee23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #72 c74c5506-f83b-42c1-81ef-a2dee3754f53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #72 56b5adfa-f977-4cd6-a451-12c43ce16a2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #72 ec210c58-cf1b-4d92-a256-9e9b403c21c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #72 c9f469d8-b318-4d48-9b7a-4e8355d3dc7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #72 acb762b3-f307-4895-af23-9d095d7aee09)");

unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'hE54],
"EXT DMEM (Testcase #72 7d503fe3-4c63-4c88-8a25-b069971dfa05)");
unit.assert_eq8(8'h97, datamem_ext_i.datamem[13'hE55],
"EXT DMEM (Testcase #72 0a14c95e-7e5b-4bd3-835b-dc86f4edb6c5)");
datamem_ext_i.datamem[13'hE54] =
datamem_swap[16'hE54];
datamem_ext_i.datamem[13'hE55] =
datamem_swap[16'hE55];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #73
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8980;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #73)");
    end
end

unit.assert_eq16(16'h8980, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #73 96850d91-c560-4f3c-929f-3a3ee4ea2216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #73 892d0bcb-179c-4976-9569-e3490e6ae75b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #73 d8914b0d-6010-4ca4-b720-bf3fe363195f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #73 6aba7fe3-a3f5-4e0c-ac11-aada7ab8d899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #73 b17477f6-1d0f-4e5b-aa97-aeb8c9ad552c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #73 f3ddb3a0-9e83-464e-872b-c89801ebb89f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #73 2c223126-212c-4ed4-b15e-24c2c0bd8607)");

unit.assert_eq8(8'h80, datamem_ext_i.datamem[13'h92D],
"EXT DMEM (Testcase #73 ea3b4694-9d33-43c5-afdf-1753d97c2a39)");
unit.assert_eq8(8'h89, datamem_ext_i.datamem[13'h92E],
"EXT DMEM (Testcase #73 87fc2bfe-f108-4064-8684-ae7db6748371)");
datamem_ext_i.datamem[13'h92D] =
datamem_swap[16'h92D];
datamem_ext_i.datamem[13'h92E] =
datamem_swap[16'h92E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #74
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4214;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #74)");
    end
end

unit.assert_eq16(16'h4214, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #74 820d587b-c430-4611-89a0-878a3d9dfccd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #74 08be3aeb-81c8-40ff-b98c-a4620e194c1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #74 076ce8e9-05d1-4e37-b42a-2001ac26bb5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #74 0f784ca4-3f89-431d-ba29-7dc8a041f5db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #74 318a2045-f9a7-47fd-99a5-6e520cfc88ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #74 b71ddfd2-2a4c-43f6-b923-3a3c273aee03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #74 26526197-d71c-4d94-af72-782342519114)");

unit.assert_eq8(8'h14, datamem_ext_i.datamem[13'hF72],
"EXT DMEM (Testcase #74 f389297f-56a0-4fd4-9aa4-a1731251c452)");
unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'hF73],
"EXT DMEM (Testcase #74 897248c5-7ea3-4730-a2b4-8c012bedc3d2)");
datamem_ext_i.datamem[13'hF72] =
datamem_swap[16'hF72];
datamem_ext_i.datamem[13'hF73] =
datamem_swap[16'hF73];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #75
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7514;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #75)");
    end
end

unit.assert_eq16(16'h7514, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #75 1b86cfaa-a08d-4021-927d-60b206e21371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #75 78f5bf51-77d0-4419-bad4-6f5aa7658a79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #75 1be249aa-3b0e-4c78-8a66-bc76132c8170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #75 8d649bce-61a4-427b-94ec-c745b934cf5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #75 98205527-4f7b-492d-9bd2-34d07696946a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #75 8b587608-3c19-4969-aae2-457c7857e349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #75 a2d1544d-a234-4727-8409-63ba58011eb3)");

unit.assert_eq8(8'h14, datamem_ext_i.datamem[13'h393],
"EXT DMEM (Testcase #75 ee5447a4-b2c2-41a6-9190-eef595d09117)");
unit.assert_eq8(8'h75, datamem_ext_i.datamem[13'h394],
"EXT DMEM (Testcase #75 8a383cae-0eb0-40f0-a1de-c072582a7193)");
datamem_ext_i.datamem[13'h393] =
datamem_swap[16'h393];
datamem_ext_i.datamem[13'h394] =
datamem_swap[16'h394];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #76
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #76)");
    end
end

unit.assert_eq16(16'hFA12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #76 938bf0df-befa-402d-b1a3-fe8dbde5dfe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #76 ce052ece-311d-4a1d-b0c3-37cf6d35c0c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #76 0b49dbe9-0b6a-4f61-a9ba-304e49f4b229)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #76 12d5f213-c41c-4f8f-91f5-9e2c707e3bf2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #76 789c603d-8868-4432-be5c-0054725d777c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #76 9d070a3a-58fd-47d1-ab39-0f6c4db4a911)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #76 606f165a-22a6-4d8c-9108-5dd9d00de2bc)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h4C5],
"EXT DMEM (Testcase #76 836f7082-1a4c-4e17-94de-8c0b5e9bd6e5)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'h4C6],
"EXT DMEM (Testcase #76 14fea1bd-abd9-458a-98cf-5878c8f5187c)");
datamem_ext_i.datamem[13'h4C5] =
datamem_swap[16'h4C5];
datamem_ext_i.datamem[13'h4C6] =
datamem_swap[16'h4C6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #77
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h058E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #77)");
    end
end

unit.assert_eq16(16'h058E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #77 b8489cf7-b21d-482f-bf81-3dcf9d1ef4f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #77 54292030-a70a-4581-949f-c7e311bc6e77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #77 7750f0c2-b898-45ae-8629-cd4c152b8854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #77 ed013dd0-6a4c-4bdc-b0f3-51bed46791f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #77 0f88015d-da5b-4939-b1d4-1649f40fd55d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #77 9e459908-24e5-43c5-a4d9-321f08448657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #77 a969a56e-8c82-4524-9b84-62e7884b645c)");

unit.assert_eq8(8'h8E, datamem_ext_i.datamem[13'hA18],
"EXT DMEM (Testcase #77 f7296f0c-8010-41eb-a2a3-f575af1f4248)");
unit.assert_eq8(8'h05, datamem_ext_i.datamem[13'hA19],
"EXT DMEM (Testcase #77 572c3ee5-d1dc-4977-ae2c-7a1f61bcd2d7)");
datamem_ext_i.datamem[13'hA18] =
datamem_swap[16'hA18];
datamem_ext_i.datamem[13'hA19] =
datamem_swap[16'hA19];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #78
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA28A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #78)");
    end
end

unit.assert_eq16(16'hA28A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #78 bf3326d4-8f3b-4b99-9271-21e2f966c4c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #78 b95cdebb-e3ce-48f9-b72c-ae73328349ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #78 e79a37f3-b2c4-47ec-bbb3-ce68d6e0f6a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #78 29c454b9-b3dd-4e04-914f-263b24b51d6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #78 82f7c37d-b78d-457d-8e59-5f8c8090dce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #78 c279a682-5496-4f81-b890-b8b7eb04c408)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #78 440cb5ce-9bce-4a6b-97c7-24cf19fe5cac)");

unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'hCD8],
"EXT DMEM (Testcase #78 2363496f-1f79-4e49-8936-7f105d019161)");
unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'hCD9],
"EXT DMEM (Testcase #78 99165d6e-022e-4825-b64d-fa2efe4f01f9)");
datamem_ext_i.datamem[13'hCD8] =
datamem_swap[16'hCD8];
datamem_ext_i.datamem[13'hCD9] =
datamem_swap[16'hCD9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #79
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBA10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #79)");
    end
end

unit.assert_eq16(16'hBA10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #79 d02566a8-9ad2-457e-9580-0d1632db25de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #79 64133459-bce9-4167-b253-c22a01976e8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #79 e30e023d-140b-4110-aee7-ca3eec25c654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #79 36cdd475-8010-4168-8ef6-f83c944bf24b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #79 5ea7b8ca-8c1a-47be-afcd-ee3f2572e53a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #79 bc73bd5e-0b50-4d3d-973a-c454355e682a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #79 45b091d0-6273-44fe-bb8f-b7016dcf725a)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'hECE],
"EXT DMEM (Testcase #79 ddaf7cad-93cd-4861-93b5-6f0db563e3b7)");
unit.assert_eq8(8'hBA, datamem_ext_i.datamem[13'hECF],
"EXT DMEM (Testcase #79 03cb3165-9a4e-4aa5-898e-1508bd8e89f2)");
datamem_ext_i.datamem[13'hECE] =
datamem_swap[16'hECE];
datamem_ext_i.datamem[13'hECF] =
datamem_swap[16'hECF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #80
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA43B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #80)");
    end
end

unit.assert_eq16(16'hA43B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #80 95c02c21-d683-4c04-a451-f8d47c47f0ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #80 7f77b4d1-115b-4acd-ba02-9a38979a8f50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #80 a7c1cba9-1484-400f-b859-fb3c8fc54f64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #80 ecab33d6-51b2-467f-8dab-578894f38468)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #80 c534ba19-e79e-45da-aa23-488d250784c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #80 2a449444-eb19-44e0-834c-c43b7d7e464f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #80 e18a2bd8-b976-4fce-89a7-9ba716f536f6)");

unit.assert_eq8(8'h3B, datamem_ext_i.datamem[13'h648],
"EXT DMEM (Testcase #80 e4b4a187-7505-41a8-855b-420f4e6c9c38)");
unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'h649],
"EXT DMEM (Testcase #80 1bdee692-30ab-412f-9ee0-d88445056a99)");
datamem_ext_i.datamem[13'h648] =
datamem_swap[16'h648];
datamem_ext_i.datamem[13'h649] =
datamem_swap[16'h649];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #81
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h636C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #81)");
    end
end

unit.assert_eq16(16'h636C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #81 fac9fbe5-a3eb-48e8-8ada-81fd331ced02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #81 8420db52-9a80-4633-891d-d4c22937874d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #81 8b723f53-c6d1-48b1-8eb5-e155943e6b9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #81 07449b47-69f2-45d8-a07c-4f4be51c0bcc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #81 8dbf0fee-91cd-4675-bfcb-eb162a369cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #81 3ad7ffb6-42a0-4c64-86a9-1e8ff54c1cae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #81 a7df7785-418d-49f0-9320-3dd91d7e6bd3)");

unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h3F0],
"EXT DMEM (Testcase #81 944361b2-4403-4905-9d7c-7cde3811cc73)");
unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'h3F1],
"EXT DMEM (Testcase #81 e76486c0-a3f5-4f0e-bd96-f3a65bcb53df)");
datamem_ext_i.datamem[13'h3F0] =
datamem_swap[16'h3F0];
datamem_ext_i.datamem[13'h3F1] =
datamem_swap[16'h3F1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #82
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h971B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #82)");
    end
end

unit.assert_eq16(16'h971B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #82 7a0aa9b0-aee4-42a2-a5b2-b8cac5e72e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #82 553b5d91-75de-4df4-a776-791b7753f476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #82 f94f1b8c-6dd5-493d-abd3-b1afea9a4cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #82 d8c22ec0-5591-4763-bd14-6d7b7bed42d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #82 0e2ae1ec-c46b-444c-9df8-7241a2daf7e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #82 0e6facf7-3b98-4d4c-aead-8bcd4a144a71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #82 551f89f1-cf06-454d-8693-c2aa197a3211)");

unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'hB2A],
"EXT DMEM (Testcase #82 e83c09ee-57a9-4cc3-8be7-54c1c8932f44)");
unit.assert_eq8(8'h97, datamem_ext_i.datamem[13'hB2B],
"EXT DMEM (Testcase #82 eb6ee23d-c6ba-4d16-9dc9-d6125ff7ca88)");
datamem_ext_i.datamem[13'hB2A] =
datamem_swap[16'hB2A];
datamem_ext_i.datamem[13'hB2B] =
datamem_swap[16'hB2B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #83
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #83)");
    end
end

unit.assert_eq16(16'hAE70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #83 438fc9a7-b99b-4c65-ba76-e9cc0d9a774b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #83 99582a93-effb-47a1-8fc8-678c393260e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #83 f2ef19d6-7fa6-4bbf-8557-b1b4deca07a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #83 91625407-ebeb-40c6-96ae-e0e7ef40b065)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #83 9745c0c7-9c6b-4773-8c72-7c3a15aed4ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #83 e3a24f9d-b55c-4261-9cb8-f750d4f43935)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #83 605f35e0-1d54-41a8-8b14-3f2bd2940415)");

unit.assert_eq8(8'h70, datamem_ext_i.datamem[13'h53A],
"EXT DMEM (Testcase #83 207710d2-5db8-45ff-a263-608523e8a6cc)");
unit.assert_eq8(8'hAE, datamem_ext_i.datamem[13'h53B],
"EXT DMEM (Testcase #83 57720203-cac7-4261-80ed-b2e4ce719203)");
datamem_ext_i.datamem[13'h53A] =
datamem_swap[16'h53A];
datamem_ext_i.datamem[13'h53B] =
datamem_swap[16'h53B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #84
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9B11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #84)");
    end
end

unit.assert_eq16(16'h9B11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #84 08121183-b775-4c1f-876b-6e65b6b8bd1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #84 53656d99-e6f9-4f86-adef-9bcc808d4a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #84 d14b658d-584c-4f1a-8407-01ba9d0c5a34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #84 367400a2-ae98-4697-b56a-8b59ba615f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #84 bbb25d93-a9d7-4334-8490-8ec805e8d606)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #84 a7259c80-5b56-4eff-afa3-11b5fd0f4b3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #84 d2398bc6-2263-4587-bbf0-30a2a06de8f8)");

unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'h452],
"EXT DMEM (Testcase #84 3ed74368-a104-4f5e-8933-720ef72951a7)");
unit.assert_eq8(8'h9B, datamem_ext_i.datamem[13'h453],
"EXT DMEM (Testcase #84 08eda390-a256-4010-8140-b41b7dbf9fd0)");
datamem_ext_i.datamem[13'h452] =
datamem_swap[16'h452];
datamem_ext_i.datamem[13'h453] =
datamem_swap[16'h453];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #85
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5246;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #85)");
    end
end

unit.assert_eq16(16'h5246, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #85 6dead98c-2f38-4419-8267-a4c1168c739d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #85 d4f57943-2061-4c5e-8c11-51640c812ff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #85 42c44a0e-6c7a-482f-ad51-3fe9c3d302a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #85 c0b891ad-680f-4b38-b594-4fd8e5e2f2d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #85 36ae86dc-4358-49de-88b4-72b6fe02f7ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #85 5bb14d2c-54ce-4d24-a00a-6cd49e9ba20a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #85 735a2b51-0234-44a6-9dae-3d5d51b10653)");

unit.assert_eq8(8'h46, datamem_ext_i.datamem[13'hBAB],
"EXT DMEM (Testcase #85 dff8081a-ae47-4c1f-aa69-5e0bca822064)");
unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'hBAC],
"EXT DMEM (Testcase #85 a7c8d8de-0841-4b38-b8a6-2491610b2673)");
datamem_ext_i.datamem[13'hBAB] =
datamem_swap[16'hBAB];
datamem_ext_i.datamem[13'hBAC] =
datamem_swap[16'hBAC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #86
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #86)");
    end
end

unit.assert_eq16(16'hC0D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #86 077e4dde-1f42-45e6-93a4-f6ce3b2ae0b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #86 fe5264e7-5293-431e-b882-0eb81781a526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #86 91c70242-9181-47c4-8b47-31b7b186f996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #86 babc4a8a-2f9a-4ce7-9da8-8cb28f28bcc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #86 7d6a18ca-d251-47ae-b6b9-c0e782a0c1e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #86 c81ff3aa-c75b-4c00-85ed-aacc56f78a68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #86 52725055-8e0d-4884-9ebb-306b09a5916e)");

unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'hF77],
"EXT DMEM (Testcase #86 35ce78f6-3844-4e23-b5bc-428feb52f83b)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'hF78],
"EXT DMEM (Testcase #86 26c5d996-af68-4022-98c6-02125713a567)");
datamem_ext_i.datamem[13'hF77] =
datamem_swap[16'hF77];
datamem_ext_i.datamem[13'hF78] =
datamem_swap[16'hF78];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #87
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #87)");
    end
end

unit.assert_eq16(16'hCC72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #87 c15a05e3-e82d-4686-8ca5-32d659895f8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #87 29b9e6f9-e7ea-42bd-83f0-229bc0d1f6f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #87 0b6425cb-dbb8-4fa9-b8b4-41e5434969dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #87 b5135091-4c1e-4635-ae05-d35fc8e68642)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #87 cc62988b-f45a-463c-a502-5e871f39c5c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #87 7b1f64b7-6424-43cf-89d9-c73dca3039c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #87 3bc11380-a2bf-407a-aa8e-31ff85b0e653)");

unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'h64F],
"EXT DMEM (Testcase #87 0ca05f09-065a-4d07-bd6c-e18ae83ea11b)");
unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'h650],
"EXT DMEM (Testcase #87 da5c8e6d-c97e-468f-a015-ceeb654d4dc6)");
datamem_ext_i.datamem[13'h64F] =
datamem_swap[16'h64F];
datamem_ext_i.datamem[13'h650] =
datamem_swap[16'h650];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #88
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #88)");
    end
end

unit.assert_eq16(16'h0C2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #88 ad5dec52-1dc4-4ffc-9622-cce196a0209f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #88 4677afd4-c5b3-40b8-87c1-3b9d0ac71279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #88 2d918860-81e1-4397-b75e-603fd6cec81f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #88 0cd41403-37cf-4ca9-a167-3057dfe11083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #88 6b11cfff-3636-40ec-b76a-954ded500e17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #88 1e0b6708-a4eb-4a40-94ed-ea4fb94abe63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #88 2de88e1c-f9f0-4a04-b3fb-3667686a3eec)");

unit.assert_eq8(8'h2C, datamem_ext_i.datamem[13'hE53],
"EXT DMEM (Testcase #88 1f670b73-3849-41ea-ae88-01a75dd93e1c)");
unit.assert_eq8(8'h0C, datamem_ext_i.datamem[13'hE54],
"EXT DMEM (Testcase #88 4aeb55f1-7e0c-478b-8eab-3b5d752e749a)");
datamem_ext_i.datamem[13'hE53] =
datamem_swap[16'hE53];
datamem_ext_i.datamem[13'hE54] =
datamem_swap[16'hE54];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #89
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1FC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #89)");
    end
end

unit.assert_eq16(16'h1FC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #89 44937aa5-623f-4d5e-8a7d-c4997d1be988)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #89 5527f91a-ecc3-4c5b-a14f-a6eb27b2bf36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #89 0da2af3a-2274-4315-bc21-0ace52863e9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #89 f405448a-02a8-461b-a26e-5a887a35b1ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #89 17ee1db8-11a0-4367-9484-dd0027092d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #89 ec5812f2-3211-43d6-a7c2-e459101829e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #89 2b20ceaf-ad78-49cb-b19e-12caf1679bf8)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h8E7],
"EXT DMEM (Testcase #89 17c5941e-b698-4ded-9201-f4edac21ea18)");
unit.assert_eq8(8'h1F, datamem_ext_i.datamem[13'h8E8],
"EXT DMEM (Testcase #89 0a62deef-a3e3-4087-8b0d-46fd49a52aae)");
datamem_ext_i.datamem[13'h8E7] =
datamem_swap[16'h8E7];
datamem_ext_i.datamem[13'h8E8] =
datamem_swap[16'h8E8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #90
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF662;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #90)");
    end
end

unit.assert_eq16(16'hF662, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #90 5a34559a-4f17-4cae-876b-4242fd5fd7fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #90 a5b5d478-93df-45ea-8db4-25546fdd0e7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #90 4446e890-2d88-41ff-b339-f3dd4b85e67c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #90 b276fd5a-c7ad-40ca-8218-6b96fd3babc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #90 19ce9c84-e40e-4f24-aa5b-6c6092982d60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #90 a5571e92-f307-401e-8db4-31e56cb7ef26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #90 939fc8ce-cd38-4184-9052-7cd2bc77981a)");

unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'h493],
"EXT DMEM (Testcase #90 f702637d-2567-42f0-9c69-0978d376453b)");
unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'h494],
"EXT DMEM (Testcase #90 edbb9484-b8f0-4a39-8e3d-9cbffebbed7e)");
datamem_ext_i.datamem[13'h493] =
datamem_swap[16'h493];
datamem_ext_i.datamem[13'h494] =
datamem_swap[16'h494];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #91
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #91)");
    end
end

unit.assert_eq16(16'h78E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #91 14c57c22-cb89-4c9e-866a-6ab17f0dd9e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #91 fcf29f92-2787-4751-b3c1-33938089d6f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #91 9f60705e-f0bb-4172-9be7-41fd4e73af69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #91 a6923eeb-bf33-4895-b3de-b429ed80aeb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #91 8406720d-f8c5-4d88-889b-bcdb13e829b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #91 dbd4c5e9-00b1-4866-9629-9de3b8d92ed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #91 7b97ec85-a9e8-402f-a0f6-637101e10bfa)");

unit.assert_eq8(8'hE7, datamem_ext_i.datamem[13'hA8B],
"EXT DMEM (Testcase #91 caf1d7c9-feb8-49f0-88ef-37c8dec3187c)");
unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'hA8C],
"EXT DMEM (Testcase #91 0b113a74-593a-473b-ae7a-9f0846ca8113)");
datamem_ext_i.datamem[13'hA8B] =
datamem_swap[16'hA8B];
datamem_ext_i.datamem[13'hA8C] =
datamem_swap[16'hA8C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #92
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE343;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #92)");
    end
end

unit.assert_eq16(16'hE343, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #92 85909628-85ee-46a1-8a14-5f62d0c86eb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #92 ddf98dcb-9c16-403a-9614-7381d19fe1e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #92 221ea10c-0cb6-4d11-971a-53030083360f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #92 2c273cb7-9dd1-4e82-a421-1e181d071ac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #92 11b950aa-5c7d-4a17-8082-29b43078c429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #92 a86512d0-e9b6-466b-a4dd-5fd1085edd66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #92 8a1fbb83-193d-4d0b-be68-184dc5329ad7)");

unit.assert_eq8(8'h43, datamem_ext_i.datamem[13'h589],
"EXT DMEM (Testcase #92 4b3d74ae-aac3-4575-acdf-6776899e7fcb)");
unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'h58A],
"EXT DMEM (Testcase #92 c6b7dbc3-6d53-4a0d-af3a-ea920e6023ac)");
datamem_ext_i.datamem[13'h589] =
datamem_swap[16'h589];
datamem_ext_i.datamem[13'h58A] =
datamem_swap[16'h58A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #93
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE488;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #93)");
    end
end

unit.assert_eq16(16'hE488, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #93 ef109a33-813a-429b-bcd9-a79b196a123b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #93 86899850-cffa-4946-aae3-0c7f2609f8bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #93 acba8852-5863-49ba-b1c3-c9e5793d3988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #93 2c64457d-ca5c-4544-b05f-1f68456c5289)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #93 8c5affb2-40f4-45dc-861e-bd82a48b19df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #93 cdc5c31a-ca04-43a1-b330-131c981833c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #93 d47ef3a7-b134-4559-af72-87f08dd0217e)");

unit.assert_eq8(8'h88, datamem_ext_i.datamem[13'hD5C],
"EXT DMEM (Testcase #93 6a534457-f997-43fe-aa66-92344784d696)");
unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'hD5D],
"EXT DMEM (Testcase #93 b734f5b9-5a9e-4b6f-b29b-0e0c6dbe6683)");
datamem_ext_i.datamem[13'hD5C] =
datamem_swap[16'hD5C];
datamem_ext_i.datamem[13'hD5D] =
datamem_swap[16'hD5D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #94
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #94)");
    end
end

unit.assert_eq16(16'h02CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #94 ce80bb59-184c-487b-a735-1eaaef477f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #94 77e4f8eb-31e4-4699-9489-403dacaad1f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #94 6e66b059-cf33-4f04-8911-fc1a62181383)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #94 29bf0ffe-2397-40eb-aa3a-ac4b04a7284c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #94 be383476-a070-4fcf-a95d-c143138c6136)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #94 8ebe0d16-c432-4c02-9580-00675b362500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #94 535d50e5-3a8a-4b9d-986b-a1f237f6149a)");

unit.assert_eq8(8'hCB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h89],
"INT DMEM (Testcase #94 a1c63647-ab7c-46dd-953e-463b9d79a7b2)");
unit.assert_eq8(8'h02, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8A],
"INT DMEM (Testcase #94 fa32c6c2-dd39-4eb4-aed7-b2aa659b1e5f)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h89] =
datamem_swap[16'h189];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8A] =
datamem_swap[16'h18A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #95
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD84F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #95)");
    end
end

unit.assert_eq16(16'hD84F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #95 a9894d21-fb63-402c-914b-89a2c53a1bc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #95 8f257045-f2c6-46ff-8bff-6a14dca75de4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #95 477a3f7e-1853-4096-a11a-0a712a2b367b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #95 51372039-8bae-4bf8-8e34-c52c20e552ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #95 73fbfdc5-98dc-4f94-a6fb-6e8b84563b3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #95 4ccb8134-d7c1-413b-8087-3236f6c94741)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #95 d178cc5f-7607-4fcb-a83c-3dfa071bd0e4)");

unit.assert_eq8(8'h4F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC7],
"INT DMEM (Testcase #95 d72f3f27-a207-4103-8918-6bd688326833)");
unit.assert_eq8(8'hD8, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC8],
"INT DMEM (Testcase #95 d56fa7ef-7b55-4594-9cad-3a9f64792528)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC7] =
datamem_swap[16'hC7];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC8] =
datamem_swap[16'hC8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #96
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6BBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #96)");
    end
end

unit.assert_eq16(16'h6BBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #96 8e20b55d-31b1-4f16-85db-f5d3b801289f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #96 7c6f8323-0aed-4456-a332-f1a8b68d5cb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #96 3b69bf8c-fc6a-4b07-9143-e6af55942982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #96 29fbe1df-12e2-4b1e-8b32-8e32f89ffee2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #96 fa609628-c0ad-489b-9da7-91856f325563)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #96 bd1d6251-ef27-4a8e-9e01-a0bd464c0b80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #96 b4d3cd4b-a5c3-46db-9372-4f227cb306a3)");

unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'h237],
"EXT DMEM (Testcase #96 b5cbaa6a-e653-48c0-8738-7e3ed1c1952c)");
unit.assert_eq8(8'h6B, datamem_ext_i.datamem[13'h238],
"EXT DMEM (Testcase #96 ce7622e5-1037-4fa5-babf-0b89c8c3f026)");
datamem_ext_i.datamem[13'h237] =
datamem_swap[16'h237];
datamem_ext_i.datamem[13'h238] =
datamem_swap[16'h238];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #97
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB3D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #97)");
    end
end

unit.assert_eq16(16'hB3D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #97 930654c2-e806-46f9-b6a6-f9bad6f5495e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #97 a6f4806e-5073-4c00-be80-b440bd997d18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #97 228841e9-4c85-43ca-a09b-0e143283bb08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #97 4c72cda6-1625-4cd0-bcb2-2e3f9e488120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #97 6cd281cd-7b02-47d4-9bc4-9be823566f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #97 d61c7ab4-c13e-49a4-ad60-b19b6b4abde9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #97 a3b71f65-a059-45be-b605-965d24a4dac5)");

unit.assert_eq8(8'hD4, datamem_ext_i.datamem[13'h979],
"EXT DMEM (Testcase #97 9173bb18-ede6-4616-b0e5-7f7bf54e5c44)");
unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'h97A],
"EXT DMEM (Testcase #97 ab2ae5ef-84fe-4411-aeab-fbb358b77902)");
datamem_ext_i.datamem[13'h979] =
datamem_swap[16'h979];
datamem_ext_i.datamem[13'h97A] =
datamem_swap[16'h97A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #98
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8439;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #98)");
    end
end

unit.assert_eq16(16'h8439, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #98 919614b0-a88d-4fcd-98b8-e134a41ba226)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #98 eb6b3d5d-6b82-4bb1-8ce3-1c38ed918858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #98 9b5feae8-abb2-4b8e-9d3c-80df000c4593)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #98 da0c515c-664e-42f4-9dcc-f44e22d03cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #98 5e07d44a-f48b-41ad-a388-3fddc83a95bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #98 36e15e51-4ded-4e2c-8ff0-341f18c47476)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #98 e5cb1932-4692-47bd-9266-1d4b8f26e739)");

unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'h546],
"EXT DMEM (Testcase #98 6c0246f6-bcd2-4653-abc6-fd4c8df0244f)");
unit.assert_eq8(8'h84, datamem_ext_i.datamem[13'h547],
"EXT DMEM (Testcase #98 3a6aabeb-05af-4386-982d-08043b43f750)");
datamem_ext_i.datamem[13'h546] =
datamem_swap[16'h546];
datamem_ext_i.datamem[13'h547] =
datamem_swap[16'h547];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #99
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD276;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #99)");
    end
end

unit.assert_eq16(16'hD276, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #99 7ecd6207-0e6a-489a-a334-e02b36c5ec21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #99 249b12b1-2e52-47fe-b175-00b891889996)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #99 c6ed81e8-39a2-4772-a696-196beaa3af57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #99 0336c66a-361e-48ff-bc6e-7d21846e79f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #99 b48fcc19-c0a8-447f-aa8f-8e9d45271b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #99 bbcfed2b-65a4-4d8c-8ee5-f0ba4ccce1ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #99 9cbbfaa7-4f1f-478d-9207-d1d45ba360ed)");

unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'h222],
"EXT DMEM (Testcase #99 28a0fc60-6ad2-41f4-b38d-d130f4263cd7)");
unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h223],
"EXT DMEM (Testcase #99 0eed8331-7452-46eb-8615-0cdb0b6d239e)");
datamem_ext_i.datamem[13'h222] =
datamem_swap[16'h222];
datamem_ext_i.datamem[13'h223] =
datamem_swap[16'h223];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #100
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h74A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #100)");
    end
end

unit.assert_eq16(16'h74A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #100 0bad747f-6150-4ca9-bcb7-b6b40bc581a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #100 7ac6d517-72b6-432e-be2c-7be23fffe913)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #100 e4895ef0-61d3-4b40-b832-136156ebc156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #100 e3ddfad4-202e-4193-96a9-d362b903764e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #100 3144c8e1-9282-43db-8e63-02b9d342f6fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #100 34b5671c-2d6c-43fc-ba07-58a7fac13bac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #100 28bb7430-1c45-42f2-9864-a1a3c626fa4f)");

unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'h339],
"EXT DMEM (Testcase #100 c0bec1f3-abad-4eb6-b6da-11aee330dbe9)");
unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h33A],
"EXT DMEM (Testcase #100 c19f1555-93c9-4500-92b7-f5606bdc53c6)");
datamem_ext_i.datamem[13'h339] =
datamem_swap[16'h339];
datamem_ext_i.datamem[13'h33A] =
datamem_swap[16'h33A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #101
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5A1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #101)");
    end
end

unit.assert_eq16(16'h5A1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #101 2a20cd02-15ab-4bda-82a5-dc427a3229a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #101 04778ad4-d86e-484c-b56c-b53e2a7790fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #101 3ea600f9-f06d-4210-85f2-d248e90222d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #101 98ff687f-0daa-4ff7-a2cf-23331ffbe81b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #101 9d8f8c77-169e-4fc6-9a31-da22af89defb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #101 dd635f7c-86fc-4784-a6e8-712297446b37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #101 1f3b6028-a3cd-48e5-a994-635e07e8672c)");

unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'h5EE],
"EXT DMEM (Testcase #101 9579094e-b631-4edb-a215-622d903c9699)");
unit.assert_eq8(8'h5A, datamem_ext_i.datamem[13'h5EF],
"EXT DMEM (Testcase #101 24db2fa8-be7f-462d-8175-1234c626bb9c)");
datamem_ext_i.datamem[13'h5EE] =
datamem_swap[16'h5EE];
datamem_ext_i.datamem[13'h5EF] =
datamem_swap[16'h5EF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #102
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #102)");
    end
end

unit.assert_eq16(16'h8B35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #102 55ca7f39-f1f0-42fd-b73d-63311b977425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #102 575aed42-9343-4e91-8b0e-c0b78c915e02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #102 4b0b8f31-d154-4f34-a08b-4e79614292b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #102 60b24337-9f47-4311-84d2-c7da0b3670b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #102 4352ac32-155e-4d2a-b41b-bd055a1e7776)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #102 2ec352e0-c835-459f-ba75-8021a399e773)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #102 415d3072-bde0-49d3-8d9d-92947c5015e9)");

unit.assert_eq8(8'h35, datamem_ext_i.datamem[13'h4D2],
"EXT DMEM (Testcase #102 424d5ceb-af92-4795-b6dc-a3bcc4a541f2)");
unit.assert_eq8(8'h8B, datamem_ext_i.datamem[13'h4D3],
"EXT DMEM (Testcase #102 1248289f-e746-4171-98b1-30c2fc9fa94e)");
datamem_ext_i.datamem[13'h4D2] =
datamem_swap[16'h4D2];
datamem_ext_i.datamem[13'h4D3] =
datamem_swap[16'h4D3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #103
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h54FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #103)");
    end
end

unit.assert_eq16(16'h54FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #103 3e515c90-0e58-47fa-8554-23f5fd2edb9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #103 87c91407-b86e-4867-b2d5-207c28a4ce87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #103 16e3da19-b70d-41e1-a84f-bfc8d1554dc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #103 7e3be4c4-7d64-4e92-9aca-8a0b3b902603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #103 fb788fa4-cd29-4721-aead-5cfa5ec9c3c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #103 8b8927a7-08a2-4b1e-bfde-462c64386d7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #103 f1343cf5-fd95-42f4-9695-4e2b5edc2947)");

unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'h7E7],
"EXT DMEM (Testcase #103 d53acf26-8378-42cf-9e79-9e888ad91c07)");
unit.assert_eq8(8'h54, datamem_ext_i.datamem[13'h7E8],
"EXT DMEM (Testcase #103 e2d35f46-9f80-4414-a13c-850e7f27139b)");
datamem_ext_i.datamem[13'h7E7] =
datamem_swap[16'h7E7];
datamem_ext_i.datamem[13'h7E8] =
datamem_swap[16'h7E8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #104
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h370A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #104)");
    end
end

unit.assert_eq16(16'h370A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #104 b4a9c34e-cac5-40df-a07e-fc885cd521bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #104 c049bd77-6169-4064-81f8-fc7e0408d1c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #104 8defa774-dcee-4cfb-80b0-0bf691d6cc94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #104 539fbb7f-a507-45b0-8105-fdcaddecccfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #104 5c1d416a-2dfd-40f0-800f-03f768f2710d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #104 f3476f0c-8e71-4fdb-9637-d453570dd175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #104 cbae3e88-a8fe-417d-bbd3-048ce53960c6)");

unit.assert_eq8(8'h0A, datamem_ext_i.datamem[13'h523],
"EXT DMEM (Testcase #104 7f130ccb-e9ef-462b-9d9b-7890d80cb244)");
unit.assert_eq8(8'h37, datamem_ext_i.datamem[13'h524],
"EXT DMEM (Testcase #104 1aebb929-cb88-4bbc-a9a1-b97c5f1142ca)");
datamem_ext_i.datamem[13'h523] =
datamem_swap[16'h523];
datamem_ext_i.datamem[13'h524] =
datamem_swap[16'h524];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #105
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h691B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #105)");
    end
end

unit.assert_eq16(16'h691B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #105 896be899-a74c-4a20-97ee-cac3d3af4a6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #105 d3d1246c-e938-4d96-ac6d-84f4c621194e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #105 7610e130-410e-4cec-984a-e33183ef148c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #105 300b9775-4942-4a1e-8376-28fe14b9a155)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #105 705927b9-3318-43bd-b000-fdd0c9ddb910)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #105 8a35532d-1d28-4642-ba1b-bfe0437a3546)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #105 44b971af-dd0f-454f-84c8-f7d1626b6af3)");

unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'h46E],
"EXT DMEM (Testcase #105 86604091-99c7-41bb-a134-f19c5075afe2)");
unit.assert_eq8(8'h69, datamem_ext_i.datamem[13'h46F],
"EXT DMEM (Testcase #105 a66b6c6a-0ee2-440a-a827-028228bc5be0)");
datamem_ext_i.datamem[13'h46E] =
datamem_swap[16'h46E];
datamem_ext_i.datamem[13'h46F] =
datamem_swap[16'h46F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #106
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #106)");
    end
end

unit.assert_eq16(16'hAD53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #106 92ac35f1-e8bd-408b-82df-5d17ca401cd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #106 dedcfa82-2bd6-4bda-9775-e6209aa8a9a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #106 f5da34cd-3842-4e4b-a0d0-ce2c1a2b5d5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #106 65cd7078-3d72-4e55-87d1-5be2a8401583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #106 e0c8cffe-e1c4-4321-a179-ae1e32c1cde4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #106 36ff51cc-903a-4a6b-99ab-be96fc96f8da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #106 bba82941-a777-46b4-a674-6ae477821012)");

unit.assert_eq8(8'h53, datamem_ext_i.datamem[13'h426],
"EXT DMEM (Testcase #106 6393fc0f-f4a8-4112-b44f-16e0e08ea911)");
unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h427],
"EXT DMEM (Testcase #106 406bc505-2146-4ae7-8263-8a774a0738c0)");
datamem_ext_i.datamem[13'h426] =
datamem_swap[16'h426];
datamem_ext_i.datamem[13'h427] =
datamem_swap[16'h427];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #107
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3E80;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #107)");
    end
end

unit.assert_eq16(16'h3E80, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #107 4ce0d997-e997-433f-94ee-cf2304f91031)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #107 0d6c25b4-4f30-4b8c-93dd-a63f05db85e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #107 aeffd550-2c18-4f54-8c0e-27e4f5dec4e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #107 70ab8070-daa0-40db-8867-90185e6efb2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #107 6cfcce06-90b7-4798-b7cc-81b5440a34a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #107 063d6dab-d397-4dea-9204-6f86a956e093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #107 194b2b31-f40f-47df-8a77-3ef4950957c9)");

unit.assert_eq8(8'h80, datamem_ext_i.datamem[13'hEE6],
"EXT DMEM (Testcase #107 3162a2aa-00b0-4a6c-8d1f-98c02ad60f17)");
unit.assert_eq8(8'h3E, datamem_ext_i.datamem[13'hEE7],
"EXT DMEM (Testcase #107 6c9ee31d-4808-4a03-8155-c80a1a289890)");
datamem_ext_i.datamem[13'hEE6] =
datamem_swap[16'hEE6];
datamem_ext_i.datamem[13'hEE7] =
datamem_swap[16'hEE7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #108
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9501;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #108)");
    end
end

unit.assert_eq16(16'h9501, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #108 ac135526-b8dd-4fa9-b7d5-434293bb32d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #108 e328d9ff-2db7-47d9-841c-9aa6a48b122f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #108 974e2523-c400-46e4-8ef8-d57e08b1e2d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #108 0f1e2746-b26e-47e2-8ed3-ca7a6786560a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #108 fa9d6bc2-7377-49aa-a5ae-82ead5e3b792)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #108 b0ffaac9-c699-45e4-ae1d-563ce1880eb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #108 059df581-19a4-4083-9827-7393628ee87d)");

unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'hC4B],
"EXT DMEM (Testcase #108 f0133a62-6743-4572-a443-499d04c0e28c)");
unit.assert_eq8(8'h95, datamem_ext_i.datamem[13'hC4C],
"EXT DMEM (Testcase #108 dff29603-9925-484d-a111-56d434f5639a)");
datamem_ext_i.datamem[13'hC4B] =
datamem_swap[16'hC4B];
datamem_ext_i.datamem[13'hC4C] =
datamem_swap[16'hC4C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #109
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h45B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #109)");
    end
end

unit.assert_eq16(16'h45B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #109 29102401-babe-4215-9bd8-a67a16490747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #109 89d08cf1-5def-44cd-9324-d9f0458c41be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #109 aa8d20f8-9e15-4f39-b528-5b6067273a76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #109 b09a90db-f8b1-4999-9d93-e86c433942bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #109 9dee948b-41b8-4503-b12f-2d5b8c2b7220)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #109 4184b14a-4c5c-4e2c-95a7-4266a43f6d15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #109 47c648e9-efa9-4602-90db-2e43a00c2b22)");

unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'hCB1],
"EXT DMEM (Testcase #109 b5088e56-bd6f-45a0-bcd6-dfd48885a2d7)");
unit.assert_eq8(8'h45, datamem_ext_i.datamem[13'hCB2],
"EXT DMEM (Testcase #109 fe5a8a5c-b89d-4e39-aa76-4e2c53699ddc)");
datamem_ext_i.datamem[13'hCB1] =
datamem_swap[16'hCB1];
datamem_ext_i.datamem[13'hCB2] =
datamem_swap[16'hCB2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #110
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBA11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #110)");
    end
end

unit.assert_eq16(16'hBA11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #110 6cd1a143-670d-4e0e-b8ca-c0fb08aa77d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #110 db0e0696-71a0-4186-bae6-13f83db4f797)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #110 18e1fad0-3f1d-4456-83d7-095f23b718d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #110 30f78bf4-608f-42c7-b421-d53374e8e749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #110 cff8325d-09b3-4bdc-86fb-158258b0aad4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #110 722ae496-374d-4baf-a407-0fa61cf9b3b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #110 dc0d27bb-1320-4851-ba72-54b01504b43c)");

unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'h938],
"EXT DMEM (Testcase #110 6d37641a-83e9-4aca-a0ce-a1329bae4bc2)");
unit.assert_eq8(8'hBA, datamem_ext_i.datamem[13'h939],
"EXT DMEM (Testcase #110 d27855c3-3bae-4f8a-86e9-b057650e12f4)");
datamem_ext_i.datamem[13'h938] =
datamem_swap[16'h938];
datamem_ext_i.datamem[13'h939] =
datamem_swap[16'h939];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #111
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h83DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #111)");
    end
end

unit.assert_eq16(16'h83DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #111 679e3422-ef97-4a5a-b7e1-d89da849f161)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #111 30157b6e-9501-4c24-a938-eea6746e6692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #111 808cea69-6d7c-4190-bde0-18b442ae978e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #111 45417f05-4a74-4018-8a57-e423d841af88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #111 44705cea-b9be-4423-a4be-728087082110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #111 b62fedbd-a74d-46e7-aa07-9cede1cea4d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #111 40941d43-a38d-4712-bb98-84e46b969818)");

unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'hC31],
"EXT DMEM (Testcase #111 374376d9-c037-4d38-8590-84cbb3125529)");
unit.assert_eq8(8'h83, datamem_ext_i.datamem[13'hC32],
"EXT DMEM (Testcase #111 923c4e65-e132-402a-8be9-836c8c6f5ef5)");
datamem_ext_i.datamem[13'hC31] =
datamem_swap[16'hC31];
datamem_ext_i.datamem[13'hC32] =
datamem_swap[16'hC32];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #112
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9FB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #112)");
    end
end

unit.assert_eq16(16'h9FB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #112 608bbd4d-d36c-4b21-805d-932d6e56994f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #112 480d4691-761f-4b67-961a-d89a0809ad66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #112 274baa61-335f-4965-a627-dfcf40c4f3aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #112 98af86cb-dbb5-4bc2-a680-8fc3483ea9d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #112 144ec6f0-5161-483b-acd7-e88300772666)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #112 1c0c630b-aa34-4e5d-a8d0-924fdca03a30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #112 8fb81355-9d49-4d7e-b34c-aa6d82c64973)");

unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'h9B8],
"EXT DMEM (Testcase #112 7de0e62a-0c4a-484b-add6-52f8f491acc3)");
unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h9B9],
"EXT DMEM (Testcase #112 8d4db362-d903-4bcb-9562-a15d396f4269)");
datamem_ext_i.datamem[13'h9B8] =
datamem_swap[16'h9B8];
datamem_ext_i.datamem[13'h9B9] =
datamem_swap[16'h9B9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #113
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF71C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #113)");
    end
end

unit.assert_eq16(16'hF71C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #113 d20b5a5a-be89-495c-b1d0-526fc8642a5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #113 63581157-42d6-4250-8e42-8467019b5e70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #113 c490b5c3-a94b-4d85-a61a-6142b1ad8275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #113 5fe2ea07-5709-4e73-a7d6-38c432d9564a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #113 341c8f9a-2a1f-48c0-a2fc-f8f4fa858cf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #113 4878e7f8-3d2f-4825-b30f-6b3927b4d1fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #113 9efec440-bb8e-4604-8f9e-684bc0c240c7)");

unit.assert_eq8(8'h1C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB6],
"INT DMEM (Testcase #113 5c9c37d5-7562-4fde-9ce2-52a283536d5a)");
unit.assert_eq8(8'hF7, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB7],
"INT DMEM (Testcase #113 c15fdd9d-ccf6-4a59-a71d-6ee3fcbfc109)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB6] =
datamem_swap[16'hB6];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB7] =
datamem_swap[16'hB7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #114
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD615;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #114)");
    end
end

unit.assert_eq16(16'hD615, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #114 209a5cea-fb9b-4a1c-8ef0-16108e4256d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #114 2e623b77-56ce-4353-8d0f-354eb80d9fac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #114 2ef11026-0747-46e0-98b6-25defee81b0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #114 f6f611ee-6931-405e-a642-f57633229f01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #114 0b78a54a-fdeb-4b35-bc19-e7b69438e61c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #114 895ec63a-1c50-431f-b9a2-3ca1ca4a9d08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #114 440f073a-32ba-4743-aa39-6e0692ff5b0d)");

unit.assert_eq8(8'h15, datamem_ext_i.datamem[13'hEEA],
"EXT DMEM (Testcase #114 658bc718-24de-49f3-83fc-4197934a33bf)");
unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'hEEB],
"EXT DMEM (Testcase #114 3e74d5ad-b4d2-4a4c-904a-d6a60b89dc2c)");
datamem_ext_i.datamem[13'hEEA] =
datamem_swap[16'hEEA];
datamem_ext_i.datamem[13'hEEB] =
datamem_swap[16'hEEB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #115
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC19;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #115)");
    end
end

unit.assert_eq16(16'hAC19, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #115 c0a45d64-b0d5-45cd-95e1-36b9202ab43f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #115 996080a9-7649-4a28-a5b1-ec5518cd041f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #115 37278ba0-9338-4e90-85d4-533e4db009fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #115 b820f87b-c3a7-4c47-9095-6b8deb45cff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #115 5ae1fe81-4d83-4a38-884c-e8cb749d9a98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #115 1f903fbe-c33e-4a70-8e4d-652ed3f969a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #115 efd538c7-12a9-4a3b-ba58-465f8791841b)");

unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'h58D],
"EXT DMEM (Testcase #115 11be37c9-bbc3-4e60-b02c-f8ebb057937f)");
unit.assert_eq8(8'hAC, datamem_ext_i.datamem[13'h58E],
"EXT DMEM (Testcase #115 c36d0746-3dde-457b-9007-498400f767fd)");
datamem_ext_i.datamem[13'h58D] =
datamem_swap[16'h58D];
datamem_ext_i.datamem[13'h58E] =
datamem_swap[16'h58E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #116
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h23F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #116)");
    end
end

unit.assert_eq16(16'h23F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #116 79c850e6-f06c-453b-a546-5827c70f2227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #116 e0a43129-4566-4dcb-b410-8733cad24177)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #116 73fb1c41-0c00-46ef-b34a-bf91baafd66d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #116 3a9061a5-1122-4f5f-bc73-36fb61f83a6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #116 54ba611d-5e68-4d4b-84a6-eb32ab894056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #116 1b5c6823-d106-48b7-b79b-6edaffe7270d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #116 f6d14ab8-353c-4f69-8afe-151e357ac49f)");

unit.assert_eq8(8'hF1, datamem_ext_i.datamem[13'hD70],
"EXT DMEM (Testcase #116 f619c5c0-f6d8-4d62-9315-65eb2d31546f)");
unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'hD71],
"EXT DMEM (Testcase #116 f1089309-f522-46dc-8f17-09f4571d296d)");
datamem_ext_i.datamem[13'hD70] =
datamem_swap[16'hD70];
datamem_ext_i.datamem[13'hD71] =
datamem_swap[16'hD71];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #117
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h71E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #117)");
    end
end

unit.assert_eq16(16'h71E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #117 daee9529-c96f-4de6-b33f-96a9054b8ed7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #117 88137edf-da18-4df5-aa41-c149eb28736b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #117 5610ecfd-3da3-4367-915f-6045ebbf221e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #117 75a64bf1-9a4a-4f4c-99de-cfa6c39813c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #117 6e8a3c0e-711d-4b32-8369-aee901d4018d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #117 c1e51369-3bc7-435e-970a-c9973ec06697)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #117 9a1573fe-ccee-469e-9a60-5252d3a71f99)");

unit.assert_eq8(8'hE6, datamem_ext_i.datamem[13'hCCD],
"EXT DMEM (Testcase #117 2e95e188-ef2a-495d-bbc6-be0a455396eb)");
unit.assert_eq8(8'h71, datamem_ext_i.datamem[13'hCCE],
"EXT DMEM (Testcase #117 8f48bc34-e324-4d7a-9f61-0fc30fbdcffd)");
datamem_ext_i.datamem[13'hCCD] =
datamem_swap[16'hCCD];
datamem_ext_i.datamem[13'hCCE] =
datamem_swap[16'hCCE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #118
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD354;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #118)");
    end
end

unit.assert_eq16(16'hD354, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #118 94b1ffb2-258b-4046-baa0-a2b4e08e68d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #118 cfd2a482-5933-4e0c-8040-bf19119fd855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #118 5112780d-3b01-46fc-89c0-12997a84debc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #118 e86e2e65-f12f-4646-b53c-35bb3806d50f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #118 2c25f014-b664-410f-a49d-d05ba3adedac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #118 63b9facb-97be-4dff-89e7-62401abdf965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #118 6985cf1c-b4ca-4270-8381-8a570205e68c)");

unit.assert_eq8(8'h54, datamem_ext_i.datamem[13'hAC1],
"EXT DMEM (Testcase #118 36e159a8-eb10-4d67-adbc-ccb1909ca94e)");
unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'hAC2],
"EXT DMEM (Testcase #118 e97b3d65-4644-421a-81ea-2731682222c4)");
datamem_ext_i.datamem[13'hAC1] =
datamem_swap[16'hAC1];
datamem_ext_i.datamem[13'hAC2] =
datamem_swap[16'hAC2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #119
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h46BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #119)");
    end
end

unit.assert_eq16(16'h46BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #119 5d73b002-b0f2-4eaf-bd8c-e7ccb792ac53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #119 2694ee26-37f1-4f52-8e5f-4172138f8634)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #119 c5eea9d9-00dc-48f8-8cd9-44bf74704088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #119 89d98016-b7c2-4892-9d14-3ea286c95a89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #119 80df37f8-8f82-4e56-83b7-b8850d4f7c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #119 6438b71d-9e9f-462a-9742-b993c2d8079a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #119 37df5244-967b-46dc-8130-1318a3c7f4fb)");

unit.assert_eq8(8'hBE, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6E],
"INT DMEM (Testcase #119 264e8318-4cd5-449f-9490-3c440d699760)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6F],
"INT DMEM (Testcase #119 d23b2309-8af1-4664-bdf0-712c12c03d91)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6E] =
datamem_swap[16'h6E];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6F] =
datamem_swap[16'h6F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #120
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #120)");
    end
end

unit.assert_eq16(16'h1C22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #120 e854c66a-36f9-445e-84b6-3dc775399cb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #120 a8dc2cd1-4db0-48f5-8294-a1be38da993a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #120 2e21bc24-8d6f-42a3-998b-4058fb65e00c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #120 92d254e8-f637-4b86-8e25-3718dd05bf49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #120 27680bda-c274-40dc-8d13-3f883efb6d02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #120 8568bfc6-8cb2-457a-a2c9-4e07e68f5c2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #120 25cb8854-c1aa-469c-a945-a84ec660cd4c)");

unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'hC61],
"EXT DMEM (Testcase #120 b2bb5d3f-995c-4810-8af6-9d3f275816f3)");
unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'hC62],
"EXT DMEM (Testcase #120 bf94361d-1a45-48fa-b01d-95cd5f523cba)");
datamem_ext_i.datamem[13'hC61] =
datamem_swap[16'hC61];
datamem_ext_i.datamem[13'hC62] =
datamem_swap[16'hC62];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #121
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h98C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #121)");
    end
end

unit.assert_eq16(16'h98C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #121 bb7dd839-0a67-47f6-8caf-e8f2cedf5016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #121 8dcce38a-2b69-494d-8ac7-0f6e1128f815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #121 bc996098-1fb7-44e0-b37f-dccd607df400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #121 2cb3660a-0dc1-45ed-b982-a01ceb10616b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #121 430f2d9b-05ba-42b6-8df3-60d42b643416)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #121 06bbeabe-5d5e-448a-811b-02ff89d7ae13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #121 3c155ba5-ffa9-4026-ba98-f903d06e59e8)");

unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'hA42],
"EXT DMEM (Testcase #121 83379323-55b5-4599-975a-61ee5d11c9b2)");
unit.assert_eq8(8'h98, datamem_ext_i.datamem[13'hA43],
"EXT DMEM (Testcase #121 0a5d6ce1-e538-494b-86c8-4aa99b8a77c4)");
datamem_ext_i.datamem[13'hA42] =
datamem_swap[16'hA42];
datamem_ext_i.datamem[13'hA43] =
datamem_swap[16'hA43];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #122
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA0B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #122)");
    end
end

unit.assert_eq16(16'hA0B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #122 c463404b-fe33-49f7-96ac-fde74ea1fff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #122 318544e1-9ec9-437b-8fa0-1e4a9ab94cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #122 eb00a47e-177f-4396-a04f-826f2f3abbcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #122 7e95ce1a-3340-4edd-9636-baa4d8315464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #122 41f80915-a71f-41ac-8f53-a094f523ad84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #122 ef04e525-8de4-489e-83d4-a4e8d38f0159)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #122 27782c50-bb52-476f-be17-bc73dcaa4383)");

unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'hDD4],
"EXT DMEM (Testcase #122 5350d4ef-f85e-4463-8fb7-755433938660)");
unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'hDD5],
"EXT DMEM (Testcase #122 e9477fd0-3240-4532-ae47-50e47ecb2d56)");
datamem_ext_i.datamem[13'hDD4] =
datamem_swap[16'hDD4];
datamem_ext_i.datamem[13'hDD5] =
datamem_swap[16'hDD5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #123
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h77F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #123)");
    end
end

unit.assert_eq16(16'h77F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #123 f1325716-6fd9-43ca-827a-dfb1c7c2eabb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #123 65edf80f-568f-40f2-9cad-21fb772703a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #123 a3ace82f-d0cc-46fe-9498-6b7aac205ec0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #123 864a24e7-4ac6-424f-8599-7ae7cbf400cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #123 87ca70bd-84ee-409c-94b6-c0fea46a3b88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #123 561a2ef2-6da6-46b5-8b57-d7503c086592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #123 7e64f921-e158-424b-b008-89159a10956e)");

unit.assert_eq8(8'hF5, datamem_ext_i.datamem[13'h696],
"EXT DMEM (Testcase #123 8e1167e0-a1b7-4300-a901-85c034f62a78)");
unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'h697],
"EXT DMEM (Testcase #123 8b7d047c-6e14-4644-b51f-b36b632c7d46)");
datamem_ext_i.datamem[13'h696] =
datamem_swap[16'h696];
datamem_ext_i.datamem[13'h697] =
datamem_swap[16'h697];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #124
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h829C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #124)");
    end
end

unit.assert_eq16(16'h829C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #124 a795251f-0825-42e6-a322-a0f5426b9b66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #124 3785e8cb-fdf8-4c52-9ad1-4c7513458fcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #124 b921798b-11ac-4d6e-9ec2-fd10ac3d8676)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #124 6ff3bcff-7db7-4da7-b9b1-c31eabc4a0b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #124 c2c8ba51-7638-484a-b504-11e2e1fcffd5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #124 d979adb9-ad33-4bed-ad88-30fd5ca822c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #124 af3ebf72-30dc-44a3-813a-deb33e7218a4)");

unit.assert_eq8(8'h9C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h27],
"INT DMEM (Testcase #124 675c35a1-85a6-470c-80b4-7de081582041)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h28],
"INT DMEM (Testcase #124 69c28e67-2d3f-4963-88a3-32bc8be057df)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h27] =
datamem_swap[16'h27];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h28] =
datamem_swap[16'h28];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #125
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE80D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #125)");
    end
end

unit.assert_eq16(16'hE80D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #125 b11463dc-8408-4df8-9cae-12f9e62375db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #125 f201af1d-6a13-453c-8c21-a66d54d94298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #125 65c586c9-b991-446c-ae5f-474dcd38ef19)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #125 41d5e6b2-73e5-4362-96ca-d9351b586b8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #125 db4a6c67-a6af-4ae3-ad66-4df1c6666bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #125 8a22d065-e4af-4da8-8793-0cb4afd72d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #125 5b2cf610-0112-4a5b-ac73-334f4023b176)");

unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'hAA0],
"EXT DMEM (Testcase #125 79f102d1-4bb5-4d1b-95b7-9c5f237dbf8e)");
unit.assert_eq8(8'hE8, datamem_ext_i.datamem[13'hAA1],
"EXT DMEM (Testcase #125 d0493d28-8a21-4d68-911f-fb923c025c19)");
datamem_ext_i.datamem[13'hAA0] =
datamem_swap[16'hAA0];
datamem_ext_i.datamem[13'hAA1] =
datamem_swap[16'hAA1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #126
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h23AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #126)");
    end
end

unit.assert_eq16(16'h23AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #126 d6609424-54eb-496c-9114-51fc7db8c779)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #126 472dee14-02d5-42fd-b388-14bdc387d50d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #126 1dd39d8f-6193-43a0-a58e-b55dd905624a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #126 983ba41c-a392-47d8-aace-1fb90c77a200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #126 4ea3f905-948f-4dda-8b7c-cbbdf426fb38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #126 e0eeda19-9a44-435b-8924-d8c884851415)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #126 d1d6ff95-ad3a-42e6-a143-f96c38899a32)");

unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'hEFC],
"EXT DMEM (Testcase #126 f0ccd74b-19c5-460c-bbb4-ff61c33010bb)");
unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'hEFD],
"EXT DMEM (Testcase #126 e6a4012d-735a-425a-ba72-f2dcbcfc48b6)");
datamem_ext_i.datamem[13'hEFC] =
datamem_swap[16'hEFC];
datamem_ext_i.datamem[13'hEFD] =
datamem_swap[16'hEFD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #127
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5175;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #127)");
    end
end

unit.assert_eq16(16'h5175, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #127 5b78fd0f-5c8b-4d12-b663-c4d6b3c94055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #127 837aa011-f7a6-48d8-8147-96cb92852480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #127 0f712e50-1b1f-4122-9529-81ab301cd06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #127 09abbcb9-0f51-4116-b1bb-303f94dee988)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #127 747c5585-0c32-4ab1-afb1-c6e467cb733d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #127 6cf9c0bb-7988-4a62-ab8a-19aa3365ab7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #127 b0ce70fb-5a08-45a2-91d5-9b44b4621337)");

unit.assert_eq8(8'h75, datamem_ext_i.datamem[13'hDC9],
"EXT DMEM (Testcase #127 29ad6353-f458-48ae-b30b-426c185b8926)");
unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'hDCA],
"EXT DMEM (Testcase #127 24162f5a-89ed-4a65-a756-81d47a4bb6f5)");
datamem_ext_i.datamem[13'hDC9] =
datamem_swap[16'hDC9];
datamem_ext_i.datamem[13'hDCA] =
datamem_swap[16'hDCA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #128
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA1CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #128)");
    end
end

unit.assert_eq16(16'hA1CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #128 a2af39ac-0738-4799-a5dd-d0d3fdf32273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #128 82779170-8fcc-46ff-a1d4-d15c138d5f9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #128 e8ad9cf4-acda-417b-b645-5f0ae7869630)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #128 8222acc0-fab5-4523-884e-449688eb15c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #128 aa7b07c3-f10e-4fb6-a659-7bd755bca216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #128 d20ec8d7-dfa4-4283-9d40-f7015b10d183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #128 fab8d11b-3c93-4266-972b-e5a8adef97d5)");

unit.assert_eq8(8'hCE, datamem_ext_i.datamem[13'h24C],
"EXT DMEM (Testcase #128 cab53176-d40b-4684-a0be-dd08ed1180cd)");
unit.assert_eq8(8'hA1, datamem_ext_i.datamem[13'h24D],
"EXT DMEM (Testcase #128 1861f323-8427-4c40-94e0-f5e7b0528f83)");
datamem_ext_i.datamem[13'h24C] =
datamem_swap[16'h24C];
datamem_ext_i.datamem[13'h24D] =
datamem_swap[16'h24D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #129
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h675F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #129)");
    end
end

unit.assert_eq16(16'h675F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #129 80a727f5-4d8a-40a2-9db4-50feb6db6f93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #129 b0c1fc8d-57da-49ba-bee9-87d3d6bfc35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #129 80ce07f9-da01-4ade-a9b7-d9c038314595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #129 ebbae6cd-6cec-48d6-beb8-d33e62e2b965)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #129 ba88a355-ec70-4bfa-a265-20960c464c7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #129 08cb34f9-6b5d-404d-94f0-6bfb83d2a489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #129 526ad9e2-5233-440c-b6c1-aacaa2a6c6e5)");

unit.assert_eq8(8'h5F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h28],
"INT DMEM (Testcase #129 81a982cf-58ae-4a32-bdaa-595385b3c4bf)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h29],
"INT DMEM (Testcase #129 092bf1b9-658f-41b5-a24b-c92044c548b1)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h28] =
datamem_swap[16'h28];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h29] =
datamem_swap[16'h29];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #130
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h163E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #130)");
    end
end

unit.assert_eq16(16'h163E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #130 b7d89e19-d8ed-4118-8bd2-19672dee32e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #130 8755ed2d-e473-4a25-8b06-2347e4475567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #130 91c4e9e7-c784-41ce-8a27-6056eb1ac2eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #130 95b55c0d-b98f-434b-9d4e-f6ab149d98e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #130 1c4a5e2d-4ff5-46f7-8211-3c46fc958f64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #130 afb1eaf8-fd79-4ee0-b5f9-0bfcb6371125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #130 70f410db-20f0-44cc-bab9-ea37de638bbd)");

unit.assert_eq8(8'h3E, datamem_ext_i.datamem[13'h413],
"EXT DMEM (Testcase #130 312c02e4-cd07-4932-80ed-4b894b88f9de)");
unit.assert_eq8(8'h16, datamem_ext_i.datamem[13'h414],
"EXT DMEM (Testcase #130 1b6c12f5-de5f-44b8-9dc0-d9d1aa9d5931)");
datamem_ext_i.datamem[13'h413] =
datamem_swap[16'h413];
datamem_ext_i.datamem[13'h414] =
datamem_swap[16'h414];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #131
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5EC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #131)");
    end
end

unit.assert_eq16(16'h5EC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #131 56e5cae4-2db8-4c29-a712-614297b06e4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #131 b2fff22b-f53a-4e80-99be-cf5f8c991cd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #131 deabd509-275a-4e20-bb1e-9d17ba88cd7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #131 ea09ceab-dc4a-4c48-9046-ab267e4db2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #131 6aeb8fac-efe3-4b33-8843-01043cb6c549)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #131 fc214cd6-7927-42b1-a24d-e1bb446715fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #131 a2387b64-5562-43dc-ac04-4b6c5da4ba90)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hF10],
"EXT DMEM (Testcase #131 6dea84f8-8d4a-4aa7-84f3-a952184a3b2d)");
unit.assert_eq8(8'h5E, datamem_ext_i.datamem[13'hF11],
"EXT DMEM (Testcase #131 19abf532-5086-4659-ab01-f692e158927e)");
datamem_ext_i.datamem[13'hF10] =
datamem_swap[16'hF10];
datamem_ext_i.datamem[13'hF11] =
datamem_swap[16'hF11];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #132
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h99B9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #132)");
    end
end

unit.assert_eq16(16'h99B9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #132 0faa0e0d-e0d5-41bb-bdc1-5bd7557a7803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #132 73b86651-c3a0-4576-8480-7c8448bcd710)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #132 b7b70c69-951a-4bd8-9951-45fd5ffe7501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #132 fe6860ea-c6df-4162-ae19-9337e13463f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #132 2935b258-c13f-4df7-9b7f-c236e8111633)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #132 5723dd75-d2f5-4a49-8c5d-add5c69b034e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #132 e34e5c85-33e8-4a4d-a51d-814ce6855c59)");

unit.assert_eq8(8'hB9, datamem_ext_i.datamem[13'h95D],
"EXT DMEM (Testcase #132 a29be93e-38c1-4afd-a77a-c7ded102761b)");
unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'h95E],
"EXT DMEM (Testcase #132 e510ac6b-d549-47bb-91d2-7cd14fb950c9)");
datamem_ext_i.datamem[13'h95D] =
datamem_swap[16'h95D];
datamem_ext_i.datamem[13'h95E] =
datamem_swap[16'h95E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #133
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h94A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #133)");
    end
end

unit.assert_eq16(16'h94A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #133 c8d5b7b7-6d08-438f-8aa3-58d77248ec63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #133 022f53ba-0e3f-4b50-9b8f-10b853186125)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #133 f02f4d81-29f2-4677-b9cc-7b24afc29f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #133 e5f95b5d-8586-4c87-9077-3f92171a9894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #133 9c277f1c-f480-4a35-a60c-91314510c60d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #133 38ca3c69-42dc-4c04-8aee-d6eaf2f735fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #133 7061c7a0-95e6-4e4e-9aad-a34435447f25)");

unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'h420],
"EXT DMEM (Testcase #133 b25ad688-3cf3-4bfe-9c42-a3a703f4a57b)");
unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'h421],
"EXT DMEM (Testcase #133 cacd3e34-0bd4-45ad-948f-c34865ca10f0)");
datamem_ext_i.datamem[13'h420] =
datamem_swap[16'h420];
datamem_ext_i.datamem[13'h421] =
datamem_swap[16'h421];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #134
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB937;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #134)");
    end
end

unit.assert_eq16(16'hB937, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #134 adeceed0-d4fb-49c8-b1fc-8451ff64842c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #134 ac7696cf-8dc0-4f38-8c39-1ccdf1446274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #134 48e059aa-86fd-4310-97f5-a072f36fe473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #134 c85a005d-2d2b-41cb-a869-53c2c26dcedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #134 91d0069e-3660-4759-92ab-16d87cbbb361)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #134 6f8d1561-8c41-4f43-980e-b7756f3ae3e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #134 d2ea0511-e579-41d0-9b59-fa41a34cfab1)");

unit.assert_eq8(8'h37, datamem_ext_i.datamem[13'h239],
"EXT DMEM (Testcase #134 1481f582-75f3-42ea-8d6c-169f881773b9)");
unit.assert_eq8(8'hB9, datamem_ext_i.datamem[13'h23A],
"EXT DMEM (Testcase #134 d07a5a8c-ece3-47f5-a0fe-7f61a1e0da94)");
datamem_ext_i.datamem[13'h239] =
datamem_swap[16'h239];
datamem_ext_i.datamem[13'h23A] =
datamem_swap[16'h23A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #135
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h428A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #135)");
    end
end

unit.assert_eq16(16'h428A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #135 9449aba5-8606-4d67-b02c-abd1b602618f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #135 8fa30089-3c64-4e7c-b50d-b3e239f86062)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #135 20e7bdff-2112-4a10-8f3f-c1bef63a4af7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #135 4efac34a-85d5-431d-8e11-bb4c365f2fef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #135 a311de02-e901-4b1f-bd79-04d40dc70eac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #135 1b212d2c-8534-449b-9959-14892110c6d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #135 fbacfdc7-4ef0-40f9-840d-cf163902c0f9)");

unit.assert_eq8(8'h8A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hEB],
"INT DMEM (Testcase #135 f9084de8-4be5-4a80-9138-5e48550e55ef)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hEC],
"INT DMEM (Testcase #135 8cce93ce-be90-4020-b6a0-4869c72cb159)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hEB] =
datamem_swap[16'h1EB];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hEC] =
datamem_swap[16'h1EC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #136
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD65E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #136)");
    end
end

unit.assert_eq16(16'hD65E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #136 2e0387f2-8260-4191-ba69-7473d5ffbd62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #136 a744164f-45b3-4dc5-a384-db3669bd6ee8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #136 a6011ce3-2a4b-4504-ad27-f6a8b7e89b48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #136 d7781bf6-df14-4afb-9063-59c23be9c81f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #136 ac34def7-0a8f-4e09-9bbc-0f698e2d9961)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #136 aac80a3e-8ad5-42a0-b39c-813ad7aeb45d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #136 3212dfa9-428a-4ad8-a2dc-ac12b556a9ba)");

unit.assert_eq8(8'h5E, datamem_ext_i.datamem[13'hB13],
"EXT DMEM (Testcase #136 02e5484c-ff0a-4130-8828-3c4b1f417c53)");
unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'hB14],
"EXT DMEM (Testcase #136 9e866005-e4e8-4437-a32d-5ac10e255c89)");
datamem_ext_i.datamem[13'hB13] =
datamem_swap[16'hB13];
datamem_ext_i.datamem[13'hB14] =
datamem_swap[16'hB14];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #137
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8CCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #137)");
    end
end

unit.assert_eq16(16'h8CCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #137 defb3dc8-d9ed-47a0-a126-6b914101fbf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #137 71f94243-1533-4e68-b4c7-d11bd379b5c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #137 19ceeffc-bcaf-4be9-9217-45c1858242d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #137 54077762-cd7c-425c-ab15-86225fa42e89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #137 897b7243-ab07-4a19-b188-b0ed222d5101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #137 1a34b29d-398b-40cf-b086-9a3ce74338eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #137 45c70cc6-c53a-4f28-9e6b-363e56b8edfe)");

unit.assert_eq8(8'hCB, datamem_ext_i.datamem[13'h969],
"EXT DMEM (Testcase #137 34de10eb-69ed-4cc8-94b0-6ac4c1771391)");
unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'h96A],
"EXT DMEM (Testcase #137 8b4329b4-df97-4461-b4a0-5826e3f92801)");
datamem_ext_i.datamem[13'h969] =
datamem_swap[16'h969];
datamem_ext_i.datamem[13'h96A] =
datamem_swap[16'h96A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #138
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #138)");
    end
end

unit.assert_eq16(16'h15BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #138 69e01023-b9d0-4f13-a1c1-2adf6d7673e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #138 cd5e1c8a-29c1-4044-8068-7777ce766dcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #138 1175724c-468e-476a-99a5-a19aaa695023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #138 b105aef8-a204-493f-8897-334af5fbca12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #138 7808f8b4-03d7-4cb6-a63f-407c84a459d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #138 e632422e-64a2-4536-a35e-a53f57c13e12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #138 d36e5354-16ef-4df1-9354-768bec121be3)");

unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'h9E6],
"EXT DMEM (Testcase #138 a0380940-9179-4b69-af9e-48938d1180c0)");
unit.assert_eq8(8'h15, datamem_ext_i.datamem[13'h9E7],
"EXT DMEM (Testcase #138 f189ba76-fea0-4973-ba56-5ff273200216)");
datamem_ext_i.datamem[13'h9E6] =
datamem_swap[16'h9E6];
datamem_ext_i.datamem[13'h9E7] =
datamem_swap[16'h9E7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #139
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEEC2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #139)");
    end
end

unit.assert_eq16(16'hEEC2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #139 38cfbf31-1df8-49c3-b330-1c2de4349a23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #139 afd9cd19-7e71-40fd-ac41-884bc269f3be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #139 29961c4b-0c2b-4159-aa14-4f0681b741fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #139 210cdb92-0dab-43e7-a8c4-5895ab76602f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #139 0415492e-8274-4aeb-9ab3-3fde65a1ca9b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #139 f662d40d-506c-463b-ba68-e02e4593c1e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #139 50bcf1a8-3c0c-4c22-9c6d-22607611a020)");

unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'h996],
"EXT DMEM (Testcase #139 b55fd2fd-5954-4172-b34b-1c3a49087e90)");
unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'h997],
"EXT DMEM (Testcase #139 25deaff6-52ae-46ef-8b5f-50b6dd01cd11)");
datamem_ext_i.datamem[13'h996] =
datamem_swap[16'h996];
datamem_ext_i.datamem[13'h997] =
datamem_swap[16'h997];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #140
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h87EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #140)");
    end
end

unit.assert_eq16(16'h87EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #140 cb975646-e19b-4ad9-af23-bd61f86f6635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #140 7e8a2d3e-282a-4386-8d9c-dc9abb0e3e07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #140 be55d3fc-5d0a-4ba1-af36-476e4c0c4eed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #140 a5b09b68-9080-4342-893c-8b21ee9f8913)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #140 d4ef31a3-ae8d-4cef-aca1-868e73ebddfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #140 d29d6e02-8a25-424a-9999-ffe1d6278130)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #140 08ea1335-a379-4115-85fe-a2b46d62bca2)");

unit.assert_eq8(8'hEB, datamem_ext_i.datamem[13'h67F],
"EXT DMEM (Testcase #140 f137b9a5-e431-4aba-b5fa-4691f952a806)");
unit.assert_eq8(8'h87, datamem_ext_i.datamem[13'h680],
"EXT DMEM (Testcase #140 b7ae1ae2-15be-4adf-b949-608630fd76be)");
datamem_ext_i.datamem[13'h67F] =
datamem_swap[16'h67F];
datamem_ext_i.datamem[13'h680] =
datamem_swap[16'h680];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #141
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9A36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #141)");
    end
end

unit.assert_eq16(16'h9A36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #141 ea7db7fd-6cae-48c3-b22a-d2e1b964b14e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #141 0519d0eb-abcf-4736-9dae-4d5956525756)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #141 e81c9d9f-2a58-4ed3-8508-cea45071101a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #141 99870305-5eef-49d7-b10c-61a890163029)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #141 6d76c9d5-aba4-485f-b92b-d735449bf750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #141 35392d75-4752-428a-8256-453129593203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #141 508eeb6e-dde4-4412-8900-a505ed7a26f5)");

unit.assert_eq8(8'h36, datamem_ext_i.datamem[13'h617],
"EXT DMEM (Testcase #141 3a6ed72d-60b2-4222-895b-812e2f0b277e)");
unit.assert_eq8(8'h9A, datamem_ext_i.datamem[13'h618],
"EXT DMEM (Testcase #141 24331a23-1172-41fd-b05a-b4e4c06b0f53)");
datamem_ext_i.datamem[13'h617] =
datamem_swap[16'h617];
datamem_ext_i.datamem[13'h618] =
datamem_swap[16'h618];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #142
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C3B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #142)");
    end
end

unit.assert_eq16(16'h3C3B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #142 d5ba015c-bdf6-4281-8410-6581ab178141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #142 73260a96-f718-433e-baa1-1be98780e3b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #142 e5d434c8-0dfa-4d6d-8274-d3134092e341)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #142 fed28458-5a27-4179-9824-eae8de1a20f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #142 44f75585-2da9-47c5-b0c7-ea8af11fb70f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #142 f38ca63c-d117-42c0-9f44-6ad1d68b1ba8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #142 64619bcf-e34f-42a0-a5c4-031560134b61)");

unit.assert_eq8(8'h3B, datamem_ext_i.datamem[13'h427],
"EXT DMEM (Testcase #142 f7fbd2a5-71fc-4f06-a3fa-58816ee40d89)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h428],
"EXT DMEM (Testcase #142 7ff08bd0-b46f-48c8-95e6-d40a53e50c52)");
datamem_ext_i.datamem[13'h427] =
datamem_swap[16'h427];
datamem_ext_i.datamem[13'h428] =
datamem_swap[16'h428];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #143
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #143)");
    end
end

unit.assert_eq16(16'hAB73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #143 fffe7467-259d-43f7-ac8d-a89c503db078)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #143 f41d0042-34da-4a35-8209-4e31bddccf98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #143 17e35899-6799-4559-a385-9f1599154ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #143 bb78d35d-897a-4a43-b2bf-887b262cff50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #143 9f68be13-1f3e-4ccb-ac41-03a6c3be8d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #143 d6e67d96-f0f4-43b8-9056-a28eeac3e398)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #143 0c59432e-5eb7-48d2-9823-efabe492e759)");

unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'h5BC],
"EXT DMEM (Testcase #143 cdda7cd7-735a-4161-959a-2d88e13e34cd)");
unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h5BD],
"EXT DMEM (Testcase #143 0c23969d-f31e-4c64-be95-5bfdacb1c6c9)");
datamem_ext_i.datamem[13'h5BC] =
datamem_swap[16'h5BC];
datamem_ext_i.datamem[13'h5BD] =
datamem_swap[16'h5BD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #144
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h60ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #144)");
    end
end

unit.assert_eq16(16'h60ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #144 5333edc8-479c-46bf-af49-6eb9987d848f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #144 69fc8107-70c7-44ca-bdab-5f37ba0f7e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #144 780f0cac-e61e-4032-90c8-562a3d561330)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #144 a6b76b15-d591-468f-87ea-904e5c27c163)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #144 2ebca50e-d2a3-4d08-9fcb-7ee33842a4e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #144 f63911f7-9a69-40db-befb-44d25b17be7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #144 853ee764-3264-45e8-b5e4-a6496fc691f9)");

unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'h524],
"EXT DMEM (Testcase #144 ef375a59-9a22-4e22-bc66-4ee0677c0752)");
unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'h525],
"EXT DMEM (Testcase #144 f3960fbc-0617-45ae-b4f1-ec4897c94cab)");
datamem_ext_i.datamem[13'h524] =
datamem_swap[16'h524];
datamem_ext_i.datamem[13'h525] =
datamem_swap[16'h525];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #145
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #145)");
    end
end

unit.assert_eq16(16'h3F5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #145 28cd743d-76b1-4b74-ac85-8dc090660615)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #145 d4956a28-2e82-4a21-882b-535aebfcf7a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #145 35a35b5b-fc4d-429d-9d94-cdfefb3309db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #145 8590f462-e012-4a5f-addb-b0176287fab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #145 637f5f5d-a250-4aad-92cd-62c76a4fd074)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #145 f6809848-6cb9-4ff3-877a-a9ba027a2452)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #145 8fe516a8-52ba-4285-90c8-5fa5307e235a)");

unit.assert_eq8(8'h5A, datamem_ext_i.datamem[13'h460],
"EXT DMEM (Testcase #145 453a5fe3-0839-4611-b3ee-ed2f3ed341ea)");
unit.assert_eq8(8'h3F, datamem_ext_i.datamem[13'h461],
"EXT DMEM (Testcase #145 4461466e-e4dc-40a6-830f-b86909aefa9c)");
datamem_ext_i.datamem[13'h460] =
datamem_swap[16'h460];
datamem_ext_i.datamem[13'h461] =
datamem_swap[16'h461];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #146
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h28A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #146)");
    end
end

unit.assert_eq16(16'h28A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #146 bde6b239-58a1-46b6-aa25-767edb1b9351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #146 fabb2b70-d25e-40b0-bb9e-a43a0da82f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #146 389ba2b7-d314-48c9-8e28-b3b268432d17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #146 d4f475ee-56db-4535-983d-89e31d2cdfbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #146 c2580a65-e301-45a4-a385-90d4211a23a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #146 fb867f97-0ec6-4bce-9754-301d506beca6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #146 cf276659-828c-4c8d-9e45-1f95c2bce631)");

unit.assert_eq8(8'hA2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF8],
"INT DMEM (Testcase #146 904d62be-f354-4b58-9d5c-03f71a360fea)");
unit.assert_eq8(8'h28, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF9],
"INT DMEM (Testcase #146 50cfab30-5ae1-4d72-b92f-45ee4a6ff802)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF8] =
datamem_swap[16'h1F8];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF9] =
datamem_swap[16'h1F9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #147
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7EE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #147)");
    end
end

unit.assert_eq16(16'h7EE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #147 394d1503-6aed-43f3-8f21-b1330f9d3fc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #147 3b04acf7-ec59-4bd5-a9e9-8886e6f01585)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #147 8d3a5e4f-f5ed-4869-8791-73f2e074b005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #147 a2ed5bb3-f53e-47ad-b4c3-5259b5bfddea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #147 524ea7e7-23d4-4b95-8758-0f8762bf11f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #147 c16b69cb-bba8-41bb-b1ea-c1714df7b425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #147 1fa853af-531f-450d-9d2c-22d692162df6)");

unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'h6F3],
"EXT DMEM (Testcase #147 2f03121f-7caa-4332-9cfa-5a09c04de3b5)");
unit.assert_eq8(8'h7E, datamem_ext_i.datamem[13'h6F4],
"EXT DMEM (Testcase #147 adf78469-041a-4711-823e-3cc72ba7e2ec)");
datamem_ext_i.datamem[13'h6F3] =
datamem_swap[16'h6F3];
datamem_ext_i.datamem[13'h6F4] =
datamem_swap[16'h6F4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #148
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0DD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #148)");
    end
end

unit.assert_eq16(16'h0DD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #148 57adb2f2-5b06-47dc-af9e-f057eaeafad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #148 cac713a9-dbec-4c96-87cf-a0113dd83e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #148 36985fee-03c8-46de-bd09-e8d74bdaffb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #148 b392e142-9360-4f08-ac31-671a3ed153ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #148 dccf68be-9b28-4372-9d2c-0d21b9d9d260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #148 a086894a-2424-419a-be05-554fd15f352a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #148 2b2ab62b-9334-49e2-ad17-f711dff0bdd3)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'h4E7],
"EXT DMEM (Testcase #148 b98cc553-ebc4-4b98-bf60-294c91bc6a34)");
unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'h4E8],
"EXT DMEM (Testcase #148 40dcf3fc-8fd1-4dbb-96d6-70cf8d50ff4a)");
datamem_ext_i.datamem[13'h4E7] =
datamem_swap[16'h4E7];
datamem_ext_i.datamem[13'h4E8] =
datamem_swap[16'h4E8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #149
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #149)");
    end
end

unit.assert_eq16(16'h8B94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #149 3b52e7c1-3ddf-41b2-807b-e54c4a8a125f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #149 8bc37c88-2f53-40cb-9332-d3e828428628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #149 513df5d4-8235-41df-84b9-41837c370450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #149 8ced4ba1-dd54-471f-926d-86631f93aaeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #149 593c49d7-ab2a-4975-85fd-eb496c915dbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #149 f858e29f-bd2b-4705-b9ad-c5080590ca24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #149 8b6683f8-cf6c-4b06-8084-107bb4cd39a1)");

unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'hE63],
"EXT DMEM (Testcase #149 81565755-31ce-4489-ba72-af07ced5739f)");
unit.assert_eq8(8'h8B, datamem_ext_i.datamem[13'hE64],
"EXT DMEM (Testcase #149 62269aa5-3f98-4189-923c-7d26372b1052)");
datamem_ext_i.datamem[13'hE63] =
datamem_swap[16'hE63];
datamem_ext_i.datamem[13'hE64] =
datamem_swap[16'hE64];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #150
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD91;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #150)");
    end
end

unit.assert_eq16(16'hDD91, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #150 711802fc-9fe4-4f67-b0a2-169460fff37c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #150 ea1fa049-94ad-4b8d-b380-b683d09bbcdd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #150 752473e4-3016-455b-9264-7b26c968ebd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #150 6ae0c2f7-0f21-4ef4-a161-c338a9fceae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #150 e272847c-db0d-4fce-bb5b-a754e1d8c011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #150 96f95262-f86b-41e2-91f7-728a235cf63f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #150 08b4237d-942b-4c30-80a2-288faaef2b9e)");

unit.assert_eq8(8'h91, datamem_ext_i.datamem[13'h42C],
"EXT DMEM (Testcase #150 d04dfc60-d8e1-4bbc-b921-b65cdb440e30)");
unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'h42D],
"EXT DMEM (Testcase #150 945e2cd8-9efb-43db-8ebc-90f73449e1bf)");
datamem_ext_i.datamem[13'h42C] =
datamem_swap[16'h42C];
datamem_ext_i.datamem[13'h42D] =
datamem_swap[16'h42D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #151
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D49;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #151)");
    end
end

unit.assert_eq16(16'h0D49, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #151 ee0ac771-402d-4127-a211-6c4574c38119)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #151 e16dd04a-e4bb-4860-b36a-972a91cae00b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #151 0094f792-fa3e-4878-9a99-b43f8d233b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #151 aaedab3f-3cd7-4c5b-9985-1c18fe9deab6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #151 5f21460e-31ef-49e7-a017-01397f2b5f32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #151 69894c1e-38fb-4f6e-a31b-f2729f4aece1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #151 533b9501-4bb5-4b34-9084-acd2b796e3b6)");

unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h3AA],
"EXT DMEM (Testcase #151 b0e90993-5e99-42ad-acf2-4850207f6624)");
unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'h3AB],
"EXT DMEM (Testcase #151 d41f9f35-9189-4354-b3ee-e354cb8f2181)");
datamem_ext_i.datamem[13'h3AA] =
datamem_swap[16'h3AA];
datamem_ext_i.datamem[13'h3AB] =
datamem_swap[16'h3AB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #152
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC38;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #152)");
    end
end

unit.assert_eq16(16'hCC38, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #152 be51ecc4-0db0-4062-93a1-7189878eef98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #152 80764976-e783-4d16-91d5-9e370b4ca273)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #152 2999a089-a007-46c9-83e0-0727283f6a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #152 cf19fb87-792c-4dd2-b333-e0706265f4e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #152 8e11aca5-feea-4611-8c1b-8390de7c13f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #152 7eed542b-e8cd-4abe-aa98-558a8777d04a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #152 e93b752a-e919-40f7-93d7-d023ef5584e6)");

unit.assert_eq8(8'h38, datamem_ext_i.datamem[13'hF0C],
"EXT DMEM (Testcase #152 61e49b37-6520-42a8-aa36-9dcef100a8b5)");
unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'hF0D],
"EXT DMEM (Testcase #152 6eb81b6d-da38-46af-89eb-9c86780bd5e9)");
datamem_ext_i.datamem[13'hF0C] =
datamem_swap[16'hF0C];
datamem_ext_i.datamem[13'hF0D] =
datamem_swap[16'hF0D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #153
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h23D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #153)");
    end
end

unit.assert_eq16(16'h23D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #153 70710f13-4352-4c10-8f31-60888722500b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #153 4a4b5384-a2a2-480a-a3bd-22d025187003)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #153 055bd01a-525f-429e-9b89-2d73bb265a58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #153 887639f6-7aa8-4794-9973-c55c6bb1e16f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #153 8f00fbac-01d3-420c-80ae-34846ce9aa34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #153 96251a67-89d4-42f5-9428-bb094995577a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #153 ba40983c-f105-4d5e-be74-9e82885d9b0d)");

unit.assert_eq8(8'hD8, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5F],
"INT DMEM (Testcase #153 8dbd22d9-7ea4-46c4-926c-2420f9abd922)");
unit.assert_eq8(8'h23, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h60],
"INT DMEM (Testcase #153 d30feb5d-2554-401a-b57f-b1a7c511e4af)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5F] =
datamem_swap[16'h5F];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h60] =
datamem_swap[16'h60];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #154
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #154)");
    end
end

unit.assert_eq16(16'hF1CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #154 18604644-05ce-4f54-bb24-70bbbc386d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #154 51a58b36-71b6-4a6b-b791-72d3187a480f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #154 e8a18588-4fb4-41bd-a679-70e00266e772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #154 f71bd62a-1926-4a63-86f4-da4839e657c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #154 0f987c44-5a8d-413e-9282-48c066d0d41b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #154 5ff97b4d-8a1e-480b-9a81-681911d759d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #154 e8053c9c-a59d-46d9-9ab2-49bdf129c677)");

unit.assert_eq8(8'hCF, datamem_ext_i.datamem[13'h936],
"EXT DMEM (Testcase #154 f45cafe4-932f-4b36-aacb-099a0671d627)");
unit.assert_eq8(8'hF1, datamem_ext_i.datamem[13'h937],
"EXT DMEM (Testcase #154 a3980fbf-b563-44c2-9f07-bb451e531c06)");
datamem_ext_i.datamem[13'h936] =
datamem_swap[16'h936];
datamem_ext_i.datamem[13'h937] =
datamem_swap[16'h937];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #155
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #155)");
    end
end

unit.assert_eq16(16'hAD8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #155 b3060cf2-f9ef-459e-91f4-8c44cfa251f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #155 f6a40521-3cfc-4194-8850-25a78892cb40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #155 6247cc42-2ad4-4e93-a7b8-33a070939e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #155 254e8bf4-8c74-4603-84c4-b699697b9e09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #155 3965ab54-d724-4193-aeee-49c051ef432a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #155 a32ae64a-aef5-428a-ad76-4059f8e2eebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #155 152676ff-bce8-4830-a2cf-b799e660f2ae)");

unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'h691],
"EXT DMEM (Testcase #155 86ce9b7c-0264-4664-af90-1029df476250)");
unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h692],
"EXT DMEM (Testcase #155 a13ad8fd-c9a7-4c78-983e-05f14d3c5c14)");
datamem_ext_i.datamem[13'h691] =
datamem_swap[16'h691];
datamem_ext_i.datamem[13'h692] =
datamem_swap[16'h692];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #156
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A4E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #156)");
    end
end

unit.assert_eq16(16'h7A4E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #156 a31c9713-11cc-4d96-9aab-7680e3a4696c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #156 bc581fd5-4c6a-49bf-a884-b45f74d034ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #156 d650231e-9b07-4d27-8662-bc58dc06decc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #156 f59afc69-0067-4a32-b9ab-1fe8a17581fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #156 9d3a6fc9-6770-4915-9a58-2b96ca3e056b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #156 576cfbf4-6581-4363-b60a-1d9c2653d7e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #156 fe27bfd1-8ca9-466e-9677-5646811ba551)");

unit.assert_eq8(8'h4E, datamem_ext_i.datamem[13'h69C],
"EXT DMEM (Testcase #156 8d85b13e-bd5f-41a7-b1bd-632e5d80e3e8)");
unit.assert_eq8(8'h7A, datamem_ext_i.datamem[13'h69D],
"EXT DMEM (Testcase #156 aca8cdda-c35f-49dc-9c83-100243c590bb)");
datamem_ext_i.datamem[13'h69C] =
datamem_swap[16'h69C];
datamem_ext_i.datamem[13'h69D] =
datamem_swap[16'h69D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #157
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #157)");
    end
end

unit.assert_eq16(16'h2E10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #157 9f0ef12b-e689-4499-8fdd-fdd53b7b49e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #157 d4b4f29c-c183-4c93-b45e-b39e24727fd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #157 66eab3f3-56b6-48c7-abb7-a6096fdb8ae8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #157 7075e298-780d-42c5-b384-5fab4178d70c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #157 f5481301-5bb4-47a5-942e-34f78af8d26e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #157 7c2fe80f-b81d-4788-8f73-80f81341ce95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #157 abdd52a7-5385-4e1b-9dce-d49361a49636)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'h743],
"EXT DMEM (Testcase #157 c7638ad8-1062-4f3d-9dd5-94fc896c7137)");
unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'h744],
"EXT DMEM (Testcase #157 a581cda0-b467-4b17-863d-3041978eb1de)");
datamem_ext_i.datamem[13'h743] =
datamem_swap[16'h743];
datamem_ext_i.datamem[13'h744] =
datamem_swap[16'h744];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #158
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4013;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #158)");
    end
end

unit.assert_eq16(16'h4013, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #158 8f370e32-2589-4858-be0e-6932e5a8ae0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #158 0bfcd63e-2a00-4b7c-a942-959384e83ce8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #158 e499d7b4-dafb-4fea-b107-b9cc60609ad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #158 2967b038-0eee-49be-8365-9425c8107822)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #158 0b100fd7-fb1c-4bf7-a447-6e5e8a21c646)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #158 68130435-24d1-4820-96af-dbc7dc08fb78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #158 ea906164-6153-474f-9841-aeb3767211a1)");

unit.assert_eq8(8'h13, datamem_ext_i.datamem[13'hCB4],
"EXT DMEM (Testcase #158 977b44a3-f551-438d-b75c-1d9601bf9e59)");
unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'hCB5],
"EXT DMEM (Testcase #158 09090a87-994a-4cd1-8e4a-6a22661792d1)");
datamem_ext_i.datamem[13'hCB4] =
datamem_swap[16'hCB4];
datamem_ext_i.datamem[13'hCB5] =
datamem_swap[16'hCB5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #159
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA777;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #159)");
    end
end

unit.assert_eq16(16'hA777, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #159 95fdf047-bec5-4443-bd79-1f57f3781d38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #159 9afdf684-cdf1-4db2-b31b-517e181909d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #159 708488f6-b950-4671-8d05-2a11d55f2383)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #159 4d385548-be5e-4aa1-877d-90075fde92ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #159 5c18841d-2625-4b97-88e8-2cf91a410088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #159 55906f9c-5274-4821-851e-20712be40d50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #159 70c75542-4295-45c2-b449-b912666e8e06)");

unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'hFDE],
"EXT DMEM (Testcase #159 60bd649d-697d-4e69-b73e-e1ad998d80f8)");
unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'hFDF],
"EXT DMEM (Testcase #159 8566d5b5-4b58-4ac1-b4b6-986a0de6ab8d)");
datamem_ext_i.datamem[13'hFDE] =
datamem_swap[16'hFDE];
datamem_ext_i.datamem[13'hFDF] =
datamem_swap[16'hFDF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #160
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #160)");
    end
end

unit.assert_eq16(16'hAD04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #160 402fbacc-8c84-498a-a92c-a07ac5349ffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #160 a48994be-d0af-499b-a9dd-e34d8aa85adf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #160 0da68470-175b-41ac-a26e-fd1987c15bef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #160 db78d4d2-ae52-4e37-8ce3-af6b10a989e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #160 dd16875a-6ad1-4913-a6cc-b44cb159fc2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #160 6f24ea6e-84e9-49e9-a1f0-25376d37b559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #160 495b60bc-9ff3-4155-a883-88ae36d66cc1)");

unit.assert_eq8(8'h04, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC4],
"INT DMEM (Testcase #160 12612c8e-8b4e-4c2c-8da8-91000471ab32)");
unit.assert_eq8(8'hAD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC5],
"INT DMEM (Testcase #160 73412955-97c0-4c74-b2db-3f8cf444892c)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC4] =
datamem_swap[16'hC4];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC5] =
datamem_swap[16'hC5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #161
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7DBE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #161)");
    end
end

unit.assert_eq16(16'h7DBE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #161 2cbc4229-4155-4cdd-84ff-6ffb18d91fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #161 a955b526-08ca-46ce-938c-c924eca41b9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #161 a1064864-f023-43fd-9395-616fb3ca5565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #161 f81a9ef7-e459-4f14-80d9-67dd300ad38d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #161 9d05493d-a38a-4bcb-9eeb-0ab7500877c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #161 62a8b832-56b2-4c38-bbfc-d96d00723c53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #161 9a547356-abef-465a-a1a0-f154de59aae3)");

unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'h652],
"EXT DMEM (Testcase #161 feffa1f4-c2b4-4618-b035-e355b9fac25d)");
unit.assert_eq8(8'h7D, datamem_ext_i.datamem[13'h653],
"EXT DMEM (Testcase #161 e3852e95-2032-4d18-9a3d-cce1b1b271b0)");
datamem_ext_i.datamem[13'h652] =
datamem_swap[16'h652];
datamem_ext_i.datamem[13'h653] =
datamem_swap[16'h653];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #162
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #162)");
    end
end

unit.assert_eq16(16'hD9A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #162 be1db0e7-d1b0-4bbc-8b58-d86775df289d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #162 a42e96e4-a77e-4147-8480-4d559b6da24d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #162 4eb4314a-6a06-486d-9c45-1ebb4c6fdf28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #162 9486490b-e431-4cf9-a49a-416e202a7583)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #162 5f9a840b-7847-40e5-a255-fbe486cf464f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #162 eec3cd90-bf7d-47ff-bbb8-925e96456810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #162 7428092b-ddf1-482c-9f99-ddbf1fda6342)");

unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'h71F],
"EXT DMEM (Testcase #162 aae843ae-c43e-472f-b8bf-a0e9c9d67f38)");
unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'h720],
"EXT DMEM (Testcase #162 bfed50c2-c330-4243-b1a0-f09171ee8e84)");
datamem_ext_i.datamem[13'h71F] =
datamem_swap[16'h71F];
datamem_ext_i.datamem[13'h720] =
datamem_swap[16'h720];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #163
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #163)");
    end
end

unit.assert_eq16(16'hD3DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #163 eb7ec51d-5fda-4e06-a87a-6742e25d916a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #163 a9e719dc-65a9-4e42-aeb3-1fd95fff776b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #163 0f55a5b4-4c75-433e-b7c5-aa93924bda2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #163 0c81417a-764c-4c4d-a889-131acebede1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #163 b059df53-3d0b-4e67-8242-ae744547df0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #163 44161396-809e-4760-88de-35c407ab4ca8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #163 3a8cb4f8-9892-4262-bda5-eb0d0019a0f7)");

unit.assert_eq8(8'hDB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h97],
"INT DMEM (Testcase #163 37277654-5b75-4af0-9305-807d8662cb65)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h98],
"INT DMEM (Testcase #163 c0fe818f-9c4b-4579-be38-b6b2b80c0816)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h97] =
datamem_swap[16'h97];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h98] =
datamem_swap[16'h98];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #164
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7DEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #164)");
    end
end

unit.assert_eq16(16'h7DEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #164 a64eaab7-fb2d-4497-bb67-94533ef7cd33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #164 c7c24967-4b93-4899-b522-2a8b42220918)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #164 c750cfb6-c9e3-4765-b661-267e33cc3810)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #164 ecdab7de-bfa7-4a8f-b402-b12a1ceb1c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #164 ce71e373-5d9f-4f74-b3c4-a2cc0237bccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #164 83d186c1-7d8b-47c6-a7cd-b4c872c7b6c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #164 28ad8787-cf2c-454b-a234-16d8f9890b47)");

unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'hDFA],
"EXT DMEM (Testcase #164 94c369e4-bf0d-433c-89fc-ed20c153e0ff)");
unit.assert_eq8(8'h7D, datamem_ext_i.datamem[13'hDFB],
"EXT DMEM (Testcase #164 305145c5-8e17-4696-abfa-e02eadf04aa6)");
datamem_ext_i.datamem[13'hDFA] =
datamem_swap[16'hDFA];
datamem_ext_i.datamem[13'hDFB] =
datamem_swap[16'hDFB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #165
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3399;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #165)");
    end
end

unit.assert_eq16(16'h3399, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #165 a663cda1-a6a8-41c9-871d-57f3a30d4856)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #165 c19321bd-e9d8-4ede-8a54-c8660be0663d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #165 fe611d4d-5b50-41c8-8cb3-ceea57211bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #165 059d9b5e-1c52-49d1-91e5-e8498c965169)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #165 c72a0df2-e409-49df-bf66-0bbf1570c9c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #165 2e8d4a4b-27e0-446e-ac35-46b2067bbf0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #165 4718661d-ecdc-4149-a390-42b93d7cf5c2)");

unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'h72C],
"EXT DMEM (Testcase #165 e8e5b970-4a39-4a70-8a04-723976095834)");
unit.assert_eq8(8'h33, datamem_ext_i.datamem[13'h72D],
"EXT DMEM (Testcase #165 63eccf01-8e66-4c7c-935c-e45235abb33d)");
datamem_ext_i.datamem[13'h72C] =
datamem_swap[16'h72C];
datamem_ext_i.datamem[13'h72D] =
datamem_swap[16'h72D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #166
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h15E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #166)");
    end
end

unit.assert_eq16(16'h15E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #166 f1173df9-ed09-4dcf-b738-e62d13bfa84d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #166 aafaa8f0-489d-48d6-8845-ffe03b5ef6fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #166 c6dec2fd-c7d9-4e2a-9169-68b5d1e66e15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #166 6b077096-1763-4658-b8d9-27efc27e443e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #166 992e7583-cc51-4356-bd75-5e7febe6af93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #166 b0cd1969-8f7d-4cd0-a8af-c103e9cb9fff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #166 8149a691-cfa6-4372-b964-176dbe23d418)");

unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'h992],
"EXT DMEM (Testcase #166 2e15e6ac-c91f-4f01-a8d6-f281e52a8018)");
unit.assert_eq8(8'h15, datamem_ext_i.datamem[13'h993],
"EXT DMEM (Testcase #166 367edce3-116b-4d11-b30a-d4b31c5f172b)");
datamem_ext_i.datamem[13'h992] =
datamem_swap[16'h992];
datamem_ext_i.datamem[13'h993] =
datamem_swap[16'h993];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #167
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h39B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #167)");
    end
end

unit.assert_eq16(16'h39B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #167 8b1eec88-b4f1-475b-9a06-496a2b03f6a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #167 812dbeba-7374-4cbb-9d17-ba333c29c423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #167 7643df4c-875a-4e6a-a132-b8bd5c2e28e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #167 262f787f-0a6a-4e88-bb36-2971ace20977)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #167 74254a69-86f3-424a-8589-82779fdf7bca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #167 7241d057-0d08-46d1-9881-eac89f115a9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #167 ff673984-5964-4464-b2a7-cfe4b8f1a50a)");

unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'h24A],
"EXT DMEM (Testcase #167 7a75d0fb-359a-4505-ab1c-cb555a61a0cf)");
unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'h24B],
"EXT DMEM (Testcase #167 c1b03b48-8216-4f57-9b7a-85912e90e9fc)");
datamem_ext_i.datamem[13'h24A] =
datamem_swap[16'h24A];
datamem_ext_i.datamem[13'h24B] =
datamem_swap[16'h24B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #168
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h74D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #168)");
    end
end

unit.assert_eq16(16'h74D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #168 2ffea5c3-e434-4171-bdd4-65a00a405928)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #168 d835f578-c1de-4960-a7d1-1b20f48e6f7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #168 1dbb8487-5be0-4ed6-998e-5318ed66c67f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #168 fb00d39e-dfdc-4c5a-a062-6499412f66a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #168 57f6c77c-e578-44bc-b718-f0be65f4bccc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #168 1898981d-a451-4be3-a048-25bebd31d3be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #168 ad99b1bc-689a-442e-a3b4-596348e03e37)");

unit.assert_eq8(8'hD5, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA7],
"INT DMEM (Testcase #168 61615d7d-6489-464c-be73-35258e31c9eb)");
unit.assert_eq8(8'h74, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA8],
"INT DMEM (Testcase #168 95deea10-02e8-4962-8413-ba75be05caeb)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA7] =
datamem_swap[16'hA7];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA8] =
datamem_swap[16'hA8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #169
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4228;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #169)");
    end
end

unit.assert_eq16(16'h4228, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #169 6feae966-68cb-4985-a4da-309394b5c17d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #169 02ae42ce-f58a-4550-8fc5-08864a4c5ffd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #169 efe62d5f-a679-4f47-b2cb-bfe94e53b0fc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #169 27c1ecda-8a1c-46c7-8f84-fb99726edb8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #169 d9c44937-3edd-4685-bb29-373ee99b3001)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #169 e6fa5945-c6df-44d3-9797-7bc4155ba0ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #169 e6ba8956-bddb-46d2-871c-5d9f25840f7c)");

unit.assert_eq8(8'h28, datamem_ext_i.datamem[13'hB18],
"EXT DMEM (Testcase #169 cd8c4623-594d-4721-8799-84461d194c85)");
unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'hB19],
"EXT DMEM (Testcase #169 a1684a73-2ade-4b61-840a-7f5c57d6aa00)");
datamem_ext_i.datamem[13'hB18] =
datamem_swap[16'hB18];
datamem_ext_i.datamem[13'hB19] =
datamem_swap[16'hB19];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #170
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h510F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #170)");
    end
end

unit.assert_eq16(16'h510F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #170 b4bf3a3b-681d-4351-ba7f-c939d2f2b16b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #170 040024a9-c3ab-43c5-924e-07213677b630)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #170 2136c76b-84fe-4ee7-be64-c12bb245973e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #170 c3438934-8a8b-47a2-83e6-4d6bc9e73bb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #170 a896f4a6-0587-4ceb-a9e1-512446124c6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #170 97b99b43-69a9-487b-9011-51120fbcfad8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #170 7fca5c7f-fcab-452a-857b-c9e1a81c1f11)");

unit.assert_eq8(8'h0F, datamem_ext_i.datamem[13'hC70],
"EXT DMEM (Testcase #170 7276320f-57e9-4795-92e2-7cacc85d07ca)");
unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'hC71],
"EXT DMEM (Testcase #170 1a2b6416-211b-4603-ab31-d0c305879d7c)");
datamem_ext_i.datamem[13'hC70] =
datamem_swap[16'hC70];
datamem_ext_i.datamem[13'hC71] =
datamem_swap[16'hC71];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #171
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #171)");
    end
end

unit.assert_eq16(16'hFA53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #171 7dd089a4-4583-4451-aa2f-0ff294f8b9a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #171 89f96984-12c8-4bb4-9cf7-2f724477cb97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #171 56eab841-4c05-47f8-a4fd-073ed24ad964)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #171 cdc386e2-5ac6-460c-9782-2a9a6317f15c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #171 0223bea7-80e0-494d-9bc5-8297b3e19fbc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #171 87551517-0faa-4454-a056-78474e5c6bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #171 7f3d4105-a139-42b0-a20e-93d91413134e)");

unit.assert_eq8(8'h53, datamem_ext_i.datamem[13'h674],
"EXT DMEM (Testcase #171 b1c5f0b1-8660-4fdd-89e2-1470ff622e60)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'h675],
"EXT DMEM (Testcase #171 d8140e8f-7849-4c9a-b690-04932d72d52d)");
datamem_ext_i.datamem[13'h674] =
datamem_swap[16'h674];
datamem_ext_i.datamem[13'h675] =
datamem_swap[16'h675];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #172
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #172)");
    end
end

unit.assert_eq16(16'hEB2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #172 9ad5a843-f123-4fba-a01b-1f86b4548359)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #172 f8a537fe-0f40-4412-850c-3915f2ddc4fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #172 a34eb605-65a5-47fe-926d-45fad8cd084e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #172 4e6db405-5202-49cb-95ce-86c5f7383ff1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #172 3cb9cba2-ca40-4852-bee4-aca11db53b57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #172 20cb360a-df79-45c2-96e4-c923970fdf7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #172 d5a8752f-0cb0-4274-8afd-b1d269c4f799)");

unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'hDC7],
"EXT DMEM (Testcase #172 d1750895-3b83-4217-a2d8-510a4ff3861b)");
unit.assert_eq8(8'hEB, datamem_ext_i.datamem[13'hDC8],
"EXT DMEM (Testcase #172 72e7e9d8-86d8-4882-91d7-8759b023cf82)");
datamem_ext_i.datamem[13'hDC7] =
datamem_swap[16'hDC7];
datamem_ext_i.datamem[13'hDC8] =
datamem_swap[16'hDC8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #173
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3269;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #173)");
    end
end

unit.assert_eq16(16'h3269, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #173 52aa9d40-a44d-4641-b7e7-bcabdc1d63d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #173 5ce9b52d-4e18-4653-9da2-8a2f78b053d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #173 132f0514-61fe-4bcd-8bca-7f6f934d294e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #173 9f397bba-0bd5-4c0a-b938-ac66ccbf64ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #173 3a0239ed-8015-445b-8816-1619b94898c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #173 0cd35516-caac-421f-8379-4e64df496707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #173 543d2261-660b-4cfd-ae26-6003e9d26470)");

unit.assert_eq8(8'h69, datamem_ext_i.datamem[13'h73D],
"EXT DMEM (Testcase #173 07a12f5c-fd75-4bd7-8482-c040b9752f15)");
unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'h73E],
"EXT DMEM (Testcase #173 d0b1b3e2-1cff-4cb8-beee-dcf655a37f05)");
datamem_ext_i.datamem[13'h73D] =
datamem_swap[16'h73D];
datamem_ext_i.datamem[13'h73E] =
datamem_swap[16'h73E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #174
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4B45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #174)");
    end
end

unit.assert_eq16(16'h4B45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #174 9e86b396-2872-4bcd-9abb-d501382e12e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #174 b4fe7294-888a-41f5-9519-8b200b86688e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #174 d2ce2171-b247-41da-b443-be54d2d7aa1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #174 b8e4057b-41b2-4fc5-ae96-86ee6848cd08)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #174 c2e3f124-b52b-4ef4-ba1e-11765b65a083)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #174 ea68a3bf-2dbf-4345-a081-7714464567c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #174 d1dbf257-7b99-4616-b6e6-4f42b28c5bea)");

unit.assert_eq8(8'h45, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hBD],
"INT DMEM (Testcase #174 f18a8734-944b-47f6-96ea-c7aa1adeb0b4)");
unit.assert_eq8(8'h4B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hBE],
"INT DMEM (Testcase #174 47421fbc-1d53-4ca2-b3c2-350c1b0e7b36)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hBD] =
datamem_swap[16'hBD];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hBE] =
datamem_swap[16'hBE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #175
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h234C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #175)");
    end
end

unit.assert_eq16(16'h234C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #175 c61e2d5b-bd57-4614-bf12-3398f393ed54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #175 222a27a8-d2bf-4cda-96bc-aa42db37f7b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #175 39cd0187-5ec1-419d-ace9-eeda67e1458c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #175 41965fbf-336a-4b36-8211-ce58d7257cd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #175 a60a9d06-1140-4034-bf44-d76de0434ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #175 e6336a4a-d578-4cff-aea7-220548af8e1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #175 8b66d9c0-f435-43fc-9a8c-acae29a56a02)");

unit.assert_eq8(8'h4C, datamem_ext_i.datamem[13'h4BE],
"EXT DMEM (Testcase #175 151a4953-e26a-4b78-9c3a-f3d4c75b9d93)");
unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'h4BF],
"EXT DMEM (Testcase #175 c9db5c48-a72b-4b42-b99f-04e4681a3de0)");
datamem_ext_i.datamem[13'h4BE] =
datamem_swap[16'h4BE];
datamem_ext_i.datamem[13'h4BF] =
datamem_swap[16'h4BF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #176
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #176)");
    end
end

unit.assert_eq16(16'h3B40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #176 f6e6a738-9089-4fe2-9966-6e5d8081d08b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #176 d489dfe5-37d5-42df-aaaa-c56896bbb56a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #176 cefdfa0e-9e6e-4323-bec0-5170eba6d219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #176 d4dda8d3-c0a5-482c-917a-3a34596a22be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #176 8495c32e-8ad8-410a-90b3-3ac62ff294ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #176 0a23d2af-ee37-4a0d-9430-d9f791c9904e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #176 bd436394-d80f-475d-afd3-d85085e8200e)");

unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'h8AF],
"EXT DMEM (Testcase #176 0b389533-5a33-4022-b3c4-01f58d3668fa)");
unit.assert_eq8(8'h3B, datamem_ext_i.datamem[13'h8B0],
"EXT DMEM (Testcase #176 3b909dd1-05fb-4662-9e29-7d7ad3795da9)");
datamem_ext_i.datamem[13'h8AF] =
datamem_swap[16'h8AF];
datamem_ext_i.datamem[13'h8B0] =
datamem_swap[16'h8B0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #177
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4FA0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #177)");
    end
end

unit.assert_eq16(16'h4FA0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #177 05ce66b4-7048-4677-b195-24c40c5a0a7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #177 5b521a8c-d3b5-4c94-beb8-b48d08297b66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #177 6f7fc83d-1f70-4a43-b2e8-58e6274432be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #177 6fa01e3f-f273-40ff-952b-793214821635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #177 bb253439-5ff2-4ba7-8f03-2c1caad20052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #177 1b02601a-a41c-4a3c-905c-3b42accb4953)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #177 f7d08a1c-3d2a-45fc-8664-9454cd50a9c4)");

unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'h401],
"EXT DMEM (Testcase #177 30d8ba29-968e-4a84-901f-192d31e1fa74)");
unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'h402],
"EXT DMEM (Testcase #177 ae4287b5-70f1-4e47-99bd-ab505fe42011)");
datamem_ext_i.datamem[13'h401] =
datamem_swap[16'h401];
datamem_ext_i.datamem[13'h402] =
datamem_swap[16'h402];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #178
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB6E3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #178)");
    end
end

unit.assert_eq16(16'hB6E3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #178 15e91125-e9c1-4abf-ab22-5aadb5154a78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #178 66349af1-5f59-4f43-ba69-befbcddf1774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #178 1693d47f-c9a9-4862-a5bd-d629b5075004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #178 3889b492-74ef-4736-9244-1b49e350ccad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #178 18f6f17b-047a-4765-a2fb-8439ad50134d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #178 498f6b35-79e1-410c-a43f-ab708e559481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #178 35ec2d58-09c4-40ea-be15-b35e21c0d881)");

unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'hA0B],
"EXT DMEM (Testcase #178 43468ace-b199-4dd2-806e-cd3c8a78550b)");
unit.assert_eq8(8'hB6, datamem_ext_i.datamem[13'hA0C],
"EXT DMEM (Testcase #178 0a10cc18-05fc-4db0-8466-fe421787de2f)");
datamem_ext_i.datamem[13'hA0B] =
datamem_swap[16'hA0B];
datamem_ext_i.datamem[13'hA0C] =
datamem_swap[16'hA0C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #179
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h886C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #179)");
    end
end

unit.assert_eq16(16'h886C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #179 4a905462-d2ef-4fe0-b989-af2c7ab43d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #179 1ac76220-be80-4af7-b8f3-8cefaf22233a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #179 e434c3a5-bf7b-483f-a526-ac59a52fccce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #179 1b7e1b6d-79d1-4ef4-973f-100c487f20e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #179 60b41502-390e-48cb-9818-e002d591e304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #179 b58c6ecd-4150-43c3-9bc0-2e134a89f441)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #179 c2e726e4-b9b9-4536-b9a9-7db734394577)");

unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'hC6B],
"EXT DMEM (Testcase #179 3d9d84a3-2776-4327-bd89-d50d24b13cba)");
unit.assert_eq8(8'h88, datamem_ext_i.datamem[13'hC6C],
"EXT DMEM (Testcase #179 caa6a728-f890-426e-bb90-ee54c3730e1c)");
datamem_ext_i.datamem[13'hC6B] =
datamem_swap[16'hC6B];
datamem_ext_i.datamem[13'hC6C] =
datamem_swap[16'hC6C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #180
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #180)");
    end
end

unit.assert_eq16(16'hD3F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #180 7fc032ac-5ca0-480c-bbc0-d25b2826a88b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #180 d1e83760-6c5d-4de8-a881-c6e3e4602b1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #180 83b70169-de1d-4317-b023-291bc2de5fd0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #180 d5c7781a-396b-4669-af05-12b9bf9a36f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #180 3785e8b8-447e-4004-b9a2-037cd63924a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #180 cb73625c-3463-415a-9354-3fd8812c57a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #180 406b4b82-daaf-4f1d-bb81-72c716b72a03)");

unit.assert_eq8(8'hF5, datamem_ext_i.datamem[13'h470],
"EXT DMEM (Testcase #180 46da9948-124d-456f-ae79-76350c4c0678)");
unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h471],
"EXT DMEM (Testcase #180 f2b17a56-eba3-4aca-b53c-738335aa01a3)");
datamem_ext_i.datamem[13'h470] =
datamem_swap[16'h470];
datamem_ext_i.datamem[13'h471] =
datamem_swap[16'h471];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #181
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1451;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #181)");
    end
end

unit.assert_eq16(16'h1451, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #181 0c57dfee-6b45-4bee-af9e-3456778404b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #181 6f46df77-3b29-4393-b965-2093a728fcc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #181 0e19c7e4-07b1-412b-b529-c7d127f8a9d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #181 03004b00-ed35-42d1-be91-57a5e186fc35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #181 830f019a-16e4-4418-906d-d08bec736759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #181 99552f80-b011-44e0-b36a-9aef335fccda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #181 38efb883-b360-48fd-9148-9dae5ef06c0b)");

unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'h594],
"EXT DMEM (Testcase #181 1284d02e-4353-45da-a82d-383b449114c5)");
unit.assert_eq8(8'h14, datamem_ext_i.datamem[13'h595],
"EXT DMEM (Testcase #181 02e21184-643f-4d48-b6a5-beae05dcf009)");
datamem_ext_i.datamem[13'h594] =
datamem_swap[16'h594];
datamem_ext_i.datamem[13'h595] =
datamem_swap[16'h595];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #182
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD813;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #182)");
    end
end

unit.assert_eq16(16'hD813, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #182 0b6022c2-57d7-4592-bc67-5fa513d3430d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #182 b6ba1795-a7d5-4e96-a657-a1246ce76b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #182 094a6a42-f7cc-483e-b3a5-51e1466ce8e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #182 9ea8b1c6-0c05-46a2-a19f-ea83c765e6bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #182 cc408d44-9e6e-472b-9c6c-af2be65767c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #182 74a28f00-e79e-4592-9b53-f91149e79c4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #182 f942c60c-cfe8-4341-bb22-5b9d709a9694)");

unit.assert_eq8(8'h13, datamem_ext_i.datamem[13'hE6E],
"EXT DMEM (Testcase #182 f350aff8-3cae-49e5-8187-218a8c6dcb24)");
unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'hE6F],
"EXT DMEM (Testcase #182 9b97b831-587e-4a34-83fd-81af544384ff)");
datamem_ext_i.datamem[13'hE6E] =
datamem_swap[16'hE6E];
datamem_ext_i.datamem[13'hE6F] =
datamem_swap[16'hE6F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #183
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h96BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #183)");
    end
end

unit.assert_eq16(16'h96BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #183 274f1d28-3abf-4ad5-b510-3422ac05891f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #183 c1c87798-b110-42b7-882d-f9caba7328d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #183 ce36a55b-737b-4f71-88c0-9faab5f8f4f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #183 8c40f675-1a5b-4648-8a54-e1bfd5dcb914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #183 1a607b76-fb85-482d-bd30-8effc000e9fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #183 ba57ee23-5e8e-4dde-af2f-f8fb9585648e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #183 dd7a4e55-ceab-402f-abbd-aabf90a8c621)");

unit.assert_eq8(8'hBE, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAC],
"INT DMEM (Testcase #183 89f303a4-107e-4321-a419-1f42cde8f812)");
unit.assert_eq8(8'h96, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAD],
"INT DMEM (Testcase #183 ca9f4dc3-1df2-4bec-a572-0dfecc237e19)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAC] =
datamem_swap[16'hAC];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAD] =
datamem_swap[16'hAD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #184
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFAD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #184)");
    end
end

unit.assert_eq16(16'hFAD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #184 b91d1583-7384-4650-8a4c-95125f9d37bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #184 d2de36a3-47a9-4b18-93c9-6822389323ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #184 3ce281c2-2754-4106-bb1e-d7f7d9862f58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #184 56e6c485-3ccc-4596-9230-bd3b225a66a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #184 bc78f09c-1fb7-4e68-bcf7-0d2f8944802c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #184 a3bfeb53-b425-46c6-8382-46bf1320338f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #184 279c9da0-759d-4a47-98fd-b4653efc0146)");

unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'hE79],
"EXT DMEM (Testcase #184 dd401fc2-1328-44af-a2c1-6e5fb3739ba1)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hE7A],
"EXT DMEM (Testcase #184 bfc96f22-7034-4208-94bb-fa9686826898)");
datamem_ext_i.datamem[13'hE79] =
datamem_swap[16'hE79];
datamem_ext_i.datamem[13'hE7A] =
datamem_swap[16'hE7A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #185
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5B55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #185)");
    end
end

unit.assert_eq16(16'h5B55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #185 e0a0b647-9c92-4066-a83b-44c18e2f3665)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #185 74f32923-8703-4bcc-ac0e-ee25ccebbbd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #185 1f6eb67d-3ff2-49e5-8ebb-e3f374fbce80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #185 bceb0691-e93a-4bfc-9cdc-9cf2c00e81d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #185 993d76b7-fc9d-4ae0-968b-0ff008e15f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #185 9ca052b3-b667-423f-9598-ed7846cb7a12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #185 d70c5344-d441-4026-8e18-0aa1908317d5)");

unit.assert_eq8(8'h55, datamem_ext_i.datamem[13'hD56],
"EXT DMEM (Testcase #185 8c843be0-366b-4201-987f-a8a376005e27)");
unit.assert_eq8(8'h5B, datamem_ext_i.datamem[13'hD57],
"EXT DMEM (Testcase #185 8645c946-fa41-4a10-a6c6-c5a557f940df)");
datamem_ext_i.datamem[13'hD56] =
datamem_swap[16'hD56];
datamem_ext_i.datamem[13'hD57] =
datamem_swap[16'hD57];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #186
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF3A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #186)");
    end
end

unit.assert_eq16(16'hF3A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #186 b7554cc3-8c98-4de6-b199-d2ca4df225c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #186 aad8b486-a244-41b1-b62d-41a2f2bb2795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #186 53dbf4b1-16f7-4bd5-a361-f0d7c1c72adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #186 7e941088-4d56-4877-baf5-f3e2c0d4f9d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #186 222c3522-7599-46b8-acf3-830a542f17db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #186 a75addbf-b57a-41dc-8709-1b2ff9ff40d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #186 8d60317a-8547-4451-a997-ae6cad259aae)");

unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'h7E7],
"EXT DMEM (Testcase #186 f8337002-18d2-4593-96d8-465149581830)");
unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'h7E8],
"EXT DMEM (Testcase #186 31f32822-d747-4f7e-ac54-3854b1ab037b)");
datamem_ext_i.datamem[13'h7E7] =
datamem_swap[16'h7E7];
datamem_ext_i.datamem[13'h7E8] =
datamem_swap[16'h7E8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #187
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFAED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #187)");
    end
end

unit.assert_eq16(16'hFAED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #187 b7a937ae-0306-4af6-b680-fde32bf89fd4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #187 4ceaa1b9-2f15-4813-a903-95b4563d4d85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #187 07ef1d40-8ffa-4848-9c4b-8b39e4f6db9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #187 091b84b6-3a95-498b-88a0-2094fc64704a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #187 539435be-960f-435b-9e03-bf57bb89b35e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #187 9f4ac818-e0d7-4295-bd96-04713f8b49f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #187 53721635-b198-4af0-9e3a-72f95b878cc7)");

unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'hCE3],
"EXT DMEM (Testcase #187 6294a667-77dd-4176-88e2-c406a401ac79)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hCE4],
"EXT DMEM (Testcase #187 be189ed9-0ea8-4b7d-a6e9-a86a67851212)");
datamem_ext_i.datamem[13'hCE3] =
datamem_swap[16'hCE3];
datamem_ext_i.datamem[13'hCE4] =
datamem_swap[16'hCE4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #188
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #188)");
    end
end

unit.assert_eq16(16'h2A62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #188 0759d55d-b9f6-4339-87a5-762e3936d7ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #188 6ca713c8-f5ca-47a9-8cdf-4299370d0f0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #188 719fa7b1-7f8f-4a93-b154-e220443eacfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #188 9989aba8-1c64-40a0-a8aa-00e856a2ae0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #188 40164f77-f0e6-44f9-8e05-1002709dd23f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #188 5bc65949-70ff-4489-890c-6e89fddf080e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #188 86bde8c1-2bf4-470d-932d-0d364af78823)");

unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'h511],
"EXT DMEM (Testcase #188 d1445f01-89a2-4675-8fe3-95f37eb5b8da)");
unit.assert_eq8(8'h2A, datamem_ext_i.datamem[13'h512],
"EXT DMEM (Testcase #188 49226e8a-3c2a-4d5c-ad81-eea1ed9f00fa)");
datamem_ext_i.datamem[13'h511] =
datamem_swap[16'h511];
datamem_ext_i.datamem[13'h512] =
datamem_swap[16'h512];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #189
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC63E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #189)");
    end
end

unit.assert_eq16(16'hC63E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #189 a6a76546-14ad-4dc9-86be-3265badb59cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #189 978c7f1b-6bf7-479b-bb4e-87f58edda274)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #189 4fdcc2a9-7c04-4cb4-b298-c6e606efc674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #189 22a2cfaf-0a4b-4c1f-8e11-8bee3f9cadb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #189 cac0ef3d-d1c4-4e76-af16-d0f6107982dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #189 ae7cca73-b30f-41a6-9d2e-58784f36525d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #189 4f058c69-56ab-4a3f-9639-d3da4b52c73d)");

unit.assert_eq8(8'h3E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hFB],
"INT DMEM (Testcase #189 3925cb92-cab7-4e16-b626-69db3b1f3f62)");
unit.assert_eq8(8'hC6, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hFC],
"INT DMEM (Testcase #189 86d9f9e9-2678-4879-8395-613b9b8da383)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hFB] =
datamem_swap[16'h1FB];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hFC] =
datamem_swap[16'h1FC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #190
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h426D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #190)");
    end
end

unit.assert_eq16(16'h426D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #190 08d30d23-d96b-4dee-b9ec-0420b692038f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #190 d66b244a-3234-446c-ae0b-496a3352b58e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #190 7494de1a-35db-477d-8c8b-c21139b28fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #190 16063a79-6b9f-416c-b8b6-eafbe20fffd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #190 5c964459-6d8a-4d16-b12f-bda92e5a56df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #190 b2f43fdb-eca5-4702-a17d-6ecf9f385b25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #190 1bccc64d-221c-46cc-ae79-a24dd0f0feaa)");

unit.assert_eq8(8'h6D, datamem_ext_i.datamem[13'hF17],
"EXT DMEM (Testcase #190 64ea95ed-07c2-4c19-b2c4-5890466775d1)");
unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'hF18],
"EXT DMEM (Testcase #190 fc9bb513-1199-405f-a771-8a014bd7a583)");
datamem_ext_i.datamem[13'hF17] =
datamem_swap[16'hF17];
datamem_ext_i.datamem[13'hF18] =
datamem_swap[16'hF18];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #191
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4102;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #191)");
    end
end

unit.assert_eq16(16'h4102, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #191 4b968de2-3acd-443e-ab1d-83ea6c8b92a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #191 f3794baa-82af-43ea-81a5-5bbd0ad905d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #191 485a061a-056c-483b-85ff-0101826f8d9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #191 a7155b89-0dde-498b-8c23-9a93c7b22e0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #191 f92ac857-2473-403a-8b71-9f0f3e5ea4e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #191 d5dfcaf0-0b0d-4d7d-b83a-4c0d293d805c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #191 30c0819b-31b4-4504-b00a-89dd706eeed3)");

unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'hEC7],
"EXT DMEM (Testcase #191 8a485c7a-8cfe-4b1d-8a18-1179a7cd65c2)");
unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'hEC8],
"EXT DMEM (Testcase #191 3e249dd4-f583-4878-9f33-069fd71e734b)");
datamem_ext_i.datamem[13'hEC7] =
datamem_swap[16'hEC7];
datamem_ext_i.datamem[13'hEC8] =
datamem_swap[16'hEC8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #192
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4A81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #192)");
    end
end

unit.assert_eq16(16'h4A81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #192 3e14059f-3717-4d6a-b74b-642d4f033bec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #192 26f2f762-e1c3-463e-9db2-667778f633b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #192 957d4837-fb66-4289-9132-e0ee0b5a3b31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #192 278cd578-2153-4704-a12b-4eb388637e53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #192 6684de83-72ba-4972-947b-29c66cfce043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #192 d05a3f68-e102-4fc0-b1b7-69bf5010a3a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #192 5884fc06-f62f-4fc1-b7ac-59b99fb58272)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'hB97],
"EXT DMEM (Testcase #192 e2048466-2f52-4c15-be4d-6134eaebf07e)");
unit.assert_eq8(8'h4A, datamem_ext_i.datamem[13'hB98],
"EXT DMEM (Testcase #192 fcf44e1c-6994-4727-882d-6251c1a93080)");
datamem_ext_i.datamem[13'hB97] =
datamem_swap[16'hB97];
datamem_ext_i.datamem[13'hB98] =
datamem_swap[16'hB98];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #193
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9577;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #193)");
    end
end

unit.assert_eq16(16'h9577, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #193 704b48a5-2894-4567-ac25-260afcc51b8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #193 f208978b-7f70-4338-b2e5-4c7eebd491dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #193 a7a512f6-b10e-4cdc-8de3-81f33a8a01c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #193 0970e5b0-dfd1-4a36-98b2-40bbcfe2e2d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #193 075ca03a-9dc4-43fe-addc-37abe5c6e00d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #193 dad93fbc-3f67-42e1-b7db-6116b1a372be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #193 399cd635-9c42-4852-8ba2-1e61ad4434a6)");

unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'hA6B],
"EXT DMEM (Testcase #193 467a9eff-b898-444b-bf89-c806ae6ea827)");
unit.assert_eq8(8'h95, datamem_ext_i.datamem[13'hA6C],
"EXT DMEM (Testcase #193 41243fd7-acd3-494b-972f-736b09aedf1c)");
datamem_ext_i.datamem[13'hA6B] =
datamem_swap[16'hA6B];
datamem_ext_i.datamem[13'hA6C] =
datamem_swap[16'hA6C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #194
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hADDB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #194)");
    end
end

unit.assert_eq16(16'hADDB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #194 0e71011e-04b9-4140-97ab-bb9251c5c9e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #194 e4c415a8-962b-4381-a46f-f9a3220282c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #194 464269a1-21d1-43a7-bd95-e2cf415a4dbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #194 25f99bee-96ce-4c33-8b00-103cbbfeacb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #194 72698815-f929-47bb-a715-86dd0662213e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #194 1bc85586-8761-48b6-8d58-5d6e6457aacc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #194 68661a54-a540-45f1-b8e1-a41a4021f72b)");

unit.assert_eq8(8'hDB, datamem_ext_i.datamem[13'h546],
"EXT DMEM (Testcase #194 7bd73209-2456-4256-aa35-27a16bcd22c2)");
unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h547],
"EXT DMEM (Testcase #194 bf8dea50-b587-4510-a7b4-987d52866f26)");
datamem_ext_i.datamem[13'h546] =
datamem_swap[16'h546];
datamem_ext_i.datamem[13'h547] =
datamem_swap[16'h547];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #195
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6F4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #195)");
    end
end

unit.assert_eq16(16'h6F4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #195 bd76821d-6226-45db-9dcb-3c50010edf01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #195 31c228a8-e196-4a59-8116-51c94764eaa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #195 e1b8b8ac-4702-4aad-87f8-c3eb24dcb473)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #195 33d4ed2c-5470-4008-a8f3-b7fc0808f2f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #195 dc757007-441c-4b33-b83a-e3fdadd66709)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #195 6ff2f1e3-3ca2-4d46-a821-715e7f8e6434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #195 33acd303-af91-4f4c-8833-2da5bdb172e0)");

unit.assert_eq8(8'h4A, datamem_ext_i.datamem[13'h699],
"EXT DMEM (Testcase #195 439ba4a7-8852-44bc-a01c-f7ecfbbee1bd)");
unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'h69A],
"EXT DMEM (Testcase #195 74832f37-80f0-487d-8395-fd0bb998298e)");
datamem_ext_i.datamem[13'h699] =
datamem_swap[16'h699];
datamem_ext_i.datamem[13'h69A] =
datamem_swap[16'h69A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #196
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2DDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #196)");
    end
end

unit.assert_eq16(16'h2DDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #196 141d4686-3313-4b94-bc2c-9f3fb059e2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #196 41f2dec2-9329-4772-8be1-99cf3596c3ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #196 d6800fae-aa6c-4a3c-a3ac-193cd7871912)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #196 ef228073-bdb0-4e98-a46a-0772c6f544b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #196 0097f3cd-f1ec-4282-8ceb-882d6e537f9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #196 f0a89bc9-597e-4584-8e83-c82fdd4dc695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #196 900fef84-e02e-472c-8c4f-6640442da901)");

unit.assert_eq8(8'hDD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h79],
"INT DMEM (Testcase #196 87b3d610-d959-46c9-ab8e-f4d59770091d)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h7A],
"INT DMEM (Testcase #196 5b5fda68-3a45-48ab-97b8-c8878a6f4684)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h79] =
datamem_swap[16'h79];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h7A] =
datamem_swap[16'h7A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #197
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h95DB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #197)");
    end
end

unit.assert_eq16(16'h95DB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #197 20eed934-07da-42e9-985e-8ca3e735d3e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #197 3fbd540a-8368-4845-941d-d80723148678)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #197 a0e31463-0f3e-43cb-b5bb-0eb0e3b9ea63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #197 7017d7bf-cc72-4204-a7ff-919bcf7e9e39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #197 5a8e2baf-1a52-4121-87a9-c02839e0c514)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #197 e795f551-2f8f-46cb-83ef-b7facdb08a9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #197 20e2d56c-e526-419e-8841-8290916ea08b)");

unit.assert_eq8(8'hDB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h21],
"INT DMEM (Testcase #197 f44f511e-5a37-4cbc-b6b7-d14da6932619)");
unit.assert_eq8(8'h95, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h22],
"INT DMEM (Testcase #197 8ef02f90-ce2c-4f81-9304-ff4ff84d841e)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h21] =
datamem_swap[16'h21];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h22] =
datamem_swap[16'h22];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #198
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB478;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #198)");
    end
end

unit.assert_eq16(16'hB478, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #198 74973603-d1ad-4213-8f07-2ae4b8351626)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #198 dced7401-7a34-4efe-bca6-43678fa10a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #198 22a3aa6d-e374-4d5c-be66-dbb76de44df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #198 8084097a-b843-443a-b96f-7dc80fe5dc7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #198 61b064f0-d2ec-4738-9975-8fb27b25afbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #198 790a2085-ac44-4a74-9d8c-5fed0d6cc7ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #198 17d439a6-10be-4534-a506-627dc0ee30af)");

unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'h515],
"EXT DMEM (Testcase #198 9f2cb348-3ee5-4154-be8e-21e4081408e6)");
unit.assert_eq8(8'hB4, datamem_ext_i.datamem[13'h516],
"EXT DMEM (Testcase #198 60a835f4-8e17-4000-a9bf-1ee20c43cac9)");
datamem_ext_i.datamem[13'h515] =
datamem_swap[16'h515];
datamem_ext_i.datamem[13'h516] =
datamem_swap[16'h516];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #199
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h990D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #199)");
    end
end

unit.assert_eq16(16'h990D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #199 0d50d529-06b9-4e30-8574-f101ac41c235)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #199 88cf973e-e099-4286-9c20-53749ab4f0c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #199 1d462f96-666a-4b24-89aa-531f0c828bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #199 937da69a-f2be-4f10-bb8d-0a4abbfac21b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #199 32306915-3c9c-46dd-bd46-c2aa46ab95ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #199 455ccbfe-68c4-4da5-8f09-864b2343d232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #199 b9ceb714-ba02-49e4-b01d-c69815f55b29)");

unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'hFB4],
"EXT DMEM (Testcase #199 3550b3cf-0b8f-41c5-a266-d64c0a7f4042)");
unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'hFB5],
"EXT DMEM (Testcase #199 4791bd7e-a1e0-4f9c-8053-4041177f1b1c)");
datamem_ext_i.datamem[13'hFB4] =
datamem_swap[16'hFB4];
datamem_ext_i.datamem[13'hFB5] =
datamem_swap[16'hFB5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #200
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h572C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #200)");
    end
end

unit.assert_eq16(16'h572C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #200 cdbe12ee-638a-4755-9231-ecdc29955579)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #200 ecf20936-d5df-4f66-a201-c6f31ee7f6c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #200 7498d72a-4f2a-4bcd-b349-047484ac8f7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #200 81f1247f-227a-4d10-8f1b-94b4f007a4d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #200 9e30780b-ce9f-4fdc-b314-10e53ef154c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #200 76cdc0f8-1f79-4307-a4cf-4cc773c3b53f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #200 ce25b296-304b-4bb9-aac4-2cf4cb878d22)");

unit.assert_eq8(8'h2C, datamem_ext_i.datamem[13'hDF2],
"EXT DMEM (Testcase #200 5ee8d859-46ed-43ff-95ef-2f3d02ee595a)");
unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'hDF3],
"EXT DMEM (Testcase #200 c50af175-4518-486d-84fe-047bea9db660)");
datamem_ext_i.datamem[13'hDF2] =
datamem_swap[16'hDF2];
datamem_ext_i.datamem[13'hDF3] =
datamem_swap[16'hDF3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #201
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF797;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #201)");
    end
end

unit.assert_eq16(16'hF797, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #201 efae6c9c-707d-4e43-9e80-bc3c80955c9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #201 f19a9b4e-d875-438d-b226-d21a5712eb66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #201 0940d078-4d76-481d-8e28-d84e3341ca55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #201 c0f6971d-f792-41c9-b4f7-32e4123292b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #201 456a2dab-06a5-4972-ba32-3d70c09e7e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #201 ce569c60-dbad-4a59-b0b2-d70dc54a54c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #201 95b205d3-e84d-428d-9b61-1ae396dfa8fd)");

unit.assert_eq8(8'h97, datamem_ext_i.datamem[13'h33C],
"EXT DMEM (Testcase #201 db7cb35d-963c-47ed-8191-e4537d97d8a4)");
unit.assert_eq8(8'hF7, datamem_ext_i.datamem[13'h33D],
"EXT DMEM (Testcase #201 6cec7140-ad6c-4280-bf99-0b39102b4df9)");
datamem_ext_i.datamem[13'h33C] =
datamem_swap[16'h33C];
datamem_ext_i.datamem[13'h33D] =
datamem_swap[16'h33D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #202
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCDF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #202)");
    end
end

unit.assert_eq16(16'hCDF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #202 0b0a881a-6c8d-4788-bf1d-8b02df6dd101)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #202 21594705-f964-4cc3-b25f-a8583d3d2482)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #202 e6007d52-fff5-4608-876d-543c6104de63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #202 e9910fff-4656-45d6-b150-8f427bd5da76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #202 51645a9c-e10f-44ab-85a5-4d34d1610731)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #202 75c847bc-8d03-42b9-a955-d37aa2d85739)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #202 4aef2a3b-f5bd-4bff-9b7e-3cb48a4ab1ac)");

unit.assert_eq8(8'hF1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3F],
"INT DMEM (Testcase #202 6291b6ab-1bc0-4da7-a3f2-1123083c26df)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h40],
"INT DMEM (Testcase #202 84116b4e-809b-4e2b-a0c3-62c0afcb769f)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3F] =
datamem_swap[16'h13F];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h40] =
datamem_swap[16'h140];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #203
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA9BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #203)");
    end
end

unit.assert_eq16(16'hA9BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #203 5fa61076-6c86-48d4-a7d7-666e43f39f51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #203 9bb34bc7-0168-4605-849d-afcbbba4740e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #203 f51f067f-97f0-45fb-b7b9-f2bd3c436e60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #203 9dd06479-0d70-4c3e-a401-faad71c02c4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #203 e326f313-4149-4b93-ab91-d9d3cdd75c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #203 65e45089-521d-4425-8c46-0dc31d912f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #203 a66571b1-0ef7-4fb5-a09f-2a2f445a1917)");

unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'hF63],
"EXT DMEM (Testcase #203 4c6b3040-d5d7-4c2c-9d1b-2c2b2a676243)");
unit.assert_eq8(8'hA9, datamem_ext_i.datamem[13'hF64],
"EXT DMEM (Testcase #203 9d442b8c-86d1-4ad3-b2f5-c942f5f10aab)");
datamem_ext_i.datamem[13'hF63] =
datamem_swap[16'hF63];
datamem_ext_i.datamem[13'hF64] =
datamem_swap[16'hF64];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #204
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEAD5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #204)");
    end
end

unit.assert_eq16(16'hEAD5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #204 abcc53a8-9aca-4e9b-854f-55cf97ff0947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #204 6a4723ea-c21d-4fb4-bd6f-595d2ad19a0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #204 62c8f404-ae71-43ff-915d-6ae7189b4c47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #204 b4668e81-ec7d-4a8c-9190-a2301ea7424e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #204 988fe5c0-fb3a-46e4-8f7f-02ba0b8409bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #204 d9a2d7a2-1b9f-481d-9502-b4d02f59b878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #204 ac99c328-55f5-47f4-b31b-56e44aa2ecc8)");

unit.assert_eq8(8'hD5, datamem_ext_i.datamem[13'hD21],
"EXT DMEM (Testcase #204 265abcbb-de62-4c7e-bed8-7acb643388fe)");
unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'hD22],
"EXT DMEM (Testcase #204 eda61480-436a-4908-865e-33a3bd0d11cf)");
datamem_ext_i.datamem[13'hD21] =
datamem_swap[16'hD21];
datamem_ext_i.datamem[13'hD22] =
datamem_swap[16'hD22];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #205
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h013D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #205)");
    end
end

unit.assert_eq16(16'h013D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #205 02f06fd3-fdf1-43f7-85e9-96fbb14a137f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #205 7c68c641-e6e0-41d4-99bb-6a43e8f049c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #205 0d4c8dc5-7491-4a6d-947c-3da045a6444f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #205 6ea12b7e-3f76-432d-a0cf-7e25af363861)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #205 23c6846e-0ac1-4477-a341-bfc7e3ef5e48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #205 b52e0b3b-e0c0-4cab-b962-2f42c99aceed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #205 42a7b96e-d488-4c43-af99-94995851a4f8)");

unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'h5CF],
"EXT DMEM (Testcase #205 bc802212-4b46-4aa3-af68-9cb2b1b11431)");
unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'h5D0],
"EXT DMEM (Testcase #205 de351ced-318d-4212-ab3f-740885e48711)");
datamem_ext_i.datamem[13'h5CF] =
datamem_swap[16'h5CF];
datamem_ext_i.datamem[13'h5D0] =
datamem_swap[16'h5D0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #206
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBC13;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #206)");
    end
end

unit.assert_eq16(16'hBC13, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #206 2eb34bc6-98cf-44ee-a494-08306c2b606b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #206 b3011c47-858e-4258-a93f-d19f450f4157)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #206 75a84c78-e509-4eb4-809a-189477b780a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #206 b148c3e6-44d7-4b55-b560-ab5bf92317e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #206 56b50a96-e80d-484c-807a-f8f1264c48a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #206 ae7212df-257b-4d05-a4ce-a560bfe7e9a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #206 90029157-9cd2-4370-a1ad-4bf9d94a3e1b)");

unit.assert_eq8(8'h13, datamem_ext_i.datamem[13'hC8E],
"EXT DMEM (Testcase #206 72f48780-2165-43a5-ab36-88ca9dde1180)");
unit.assert_eq8(8'hBC, datamem_ext_i.datamem[13'hC8F],
"EXT DMEM (Testcase #206 4019c0f4-8c20-4181-a4da-d7e7ec9121bf)");
datamem_ext_i.datamem[13'hC8E] =
datamem_swap[16'hC8E];
datamem_ext_i.datamem[13'hC8F] =
datamem_swap[16'hC8F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #207
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4813;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #207)");
    end
end

unit.assert_eq16(16'h4813, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #207 1403e984-2673-4378-aaca-40c0b97c7e15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #207 e73c0f0d-86b9-436a-b012-44a2735fc5d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #207 a9532875-2453-4656-a4b9-0ef456134164)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #207 3edc8a90-7737-462c-b87a-835288f4a5bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #207 da7834e3-160c-46ed-af75-adcf16613529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #207 212c076a-9f6a-4360-a7ec-ab2d6a892e0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #207 1f9167b1-2483-432c-a0c4-712cf67855b5)");

unit.assert_eq8(8'h13, datamem_ext_i.datamem[13'hCED],
"EXT DMEM (Testcase #207 f2f136b1-c432-4fc5-8df4-18ae5e5878c7)");
unit.assert_eq8(8'h48, datamem_ext_i.datamem[13'hCEE],
"EXT DMEM (Testcase #207 dc3411a9-8ea5-4e14-a57b-60f4bfbe436e)");
datamem_ext_i.datamem[13'hCED] =
datamem_swap[16'hCED];
datamem_ext_i.datamem[13'hCEE] =
datamem_swap[16'hCEE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #208
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4532;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #208)");
    end
end

unit.assert_eq16(16'h4532, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #208 6a5355f1-5790-42fe-963c-94e245405e6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #208 5c2c732e-ed1a-4f1f-bfff-e03494d8167b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #208 62c85c2b-e6fa-43f2-94db-51f28e6cee3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #208 ff10a994-458f-4556-b584-4a7a63bca927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #208 7d26622f-9679-458c-a55f-3166bd48f33c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #208 f44ae4a4-bc2f-4f64-83be-a2c25ffd6e4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #208 64ddedec-fecd-439f-9ce7-0cea56aada59)");

unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'hB6D],
"EXT DMEM (Testcase #208 1dec29e0-b786-4ec1-8762-eb0d510f3ef1)");
unit.assert_eq8(8'h45, datamem_ext_i.datamem[13'hB6E],
"EXT DMEM (Testcase #208 7440ba13-23d4-4c0c-ac56-419a5b6535e5)");
datamem_ext_i.datamem[13'hB6D] =
datamem_swap[16'hB6D];
datamem_ext_i.datamem[13'hB6E] =
datamem_swap[16'hB6E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #209
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h49D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #209)");
    end
end

unit.assert_eq16(16'h49D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #209 e33c3a39-b9e7-46c0-bf22-de738b4e5ec0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #209 b13982cd-c685-42f8-ad7e-2cedf1c78502)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #209 4a0fa2e6-69e4-4814-b839-a4284cd6822b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #209 7e7743ef-d8e4-407c-bc99-465f53cecd85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #209 ac7d4ec6-81f7-4325-866f-1f1fb91a09b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #209 7076b7d9-9094-4ccc-8751-673acb1f55f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #209 b8b6d26c-60d0-4653-af2f-d275c850dada)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'hF9F],
"EXT DMEM (Testcase #209 93fbeaa7-df98-458d-a15a-ce2e9ae6a20d)");
unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'hFA0],
"EXT DMEM (Testcase #209 7dcdf6fb-74c7-4e27-8706-5166e34fc6e0)");
datamem_ext_i.datamem[13'hF9F] =
datamem_swap[16'hF9F];
datamem_ext_i.datamem[13'hFA0] =
datamem_swap[16'hFA0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #210
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #210)");
    end
end

unit.assert_eq16(16'h8B9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #210 12671c09-e520-4c1c-ae33-3fb78ac40099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #210 1c34ac07-f5b5-4a7b-8069-f419f67be1e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #210 ad29b528-44ac-4ba0-b4d9-aea29ec9e762)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #210 d8c12899-b97c-4fa9-9da7-8a2ee8e93d8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #210 b83d0725-0450-4957-b6a0-e7d00e8a1d14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #210 f54a8036-281b-440d-9f84-4e7b9ec79f70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #210 8d6a7518-156d-4112-93e3-5bea3e4e2b81)");

unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'hB03],
"EXT DMEM (Testcase #210 ca8975bb-6491-41a1-be5c-33f902dadad2)");
unit.assert_eq8(8'h8B, datamem_ext_i.datamem[13'hB04],
"EXT DMEM (Testcase #210 7c895e15-c953-4361-94c3-8d12ac826aaf)");
datamem_ext_i.datamem[13'hB03] =
datamem_swap[16'hB03];
datamem_ext_i.datamem[13'hB04] =
datamem_swap[16'hB04];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #211
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE75;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #211)");
    end
end

unit.assert_eq16(16'hAE75, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #211 b2f8698a-f283-4a99-b344-8a7ff49dbeb4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #211 d2c26e47-e416-43f8-b531-59e4997a0df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #211 83b30dd5-4c39-493a-9f5f-27893856faf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #211 1a2b8c9e-9dd8-4e76-821e-425eb0748a96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #211 e260236f-d48c-4ac4-a80c-2e07ce7e5a1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #211 1c846d39-c88d-4bf5-b31c-f7f04b12886b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #211 55e549a8-a732-4bec-91a5-3ed407872dc4)");

unit.assert_eq8(8'h75, datamem_ext_i.datamem[13'h563],
"EXT DMEM (Testcase #211 8f8cb63a-c526-4956-9b46-bb905d4f4c62)");
unit.assert_eq8(8'hAE, datamem_ext_i.datamem[13'h564],
"EXT DMEM (Testcase #211 00784398-db1b-47e8-87db-4cf5ae756bb9)");
datamem_ext_i.datamem[13'h563] =
datamem_swap[16'h563];
datamem_ext_i.datamem[13'h564] =
datamem_swap[16'h564];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #212
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEDA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #212)");
    end
end

unit.assert_eq16(16'hEDA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #212 157921ef-c355-4d3e-917b-72a061181ce7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #212 ddb6f8a9-68d8-4042-8b52-8f2aac3da351)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #212 105ca846-9e98-4f8f-b415-448f4362e8b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #212 6c801e12-25ef-42ec-afa9-5c25b8372da0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #212 752e736f-eaeb-4c42-9f35-bdce1042c04e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #212 549d3203-4136-4383-abdd-e58e4838819b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #212 6826c57b-36fe-404d-8ebc-73779b50651c)");

unit.assert_eq8(8'hA6, datamem_ext_i.datamem[13'hC12],
"EXT DMEM (Testcase #212 7dd6f57c-933a-40dc-b794-05d632332bf0)");
unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'hC13],
"EXT DMEM (Testcase #212 7365f34a-17af-4b6d-98ec-745b37a8dc98)");
datamem_ext_i.datamem[13'hC12] =
datamem_swap[16'hC12];
datamem_ext_i.datamem[13'hC13] =
datamem_swap[16'hC13];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #213
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5DE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #213)");
    end
end

unit.assert_eq16(16'h5DE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #213 2b8a261b-e8df-4011-baf3-11d4ed8d3079)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #213 8882dc73-9316-40aa-bae7-dd762586f785)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #213 f37a8011-51c0-42d0-b6b7-5690a7db019f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #213 45793ccd-6ff9-4cf7-b6b8-5e19acd970a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #213 2fe0867f-53ca-4250-a148-10d57161e345)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #213 f9ecb55e-54cf-4a49-a85a-e3c65bd1b3b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #213 2310d967-20e5-4ebc-a56e-702008376e08)");

unit.assert_eq8(8'hE8, datamem_ext_i.datamem[13'h8D6],
"EXT DMEM (Testcase #213 94661cac-0a8d-42d8-b7b7-eb862474eda2)");
unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'h8D7],
"EXT DMEM (Testcase #213 f05ccbaf-e611-4613-8a57-9aa3201a325c)");
datamem_ext_i.datamem[13'h8D6] =
datamem_swap[16'h8D6];
datamem_ext_i.datamem[13'h8D7] =
datamem_swap[16'h8D7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #214
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C18;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #214)");
    end
end

unit.assert_eq16(16'h6C18, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #214 3e866b24-b689-46e1-af5e-dd8204e259bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #214 cd2d4693-3fc5-41dd-a261-555667005873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #214 7333d422-df77-49af-9530-62cdbec5520f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #214 4e32ac77-d6ad-436d-93c7-eaad6e46a691)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #214 e7af37c9-feeb-49e9-87ff-40ae1071170b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #214 df3bd917-f2a1-4117-914e-c01e903f009d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #214 72a795a0-a45b-438f-b53b-6a737a9e5458)");

unit.assert_eq8(8'h18, datamem_ext_i.datamem[13'h965],
"EXT DMEM (Testcase #214 9ccd4fda-51c0-42ed-a753-befb2cb76258)");
unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h966],
"EXT DMEM (Testcase #214 7096b695-bbb5-41e8-9860-2d1e53f70ac8)");
datamem_ext_i.datamem[13'h965] =
datamem_swap[16'h965];
datamem_ext_i.datamem[13'h966] =
datamem_swap[16'h966];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #215
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF1CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #215)");
    end
end

unit.assert_eq16(16'hF1CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #215 654b1ffa-e16c-415f-8e04-bd32fc44042a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #215 73d3490a-150a-433a-b440-cf6a7cef7408)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #215 9abe9c38-2a82-47ac-9aba-d436a6499b9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #215 713e12da-1156-4fef-bd19-5dedb35ce735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #215 1f3c3f44-1c99-4b50-b720-736a4ec4849b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #215 52e4fa50-f273-49b5-bac4-0850eaddd1ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #215 880e5577-45b6-45c8-840e-a784d1f94038)");

unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'h98B],
"EXT DMEM (Testcase #215 f5a780cf-bad6-40d7-b026-e4ae0dbc4320)");
unit.assert_eq8(8'hF1, datamem_ext_i.datamem[13'h98C],
"EXT DMEM (Testcase #215 b99f9f76-1f38-4374-bb0b-d4e5b155cb8e)");
datamem_ext_i.datamem[13'h98B] =
datamem_swap[16'h98B];
datamem_ext_i.datamem[13'h98C] =
datamem_swap[16'h98C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #216
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB79D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #216)");
    end
end

unit.assert_eq16(16'hB79D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #216 e1308e94-cb92-44e2-a8da-1b58d1aca4dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #216 ad3e29d7-0b5e-49cf-bb69-971d4fec47ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #216 246b08c2-9de9-4115-a0c3-876da51fe69f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #216 e62c4d24-4c2e-4a20-b9ed-6e54ce2788dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #216 77e010e3-3d66-4e6e-abce-1324b991cabe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #216 0f89df16-c4c0-41e6-9fe6-fb5e7b989284)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #216 71e53092-6e44-4478-93f2-662efe8f32a8)");

unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'hDA6],
"EXT DMEM (Testcase #216 8c39c1bf-4431-427c-aebd-68eeeaf04035)");
unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'hDA7],
"EXT DMEM (Testcase #216 d98d0896-5d2a-4840-93d3-3651718c6041)");
datamem_ext_i.datamem[13'hDA6] =
datamem_swap[16'hDA6];
datamem_ext_i.datamem[13'hDA7] =
datamem_swap[16'hDA7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #217
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h91B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #217)");
    end
end

unit.assert_eq16(16'h91B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #217 7f8ebfc4-e344-419c-8097-687ebfb07edc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #217 10d094fa-fe4a-46c8-8f72-f73eed7fceb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #217 6863054b-8797-4a4c-a8ec-b7409ac710f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #217 c2095055-1d05-4a32-bba6-07234670d656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #217 74a1142e-edc5-4b76-ae7b-94fc1c9d2d25)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #217 ca040a34-9644-4a42-9355-07bfcb993b00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #217 6fe85178-fa07-4910-ac28-79e5e7504ec7)");

unit.assert_eq8(8'hB6, datamem_ext_i.datamem[13'h8D2],
"EXT DMEM (Testcase #217 d8bf3439-5ee1-4620-924c-5f71a05633dd)");
unit.assert_eq8(8'h91, datamem_ext_i.datamem[13'h8D3],
"EXT DMEM (Testcase #217 39b3fdeb-b551-49c2-ac08-156c6f01363e)");
datamem_ext_i.datamem[13'h8D2] =
datamem_swap[16'h8D2];
datamem_ext_i.datamem[13'h8D3] =
datamem_swap[16'h8D3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #218
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBCFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #218)");
    end
end

unit.assert_eq16(16'hBCFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #218 82c0fde0-01a9-4ef4-a3e3-a7054976802b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #218 47518149-7556-4c2c-81fd-415498306a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #218 72df093b-2000-4d42-99ab-14f828749b60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #218 945cc67f-ed44-4816-9c37-a911a823b4bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #218 b7f9ef3c-d671-43d5-ae02-f16a49f0c2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #218 79e5cdea-1740-45b0-8e0f-98ad5cc171e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #218 b0fbe20a-22d0-45bd-b88a-fb8161abd106)");

unit.assert_eq8(8'hFD, datamem_ext_i.datamem[13'h2A1],
"EXT DMEM (Testcase #218 42fa3a67-8f1d-4a71-a61b-70f71fe12e8d)");
unit.assert_eq8(8'hBC, datamem_ext_i.datamem[13'h2A2],
"EXT DMEM (Testcase #218 af10efb3-506b-45c9-98f1-089c8c9f73ef)");
datamem_ext_i.datamem[13'h2A1] =
datamem_swap[16'h2A1];
datamem_ext_i.datamem[13'h2A2] =
datamem_swap[16'h2A2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #219
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D82;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #219)");
    end
end

unit.assert_eq16(16'h4D82, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #219 51fb0038-0b3f-4e17-8445-bbdcb25382ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #219 4ff9e73c-78c7-42c5-b87b-8ec7431eeb52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #219 09e2bce3-6403-4776-98c4-a8c162ea0c90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #219 fc2c52ec-0a3c-45d5-a445-eaff1d835e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #219 9a9da9e4-756d-48ec-9711-9cf2cd95afae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #219 ca8ac314-33a5-4f07-9f1a-7df58df8c0dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #219 0c6a73a4-1eaf-46d2-ac07-8eb5788cb7d0)");

unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'hFCE],
"EXT DMEM (Testcase #219 47d1abaa-4197-4fce-8e82-4d2ac2368b51)");
unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'hFCF],
"EXT DMEM (Testcase #219 33aaa14b-8ce8-402d-9fd7-078d79a48ac3)");
datamem_ext_i.datamem[13'hFCE] =
datamem_swap[16'hFCE];
datamem_ext_i.datamem[13'hFCF] =
datamem_swap[16'hFCF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #220
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h63F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #220)");
    end
end

unit.assert_eq16(16'h63F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #220 e5012fde-0282-461f-aff5-2eb75aa876ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #220 fe1353e8-b577-4e2c-ad89-3fc4c79f86a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #220 fd170583-5122-4d4c-9bd2-d705c36f9bd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #220 cc91d5f7-3c17-41e0-9523-09cc0be0baa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #220 18d290e4-54e8-45bf-9d1f-060f19c612b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #220 da7fa3e4-4e9e-4ae9-b287-8fd80c58a566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #220 06a39026-1333-45b3-b3ac-06b84f1bc985)");

unit.assert_eq8(8'hF2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6A],
"INT DMEM (Testcase #220 2eddc1bc-b89f-4ebd-9bd7-b60c3387c330)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6B],
"INT DMEM (Testcase #220 7fb81a1b-9ce8-4f85-8bb8-b4b61c2d3f39)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6A] =
datamem_swap[16'h16A];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6B] =
datamem_swap[16'h16B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #221
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB312;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #221)");
    end
end

unit.assert_eq16(16'hB312, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #221 1902a431-3b46-4dfc-b039-c97befb5583c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #221 5cef6deb-d5bf-4445-ba71-f3972f8f4795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #221 a4fe0a6b-463e-4607-94f4-55350f180d3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #221 abd9b390-62ed-4a8b-8ddd-cfeccae852a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #221 39081661-8dfa-4a8a-8e0a-3120953ffa14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #221 d0b5b6a7-17a6-4db6-8cff-8aacc1df400b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #221 9c3e4469-ae73-4282-b965-03fe7a2403f0)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'hE5A],
"EXT DMEM (Testcase #221 164c6e2c-f9cd-4b0c-b2eb-cd2b69c5a700)");
unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'hE5B],
"EXT DMEM (Testcase #221 79764f9f-51e1-4d14-8349-945196834422)");
datamem_ext_i.datamem[13'hE5A] =
datamem_swap[16'hE5A];
datamem_ext_i.datamem[13'hE5B] =
datamem_swap[16'hE5B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #222
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #222)");
    end
end

unit.assert_eq16(16'hAD74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #222 9156e9f3-a62b-44d1-86be-41d9a974d60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #222 9ed379bd-d85a-4dee-af80-4363e985cdaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #222 9ac02c20-0946-4d1b-b244-70684a24716e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #222 29930eb6-b879-4851-af42-d85a3c836bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #222 7f5a7192-3dee-43ad-9c47-0db52036eead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #222 3c38869c-3064-4dd0-b12d-c870d353aac6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #222 250bab45-d1b3-4c9e-b965-3dd4c425013e)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h5D9],
"EXT DMEM (Testcase #222 5804581b-c25f-4fd2-8481-2ddcf141e99f)");
unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h5DA],
"EXT DMEM (Testcase #222 81ca7921-9d07-4129-b450-9ab70b836fce)");
datamem_ext_i.datamem[13'h5D9] =
datamem_swap[16'h5D9];
datamem_ext_i.datamem[13'h5DA] =
datamem_swap[16'h5DA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #223
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3EE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #223)");
    end
end

unit.assert_eq16(16'h3EE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #223 dd2f6f59-5bf2-47a1-aed4-ce42e51e98b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #223 3c4bd871-03b6-4f24-86b3-998f486767f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #223 a7268a2c-7eb1-48d8-842a-751d530a17a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #223 d36680d3-6c2b-49fa-a0d1-34537ecfb96a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #223 5070e5be-fd51-490b-83a6-320a1172fdb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #223 09a18d33-678b-4f6a-97fa-80f7c2d1bcf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #223 dcd953b0-28f2-4111-8809-9733d1e68553)");

unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'hE1F],
"EXT DMEM (Testcase #223 33b2c46e-7d41-4865-a22f-8731fe938a3f)");
unit.assert_eq8(8'h3E, datamem_ext_i.datamem[13'hE20],
"EXT DMEM (Testcase #223 e0de14a3-e510-49f1-bfcb-acd6c7ef3eb0)");
datamem_ext_i.datamem[13'hE1F] =
datamem_swap[16'hE1F];
datamem_ext_i.datamem[13'hE20] =
datamem_swap[16'hE20];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #224
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA49E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #224)");
    end
end

unit.assert_eq16(16'hA49E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #224 2312dc8e-6607-42ec-956d-5b72100e4955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #224 52bea031-d823-4c69-b251-fce1cad67b65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #224 e3aed259-a160-4292-b9c7-507ff3d67277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #224 b5646547-efea-4ee2-9556-1ca00cf75aed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #224 4694b211-aa4a-4c76-8411-35bf876ef141)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #224 695b4fd0-5bb1-4166-842a-4793d4ee6c02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #224 c4c28569-607c-493b-8eae-bf04fb5a48bf)");

unit.assert_eq8(8'h9E, datamem_ext_i.datamem[13'hC17],
"EXT DMEM (Testcase #224 f5dc3554-62fb-41a1-b726-123b98aced95)");
unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'hC18],
"EXT DMEM (Testcase #224 5d8d1da2-6188-4c5c-8a97-78f0aff36e20)");
datamem_ext_i.datamem[13'hC17] =
datamem_swap[16'hC17];
datamem_ext_i.datamem[13'hC18] =
datamem_swap[16'hC18];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #225
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #225)");
    end
end

unit.assert_eq16(16'hAC0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #225 6c31d317-ae7f-4288-a58f-228b2e62cc41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #225 290ebea5-c55f-4218-9247-ea6a83fa2da6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #225 8a0e2c32-d02d-4ec7-9a9e-b5bdb1010165)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #225 bb02dfe9-1701-4cd3-ae32-7ff0bd196429)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #225 867a8106-03e7-4ff4-b5c4-01fc9dbf0556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #225 7ce76012-55dc-4a9d-a610-51d09e586a71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #225 0bdb4b3c-f7d4-4c76-b801-2a4a27671b93)");

unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'hF70],
"EXT DMEM (Testcase #225 488c6bf0-463d-4293-bb1a-1dc4c2b5a6d5)");
unit.assert_eq8(8'hAC, datamem_ext_i.datamem[13'hF71],
"EXT DMEM (Testcase #225 beeeb732-c263-46e5-8282-938230782364)");
datamem_ext_i.datamem[13'hF70] =
datamem_swap[16'hF70];
datamem_ext_i.datamem[13'hF71] =
datamem_swap[16'hF71];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #226
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h42BD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #226)");
    end
end

unit.assert_eq16(16'h42BD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #226 2c745659-2ff5-4e82-b9dd-70aebe40b6b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #226 87594693-3a39-4b45-9692-3c128cc07703)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #226 5694f35f-8e2d-48ef-9809-9016934393dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #226 14cd2676-e10d-4014-9a19-b09a9e6baf45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #226 ead1ebeb-c345-48b5-a306-32bfc469615a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #226 fd2b2edb-ec7b-4723-93f0-a1701a4046af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #226 04245065-dc95-42be-94fb-6d868c078a97)");

unit.assert_eq8(8'hBD, datamem_ext_i.datamem[13'hA42],
"EXT DMEM (Testcase #226 02a9d3a2-a3c4-40ce-8288-9835bb28f7f0)");
unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'hA43],
"EXT DMEM (Testcase #226 974bd63a-a928-4073-8548-0eb89773b5e3)");
datamem_ext_i.datamem[13'hA42] =
datamem_swap[16'hA42];
datamem_ext_i.datamem[13'hA43] =
datamem_swap[16'hA43];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #227
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD7A4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #227)");
    end
end

unit.assert_eq16(16'hD7A4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #227 ff349da7-83ef-4bf4-942d-b9ee22b765ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #227 94004eeb-51f4-4072-bc7a-a4bfed38275e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #227 26d54ba2-baf8-4a34-b218-e22614eebde5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #227 9ae30820-50bc-4c16-b32b-867c27b6d504)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #227 af3fe742-2954-45dd-99c0-5f37a318313b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #227 839efb98-ec76-48cb-8ff9-bbb822f14dce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #227 beee38ee-3346-478e-9314-51fec0c5630c)");

unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'h3A0],
"EXT DMEM (Testcase #227 d255cea2-2f1a-4a2c-b663-1d6c792ea05e)");
unit.assert_eq8(8'hD7, datamem_ext_i.datamem[13'h3A1],
"EXT DMEM (Testcase #227 b4f51087-3f13-4886-b314-4909ad9f125a)");
datamem_ext_i.datamem[13'h3A0] =
datamem_swap[16'h3A0];
datamem_ext_i.datamem[13'h3A1] =
datamem_swap[16'h3A1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #228
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3AA8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #228)");
    end
end

unit.assert_eq16(16'h3AA8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #228 9cf85e51-2017-400c-bcd5-e72a92a96ab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #228 b2208de9-3320-4a8e-b1de-9a727c7390f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #228 894bbd4d-35f2-42be-b1ce-74e379b913a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #228 24456fc6-9325-40c0-8ca7-d2b2eaddcd7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #228 ec3c57a7-cd98-41bb-8e38-eecf982a934c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #228 1304a2d6-b1a0-451a-97e2-45c055c2a8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #228 f98f460b-bbf5-4b7b-986c-2f2169af4588)");

unit.assert_eq8(8'hA8, datamem_ext_i.datamem[13'hD8E],
"EXT DMEM (Testcase #228 b2ff2cf0-b2b0-4995-b8ed-e6dadfa84887)");
unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'hD8F],
"EXT DMEM (Testcase #228 bf4a6f4d-df25-4a7a-854d-710a080f918f)");
datamem_ext_i.datamem[13'hD8E] =
datamem_swap[16'hD8E];
datamem_ext_i.datamem[13'hD8F] =
datamem_swap[16'hD8F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #229
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFF3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #229)");
    end
end

unit.assert_eq16(16'hFF3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #229 c924e4ef-f7b1-481a-85e2-23f219e54698)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #229 aca18f79-d2a9-46a5-a51a-086b06b9dc8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #229 6573f645-0226-45fb-aec6-b8c651c6341e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #229 a855f0e9-e5f3-4753-951f-215cf8857cb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #229 43d28da1-39fd-4bf4-9f3c-0357953c6a91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #229 731d1ae3-6d81-4ab5-a422-83144b12af52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #229 191aa7b6-77f0-4f48-a530-63cb961c4314)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h49A],
"EXT DMEM (Testcase #229 87d76b95-43d6-4dde-859e-35aa188a60d3)");
unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'h49B],
"EXT DMEM (Testcase #229 78d2aee6-112c-4a5a-ad22-528f5002b205)");
datamem_ext_i.datamem[13'h49A] =
datamem_swap[16'h49A];
datamem_ext_i.datamem[13'h49B] =
datamem_swap[16'h49B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #230
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9CEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #230)");
    end
end

unit.assert_eq16(16'h9CEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #230 fb8a5e29-e8f5-4f08-8e63-773146bd618a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #230 aea9dd73-ac86-4e29-837b-f9069d8de005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #230 f4d1ea3e-4538-4966-b49a-84e71760b6a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #230 c55eab9a-cb79-4257-94f0-acb107538604)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #230 2e2e7ec7-6335-460f-904b-f916d0e0aa4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #230 cbeb2f2b-4cb4-47f1-8c41-a51ca2053d0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #230 cfc6fd2f-c848-40b7-a4de-b4e526da04fe)");

unit.assert_eq8(8'hEF, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h42],
"INT DMEM (Testcase #230 1df61448-112f-490b-b3cb-301f9693f24c)");
unit.assert_eq8(8'h9C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h43],
"INT DMEM (Testcase #230 9a7b002c-2f74-4922-b8ca-70e1ad8cda2d)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h42] =
datamem_swap[16'h42];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h43] =
datamem_swap[16'h43];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #231
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #231)");
    end
end

unit.assert_eq16(16'hFA88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #231 e88e64b0-9231-4053-bda2-7a19dc16dfcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #231 a1b7052a-10fd-42d9-a434-6e1e51dca85f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #231 75496360-e00e-4e0a-ba73-4e23c64d1b05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #231 0043ec6c-ab65-445c-a0a6-0430c3b8abd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #231 59edf4ee-016b-4777-a7e0-820cd634b9d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #231 05dd2b15-b944-4aa1-a8b4-a4521f58a901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #231 c05cab60-1801-4b08-9b05-06d925eb9a70)");

unit.assert_eq8(8'h88, datamem_ext_i.datamem[13'hFB5],
"EXT DMEM (Testcase #231 acb5646d-9b29-4a49-978c-f5bd53fa9356)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hFB6],
"EXT DMEM (Testcase #231 a3f9d867-547d-406b-a255-d85a0dfe531b)");
datamem_ext_i.datamem[13'hFB5] =
datamem_swap[16'hFB5];
datamem_ext_i.datamem[13'hFB6] =
datamem_swap[16'hFB6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #232
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2A04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #232)");
    end
end

unit.assert_eq16(16'h2A04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #232 cb0a899d-a9e7-4516-912a-780de0d43e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #232 db5e282b-b36e-4794-90d3-2e99886ba53a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #232 6137e93c-3a33-469b-9a7f-3c975ea72d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #232 879ca3a2-3b87-47b6-9306-c4ce5272f90d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #232 574a4349-b94c-4608-95ff-671871b2bbe6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #232 f186256f-945f-4290-8b12-6dcab7f7acb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #232 4e18a527-cfc0-4346-a22b-4363abc73b82)");

unit.assert_eq8(8'h04, datamem_ext_i.datamem[13'hD17],
"EXT DMEM (Testcase #232 a3862045-df65-4ba8-99a1-a2e51046900f)");
unit.assert_eq8(8'h2A, datamem_ext_i.datamem[13'hD18],
"EXT DMEM (Testcase #232 beba664e-0033-4af6-98e6-fc05a4dc8bd0)");
datamem_ext_i.datamem[13'hD17] =
datamem_swap[16'hD17];
datamem_ext_i.datamem[13'hD18] =
datamem_swap[16'hD18];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #233
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD641;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #233)");
    end
end

unit.assert_eq16(16'hD641, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #233 680528b6-0e25-4159-acfb-779fee1500e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #233 26c19be2-5bc1-4af3-8b71-134a50e754c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #233 1ef8dd26-575c-47b5-bc95-7b5e6908fedc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #233 97213d72-df09-4959-8744-1abe3712f9c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #233 7e176bf7-e201-4701-b032-dec94d2063cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #233 ff407a2b-d9d1-4999-b87d-b336c574a513)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #233 cdb12e64-d0b1-47c2-b00d-b2d3ee2f9fc7)");

unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'h587],
"EXT DMEM (Testcase #233 8a068185-d6b3-4b93-873d-cc3b8b460c51)");
unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'h588],
"EXT DMEM (Testcase #233 d0b173c6-d141-4a7f-a254-dc94e3d645ad)");
datamem_ext_i.datamem[13'h587] =
datamem_swap[16'h587];
datamem_ext_i.datamem[13'h588] =
datamem_swap[16'h588];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #234
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC57C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #234)");
    end
end

unit.assert_eq16(16'hC57C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #234 3d57ef87-1887-4821-981e-44d117ba8c82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #234 bdc364c6-5693-4614-9447-cd39bf04fb4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #234 e716edbc-c958-4f86-930c-c40acf7ef187)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #234 f28a93fa-0815-4ab1-9f24-3ee93850acc7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #234 8d04b334-9327-4bae-b958-a9d94364f0d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #234 8872ae5f-926c-4506-b44a-66c4f46d9eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #234 d961e9a6-5281-4577-b8ee-e4389fdd4aa8)");

unit.assert_eq8(8'h7C, datamem_ext_i.datamem[13'h684],
"EXT DMEM (Testcase #234 5d05b690-0134-4594-a0f4-4b54b2b2c6be)");
unit.assert_eq8(8'hC5, datamem_ext_i.datamem[13'h685],
"EXT DMEM (Testcase #234 5bfbfab2-edb8-471b-b7e0-840db739196c)");
datamem_ext_i.datamem[13'h684] =
datamem_swap[16'h684];
datamem_ext_i.datamem[13'h685] =
datamem_swap[16'h685];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #235
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3764;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #235)");
    end
end

unit.assert_eq16(16'h3764, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #235 b06486a1-a56d-4676-8e44-a81fbf9903c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #235 04fe1264-13de-415b-b483-59459cfd027f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #235 dcc21a38-fc95-4949-9506-1983b9c8d806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #235 f16eeda2-dd6a-44bf-aed1-3ce926f8f233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #235 f24c61a9-b7ce-41d1-ab9d-95fc71645094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #235 a62c7be0-bf35-4322-add9-686a6ad57c70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #235 68440775-2e97-4354-bc3e-fbaef4263dde)");

unit.assert_eq8(8'h64, datamem_ext_i.datamem[13'hAAF],
"EXT DMEM (Testcase #235 078b1983-30be-4082-bd2c-66022dbdf6a1)");
unit.assert_eq8(8'h37, datamem_ext_i.datamem[13'hAB0],
"EXT DMEM (Testcase #235 4658c70d-057f-4956-acc4-19b4feb27881)");
datamem_ext_i.datamem[13'hAAF] =
datamem_swap[16'hAAF];
datamem_ext_i.datamem[13'hAB0] =
datamem_swap[16'hAB0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #236
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF36B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #236)");
    end
end

unit.assert_eq16(16'hF36B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #236 a2d9b891-36b1-4657-a57b-f8f666db3187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #236 1d2d9f5d-ed96-4c5a-978f-9d5cf16de3e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #236 f2bd3b30-07c5-43b1-b620-e597c53fd569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #236 a758d9db-ccd1-4a6e-894d-632b03e73310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #236 97595c1c-3efc-43f3-9f95-1ca926ea9012)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #236 effcdeb3-b663-477f-8a19-57debd36a435)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #236 f83307fe-4586-433c-9938-b86545ad6b56)");

unit.assert_eq8(8'h6B, datamem_ext_i.datamem[13'hFC7],
"EXT DMEM (Testcase #236 26ec7da2-7628-425f-ad42-bfa238a18dac)");
unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'hFC8],
"EXT DMEM (Testcase #236 efe13227-205b-4721-a697-ef906f3756ad)");
datamem_ext_i.datamem[13'hFC7] =
datamem_swap[16'hFC7];
datamem_ext_i.datamem[13'hFC8] =
datamem_swap[16'hFC8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #237
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7906;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #237)");
    end
end

unit.assert_eq16(16'h7906, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #237 8f8006ed-5d5e-4809-b1ec-f4f8102e9247)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #237 c752e52d-907f-4af6-b3a5-49188ba88a37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #237 e415d6e8-988a-4e78-bbab-9ebe372555b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #237 257f4bee-cd95-4b23-b12b-620921252122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #237 48f3644e-1ccc-4f9a-80da-9a78abde18d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #237 09a8e61c-0c8c-4c95-90d0-2a317426e5f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #237 9b352cd3-acab-4982-b625-73a54b4c43e5)");

unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h841],
"EXT DMEM (Testcase #237 bbf7ff19-b244-445e-8043-43ab08f0a25b)");
unit.assert_eq8(8'h79, datamem_ext_i.datamem[13'h842],
"EXT DMEM (Testcase #237 13bdc59f-efd2-4f59-97a4-874eedd1e421)");
datamem_ext_i.datamem[13'h841] =
datamem_swap[16'h841];
datamem_ext_i.datamem[13'h842] =
datamem_swap[16'h842];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #238
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81EE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #238)");
    end
end

unit.assert_eq16(16'h81EE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #238 05b45990-2700-410a-8023-9eaf4634c2ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #238 259d1ae9-3d45-41ff-9684-b1a7e6b69a80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #238 f51979b9-04ae-48c6-ac44-1ae80e298f80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #238 7b0b660c-2ce9-4d75-8b94-dacc41dc5506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #238 b948f9cf-108c-4dfd-a03a-5e8f04dd4849)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #238 87cf5808-d5d7-454d-96d3-f959b3363217)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #238 da420519-c819-423c-8930-a62abc965c17)");

unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'hAAA],
"EXT DMEM (Testcase #238 314ff806-ae14-4f60-861d-583a5c46cc7b)");
unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'hAAB],
"EXT DMEM (Testcase #238 abb58c92-87b4-413c-b366-394488fe784e)");
datamem_ext_i.datamem[13'hAAA] =
datamem_swap[16'hAAA];
datamem_ext_i.datamem[13'hAAB] =
datamem_swap[16'hAAB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #239
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD144;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #239)");
    end
end

unit.assert_eq16(16'hD144, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #239 b11a815d-5278-4352-8069-dc3d7fad68c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #239 2b67d348-d859-46cb-a613-cec019d52180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #239 66f07411-f998-423c-8efa-b26351b97521)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #239 6ab19e7a-226f-469c-847e-0b49c3ce90e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #239 36e5c257-4fe1-4ad0-ad4b-bc3fd8bb3ddf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #239 d6df3415-76cd-4ce5-829f-a601f16614a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #239 ca10910d-8b12-439e-bf65-3096e61e179c)");

unit.assert_eq8(8'h44, datamem_ext_i.datamem[13'hB3B],
"EXT DMEM (Testcase #239 dd5dc3ef-1db1-4ac5-9992-5580096fcf29)");
unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'hB3C],
"EXT DMEM (Testcase #239 b70fa89b-4c01-45b1-b4aa-587b07fb4686)");
datamem_ext_i.datamem[13'hB3B] =
datamem_swap[16'hB3B];
datamem_ext_i.datamem[13'hB3C] =
datamem_swap[16'hB3C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #240
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA338;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #240)");
    end
end

unit.assert_eq16(16'hA338, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #240 57524fe1-b42f-4c1f-841d-4cb94204e101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #240 0621bbcf-1944-4cb3-8b2b-20d4fe5233ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #240 499d305c-3c04-4665-be9c-1daed4826e30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #240 8817278b-4ad2-40c6-8c94-8e01ee8738d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #240 31477188-4c97-4beb-8f2b-966e01c9902d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #240 7bbf3cef-41f5-476f-9a33-634969083566)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #240 e7b7f920-3e81-4ae3-a3fa-92c8a33050bb)");

unit.assert_eq8(8'h38, datamem_ext_i.datamem[13'hD2F],
"EXT DMEM (Testcase #240 411cc414-f71e-42ac-828c-3093f34bafb5)");
unit.assert_eq8(8'hA3, datamem_ext_i.datamem[13'hD30],
"EXT DMEM (Testcase #240 c07e078e-bd99-4b7f-96d9-742cb97f46b1)");
datamem_ext_i.datamem[13'hD2F] =
datamem_swap[16'hD2F];
datamem_ext_i.datamem[13'hD30] =
datamem_swap[16'hD30];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #241
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD842;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #241)");
    end
end

unit.assert_eq16(16'hD842, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #241 792e1683-4c91-469c-80c2-06a5d8fe6d00)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #241 afb37700-8634-4548-afae-85ab9e5a8d02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #241 e914fd5f-c3a0-4b26-80b9-35c4ea5aebd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #241 0dcc2301-5f95-49c8-b7f0-fc8530bae6f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #241 9be1e5ef-c1f9-4288-a2aa-44eae9ea3452)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #241 b57e376b-8f4e-44bc-901b-033dae546b0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #241 6364721c-d743-4f59-8a6f-f3afa94a3dde)");

unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'h85E],
"EXT DMEM (Testcase #241 ec63c59a-5546-4ee9-8bd7-2c4c98233a24)");
unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'h85F],
"EXT DMEM (Testcase #241 44768957-3322-41ab-b54b-5f659fb5b647)");
datamem_ext_i.datamem[13'h85E] =
datamem_swap[16'h85E];
datamem_ext_i.datamem[13'h85F] =
datamem_swap[16'h85F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #242
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #242)");
    end
end

unit.assert_eq16(16'h5E93, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #242 8612fe50-d01d-45cb-ba14-0fbfd615ae76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #242 a67a51c2-c79a-4f2f-90e0-fadf15eb429a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #242 4f90e059-d4ee-4393-aa9a-90b1be3ff485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #242 cad397d0-52e0-44cd-af6b-77d21f80232e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #242 51b4b9a8-6426-4bb3-8d7e-68425865c388)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #242 85febeb3-bbee-4689-8d86-1d8353f069b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #242 d3905245-a3a9-4e91-87de-ff32d271641b)");

unit.assert_eq8(8'h93, datamem_ext_i.datamem[13'hB22],
"EXT DMEM (Testcase #242 c49f67dc-1fd5-42ef-b5c3-8e67f4e23d40)");
unit.assert_eq8(8'h5E, datamem_ext_i.datamem[13'hB23],
"EXT DMEM (Testcase #242 a1b8f61d-d1df-4333-a941-8e12e9b82db4)");
datamem_ext_i.datamem[13'hB22] =
datamem_swap[16'hB22];
datamem_ext_i.datamem[13'hB23] =
datamem_swap[16'hB23];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #243
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1DAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #243)");
    end
end

unit.assert_eq16(16'h1DAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #243 3c9753b5-b88e-4221-a789-f84fdbe7777a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #243 64fbacbe-11e7-4b9c-9c56-62bdf7383941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #243 3ee90c36-19f2-4d7d-91b9-03538f6848f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #243 91a9dba3-374a-42c1-b8bc-faa6bcab21a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #243 56b274b8-b3a4-4290-bbf5-cfe96854c894)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #243 55aa1b4a-0f06-4f39-820c-9b3dfcda9358)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #243 4c0ae1c6-58ec-4e8c-b222-c6cbcd2d3836)");

unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h33F],
"EXT DMEM (Testcase #243 4bdc18c0-3bc6-47ba-b3db-b922f161f229)");
unit.assert_eq8(8'h1D, datamem_ext_i.datamem[13'h340],
"EXT DMEM (Testcase #243 9b600e64-5f32-4dd5-83ff-7ad00ebeae57)");
datamem_ext_i.datamem[13'h33F] =
datamem_swap[16'h33F];
datamem_ext_i.datamem[13'h340] =
datamem_swap[16'h340];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #244
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8F24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #244)");
    end
end

unit.assert_eq16(16'h8F24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #244 9221b028-d908-484a-82d3-0cb63e286842)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #244 463aab54-3405-4ea8-85c5-845ddab466e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #244 ff93e464-a644-4c7f-b18e-e250b54ce102)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #244 f742d0d5-8620-485f-bac3-16ece8811a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #244 31f6464d-a4c0-409f-be6a-ce4df4c27508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #244 21654edf-a2dd-44a5-958c-8bb9ee073e27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #244 db351590-666f-4893-b576-ec21baad7eb5)");

unit.assert_eq8(8'h24, datamem_ext_i.datamem[13'h417],
"EXT DMEM (Testcase #244 7aedac42-f56c-4c35-abd8-23f31a855bae)");
unit.assert_eq8(8'h8F, datamem_ext_i.datamem[13'h418],
"EXT DMEM (Testcase #244 ce014c4d-61aa-4d92-a5f3-51b79073439f)");
datamem_ext_i.datamem[13'h417] =
datamem_swap[16'h417];
datamem_ext_i.datamem[13'h418] =
datamem_swap[16'h418];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #245
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #245)");
    end
end

unit.assert_eq16(16'h59C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #245 6d3ecf79-9338-4e4a-8f8c-dca70bde1c99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #245 bd7ea0ea-36f0-47bd-970b-2429d441933e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #245 d69da90b-1fa7-44ab-baba-6ec2288c60d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #245 ccfd8ccf-3fad-4e66-872f-70fb8f699308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #245 69c437eb-df1d-4512-89e3-63524985aa28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #245 0ae80017-b1aa-47b3-a0b4-1fedb535476b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #245 38729691-07a4-4434-8266-15a269506675)");

unit.assert_eq8(8'hC6, datamem_ext_i.datamem[13'h351],
"EXT DMEM (Testcase #245 54a48ab3-bedc-4f3b-8ebc-e924cf2dd18e)");
unit.assert_eq8(8'h59, datamem_ext_i.datamem[13'h352],
"EXT DMEM (Testcase #245 88c4b363-0b93-4e4d-98c8-e0520836c370)");
datamem_ext_i.datamem[13'h351] =
datamem_swap[16'h351];
datamem_ext_i.datamem[13'h352] =
datamem_swap[16'h352];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #246
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1BF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #246)");
    end
end

unit.assert_eq16(16'h1BF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #246 f934b079-a275-438c-9b09-cf1f43d4a39b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #246 4506864d-4b5c-4090-a1ac-7a8f28889256)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #246 ba26acd8-ca5a-4e32-aa93-9014e4f383db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #246 322aa369-5f41-4fd1-ba6b-348784a53d1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #246 9ee351a8-3e6a-4594-b76f-a19c8fa20160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #246 89422e83-ee17-45ff-a292-d4d930bde026)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #246 c3fe3b5e-742d-4e52-9dca-48f6f2ee95ac)");

unit.assert_eq8(8'hF6, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h94],
"INT DMEM (Testcase #246 67e27286-9c0f-4f1f-ae55-ea43ce7758a4)");
unit.assert_eq8(8'h1B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h95],
"INT DMEM (Testcase #246 e7c9b3d9-279f-440a-bfd0-17986d213fc8)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h94] =
datamem_swap[16'h94];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h95] =
datamem_swap[16'h95];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #247
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE5CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #247)");
    end
end

unit.assert_eq16(16'hE5CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #247 a2d327dc-b8c7-4b91-bb43-302acd33758c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #247 d3418637-98f3-46d2-9a60-a4d8b7fbdfc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #247 bb7f9075-f3ca-4340-8968-34d5bf40a0ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #247 ea1af3ce-4cf6-4b65-9694-b305122f4a78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #247 5bd160d2-93e5-413b-8d92-dfa82c33fedd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #247 99a731fb-841a-475a-8955-016de130ed8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #247 e9010546-2a61-46af-ac09-91b1be89f77e)");

unit.assert_eq8(8'hCE, datamem_ext_i.datamem[13'h5DE],
"EXT DMEM (Testcase #247 7d8dbd7c-1c50-40f2-8d8d-2ff97373342e)");
unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'h5DF],
"EXT DMEM (Testcase #247 dc238e6c-9d53-42bc-87a7-af68bf8c027a)");
datamem_ext_i.datamem[13'h5DE] =
datamem_swap[16'h5DE];
datamem_ext_i.datamem[13'h5DF] =
datamem_swap[16'h5DF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #248
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1252;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #248)");
    end
end

unit.assert_eq16(16'h1252, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #248 6d4bb84a-6da0-467b-8d07-ac928aebcc3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #248 2c0e2339-5a77-44c7-90fe-877a617aca09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #248 87375f86-7b52-47d6-ad31-0c8f7df70e96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #248 0975cf8c-ac17-4395-9418-2741e0894439)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #248 95eb7e89-6edd-49b4-b577-e786ef807dc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #248 4efd6a9d-204e-4a90-9b08-d6707a64e9ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #248 6b6c347f-1809-414a-8f36-d80e4d589241)");

unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'h769],
"EXT DMEM (Testcase #248 520a762b-b604-47b9-a8dd-f22f3b3a9c65)");
unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h76A],
"EXT DMEM (Testcase #248 4a22e4a6-e8b0-4978-bdf9-400412ca5dd4)");
datamem_ext_i.datamem[13'h769] =
datamem_swap[16'h769];
datamem_ext_i.datamem[13'h76A] =
datamem_swap[16'h76A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #249
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hADD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #249)");
    end
end

unit.assert_eq16(16'hADD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #249 8e67a6b0-ef9d-4604-8abd-7ea26eaed71c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #249 977d5696-2af6-4da9-9970-8136b8df9fbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #249 2e2ee8c0-ace1-44ff-97c1-4ea1bd3e0cec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #249 58679497-43cf-45b7-a409-34747cbb6240)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #249 20e8431e-3033-4a5e-bf9e-d32a49043d26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #249 feb23e18-26a3-43c7-9039-c696b957d66b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #249 eac12e30-e797-4dc9-99b9-b795911e6ff5)");

unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h677],
"EXT DMEM (Testcase #249 b90483ce-853c-4337-8613-d502a1e2a46e)");
unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h678],
"EXT DMEM (Testcase #249 71f6deb9-77a3-447e-902c-c1ba1076a9e4)");
datamem_ext_i.datamem[13'h677] =
datamem_swap[16'h677];
datamem_ext_i.datamem[13'h678] =
datamem_swap[16'h678];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #250
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h82B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #250)");
    end
end

unit.assert_eq16(16'h82B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #250 853e9259-e116-499c-8735-158b0bd929ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #250 4b9991e4-deed-426e-a8fb-629eb4c11806)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #250 f68e3853-e48d-4699-92be-fd51267c4463)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #250 d9d0efa2-8bdd-48bc-8e27-4faedf332e64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #250 87df1e1a-67fd-44da-b65b-c3ab9f54d3c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #250 b6aa070d-f831-4f1e-a269-170433d10879)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #250 e8604d28-1213-4146-9255-4198e6d5e2b5)");

unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'hBE0],
"EXT DMEM (Testcase #250 80c0de83-fb98-4578-813a-13787ba7098e)");
unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'hBE1],
"EXT DMEM (Testcase #250 fb0a45c3-9997-409b-b87f-042deec785b8)");
datamem_ext_i.datamem[13'hBE0] =
datamem_swap[16'hBE0];
datamem_ext_i.datamem[13'hBE1] =
datamem_swap[16'hBE1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #251
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h25BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #251)");
    end
end

unit.assert_eq16(16'h25BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #251 418ff408-fb70-4ec1-8736-447ccd4b2889)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #251 46b9edb6-cfa4-4753-84e8-6c18a94cc815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #251 a5c03354-12bb-4a9b-8964-35ddc34a813f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #251 f5428722-2256-4f1f-991e-0960f4d842b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #251 d6b74ee9-0f4f-4d32-a013-75aa226d4dff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #251 1d935e7f-8ca4-4b2e-adaf-3a20b8267bbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #251 c7b31a2f-f211-4d2b-9081-63e91a003f54)");

unit.assert_eq8(8'hBB, datamem_ext_i.datamem[13'hB34],
"EXT DMEM (Testcase #251 7c1c79e8-48fd-488e-aa1a-2f76311f296f)");
unit.assert_eq8(8'h25, datamem_ext_i.datamem[13'hB35],
"EXT DMEM (Testcase #251 ec2267a3-ffb0-493b-a984-a87ef634a59c)");
datamem_ext_i.datamem[13'hB34] =
datamem_swap[16'hB34];
datamem_ext_i.datamem[13'hB35] =
datamem_swap[16'hB35];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #252
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1FEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #252)");
    end
end

unit.assert_eq16(16'h1FEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #252 d67c0594-cde2-49eb-bc4f-1337773cde04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #252 d50f89b1-0bb9-464d-b7ae-f9e1a51d38b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #252 5044339d-80dc-446f-bf62-22b97ee9e191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #252 b13653e5-d11f-4033-a404-0eafa2f85e52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #252 46e50624-bb48-4bb4-b7fe-e13751afa0ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #252 8013e9a6-3328-4363-a2c6-9978be6fb567)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #252 eab1f751-5165-4c9a-bcdc-ce9d0b4925a1)");

unit.assert_eq8(8'hEC, datamem_ext_i.datamem[13'h53A],
"EXT DMEM (Testcase #252 8f41cbee-0e55-4f26-8830-f32cf35b6b6f)");
unit.assert_eq8(8'h1F, datamem_ext_i.datamem[13'h53B],
"EXT DMEM (Testcase #252 c594a5aa-9eb5-47a7-a10c-d6d468417354)");
datamem_ext_i.datamem[13'h53A] =
datamem_swap[16'h53A];
datamem_ext_i.datamem[13'h53B] =
datamem_swap[16'h53B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #253
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB9A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #253)");
    end
end

unit.assert_eq16(16'hB9A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #253 b0d51000-b39f-4ad5-8783-9843c202e5e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #253 f04c2c30-513f-4fe6-9934-9e797e27ef51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #253 753438d8-436a-4958-9ffc-467aa745a2a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #253 cc2b838e-e455-4d7e-8ef6-af729b766e43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #253 4b152d99-7032-4221-a90d-ef2e9522cee3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #253 0f990931-ff5b-49de-b4a2-a482cb554613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #253 dc85a884-aaeb-40ee-ae25-219dc9796e4d)");

unit.assert_eq8(8'hA1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hE5],
"INT DMEM (Testcase #253 4d3451f2-df68-498b-9fe6-08fc2b07c96d)");
unit.assert_eq8(8'hB9, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hE6],
"INT DMEM (Testcase #253 6e816704-c5c3-4a6d-93af-1d49cbcb5f96)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hE5] =
datamem_swap[16'h1E5];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hE6] =
datamem_swap[16'h1E6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #254
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h71A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #254)");
    end
end

unit.assert_eq16(16'h71A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #254 49bec733-39cd-4a86-bcb8-acc77f4429d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #254 05279058-a01f-4c69-a4be-138194d88196)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #254 185f8728-8174-4b22-9408-b1e091231a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #254 2abf4b1f-589b-40dc-8787-9aa1cb26125d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #254 2ff490a9-4610-4fa1-9f7c-3f7c4425abab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #254 af9da17c-5957-4592-bbd2-dd7db639b286)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #254 1150ae11-246b-4e40-8e37-f0e3d5be37b1)");

unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'hBE6],
"EXT DMEM (Testcase #254 519cba8f-8cb0-4088-a669-409f2f4c21c2)");
unit.assert_eq8(8'h71, datamem_ext_i.datamem[13'hBE7],
"EXT DMEM (Testcase #254 9b8e840a-3b30-4127-99ee-089ab5661218)");
datamem_ext_i.datamem[13'hBE6] =
datamem_swap[16'hBE6];
datamem_ext_i.datamem[13'hBE7] =
datamem_swap[16'hBE7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #255
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h64ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #255)");
    end
end

unit.assert_eq16(16'h64ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #255 37096b16-bbd2-4158-aa99-0e3437be1320)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #255 c335ec00-1e21-4f9f-ac2b-1b3324ceee1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #255 fc8d47d1-699c-49d7-8d46-6c373486393e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #255 0a5528df-3a93-45df-9d7e-d77343de9404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #255 4290733c-0767-4d76-8041-a035b6a93180)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #255 3ee964df-6a33-4539-969d-27c07a6f5cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #255 fccfb148-6471-4021-b1d2-cf7fa58db52f)");

unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'hA56],
"EXT DMEM (Testcase #255 57f4d443-07ff-46d8-8bc7-91dadc04d785)");
unit.assert_eq8(8'h64, datamem_ext_i.datamem[13'hA57],
"EXT DMEM (Testcase #255 1e3f0d1e-41c2-4e20-a71f-da4aaf1f6426)");
datamem_ext_i.datamem[13'hA56] =
datamem_swap[16'hA56];
datamem_ext_i.datamem[13'hA57] =
datamem_swap[16'hA57];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #256
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h67A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #256)");
    end
end

unit.assert_eq16(16'h67A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #256 d83e4bbc-b1f4-4d87-a925-4c3081e62f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #256 5fac5556-ba8e-495d-a4ce-a0b17cedf101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #256 9df927c4-e22c-4d70-bf37-fa8abb7386c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #256 501b2961-e1d0-452e-a8d7-1d4824b5c5c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #256 e5d0ebe8-afae-4fa5-a68c-76fd013ca97d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #256 4cb66d7a-da3c-46ab-bcb8-528c5e2073e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #256 de827ab8-32cc-4219-a0a6-468087e00a8a)");

unit.assert_eq8(8'hA6, datamem_ext_i.datamem[13'h219],
"EXT DMEM (Testcase #256 ac28f988-98a1-4083-afe3-79c81d26d821)");
unit.assert_eq8(8'h67, datamem_ext_i.datamem[13'h21A],
"EXT DMEM (Testcase #256 f512be21-3a41-4058-8550-1660ab40d918)");
datamem_ext_i.datamem[13'h219] =
datamem_swap[16'h219];
datamem_ext_i.datamem[13'h21A] =
datamem_swap[16'h21A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #257
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h708C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #257)");
    end
end

unit.assert_eq16(16'h708C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #257 4c79750a-b6dd-4ad9-9335-778494ea8824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #257 f372f0c2-3177-4229-91da-c0ee1c58736e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #257 424fbf9c-0d2d-47c2-b262-963d7ad7c3df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #257 3f1db712-3c0e-45ac-83f7-49f8c258abe2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #257 d870a662-ac49-4a93-9ab3-3f29af34d37d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #257 39ed1b43-60c3-48d1-8ba1-9090b54c7b09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #257 0fa0953a-b39e-41ae-b32c-03a30756c1dc)");

unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'hD60],
"EXT DMEM (Testcase #257 ae6a5541-870d-471c-b248-0667f19105dc)");
unit.assert_eq8(8'h70, datamem_ext_i.datamem[13'hD61],
"EXT DMEM (Testcase #257 500f7850-8525-40a2-a015-098e3baae704)");
datamem_ext_i.datamem[13'hD60] =
datamem_swap[16'hD60];
datamem_ext_i.datamem[13'hD61] =
datamem_swap[16'hD61];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #258
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9C57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #258)");
    end
end

unit.assert_eq16(16'h9C57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #258 737568ec-c9f2-46fd-942d-30a595750406)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #258 f3cf3f59-1d94-4839-9d93-2ad7327e01ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #258 0ffefcf4-521e-4e3d-b60a-9a686568bb03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #258 7067be5d-0f56-429b-9977-deeef18ac315)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #258 39d07139-ca89-4622-8400-20d11c6a578e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #258 b27b7c5f-90fe-4194-b6b1-46bd42e7c7b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #258 f91e16d4-d88f-4b47-869c-cdd157bd49b8)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'hCEE],
"EXT DMEM (Testcase #258 fa92d82a-bb88-4f1c-83b5-ae42a922f0c2)");
unit.assert_eq8(8'h9C, datamem_ext_i.datamem[13'hCEF],
"EXT DMEM (Testcase #258 354b7b73-35ed-492a-9fe6-719136f3b141)");
datamem_ext_i.datamem[13'hCEE] =
datamem_swap[16'hCEE];
datamem_ext_i.datamem[13'hCEF] =
datamem_swap[16'hCEF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #259
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC3E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #259)");
    end
end

unit.assert_eq16(16'hDC3E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #259 e890c580-bcc7-406b-a395-62d2253033c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #259 400be79a-6376-413a-b421-029aed86ffd0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #259 76f6fe3f-3d13-496b-90e6-f96b35357adb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #259 73a1190b-ccb6-4ca5-84af-39a02c1afff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #259 ad7ca8c1-d644-4ef2-a742-44d16f6755c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #259 1df72cdc-26b6-43ee-8b64-d2a735bbb2d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #259 53136337-6bbf-4f50-a937-0069d33b8fa6)");

unit.assert_eq8(8'h3E, datamem_ext_i.datamem[13'hBED],
"EXT DMEM (Testcase #259 9ba3420c-58eb-4f96-abb9-f8698f81d1c3)");
unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'hBEE],
"EXT DMEM (Testcase #259 293b1a2a-1f9c-413f-9fc4-23a423288bcd)");
datamem_ext_i.datamem[13'hBED] =
datamem_swap[16'hBED];
datamem_ext_i.datamem[13'hBEE] =
datamem_swap[16'hBEE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #260
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCC43;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #260)");
    end
end

unit.assert_eq16(16'hCC43, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #260 e86ad154-59e8-4baf-9bd6-051c9516034f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #260 6900b8d7-7cde-42a8-a51e-48e2ea647ea7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #260 e6f02287-f416-47b8-981b-bce9754df951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #260 3257f900-5565-463e-8c68-833b5fd8829c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #260 2828ba88-a937-4b82-ad00-de0f8445847b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #260 b549cb0e-04eb-465c-b3e5-8a4785e77c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #260 5e96d334-aea2-41b5-b5f5-8ff1a6fe36fb)");

unit.assert_eq8(8'h43, datamem_ext_i.datamem[13'hCEC],
"EXT DMEM (Testcase #260 e5ebbe15-122d-4927-8b18-51c421ef1549)");
unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'hCED],
"EXT DMEM (Testcase #260 1e1e638e-5c61-4265-bc50-a447de13c594)");
datamem_ext_i.datamem[13'hCEC] =
datamem_swap[16'hCEC];
datamem_ext_i.datamem[13'hCED] =
datamem_swap[16'hCED];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #261
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h97D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #261)");
    end
end

unit.assert_eq16(16'h97D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #261 a027c166-f16b-4603-af6c-2b7ff711f6af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #261 9a330353-729a-4b58-a32e-5cee5fafdefe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #261 db1f915e-c390-4d98-a1ef-2b202a48e4bb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #261 4db40ab4-6305-4754-aa90-805c1b121dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #261 739e4ac0-622c-4223-a80c-086af12ec9c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #261 784500ce-ab43-45ab-8cc1-83be47d998dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #261 c0e8d912-9140-4002-b506-56d81d8ff04b)");

unit.assert_eq8(8'hD8, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h74],
"INT DMEM (Testcase #261 365534dc-bcb3-4ff2-b072-e6f23b3e440c)");
unit.assert_eq8(8'h97, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h75],
"INT DMEM (Testcase #261 0e4b393f-d2e8-499d-86c3-073c48e9bf1d)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h74] =
datamem_swap[16'h74];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h75] =
datamem_swap[16'h75];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #262
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h69C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #262)");
    end
end

unit.assert_eq16(16'h69C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #262 48f47e7a-6659-4004-bdf0-9d7aabb98203)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #262 e5072a5d-33ad-4027-9db8-7938ff57bd65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #262 9cef0602-a5be-4ace-8413-e59271fccbcf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #262 224f14bf-7522-4e83-b25f-82c05fb669a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #262 4b8f6062-6d00-4c72-bd27-c84d154cab4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #262 3098c0f0-8d19-40c0-b457-8627c869974c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #262 683238e5-e4e6-4fff-a8ec-efbd2447dd82)");

unit.assert_eq8(8'hC5, datamem_ext_i.datamem[13'hA8E],
"EXT DMEM (Testcase #262 87784cff-aed6-470e-a136-d691f0a324f9)");
unit.assert_eq8(8'h69, datamem_ext_i.datamem[13'hA8F],
"EXT DMEM (Testcase #262 0f5f65ca-c716-4056-a1b4-eea761161a0e)");
datamem_ext_i.datamem[13'hA8E] =
datamem_swap[16'hA8E];
datamem_ext_i.datamem[13'hA8F] =
datamem_swap[16'hA8F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #263
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBE10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #263)");
    end
end

unit.assert_eq16(16'hBE10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #263 d5a54ad0-7986-4025-9366-6d14aac5b613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #263 ccaf0558-638d-4134-9d55-6da928fb6790)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #263 d90ace01-6596-4dd8-b48a-8efc652711c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #263 ae00ae27-12a4-4325-ac84-a2618170cea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #263 34516f7f-1dfd-4f66-88ac-0d781e7d90a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #263 6138ef5c-2615-464c-b049-41742574aa6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #263 25c7bcfe-1efc-49ff-9013-8008a395fb78)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'h751],
"EXT DMEM (Testcase #263 f28c0595-6b75-40e4-aeaf-3e57a8af731e)");
unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'h752],
"EXT DMEM (Testcase #263 216c84a0-ee8c-41d6-aed1-2162c83f1a88)");
datamem_ext_i.datamem[13'h751] =
datamem_swap[16'h751];
datamem_ext_i.datamem[13'h752] =
datamem_swap[16'h752];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #264
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #264)");
    end
end

unit.assert_eq16(16'hE857, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #264 8c45b6df-7f0f-4f75-9a7f-42835cb151d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #264 899a8325-b6a3-4011-98e0-710bcb24707b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #264 16332705-abe7-4c8d-a950-c1d1b113e893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #264 facc93cf-621f-4ed6-b362-cba4dee85908)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #264 240de0a6-69f5-4060-a813-f9f819a8ca1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #264 9a675fbf-0434-4b96-a69e-6057e3d92ef3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #264 2ca00193-9d30-4f9d-9df9-662018feb2f2)");

unit.assert_eq8(8'h57, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h85],
"INT DMEM (Testcase #264 baa6deec-06a9-403b-bf03-658f3e77a587)");
unit.assert_eq8(8'hE8, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h86],
"INT DMEM (Testcase #264 fd43ecfd-48a5-464d-92e8-d3592d1f24e8)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h85] =
datamem_swap[16'h85];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h86] =
datamem_swap[16'h86];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #265
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC31D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #265)");
    end
end

unit.assert_eq16(16'hC31D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #265 6da0ae6e-1a53-4c66-ab40-bc5ce5bdf158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #265 aba22f65-835e-4c48-abff-36aa75927b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #265 a734736d-54f2-4cf8-8187-8867819c4a96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #265 9feac4db-6956-419a-bd06-13ef9b371c6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #265 0558ec58-97be-4962-899f-b8eb6e2dfe78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #265 2210196b-4e2c-4f2a-81d0-d4db7a0764ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #265 de2c238a-e562-44d2-a3b8-ea89b56c0999)");

unit.assert_eq8(8'h1D, datamem_ext_i.datamem[13'h695],
"EXT DMEM (Testcase #265 90c32e97-0274-4f96-91bf-014174ecae71)");
unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'h696],
"EXT DMEM (Testcase #265 321240fd-0b57-4ad3-9193-8e8c1c11e87c)");
datamem_ext_i.datamem[13'h695] =
datamem_swap[16'h695];
datamem_ext_i.datamem[13'h696] =
datamem_swap[16'h696];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #266
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #266)");
    end
end

unit.assert_eq16(16'h0E78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #266 36a16302-350b-447e-8699-6266eb0b9714)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #266 b00a28e6-a5f4-438c-b9ef-9a1c70ce614c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #266 412ec131-aa13-4477-9b36-d3e62252ac4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #266 913db642-2289-405b-a9ca-905d00ecd298)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #266 2dfdd204-3e8e-4164-b7a1-77c568fd3432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #266 5890fd7a-a3a0-44b3-ba68-5835d96bdb2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #266 4f295a5d-41b7-40cb-ac52-1a06f460c132)");

unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'h637],
"EXT DMEM (Testcase #266 7620845d-5e69-41cf-a61a-3b531f4ac0ac)");
unit.assert_eq8(8'h0E, datamem_ext_i.datamem[13'h638],
"EXT DMEM (Testcase #266 1dc9c8fc-1913-43d7-8d6a-1c77b8ccaac9)");
datamem_ext_i.datamem[13'h637] =
datamem_swap[16'h637];
datamem_ext_i.datamem[13'h638] =
datamem_swap[16'h638];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #267
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AA6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #267)");
    end
end

unit.assert_eq16(16'h0AA6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #267 c51e7559-56a5-4cd7-941e-a3910a4a78f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #267 c50550ef-cecd-4d4f-b871-c2e96df0621f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #267 a86bb06b-5a26-4f5c-8e05-10a939226fdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #267 0cbecd15-c097-4fc9-bd97-8ca5ca84a86e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #267 e1ecf62d-fb7c-41e2-b87f-3de5c8eda062)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #267 707bbaa4-0a75-42dd-b541-7e05ec6bcfd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #267 4e6a9aa4-274c-4f00-83ba-6f27866e4ddb)");

unit.assert_eq8(8'hA6, datamem_ext_i.datamem[13'h87A],
"EXT DMEM (Testcase #267 569653af-58c3-4932-896f-90b3cf3d38a0)");
unit.assert_eq8(8'h0A, datamem_ext_i.datamem[13'h87B],
"EXT DMEM (Testcase #267 804cb54c-1fed-4f64-be75-5c6fbe57aa10)");
datamem_ext_i.datamem[13'h87A] =
datamem_swap[16'h87A];
datamem_ext_i.datamem[13'h87B] =
datamem_swap[16'h87B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #268
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2D0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #268)");
    end
end

unit.assert_eq16(16'h2D0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #268 39d9a449-2971-4605-bfd0-998ef9f86f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #268 c3734415-d8dd-45b9-89e3-7822000a9f63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #268 71048fa2-1080-41cd-95d3-3aae0bda4711)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #268 96ce3eb5-c432-4458-970c-064d38604461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #268 ba537329-79ca-405e-b453-6511f6df3eda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #268 f9f700f6-e9a4-4997-86e6-658e3a244903)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #268 188e58e3-cd30-4da4-a50b-cbc3ada8beb5)");

unit.assert_eq8(8'h0E, datamem_ext_i.datamem[13'hD14],
"EXT DMEM (Testcase #268 ee76f156-3caf-4715-987b-f891395785f5)");
unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'hD15],
"EXT DMEM (Testcase #268 2a8e5c7c-1a10-49de-8cd2-dd0af03e0a13)");
datamem_ext_i.datamem[13'hD14] =
datamem_swap[16'hD14];
datamem_ext_i.datamem[13'hD15] =
datamem_swap[16'hD15];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #269
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDCE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #269)");
    end
end

unit.assert_eq16(16'hDCE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #269 4f6dab8a-3b4a-489e-ae41-04a3df7fdbf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #269 e946523b-8b0f-407a-952e-ed5670c1f938)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #269 efee02d4-7e9d-4bd2-afff-0d70c6479516)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #269 8b819bda-49c8-40d7-9a74-43d2cd5db07e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #269 a78c20d6-969e-4ade-920a-274368237422)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #269 ec86852c-3ead-4038-ac9b-88d829294f4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #269 4a2ea178-b4ab-4da8-bb19-7201c5ecf0e9)");

unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'hF04],
"EXT DMEM (Testcase #269 99f2509f-53f4-4e68-969f-24605fd4d53d)");
unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'hF05],
"EXT DMEM (Testcase #269 ea347793-860e-468f-9774-e63ad8d5b15e)");
datamem_ext_i.datamem[13'hF04] =
datamem_swap[16'hF04];
datamem_ext_i.datamem[13'hF05] =
datamem_swap[16'hF05];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #270
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h81C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #270)");
    end
end

unit.assert_eq16(16'h81C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #270 d73aad5f-8ed6-4124-abb1-282a5ed14c34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #270 4f942e7b-d8e7-41f5-acfd-200a6cd5fa1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #270 cd138aa7-4b02-4419-a473-70a9ba0bd51c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #270 da2826d5-834e-49a9-9f5c-45a762d794eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #270 d1750575-6f4f-49d4-8851-98771fe68c42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #270 d115f866-cee2-402d-a1eb-c255ee4d7730)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #270 d315a7bc-63c9-4ebc-89f5-38d0d0e14455)");

unit.assert_eq8(8'hC8, datamem_ext_i.datamem[13'hE02],
"EXT DMEM (Testcase #270 9f1c7838-894c-4c36-b4a9-94af4568ae52)");
unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'hE03],
"EXT DMEM (Testcase #270 8f766d1b-ef4e-4712-97ef-e148fcd63521)");
datamem_ext_i.datamem[13'hE02] =
datamem_swap[16'hE02];
datamem_ext_i.datamem[13'hE03] =
datamem_swap[16'hE03];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #271
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFEB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #271)");
    end
end

unit.assert_eq16(16'hBFEB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #271 6289f17b-e6f6-4f06-9533-bd5270a16327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #271 50661e40-bfdb-4a9e-a672-0eb2a1046d32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #271 6cb56c30-dcae-4d5c-a6c4-e75fb530d522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #271 1d8f0520-d273-43c2-b81b-38665893ffea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #271 06550ce2-864e-4592-a106-3080c85d78d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #271 ff32457a-5ef4-4858-86c1-b62abbe4986a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #271 d6225074-241b-467b-bc38-5ee5a550ba57)");

unit.assert_eq8(8'hEB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h52],
"INT DMEM (Testcase #271 986ccebd-14da-4321-868e-3daf57dec6e7)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h53],
"INT DMEM (Testcase #271 0b38c29b-f9a7-484f-a81d-080a853bb2a1)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h52] =
datamem_swap[16'h52];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h53] =
datamem_swap[16'h53];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #272
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0611;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #272)");
    end
end

unit.assert_eq16(16'h0611, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #272 8dc63855-fdc6-434c-bd0a-cf31ba21b00f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #272 39a390bf-59eb-4c3a-9420-89171c42d920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #272 4f171cec-1d27-45da-b813-8bae614c4967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #272 7c9abbb7-0f7d-4f24-8270-59e981b39c6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #272 88ced29b-49cb-4a42-89d4-3cb0f8932aa1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #272 846b06f5-6290-4264-9859-0fd10e5a9e13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #272 f3db8fba-d4b7-4db2-be8a-34d71332a7ac)");

unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'h3A1],
"EXT DMEM (Testcase #272 8bd6b165-411b-4dbf-b8d3-788b6938df1c)");
unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h3A2],
"EXT DMEM (Testcase #272 cd77fe21-3cca-4ddf-aece-bc6b0f593a39)");
datamem_ext_i.datamem[13'h3A1] =
datamem_swap[16'h3A1];
datamem_ext_i.datamem[13'h3A2] =
datamem_swap[16'h3A2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #273
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h811C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #273)");
    end
end

unit.assert_eq16(16'h811C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #273 c491a0b4-83b4-481a-8516-40be188b395a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #273 4e495b41-1070-477b-974e-ea27f94e0f84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #273 c99e26c6-c219-438f-8fd0-4685a9d3fad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #273 5fa4eaaa-bca1-4398-bbc5-ab21cc0b8178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #273 01e1af18-d0ff-4e3d-9843-737eb9d2bc8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #273 55c48231-9eab-4932-b94d-fb853c54988a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #273 526b5bdf-1007-4c9f-95c7-17899259a840)");

unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'h564],
"EXT DMEM (Testcase #273 a6b92b46-38e2-4e62-8549-f9ae8793e70d)");
unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'h565],
"EXT DMEM (Testcase #273 69f87e1d-cac0-4db6-aab8-b3a261d1a6ed)");
datamem_ext_i.datamem[13'h564] =
datamem_swap[16'h564];
datamem_ext_i.datamem[13'h565] =
datamem_swap[16'h565];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #274
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h61F5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #274)");
    end
end

unit.assert_eq16(16'h61F5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #274 7790b254-a43c-403d-9a16-da2a3df14680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #274 fcbe2cf3-3c31-4b9c-a3d7-2adf4e24593c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #274 fefbe3b6-8035-4813-beeb-1f0ac4c8eefb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #274 8f73e7fc-f5da-4307-96bb-9e251cf0c0f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #274 a32a5a0a-f8d5-46a6-861e-158dac4b94d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #274 10d0d637-b272-4b6f-a31c-d96144c05deb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #274 31593139-02ec-4d9f-bcca-9b0ae8d155ae)");

unit.assert_eq8(8'hF5, datamem_ext_i.datamem[13'hC6B],
"EXT DMEM (Testcase #274 d0b29a35-0567-48af-9c64-55de44cbcdb9)");
unit.assert_eq8(8'h61, datamem_ext_i.datamem[13'hC6C],
"EXT DMEM (Testcase #274 e821e206-9117-477e-b98a-9055859965c3)");
datamem_ext_i.datamem[13'hC6B] =
datamem_swap[16'hC6B];
datamem_ext_i.datamem[13'hC6C] =
datamem_swap[16'hC6C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #275
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA7D0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #275)");
    end
end

unit.assert_eq16(16'hA7D0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #275 06e92d18-c194-4cc6-8199-bf4ee0387cc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #275 ffdaa50a-2b91-446c-89f7-5805b25c3037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #275 6f5335c4-976a-4e4a-9c3e-d3d3c4f37e19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #275 52bd67c1-406c-48b8-b1a8-c201605d00ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #275 fecbcabf-42a0-4f8b-8ed9-b48f731bc063)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #275 671021d7-ae82-440d-a325-2ee958f79f4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #275 8e7c28d3-f3dd-4245-ac9c-97c1cd57ea32)");

unit.assert_eq8(8'hD0, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h66],
"INT DMEM (Testcase #275 7d880fcd-f085-494e-9f6e-42a56da152ad)");
unit.assert_eq8(8'hA7, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h67],
"INT DMEM (Testcase #275 2105df85-94c4-4e3b-b0c6-ab7773e1f7c6)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h66] =
datamem_swap[16'h66];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h67] =
datamem_swap[16'h67];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #276
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2EF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #276)");
    end
end

unit.assert_eq16(16'h2EF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #276 4bec81b6-c9ec-4bf5-9528-1d40d64f7824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #276 98edaf86-3728-4248-8374-01b039ba8893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #276 bf1a66b1-b03d-48c1-9f46-059bc478c6a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #276 d25ac004-5711-4b9a-87cf-73433fc091d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #276 7562d23d-ecbc-4a8f-ab12-4779ab041436)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #276 e75bf653-6375-46fe-b460-53b72787754b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #276 ef9edde0-83f4-4d23-b158-2d3056a5dcdd)");

unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'hA69],
"EXT DMEM (Testcase #276 1b855af4-7a69-4843-a027-c14e40ac9e02)");
unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'hA6A],
"EXT DMEM (Testcase #276 035725b7-21e1-4182-9980-3e45113d4344)");
datamem_ext_i.datamem[13'hA69] =
datamem_swap[16'hA69];
datamem_ext_i.datamem[13'hA6A] =
datamem_swap[16'hA6A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #277
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h22FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #277)");
    end
end

unit.assert_eq16(16'h22FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #277 d6c1d8a4-e218-416b-825f-119bb22a747b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #277 df3fed46-1c55-40c8-b3b4-cc469ee456cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #277 597c40c9-ecc0-4a76-85ff-8cb1c60a2abf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #277 a1cba36e-84a6-4bd6-969f-2eda3efb3505)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #277 eed88100-4a5a-4e14-9405-621998d4ed3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #277 0f41ce98-7631-40d8-ab69-92fc74437e28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #277 36b4434e-3b9b-4ac9-8650-73428419610e)");

unit.assert_eq8(8'hFE, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h80],
"INT DMEM (Testcase #277 50640a67-24d5-4eeb-98b0-4e563c194ffa)");
unit.assert_eq8(8'h22, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h81],
"INT DMEM (Testcase #277 def7f287-6068-41cb-809a-927c34ff110a)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h80] =
datamem_swap[16'h80];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h81] =
datamem_swap[16'h81];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #278
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF34F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #278)");
    end
end

unit.assert_eq16(16'hF34F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #278 71f009ba-5b2e-40cf-82fe-bb1ed5556002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #278 b27e38c4-ae0d-431b-abb8-330578570cbb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #278 ce1ea57a-decf-4f95-8388-720501abd213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #278 1cecdfba-0d04-4c2c-8ee1-cf35fa777abc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #278 27b4c0b2-8cbc-4f63-ac52-8e6719d4994f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #278 6e55513a-1a24-4822-9f6c-b8895514b0dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #278 a786285d-4b22-49bd-bd7e-fe74f3184b6e)");

unit.assert_eq8(8'h4F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h75],
"INT DMEM (Testcase #278 0ef5d683-4110-4d48-b154-76a8a16b5cb3)");
unit.assert_eq8(8'hF3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h76],
"INT DMEM (Testcase #278 dd086b92-1c8d-451e-92f0-5a79b8f2a598)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h75] =
datamem_swap[16'h175];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h76] =
datamem_swap[16'h176];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #279
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #279)");
    end
end

unit.assert_eq16(16'hFFBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #279 f0b6096c-400d-44a9-b590-1b4086c1b145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #279 b046920f-43d4-43fb-98d9-717fa031784f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #279 f494b8ad-6274-4766-9e6b-ab1c54d97a9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #279 47c1b3c4-c8f9-4f52-a948-866fdec5ea5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #279 19a0dff6-aa95-438c-bc69-4b4a51ab23b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #279 5bf85048-9193-4cf0-8318-3817d4f69be5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #279 a8f5161a-50b6-4837-bf8e-ea368a9a1c0a)");

unit.assert_eq8(8'hBD, datamem_ext_i.datamem[13'hF58],
"EXT DMEM (Testcase #279 c1b0df02-5efa-4684-b88c-a931b026cf9a)");
unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'hF59],
"EXT DMEM (Testcase #279 e840b515-cbee-4b83-9253-dca52a7d12f0)");
datamem_ext_i.datamem[13'hF58] =
datamem_swap[16'hF58];
datamem_ext_i.datamem[13'hF59] =
datamem_swap[16'hF59];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #280
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAAEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #280)");
    end
end

unit.assert_eq16(16'hAAEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #280 04bc6695-e425-420f-a21f-3a1c7e9d0130)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #280 7141e90d-cd8c-4942-a225-1016bbaaa6db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #280 b6ae4617-dd18-4a3b-9fe6-b8c5f8a8b298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #280 8bd0868d-02fe-4246-bcb0-a5eab6c4816c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #280 621648f8-8a68-4ae1-8933-909cd60174b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #280 e2371c69-f5ec-4cd4-a5f4-2e991557b775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #280 3e1e0e22-0909-45e4-9332-0ae82d354a55)");

unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'hC8F],
"EXT DMEM (Testcase #280 ad6c2c55-5119-4537-b1c0-e61ba74496dc)");
unit.assert_eq8(8'hAA, datamem_ext_i.datamem[13'hC90],
"EXT DMEM (Testcase #280 8be33b7e-654f-4015-b536-cbd8195885db)");
datamem_ext_i.datamem[13'hC8F] =
datamem_swap[16'hC8F];
datamem_ext_i.datamem[13'hC90] =
datamem_swap[16'hC90];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #281
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9627;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #281)");
    end
end

unit.assert_eq16(16'h9627, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #281 51622ff8-ac2a-48ea-b388-d2af605decb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #281 40f7f2d4-6691-4ecc-99d9-b58db9f9e069)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #281 d7e8b2dd-3104-4cdf-9cca-e7a44a38716f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #281 28fb3453-7574-4ef7-be7c-46593f4189cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #281 fc88f997-2c25-4251-91cd-42efa3e40bfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #281 46dda3c5-30bd-4283-b5bc-d422a16b5c9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #281 7dbd8fc4-232e-4e47-8e59-12a98d16805b)");

unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'h8B7],
"EXT DMEM (Testcase #281 3d3cbd17-e858-43ac-8558-0536b09bcc64)");
unit.assert_eq8(8'h96, datamem_ext_i.datamem[13'h8B8],
"EXT DMEM (Testcase #281 f780feef-0a9c-4fbf-bc06-e91e3d403270)");
datamem_ext_i.datamem[13'h8B7] =
datamem_swap[16'h8B7];
datamem_ext_i.datamem[13'h8B8] =
datamem_swap[16'h8B8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #282
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB39F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #282)");
    end
end

unit.assert_eq16(16'hB39F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #282 12a4a627-437c-424e-8cb1-67a49651073c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #282 c7aa9d9a-830d-40a6-b13a-fa63f7656704)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #282 aa784cff-f881-472a-91ba-dae69e1225d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #282 5a399556-e418-4aea-8e33-678228c553d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #282 15f89fe2-bd6f-483b-81d8-1e230a39849e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #282 9be1db44-51b4-4b9a-860b-06019dcbd28e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #282 8513b929-ac58-48fa-9318-4f52fc7f7ff3)");

unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h805],
"EXT DMEM (Testcase #282 26d226f0-8b2c-4473-8aa8-a6e8007ecd70)");
unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'h806],
"EXT DMEM (Testcase #282 59085583-e36e-485c-bb61-b5c70ea247e3)");
datamem_ext_i.datamem[13'h805] =
datamem_swap[16'h805];
datamem_ext_i.datamem[13'h806] =
datamem_swap[16'h806];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #283
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8C52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #283)");
    end
end

unit.assert_eq16(16'h8C52, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #283 4eec43c4-49d4-4c24-8daf-aa9339334771)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #283 66c235f4-7f95-46ac-9d20-05ec884d0dd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #283 cd600ff6-ec17-4278-8f36-10b073a656ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #283 d6de5db6-28a2-4564-98d2-159ce8958231)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #283 db921d7c-6e43-42ba-bf23-e47e68d52018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #283 b31fe26b-a36b-4ee2-aa3a-12b24e1e9901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #283 a2d536a2-1c8a-43d4-a023-d54e10257c12)");

unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'hA48],
"EXT DMEM (Testcase #283 935f455e-b6e2-4b86-a316-8774e2d1f2e9)");
unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'hA49],
"EXT DMEM (Testcase #283 6c54323f-f3ab-45cc-8271-f5e08e02926a)");
datamem_ext_i.datamem[13'hA48] =
datamem_swap[16'hA48];
datamem_ext_i.datamem[13'hA49] =
datamem_swap[16'hA49];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #284
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h22A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #284)");
    end
end

unit.assert_eq16(16'h22A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #284 f5173b0d-da6f-4d00-b850-53aff11c66c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #284 f08b711a-b38f-40da-b741-bd9050c72cc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #284 dfdad705-fc6c-471f-8b44-7d469daabafb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #284 9f7441ce-f837-4811-8923-103ca1297d83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #284 063958af-72d6-4a1f-8ca1-ffa317940adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #284 9bcd278c-1ac6-407c-ad1f-ede93acc0fcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #284 ae25610d-761b-4b20-81d3-ce026fef4853)");

unit.assert_eq8(8'hA5, datamem_ext_i.datamem[13'h9F8],
"EXT DMEM (Testcase #284 2c843456-4761-4245-a2d1-8a46135b8335)");
unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'h9F9],
"EXT DMEM (Testcase #284 09404c71-abde-4b12-93f8-bff6be0a2e3e)");
datamem_ext_i.datamem[13'h9F8] =
datamem_swap[16'h9F8];
datamem_ext_i.datamem[13'h9F9] =
datamem_swap[16'h9F9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #285
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1467;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #285)");
    end
end

unit.assert_eq16(16'h1467, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #285 dc10bb3e-84f7-4bd0-bcd2-6c615cbdbda0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #285 9fec1ac3-9830-4017-a68b-a741887f0ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #285 c185e76a-d377-4747-8672-61263660ee2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #285 e1c5a905-3a26-4730-af65-96db3b5466c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #285 d3f3e6f3-6d56-4d4a-ba63-999cce3f8540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #285 57e5efa4-f398-4b44-8763-61a1ef47ef23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #285 2fa0f7ed-78d0-4517-a7c8-94ca117b8b72)");

unit.assert_eq8(8'h67, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h7F],
"INT DMEM (Testcase #285 3f8bab11-abc4-4a39-a047-324ac724c504)");
unit.assert_eq8(8'h14, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h80],
"INT DMEM (Testcase #285 afe792e6-7805-4626-892f-901a6235a1f0)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h7F] =
datamem_swap[16'h7F];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h80] =
datamem_swap[16'h80];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #286
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE6D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #286)");
    end
end

unit.assert_eq16(16'hE6D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #286 0c53228f-5fd4-4ef3-97b0-74f1d2219900)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #286 4c7dda9f-be50-45d0-912d-508bbd5d2e6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #286 9b9e77b1-dbd4-4eae-b26f-1ab64def2fda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #286 b59a2c3f-6bec-46f5-830d-88790f94784e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #286 2076cb1a-3e29-4211-a134-85730625bc39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #286 43f726f6-0ada-4346-933e-8c30283c2556)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #286 cc885dac-a913-4c5f-b79b-617a30dd2514)");

unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'hE7E],
"EXT DMEM (Testcase #286 4215c17d-44ce-444c-9e0a-a33083818f30)");
unit.assert_eq8(8'hE6, datamem_ext_i.datamem[13'hE7F],
"EXT DMEM (Testcase #286 88fab3db-c171-411e-9e9c-ddc59aabc129)");
datamem_ext_i.datamem[13'hE7E] =
datamem_swap[16'hE7E];
datamem_ext_i.datamem[13'hE7F] =
datamem_swap[16'hE7F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #287
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #287)");
    end
end

unit.assert_eq16(16'hDB2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #287 406d6887-c4ab-4ed8-b50b-dee53ba04aa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #287 e0635ce9-496b-4fa4-9753-157c9e0ea8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #287 fd892862-d81a-42fb-8014-9e9abf5f8242)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #287 4547b5e0-9679-4654-af91-0a5fc961a310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #287 9b1a5a4c-a6b3-433b-b7e5-65f3fd02349a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #287 f4f390b7-50a6-4e99-9c34-419e968b0db6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #287 7f6dfa5a-477e-4ade-8431-8249a86de995)");

unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'h9BA],
"EXT DMEM (Testcase #287 afac0964-fb32-40d8-95ca-32c06f6c56d6)");
unit.assert_eq8(8'hDB, datamem_ext_i.datamem[13'h9BB],
"EXT DMEM (Testcase #287 907ad330-7454-4d60-83e2-038333d321f3)");
datamem_ext_i.datamem[13'h9BA] =
datamem_swap[16'h9BA];
datamem_ext_i.datamem[13'h9BB] =
datamem_swap[16'h9BB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #288
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h61AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #288)");
    end
end

unit.assert_eq16(16'h61AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #288 73d32d09-ac23-4353-be8f-67044d94dc79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #288 e41a2455-3b19-4211-8763-a5171db1e0aa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #288 d20a1647-af6c-4ed9-b0b2-a478e5cfb0cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #288 cd2b12e1-84cc-4997-a629-94aa77968737)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #288 7a9a46db-5120-4f10-806f-a8338b505db9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #288 6ddc0c3a-ca08-4a50-a548-1b62395854b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #288 3ee6b7c0-5e28-4b55-85dc-301b3860dad2)");

unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'hB88],
"EXT DMEM (Testcase #288 15e76e1b-f81f-43f2-8b14-ffab9b27fed7)");
unit.assert_eq8(8'h61, datamem_ext_i.datamem[13'hB89],
"EXT DMEM (Testcase #288 ce70b210-c68a-42a5-80cc-9d3d74a71c79)");
datamem_ext_i.datamem[13'hB88] =
datamem_swap[16'hB88];
datamem_ext_i.datamem[13'hB89] =
datamem_swap[16'hB89];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #289
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #289)");
    end
end

unit.assert_eq16(16'h5DCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #289 3b5e88f0-a0b3-4558-b6ea-de709d5935ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #289 53b2a5ec-3a9e-4cce-b158-b020c6776246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #289 c6eab29e-0247-4b11-8b53-5ba63b2b8161)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #289 41c0720e-b306-467c-a81f-dd0b10f6eaf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #289 682b17b7-17af-418a-af62-2e0eae400742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #289 381e08f6-bd85-4fa1-8210-1e17f0ad6ffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #289 38692968-5560-41a0-a164-36e0c4476e3e)");

unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'h595],
"EXT DMEM (Testcase #289 f1cfc2aa-cb4c-4920-8c6e-99e9f2be989b)");
unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'h596],
"EXT DMEM (Testcase #289 e8f3051c-b323-4d22-b640-ce28e5605c2a)");
datamem_ext_i.datamem[13'h595] =
datamem_swap[16'h595];
datamem_ext_i.datamem[13'h596] =
datamem_swap[16'h596];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #290
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D52;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #290)");
    end
end

unit.assert_eq16(16'h5D52, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #290 7204f817-1308-4d38-87b2-490c309e3552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #290 d6332f90-d16c-49fc-aeba-be299ac36208)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #290 6b20a70d-ef0a-47e8-89b4-fa5081e5cf66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #290 4692b07b-1a06-4846-bd78-faf700b7165f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #290 3bb426bf-0dd2-4494-a076-0ae42dc25a95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #290 883b38de-a015-4a8e-8493-070fbd675167)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #290 2d4ace3c-38cb-4431-b84b-6d961ab05662)");

unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'h6F5],
"EXT DMEM (Testcase #290 867be5f9-676f-46c2-ac52-c284af334523)");
unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'h6F6],
"EXT DMEM (Testcase #290 a29dcc6f-29a1-4117-9041-4550ab86d992)");
datamem_ext_i.datamem[13'h6F5] =
datamem_swap[16'h6F5];
datamem_ext_i.datamem[13'h6F6] =
datamem_swap[16'h6F6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #291
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5C26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #291)");
    end
end

unit.assert_eq16(16'h5C26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #291 f266e22d-6454-403b-883b-57fbed4c5e02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #291 5c0a58c7-0c30-420e-80da-fbc5b87ad1db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #291 b8399282-5481-4463-9ad5-06d8f22baeb6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #291 0040346c-61f0-4b96-b950-f861f60a2e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #291 f6899682-fc62-489d-bc4e-ca75f0fc614f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #291 4e09b63a-f6b4-4bdb-8799-ce7ee6bde83a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #291 558171dd-1d87-4ce8-8add-911d6a36f6d9)");

unit.assert_eq8(8'h26, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1A],
"INT DMEM (Testcase #291 e249e6b4-92e6-4a5a-b3f6-eeacc9f5bee1)");
unit.assert_eq8(8'h5C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1B],
"INT DMEM (Testcase #291 cf6522c6-7ee3-4c78-8918-bc204a20d7dd)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1A] =
datamem_swap[16'h1A];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1B] =
datamem_swap[16'h1B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #292
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE7A5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #292)");
    end
end

unit.assert_eq16(16'hE7A5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #292 773e0313-3a10-47cc-94ba-a04019806b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #292 f45944cf-cec2-4bb1-b8c6-3564526bad5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #292 14118781-8a75-4348-ac3d-0d32c9be87ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #292 2d39c51c-f709-4ee6-8685-316123e11aaa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #292 54092575-99af-4e99-9c2c-ea4c96ace60d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #292 e9d7769d-c8d0-48fd-9b55-42aa0e038eee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #292 3192e9fb-8683-4250-b4f6-024139428292)");

unit.assert_eq8(8'hA5, datamem_ext_i.datamem[13'hF4A],
"EXT DMEM (Testcase #292 8b293810-0018-4e1d-bca6-a6d50f90717d)");
unit.assert_eq8(8'hE7, datamem_ext_i.datamem[13'hF4B],
"EXT DMEM (Testcase #292 c129c2d6-f918-4361-9cf0-a871e6bc0ba5)");
datamem_ext_i.datamem[13'hF4A] =
datamem_swap[16'hF4A];
datamem_ext_i.datamem[13'hF4B] =
datamem_swap[16'hF4B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #293
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h64D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #293)");
    end
end

unit.assert_eq16(16'h64D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #293 fc84e31c-1474-4ca4-a32a-12a105341385)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #293 d95db934-b096-4041-a0fc-4178d7e6c6d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #293 f40853a2-84c5-4d2f-8d82-9773fcecf1c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #293 52034ff4-c2e4-4471-bcb2-721b345af303)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #293 774f9582-0bf5-4e38-880c-9a21bbb1ade6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #293 3479a628-4ded-4a4b-8970-69b00f213873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #293 c1b2a032-9898-4c3f-81b1-50881e455c87)");

unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'hC5E],
"EXT DMEM (Testcase #293 7569b680-d7ae-40d1-8081-3801dba5c87d)");
unit.assert_eq8(8'h64, datamem_ext_i.datamem[13'hC5F],
"EXT DMEM (Testcase #293 3e85ba77-61df-4bb6-9e1a-4f09196262ad)");
datamem_ext_i.datamem[13'hC5E] =
datamem_swap[16'hC5E];
datamem_ext_i.datamem[13'hC5F] =
datamem_swap[16'hC5F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #294
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCD0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #294)");
    end
end

unit.assert_eq16(16'hCD0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #294 5676c08c-0716-4b08-9159-1982c043359e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #294 44246eab-9e3d-4e44-a841-a90a606eb66f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #294 859081cb-2c53-42b6-a0cf-e0537b619ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #294 41bc28ba-930e-43e7-a0be-cd7fc2b4a5ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #294 889d5e0f-d98c-42e6-8c0a-b982c52efa86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #294 675949f6-8d30-4588-91f5-ca939a624f63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #294 4eb1680e-1ab6-482e-be8c-d632908c6d24)");

unit.assert_eq8(8'h0F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8C],
"INT DMEM (Testcase #294 23c95239-8614-4a6f-a745-686d67facb81)");
unit.assert_eq8(8'hCD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8D],
"INT DMEM (Testcase #294 60e1212b-fa98-4457-b79c-703cd815b927)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8C] =
datamem_swap[16'h18C];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8D] =
datamem_swap[16'h18D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #295
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF65B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #295)");
    end
end

unit.assert_eq16(16'hF65B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #295 ec505882-5744-4278-b312-e1322cce8fe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #295 0a0d8d82-3f0f-4577-92f8-cea21bb430e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #295 7eed443e-cd83-4a80-8c0d-b96c33acc8ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #295 441a6574-2ce0-4268-89fb-ff797bcbf69d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #295 f8499509-82f0-4833-860b-83ec4437a459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #295 7d755f4b-7bd9-4b73-8f33-8ae7730ef2c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #295 8f30f520-fe5f-45d0-825d-b2fbd9fac9e8)");

unit.assert_eq8(8'h5B, datamem_ext_i.datamem[13'hB7C],
"EXT DMEM (Testcase #295 73811489-10a6-45d4-94e9-69eae9c188f0)");
unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'hB7D],
"EXT DMEM (Testcase #295 04177b3d-381b-44d1-b65d-e3e63674e800)");
datamem_ext_i.datamem[13'hB7C] =
datamem_swap[16'hB7C];
datamem_ext_i.datamem[13'hB7D] =
datamem_swap[16'hB7D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #296
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC778;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #296)");
    end
end

unit.assert_eq16(16'hC778, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #296 245075b5-7ee0-484d-9fe7-d34721e86c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #296 bf29845b-ad3b-4476-bdc4-cb6eef14a7f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #296 abfba4a5-1ac9-4c43-96fa-59e246514628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #296 e5c952ac-ae33-4bbe-9d3b-e37b1f5e2d86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #296 b2bd12ef-5c9e-4762-87ed-c819754c9c8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #296 f994c8a1-7657-40df-89a4-5d4153aa4c61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #296 b894cdca-927c-46d5-a321-35763111c2d0)");

unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'hEFA],
"EXT DMEM (Testcase #296 fd81ae88-1473-454c-a8b3-efe3b5ffb209)");
unit.assert_eq8(8'hC7, datamem_ext_i.datamem[13'hEFB],
"EXT DMEM (Testcase #296 6a892fb9-b78e-4165-9541-820bdae1f55c)");
datamem_ext_i.datamem[13'hEFA] =
datamem_swap[16'hEFA];
datamem_ext_i.datamem[13'hEFB] =
datamem_swap[16'hEFB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #297
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9135;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #297)");
    end
end

unit.assert_eq16(16'h9135, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #297 5c93c821-c2f3-491d-867b-d1a5b0f7512b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #297 870fe223-079e-4e6c-8862-3bbdf4362951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #297 3b0dac81-a12e-4a7d-8227-06748fc185dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #297 9ba605ac-3468-4d46-859a-582ab91ff416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #297 f2fca685-ae1e-4600-85c0-66b4d05620a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #297 e8db1673-276a-44cc-8dae-7c39b71f029e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #297 a6cfc634-6b7a-47fe-b980-27d601054891)");

unit.assert_eq8(8'h35, datamem_ext_i.datamem[13'h597],
"EXT DMEM (Testcase #297 a4a8565d-db4a-4ab2-9aa4-589f1afc9fbe)");
unit.assert_eq8(8'h91, datamem_ext_i.datamem[13'h598],
"EXT DMEM (Testcase #297 9e9b4c6e-e071-43d1-b95a-8a5e592b795c)");
datamem_ext_i.datamem[13'h597] =
datamem_swap[16'h597];
datamem_ext_i.datamem[13'h598] =
datamem_swap[16'h598];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #298
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h41FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #298)");
    end
end

unit.assert_eq16(16'h41FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #298 63d1ee68-598f-43b8-8bfb-1691e58ee540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #298 85cb1ae4-8de3-497e-abf0-bfb16574eb52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #298 4ad38bed-2e24-4ba1-b02e-c78b8ff872a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #298 7f472e80-92f7-4dba-9fbe-799a7f4a26f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #298 7dfe1d15-6409-43b5-b462-ddeabaeaac74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #298 0adfe3e6-05aa-4954-9596-27cce084b508)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #298 7bbcfe32-102b-41a7-9e96-abd0a94f8ba5)");

unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'hED7],
"EXT DMEM (Testcase #298 aca0e8c5-74b5-4095-801e-3ca2ea35d9ed)");
unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'hED8],
"EXT DMEM (Testcase #298 ca139199-8b98-4423-a638-51c65c3c5be2)");
datamem_ext_i.datamem[13'hED7] =
datamem_swap[16'hED7];
datamem_ext_i.datamem[13'hED8] =
datamem_swap[16'hED8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #299
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0294;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #299)");
    end
end

unit.assert_eq16(16'h0294, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #299 0628c9f8-be5a-4b21-8874-d8e24293eb4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #299 011b22c7-d145-40be-9879-47226fbc5a8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #299 5a5d7820-e5f4-417a-8f47-0ba8ca9a478b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #299 1dd087e1-244b-4e25-b05a-12d53a5d2509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #299 539a5a4c-ad3b-4272-abf9-6e7533617464)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #299 c8a9c127-15b2-4377-bf17-76be7f336235)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #299 d3ca9db9-56fe-4df0-b3b9-0e86dd590c4d)");

unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'h3A2],
"EXT DMEM (Testcase #299 583f8898-a339-408e-a8d1-cca5f10569ed)");
unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'h3A3],
"EXT DMEM (Testcase #299 15bb32df-700a-49b7-9b98-7dca842a9cf6)");
datamem_ext_i.datamem[13'h3A2] =
datamem_swap[16'h3A2];
datamem_ext_i.datamem[13'h3A3] =
datamem_swap[16'h3A3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #300
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h005C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #300)");
    end
end

unit.assert_eq16(16'h005C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #300 970ddbf8-f87d-4013-b6ff-50a6c5cb2b1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #300 40a39e47-e578-4541-a153-4e42cf0e9b0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #300 45d3e893-0f96-46c9-8aa3-355f58582940)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #300 db168d83-3923-420a-a168-e94c7895b3e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #300 58aceae9-2deb-4cbe-8228-3ba415cfc140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #300 db49f1f3-7d48-4cac-86ed-50aa2f9b9d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #300 6d9b1711-fbe7-41c1-881e-73c8d6cde743)");

unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'hC47],
"EXT DMEM (Testcase #300 eb05c80f-9589-49a8-ad88-9a0af45c3790)");
unit.assert_eq8(8'h00, datamem_ext_i.datamem[13'hC48],
"EXT DMEM (Testcase #300 22f87a5b-cdb1-4b96-8172-802bc19d85c2)");
datamem_ext_i.datamem[13'hC47] =
datamem_swap[16'hC47];
datamem_ext_i.datamem[13'hC48] =
datamem_swap[16'hC48];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #301
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB1D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #301)");
    end
end

unit.assert_eq16(16'hB1D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #301 55a10e66-7d3d-4357-b2bd-3b952fd221f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #301 936e3a38-4d23-419f-b0d4-675c7b6736ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #301 68eee834-2915-4314-9120-d54906861d1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #301 1eacf7e4-ddd3-4536-840e-af53eb8d5e39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #301 68236462-8c1f-43b0-a261-5439db7b200e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #301 aa62e8cc-298d-4438-b1c4-e988d62558dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #301 f128c808-96b0-4c1b-b8a3-8e8fa1559280)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'hF8C],
"EXT DMEM (Testcase #301 7da6c7a5-7d71-4682-a6db-93436c655b2e)");
unit.assert_eq8(8'hB1, datamem_ext_i.datamem[13'hF8D],
"EXT DMEM (Testcase #301 a0edafb6-55e4-4f5f-a119-90f38366f0a7)");
datamem_ext_i.datamem[13'hF8C] =
datamem_swap[16'hF8C];
datamem_ext_i.datamem[13'hF8D] =
datamem_swap[16'hF8D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #302
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB1C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #302)");
    end
end

unit.assert_eq16(16'hB1C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #302 9acca8df-edf8-468c-b15b-5accbb0aa9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #302 54a10e77-3ff6-4f33-8fae-faf237c2733d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #302 29d25b7b-21f2-4582-afdd-f55389bf6bbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #302 34b75745-c57b-44b4-bffd-c378f6ff903d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #302 5fa16e5d-c14f-4de3-b5d1-2c617eecb901)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #302 755ff3b5-0118-4379-8d44-7dfde1c78828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #302 cd8dd512-69ed-43f2-b707-f7167489d281)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hC58],
"EXT DMEM (Testcase #302 a9b09bde-9e74-480e-bb9f-2eccfb02c755)");
unit.assert_eq8(8'hB1, datamem_ext_i.datamem[13'hC59],
"EXT DMEM (Testcase #302 18b2a489-68d2-48d0-950d-bbddbf62e301)");
datamem_ext_i.datamem[13'hC58] =
datamem_swap[16'hC58];
datamem_ext_i.datamem[13'hC59] =
datamem_swap[16'hC59];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #303
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB6A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #303)");
    end
end

unit.assert_eq16(16'hB6A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #303 2f9615e0-5bed-4884-a44c-dbac286f9dca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #303 dbfb7a06-5799-4468-821a-6c2410025c2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #303 5421262b-747f-4f85-899f-9b71c66cbeba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #303 6d38927b-5ec1-4d62-9f01-94f34b969e22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #303 56fefde9-4233-466a-bab8-1c6c2abbab4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #303 ae23d106-5f2e-426a-a024-1753ea27b37d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #303 3391792a-3303-436f-8ffe-21f5cac863fd)");

unit.assert_eq8(8'hA8, datamem_ext_i.datamem[13'h836],
"EXT DMEM (Testcase #303 71fa328a-7aaa-4e94-bcd8-f6011a6cea05)");
unit.assert_eq8(8'hB6, datamem_ext_i.datamem[13'h837],
"EXT DMEM (Testcase #303 915af74d-c5e0-427f-8161-233d801db20a)");
datamem_ext_i.datamem[13'h836] =
datamem_swap[16'h836];
datamem_ext_i.datamem[13'h837] =
datamem_swap[16'h837];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #304
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h285E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #304)");
    end
end

unit.assert_eq16(16'h285E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #304 523884b9-e6d6-47a6-9f22-17cce3ec2c38)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #304 2863cb56-4f22-4281-aab0-4ebed25e5482)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #304 905c79cb-c5cd-4073-860d-2537391bd5cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #304 cd87f1b8-558c-4ca0-9c32-54bd2e4335f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #304 b35849ac-33df-4f58-87c7-9412903e3545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #304 8acfdbfd-2558-4197-b150-d315511746db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #304 09e63fc8-d239-43f3-877e-e50afae17c26)");

unit.assert_eq8(8'h5E, datamem_ext_i.datamem[13'h4DF],
"EXT DMEM (Testcase #304 14f7d1a8-d9f9-49f6-83a6-e1ead0221ab9)");
unit.assert_eq8(8'h28, datamem_ext_i.datamem[13'h4E0],
"EXT DMEM (Testcase #304 41130ad9-293b-4bbd-8eef-5ec986e87422)");
datamem_ext_i.datamem[13'h4DF] =
datamem_swap[16'h4DF];
datamem_ext_i.datamem[13'h4E0] =
datamem_swap[16'h4E0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #305
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h76AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #305)");
    end
end

unit.assert_eq16(16'h76AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #305 14e2a7aa-823c-48e8-9afc-d9fdfbd74b9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #305 07583b4c-af1b-4a93-a0f7-f0657ce5ce6b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #305 4af28d43-2c2b-49e7-b497-41922760df76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #305 f6033809-ab75-4aee-a49c-ec40bbcf6423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #305 fcfb5af6-a267-4511-a35f-f38f4ca0d35d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #305 423b8d28-ff9e-4621-bf25-df954a48dbe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #305 d66c714e-6fcb-421e-82c0-02606b314fd6)");

unit.assert_eq8(8'hAF, datamem_ext_i.datamem[13'hD51],
"EXT DMEM (Testcase #305 edd9dfbc-39a2-40e4-a3a2-ac30c7ecb86d)");
unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'hD52],
"EXT DMEM (Testcase #305 44819fd7-2f07-4532-83fc-53a44f348718)");
datamem_ext_i.datamem[13'hD51] =
datamem_swap[16'hD51];
datamem_ext_i.datamem[13'hD52] =
datamem_swap[16'hD52];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #306
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0768;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #306)");
    end
end

unit.assert_eq16(16'h0768, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #306 a001dbfa-bd43-409d-9a73-d28bfd87399d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #306 5b332ab4-0d40-40e5-9a3b-112d8f2a6796)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #306 d9a17727-68a5-4895-81d2-01ac9a5a972a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #306 72f90532-6484-4314-bde6-0cc6102727ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #306 09beb4bc-d463-42ed-b1c9-42d0ed550163)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #306 fa72bbfd-aa6c-4958-bb7c-e6e322970470)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #306 226a4fc7-bb9a-491f-a055-ce2d1b7870db)");

unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'h9D7],
"EXT DMEM (Testcase #306 87853ed1-5d08-48ec-b6a3-a53747af5dcd)");
unit.assert_eq8(8'h07, datamem_ext_i.datamem[13'h9D8],
"EXT DMEM (Testcase #306 c9584182-db8d-490a-8362-07d76363a12b)");
datamem_ext_i.datamem[13'h9D7] =
datamem_swap[16'h9D7];
datamem_ext_i.datamem[13'h9D8] =
datamem_swap[16'h9D8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #307
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF38D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #307)");
    end
end

unit.assert_eq16(16'hF38D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #307 ed6d5a9b-a2ff-4561-9116-06a05b54260c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #307 48c218aa-070c-4eb9-a82a-fc36cf299f17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #307 bfede4e2-c9af-4e1e-90b7-6132715a8f37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #307 6a1d4ae5-a63c-41bc-aa72-dc16f0f64ffe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #307 cb5abc20-92a7-4761-9315-52dcbd602bc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #307 217d7b50-44a0-45bf-847e-fdf90dd6f3f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #307 b845e958-8579-4ad6-bcdb-27c78063a7a3)");

unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'hAD2],
"EXT DMEM (Testcase #307 7ec85a97-de87-4475-a600-102e5fb900ae)");
unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'hAD3],
"EXT DMEM (Testcase #307 867afe1c-0951-4c0f-8b5c-c227765f4dfb)");
datamem_ext_i.datamem[13'hAD2] =
datamem_swap[16'hAD2];
datamem_ext_i.datamem[13'hAD3] =
datamem_swap[16'hAD3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #308
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h72D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #308)");
    end
end

unit.assert_eq16(16'h72D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #308 68b26104-ab8e-4edc-b03a-20bb285f6350)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #308 f0bb155c-2b13-4f62-9069-a981c3ca3851)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #308 2191b1bf-d72c-4819-8d23-a4002fe1787f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #308 3ec8a6b2-8ec2-4004-972b-df0e8c95fe80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #308 f3e852f8-d039-4618-be2e-43019c99a10c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #308 5e984d80-eba3-4602-bc8b-5957256eccaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #308 97595d5b-5dc2-4491-ad5f-ddc11f403ec6)");

unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'hAFB],
"EXT DMEM (Testcase #308 e1fa7de3-27a1-4c83-b5a2-62d52381df26)");
unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'hAFC],
"EXT DMEM (Testcase #308 2e5056f4-8c95-4ab5-9c7e-e253eaa0ac9f)");
datamem_ext_i.datamem[13'hAFB] =
datamem_swap[16'hAFB];
datamem_ext_i.datamem[13'hAFC] =
datamem_swap[16'hAFC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #309
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2672;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #309)");
    end
end

unit.assert_eq16(16'h2672, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #309 4f68907e-37c7-4652-8724-0584a217f168)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #309 77a9053a-1d7b-46eb-ae77-725dae16687f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #309 420463c7-d379-437a-8da8-d675ec2ae11c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #309 4a53ce95-beea-4a40-a39f-6e32471a4b05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #309 f6305984-afff-4457-bd2f-ca81a5e7d520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #309 81a09a4f-65bc-4930-8d64-b4a5287efdc5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #309 897cdf57-24d4-4082-b843-c4c06f98bb23)");

unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'hC7F],
"EXT DMEM (Testcase #309 821eed71-02a9-4d3e-a3ee-760dfe050408)");
unit.assert_eq8(8'h26, datamem_ext_i.datamem[13'hC80],
"EXT DMEM (Testcase #309 33b7270e-4e7a-4099-8c22-d1c041f2088c)");
datamem_ext_i.datamem[13'hC7F] =
datamem_swap[16'hC7F];
datamem_ext_i.datamem[13'hC80] =
datamem_swap[16'hC80];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #310
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #310)");
    end
end

unit.assert_eq16(16'h9DB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #310 89fa26ad-15f6-4dcd-a9cf-046038fbd767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #310 fb49a053-b27f-4c50-9d64-6c0c92417c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #310 d6d4de58-37cf-4462-a398-8b9c565491df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #310 fa6ba10d-fce1-4aa3-b457-5f9c8ead9ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #310 fc8fe2b5-29f3-45ae-bbda-3ac539d869b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #310 259196e4-6527-4e82-ba97-66eae020a015)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #310 6da7e7f0-e401-4428-9a2c-613cbdc41316)");

unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'h20C],
"EXT DMEM (Testcase #310 c3bbec58-efd1-42ad-b247-e71efcdd28f3)");
unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'h20D],
"EXT DMEM (Testcase #310 b9fc34a2-b157-4df0-ae28-547ec7d61a4e)");
datamem_ext_i.datamem[13'h20C] =
datamem_swap[16'h20C];
datamem_ext_i.datamem[13'h20D] =
datamem_swap[16'h20D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #311
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A1A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #311)");
    end
end

unit.assert_eq16(16'h0A1A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #311 6157df2d-95c7-4f67-8510-c84a65952b78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #311 22065940-8e96-425a-84cc-60841aced1a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #311 c3dc6189-3d35-4f92-bdcf-f954ebcccf17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #311 631f1c53-48ca-437a-8a23-57c8c2582605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #311 e4f7c785-f1fc-4a50-a577-851f055cdda9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #311 53b562ae-d28b-4be7-8c53-393d293403b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #311 45074448-cd53-4f22-a841-8044a30482ae)");

unit.assert_eq8(8'h1A, datamem_ext_i.datamem[13'hAC5],
"EXT DMEM (Testcase #311 19890fe0-fac6-4368-9c1e-ad42f40cf7bc)");
unit.assert_eq8(8'h0A, datamem_ext_i.datamem[13'hAC6],
"EXT DMEM (Testcase #311 aec641d1-0238-4399-919a-e315a7ab0b9e)");
datamem_ext_i.datamem[13'hAC5] =
datamem_swap[16'hAC5];
datamem_ext_i.datamem[13'hAC6] =
datamem_swap[16'hAC6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #312
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8E57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #312)");
    end
end

unit.assert_eq16(16'h8E57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #312 7983371f-6830-4fc6-8470-eb4657c3b014)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #312 54b88769-da10-4e4d-9d16-1f021d9bd0de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #312 a727ad02-f5cd-43f6-b9c8-a5fd59ef4cd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #312 c309fc4a-0eb4-46e5-9168-b9bfcf22b3e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #312 759dce82-134f-42ae-94b9-c6660ba4dc83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #312 6fbbc5e0-8e5f-4841-9112-154ab70c9213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #312 4deb14fe-7da9-485c-8d40-75e3807d256c)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'h5AC],
"EXT DMEM (Testcase #312 8c182d56-ff77-444c-9502-55b07c33ffbb)");
unit.assert_eq8(8'h8E, datamem_ext_i.datamem[13'h5AD],
"EXT DMEM (Testcase #312 7ace4f90-19f3-4bda-8733-c5c2faf9abcd)");
datamem_ext_i.datamem[13'h5AC] =
datamem_swap[16'h5AC];
datamem_ext_i.datamem[13'h5AD] =
datamem_swap[16'h5AD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #313
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #313)");
    end
end

unit.assert_eq16(16'h52C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #313 1e4d6eef-f330-48c1-a735-38466e0b7df6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #313 f9e73967-aa68-4f9d-b38a-c1a6b6925fd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #313 4587b816-f1d7-4573-8a5e-bc8e026cb9bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #313 eb0a9d66-ce4b-4e67-8239-12d2452dd8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #313 b8b5eb6f-54a3-4514-ba52-93df1dd88693)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #313 e62b6c5b-60ca-4cf8-85b6-684ba75bc475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #313 a709eefd-9cbd-4518-ab42-20f798440874)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h861],
"EXT DMEM (Testcase #313 4f80f5bd-893f-4cf8-beed-5dfe4cf27452)");
unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'h862],
"EXT DMEM (Testcase #313 97e8d2b9-fe8a-4326-8fdf-03a8c0809d09)");
datamem_ext_i.datamem[13'h861] =
datamem_swap[16'h861];
datamem_ext_i.datamem[13'h862] =
datamem_swap[16'h862];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #314
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9622;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #314)");
    end
end

unit.assert_eq16(16'h9622, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #314 1b460ae3-bd11-4e4d-9e45-cbda66e8ac76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #314 fc54b8ea-0474-41cd-b591-a4e9668a755e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #314 04982a46-3add-43bc-b9b4-666b3c048033)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #314 b81c2382-f7d3-40ac-b942-385ba50fee56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #314 03cbcb5a-03f0-4630-8668-4757076a66b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #314 65f09b43-8bc8-4775-97d7-01d67c95942b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #314 091f8d0b-804f-46cc-8e58-defef7358b1f)");

unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'hD02],
"EXT DMEM (Testcase #314 43719993-7488-4b42-beb4-63f1de61329e)");
unit.assert_eq8(8'h96, datamem_ext_i.datamem[13'hD03],
"EXT DMEM (Testcase #314 805480a7-7e0c-4c4a-a730-ad6fa072c440)");
datamem_ext_i.datamem[13'hD02] =
datamem_swap[16'hD02];
datamem_ext_i.datamem[13'hD03] =
datamem_swap[16'hD03];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #315
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h34E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #315)");
    end
end

unit.assert_eq16(16'h34E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #315 e7332ef3-3921-4d15-907b-822503ce0617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #315 b436e8a6-0a45-418c-bd14-9e481238dbeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #315 dc3bf168-ca6b-49c1-8419-9cf0437bde05)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #315 98636da7-9d12-471e-9053-c1c5be92b29f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #315 beb09166-9758-4598-9dbb-9fe0cc2a6bfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #315 13832ef4-652d-4ffc-83e7-92854da5554b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #315 2d252f1a-8af2-4488-b2e7-d5ee8ab7808c)");

unit.assert_eq8(8'hE0, datamem_ext_i.datamem[13'hACC],
"EXT DMEM (Testcase #315 9a7655e0-10a6-472f-a890-d7fe891434fd)");
unit.assert_eq8(8'h34, datamem_ext_i.datamem[13'hACD],
"EXT DMEM (Testcase #315 4437f0b8-3757-484b-94cf-6098c51bb028)");
datamem_ext_i.datamem[13'hACC] =
datamem_swap[16'hACC];
datamem_ext_i.datamem[13'hACD] =
datamem_swap[16'hACD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #316
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC4C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #316)");
    end
end

unit.assert_eq16(16'hC4C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #316 4cace27f-6bd9-4de0-9108-23281e1b5809)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #316 79f05ac6-b8b0-4493-9741-98df2bafd5b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #316 1069900d-76e6-47b2-a839-54fe905a6e26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #316 595c28dd-3fce-45ce-95fa-2ba350daa05b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #316 b343506a-2373-4c2c-9cbd-626cddc52ab5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #316 81175ca2-b967-48f4-a2a2-88ff6d5192b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #316 2d7e8895-e4e2-44bd-9599-aca4afa959db)");

unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'hF63],
"EXT DMEM (Testcase #316 2e693d21-2e03-413a-beba-18aa2deed8fd)");
unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hF64],
"EXT DMEM (Testcase #316 1c2d55f8-2a41-4cd2-a4ea-216ae69f6f26)");
datamem_ext_i.datamem[13'hF63] =
datamem_swap[16'hF63];
datamem_ext_i.datamem[13'hF64] =
datamem_swap[16'hF64];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #317
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h23B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #317)");
    end
end

unit.assert_eq16(16'h23B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #317 2ee161de-4a1f-46f7-9fdc-ba321b9db040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #317 23694bc3-b809-4eda-b7d3-80f0b2654c20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #317 e3cc6f90-f3a2-4c30-91b5-234212a07fee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #317 491a8b81-5d43-43d7-b7dc-24d35a30adb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #317 8aa21e7b-d99a-4659-b3db-0a3195028cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #317 7ad9206f-5110-49f6-a9fb-76680a11a74b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #317 1ebb9011-ce81-499c-b510-4219a8dd105e)");

unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'h52D],
"EXT DMEM (Testcase #317 c9676ac7-5d24-4198-abf2-6bc157c6b355)");
unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'h52E],
"EXT DMEM (Testcase #317 ab85a51b-c008-4504-8566-fb68acdf2015)");
datamem_ext_i.datamem[13'h52D] =
datamem_swap[16'h52D];
datamem_ext_i.datamem[13'h52E] =
datamem_swap[16'h52E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #318
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3DC6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #318)");
    end
end

unit.assert_eq16(16'h3DC6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #318 58f13d9f-e399-4f34-bb69-58ea6444bef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #318 e5855159-f083-4404-9768-4867ba88de6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #318 c1df3ab3-9a85-497c-a0ed-475264cf12fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #318 8b9fd34a-c6f5-4d76-8b17-e8acba7eb9b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #318 6e354f00-095c-4f03-a48e-30c914af3873)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #318 ff7d92c8-8a82-4f08-b4d6-51722fdf04ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #318 df312a46-7706-4745-9160-51bcba0ae894)");

unit.assert_eq8(8'hC6, datamem_ext_i.datamem[13'hEDF],
"EXT DMEM (Testcase #318 b116a0d1-dd58-49c4-949b-15c6e9972d0d)");
unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'hEE0],
"EXT DMEM (Testcase #318 87418763-bc5c-444d-b873-1cecdcce25c4)");
datamem_ext_i.datamem[13'hEDF] =
datamem_swap[16'hEDF];
datamem_ext_i.datamem[13'hEE0] =
datamem_swap[16'hEE0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #319
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAD83;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #319)");
    end
end

unit.assert_eq16(16'hAD83, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #319 1d183d14-65aa-4345-8197-a6bee9bb253f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #319 2921c5db-ae1a-4c8b-be35-bd3995fc0afc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #319 1df71357-f4ce-4e29-a2a3-07d5977619b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #319 d9c9e697-8eb0-43f9-846d-c5cebca75d3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #319 e1c25433-8cf4-4308-ac18-7372dafb2bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #319 cc4ad4c5-796a-46c1-afdf-ecda6312b4e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #319 ca993980-8f97-492c-b1f2-8b56dba978a7)");

unit.assert_eq8(8'h83, datamem_ext_i.datamem[13'h690],
"EXT DMEM (Testcase #319 c6c58c95-7d24-4f55-9f37-d5cbc2a9b083)");
unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h691],
"EXT DMEM (Testcase #319 41a087f1-e4e2-453b-a866-5d6b9022a0dd)");
datamem_ext_i.datamem[13'h690] =
datamem_swap[16'h690];
datamem_ext_i.datamem[13'h691] =
datamem_swap[16'h691];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #320
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF6F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #320)");
    end
end

unit.assert_eq16(16'hF6F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #320 d5ff02a9-aa1f-4e14-a1a5-fa8fea5988b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #320 a97f9db8-e61c-44cd-bbfa-6046c2f09fc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #320 c17da478-9fdf-4801-8025-4ca76f277df2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #320 7c76c7fc-0b83-4515-ac8f-b8a2de64e732)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #320 29569b43-ec7e-4844-9997-b64c9fd21a65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #320 926d030f-013f-4297-b8fa-f27d2b79929d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #320 23cb0979-4aae-4a34-957c-b8a8f019b7cb)");

unit.assert_eq8(8'hF9, datamem_ext_i.datamem[13'h94A],
"EXT DMEM (Testcase #320 b055f7ed-3ec2-47a3-803b-99a7a9dcccea)");
unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'h94B],
"EXT DMEM (Testcase #320 9dd7e040-bfb2-4eb9-a335-30549a93072e)");
datamem_ext_i.datamem[13'h94A] =
datamem_swap[16'h94A];
datamem_ext_i.datamem[13'h94B] =
datamem_swap[16'h94B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #321
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA1BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #321)");
    end
end

unit.assert_eq16(16'hA1BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #321 b4688a38-ad21-4c9d-89dc-8630ba266ec3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #321 2abef866-a9c3-4c62-8685-acf02da1afcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #321 1ba200b9-25d2-46e8-bcfa-e1a7299ee11c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #321 cc7def22-2a38-4f4c-8352-b60b207bacd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #321 d663c0e6-0260-4404-8cda-51968f21d219)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #321 e5eb16d8-6316-4233-acc8-41bd5e916dcd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #321 b136ac96-829e-4d8d-af9f-d76156dcee5c)");

unit.assert_eq8(8'hBA, datamem_ext_i.datamem[13'h878],
"EXT DMEM (Testcase #321 802b6bd9-bc0e-477c-a580-17c60b8f9f07)");
unit.assert_eq8(8'hA1, datamem_ext_i.datamem[13'h879],
"EXT DMEM (Testcase #321 900ff4dc-4ab6-4136-b1d7-74ba5c623d26)");
datamem_ext_i.datamem[13'h878] =
datamem_swap[16'h878];
datamem_ext_i.datamem[13'h879] =
datamem_swap[16'h879];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #322
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEEBC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #322)");
    end
end

unit.assert_eq16(16'hEEBC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #322 849ac4c2-5d22-4738-9d2e-293fad1023a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #322 90e9da14-6091-4d12-bb05-68f62ce0051c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #322 0ca82640-3864-43a2-85ed-26624ab66fa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #322 83a51229-cc6a-4e26-9098-c4590cacee13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #322 8adc8b76-03a6-4246-b6a4-8c8148558974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #322 d087e3f7-acf4-4821-8dd1-f4a7c996aca6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #322 2fbfc369-61cb-4157-9f6a-e81b03370ba5)");

unit.assert_eq8(8'hBC, datamem_ext_i.datamem[13'h347],
"EXT DMEM (Testcase #322 1c9f143e-a5b4-45bb-809e-3d5a1d3f7652)");
unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'h348],
"EXT DMEM (Testcase #322 3dbd5952-e3ed-4c5e-8860-fb2be92d833d)");
datamem_ext_i.datamem[13'h347] =
datamem_swap[16'h347];
datamem_ext_i.datamem[13'h348] =
datamem_swap[16'h348];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #323
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h95EA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #323)");
    end
end

unit.assert_eq16(16'h95EA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #323 80fcc1c1-5bc5-44ae-9876-d3e13b2a3f13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #323 b725a1b2-35ab-477a-84f7-3ec3daad2eb9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #323 6d909f2a-9f99-44b1-b933-59073c15a7ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #323 c6a31519-b0cb-4e54-9ad0-3e93270a12e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #323 40521ca2-c4fc-4ccf-8eb8-530ec5e29f08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #323 134371bb-62e7-4907-8b4b-7a3797879097)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #323 7d62b298-a95b-418d-935d-8697a0dc291e)");

unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'h399],
"EXT DMEM (Testcase #323 df9c857f-7ed4-4fd2-a86b-3df45db057bf)");
unit.assert_eq8(8'h95, datamem_ext_i.datamem[13'h39A],
"EXT DMEM (Testcase #323 61e5a51a-fcb0-4eef-9131-85a909f54cce)");
datamem_ext_i.datamem[13'h399] =
datamem_swap[16'h399];
datamem_ext_i.datamem[13'h39A] =
datamem_swap[16'h39A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #324
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3AFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #324)");
    end
end

unit.assert_eq16(16'h3AFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #324 ea20e09d-bcfc-41d2-aadf-85f474f47de2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #324 191199e1-5ede-4976-95a6-3c847eb574b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #324 b8fbaf97-6ffb-42e4-8946-87fbdaa1d7fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #324 b1ff7d30-0093-4839-8a0a-cb57fda32c91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #324 9d3598f1-f8c5-4e03-8036-ce551ea7b113)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #324 fed69ebb-e237-4cae-8efc-c72c008e540c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #324 8ab9760d-2ad4-4627-b539-c763c720634e)");

unit.assert_eq8(8'hFB, datamem_ext_i.datamem[13'h5CE],
"EXT DMEM (Testcase #324 636b323c-5032-4102-8113-045d511e9cb8)");
unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'h5CF],
"EXT DMEM (Testcase #324 8bb447f9-2340-42a4-9893-c2e35e191804)");
datamem_ext_i.datamem[13'h5CE] =
datamem_swap[16'h5CE];
datamem_ext_i.datamem[13'h5CF] =
datamem_swap[16'h5CF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #325
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #325)");
    end
end

unit.assert_eq16(16'h5D86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #325 e6eac8a9-55a6-453a-a5e1-d04e596a3648)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #325 acc1ee83-0f9a-432e-8e91-be31dd4a3b58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #325 d9187c1e-ff4c-4fe9-b42e-146553ac3245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #325 52c909d2-19f2-4134-b8bd-9ffe28ef0cbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #325 1de4bf1c-a457-4226-99c8-63eb8a6fff0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #325 e8ee20a5-2ac7-436f-a93f-681d0667c2ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #325 1f827be9-6f4c-48d1-9024-cc1aa6169295)");

unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'h60A],
"EXT DMEM (Testcase #325 cd408a1f-fd68-4c9e-afd0-50bc0063bbfe)");
unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'h60B],
"EXT DMEM (Testcase #325 6de64af7-6f7f-4a57-8091-6c0c3a02ea9a)");
datamem_ext_i.datamem[13'h60A] =
datamem_swap[16'h60A];
datamem_ext_i.datamem[13'h60B] =
datamem_swap[16'h60B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #326
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE567;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #326)");
    end
end

unit.assert_eq16(16'hE567, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #326 f3fccb3b-acb8-45d8-b209-735cfb0fd308)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #326 70ed5611-a17c-4243-9b5d-e7863328d962)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #326 5fb71570-a4a3-425e-bdd1-ef406d3e09d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #326 5700ba19-6872-4391-b465-4901340f751e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #326 92f76e1e-eb1a-44fd-b2e3-83069dbb1738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #326 93334293-9b5e-47a3-8e7e-46e723b723ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #326 d15823e0-b39a-4b96-adb9-b93b55005bc1)");

unit.assert_eq8(8'h67, datamem_ext_i.datamem[13'hD22],
"EXT DMEM (Testcase #326 d1986660-1cd0-4b9f-9a24-e96eccf9090d)");
unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'hD23],
"EXT DMEM (Testcase #326 82e64457-38d5-42d7-aee9-9a8fb601b757)");
datamem_ext_i.datamem[13'hD22] =
datamem_swap[16'hD22];
datamem_ext_i.datamem[13'hD23] =
datamem_swap[16'hD23];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #327
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h82BF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #327)");
    end
end

unit.assert_eq16(16'h82BF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #327 63308ff6-7115-4c9c-b935-7a59733c7ad7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #327 ec50b22c-5dc2-4af1-b6a8-f71f9672c054)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #327 5c01baa4-4923-4a60-9303-0f22eed3082c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #327 143c05b0-8667-4b68-b78a-060c98027213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #327 8a06ec3d-6819-46cd-94ce-c42f12a9050d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #327 ddff77e6-36b2-4ca1-8841-2f4b379040d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #327 371d6b42-50f0-4970-970f-56f27ddd7e5d)");

unit.assert_eq8(8'hBF, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB4],
"INT DMEM (Testcase #327 b6151aa5-575b-4ab3-8ce1-0bbdd260b0ee)");
unit.assert_eq8(8'h82, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB5],
"INT DMEM (Testcase #327 5dd05f0c-7559-46da-8323-7447a082bfc2)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB4] =
datamem_swap[16'h1B4];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB5] =
datamem_swap[16'h1B5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #328
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2F27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #328)");
    end
end

unit.assert_eq16(16'h2F27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #328 f19ce799-3ab3-41e5-b8dd-5d70cce71129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #328 6e6acacd-216a-4fc5-8d97-8c91d089901f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #328 e4c83a35-52b9-45a1-84ba-bf2cb41f4603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #328 ec80a96f-39d1-4554-a793-21b94e7d0868)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #328 924e819a-ce92-41ef-9a90-89511bee432b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #328 3c777d29-8ac6-4460-8a05-c024c898cebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #328 e4740a9f-ec9b-4a10-a9c1-d48abb3f3ffd)");

unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'hC93],
"EXT DMEM (Testcase #328 3dcc1b3e-ad97-4633-b5e0-ed38b933880e)");
unit.assert_eq8(8'h2F, datamem_ext_i.datamem[13'hC94],
"EXT DMEM (Testcase #328 736f0cca-6255-42dd-800c-d57423111cb7)");
datamem_ext_i.datamem[13'hC93] =
datamem_swap[16'hC93];
datamem_ext_i.datamem[13'hC94] =
datamem_swap[16'hC94];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #329
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDEE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #329)");
    end
end

unit.assert_eq16(16'hDEE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #329 9b22a3fb-177a-4f0d-bddb-123886dfd895)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #329 c5479c95-9a96-4e59-9f81-0133916ba0f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #329 e1ac0264-bf7a-4319-92ac-557a37c4df10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #329 00fe4856-76f9-4562-8ff2-e4bce7d9cae3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #329 d6fec9e7-5fb6-4ce4-b311-2e0d33a1d4b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #329 4430d8da-dac1-4ced-93d2-a61a72b824dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #329 e65c6bf7-cb60-41aa-9bd2-bf2218c456b8)");

unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'hFE0],
"EXT DMEM (Testcase #329 5402690c-680d-460e-a0da-a207abe52fd2)");
unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'hFE1],
"EXT DMEM (Testcase #329 eb511091-c450-4d7f-ab3e-a71e5681b1a9)");
datamem_ext_i.datamem[13'hFE0] =
datamem_swap[16'hFE0];
datamem_ext_i.datamem[13'hFE1] =
datamem_swap[16'hFE1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #330
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFE0D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #330)");
    end
end

unit.assert_eq16(16'hFE0D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #330 d50b2c7e-3247-474b-91b4-bb832a281267)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #330 8147dc32-aea8-46ee-b2de-b68867923d65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #330 58300a6e-d160-4969-9638-236434176aee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #330 fb2972f0-0786-44f4-ac42-50942549b898)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #330 1400af8e-87f7-4ec0-9ed3-15b66bf2ce75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #330 37bb21a7-a48f-473c-8fb3-9147d284b808)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #330 d4c1f976-f866-4cf1-a75b-e25f9d992bdc)");

unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'h729],
"EXT DMEM (Testcase #330 e73def06-a71e-4ae6-bca7-71b0d9126fab)");
unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'h72A],
"EXT DMEM (Testcase #330 a2dad46a-ecd0-4247-8b76-7273927f3371)");
datamem_ext_i.datamem[13'h729] =
datamem_swap[16'h729];
datamem_ext_i.datamem[13'h72A] =
datamem_swap[16'h72A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #331
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA212;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #331)");
    end
end

unit.assert_eq16(16'hA212, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #331 61ab910e-d694-4106-9cdd-891a76aa8e10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #331 8b7927a1-0764-46bd-9fd8-be5acf2e9a87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #331 6995f4a2-eda6-427d-b75f-60ca1fda47ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #331 6c8f8312-70e3-40f0-80e1-da7d32332efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #331 be50a822-2755-49c1-9b80-ec90bda046cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #331 2a0899c2-fe34-43ca-b7f3-866e743546a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #331 b70c3e28-6b04-4a10-af30-ef40f21e5670)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'hD9E],
"EXT DMEM (Testcase #331 d6dd8fe5-5275-49c6-a0f7-53675ece474b)");
unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'hD9F],
"EXT DMEM (Testcase #331 ae6de6b3-e6b6-49a5-a62b-585f389b0dcb)");
datamem_ext_i.datamem[13'hD9E] =
datamem_swap[16'hD9E];
datamem_ext_i.datamem[13'hD9F] =
datamem_swap[16'hD9F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #332
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3FD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #332)");
    end
end

unit.assert_eq16(16'h3FD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #332 9da1288b-c2d9-48c6-920d-c98a776eb7e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #332 fafdde12-3350-4914-9b3e-dcae70c86c61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #332 c8ed899d-30b7-4da4-ae4e-ab4ef897129f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #332 28f346ef-e907-4180-9797-bb9aa149cedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #332 d488cb02-2465-4dee-9d1a-f35e1439c559)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #332 ca88eab9-8861-4e61-a205-94b921d29ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #332 45aa2d87-371d-42c9-9688-c038c6f251a9)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'hF5B],
"EXT DMEM (Testcase #332 56802c41-68f9-4915-ae3a-e1f38ced34fe)");
unit.assert_eq8(8'h3F, datamem_ext_i.datamem[13'hF5C],
"EXT DMEM (Testcase #332 6546ddea-e161-4da9-98c8-d648e5dc1daf)");
datamem_ext_i.datamem[13'hF5B] =
datamem_swap[16'hF5B];
datamem_ext_i.datamem[13'hF5C] =
datamem_swap[16'hF5C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #333
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #333)");
    end
end

unit.assert_eq16(16'h4C7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #333 212e6856-7d0b-4425-b22c-35e54e6e1adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #333 4d60c3e9-ca2e-418b-bff0-c0aef43a293b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #333 df447504-8a33-4bd4-9037-ceda07c97340)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #333 448ad63b-f517-4e47-bdaf-404794ecaabb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #333 b81af82e-5bcb-4754-a50e-e9b7b3c314d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #333 802af717-b3b2-40a9-8fcf-03f530e73da4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #333 9300868a-74c9-46a1-b9b2-2adc6c0bdb17)");

unit.assert_eq8(8'h7B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF3],
"INT DMEM (Testcase #333 c4f4d5f5-84df-4f58-b17f-40d1c619166f)");
unit.assert_eq8(8'h4C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF4],
"INT DMEM (Testcase #333 866ecf8f-2159-4919-a72e-86195b0f6e7f)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF3] =
datamem_swap[16'hF3];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF4] =
datamem_swap[16'hF4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #334
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h600C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #334)");
    end
end

unit.assert_eq16(16'h600C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #334 8fa196e0-bc37-455e-9c2b-cbe831110d4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #334 f19b0703-8eab-4d49-b442-e9b9966d530b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #334 cc5a3e89-1c4e-451d-b1ed-41d61bb65d2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #334 f1344183-dfc0-4a78-a539-f1411601a226)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #334 28ba84d5-083e-4ca5-bdfa-94540dedb657)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #334 5e8e1147-4896-473a-9024-eab47de8d1b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #334 330243cd-f1ab-4d90-816b-f2e17bc58cd2)");

unit.assert_eq8(8'h0C, datamem_ext_i.datamem[13'h5F7],
"EXT DMEM (Testcase #334 8f3f79a6-fafe-48e2-b757-d498efb793e9)");
unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'h5F8],
"EXT DMEM (Testcase #334 265b2681-7f3d-463a-a8b6-c5a5aca24915)");
datamem_ext_i.datamem[13'h5F7] =
datamem_swap[16'h5F7];
datamem_ext_i.datamem[13'h5F8] =
datamem_swap[16'h5F8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #335
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C4A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #335)");
    end
end

unit.assert_eq16(16'h3C4A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #335 3f4bdc8f-ad74-4e11-b9a8-d70228ef0cf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #335 e0b2eec4-1158-4b4a-99a1-691fd6f1299d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #335 a40f569c-1712-4cf9-92ea-a46e91fae29d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #335 fea52dba-b97b-457b-91a9-e4d261fbfce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #335 8d8e329d-73cf-49e2-9c8a-0f6e38038126)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #335 ab2065dd-1a84-4307-9ddf-03dd85a0ba44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #335 d8b1139e-b536-4127-9907-ab9a166af390)");

unit.assert_eq8(8'h4A, datamem_ext_i.datamem[13'h445],
"EXT DMEM (Testcase #335 f0baa488-e224-43eb-acf5-4d7f99ea365d)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h446],
"EXT DMEM (Testcase #335 7f091ac1-c92e-4a08-b796-4e3aa467dfc0)");
datamem_ext_i.datamem[13'h445] =
datamem_swap[16'h445];
datamem_ext_i.datamem[13'h446] =
datamem_swap[16'h446];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #336
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h677C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #336)");
    end
end

unit.assert_eq16(16'h677C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #336 3b1e80b9-e774-4276-84fc-107f3d7fe5db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #336 98e72513-a66b-45dc-9593-5e7b438413f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #336 52364777-f06e-45f8-8491-0818361f69a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #336 e50dcfdc-ff7b-4166-9181-835ee3eac723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #336 4ba8b636-e0b6-45f2-a91b-f507e8e2ce46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #336 00c2891a-29d0-4cdc-86e5-14d9dd1306d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #336 ad0e0b38-2ea2-47c5-99d0-75d5a6773fb8)");

unit.assert_eq8(8'h7C, datamem_ext_i.datamem[13'h836],
"EXT DMEM (Testcase #336 5a98e95b-fa62-44a0-99c2-4a79fbb5ba59)");
unit.assert_eq8(8'h67, datamem_ext_i.datamem[13'h837],
"EXT DMEM (Testcase #336 910f3102-8d85-4f10-bdab-ce46067662db)");
datamem_ext_i.datamem[13'h836] =
datamem_swap[16'h836];
datamem_ext_i.datamem[13'h837] =
datamem_swap[16'h837];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #337
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F87;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #337)");
    end
end

unit.assert_eq16(16'h9F87, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #337 0881476f-4d26-49ec-97ea-e60824c65e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #337 113f239d-9ca8-4410-a19e-9b98b7322006)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #337 03e2586d-c503-4c31-b7d4-783f54a6f534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #337 745ad3a2-64b0-49c1-b0ac-31359a4f558c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #337 33148347-a011-4f52-a5bc-42bd9c17aafd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #337 2f60afd5-a7f9-40a0-a1d4-ae491c65acd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #337 90363562-a0e1-4018-9bae-478cc6e4d765)");

unit.assert_eq8(8'h87, datamem_ext_i.datamem[13'h95F],
"EXT DMEM (Testcase #337 8dfa0f24-6cce-489a-bd49-41de2858f577)");
unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h960],
"EXT DMEM (Testcase #337 15060f2f-2412-45f7-9145-2f7de41f8161)");
datamem_ext_i.datamem[13'h95F] =
datamem_swap[16'h95F];
datamem_ext_i.datamem[13'h960] =
datamem_swap[16'h960];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #338
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6A06;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #338)");
    end
end

unit.assert_eq16(16'h6A06, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #338 ef3684d8-193d-4506-ab5a-65430da9671b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #338 880511aa-8153-4406-9bd9-c5970c773d9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #338 37f1a646-4d36-403f-bff1-0496ea000b6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #338 60091936-91b3-4751-969e-b5a2e4f394de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #338 9e3a12ac-87ad-4bd4-a38a-2e768eedaca4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #338 ff29c87a-23fa-4f0e-86c2-1c8f923a6f61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #338 28723dd5-1656-441b-bc8f-5b2b1a3ee03f)");

unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h3FC],
"EXT DMEM (Testcase #338 0bb19158-fe84-45c9-bef5-0c9b91967a62)");
unit.assert_eq8(8'h6A, datamem_ext_i.datamem[13'h3FD],
"EXT DMEM (Testcase #338 d34cf0df-d26d-4956-ba57-3b78539ac12d)");
datamem_ext_i.datamem[13'h3FC] =
datamem_swap[16'h3FC];
datamem_ext_i.datamem[13'h3FD] =
datamem_swap[16'h3FD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #339
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7FEC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #339)");
    end
end

unit.assert_eq16(16'h7FEC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #339 752ceaab-d3e5-4409-8a20-5f26161b636f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #339 cf574912-1231-47a7-a384-23885ff1232d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #339 97835971-2538-4292-beaa-37a87e80efad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #339 7e6fd93a-f53c-4b36-83fa-ba6efaacdfd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #339 d67ebacd-7e9d-4d35-af11-8df836aa34de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #339 30b43b77-ac97-4a38-97f3-a186fe5d8805)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #339 befb535d-57b1-4ec2-93b1-90d852858d58)");

unit.assert_eq8(8'hEC, datamem_ext_i.datamem[13'h518],
"EXT DMEM (Testcase #339 6ae1f130-92e3-43a8-a1a2-76ff8cdd0b01)");
unit.assert_eq8(8'h7F, datamem_ext_i.datamem[13'h519],
"EXT DMEM (Testcase #339 56ed6869-87cc-4088-92c0-b87713b8b8e4)");
datamem_ext_i.datamem[13'h518] =
datamem_swap[16'h518];
datamem_ext_i.datamem[13'h519] =
datamem_swap[16'h519];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #340
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h70CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #340)");
    end
end

unit.assert_eq16(16'h70CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #340 567c2971-3028-4b52-a128-88608e3f5d6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #340 6723aaaa-920d-43f3-bc67-b25afea6aa82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #340 23d65544-d537-4d4a-9ebe-58ecf951745a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #340 116b94eb-445c-4876-89ba-fac3d543169d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #340 a04bb335-91fd-49de-a586-8d2c33c9fce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #340 a5088e78-03e5-4cd9-92a6-836510fb1828)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #340 c99ddc56-889c-419d-a165-1c70dc761099)");

unit.assert_eq8(8'hCD, datamem_ext_i.datamem[13'h2FD],
"EXT DMEM (Testcase #340 d0a86246-8b61-4b7b-b45d-37e9d7dff6bc)");
unit.assert_eq8(8'h70, datamem_ext_i.datamem[13'h2FE],
"EXT DMEM (Testcase #340 bcc714d0-c243-4b85-bcfc-b2a0f119d7fd)");
datamem_ext_i.datamem[13'h2FD] =
datamem_swap[16'h2FD];
datamem_ext_i.datamem[13'h2FE] =
datamem_swap[16'h2FE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #341
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #341)");
    end
end

unit.assert_eq16(16'hEA54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #341 2e5a130f-2eab-4384-a292-f6ae8aaf7356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #341 b9dc9ba7-9ec7-4160-ac59-79e4d7f63623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #341 6da945c5-d64d-44af-b5d1-1382f2b9421b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #341 3f8a3b2c-8039-4758-87b1-2eb1f37a9f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #341 cb4432b7-57e9-4cef-8485-29e77c9a6747)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #341 eaedfeb9-5bac-471d-8e41-78694a941c41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #341 cc4d933a-6b2e-455b-91dd-d466fe1daa09)");

unit.assert_eq8(8'h54, datamem_ext_i.datamem[13'hD99],
"EXT DMEM (Testcase #341 7fbccfdb-b917-4c24-ad77-15438300aed5)");
unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'hD9A],
"EXT DMEM (Testcase #341 cce3fcf4-cb92-4f8b-bf88-a36c94a4dfe7)");
datamem_ext_i.datamem[13'hD99] =
datamem_swap[16'hD99];
datamem_ext_i.datamem[13'hD9A] =
datamem_swap[16'hD9A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #342
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h347F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #342)");
    end
end

unit.assert_eq16(16'h347F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #342 930c9f71-7ad8-45fe-944c-dacb4f8ef189)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #342 c6690a22-5d2e-42c1-a49f-aee45c41c949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #342 50fb5123-39e4-4c3d-a221-166ec81d9ad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #342 4066b407-8ce0-45a3-87fa-17d9e9207b70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #342 cc6ca817-a006-46e7-b8fe-74e9e1affe9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #342 16f43e51-87c1-4d8b-8bbc-5158a6a63233)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #342 4796a293-5437-421f-a1b0-07d3e9b1f2e8)");

unit.assert_eq8(8'h7F, datamem_ext_i.datamem[13'hCB5],
"EXT DMEM (Testcase #342 eb5c5952-465e-4e5a-8ecf-2a36f4b3ce40)");
unit.assert_eq8(8'h34, datamem_ext_i.datamem[13'hCB6],
"EXT DMEM (Testcase #342 30ac89c9-1cda-45b1-8930-39c1d1b15773)");
datamem_ext_i.datamem[13'hCB5] =
datamem_swap[16'hCB5];
datamem_ext_i.datamem[13'hCB6] =
datamem_swap[16'hCB6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #343
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h308C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #343)");
    end
end

unit.assert_eq16(16'h308C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #343 b071da4d-34a2-49ba-884e-0ac0d2020032)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #343 cf147f9a-7a4c-4a74-8c6b-063515896416)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #343 1008d921-ee86-4c9b-9111-59f288026855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #343 86af327d-2d89-4afd-9abb-fe505900987a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #343 09d5de03-8327-465b-992f-32e918bc86ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #343 d4bfaf1b-c510-46ae-bc23-01b58eb05795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #343 f263056c-fd3d-4a9a-ba9d-e34d600342fe)");

unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'h987],
"EXT DMEM (Testcase #343 129d4101-8909-4ac8-bf3f-9dfa16c804aa)");
unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'h988],
"EXT DMEM (Testcase #343 e098e5c2-547c-4f88-99e5-c651afb6d64f)");
datamem_ext_i.datamem[13'h987] =
datamem_swap[16'h987];
datamem_ext_i.datamem[13'h988] =
datamem_swap[16'h988];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #344
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h766E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #344)");
    end
end

unit.assert_eq16(16'h766E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #344 4d12f9af-3551-4c59-81a7-b425fce8194b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #344 c1591b21-ed0e-42a2-ad21-e1bd9e0842e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #344 29faa27f-cfb7-4f6c-b2cb-49633370f037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #344 9d819c25-aaa7-4492-b59d-33626f56701e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #344 38840c5c-de55-4d56-9890-62ce306e2534)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #344 a6d2194e-7292-4cad-9df7-718753efbbc0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #344 65360b2c-4737-4a38-8e51-b3b34f33376e)");

unit.assert_eq8(8'h6E, datamem_ext_i.datamem[13'hA4F],
"EXT DMEM (Testcase #344 2910858c-ecff-432f-b99c-56849fc10a13)");
unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'hA50],
"EXT DMEM (Testcase #344 538924dc-5e6f-40f2-b6a3-1b3e97bd8084)");
datamem_ext_i.datamem[13'hA4F] =
datamem_swap[16'hA4F];
datamem_ext_i.datamem[13'hA50] =
datamem_swap[16'hA50];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #345
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0003;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #345)");
    end
end

unit.assert_eq16(16'h0003, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #345 7228db00-a6c9-4cfa-b7fa-1f8c01a4424c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #345 a55b1425-55ea-49ae-a727-f6f654f8a3c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #345 d629fb80-b6de-404a-831a-da551fb6286a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #345 8eb1038d-6576-49ee-b420-71ab483d378e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #345 e275664e-1203-47fe-b2c5-5a0bab9c3349)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #345 855bd44b-b14f-4d27-a935-66fc6979cd0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #345 9e3089e5-24a7-47c8-8d89-9bcbe1840018)");

unit.assert_eq8(8'h03, datamem_ext_i.datamem[13'h22E],
"EXT DMEM (Testcase #345 b35aa6c7-f17e-480d-9501-0a8055c98076)");
unit.assert_eq8(8'h00, datamem_ext_i.datamem[13'h22F],
"EXT DMEM (Testcase #345 c598b8b7-a0c2-471d-b55e-4e07d98d51f5)");
datamem_ext_i.datamem[13'h22E] =
datamem_swap[16'h22E];
datamem_ext_i.datamem[13'h22F] =
datamem_swap[16'h22F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #346
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #346)");
    end
end

unit.assert_eq16(16'h7E9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #346 9b03d217-632e-46e1-b984-34a36acc591c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #346 aa717739-2303-4d71-87f1-f94d290a0186)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #346 042c8e87-4d32-4ad4-952c-d103a3eeb854)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #346 1e87fe88-927d-4e72-957c-e9468008c83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #346 1b01f10c-7e93-4b12-94f6-38feff06fca7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #346 b1d62569-b6e5-4932-914f-1ba053b73f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #346 995f72f9-b983-4252-adb0-a3ac51934618)");

unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h589],
"EXT DMEM (Testcase #346 d12fc68b-9ead-4467-9dc1-0d71588f6c66)");
unit.assert_eq8(8'h7E, datamem_ext_i.datamem[13'h58A],
"EXT DMEM (Testcase #346 a515a5e6-d00a-414d-895a-a427c995e097)");
datamem_ext_i.datamem[13'h589] =
datamem_swap[16'h589];
datamem_ext_i.datamem[13'h58A] =
datamem_swap[16'h58A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #347
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h518E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #347)");
    end
end

unit.assert_eq16(16'h518E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #347 cafeb5e5-4c80-41c8-abb5-e01d8fc50565)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #347 18c42693-9b82-4598-8d7f-dd8353c3fc6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #347 84af5d92-174f-4e8c-aea9-bcd5eb6912c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #347 984404c1-bf92-4e5a-8905-3110ddb6495f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #347 1f84beb7-5032-49d7-88aa-d5f32df9f489)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #347 588f5d8d-24d4-4282-bf6c-b6af6190a145)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #347 5ba39c99-20c6-4c1e-b607-17611ef60791)");

unit.assert_eq8(8'h8E, datamem_ext_i.datamem[13'hC9B],
"EXT DMEM (Testcase #347 27063cf4-7d73-4ffd-a357-9dee9e832a0d)");
unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'hC9C],
"EXT DMEM (Testcase #347 f550c404-69ce-4247-8d47-555aea530ed4)");
datamem_ext_i.datamem[13'hC9B] =
datamem_swap[16'hC9B];
datamem_ext_i.datamem[13'hC9C] =
datamem_swap[16'hC9C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #348
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE0CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #348)");
    end
end

unit.assert_eq16(16'hE0CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #348 58a7b175-94fc-47f5-a757-86b0295110b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #348 d82e3abd-16cb-43a0-b943-6d52d8672350)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #348 ab1e08c3-047c-414a-adac-27304afd2071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #348 9ef4c6b1-d1eb-4a3d-8b81-5254067d7da9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #348 83cbcd33-376a-43b1-b29c-06eb462a9781)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #348 865b2ba3-8a8a-45a6-b152-c4cb997148de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #348 d3569f9c-0811-4c62-a45e-eb707fa281ea)");

unit.assert_eq8(8'hCA, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF8],
"INT DMEM (Testcase #348 369c439a-2947-4859-b318-d4d0091be61f)");
unit.assert_eq8(8'hE0, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF9],
"INT DMEM (Testcase #348 cb107ba0-860a-4596-8adc-132b53267b54)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF8] =
datamem_swap[16'hF8];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF9] =
datamem_swap[16'hF9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #349
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3D2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #349)");
    end
end

unit.assert_eq16(16'h3D2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #349 44e90e2c-bb76-4e7e-a6c6-531ebc0ce296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #349 57d397d2-a9b5-4ec1-8541-892381c0a1c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #349 5c71fe6f-ace1-4a61-b7e9-b6afe5ed270f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #349 dee4d4a7-935c-4ac0-919b-e88637a17926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #349 a35aadc2-1719-4559-817b-187ffced456e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #349 18a81d5a-ad9f-4758-9931-b811a6fc1f88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #349 53ffe37d-ca21-4c73-9c04-9ef2e90af135)");

unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'h96A],
"EXT DMEM (Testcase #349 e51232af-ed8c-492e-b875-5fcdd31324a4)");
unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'h96B],
"EXT DMEM (Testcase #349 6eada5e6-cd9b-40f0-b86d-88052c72bbb4)");
datamem_ext_i.datamem[13'h96A] =
datamem_swap[16'h96A];
datamem_ext_i.datamem[13'h96B] =
datamem_swap[16'h96B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #350
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A8E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #350)");
    end
end

unit.assert_eq16(16'h3A8E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #350 027a77ef-bcee-43b7-94b8-51fc1dc08e78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #350 1fbba6e8-f1ea-43a0-8453-10b4bd36c688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #350 a2b9e934-8102-46db-b6a7-5a8ead689a73)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #350 e9b85c23-7201-4eb5-ac51-cf88fc3d5d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #350 4e7e5749-54ca-4376-a2fb-826429b63185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #350 d65d7289-ab0b-409e-a5a5-ae2e49724013)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #350 463b6515-28e0-4796-85d2-2cffbc65cdbc)");

unit.assert_eq8(8'h8E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA1],
"INT DMEM (Testcase #350 ec757df9-52e0-473c-ae27-fcaf2768edd3)");
unit.assert_eq8(8'h3A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA2],
"INT DMEM (Testcase #350 2c5d5325-e7f9-4f16-99b3-a4ccaba9b251)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA1] =
datamem_swap[16'hA1];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA2] =
datamem_swap[16'hA2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #351
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDE53;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #351)");
    end
end

unit.assert_eq16(16'hDE53, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #351 cd815e1a-eaa7-4f06-ac45-d0cde68cf9c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #351 e5b1890e-1e5c-4dd5-8f25-f274f47e770e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #351 10ee5db4-5db0-4a97-8687-2e61d19699c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #351 da49d3cd-354d-4947-9a3d-1b50cdabc1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #351 cbf9cca4-adcf-4078-a119-7b8b300b6557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #351 a7b1c3cc-f7b8-42b7-a15e-771c6d3f1307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #351 173fdcda-fc4d-4fc7-b581-440ccd541ff7)");

unit.assert_eq8(8'h53, datamem_ext_i.datamem[13'h916],
"EXT DMEM (Testcase #351 48b586ab-ca88-47aa-aabb-8f70a9776ed3)");
unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'h917],
"EXT DMEM (Testcase #351 e0e3d94b-a6f9-48cd-b304-97738340109f)");
datamem_ext_i.datamem[13'h916] =
datamem_swap[16'h916];
datamem_ext_i.datamem[13'h917] =
datamem_swap[16'h917];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #352
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h924E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #352)");
    end
end

unit.assert_eq16(16'h924E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #352 49983734-8ba3-46e6-a2d9-11d225bf30ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #352 7956edf5-d568-4938-88a6-fe2172745fd3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #352 866b0d8f-0918-4ef0-9fdd-5fd00d98e983)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #352 97ba94c8-9a2b-4678-9522-63818ee1cd7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #352 3f19dd98-3993-4d30-be87-a79e2ee778d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #352 74465c95-dedc-4c1b-81d0-35eba0132b25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #352 19b571ae-1e48-435e-81d6-36db5b46d107)");

unit.assert_eq8(8'h4E, datamem_ext_i.datamem[13'hFCE],
"EXT DMEM (Testcase #352 b1ea927f-ae5e-4392-8de8-155736196572)");
unit.assert_eq8(8'h92, datamem_ext_i.datamem[13'hFCF],
"EXT DMEM (Testcase #352 e9d4832a-cb31-4ea2-beda-c3621781dfab)");
datamem_ext_i.datamem[13'hFCE] =
datamem_swap[16'hFCE];
datamem_ext_i.datamem[13'hFCF] =
datamem_swap[16'hFCF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #353
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD611;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #353)");
    end
end

unit.assert_eq16(16'hD611, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #353 30487490-07d2-4abe-a8c9-59ba638e510d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #353 71dc8b46-a06a-471a-8608-08ed413d1a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #353 7c357f0f-1308-4190-9dfc-cd17ffe08524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #353 e730c241-9731-4473-902b-927756f428e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #353 2c93e128-7fce-4ddb-a6ce-edb3c621e221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #353 1a6ed478-c13e-489d-b66a-f2fa31e8c569)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #353 1312e0c3-4111-45c6-b9d3-0f52fb0204f5)");

unit.assert_eq8(8'h11, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC2],
"INT DMEM (Testcase #353 d1b99c69-0917-484c-9953-0779aea89b3d)");
unit.assert_eq8(8'hD6, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC3],
"INT DMEM (Testcase #353 2790b439-6cf6-4ac5-b3e6-bb89280ce349)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC2] =
datamem_swap[16'hC2];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC3] =
datamem_swap[16'hC3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #354
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6DED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #354)");
    end
end

unit.assert_eq16(16'h6DED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #354 39f5b391-35a8-4f1e-a5d5-99af4ce64031)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #354 1ddf7af4-e8bd-48e5-98ab-ae03388a9984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #354 4f441d74-bbbd-4579-a8be-6c1a5446d206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #354 94fccf98-34c9-44ac-acb9-50607124dc52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #354 954d82e5-6a94-4aa4-8333-8875a0a6a257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #354 8dd1790a-e554-45b6-a4d1-560bd9532688)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #354 4169df4c-d488-4a00-b68f-1cd0be19cf1d)");

unit.assert_eq8(8'hED, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h1D],
"INT DMEM (Testcase #354 4b0eb728-909a-4afd-8bca-709ee6dc3c2c)");
unit.assert_eq8(8'h6D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h1E],
"INT DMEM (Testcase #354 191238e2-dedf-4372-b63b-53962aa7ecc6)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h1D] =
datamem_swap[16'h11D];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h1E] =
datamem_swap[16'h11E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #355
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1FC7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #355)");
    end
end

unit.assert_eq16(16'h1FC7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #355 9160fc22-29ec-4dc6-9224-2bf0c932e016)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #355 c01fdfc5-e280-41ac-a7ca-848f5ea7a200)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #355 0ee40671-9df7-4014-b600-2cf181f7b461)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #355 31b2cd08-1c7f-4cba-a37d-10c4c4e6784c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #355 cca09f08-3504-4c7c-a50c-15f5ede99d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #355 138e4a1a-e6db-4cca-ac13-8965224595d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #355 ff642853-e19a-42f7-9672-b02480de1fab)");

unit.assert_eq8(8'hC7, datamem_ext_i.datamem[13'h9A6],
"EXT DMEM (Testcase #355 8eb72335-b99a-430c-aa18-9d96a4315d31)");
unit.assert_eq8(8'h1F, datamem_ext_i.datamem[13'h9A7],
"EXT DMEM (Testcase #355 9db4e04d-e586-42b3-b66f-c18fee510fdd)");
datamem_ext_i.datamem[13'h9A6] =
datamem_swap[16'h9A6];
datamem_ext_i.datamem[13'h9A7] =
datamem_swap[16'h9A7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #356
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9459;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #356)");
    end
end

unit.assert_eq16(16'h9459, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #356 51f543d3-90f6-4bb2-b6b1-c4fb7c632175)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #356 9d4ce478-afb5-4159-b037-ff9c453b74ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #356 21dcdd2a-25ad-4de9-a1db-d9d529aea0e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #356 210f1dca-f866-4a24-a938-63cf53bfda38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #356 c4489235-f485-4563-ad0b-ca0f4fea1c79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #356 626e8209-391b-4708-8790-1a30f61f6cbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #356 c5e149c7-ebc5-4b84-91a9-ec39d0ffe786)");

unit.assert_eq8(8'h59, datamem_ext_i.datamem[13'h597],
"EXT DMEM (Testcase #356 a74f1f76-78a0-48b8-bad5-6d50732347a7)");
unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'h598],
"EXT DMEM (Testcase #356 4146f354-5f37-41ce-a4af-7a6d3bc4044e)");
datamem_ext_i.datamem[13'h597] =
datamem_swap[16'h597];
datamem_ext_i.datamem[13'h598] =
datamem_swap[16'h598];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #357
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h409D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #357)");
    end
end

unit.assert_eq16(16'h409D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #357 a25a48cf-7349-4f67-bf0e-a3230a921466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #357 7aa4e5c2-ed99-4320-a4d2-ae06b31cc056)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #357 8979bffd-121e-4e13-b75f-2707c38f310a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #357 6c3c59bf-7dbe-40f7-a4cb-9fd49b32aba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #357 f478481e-957b-478f-8f96-7333f3b2531b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #357 b6e1402b-f13a-4742-9ea3-41adc39070f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #357 4c858e03-05b8-4faa-9bcb-5196e673a209)");

unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'h38C],
"EXT DMEM (Testcase #357 b18e41c3-19ba-41b1-9a61-12088cf13cc7)");
unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'h38D],
"EXT DMEM (Testcase #357 2eb6f483-0eba-4278-9239-b6abef6e936a)");
datamem_ext_i.datamem[13'h38C] =
datamem_swap[16'h38C];
datamem_ext_i.datamem[13'h38D] =
datamem_swap[16'h38D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #358
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4CFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #358)");
    end
end

unit.assert_eq16(16'h4CFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #358 2d0ac50b-30bc-4769-8880-69279b855f0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #358 7e7aa852-f247-4cee-b7b8-d039dd935378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #358 672c5199-6cae-47f5-bff2-2210715d9b7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #358 2ce592b5-e326-441f-b0b8-ac41384a072c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #358 da2122fa-b749-4c53-9485-1eac21b5c8fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #358 5cce1e21-bb28-4aaa-93fa-1e937ea49bae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #358 6d97743a-ea3a-49cd-88c9-be622978e09c)");

unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hE0F],
"EXT DMEM (Testcase #358 92aad54b-4733-47ec-a31b-b1199a248aaa)");
unit.assert_eq8(8'h4C, datamem_ext_i.datamem[13'hE10],
"EXT DMEM (Testcase #358 4647013d-68b0-41fb-9bdc-24e90c0950c7)");
datamem_ext_i.datamem[13'hE0F] =
datamem_swap[16'hE0F];
datamem_ext_i.datamem[13'hE10] =
datamem_swap[16'hE10];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #359
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8602;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #359)");
    end
end

unit.assert_eq16(16'h8602, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #359 3ea9188e-7bac-461a-9500-e1c9ca64a892)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #359 f9d10340-9370-4eb8-807b-972262cfaf64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #359 21c6fe6a-7146-4356-b921-a69b781d2c13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #359 5be19ce9-bbdb-446e-898a-7db29c65e8e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #359 2aad6d43-ae16-47b3-8edf-4abd7bf28e0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #359 c549341e-5bbc-4f4c-b05b-7c4fffee9c42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #359 4c64ecf5-d29f-4bc4-8ab2-8ae39cba4026)");

unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'hD1B],
"EXT DMEM (Testcase #359 39e46e9d-6b4e-4236-9a18-04067da5563a)");
unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'hD1C],
"EXT DMEM (Testcase #359 56341aa4-a0cb-499d-903a-a3fbef98db7a)");
datamem_ext_i.datamem[13'hD1B] =
datamem_swap[16'hD1B];
datamem_ext_i.datamem[13'hD1C] =
datamem_swap[16'hD1C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #360
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFF2A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #360)");
    end
end

unit.assert_eq16(16'hFF2A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #360 06b91d85-b0db-419e-b4dc-2a93aa8d677c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #360 e7b3db9b-ed55-418b-b619-3edad0208f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #360 7265ba85-7da0-4a5c-9225-14eb2d59deac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #360 393f3eaa-0c97-41a7-9e88-293a1b039507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #360 2ebc9770-d19d-46f7-8ae2-0ec5db79e90b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #360 e6583bd9-23a8-44fa-938f-104edaf2d0d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #360 bd6f2274-a617-4f5b-8f17-079a3e65e00a)");

unit.assert_eq8(8'h2A, datamem_ext_i.datamem[13'h36E],
"EXT DMEM (Testcase #360 1d3c1db7-d4d1-4055-a297-9b1539030e75)");
unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'h36F],
"EXT DMEM (Testcase #360 10352ff4-7749-4e7d-baa5-32c0d4091864)");
datamem_ext_i.datamem[13'h36E] =
datamem_swap[16'h36E];
datamem_ext_i.datamem[13'h36F] =
datamem_swap[16'h36F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #361
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F26;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #361)");
    end
end

unit.assert_eq16(16'h9F26, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #361 b56cf13d-308c-4759-8e63-7cc0994d1bf7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #361 160b4693-c421-4bbc-b866-627a724de001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #361 4c3213f6-a574-4034-9fc0-b402064772c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #361 1c3a6a5e-fe91-454c-96e8-d3222b264937)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #361 c6b2c149-12d8-49e8-a8e8-670c072d3f4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #361 65b4c7dd-167e-44e0-9d1d-42373e94ed1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #361 e2fc0b81-b723-4630-a3d7-208ba0249c34)");

unit.assert_eq8(8'h26, datamem_ext_i.datamem[13'hE00],
"EXT DMEM (Testcase #361 5d1a0082-b139-40e2-b958-f9b2123b5d1c)");
unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'hE01],
"EXT DMEM (Testcase #361 1038b468-92ee-49d2-aefb-25c9c71cd05d)");
datamem_ext_i.datamem[13'hE00] =
datamem_swap[16'hE00];
datamem_ext_i.datamem[13'hE01] =
datamem_swap[16'hE01];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #362
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEF29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #362)");
    end
end

unit.assert_eq16(16'hEF29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #362 4953905e-518c-42f9-bef4-61350b5973ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #362 73098a1b-4d62-41b1-a2a0-ba9274e922ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #362 8bc3d10b-ebec-4c32-847e-1e1f2db77715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #362 65978be7-b01f-476e-a63e-96291255df8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #362 3209841a-c16f-46bc-b6da-9f58e9819e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #362 3ea48c5f-6f7d-4fff-b344-bcb648c2f30b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #362 5eb1d1a1-cd87-4b87-8295-360bfa43cbf9)");

unit.assert_eq8(8'h29, datamem_ext_i.datamem[13'h9F8],
"EXT DMEM (Testcase #362 4ada607d-0340-4b87-bbb2-200d4ff3c182)");
unit.assert_eq8(8'hEF, datamem_ext_i.datamem[13'h9F9],
"EXT DMEM (Testcase #362 83ccad36-2a07-4242-a422-505a229cb38f)");
datamem_ext_i.datamem[13'h9F8] =
datamem_swap[16'h9F8];
datamem_ext_i.datamem[13'h9F9] =
datamem_swap[16'h9F9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #363
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h395A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #363)");
    end
end

unit.assert_eq16(16'h395A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #363 f5a9ef63-eb6b-4eec-ba58-6d23a8221a58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #363 d42fa1c9-86e9-45a8-a4bb-4ab249795716)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #363 9d6bba3f-3c4f-4603-93c1-c9047a3f9832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #363 84c82192-5a11-48c7-944c-44181c0ea9ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #363 6c50ccd1-aebb-4554-bca2-29ff21330575)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #363 a042e539-1927-4ab1-8885-869cc116e432)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #363 cab7e5b7-14bb-4cfb-abce-2a5733f5465b)");

unit.assert_eq8(8'h5A, datamem_ext_i.datamem[13'hCD0],
"EXT DMEM (Testcase #363 678ac9d2-2c60-4c09-bb58-6b46b8fc1914)");
unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'hCD1],
"EXT DMEM (Testcase #363 d9d76901-98d7-448b-87cd-0f3c2fa5dcd2)");
datamem_ext_i.datamem[13'hCD0] =
datamem_swap[16'hCD0];
datamem_ext_i.datamem[13'hCD1] =
datamem_swap[16'hCD1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #364
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA709;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #364)");
    end
end

unit.assert_eq16(16'hA709, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #364 4ac86793-7afa-4f6f-9250-8bf283453b3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #364 0a87feef-d46a-43da-995f-d7637247ce88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #364 012d3dd1-f45c-48cc-a59f-9dd8cf8e9005)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #364 fe18be00-9d0c-47ce-bee5-b921f4cb67d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #364 fc3354e7-2592-4458-9690-8fe83dc444bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #364 c0f75157-45d8-4d6e-9fda-5765619a9d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #364 3e2b28e2-bed3-42f2-b9aa-ca9193ef6ad5)");

unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'h32D],
"EXT DMEM (Testcase #364 10476e2f-ad9b-4a2e-a904-6f4f5dc89a7b)");
unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'h32E],
"EXT DMEM (Testcase #364 591741f2-1698-4961-8b42-a63c0837274d)");
datamem_ext_i.datamem[13'h32D] =
datamem_swap[16'h32D];
datamem_ext_i.datamem[13'h32E] =
datamem_swap[16'h32E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #365
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h775D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #365)");
    end
end

unit.assert_eq16(16'h775D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #365 3337a50d-433c-49a2-92c9-e9005ec74a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #365 fc01e60c-29b0-4997-bb2e-e0fcb9cc112d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #365 1ac662d6-094d-4b05-9828-d913d11d6e73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #365 a063e438-9416-468f-a0d0-1ab129f867f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #365 15937096-5f75-493e-a731-bffd8874c44e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #365 4ff596c7-75b7-4ef3-abd8-786187efb3fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #365 fab77472-9d07-4fee-b639-7238499dce30)");

unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'hD22],
"EXT DMEM (Testcase #365 3c29356e-b93a-40f5-9ece-b8f65bf9bed9)");
unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'hD23],
"EXT DMEM (Testcase #365 b45a01b1-f62f-46e4-b05c-d2c974f93bf1)");
datamem_ext_i.datamem[13'hD22] =
datamem_swap[16'hD22];
datamem_ext_i.datamem[13'hD23] =
datamem_swap[16'hD23];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #366
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #366)");
    end
end

unit.assert_eq16(16'h3B24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #366 e6fe838d-b02b-4d41-93cd-fba19b353f27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #366 e1c72855-6a7d-4bf5-b546-edb728ea440a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #366 2463f067-c55b-40db-a2dd-0228826e579b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #366 61485733-2a53-4e2e-96cd-09add1fd4bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #366 678a1d53-41ce-4044-94e5-c95ec6f29ede)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #366 e39c5958-86e9-401c-a526-0ad15b4fe4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #366 c833d22a-282d-4e4a-b95a-7ea3c7e21c20)");

unit.assert_eq8(8'h24, datamem_ext_i.datamem[13'hA8F],
"EXT DMEM (Testcase #366 98d875e4-57fc-43f1-92b7-a7373550395a)");
unit.assert_eq8(8'h3B, datamem_ext_i.datamem[13'hA90],
"EXT DMEM (Testcase #366 389632b5-3c91-4421-adcd-5daa5bc16ef4)");
datamem_ext_i.datamem[13'hA8F] =
datamem_swap[16'hA8F];
datamem_ext_i.datamem[13'hA90] =
datamem_swap[16'hA90];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #367
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC240;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #367)");
    end
end

unit.assert_eq16(16'hC240, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #367 bd2c2695-7542-4871-b66e-afb9e086b5e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #367 af1bdf2f-15e9-4701-aad2-e8220244e08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #367 f590aa83-f240-4660-85ce-1b3c42a5d82b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #367 63e0d620-a73d-43a7-8ecc-feca6f2d5581)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #367 7362990e-7656-4a4a-b6c9-1e383e8e655b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #367 e9e9bcc6-9c96-4c4f-94f6-ecba552c10ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #367 2f201062-717a-4b03-9204-d6321a411fcf)");

unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'hF44],
"EXT DMEM (Testcase #367 49f3ed20-3a18-4089-b422-ce6eb06b2554)");
unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'hF45],
"EXT DMEM (Testcase #367 9a59fdc2-b650-47fa-9e3c-65fd9c1f4ba4)");
datamem_ext_i.datamem[13'hF44] =
datamem_swap[16'hF44];
datamem_ext_i.datamem[13'hF45] =
datamem_swap[16'hF45];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #368
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1368;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #368)");
    end
end

unit.assert_eq16(16'h1368, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #368 2175ce1f-b688-4618-a29b-9cfa518c115d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #368 53277c8a-7e97-4f45-bc25-7bb0f8eb996d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #368 2b410033-fd0f-43b3-b67a-06729f969947)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #368 76803b4f-459a-4749-855e-c57a8c59e380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #368 5326e596-51fe-43f6-93ea-ea6f31473e17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #368 684958f2-4b7c-4cf4-8f1e-6de40057f632)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #368 9aa1338a-1a02-4a34-807c-8f6f3d4ad8ad)");

unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'hC1C],
"EXT DMEM (Testcase #368 5307bd90-b279-4b63-96f2-0861d79a3597)");
unit.assert_eq8(8'h13, datamem_ext_i.datamem[13'hC1D],
"EXT DMEM (Testcase #368 edf7c3bd-8689-4eae-9c8f-49df79071546)");
datamem_ext_i.datamem[13'hC1C] =
datamem_swap[16'hC1C];
datamem_ext_i.datamem[13'hC1D] =
datamem_swap[16'hC1D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #369
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCFF2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #369)");
    end
end

unit.assert_eq16(16'hCFF2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #369 5c037df2-1bc7-4a41-bbc4-5f96cb59572e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #369 c06191ca-37a6-420f-8c78-fcd17783f24f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #369 afeceaf2-3844-40e2-bff4-dc8792611f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #369 8cde58be-582b-4684-b634-c26a97205049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #369 564ab72d-a496-4476-b766-1f4c79a25210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #369 fd2253a1-48e8-4d5a-aa2b-0e05a398c27e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #369 29717726-5136-44e6-a364-91b5255a5611)");

unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'h2D7],
"EXT DMEM (Testcase #369 7b537fbb-8d9f-404b-a87f-4cf7d333402f)");
unit.assert_eq8(8'hCF, datamem_ext_i.datamem[13'h2D8],
"EXT DMEM (Testcase #369 6bbc247e-8fab-4a27-b2a6-f38d7583185b)");
datamem_ext_i.datamem[13'h2D7] =
datamem_swap[16'h2D7];
datamem_ext_i.datamem[13'h2D8] =
datamem_swap[16'h2D8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #370
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3DDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #370)");
    end
end

unit.assert_eq16(16'h3DDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #370 ac91e2e8-0d85-4d25-a801-cb85c71a314d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #370 8bc2928c-8b6e-4195-8c35-a5e5f514f5f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #370 599957b2-36ec-4937-9760-2b8b3b09714e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #370 a240567c-7d80-45b6-bf64-cc91df81e2d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #370 0c249dd0-ffec-471e-9de4-91c658ed4cde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #370 85312322-83c6-4838-9a3e-0f599a13e1c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #370 9ca856bd-99ef-4a79-9249-5fdc15624f6a)");

unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'h9A5],
"EXT DMEM (Testcase #370 e664cae9-d637-4785-881e-e5b14f1f6349)");
unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'h9A6],
"EXT DMEM (Testcase #370 2462d484-81f5-4b8b-8fe9-783ad7bb5d66)");
datamem_ext_i.datamem[13'h9A5] =
datamem_swap[16'h9A5];
datamem_ext_i.datamem[13'h9A6] =
datamem_swap[16'h9A6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #371
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8537;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #371)");
    end
end

unit.assert_eq16(16'h8537, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #371 ce06eaa6-45a9-4144-bd41-864d15e2ab67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #371 c392601b-1b32-4a43-be8f-1082e3361156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #371 fcf282bd-a11c-408b-8012-dabdd610d5df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #371 4be75d1d-517b-409b-9c49-36a12a76dd33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #371 80b29b40-15ee-43e3-a4a7-70e8007b64a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #371 46ccfd3b-bcec-47d3-a749-53455fa9be3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #371 3cfce8ad-9522-48b2-ad04-7c7fffcf578d)");

unit.assert_eq8(8'h37, datamem_ext_i.datamem[13'hDD6],
"EXT DMEM (Testcase #371 04471fcd-6981-4c33-89c9-3954339dfc57)");
unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'hDD7],
"EXT DMEM (Testcase #371 a7af13cb-2591-4542-b51f-e99d1398aba3)");
datamem_ext_i.datamem[13'hDD6] =
datamem_swap[16'hDD6];
datamem_ext_i.datamem[13'hDD7] =
datamem_swap[16'hDD7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #372
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6560;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #372)");
    end
end

unit.assert_eq16(16'h6560, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #372 c715dd87-8d60-46d4-83bf-bcdf6db2b814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #372 888efc05-215b-4668-a345-e09deb4e7bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #372 e58f7a1e-3f56-455a-8fdd-66b51566333b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #372 7d28fbc9-890d-4cda-930d-de93ef14af64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #372 1eea26de-8d31-4e27-82f0-747728edfb5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #372 27580c7f-95a0-4ff3-aff0-67084b777759)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #372 e03629da-f50c-4eb6-88f4-f93d2a15f0bc)");

unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'h778],
"EXT DMEM (Testcase #372 d9b5e3f7-ae20-4128-a7fd-b693aa55bf23)");
unit.assert_eq8(8'h65, datamem_ext_i.datamem[13'h779],
"EXT DMEM (Testcase #372 e7e2dee7-4caf-4c99-8159-4bc8163ec77d)");
datamem_ext_i.datamem[13'h778] =
datamem_swap[16'h778];
datamem_ext_i.datamem[13'h779] =
datamem_swap[16'h779];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #373
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6FC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #373)");
    end
end

unit.assert_eq16(16'h6FC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #373 6b74ed37-7923-4de6-9938-70ccb2f031af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #373 2e7ade70-b961-4871-b94d-d64f40a3df55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #373 6568726a-1504-4072-9265-a90f64ce2971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #373 e45ad906-60f9-41cc-a4f7-731fa3b13c7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #373 24ad4729-bc35-4183-a564-670a8cbdcf5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #373 2dabb7cf-edf2-4f51-8ddc-a57e1db77e53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #373 2490e470-f13c-473c-bf0e-bd8871115651)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hCF9],
"EXT DMEM (Testcase #373 821cff97-493a-4b6b-95de-ef2e6d4cc6b5)");
unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'hCFA],
"EXT DMEM (Testcase #373 eb4be9d0-006e-4d5e-853d-d69a305e7ab2)");
datamem_ext_i.datamem[13'hCF9] =
datamem_swap[16'hCF9];
datamem_ext_i.datamem[13'hCFA] =
datamem_swap[16'hCFA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #374
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2440;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #374)");
    end
end

unit.assert_eq16(16'h2440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #374 4c4b6e62-1148-4c4a-9214-276c99403488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #374 e5999688-8e59-4256-9447-e582ecb10295)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #374 d460f4b3-beb3-44ec-a9ff-706b5a475a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #374 1ff06919-92d2-4905-9ce3-19220c231a9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #374 015a0497-fa6a-4b0d-bd00-0738a489fe79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #374 d5e435ca-dc25-44ff-b7d2-0a14ba44ce1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #374 810864d3-54f9-46ed-b277-78b667400e82)");

unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'hB44],
"EXT DMEM (Testcase #374 d5429047-225b-4f25-bd68-eb43c37cd72a)");
unit.assert_eq8(8'h24, datamem_ext_i.datamem[13'hB45],
"EXT DMEM (Testcase #374 d7ca0a62-599f-49b3-a6d1-7f5210402dea)");
datamem_ext_i.datamem[13'hB44] =
datamem_swap[16'hB44];
datamem_ext_i.datamem[13'hB45] =
datamem_swap[16'hB45];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #375
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2794;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #375)");
    end
end

unit.assert_eq16(16'h2794, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #375 ed21270e-0cd7-4738-b528-6410603cf62c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #375 79b002a3-c076-4bdd-86d1-f082de07fa6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #375 ddf06533-89c6-4046-bed1-28d63a8c9882)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #375 506a9078-0546-4e30-adda-fa7f71add2f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #375 216fc50c-bc00-4018-af0e-9d83690d762d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #375 9e1245cb-e69c-4017-b081-3f555073ce53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #375 ab59ee65-f1ca-453a-9b59-7fa3d4f4eba2)");

unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'h297],
"EXT DMEM (Testcase #375 3f41b51c-b62a-4050-838e-cebe34568740)");
unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'h298],
"EXT DMEM (Testcase #375 855a07e3-3899-45a7-a9c7-34ad307bb37e)");
datamem_ext_i.datamem[13'h297] =
datamem_swap[16'h297];
datamem_ext_i.datamem[13'h298] =
datamem_swap[16'h298];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #376
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h30C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #376)");
    end
end

unit.assert_eq16(16'h30C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #376 02fc69b1-a508-499f-b64b-aa8361116282)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #376 e137c242-1ecb-4e88-851e-825cc4878976)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #376 18663af6-96f0-48f3-aa84-9c0142641cce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #376 fa99663f-86d3-4244-aefb-778391af850f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #376 1e5a432e-1fe0-44dd-8f8b-607874437cad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #376 c107162c-7ccb-4489-be1c-2f8b1c789584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #376 141d4696-57ce-4395-8ec5-370800560f6f)");

unit.assert_eq8(8'hC1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hCD],
"INT DMEM (Testcase #376 7c2d3fca-9bf5-4474-9384-dd31464e0ae3)");
unit.assert_eq8(8'h30, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hCE],
"INT DMEM (Testcase #376 81cbef8e-217d-4dbe-9da0-07938effc9ba)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hCD] =
datamem_swap[16'h1CD];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hCE] =
datamem_swap[16'h1CE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #377
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEECF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #377)");
    end
end

unit.assert_eq16(16'hEECF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #377 7bdb9ede-909f-42ef-813a-5769cf3eb057)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #377 6619ba6c-38b8-4ce9-bc9b-c9b6394eff6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #377 89318f22-0118-41ac-90a3-44cfb7d4cdd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #377 76a6ce6b-b74c-4083-9a70-3262c1d65080)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #377 6cb7294e-bc68-4dd9-b04a-de8eddc90e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #377 84547cdc-4525-492a-a08c-cfc00ee79d44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #377 99fd7a6d-0ac3-464f-9960-58c29cbbcb1b)");

unit.assert_eq8(8'hCF, datamem_ext_i.datamem[13'h94D],
"EXT DMEM (Testcase #377 1cd04718-d12e-45a1-a0f4-0d68b8961681)");
unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'h94E],
"EXT DMEM (Testcase #377 e64fc267-455a-4616-8968-a24a1e3cade9)");
datamem_ext_i.datamem[13'h94D] =
datamem_swap[16'h94D];
datamem_ext_i.datamem[13'h94E] =
datamem_swap[16'h94E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #378
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCEE8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #378)");
    end
end

unit.assert_eq16(16'hCEE8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #378 3bc001de-8419-4273-a54e-de302596f793)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #378 d0e7f7d3-9bcf-4aa7-817e-d3384d3ea974)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #378 e87e02e4-ff5e-4c3a-b5a7-2dc41f0710a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #378 655ffa63-e4ec-44e9-bf8e-716136f4b3eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #378 ef885960-6554-4067-8653-bffccc0ee22a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #378 a0c563b4-5b3c-4c55-a7b2-1c0138002e01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #378 b6e0b12c-987d-4603-b882-b9371b77a14d)");

unit.assert_eq8(8'hE8, datamem_ext_i.datamem[13'h6C8],
"EXT DMEM (Testcase #378 c35d3feb-8cda-4296-b613-bf33cab27137)");
unit.assert_eq8(8'hCE, datamem_ext_i.datamem[13'h6C9],
"EXT DMEM (Testcase #378 a431a83a-8135-4a0a-af59-f3822bbd9f98)");
datamem_ext_i.datamem[13'h6C8] =
datamem_swap[16'h6C8];
datamem_ext_i.datamem[13'h6C9] =
datamem_swap[16'h6C9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #379
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1191;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #379)");
    end
end

unit.assert_eq16(16'h1191, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #379 5f5d3a48-f263-4f41-99f7-84878e2b778d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #379 458e13be-d2f3-4c4b-8fcd-53831e70d548)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #379 910d1392-1136-49a0-abca-43f1c65a7545)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #379 bbab3c11-46bc-4460-85b5-8eae4d8b60ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #379 528372fa-64c7-461b-990d-a1eea879ff4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #379 55ccdb25-bd89-418b-b7aa-36d29a2a25a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #379 c99aed5e-7245-45a9-9a9c-beebb59604e3)");

unit.assert_eq8(8'h91, datamem_ext_i.datamem[13'hB1C],
"EXT DMEM (Testcase #379 ebdb288c-7095-4d6a-bdb0-7082ef2bb168)");
unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'hB1D],
"EXT DMEM (Testcase #379 246dbe8f-eaaa-43f3-9dc6-677e2ab520b9)");
datamem_ext_i.datamem[13'hB1C] =
datamem_swap[16'hB1C];
datamem_ext_i.datamem[13'hB1D] =
datamem_swap[16'hB1D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #380
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h424F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #380)");
    end
end

unit.assert_eq16(16'h424F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #380 89d6b689-42a9-4dfc-8b35-2cdb2eab3a2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #380 ae1d8a2f-63ba-42b7-b5e4-1e1159c5df15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #380 c2b4c760-ec02-471a-8d24-18f53fa1074d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #380 bdb38864-f909-4a1a-8746-bcb9b3afad96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #380 e3bb1238-3776-466c-b34c-aebea0cfb280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #380 61fdd2b4-8a87-45c4-95fd-8b6099f226b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #380 54a8ca94-be63-4d54-bc47-68fc2c8b5d28)");

unit.assert_eq8(8'h4F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hC9],
"INT DMEM (Testcase #380 85c502a7-ed5f-4ecd-825a-f59c5ab6fc63)");
unit.assert_eq8(8'h42, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hCA],
"INT DMEM (Testcase #380 ff4bd0e2-cb21-49f3-bfd4-0d941c984fec)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hC9] =
datamem_swap[16'h1C9];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hCA] =
datamem_swap[16'h1CA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #381
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDECE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #381)");
    end
end

unit.assert_eq16(16'hDECE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #381 cbf67dbf-1730-4d56-9227-6e9408344c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #381 ba7553aa-a55c-4624-965f-fa0c6c7d478d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #381 c369bf2d-fe6c-452a-941b-3df2c497beca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #381 7e2f3095-11bb-400d-a87b-79908fd19cba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #381 782e9e8b-58b9-40fd-abe1-1bed2894f15c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #381 b1c4583a-b1d9-47c0-b165-ba993f6a6b15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #381 7a33b821-ee6b-48f9-a7a3-018156d323ef)");

unit.assert_eq8(8'hCE, datamem_ext_i.datamem[13'h78B],
"EXT DMEM (Testcase #381 8810920d-762a-499b-a241-c92b4a55bf12)");
unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'h78C],
"EXT DMEM (Testcase #381 5f0bf5d8-9756-484d-a4bc-552c89cb9043)");
datamem_ext_i.datamem[13'h78B] =
datamem_swap[16'h78B];
datamem_ext_i.datamem[13'h78C] =
datamem_swap[16'h78C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #382
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEA88;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #382)");
    end
end

unit.assert_eq16(16'hEA88, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #382 b803391b-7013-423b-849c-0b2dab642d1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #382 89e5585d-ae62-459d-8130-12e338b57ffb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #382 41f83230-4ea4-4121-9bd8-d74a2cfb96b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #382 0c85ca40-aaf8-4e1c-a73a-9e6f361fb3ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #382 f34fc2b6-1e2d-478c-b7a4-c1cc6b647583)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #382 6b9fbfdf-f903-4cbb-8219-3b0d3af3bb13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #382 19b84caf-391e-4e05-8c42-b65b49c19175)");

unit.assert_eq8(8'h88, datamem_ext_i.datamem[13'h384],
"EXT DMEM (Testcase #382 3c59581a-3271-4bd5-98dd-c566d3895bc7)");
unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'h385],
"EXT DMEM (Testcase #382 7cc7c56c-0bc1-478b-902c-060fa50b667d)");
datamem_ext_i.datamem[13'h384] =
datamem_swap[16'h384];
datamem_ext_i.datamem[13'h385] =
datamem_swap[16'h385];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #383
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #383)");
    end
end

unit.assert_eq16(16'h7A57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #383 f45e2dfa-b3f5-4719-a9c3-b8e206e4e97d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #383 c3d6ea26-3c9c-4e50-9533-81c9be20838a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #383 fd803105-3eee-4a6b-ad3c-c37ac74334e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #383 2b8c7481-c084-4e2d-a40f-275e2145965c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #383 b7d03fdb-6b32-4535-9a34-82bb8af7ae13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #383 3d60e9c9-67f7-4e40-a8fb-8a152c1fc3a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #383 17de3726-9cd8-45f4-ae8c-2d2b239fac35)");

unit.assert_eq8(8'h57, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBC],
"INT DMEM (Testcase #383 9ade1857-5fb9-47b9-a460-4a75a29e912a)");
unit.assert_eq8(8'h7A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBD],
"INT DMEM (Testcase #383 d483d789-b293-4245-9c0f-b7079304b92d)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBC] =
datamem_swap[16'h1BC];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBD] =
datamem_swap[16'h1BD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #384
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9385;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #384)");
    end
end

unit.assert_eq16(16'h9385, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #384 5fb49c3e-996e-4047-9b81-a3ec1aeba1d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #384 5d925285-50d3-4997-a4d0-88d5c63ccf50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #384 2f51c84a-55fe-484d-85e8-36e30a39d965)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #384 27b8ca75-ee2f-4171-9413-4648d78ce3a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #384 65ca1db9-6a19-4e34-9a18-09a3b35ab745)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #384 381bf539-bda9-46af-8caf-1f4d7aa5c812)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #384 dba3277d-f819-4b37-aaa0-0d4175a16d52)");

unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'hD6F],
"EXT DMEM (Testcase #384 868e5e47-194c-4990-81be-9ecda08270f9)");
unit.assert_eq8(8'h93, datamem_ext_i.datamem[13'hD70],
"EXT DMEM (Testcase #384 07ae0cf6-3d55-4448-9690-d3d2dc54d16a)");
datamem_ext_i.datamem[13'hD6F] =
datamem_swap[16'hD6F];
datamem_ext_i.datamem[13'hD70] =
datamem_swap[16'hD70];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #385
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #385)");
    end
end

unit.assert_eq16(16'h7C73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #385 8a24a6c4-6180-4205-bc9c-204704eb73ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #385 fcf57514-435d-43c7-89f2-54d9716d3d46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #385 7af0a351-5755-47d8-9867-ab43df65d3e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #385 1d1587d1-40df-4189-8689-13ca684ab900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #385 a2706b88-763f-4eed-aeae-746ef8a963fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #385 6e1f36aa-cf35-4814-a992-a650b92b22ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #385 56f02f58-f669-4e16-a5e2-484341b8f0e1)");

unit.assert_eq8(8'h73, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h82],
"INT DMEM (Testcase #385 875f8f27-59fb-4706-a7fa-2b4a1b72dade)");
unit.assert_eq8(8'h7C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h83],
"INT DMEM (Testcase #385 d7f1f99a-b97d-4c20-99f5-c55c77b7c5b7)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h82] =
datamem_swap[16'h182];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h83] =
datamem_swap[16'h183];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #386
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #386)");
    end
end

unit.assert_eq16(16'h7C74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #386 515d491e-3e06-41b5-b7fa-3679d5a89d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #386 294f5244-b516-4bdf-b6df-5657e767a87d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #386 f92fd5f6-245d-411a-a2eb-11fb11cacbba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #386 5665e1af-5a4b-4093-8439-cb0c51b3051d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #386 66fd561a-205f-46c9-b2a3-9a4ad2196949)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #386 7d1e9a82-2784-492f-8597-6e9f59a711ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #386 54bc09ab-4aac-4433-8485-c898396b4e1b)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h9B4],
"EXT DMEM (Testcase #386 692ad8ee-10f1-43da-b87a-721da0a6afc1)");
unit.assert_eq8(8'h7C, datamem_ext_i.datamem[13'h9B5],
"EXT DMEM (Testcase #386 863683a3-1ca7-445d-b4ce-3e11f49c2401)");
datamem_ext_i.datamem[13'h9B4] =
datamem_swap[16'h9B4];
datamem_ext_i.datamem[13'h9B5] =
datamem_swap[16'h9B5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #387
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB0F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #387)");
    end
end

unit.assert_eq16(16'hBB0F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #387 1d1a381d-ccfe-4f71-a99b-94727890ea33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #387 8ee678cd-a91a-40a8-bc09-7f8dfcb68544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #387 bb6fc354-1837-43f8-9e35-ad79adaf980c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #387 392938df-ae9e-4500-a9d8-3a69ad1299f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #387 e6d8139f-29c0-4a5e-8cc4-275c33b9100b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #387 d41bf368-a5d2-4c32-8f48-42bcef9f76b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #387 199da69d-7e53-4a67-ab95-2b62f3cb57f6)");

unit.assert_eq8(8'h0F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h85],
"INT DMEM (Testcase #387 6f9f0d5d-2173-43d5-94ee-4d5ad7d7add1)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h86],
"INT DMEM (Testcase #387 b636eb18-1581-4f45-a618-7668f740c68f)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h85] =
datamem_swap[16'h185];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h86] =
datamem_swap[16'h186];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #388
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #388)");
    end
end

unit.assert_eq16(16'h01A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #388 f0720e90-7167-4f12-bc7f-6d94db1a41bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #388 9df8c0b5-54c8-45cf-930b-7dc3e4a23b5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #388 b0be92cf-d673-42ad-8d74-8405b4f20783)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #388 9198128a-bff9-46c1-abfc-0b0dc2cfa4b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #388 311132b5-054d-409c-bb29-6b62ac0be5fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #388 b46910dc-f3ca-4d47-96ce-5662dc61f317)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #388 117e81c6-2ac8-457a-9478-6427e047db83)");

unit.assert_eq8(8'hA8, datamem_ext_i.datamem[13'hC0F],
"EXT DMEM (Testcase #388 23d42d72-a4d4-4e3f-8d4d-254efa3859d1)");
unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'hC10],
"EXT DMEM (Testcase #388 cc0ddf49-3fda-4da4-9e12-79b4a6c7b761)");
datamem_ext_i.datamem[13'hC0F] =
datamem_swap[16'hC0F];
datamem_ext_i.datamem[13'hC10] =
datamem_swap[16'hC10];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #389
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h462C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #389)");
    end
end

unit.assert_eq16(16'h462C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #389 85dedc5a-8990-438e-a6d0-45dcf0268f10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #389 f830e886-32d9-4d16-9f84-23699ffd3e0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #389 7e36f3ac-1e37-4013-aeb6-af382f262c7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #389 71632b18-9808-4f48-8419-96b5e4cbdb84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #389 842e80ad-3706-461e-8b59-d84a3d813ccb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #389 f38be695-67ef-4f3a-b2b0-79d1f9a9e5cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #389 625989c8-2500-4224-b77a-d204c4f923e6)");

unit.assert_eq8(8'h2C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h58],
"INT DMEM (Testcase #389 f4d319de-94c1-4782-9449-0e61591832ec)");
unit.assert_eq8(8'h46, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h59],
"INT DMEM (Testcase #389 b88f74ba-26cf-47e4-a217-1ff88a6066c8)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h58] =
datamem_swap[16'h158];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h59] =
datamem_swap[16'h159];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #390
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3060;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #390)");
    end
end

unit.assert_eq16(16'h3060, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #390 8663bad4-9d6c-4efa-81d9-061a50e1a1f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #390 3e3f57c6-4a72-4b45-8738-cdfc91ad77c7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #390 076246d7-d2dd-4ad6-955d-04f76cca45bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #390 99189653-525d-4816-9ab0-ba1646efa194)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #390 9c42ca27-87e0-4b1b-8fd1-7055297b614e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #390 5b11401d-5d19-4426-877c-47cae5b00839)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #390 2453f5b2-bb7e-40b8-b0ed-9ca8e58d7959)");

unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'hF3E],
"EXT DMEM (Testcase #390 5ee295f8-4707-48da-b7d3-d6322a80747a)");
unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'hF3F],
"EXT DMEM (Testcase #390 6478f709-201a-445f-9b04-7f43f5125f92)");
datamem_ext_i.datamem[13'hF3E] =
datamem_swap[16'hF3E];
datamem_ext_i.datamem[13'hF3F] =
datamem_swap[16'hF3F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #391
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5ECA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #391)");
    end
end

unit.assert_eq16(16'h5ECA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #391 a8f62ee7-7532-476e-9c42-13cd5e2ff643)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #391 9386f5ac-6181-4bd4-be3a-78a7c3ddd88d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #391 f1ad7a5f-3f3c-4f95-b912-fdb9ca8458f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #391 68ff0b1c-eb8a-428b-bf34-53d4e73bb2a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #391 7f593804-cdb0-40b4-b675-e5ed68ba2d4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #391 a0f9ff89-88b4-48fe-acc1-7d7876c402aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #391 13c7edd8-3ff8-4530-961c-f8b8cbdab358)");

unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'h3FF],
"EXT DMEM (Testcase #391 5183ed03-236e-4271-b8b1-d7042a680bec)");
unit.assert_eq8(8'h5E, datamem_ext_i.datamem[13'h400],
"EXT DMEM (Testcase #391 99e2632d-9a7b-4004-8d16-83323f834124)");
datamem_ext_i.datamem[13'h3FF] =
datamem_swap[16'h3FF];
datamem_ext_i.datamem[13'h400] =
datamem_swap[16'h400];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #392
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA1D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #392)");
    end
end

unit.assert_eq16(16'hA1D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #392 a5e1b567-9f19-4a0a-84f0-490cfe71ed20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #392 36698d87-32fd-460e-be29-a28646eece25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #392 d16bcefd-9571-4156-ae9a-81a495804c78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #392 7fb152c7-806a-4c46-be95-d7699a86f5f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #392 c49e0b58-0757-40c7-8d33-51939b2838c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #392 38f4319e-0347-48f0-b2bf-2a6ef9306af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #392 9912ba07-9b0d-4353-89dd-90be7a12dff8)");

unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'hA0C],
"EXT DMEM (Testcase #392 7cd4e31e-5b4e-43f7-88ae-79de9f54e53b)");
unit.assert_eq8(8'hA1, datamem_ext_i.datamem[13'hA0D],
"EXT DMEM (Testcase #392 3feb5352-4922-4098-acb9-8fc5ad8864aa)");
datamem_ext_i.datamem[13'hA0C] =
datamem_swap[16'hA0C];
datamem_ext_i.datamem[13'hA0D] =
datamem_swap[16'hA0D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #393
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2477;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #393)");
    end
end

unit.assert_eq16(16'h2477, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #393 ccec3008-b38f-4695-b02a-a369730b88a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #393 27687502-2638-4f08-8bd7-38a124114b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #393 de11b08b-6e29-4a92-8b19-a89ddfe23b80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #393 fd19eb11-826c-457f-a2a3-65e607cf57be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #393 9a03787b-9db5-419b-9912-a7abc6c35b78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #393 14a86d2c-f564-4423-88ee-f720de78b855)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #393 9e4a7949-aafe-496e-9c9e-29ccc888f38e)");

unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'h9E2],
"EXT DMEM (Testcase #393 a4520dff-b13a-4178-ba13-dd9b0b2c60dc)");
unit.assert_eq8(8'h24, datamem_ext_i.datamem[13'h9E3],
"EXT DMEM (Testcase #393 49cef916-eea3-47d5-807c-89bafe554bea)");
datamem_ext_i.datamem[13'h9E2] =
datamem_swap[16'h9E2];
datamem_ext_i.datamem[13'h9E3] =
datamem_swap[16'h9E3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #394
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h83F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #394)");
    end
end

unit.assert_eq16(16'h83F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #394 22a5af5f-b8ec-4b4a-a2d9-35c80fd2535e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #394 5500b176-cc14-49d8-b7c9-b6e0e289378e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #394 d6d79c3a-0caf-460b-a806-6235432529f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #394 6965323c-7d7e-473a-8729-9046d92af561)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #394 384cd177-2c9a-48c4-9bd4-5112d8f3db9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #394 201d19ec-47eb-4ab4-b48b-1060a8efbe5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #394 965d882f-9b9f-401f-acb3-37f45f6c1091)");

unit.assert_eq8(8'hF7, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h3C],
"INT DMEM (Testcase #394 012742d2-80cb-4730-827d-192371ddd201)");
unit.assert_eq8(8'h83, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h3D],
"INT DMEM (Testcase #394 cdb42fcd-7d63-4c68-a3af-aacecff3586d)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h3C] =
datamem_swap[16'h3C];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h3D] =
datamem_swap[16'h3D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #395
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF031;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #395)");
    end
end

unit.assert_eq16(16'hF031, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #395 96f2aeba-3d99-48f9-b8b3-0bbe30f050c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #395 efda0466-7fb6-44e7-9956-bd3dfcce583c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #395 ce2a5485-5c9b-4f81-b7c0-312538765c46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #395 e9198ca7-38e0-42b2-8c96-65d7b868ca4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #395 24f23c01-ce6f-4d56-afff-216f46e36de5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #395 766f5dee-cd1d-4cfc-8e07-6f5951d6f06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #395 ec7589c1-9909-45f3-be47-7162cadbfab0)");

unit.assert_eq8(8'h31, datamem_ext_i.datamem[13'h39D],
"EXT DMEM (Testcase #395 8daa0577-8de0-4089-9ab1-8dfbc2a0089b)");
unit.assert_eq8(8'hF0, datamem_ext_i.datamem[13'h39E],
"EXT DMEM (Testcase #395 d9121ffc-4d5a-40df-8d8a-de5758ed7ae3)");
datamem_ext_i.datamem[13'h39D] =
datamem_swap[16'h39D];
datamem_ext_i.datamem[13'h39E] =
datamem_swap[16'h39E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #396
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA0FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #396)");
    end
end

unit.assert_eq16(16'hA0FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #396 61391b57-18c2-4f5d-9caf-729899117cc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #396 dbbe28ef-e867-42ea-bd40-e6e021383746)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #396 c9a02ec5-bac6-4250-bc23-c81daca47e9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #396 2c612a2a-1c5d-42a6-820b-f41ca67a53a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #396 dc640852-5d84-4b1d-85b0-50aa4bbf7ca2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #396 970bae55-52f2-4e0d-868e-9280d3a638af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #396 c903195b-c22b-4a1f-9910-94406b2a7191)");

unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'h31C],
"EXT DMEM (Testcase #396 d46a3e57-b49b-4c27-851a-d923dbb706a3)");
unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'h31D],
"EXT DMEM (Testcase #396 88cfbab4-4c7b-4b8f-a228-984d06aea852)");
datamem_ext_i.datamem[13'h31C] =
datamem_swap[16'h31C];
datamem_ext_i.datamem[13'h31D] =
datamem_swap[16'h31D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #397
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h31E5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #397)");
    end
end

unit.assert_eq16(16'h31E5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #397 82e370cc-d4b1-43de-9960-f579fe61d5c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #397 dddc54fa-4c7f-4123-a2d3-c53f8475c0c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #397 b64c5f19-e396-4e0b-987f-7b354be0d591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #397 17858117-e687-4f60-819a-22d8c2b7be6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #397 815d2e22-3397-4942-a5d4-dd8b059d26f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #397 d911a21d-aabd-4335-abed-0ae962dca8d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #397 3c7efe0b-0ded-4eb5-a1ac-42e064b54216)");

unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'h90D],
"EXT DMEM (Testcase #397 d5d92578-3731-4735-a70a-ab53c6ca6c55)");
unit.assert_eq8(8'h31, datamem_ext_i.datamem[13'h90E],
"EXT DMEM (Testcase #397 95f203d0-ccf1-4392-a816-a3765a45cc69)");
datamem_ext_i.datamem[13'h90D] =
datamem_swap[16'h90D];
datamem_ext_i.datamem[13'h90E] =
datamem_swap[16'h90E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #398
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA27;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #398)");
    end
end

unit.assert_eq16(16'hFA27, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #398 261f97df-bd8a-4c5d-8843-3ebd9b453fd3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #398 8d78e22c-c75a-4220-b40e-5668a74d5545)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #398 21571bf6-2cad-47f4-8860-c951e2779ba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #398 610f6c85-583e-478e-8789-d58f3c1ec1aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #398 f32c2668-99f7-4458-a3ba-a85a15ad3ae6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #398 37c47712-f6f6-4e82-ba1c-88f74046aca6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #398 bac813f2-98ec-44f0-9810-07b04149eb30)");

unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'hABF],
"EXT DMEM (Testcase #398 779707fe-1c37-4dde-a4c6-4c5f4d9475c6)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hAC0],
"EXT DMEM (Testcase #398 aca8193e-04fe-4026-bd52-abb7cbe25ee8)");
datamem_ext_i.datamem[13'hABF] =
datamem_swap[16'hABF];
datamem_ext_i.datamem[13'hAC0] =
datamem_swap[16'hAC0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #399
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4952;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #399)");
    end
end

unit.assert_eq16(16'h4952, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #399 b41ce4cc-c445-497c-a0d9-3b8245377e99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #399 f09efcdd-23d7-4753-9089-e8df517b5d0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #399 75ccd88f-3f23-496c-b704-e0ae1595de80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #399 94cad525-ee1f-4d91-907c-061d7a9909b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #399 53d81f6f-ef91-42e8-bec9-30385a218e62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #399 ceed156c-a8b0-49cc-b83c-06c03700df60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #399 43a944cb-a0b0-4c68-89d2-22f024b2a2b7)");

unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'h40F],
"EXT DMEM (Testcase #399 66df1f76-bdfa-46f3-b530-948189f7b3fd)");
unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h410],
"EXT DMEM (Testcase #399 84484120-b5ca-499c-bb43-df607e35386f)");
datamem_ext_i.datamem[13'h40F] =
datamem_swap[16'h40F];
datamem_ext_i.datamem[13'h410] =
datamem_swap[16'h410];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #400
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h73FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #400)");
    end
end

unit.assert_eq16(16'h73FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #400 875f1771-b17d-484e-be51-afca24c5d6ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #400 f16f328a-876b-4e1b-81d4-35ddd6e41bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #400 f4eea937-64a1-4b4d-8e16-1e19007fef01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #400 f13ed24b-cb90-414f-92dd-608af2b010d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #400 cf886085-1c00-4e31-a41b-c41b443fa96b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #400 720d72af-4204-4a7e-9796-d8955829d2b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #400 66df97c5-178e-4fc3-ae47-70a72d8edf76)");

unit.assert_eq8(8'hFC, datamem_ext_i.datamem[13'h7CC],
"EXT DMEM (Testcase #400 409b302d-725f-4702-b706-8805775e28c1)");
unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'h7CD],
"EXT DMEM (Testcase #400 f9bdeb76-5636-4a7e-aa15-2387f7d5736e)");
datamem_ext_i.datamem[13'h7CC] =
datamem_swap[16'h7CC];
datamem_ext_i.datamem[13'h7CD] =
datamem_swap[16'h7CD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #401
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB2B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #401)");
    end
end

unit.assert_eq16(16'hB2B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #401 33bb52c2-ee3f-458a-b982-a87149f6c63c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #401 ecdbf988-0a8a-411b-8f2b-dd88443f2f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #401 0add6e78-73b1-45d3-8d9f-eb7cd123cd57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #401 820a3de3-b01f-4795-a55c-3ef085a1004f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #401 bd72f9df-fb4a-4463-bbf1-e1b4dc8797c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #401 e8b253e5-f9f4-48a0-9035-dd9f4b7a1456)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #401 a4917491-fed4-410b-968d-a866aaee42d0)");

unit.assert_eq8(8'hB8, datamem_ext_i.datamem[13'h540],
"EXT DMEM (Testcase #401 a2d748dd-1002-4052-9ba1-ce830ba3dbb8)");
unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'h541],
"EXT DMEM (Testcase #401 77d1bdf1-5a51-4284-afd2-ac94974e2b89)");
datamem_ext_i.datamem[13'h540] =
datamem_swap[16'h540];
datamem_ext_i.datamem[13'h541] =
datamem_swap[16'h541];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #402
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h21D8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #402)");
    end
end

unit.assert_eq16(16'h21D8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #402 bd52d0a1-b595-463b-a0fd-b0e78110b037)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #402 d7aba3c3-ec90-4698-bfe4-f5d5af8a1a9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #402 90b04b24-e4c4-43f9-a497-311468fcaba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #402 1a9c4e5b-c93b-4e65-9de9-44ce936c67b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #402 bab2c506-c769-4b68-8952-eb18747f753e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #402 4e0d036e-9268-43fa-9150-dce2c0162110)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #402 68dc56a5-6fb9-4766-9f77-736bcc9dff11)");

unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'hC36],
"EXT DMEM (Testcase #402 cb04d9ad-a3ba-448c-b407-7b34a654266a)");
unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'hC37],
"EXT DMEM (Testcase #402 a7d6f38e-fcdb-4024-aff8-dd3db82a37d2)");
datamem_ext_i.datamem[13'hC36] =
datamem_swap[16'hC36];
datamem_ext_i.datamem[13'hC37] =
datamem_swap[16'hC37];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #403
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F7A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #403)");
    end
end

unit.assert_eq16(16'h9F7A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #403 df9e5740-881b-4370-8713-da681ce9d4a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #403 a1cdd1bd-bb18-45c0-b327-b6f33d344c8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #403 d4e6561e-818d-47e1-90d0-f0375036517d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #403 58e59ce4-6cc7-42d6-b06b-f57e536c48d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #403 23d4ae59-24b7-4ee6-9890-8461fd18ef85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #403 916ce11d-d7c0-42ba-bce7-77d0a9abcda5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #403 1a71af20-effd-4f9c-b395-917be4deb6ac)");

unit.assert_eq8(8'h7A, datamem_ext_i.datamem[13'h5E1],
"EXT DMEM (Testcase #403 959e2562-4831-4c82-8f50-28908445a0e4)");
unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h5E2],
"EXT DMEM (Testcase #403 929b29e4-d356-4512-af1f-cfd431d3dccd)");
datamem_ext_i.datamem[13'h5E1] =
datamem_swap[16'h5E1];
datamem_ext_i.datamem[13'h5E2] =
datamem_swap[16'h5E2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #404
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7B6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #404)");
    end
end

unit.assert_eq16(16'h7B6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #404 77c79f5d-f944-4e55-abb9-47d589ef02a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #404 4cab2c08-5cee-40c9-be18-51a0f3f372a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #404 58a68cf7-6e33-4793-b020-1a8c347a58b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #404 b3dbdd2d-3994-4456-bac7-b8d4e2d17712)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #404 53ade823-2bc9-40bb-92bc-cb697f3b178c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #404 c47ad2fa-e08b-4a01-a997-dcf09f090389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #404 e6475d2a-8baa-4aaa-8eae-e5f3efff603f)");

unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'hB1C],
"EXT DMEM (Testcase #404 e251bd0e-f24b-4b01-a263-3205faf8defb)");
unit.assert_eq8(8'h7B, datamem_ext_i.datamem[13'hB1D],
"EXT DMEM (Testcase #404 d0cba18f-6d78-4b89-9d89-915cdcb2e5b8)");
datamem_ext_i.datamem[13'hB1C] =
datamem_swap[16'hB1C];
datamem_ext_i.datamem[13'hB1D] =
datamem_swap[16'hB1D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #405
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h150B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #405)");
    end
end

unit.assert_eq16(16'h150B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #405 40061541-a791-43b6-b6a8-c9da67280095)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #405 1478bfdf-f0c5-433c-b6a6-c19ed662065c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #405 980d4f5d-d0bc-4ca1-aef9-3d5e6402552e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #405 4647b847-684e-470c-ac52-4cba86f9baed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #405 e918c46b-2a89-4197-86bd-afefd881937a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #405 76bc52ca-0ac1-4a17-9851-55d41978db20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #405 6d7a9ec0-68d3-4a82-a28c-5288262d7800)");

unit.assert_eq8(8'h0B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h8B],
"INT DMEM (Testcase #405 8a6e12df-7dc5-4a47-b044-ae09dadff513)");
unit.assert_eq8(8'h15, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h8C],
"INT DMEM (Testcase #405 7fb0a404-2522-4d40-9d91-9cf4ed11471f)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h8B] =
datamem_swap[16'h8B];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h8C] =
datamem_swap[16'h8C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #406
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC550;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #406)");
    end
end

unit.assert_eq16(16'hC550, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #406 46cdcf9b-25f5-49ba-9f2a-1870bebb9feb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #406 036a31fc-8018-4dd1-907f-12be23d48d72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #406 2c9440b8-4e1c-4a96-814d-c6385b5f669e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #406 d1d07ed4-dd28-41a4-91b1-343eded9370c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #406 aeef5f41-58de-419a-80ac-dccd3b7e5bea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #406 cf47c64d-dbfd-40bf-a094-2369cb4eacde)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #406 785a4ea5-95ac-4bcb-b9a2-dabe13ddf58a)");

unit.assert_eq8(8'h50, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h75],
"INT DMEM (Testcase #406 7b6cb5ea-e0ab-4cb2-b761-80c7662c9f9b)");
unit.assert_eq8(8'hC5, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h76],
"INT DMEM (Testcase #406 10d58dc8-05cc-420d-a5cd-0f91368f4eb0)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h75] =
datamem_swap[16'h175];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h76] =
datamem_swap[16'h176];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #407
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8650;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #407)");
    end
end

unit.assert_eq16(16'h8650, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #407 93144242-1581-496d-9a08-ccd326431bbd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #407 9f3f9197-ad8a-4c64-b15a-d5d75d5ec23f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #407 a8000b39-e3f6-46c8-9584-6840f29b06a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #407 44079030-fce7-4396-b2d1-cf4b1b4be4b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #407 39f5c7b7-e556-4f79-8d01-482995633d58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #407 bab0e517-853f-491b-aa26-e818ef2332c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #407 dc4adfdf-5fa0-4b64-8729-4e6cacc92b38)");

unit.assert_eq8(8'h50, datamem_ext_i.datamem[13'h37C],
"EXT DMEM (Testcase #407 ad9d63d9-7290-437e-995c-2b9f28bf4271)");
unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'h37D],
"EXT DMEM (Testcase #407 dc18ff34-5fdb-4cd3-8bbe-02eb1b8af872)");
datamem_ext_i.datamem[13'h37C] =
datamem_swap[16'h37C];
datamem_ext_i.datamem[13'h37D] =
datamem_swap[16'h37D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #408
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h88CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #408)");
    end
end

unit.assert_eq16(16'h88CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #408 f47f9d71-2207-4c0b-8556-ae3d58ff0b67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #408 3a82d05a-258e-448e-a496-00caf1a87e3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #408 2da11067-6fc7-48c5-83d6-fe3f164caa3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #408 3e515a04-e720-407b-a013-3ea071235e6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #408 7a89e14e-83b2-405f-891c-9c7230f0f537)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #408 5d5fd8ac-594d-47be-b8de-08d9f55efe58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #408 e13880fa-fb16-492b-8b0a-34d174f49144)");

unit.assert_eq8(8'hCB, datamem_ext_i.datamem[13'hA13],
"EXT DMEM (Testcase #408 a076e8cd-0fdd-420a-9d79-7ccc1fc7d86b)");
unit.assert_eq8(8'h88, datamem_ext_i.datamem[13'hA14],
"EXT DMEM (Testcase #408 c5792b0c-bc0b-481a-9151-93bf0dd193cc)");
datamem_ext_i.datamem[13'hA13] =
datamem_swap[16'hA13];
datamem_ext_i.datamem[13'hA14] =
datamem_swap[16'hA14];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #409
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F5D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #409)");
    end
end

unit.assert_eq16(16'h3F5D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #409 79e2d456-af90-4fe4-acc1-78b42664d3c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #409 9de2c9d2-a01e-413c-bbbd-d076a9539bbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #409 7af2ab45-be5e-4232-9b32-fba2c37a5d32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #409 a2e22a44-bd5d-459e-96cf-725527e219a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #409 c6e6de55-955f-420e-b0a6-9a79a57191b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #409 bf9b4f38-d74a-4443-b391-06e2eb20ef89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #409 37fcd22b-e1ce-4384-a59b-0fafc239dfe9)");

unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'hAC1],
"EXT DMEM (Testcase #409 eb3cd9c4-0eed-428e-9428-9c4732bec1e7)");
unit.assert_eq8(8'h3F, datamem_ext_i.datamem[13'hAC2],
"EXT DMEM (Testcase #409 ac3a087b-7b84-4a62-af9e-906dce049217)");
datamem_ext_i.datamem[13'hAC1] =
datamem_swap[16'hAC1];
datamem_ext_i.datamem[13'hAC2] =
datamem_swap[16'hAC2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #410
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9B12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #410)");
    end
end

unit.assert_eq16(16'h9B12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #410 7d5f2109-3a82-474b-8edb-16725a11c034)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #410 bd2ab7fb-7715-4402-852c-b9f89be453e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #410 08846785-dde3-4b86-9a0c-3d4af7da0b68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #410 2b752f7b-de7e-41b2-90aa-141504a7d0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #410 642e94b5-330e-419e-93d3-29d125c157f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #410 8d03bf50-c760-49bb-9cea-9a0ff1eafcdb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #410 f0c1e092-d463-4e98-bcb2-0937c8ca72c4)");

unit.assert_eq8(8'h12, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hDA],
"INT DMEM (Testcase #410 6e2973cf-238a-4ebd-9a65-0baa3c038a8e)");
unit.assert_eq8(8'h9B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hDB],
"INT DMEM (Testcase #410 2c9f113c-7d22-4a73-8846-5cd54483f63b)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hDA] =
datamem_swap[16'h1DA];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hDB] =
datamem_swap[16'h1DB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #411
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C99;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #411)");
    end
end

unit.assert_eq16(16'h1C99, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #411 730f893c-7584-448e-8ac5-94e2a86b2ae5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #411 8080ce66-d9bc-4d6c-82ca-7019b32c5b7d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #411 c057fa02-20a9-417d-8ed0-58f3611b76b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #411 3b6ae8c2-2da9-4fd1-a0ba-b5dc37dc186d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #411 e1ab1d1b-ad1b-41cc-802a-c8f60c65d100)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #411 09d87fc1-ea39-408d-b737-2962f5c90783)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #411 18c371ae-066e-4fb8-842c-e999ca6736c4)");

unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'hDBA],
"EXT DMEM (Testcase #411 8c2132a1-2f2f-4464-b86e-eb68b4083ae8)");
unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'hDBB],
"EXT DMEM (Testcase #411 ba1684d7-c228-403c-b765-312d7d9a90bc)");
datamem_ext_i.datamem[13'hDBA] =
datamem_swap[16'hDBA];
datamem_ext_i.datamem[13'hDBB] =
datamem_swap[16'hDBB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #412
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h866B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #412)");
    end
end

unit.assert_eq16(16'h866B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #412 73d77339-1c94-40a1-b3b6-27e93a07b9a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #412 8a4fc18d-1311-4da0-9e10-45e4913fa5ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #412 a9488b0e-04da-40ee-800c-eb0298d30281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #412 4f5435e7-808d-47d8-b5ea-a041d6f5e2ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #412 9f1cae30-2cb5-4918-a097-6a1b561744f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #412 97f66c72-5260-4bc6-84ae-c0c4afc3ba98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #412 ce03cefe-adf7-4261-869b-288fcf104321)");

unit.assert_eq8(8'h6B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h60],
"INT DMEM (Testcase #412 6b9d02ef-3c3c-4ed2-a8d9-918021401bff)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h61],
"INT DMEM (Testcase #412 8e62efa4-05fa-4d62-a209-de2d46556797)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h60] =
datamem_swap[16'h60];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h61] =
datamem_swap[16'h61];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #413
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1F50;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #413)");
    end
end

unit.assert_eq16(16'h1F50, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #413 95c5721c-ae82-4cf6-a06e-7bc78399bdb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #413 50b27f34-8531-4877-ae99-5b1efb852f21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #413 0275a951-5540-45db-ac5b-ebe898d4caa7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #413 85a76ec2-57bc-4b36-832c-e947fd559001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #413 274d6059-9f0e-4832-a5cd-a34b39f7cae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #413 78f79dfc-046f-43e3-aa60-1542fedea193)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #413 e6b8b0f9-3baa-457c-8a38-a4935f62a381)");

unit.assert_eq8(8'h50, datamem_ext_i.datamem[13'h936],
"EXT DMEM (Testcase #413 2615f82f-3eeb-45e3-87c7-fcc0d4166702)");
unit.assert_eq8(8'h1F, datamem_ext_i.datamem[13'h937],
"EXT DMEM (Testcase #413 5760263e-12eb-4586-a6e9-992283f0e217)");
datamem_ext_i.datamem[13'h936] =
datamem_swap[16'h936];
datamem_ext_i.datamem[13'h937] =
datamem_swap[16'h937];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #414
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0275;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #414)");
    end
end

unit.assert_eq16(16'h0275, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #414 14a2f148-7330-4d7b-99e7-1cc09b3318bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #414 dae16d3d-78f8-42ca-8dab-4d254c8737d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #414 a14b21c3-fc50-4f4a-a517-5ebfd3d270ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #414 f9e7e525-b8c7-4957-8e35-92fde364fe49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #414 63cb1db4-fcfa-44db-b5a2-8166e9715556)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #414 2ee8470e-9e97-4b28-bc3f-8d03bce7e026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #414 10fff713-1068-49e0-803b-54f138d4465c)");

unit.assert_eq8(8'h75, datamem_ext_i.datamem[13'h554],
"EXT DMEM (Testcase #414 4eedbe04-a430-43d6-ae09-00e2a7094217)");
unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'h555],
"EXT DMEM (Testcase #414 fd6ce9a4-832f-4eb3-af80-99157398f4e2)");
datamem_ext_i.datamem[13'h554] =
datamem_swap[16'h554];
datamem_ext_i.datamem[13'h555] =
datamem_swap[16'h555];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #415
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBA05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #415)");
    end
end

unit.assert_eq16(16'hBA05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #415 f7087089-c5d2-4ccf-92ca-c9035a4bf7fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #415 377f8864-f9aa-4f33-b1c0-dee1b0bca89d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #415 dbd77d9c-c54c-4484-b0a8-cf773ec6ffb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #415 19df0f8f-520c-4d96-8b19-9a4aac636425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #415 4b66b812-506c-430a-b29a-2f3d6b753f4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #415 46c6518c-6af2-4664-b92c-a089ef1224cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #415 e49983dd-064e-4465-beaf-b71df1407c59)");

unit.assert_eq8(8'h05, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h64],
"INT DMEM (Testcase #415 f9f16ed6-7845-44cf-b248-68b4b4515d10)");
unit.assert_eq8(8'hBA, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h65],
"INT DMEM (Testcase #415 97d1cbf4-b239-45bc-b01b-59f36e0bc6b4)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h64] =
datamem_swap[16'h64];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h65] =
datamem_swap[16'h65];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #416
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB52B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #416)");
    end
end

unit.assert_eq16(16'hB52B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #416 0ca0e4d6-0ff0-46de-a4e9-83d7de890202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #416 c5b56e0b-fd10-43cf-991f-ae773fb1bc01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #416 35a09adf-76fc-41bf-9c31-881c8849d8fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #416 84a48502-71ef-488e-ba54-323a30de0c62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #416 c0151444-a24d-4d65-ac03-5072100cc139)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #416 fff6fe8e-e514-427b-9b7b-74b8067f31d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #416 ef8ac65d-1caa-4759-afda-576ec6dca37e)");

unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'h3F7],
"EXT DMEM (Testcase #416 d4363280-417d-4461-bf64-8bbfdbb9550c)");
unit.assert_eq8(8'hB5, datamem_ext_i.datamem[13'h3F8],
"EXT DMEM (Testcase #416 a3357ab2-7577-4b1f-ad24-76e589b7d4e2)");
datamem_ext_i.datamem[13'h3F7] =
datamem_swap[16'h3F7];
datamem_ext_i.datamem[13'h3F8] =
datamem_swap[16'h3F8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #417
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7DCA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #417)");
    end
end

unit.assert_eq16(16'h7DCA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #417 2731bf80-c9de-4265-813f-74c7cfd2a67f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #417 43869322-0ae0-4779-a6c1-f187f00a6fc9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #417 86975582-206c-4812-8eb7-619b02ef887a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #417 d1d8d988-d93e-45b1-83b4-e9e008104222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #417 2e67641d-c476-4a82-af46-c517748ff55d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #417 c52f25a6-78b7-4ccc-85fd-29b45dee521b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #417 41dbed5a-799d-4a52-b2cc-430b3a1bfa28)");

unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'h34D],
"EXT DMEM (Testcase #417 6c720ac3-b76c-497d-bc45-8bac0e9752bd)");
unit.assert_eq8(8'h7D, datamem_ext_i.datamem[13'h34E],
"EXT DMEM (Testcase #417 0851f8ab-2d8b-46be-ac87-e522582d03b7)");
datamem_ext_i.datamem[13'h34D] =
datamem_swap[16'h34D];
datamem_ext_i.datamem[13'h34E] =
datamem_swap[16'h34E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #418
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D0A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #418)");
    end
end

unit.assert_eq16(16'h4D0A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #418 6a405d1e-30cf-41ae-b839-c8700ffb89b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #418 5bed29bb-ef7e-4488-b24e-bb1e86d1b4f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #418 6a0ea65c-19ce-4b6b-be76-31008b3b0b64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #418 2f0ea3dd-8ecc-4cc4-a8a0-4bbac75b20bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #418 607d9d19-7ede-4821-8e68-7c6493f991cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #418 c6487d86-f15b-4b43-889b-a74d090a1f42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #418 fb44bbb6-4d55-4118-82f8-a6a109c52260)");

unit.assert_eq8(8'h0A, datamem_ext_i.datamem[13'hF72],
"EXT DMEM (Testcase #418 a52c04bf-1359-41a5-8a5f-3c3d8bbad909)");
unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'hF73],
"EXT DMEM (Testcase #418 0a50b411-1ece-48a6-8381-be0bfca30de8)");
datamem_ext_i.datamem[13'hF72] =
datamem_swap[16'hF72];
datamem_ext_i.datamem[13'hF73] =
datamem_swap[16'hF73];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #419
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB648;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #419)");
    end
end

unit.assert_eq16(16'hB648, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #419 0498a857-81a2-4b51-8449-3045b34c8b5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #419 78885e04-ad56-49bc-8b54-b7c8083b04d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #419 dc765a31-de48-4e9d-b521-01db9f156499)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #419 4adad41b-d113-4a5d-937d-09946e4516f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #419 b2ecca3a-9d56-471d-b4ec-4eea8def3647)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #419 ade93144-025a-4a99-a4f9-f12ea6a6b50a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #419 e64499be-2104-420d-a110-c19b8bac0c21)");

unit.assert_eq8(8'h48, datamem_ext_i.datamem[13'h594],
"EXT DMEM (Testcase #419 4a91cacd-feb6-4443-89a2-bb90370abbd5)");
unit.assert_eq8(8'hB6, datamem_ext_i.datamem[13'h595],
"EXT DMEM (Testcase #419 8f9570ce-4792-4c42-a0d8-91f132b85ad8)");
datamem_ext_i.datamem[13'h594] =
datamem_swap[16'h594];
datamem_ext_i.datamem[13'h595] =
datamem_swap[16'h595];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #420
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB308;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #420)");
    end
end

unit.assert_eq16(16'hB308, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #420 8bb59aa0-286b-4936-8bdd-5f91618084ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #420 e4de2ca6-2e53-4e0d-abdb-82556e42b9b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #420 35ed84fa-dd9a-46a8-890f-04eadeed1434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #420 d4999134-bedd-4744-a8c1-3d36d0fe185f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #420 09b7e9b8-b629-42cf-96fe-4e86a389b95c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #420 a25a86f1-ab9c-4f87-ac3c-91a49b0f5ecd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #420 db274af2-b621-43dc-8736-f0b7c14f07b2)");

unit.assert_eq8(8'h08, datamem_ext_i.datamem[13'hBE1],
"EXT DMEM (Testcase #420 071aae85-550c-40de-aa8c-81c5807d474f)");
unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'hBE2],
"EXT DMEM (Testcase #420 6fe26868-884b-46c1-8f82-c2bc879d9c55)");
datamem_ext_i.datamem[13'hBE1] =
datamem_swap[16'hBE1];
datamem_ext_i.datamem[13'hBE2] =
datamem_swap[16'hBE2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #421
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DDF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #421)");
    end
end

unit.assert_eq16(16'h9DDF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #421 4cd5e1e0-7bdc-4d57-b11d-5a091aa19824)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #421 678fa627-929e-48a9-a9a2-99a137bc03f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #421 bb4ec8e2-e2a5-4cd7-b0f0-c525fd38cead)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #421 b1923cc9-1430-4819-9665-0bdaf0b6fea7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #421 626a35ac-1f69-42e0-8702-d5f8fa52fca9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #421 e3507f2d-91e6-4667-b894-a4f0c68ab608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #421 8626299f-d130-49d5-b9df-9bf994add9e8)");

unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'hCAF],
"EXT DMEM (Testcase #421 145cf5fa-6ce8-4df2-ac2b-184283ed7ca2)");
unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'hCB0],
"EXT DMEM (Testcase #421 19b3e49d-e14a-4578-8476-3ab00b573cdd)");
datamem_ext_i.datamem[13'hCAF] =
datamem_swap[16'hCAF];
datamem_ext_i.datamem[13'hCB0] =
datamem_swap[16'hCB0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #422
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h256C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #422)");
    end
end

unit.assert_eq16(16'h256C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #422 b3f1d6fb-cf01-4547-b7fb-996255f10822)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #422 7e0a717f-d928-4661-8617-7c3ae224b6d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #422 ae3cc971-27d6-499e-83f6-556207f2668d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #422 410dc051-c20d-40ac-9aad-ffff01f8123e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #422 67ea9c71-a8b8-4fb4-ad24-4a17525408ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #422 57e7ec55-e66f-4bf3-b203-2dad75802c12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #422 fda3f5c4-ddb1-4864-84a8-dcda27676286)");

unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h3CC],
"EXT DMEM (Testcase #422 741a5f7d-a9d1-4775-b0f2-befe49157156)");
unit.assert_eq8(8'h25, datamem_ext_i.datamem[13'h3CD],
"EXT DMEM (Testcase #422 271f2f22-09cd-452c-9550-546952ae2405)");
datamem_ext_i.datamem[13'h3CC] =
datamem_swap[16'h3CC];
datamem_ext_i.datamem[13'h3CD] =
datamem_swap[16'h3CD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #423
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h94DE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #423)");
    end
end

unit.assert_eq16(16'h94DE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #423 58c9536b-61fb-43db-9715-7201c132b3ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #423 ccc8e074-49e5-4886-940c-189b411d72ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #423 af6e1859-a653-43d4-8fa0-a3111f3b6b6d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #423 3002eb22-a3b3-4c97-b345-5ba974cf5ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #423 5ec8e475-af84-411a-acf0-83f9785ae6e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #423 bcad8f62-006e-46d8-867d-9e2bbed97671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #423 fdb9e302-f260-49e7-b5cf-dd469a13b9bf)");

unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'h27D],
"EXT DMEM (Testcase #423 494123df-8b12-4034-a0ce-8617ff72b0fb)");
unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'h27E],
"EXT DMEM (Testcase #423 e91d141b-50ce-4b6c-b5ac-b28152dd48c0)");
datamem_ext_i.datamem[13'h27D] =
datamem_swap[16'h27D];
datamem_ext_i.datamem[13'h27E] =
datamem_swap[16'h27E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #424
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #424)");
    end
end

unit.assert_eq16(16'h47CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #424 db3c4e6e-cdbd-4856-bbf9-04c22ff374d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #424 a8506ec9-6333-4b0b-af09-c9d4e329adf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #424 2da72ab9-c1bf-4d6c-8fbf-21a0179b1ce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #424 a83be6b4-80a7-4f03-a66b-224836fb9e8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #424 dffc4a3e-a63a-42d6-8583-02d3b17b8057)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #424 57f8b46f-ab94-4426-8dee-f2a3157a6917)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #424 da8afc93-9fe0-480a-99c0-d697ea402609)");

unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'hF0D],
"EXT DMEM (Testcase #424 c5a7f7ec-e91f-4811-a371-a31152143411)");
unit.assert_eq8(8'h47, datamem_ext_i.datamem[13'hF0E],
"EXT DMEM (Testcase #424 81e59512-e5e6-4dc0-b2c0-126f0d2866ba)");
datamem_ext_i.datamem[13'hF0D] =
datamem_swap[16'hF0D];
datamem_ext_i.datamem[13'hF0E] =
datamem_swap[16'hF0E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #425
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h79CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #425)");
    end
end

unit.assert_eq16(16'h79CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #425 10c9da66-1dd2-45c1-b16e-0c92014e2e06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #425 c75aa686-890c-4936-977f-ef5128127ee0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #425 1f091dad-9f09-4024-9284-bc30d4c73ad9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #425 a9f9fc6d-c139-48d3-b4c4-ccee83c3c87c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #425 fcda3bc4-0e90-435b-971f-bdf6870cb33d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #425 8a32e86a-ecb5-40b6-baa5-50e6ccc7be71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #425 76d0ed60-30e1-49b7-a5cc-3f5d0f6924cf)");

unit.assert_eq8(8'hCD, datamem_ext_i.datamem[13'hE7E],
"EXT DMEM (Testcase #425 86cb35ce-364a-4365-955a-075af89332ab)");
unit.assert_eq8(8'h79, datamem_ext_i.datamem[13'hE7F],
"EXT DMEM (Testcase #425 c676e2c5-4dc1-4fe9-b410-21af8d7a0d53)");
datamem_ext_i.datamem[13'hE7E] =
datamem_swap[16'hE7E];
datamem_ext_i.datamem[13'hE7F] =
datamem_swap[16'hE7F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #426
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h549A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #426)");
    end
end

unit.assert_eq16(16'h549A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #426 a8f8a163-8f24-48b9-860f-b8514581b2e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #426 3d0111cf-2f0f-4799-89c8-9acab7e4db99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #426 f53f9a59-d5cd-47d8-babb-91eb27d417f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #426 bb12c331-7baf-47b8-816d-f237ed6124b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #426 2295232a-c2f3-4458-9922-edd263536857)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #426 1ae139ec-45ba-4975-9777-365eff6591ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #426 3d68db23-46db-4aaa-8a86-bdfae7ac1aed)");

unit.assert_eq8(8'h9A, datamem_ext_i.datamem[13'h725],
"EXT DMEM (Testcase #426 11cac8a9-fe88-4d1d-89ec-6a5783d05b83)");
unit.assert_eq8(8'h54, datamem_ext_i.datamem[13'h726],
"EXT DMEM (Testcase #426 1a6f313c-4bcb-44e7-8ba9-30ff119d7a7d)");
datamem_ext_i.datamem[13'h725] =
datamem_swap[16'h725];
datamem_ext_i.datamem[13'h726] =
datamem_swap[16'h726];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #427
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2462;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #427)");
    end
end

unit.assert_eq16(16'h2462, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #427 eabf5f5f-9c98-43f0-b742-2fa8636a08d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #427 83cc91fc-0124-46cc-bc51-fc6ea86d9089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #427 c258466e-92bb-4036-b9a7-cc1af03180e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #427 3725e7cf-b400-45ca-ac20-1ad6ab86b2f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #427 5d38984d-770d-47e7-8342-64da29acb9c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #427 9eee3240-0f5c-484f-9a35-49d2dbd17df0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #427 95cde421-f096-4956-9b3c-923b37d77131)");

unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'h87E],
"EXT DMEM (Testcase #427 4d122a6e-61d9-4c5c-9f78-f3c38f765c69)");
unit.assert_eq8(8'h24, datamem_ext_i.datamem[13'h87F],
"EXT DMEM (Testcase #427 1ae506e8-3ffc-4f8c-9704-d3b8ee9b0a1e)");
datamem_ext_i.datamem[13'h87E] =
datamem_swap[16'h87E];
datamem_ext_i.datamem[13'h87F] =
datamem_swap[16'h87F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #428
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #428)");
    end
end

unit.assert_eq16(16'hBB6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #428 36559b33-5338-40c3-91b8-89d675871346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #428 8860a29d-12f7-43d4-b7ad-c1bdf71e2a41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #428 b9d65085-6b43-4de4-97f9-b1d3049ac4a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #428 9900acf6-0a72-4c72-b498-ec7eae7c1763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #428 f53f61a1-2d53-489c-80f5-872ec69e4f8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #428 658ae577-34d0-4261-8c25-13aa69743eec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #428 58394454-9f9f-4983-8be6-f14f0ac02580)");

unit.assert_eq8(8'h6D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6E],
"INT DMEM (Testcase #428 4764a45f-c054-419a-af9b-c4948442fa50)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6F],
"INT DMEM (Testcase #428 7898a099-bb5f-4ec4-ab61-fa17064299ce)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6E] =
datamem_swap[16'h16E];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h6F] =
datamem_swap[16'h16F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #429
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDF85;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #429)");
    end
end

unit.assert_eq16(16'hDF85, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #429 925bf678-80ff-4502-bc37-be2f481a7fab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #429 6c2000fb-5c5d-487f-9fe3-d1bb1f5f1ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #429 ff97e8e0-d6d3-441e-a18b-f510b6ca669b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #429 5b1a39f5-02c3-4b1a-8642-a2819c245320)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #429 be509822-afaf-4b37-bd6d-28ec0d6fb3c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #429 62c060a0-3fd3-426d-a31f-37e1dff83354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #429 e3aa7f3c-d465-40ec-9bcd-9659fe02d0a0)");

unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'h5D7],
"EXT DMEM (Testcase #429 91d41f33-77a0-4e68-8f27-8bc9352a4314)");
unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'h5D8],
"EXT DMEM (Testcase #429 314e922f-b149-493b-a048-79f0d15a8a13)");
datamem_ext_i.datamem[13'h5D7] =
datamem_swap[16'h5D7];
datamem_ext_i.datamem[13'h5D8] =
datamem_swap[16'h5D8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #430
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE42B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #430)");
    end
end

unit.assert_eq16(16'hE42B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #430 967e062b-9cac-4cdb-99d8-638b74ade281)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #430 47f19460-67ff-4af9-93f3-f0f5668c135c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #430 a770e48e-0357-4571-b926-544b81793ae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #430 34e42bbe-453d-4702-8bdd-b52d7582288e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #430 645ed552-8a78-4252-b111-e59be5268d29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #430 929a718f-c1cc-4eb5-86d2-6cc5a78b28ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #430 ce193707-889c-45dd-9a6c-bab170fa84c7)");

unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'h4FE],
"EXT DMEM (Testcase #430 52713af5-1096-410b-82a0-9d186066a41f)");
unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'h4FF],
"EXT DMEM (Testcase #430 583cbd1a-b3df-4bc3-9f28-d5244e0638e0)");
datamem_ext_i.datamem[13'h4FE] =
datamem_swap[16'h4FE];
datamem_ext_i.datamem[13'h4FF] =
datamem_swap[16'h4FF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #431
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78E2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #431)");
    end
end

unit.assert_eq16(16'h78E2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #431 e7351ba9-d4e2-4f7d-a4cb-f337518bcc2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #431 ee65c098-9891-4f0a-86ac-ff829856b7af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #431 34415a07-03a5-4b12-a7a2-b8eeea32ede5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #431 27a8845f-91c4-4aea-babe-28dc2eb636a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #431 fcb526de-389d-4cc3-bd22-570d6dd48b61)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #431 4b80ea6d-a30c-40dc-aa2e-3bf9218e2474)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #431 7703971d-8d0b-46c3-a9d8-1ca989b8ded6)");

unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'h4C0],
"EXT DMEM (Testcase #431 c00e9ce1-f225-49aa-b146-06541c22d349)");
unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'h4C1],
"EXT DMEM (Testcase #431 d7ee9c5c-436a-4c46-a3f1-371d07b5274f)");
datamem_ext_i.datamem[13'h4C0] =
datamem_swap[16'h4C0];
datamem_ext_i.datamem[13'h4C1] =
datamem_swap[16'h4C1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #432
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1DC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #432)");
    end
end

unit.assert_eq16(16'h1DC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #432 69921697-31f5-48b2-9901-04e504f140e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #432 7ca2a330-3b9f-4fa5-b812-11b06ff93686)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #432 66b23830-1462-4881-969a-0259bc89c670)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #432 8f3f023a-5bb0-4a72-91ca-736ed37209d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #432 8707f6d4-7737-40b7-88c4-2c2bd2205d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #432 0d946b54-0444-4db8-9ccf-063b1add7997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #432 1692e0cf-0177-4fc0-ab9f-7eff8fc83c23)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h784],
"EXT DMEM (Testcase #432 34345f32-438f-4270-b4d7-7f048fc38744)");
unit.assert_eq8(8'h1D, datamem_ext_i.datamem[13'h785],
"EXT DMEM (Testcase #432 9c0b94dd-b896-424b-ac8b-877c25d79c6a)");
datamem_ext_i.datamem[13'h784] =
datamem_swap[16'h784];
datamem_ext_i.datamem[13'h785] =
datamem_swap[16'h785];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #433
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9736;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #433)");
    end
end

unit.assert_eq16(16'h9736, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #433 0f477195-994a-4e82-bba3-037f900cd602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #433 893acf19-e77b-4aa2-b475-b8dc0ddc1c5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #433 d428d9f0-c85b-4218-904b-42c956d83424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #433 3e9bb653-a6eb-405e-b663-10a09f5c7232)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #433 78c53703-fd27-47f3-a9c5-d368b7bec695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #433 a0b83052-9f59-43f9-a4fa-55a8d9e2d814)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #433 3a99e7a4-db74-4b67-82b6-64dcb03bfadd)");

unit.assert_eq8(8'h36, datamem_ext_i.datamem[13'hF31],
"EXT DMEM (Testcase #433 0e686fb4-6306-4322-a471-2824fcdf8832)");
unit.assert_eq8(8'h97, datamem_ext_i.datamem[13'hF32],
"EXT DMEM (Testcase #433 96dccaa4-3a40-4021-9023-f2fc73a86365)");
datamem_ext_i.datamem[13'hF31] =
datamem_swap[16'hF31];
datamem_ext_i.datamem[13'hF32] =
datamem_swap[16'hF32];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #434
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #434)");
    end
end

unit.assert_eq16(16'h6C76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #434 a9786903-943c-4ffc-bf93-8cbe765d2fdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #434 1f020e98-b395-4d57-bc02-d6d2f630264e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #434 ccfcd39a-2664-438e-a88e-a09cb75f8706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #434 3f815207-c644-4982-8f8e-1b7e106f863c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #434 87b0e7a3-c508-42f7-ac76-f8f7a20f52f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #434 fb849df6-f5b6-4f96-85ec-826298479753)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #434 31de98c6-5a1d-4d1a-9702-56262ae3824d)");

unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'h3D6],
"EXT DMEM (Testcase #434 522bd96e-ece1-4cea-a45c-03f85d63f13f)");
unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h3D7],
"EXT DMEM (Testcase #434 14aa72cc-4e84-40b9-b97d-8bdce16df77f)");
datamem_ext_i.datamem[13'h3D6] =
datamem_swap[16'h3D6];
datamem_ext_i.datamem[13'h3D7] =
datamem_swap[16'h3D7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #435
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDBC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #435)");
    end
end

unit.assert_eq16(16'hDBC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #435 9af4b796-0baa-4249-92da-09a7c01ba30b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #435 e20f2109-8287-483c-8369-3b08cfc8e1e0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #435 4151217b-9c2a-4319-8d54-561d810eed55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #435 178415de-86f5-4ca4-a24c-491b8bcf7b2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #435 7c83b4bd-8b94-4164-aa7b-4fd52172805e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #435 7b27c142-f6df-4a79-bc9c-a02708b691d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #435 79d8e6a0-d66c-4187-9eca-cf847b151b6c)");

unit.assert_eq8(8'hC5, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h0C],
"INT DMEM (Testcase #435 5c523abe-7125-478c-ba90-e30b384e172f)");
unit.assert_eq8(8'hDB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h0D],
"INT DMEM (Testcase #435 6fff6f18-6264-40a9-82f8-bd712843a6d8)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h0C] =
datamem_swap[16'h0C];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h0D] =
datamem_swap[16'h0D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #436
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE5C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #436)");
    end
end

unit.assert_eq16(16'hE5C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #436 00adaf71-fa2e-4477-b460-e3b4fa061750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #436 b875ecd1-076e-467b-ba17-332ea65e6389)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #436 f223ac03-9948-471b-86d7-a06978e4cee6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #436 167aa172-f3d5-45dc-ba02-e80034dc6984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #436 fdf4e279-92a6-4400-9468-39528197b86c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #436 0d64dfa7-42cf-4842-b5db-dc05b3b4cb2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #436 d64d84d0-92e3-4e66-9726-38cfe1765556)");

unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'hAF6],
"EXT DMEM (Testcase #436 2f5cf93e-d4d1-437c-8517-38ccdb55ffe0)");
unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'hAF7],
"EXT DMEM (Testcase #436 eeef9cbc-09ba-442d-8e09-a132159a4c08)");
datamem_ext_i.datamem[13'hAF6] =
datamem_swap[16'hAF6];
datamem_ext_i.datamem[13'hAF7] =
datamem_swap[16'hAF7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #437
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF201;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #437)");
    end
end

unit.assert_eq16(16'hF201, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #437 73840c2f-81ba-43d7-aebc-b59e367730df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #437 c10d63aa-c16a-4730-b25c-b6ad69a048e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #437 a4f876ef-e2c4-44ab-b6d7-e7734ebc425b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #437 939f79a4-1f60-453f-86eb-3acf570592ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #437 cd95aac5-f6b4-4b39-abb2-17fea9443153)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #437 03db7cc6-5240-409b-a0f3-c8d7e795bd53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #437 ca5f6662-2046-41be-80f0-41f2db36d666)");

unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'hE9D],
"EXT DMEM (Testcase #437 46cc4d1c-a4a5-4461-a6a4-0f01d145b3a8)");
unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'hE9E],
"EXT DMEM (Testcase #437 237afdca-3d72-4931-a20c-de09595d0e84)");
datamem_ext_i.datamem[13'hE9D] =
datamem_swap[16'hE9D];
datamem_ext_i.datamem[13'hE9E] =
datamem_swap[16'hE9E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #438
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA4F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #438)");
    end
end

unit.assert_eq16(16'hA4F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #438 36864f0d-89c0-4934-871b-58c02eeeecd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #438 7e63de79-a1d5-4e2c-bcab-1cb621d2c462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #438 6a069a25-5b39-4ab7-9ce3-2b4ecccbd73a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #438 cf6cdbd5-47e7-46e8-b6bf-b061ef52c875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #438 038182ea-ecb2-4459-813e-1fb0c70daf0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #438 9165d5f5-d9da-4fc9-9bab-48103ab585bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #438 1d9e3462-1ee1-4096-a7f4-80df52800ef9)");

unit.assert_eq8(8'hF7, datamem_ext_i.datamem[13'h89A],
"EXT DMEM (Testcase #438 5e84523b-5ec7-40c2-b258-59814964d85a)");
unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'h89B],
"EXT DMEM (Testcase #438 50f32a54-b523-449a-95f0-e99689a9b800)");
datamem_ext_i.datamem[13'h89A] =
datamem_swap[16'h89A];
datamem_ext_i.datamem[13'h89B] =
datamem_swap[16'h89B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #439
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF4DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #439)");
    end
end

unit.assert_eq16(16'hF4DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #439 fd566279-bcc0-4a62-b8d7-773ef60d9536)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #439 6cf98ec1-fa24-46d7-b583-87176eb22855)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #439 3a91cedb-a2c2-4b2b-b271-245e87dbf979)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #439 32357b97-aafd-465c-a2f2-b8fac225d0c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #439 cd5fc530-ebec-43ab-a05e-633a9586c1fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #439 23396be6-4432-4774-af56-2067b8a81742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #439 ee96da6e-a400-4346-bf7e-0138c2ca9fa0)");

unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'h71D],
"EXT DMEM (Testcase #439 c7dcce53-7728-4240-9f41-403810d5e155)");
unit.assert_eq8(8'hF4, datamem_ext_i.datamem[13'h71E],
"EXT DMEM (Testcase #439 8a8b1745-61c0-4b04-bdaf-aeb48cee78ce)");
datamem_ext_i.datamem[13'h71D] =
datamem_swap[16'h71D];
datamem_ext_i.datamem[13'h71E] =
datamem_swap[16'h71E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #440
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0193;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #440)");
    end
end

unit.assert_eq16(16'h0193, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #440 6797a8a6-fc50-4ee5-bf54-c59febc033f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #440 9db60e56-dbb4-4210-b5b5-938641cee4e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #440 4eef8f06-2bdf-4038-866b-32e7687c2ea9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #440 f0d60b1e-afd7-4187-97e2-21b91085799b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #440 d2a4e9ed-e3cc-4219-acff-e3fce93317ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #440 799444cb-c109-4bba-85aa-1d31a6c9d462)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #440 4abc63a9-e52c-4605-a963-74e7c6eb73dd)");

unit.assert_eq8(8'h93, datamem_ext_i.datamem[13'h4EF],
"EXT DMEM (Testcase #440 d12460cb-be23-4f75-9b22-e89088ff2d28)");
unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'h4F0],
"EXT DMEM (Testcase #440 fb74476b-343b-48db-b2eb-06162c42ef62)");
datamem_ext_i.datamem[13'h4EF] =
datamem_swap[16'h4EF];
datamem_ext_i.datamem[13'h4F0] =
datamem_swap[16'h4F0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #441
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7C0E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #441)");
    end
end

unit.assert_eq16(16'h7C0E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #441 c791552b-be44-4906-a327-d4f12f6fa60d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #441 d902e73f-cac2-417d-8c40-8bff2261f7a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #441 beadd864-7e43-417d-86d3-d69a4c972cf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #441 6e50f551-0661-46df-873d-67b55beee04d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #441 cc655f7a-2898-4481-b92e-b797c12ad542)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #441 d27163d0-3a47-4552-83b6-b9fbd26b1da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #441 43fe7d29-8a1c-4f88-8efd-56cb94408263)");

unit.assert_eq8(8'h0E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h48],
"INT DMEM (Testcase #441 b05f2bd9-f1c7-489a-9056-c462f2acf837)");
unit.assert_eq8(8'h7C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h49],
"INT DMEM (Testcase #441 358806fb-f655-48e3-8eb5-2de7a0d06a41)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h48] =
datamem_swap[16'h48];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h49] =
datamem_swap[16'h49];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #442
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF67;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #442)");
    end
end

unit.assert_eq16(16'hBF67, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #442 3128e071-2d31-4e8a-b247-ce8690810501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #442 c6934ceb-f074-4c94-9d06-b16c5ea0dd3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #442 f18ceb2b-0169-4ba1-bb29-33c369c2e706)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #442 dcdda2ea-fe8b-44cf-8925-d5fe0ca27891)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #442 0b81d378-f240-4473-815d-0c57eacf5f09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #442 37876cef-81c8-4c77-8223-00bef9c5d90b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #442 8f9f09be-15c9-4fcc-9a17-50e4b97a4213)");

unit.assert_eq8(8'h67, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA1],
"INT DMEM (Testcase #442 ea193c0c-b3d6-49cb-b9ec-151780ba65ff)");
unit.assert_eq8(8'hBF, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA2],
"INT DMEM (Testcase #442 4e33db0b-3c84-4995-bdc4-05b5ca13e2bc)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA1] =
datamem_swap[16'hA1];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hA2] =
datamem_swap[16'hA2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #443
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5707;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #443)");
    end
end

unit.assert_eq16(16'h5707, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #443 b37102cb-433d-40fa-bf98-298bfc6abbd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #443 9207345a-463b-42b9-a22d-d3edb6797015)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #443 a3427909-aadc-49f3-91f6-385106c30b90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #443 014108e5-c33f-4b82-b562-008ea9f805c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #443 9080fa31-a678-46a2-81c9-c3b72c9028ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #443 16e74aa2-b46b-4555-a13a-aa3b8397bade)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #443 93b20e08-0880-47c0-b0b3-23dc5ab04429)");

unit.assert_eq8(8'h07, datamem_ext_i.datamem[13'hC5F],
"EXT DMEM (Testcase #443 2714958d-fb12-4453-a099-05a16ce7e7a3)");
unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'hC60],
"EXT DMEM (Testcase #443 98b2fbaf-7fe8-47c6-aab0-b891a69ef233)");
datamem_ext_i.datamem[13'hC5F] =
datamem_swap[16'hC5F];
datamem_ext_i.datamem[13'hC60] =
datamem_swap[16'hC60];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #444
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEFA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #444)");
    end
end

unit.assert_eq16(16'hEFA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #444 a03f59c9-da0d-4dac-addc-67360615b07e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #444 7d84035a-eec2-4d25-ae9b-c62f78efcc91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #444 8805e486-f2fa-4685-916e-d03b72375414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #444 bf9128c4-1b48-43b6-a8ab-2f99ad1837f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #444 8f2bc85f-040d-4e78-923b-f82e7dfc82f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #444 2354ba58-2074-43d9-afc6-c3412476bd71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #444 078c96a5-9f05-4bd2-9556-79a51d6eb4a7)");

unit.assert_eq8(8'hA4, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h17],
"INT DMEM (Testcase #444 5fd4a33a-8b47-4eff-9532-706593bfe3b9)");
unit.assert_eq8(8'hEF, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h18],
"INT DMEM (Testcase #444 e8e561d5-f37b-4015-b276-3a94e7f17de5)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h17] =
datamem_swap[16'h17];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h18] =
datamem_swap[16'h18];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #445
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7BC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #445)");
    end
end

unit.assert_eq16(16'h7BC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #445 ae08cacf-edcd-4bc5-a5dd-ae2c99cba6ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #445 6695f6f8-f129-454b-b15d-53860d4cd51b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #445 b017fcb3-ba17-4a42-a5bd-070c530a106d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #445 2362363c-547f-420e-a934-632755c421dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #445 3dde3f51-9cfa-46ca-8587-df0ef776d307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #445 471920ab-8a3d-433a-8dd7-047a51bf49a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #445 6d1da9c0-acec-4b24-833d-d96fb70ab505)");

unit.assert_eq8(8'hC8, datamem_ext_i.datamem[13'h6D4],
"EXT DMEM (Testcase #445 f2c1a03f-9b55-49fe-b7e1-1052d285332c)");
unit.assert_eq8(8'h7B, datamem_ext_i.datamem[13'h6D5],
"EXT DMEM (Testcase #445 fa42adb6-0b7f-494c-bd0e-72b967a501c6)");
datamem_ext_i.datamem[13'h6D4] =
datamem_swap[16'h6D4];
datamem_ext_i.datamem[13'h6D5] =
datamem_swap[16'h6D5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #446
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4912;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #446)");
    end
end

unit.assert_eq16(16'h4912, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #446 a553ead3-e43f-4cda-88a6-432615f7bf3e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #446 4c949809-0efe-4bfb-99b3-36acd64e729c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #446 639ae23f-2789-4b31-924f-1fb78572163f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #446 ca341c50-e70f-4586-9982-b745394e6685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #446 e0050eba-846e-44b2-a1cb-ab7ac089b9f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #446 59c4e641-bf66-4d0f-ab1f-13a8a0886ce4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #446 db2f260e-e71f-478b-9c27-ed4274214227)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h5A3],
"EXT DMEM (Testcase #446 1421b8b4-92ca-4528-a13a-663612b7b0aa)");
unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h5A4],
"EXT DMEM (Testcase #446 8440e281-f07f-43af-b9e1-90f61fcf9ead)");
datamem_ext_i.datamem[13'h5A3] =
datamem_swap[16'h5A3];
datamem_ext_i.datamem[13'h5A4] =
datamem_swap[16'h5A4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #447
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1729;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #447)");
    end
end

unit.assert_eq16(16'h1729, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #447 5b80aa3f-7c74-4c8b-aee5-f65169af021f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #447 e54288e5-21eb-49c2-9c6f-d632492cd203)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #447 e7736fde-3612-4310-988c-7864f4a42530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #447 c706fe5a-a3fc-415f-9bb5-f3a77037deed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #447 89e7c6c2-3c69-488b-9c01-f6780fd4cf5b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #447 3cfcf4af-5cad-4f6f-b493-a75e05717f44)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #447 a6f04878-1e0c-41bd-ac82-6aa0250ba155)");

unit.assert_eq8(8'h29, datamem_ext_i.datamem[13'h992],
"EXT DMEM (Testcase #447 c6443452-357a-426d-ab58-435f2f3441a2)");
unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'h993],
"EXT DMEM (Testcase #447 8258a0d8-b001-42e2-a974-fefe7e92cb09)");
datamem_ext_i.datamem[13'h992] =
datamem_swap[16'h992];
datamem_ext_i.datamem[13'h993] =
datamem_swap[16'h993];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #448
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3421;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #448)");
    end
end

unit.assert_eq16(16'h3421, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #448 fdc35006-c242-4cc5-a625-e8194fcdb26a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #448 e9449e57-574c-42ad-8e1b-20b57859b507)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #448 fe464530-9fa5-4b41-942e-b18dd117948c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #448 be9a5844-de04-4705-9efe-24981143d3bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #448 fb3d62ae-845a-4852-a409-e74ff9fd4fa3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #448 54cee3f0-a3ac-4aad-b4d7-550403aeeb5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #448 62442156-07d0-41fd-bb8c-c05438f44057)");

unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'hF42],
"EXT DMEM (Testcase #448 582dd953-c23b-4410-81a3-3a82c9823abb)");
unit.assert_eq8(8'h34, datamem_ext_i.datamem[13'hF43],
"EXT DMEM (Testcase #448 cc56d8d5-88c3-47c6-84bd-533ff6ae7551)");
datamem_ext_i.datamem[13'hF42] =
datamem_swap[16'hF42];
datamem_ext_i.datamem[13'hF43] =
datamem_swap[16'hF43];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #449
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0132;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #449)");
    end
end

unit.assert_eq16(16'h0132, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #449 4d9a5dcd-775b-4f66-847c-3070ca4ee21b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #449 05a39095-1cdb-48d4-b222-ef4780b2958e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #449 45a039d9-114f-43a2-9a90-02977f1a1e17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #449 42138dbb-24bf-4698-8de9-8c9e80207594)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #449 4d786261-34c0-4196-bd6e-c359ed2daecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #449 e4e8d5f8-c93b-47e5-9d57-ef083cf17da0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #449 22157d6b-aad2-4538-b85e-f19d6e74ffe4)");

unit.assert_eq8(8'h32, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h80],
"INT DMEM (Testcase #449 b1e53cea-2ece-4cd7-9f3b-fe1668110792)");
unit.assert_eq8(8'h01, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h81],
"INT DMEM (Testcase #449 b3358e04-921d-42a0-8df8-143cee833a24)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h80] =
datamem_swap[16'h180];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h81] =
datamem_swap[16'h181];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #450
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h57D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #450)");
    end
end

unit.assert_eq16(16'h57D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #450 edab39d5-4a95-4207-a95f-5241fa509219)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #450 792b2817-7090-4b03-b5cd-c982919e9af9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #450 c3d97cde-38c6-449e-99cf-199f8e5dbca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #450 1f875cdd-0d07-4fd8-93b4-1b1154a40dc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #450 41a4844f-73c0-488d-87b9-7534957337c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #450 337c7fdc-4916-4a6c-b883-f17a788fc9bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #450 b013cfdc-7730-40f3-993e-9988797ae558)");

unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h660],
"EXT DMEM (Testcase #450 fb94e777-21d7-4b72-9ba7-bd1c9b7f3231)");
unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'h661],
"EXT DMEM (Testcase #450 f232a325-977d-451c-b65d-b1b85fe4e523)");
datamem_ext_i.datamem[13'h660] =
datamem_swap[16'h660];
datamem_ext_i.datamem[13'h661] =
datamem_swap[16'h661];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #451
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h75B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #451)");
    end
end

unit.assert_eq16(16'h75B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #451 fe252472-8b9a-4700-ad75-ccea38850b33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #451 2e27a949-6970-4033-9741-e78b2330e725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #451 354044d6-cdd6-4160-90e4-c8c93caedf34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #451 08ca7793-eef5-4adb-b29d-ff731ed3413f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #451 16d456a4-f59e-480e-9724-e4472e769c63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #451 bd5df15c-bfdf-4965-8296-0cd65b1f6ec8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #451 3752ea1e-d52e-4263-bf12-83e8c91f679c)");

unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'h6A9],
"EXT DMEM (Testcase #451 f6963a06-f0cb-4f83-8e71-000429d91862)");
unit.assert_eq8(8'h75, datamem_ext_i.datamem[13'h6AA],
"EXT DMEM (Testcase #451 4e3a0b19-9f4d-47d8-9b30-eaa94c9babeb)");
datamem_ext_i.datamem[13'h6A9] =
datamem_swap[16'h6A9];
datamem_ext_i.datamem[13'h6AA] =
datamem_swap[16'h6AA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #452
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF310;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #452)");
    end
end

unit.assert_eq16(16'hF310, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #452 dd18a9af-1bd4-4be6-b749-4a6383b1b543)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #452 17ea559b-9991-4360-8861-46b58c556972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #452 b689c6c2-5736-48cb-9d85-e762c0026ebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #452 706c8f35-8032-4bf3-a9a6-87db87d182ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #452 5c120ec1-f4af-4721-94cb-57fdb373d777)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #452 51fd0b9e-e2f1-423e-b106-04edc23d8296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #452 a775d604-1b22-44ba-8a6e-352671322426)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'h4FE],
"EXT DMEM (Testcase #452 39836c68-821f-46b0-8fcf-4ed6846ccc60)");
unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'h4FF],
"EXT DMEM (Testcase #452 01c40ca5-8365-4d40-997b-47253b9faad0)");
datamem_ext_i.datamem[13'h4FE] =
datamem_swap[16'h4FE];
datamem_ext_i.datamem[13'h4FF] =
datamem_swap[16'h4FF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #453
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8D2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #453)");
    end
end

unit.assert_eq16(16'h8D2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #453 08a523eb-40fa-40d5-80fa-11beb4d85f64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #453 a73b473c-255a-49e8-947f-08b4d2744ad6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #453 58af44f3-7a03-474f-8acb-d39dab374fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #453 fe0a0416-83c0-4cbc-ae71-023b4f042114)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #453 a4144401-06b6-48b6-8b3f-75a926069a4c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #453 a2a1a73b-ad0d-4488-95eb-29e89f908304)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #453 65c1e2ab-7fe7-42a6-82d6-bb7818a18ef7)");

unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'hBEF],
"EXT DMEM (Testcase #453 74de32f0-39f1-4aa7-a58e-cc4fa3649ae1)");
unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'hBF0],
"EXT DMEM (Testcase #453 8eac3384-6bd9-414b-8146-0de93553af2a)");
datamem_ext_i.datamem[13'hBEF] =
datamem_swap[16'hBEF];
datamem_ext_i.datamem[13'hBF0] =
datamem_swap[16'hBF0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #454
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEC94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #454)");
    end
end

unit.assert_eq16(16'hEC94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #454 3baa2b24-6fcd-4622-90f1-f14ab0cba90f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #454 6f8c6c69-95a4-41f0-9460-0b1408848a57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #454 eca7520f-a3c5-41ad-881f-596d97cf5198)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #454 2e753198-693e-41a7-a643-bb63bde3a9ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #454 b7372a44-6841-4f29-b58a-1dc56e65c108)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #454 683193f1-77b8-41d0-a838-3869f5fcc69a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #454 509d3973-1f79-4d33-bc13-bff56e268b77)");

unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'hC5C],
"EXT DMEM (Testcase #454 bf946e9e-4072-412b-9a05-865f4053cb78)");
unit.assert_eq8(8'hEC, datamem_ext_i.datamem[13'hC5D],
"EXT DMEM (Testcase #454 983c852e-60fd-4a1f-8184-42e87bffebb7)");
datamem_ext_i.datamem[13'hC5C] =
datamem_swap[16'hC5C];
datamem_ext_i.datamem[13'hC5D] =
datamem_swap[16'hC5D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #455
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF48C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #455)");
    end
end

unit.assert_eq16(16'hF48C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #455 a4616661-5082-436c-8750-4393e3c6e5ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #455 cee9a860-0a22-4d3d-b827-0b5213570574)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #455 be908532-c9bd-4b5c-ab72-241e367db088)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #455 981d84e7-ceeb-452d-8abb-0fe102a4535e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #455 917cc0b8-4241-42e7-9b7a-3b69d5ad8669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #455 354aa41d-1ef1-4e19-81de-2856b790b42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #455 188af1ca-feff-4cf5-9c7f-4765c8254d40)");

unit.assert_eq8(8'h8C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h06],
"INT DMEM (Testcase #455 1995f1ea-f59c-4b77-8a08-9e8990923444)");
unit.assert_eq8(8'hF4, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h07],
"INT DMEM (Testcase #455 88f43975-f621-45b1-8f3e-ab5784db235b)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h06] =
datamem_swap[16'h106];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h07] =
datamem_swap[16'h107];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #456
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9A37;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #456)");
    end
end

unit.assert_eq16(16'h9A37, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #456 4a2c77b5-8316-418b-bc4a-b1eea2526980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #456 8a10297f-ac46-4186-87e6-c0ab1a848ff4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #456 08c9f138-affb-4e83-adb3-3a231b1c9472)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #456 ef7068cf-da4c-4dc9-84b7-559c337f36bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #456 6bde307a-db63-469f-9fae-d1cfffe37b19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #456 31125c53-4fa0-4d45-82ec-d70f75ea5b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #456 6033d7bd-bf3d-4a99-880d-54694308e287)");

unit.assert_eq8(8'h37, datamem_ext_i.datamem[13'hF47],
"EXT DMEM (Testcase #456 ee34fe0d-c409-4d22-8f30-585ff07d824a)");
unit.assert_eq8(8'h9A, datamem_ext_i.datamem[13'hF48],
"EXT DMEM (Testcase #456 bb5227f8-1ac5-43f0-be3c-9980c23da944)");
datamem_ext_i.datamem[13'hF47] =
datamem_swap[16'hF47];
datamem_ext_i.datamem[13'hF48] =
datamem_swap[16'hF48];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #457
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h67D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #457)");
    end
end

unit.assert_eq16(16'h67D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #457 987be23c-ceac-4079-a633-725bbf36c0ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #457 2f7e76c2-bd53-4bce-a19e-9d6177a73952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #457 8b60bd70-5882-469f-85f8-66b38950ba41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #457 b0bee286-91a1-4275-b97d-d8cce7852141)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #457 a691b7ba-c5ed-43d3-857d-8cc84d47ea5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #457 6e2daf2c-08d4-40d9-933c-1f70358b443a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #457 bde820a5-2aa2-4242-948f-71853a4f23e1)");

unit.assert_eq8(8'hD3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF9],
"INT DMEM (Testcase #457 b2743546-244a-4458-aaa6-24e9bd732fbc)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hFA],
"INT DMEM (Testcase #457 c21125e5-5e05-442a-b734-da09b4c20649)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF9] =
datamem_swap[16'hF9];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hFA] =
datamem_swap[16'hFA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #458
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8331;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #458)");
    end
end

unit.assert_eq16(16'h8331, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #458 b5c4aa2d-ef83-4f0d-9c1b-55ae1ea7cad2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #458 54ba838b-b024-42cc-b0fa-a4b9d8a720a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #458 24fcb0ba-6d5c-42ed-81f5-7f70e93d1847)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #458 7bdfe19a-da8b-4dba-bc73-6bc5f65aac5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #458 640589af-11e3-434e-aeb4-154095231a40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #458 2ecab832-da00-4644-bb32-f1c29b4142ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #458 41841c58-7e9f-40e5-bad8-e1a901783d77)");

unit.assert_eq8(8'h31, datamem_ext_i.datamem[13'h776],
"EXT DMEM (Testcase #458 febc0d23-1280-41e8-a664-f13f3e5b51eb)");
unit.assert_eq8(8'h83, datamem_ext_i.datamem[13'h777],
"EXT DMEM (Testcase #458 3efea222-1167-46f4-afa1-50eb7475da01)");
datamem_ext_i.datamem[13'h776] =
datamem_swap[16'h776];
datamem_ext_i.datamem[13'h777] =
datamem_swap[16'h777];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #459
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC87A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #459)");
    end
end

unit.assert_eq16(16'hC87A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #459 1c01d3f8-d508-4157-9949-0111dde31b9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #459 f40c3001-e38f-44f3-b6a8-25d555a86a12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #459 905ccc56-98e7-408e-8e62-ad9978de6a98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #459 e427f00f-7c94-4130-aaac-f9734100f85d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #459 f80b9790-4d07-49d7-8228-8e7274943d22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #459 acf5f087-6456-4432-88bf-9e103b6450dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #459 8732704e-5c14-4c45-97b8-36c847afa1d7)");

unit.assert_eq8(8'h7A, datamem_ext_i.datamem[13'hA44],
"EXT DMEM (Testcase #459 c1ca79a9-2b3f-4572-a5de-af21c8d5fe65)");
unit.assert_eq8(8'hC8, datamem_ext_i.datamem[13'hA45],
"EXT DMEM (Testcase #459 02506a98-569f-4979-9406-1b9bd84c9651)");
datamem_ext_i.datamem[13'hA44] =
datamem_swap[16'hA44];
datamem_ext_i.datamem[13'hA45] =
datamem_swap[16'hA45];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #460
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h01D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #460)");
    end
end

unit.assert_eq16(16'h01D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #460 04fff333-092c-4723-b92b-46647c7f291b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #460 80f162ca-4c18-4256-8cc8-f52669ec3500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #460 9afbcb12-cba9-4f05-bc93-efc1e36bc8a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #460 381eb4f0-3e0d-428b-bff5-becc61dca3ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #460 9e483df4-c69a-459a-bf0f-96dbab9012dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #460 d5c8c380-bd7d-4db1-81ad-367eda13514b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #460 97605305-1a82-4eff-b4b9-39d3591da0a7)");

unit.assert_eq8(8'hD7, datamem_ext_i.datamem[13'h498],
"EXT DMEM (Testcase #460 1e056333-688e-4297-a5cf-cf83f3e22519)");
unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'h499],
"EXT DMEM (Testcase #460 ae63d0db-4bb2-42f5-a14d-32f30eb15788)");
datamem_ext_i.datamem[13'h498] =
datamem_swap[16'h498];
datamem_ext_i.datamem[13'h499] =
datamem_swap[16'h499];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #461
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE3FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #461)");
    end
end

unit.assert_eq16(16'hE3FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #461 2c470d04-2360-41f2-9469-1bb21ef56314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #461 13a52f72-88a7-4b93-917a-aec141298036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #461 70667590-0e26-4765-9573-a6be5083f865)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #461 ca8111af-bfda-469e-93be-96af55a05038)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #461 02d43805-b483-496e-ba83-9f559d9885dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #461 45e5f7f4-b701-4880-966b-fd687b4eb817)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #461 b44b07ff-2279-4a2e-a730-ff6fb522fcdd)");

unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'h9AE],
"EXT DMEM (Testcase #461 24edb898-acd4-4e5c-a6b6-547c09fc6313)");
unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'h9AF],
"EXT DMEM (Testcase #461 725cacd0-72af-45f6-9b18-1bdd31279e74)");
datamem_ext_i.datamem[13'h9AE] =
datamem_swap[16'h9AE];
datamem_ext_i.datamem[13'h9AF] =
datamem_swap[16'h9AF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #462
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6274;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #462)");
    end
end

unit.assert_eq16(16'h6274, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #462 c8368682-b48a-47ad-adb8-23722a0d80aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #462 6a8bcce9-8806-4e5e-babd-d69c9e138a99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #462 9e2b4209-9dd2-4674-9b30-7e75e81bc9ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #462 a508692a-fd2d-4fe2-8f03-95d84266d494)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #462 c47dda6d-1e82-4176-be2f-23bd1fb3e509)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #462 8e52abaf-13ce-41c4-b5eb-2757214ffa5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #462 6e87c33e-9e9a-44e7-94c9-6e23b9c55e45)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'hC3E],
"EXT DMEM (Testcase #462 ba46de7c-f05d-4ff0-8e21-2d17f0d2c436)");
unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'hC3F],
"EXT DMEM (Testcase #462 8304bc2e-31b6-4254-a3a6-1955aa81b5c9)");
datamem_ext_i.datamem[13'hC3E] =
datamem_swap[16'hC3E];
datamem_ext_i.datamem[13'hC3F] =
datamem_swap[16'hC3F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #463
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE1B7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #463)");
    end
end

unit.assert_eq16(16'hE1B7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #463 ab068d29-301f-4f38-8b25-23e0ae01f8c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #463 05c98b63-c1b1-4ee3-8246-670c2daa1c6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #463 6ec66c90-6492-4edf-bc13-858a159ecc86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #463 0ad1678b-3f48-4ef3-aecb-c879fb9ad926)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #463 7f9ac291-7fe3-41b2-966e-49db5b3b7e80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #463 a520370d-43ce-44ac-adad-d931f57d9a0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #463 c6c3aff3-1be0-4eb5-893d-3ff9f1b48290)");

unit.assert_eq8(8'hB7, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF4],
"INT DMEM (Testcase #463 a0f7a5c6-5093-49a0-9281-05070991a8a4)");
unit.assert_eq8(8'hE1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF5],
"INT DMEM (Testcase #463 4826946a-b418-4a75-992c-113f484304e0)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF4] =
datamem_swap[16'h1F4];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF5] =
datamem_swap[16'h1F5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #464
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #464)");
    end
end

unit.assert_eq16(16'hFFFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #464 d3af0856-1d38-4099-824a-0be22634dde3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #464 7fbf114b-b15c-41d0-90e4-ae2c39b5a86b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #464 b805103d-f7b5-4e1e-af1e-2989d52c42cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #464 654f59da-cb8a-4737-ae53-fde93fff17cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #464 656b10f0-bbfb-41cb-a576-d5428bdc3749)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #464 d0c851f0-d42e-423c-b61c-07c1d5793cfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #464 c92f65b1-e250-4790-a9a0-7e4da03397f6)");

unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hA38],
"EXT DMEM (Testcase #464 741ead5d-8224-4cd7-84fa-b63e4f96d2a1)");
unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'hA39],
"EXT DMEM (Testcase #464 5adc51c7-1835-48f3-9366-0f32277b8bc8)");
datamem_ext_i.datamem[13'hA38] =
datamem_swap[16'hA38];
datamem_ext_i.datamem[13'hA39] =
datamem_swap[16'hA39];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #465
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h28DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #465)");
    end
end

unit.assert_eq16(16'h28DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #465 60242fe7-2d17-4c90-8bc2-34557cc0a747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #465 77e4ae13-93f8-4ad1-968f-ccdddda37695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #465 b023d8c2-c0a1-4071-9166-265a9f917930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #465 05381bc7-0ad4-420f-9911-0cf109478f11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #465 8e289134-58f1-4a89-8382-8806538ab003)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #465 13e7e3b9-bcbe-477d-b065-e98ef95899b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #465 98391e34-ff45-4db2-8082-8bc453094583)");

unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'hCFB],
"EXT DMEM (Testcase #465 8a49815d-26b0-4bbe-b4ef-4f7c7dd656d2)");
unit.assert_eq8(8'h28, datamem_ext_i.datamem[13'hCFC],
"EXT DMEM (Testcase #465 4f5693f2-1d2d-4c3b-b24c-e8dd4a4b81f5)");
datamem_ext_i.datamem[13'hCFB] =
datamem_swap[16'hCFB];
datamem_ext_i.datamem[13'hCFC] =
datamem_swap[16'hCFC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #466
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h179D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #466)");
    end
end

unit.assert_eq16(16'h179D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #466 a7d08c18-772c-475d-8400-eed0e880feb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #466 5747dd44-fc29-400e-9c5b-21a8362919de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #466 c53dac73-e240-44c5-a02c-8a2982058c77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #466 abccd74d-ec46-4c8a-a057-012ff6128b17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #466 7f40fd38-c313-4b55-b893-a105fdccec72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #466 f6ed8434-be41-452d-b6a9-c8e31324be32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #466 702559f2-2846-4566-9841-6b6e6534c81b)");

unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'hE89],
"EXT DMEM (Testcase #466 5b6b9db2-f9d9-4fd0-9293-c302096f0c56)");
unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'hE8A],
"EXT DMEM (Testcase #466 c2d1739a-c249-449a-903b-c8d0956b6b10)");
datamem_ext_i.datamem[13'hE89] =
datamem_swap[16'hE89];
datamem_ext_i.datamem[13'hE8A] =
datamem_swap[16'hE8A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #467
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC016;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #467)");
    end
end

unit.assert_eq16(16'hC016, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #467 e00038ec-b550-4217-a0be-8dcce69bc606)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #467 6ab9dd91-b039-41de-aa20-cd2f9e512bf3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #467 042fe79b-2ffa-4c10-8859-16e8494f9f0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #467 12ecbf4e-35b8-496e-aaea-0bb4e9a31e16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #467 da49320e-17ee-4f69-8ff6-185816e82e51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #467 8fb5462e-1d01-4872-8b5e-e5e6a0650e9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #467 9d5e208e-1e87-4443-a922-fe7437e31eb3)");

unit.assert_eq8(8'h16, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6D],
"INT DMEM (Testcase #467 0a14d4ff-5f7f-45a2-acf1-2223fe6711c4)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6E],
"INT DMEM (Testcase #467 81532dba-fe08-45e9-9b77-04b9116feb4e)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6D] =
datamem_swap[16'h6D];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h6E] =
datamem_swap[16'h6E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #468
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC985;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #468)");
    end
end

unit.assert_eq16(16'hC985, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #468 2a0a2dfe-5467-46f1-9b3a-f9e1a1796ce7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #468 bb3f2211-a40e-4dcd-8e58-d28cdd4e3cd6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #468 09a46142-8fd8-435b-937a-3e6ef5d2f3ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #468 f3dd723b-c89b-4b04-a6e8-e6da1c64617b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #468 17686655-75ec-426c-9d96-23d130f91515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #468 97dc6f5c-cba9-45d1-a686-68a2cec464de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #468 d8a8d5ac-4634-4b30-bc87-948a674ae7df)");

unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'h948],
"EXT DMEM (Testcase #468 a7817e3d-572f-4e86-8fd7-c73e21b96d04)");
unit.assert_eq8(8'hC9, datamem_ext_i.datamem[13'h949],
"EXT DMEM (Testcase #468 387cb5df-2208-450d-b79d-35224c3f4c09)");
datamem_ext_i.datamem[13'h948] =
datamem_swap[16'h948];
datamem_ext_i.datamem[13'h949] =
datamem_swap[16'h949];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #469
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2AC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #469)");
    end
end

unit.assert_eq16(16'h2AC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #469 1602d0af-25d1-4e58-b728-7c8d1bbea502)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #469 dec31e4f-cd7e-4076-ba4f-6929a32ae41c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #469 9477caab-eaf5-4c81-9206-2f79fc5c833d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #469 84374ce8-048f-4930-8a79-d02b946a6628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #469 0db255bc-0030-411e-a507-088a8981207a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #469 40106e20-c5a0-44c5-9859-1ce526172ef2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #469 d15ab9ad-c288-4c73-80d1-b67b92e94210)");

unit.assert_eq8(8'hC1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h03],
"INT DMEM (Testcase #469 10999672-f793-4823-8754-b00b760e1fd9)");
unit.assert_eq8(8'h2A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h04],
"INT DMEM (Testcase #469 6d931cfe-30e0-40da-b36c-16c7bae4d0f4)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h03] =
datamem_swap[16'h03];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h04] =
datamem_swap[16'h04];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #470
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #470)");
    end
end

unit.assert_eq16(16'hAC86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #470 997cdddb-03e8-4404-b19d-6ba0ea39f885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #470 200f0a30-846c-432f-9bec-945cd62d9f86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #470 f98f6fdc-0136-4f5f-bdf7-4bb88c66bcfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #470 29559986-6061-4092-afa6-96e434fb588e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #470 35e4c51a-1cf2-4979-b93f-94f30524a94a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #470 72827f7b-d5e0-4a07-aff0-589cdf5ccaa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #470 64fea2b6-562e-4f21-97a0-641997abd7d3)");

unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'h704],
"EXT DMEM (Testcase #470 33a611d3-c8a8-4388-8c8b-389154ad3206)");
unit.assert_eq8(8'hAC, datamem_ext_i.datamem[13'h705],
"EXT DMEM (Testcase #470 bbd62e74-9395-473c-9b2a-eda9329f7671)");
datamem_ext_i.datamem[13'h704] =
datamem_swap[16'h704];
datamem_ext_i.datamem[13'h705] =
datamem_swap[16'h705];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #471
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h80A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #471)");
    end
end

unit.assert_eq16(16'h80A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #471 a88371e1-242a-42ab-9994-19181e476527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #471 8758e5c6-e9ae-45f3-851a-68e55ae8c1b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #471 27f6dae1-a44d-46ec-9f71-ba87cb0d0ad1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #471 eab418e6-b995-4c82-a0c3-ee16e46c8d5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #471 466f6112-4c3f-4460-8778-51496db64e8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #471 b61d81ad-ac2e-4968-a3fa-f8ecc9ca9344)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #471 4d176b43-9009-4bd4-9dad-0fc31b5decd5)");

unit.assert_eq8(8'hA3, datamem_ext_i.datamem[13'hE98],
"EXT DMEM (Testcase #471 5cc2de91-e0ea-48d6-b8c4-065091255186)");
unit.assert_eq8(8'h80, datamem_ext_i.datamem[13'hE99],
"EXT DMEM (Testcase #471 a69eb8f5-61da-4838-b65a-d53329ac8ad4)");
datamem_ext_i.datamem[13'hE98] =
datamem_swap[16'hE98];
datamem_ext_i.datamem[13'hE99] =
datamem_swap[16'hE99];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #472
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D1D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #472)");
    end
end

unit.assert_eq16(16'h4D1D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #472 7247b954-fa6e-4bec-a463-40b36d39c9bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #472 63237f01-d245-4e18-96a9-c7196d1637bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #472 dc1c346e-47c7-4767-a746-ff35c14b94df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #472 6c5af28b-6371-4751-a5c7-b522696d6188)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #472 34f44833-4dc6-4e7d-86c3-efc7972651df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #472 ba4690de-5e90-400c-af47-88c20afd3611)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #472 d4c7db05-f08e-4b92-8092-d2253507f43b)");

unit.assert_eq8(8'h1D, datamem_ext_i.datamem[13'hD11],
"EXT DMEM (Testcase #472 e0af970b-a6af-4c7e-b526-90b898a2cc86)");
unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'hD12],
"EXT DMEM (Testcase #472 23f43a6a-6131-4268-864f-f9d01503c728)");
datamem_ext_i.datamem[13'hD11] =
datamem_swap[16'hD11];
datamem_ext_i.datamem[13'hD12] =
datamem_swap[16'hD12];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #473
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h30E6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #473)");
    end
end

unit.assert_eq16(16'h30E6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #473 feefc8c8-f986-45fe-8f28-568c5384bd39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #473 a9e66047-c024-4bd2-901a-769890f27294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #473 7b707454-cfc6-47dc-a647-98695ea7062d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #473 2f258287-170c-4f46-904c-a4be2225eacc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #473 ca5b2166-90e2-4e07-a15a-27beaf71a735)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #473 36011eba-b891-4a5f-81ac-56a107178ec1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #473 5d6bf0ce-c873-4e27-a007-bbb17ac1db06)");

unit.assert_eq8(8'hE6, datamem_ext_i.datamem[13'h5FB],
"EXT DMEM (Testcase #473 8b078e25-e877-4ed3-b56b-735f3707c1fc)");
unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'h5FC],
"EXT DMEM (Testcase #473 42c7da09-f523-4a08-9411-ad2ca3b27925)");
datamem_ext_i.datamem[13'h5FB] =
datamem_swap[16'h5FB];
datamem_ext_i.datamem[13'h5FC] =
datamem_swap[16'h5FC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #474
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h578D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #474)");
    end
end

unit.assert_eq16(16'h578D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #474 951d3f83-d390-4873-941f-cf70fd2c462f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #474 a6cc3b31-1f2e-43be-a927-ca6376851b1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #474 c82656b9-dcd3-4ea1-b814-ad7dc7d318cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #474 14fd1ebc-632f-4c01-9300-9f242ab61dad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #474 65ee8321-38d3-4fb6-8bba-0557ccb43b4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #474 da81139e-ebb0-4857-91f5-8b02a69e05ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #474 80a82741-f998-45f2-805a-64c9e19b2676)");

unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'hC82],
"EXT DMEM (Testcase #474 e664a465-40ac-4899-b528-cac53f22b047)");
unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'hC83],
"EXT DMEM (Testcase #474 b5609eb6-807b-4c0d-a1c3-4e3357a7b843)");
datamem_ext_i.datamem[13'hC82] =
datamem_swap[16'hC82];
datamem_ext_i.datamem[13'hC83] =
datamem_swap[16'hC83];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #475
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4185;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #475)");
    end
end

unit.assert_eq16(16'h4185, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #475 bc033b8e-43e6-47cf-8d83-a9c1f00edd3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #475 b290dce1-a6ba-4183-9762-dc2d733be3c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #475 6ece2e5e-d67b-4515-a693-0af015c2b297)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #475 e2cb8f93-0420-4dbf-b886-179c48254447)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #475 af6af246-8b6c-4076-9f88-61de9396d187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #475 37fa30fe-a343-4c3f-ad57-ebad7c3bc984)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #475 996b3551-112b-4a8d-ae56-0da6a07d883c)");

unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'h640],
"EXT DMEM (Testcase #475 d44fa0c7-18da-49d1-bdc2-0d31bdbff775)");
unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'h641],
"EXT DMEM (Testcase #475 e5908e4d-8ef7-4015-a8a9-62be65d7c3ca)");
datamem_ext_i.datamem[13'h640] =
datamem_swap[16'h640];
datamem_ext_i.datamem[13'h641] =
datamem_swap[16'h641];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #476
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h220C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #476)");
    end
end

unit.assert_eq16(16'h220C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #476 217b18e4-f3a7-4a02-a667-f23bad719a1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #476 4c8effe2-34d8-4af9-ac57-b28a58441506)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #476 3d0ae0af-68f1-42d2-8109-9fcd1b18a24e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #476 baf01e5c-9920-403d-a0b2-2a4a9dab33c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #476 425e7c0a-c6fb-48a3-b77a-c3d5160fa78c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #476 2788f717-d313-4c4d-bc17-4829bb1242ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #476 643a6de7-14d4-4600-a331-9bc65978bfa3)");

unit.assert_eq8(8'h0C, datamem_ext_i.datamem[13'h8C2],
"EXT DMEM (Testcase #476 6082dae6-853a-40ec-8342-ff41c74df257)");
unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'h8C3],
"EXT DMEM (Testcase #476 f7c6f081-de18-4426-821c-064f971ce88a)");
datamem_ext_i.datamem[13'h8C2] =
datamem_swap[16'h8C2];
datamem_ext_i.datamem[13'h8C3] =
datamem_swap[16'h8C3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #477
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6781;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #477)");
    end
end

unit.assert_eq16(16'h6781, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #477 4dc737c4-3fdc-423b-b62a-7df489a7a41b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #477 1a7ad9b1-f357-4d6a-b657-432444a85acc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #477 53345725-7bbe-480c-8056-c4af497c6e65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #477 0a46af96-084c-4456-bc33-f06aa37646a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #477 4ad87677-d64f-4fb1-9209-628feaaa0902)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #477 6ac59d82-12fb-4a12-b6ac-62ca92b23ad0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #477 e137e9de-9c7d-438b-82f1-c92514305192)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'h36C],
"EXT DMEM (Testcase #477 e57d87c8-7751-4e33-b026-004cc43d9a94)");
unit.assert_eq8(8'h67, datamem_ext_i.datamem[13'h36D],
"EXT DMEM (Testcase #477 28b2ee5b-811d-4706-ab3a-9b2428031ce9)");
datamem_ext_i.datamem[13'h36C] =
datamem_swap[16'h36C];
datamem_ext_i.datamem[13'h36D] =
datamem_swap[16'h36D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #478
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC92D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #478)");
    end
end

unit.assert_eq16(16'hC92D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #478 28f9b2ed-e606-4379-b92d-401ed875298a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #478 d0a62ae8-03f4-4e30-a661-8369891f0f87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #478 fb76d25a-b91d-491c-832e-4b7cf32fe029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #478 a04b1ffb-e8e7-4257-8a6b-089fe3df3a01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #478 6a58fce3-005b-48e5-ba8e-282a3b7b75bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #478 c5741e81-189d-4eb3-90b8-44c7062333b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #478 bfa278d8-5111-4536-96ae-ee0935912f9a)");

unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'h652],
"EXT DMEM (Testcase #478 83b900b7-1584-44d2-9b01-5f5b0d028106)");
unit.assert_eq8(8'hC9, datamem_ext_i.datamem[13'h653],
"EXT DMEM (Testcase #478 05006730-e2cb-4646-a897-b84f472f0c08)");
datamem_ext_i.datamem[13'h652] =
datamem_swap[16'h652];
datamem_ext_i.datamem[13'h653] =
datamem_swap[16'h653];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #479
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDCED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #479)");
    end
end

unit.assert_eq16(16'hDCED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #479 012e888e-ce38-420c-b7a0-fcebe8bc2122)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #479 7d2ad4b0-aca1-4981-8775-53b6f95ac465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #479 91f66e8e-d7ae-4237-98b1-46b40dfdc626)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #479 e1a04d98-bcc7-417e-b3a1-5d67430b0a8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #479 6bd8f74e-8083-40c6-a6b7-e20dfdb6660a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #479 5e7bdb72-eeb5-45a5-95f5-3b044c1060fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #479 0385757c-8578-46cd-8ffa-98f3078ef414)");

unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'hA52],
"EXT DMEM (Testcase #479 bf10cf94-bf7f-42fa-ad70-d0c8664d1c78)");
unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'hA53],
"EXT DMEM (Testcase #479 0bf51dc3-08c3-4afd-ba18-3c916980820e)");
datamem_ext_i.datamem[13'hA52] =
datamem_swap[16'hA52];
datamem_ext_i.datamem[13'hA53] =
datamem_swap[16'hA53];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #480
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD382;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #480)");
    end
end

unit.assert_eq16(16'hD382, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #480 549d270e-c41d-4285-bd08-1a53c3d8b819)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #480 4ad18c2c-ceab-423e-8608-d6deb83c8f8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #480 0de2b8f7-ff66-4684-965a-f573e32398f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #480 dff7c049-3f93-4e64-837a-6e0cb980163c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #480 e3d1bc0e-d7e2-4324-95c4-dcc4b3a164d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #480 ca7e3178-129f-4bb9-be2d-94a8bbab5938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #480 f4f15473-cbfd-4c0a-8ec5-8d51298c108b)");

unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'hCC8],
"EXT DMEM (Testcase #480 762ec78e-67a2-4516-88f3-b27edd6bdf74)");
unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'hCC9],
"EXT DMEM (Testcase #480 eef1c733-f901-49fa-be85-c81171fd62b9)");
datamem_ext_i.datamem[13'hCC8] =
datamem_swap[16'hCC8];
datamem_ext_i.datamem[13'hCC9] =
datamem_swap[16'hCC9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #481
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC91D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #481)");
    end
end

unit.assert_eq16(16'hC91D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #481 fb240c73-32fe-40f8-bf65-7ccc0d56dac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #481 047db9bc-2e56-4041-94ca-8bcc7a1cca56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #481 c2618b87-4736-4c40-ab32-793dafe5b34b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #481 d565a9aa-cda9-4f98-8c9e-ddce8f40f14f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #481 2d2d08d7-d7dd-40a7-81cb-f8469d273414)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #481 71169390-b956-42e4-b254-98a6cc9c6100)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #481 693b3114-4e0b-4eb9-850c-1b2fbde4f617)");

unit.assert_eq8(8'h1D, datamem_ext_i.datamem[13'hC24],
"EXT DMEM (Testcase #481 a5d9467e-41e4-486b-9fc7-ce180a3bb900)");
unit.assert_eq8(8'hC9, datamem_ext_i.datamem[13'hC25],
"EXT DMEM (Testcase #481 86b758e0-a59d-47b6-aad5-6f4ca887478d)");
datamem_ext_i.datamem[13'hC24] =
datamem_swap[16'hC24];
datamem_ext_i.datamem[13'hC25] =
datamem_swap[16'hC25];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #482
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6E00;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #482)");
    end
end

unit.assert_eq16(16'h6E00, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #482 efc4aa3c-283a-474c-a9b5-ac040fcbed56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #482 a6c04566-5def-429c-bb88-628fbcc5f9ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #482 ab969009-2e6a-47a3-87f0-c34c87c7f004)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #482 cc970328-2b30-4859-ba76-3956fcf8579d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #482 22005632-2aa6-4020-872e-631b9731d57a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #482 dcd290c9-7c83-4799-9635-0990b3931dca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #482 e710ca48-7156-41d2-a8c3-e65b54c71208)");

unit.assert_eq8(8'h00, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hAE],
"INT DMEM (Testcase #482 1f5da4f2-0bd6-4b33-8bfe-1f8d8dc66d54)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hAF],
"INT DMEM (Testcase #482 79a0b1be-77f3-436e-891d-16baea5a1c42)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hAE] =
datamem_swap[16'h1AE];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hAF] =
datamem_swap[16'h1AF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #483
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h683A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #483)");
    end
end

unit.assert_eq16(16'h683A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #483 a0392a85-1cf6-4385-932b-855b8aaa6d14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #483 5c1fb105-1814-44e8-a313-32ac0b55e29a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #483 5a04c4d2-3214-4e6f-8c81-e1a1497cdb52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #483 75a72655-2056-4296-8083-37fb7de2b8d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #483 f88f4207-4bdd-4ece-ae66-ba2469ac4152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #483 6a2df12e-ca54-415f-84fc-996e79b9b7a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #483 bfb2f37a-0609-4602-90b2-d855d05a3e82)");

unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'h880],
"EXT DMEM (Testcase #483 f13daf2d-bd45-4827-985e-871bc99aff8e)");
unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'h881],
"EXT DMEM (Testcase #483 f1060b6f-e80a-498e-8833-764de2ae375c)");
datamem_ext_i.datamem[13'h880] =
datamem_swap[16'h880];
datamem_ext_i.datamem[13'h881] =
datamem_swap[16'h881];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #484
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAF78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #484)");
    end
end

unit.assert_eq16(16'hAF78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #484 eb0b7e5c-30c7-48df-91e9-550c51bda470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #484 bf847a7f-8539-430b-bb2c-0e837ba4af10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #484 c00737de-ad75-45a5-a93a-0e0177341c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #484 819d0926-cbe4-4cc2-981c-3522fd32e484)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #484 0481dbd0-341d-478b-b2c9-4539fd9e1432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #484 2b189bcf-158d-4cda-b4e3-d2ec8973acfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #484 a51e6aba-8255-4a1e-a03b-bd9d31d3de88)");

unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'hD37],
"EXT DMEM (Testcase #484 e25a16e6-318b-4b09-9ce9-6e537a4568de)");
unit.assert_eq8(8'hAF, datamem_ext_i.datamem[13'hD38],
"EXT DMEM (Testcase #484 55c8cb5c-7533-4c75-adcb-d59fa3e7ca0d)");
datamem_ext_i.datamem[13'hD37] =
datamem_swap[16'hD37];
datamem_ext_i.datamem[13'hD38] =
datamem_swap[16'hD38];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #485
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6308;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #485)");
    end
end

unit.assert_eq16(16'h6308, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #485 11713fba-8bcb-4bfb-9828-7d6c12a21cf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #485 65fb6113-f98e-44b1-b95f-a39ef2ddd78a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #485 cec57714-31bd-4fff-979b-3af9f30be257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #485 9b8e914a-326c-45f8-8ce5-305545329a07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #485 b841047a-aea1-4d04-8ddc-b26fea8c0750)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #485 06bb2a93-0eaf-48f5-b4c4-a3dee100aa2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #485 00d470c9-a739-4246-837a-b35558a70387)");

unit.assert_eq8(8'h08, datamem_ext_i.datamem[13'hDED],
"EXT DMEM (Testcase #485 686e05b3-f4cb-40de-af7d-9f7f67291819)");
unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'hDEE],
"EXT DMEM (Testcase #485 2047bf0d-ec9c-420e-a7e9-e845170990a7)");
datamem_ext_i.datamem[13'hDED] =
datamem_swap[16'hDED];
datamem_ext_i.datamem[13'hDEE] =
datamem_swap[16'hDEE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #486
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8D2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #486)");
    end
end

unit.assert_eq16(16'h8D2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #486 159a0b8d-f7bc-4bdc-813b-b2ed4c1332e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #486 3f19d5c0-05f7-4654-8f29-3a4ed9ae1e4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #486 4e89de76-dfc0-42b6-9c96-d27b3672a46a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #486 7e5fb0d7-4b2a-4255-93ec-15d982752160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #486 c1648816-0921-416d-9c4d-f1bc14533c80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #486 257107d8-a437-449b-96a1-9545d82366aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #486 77f6ee54-44fb-4e62-b757-3660454f673b)");

unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'h459],
"EXT DMEM (Testcase #486 b9b397d3-7014-44b3-bce0-6437857b42e4)");
unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'h45A],
"EXT DMEM (Testcase #486 e49c6e73-b826-407b-816c-6e043fd6686f)");
datamem_ext_i.datamem[13'h459] =
datamem_swap[16'h459];
datamem_ext_i.datamem[13'h45A] =
datamem_swap[16'h45A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #487
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD314;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #487)");
    end
end

unit.assert_eq16(16'hD314, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #487 2b54d48e-45e5-4fa6-b230-5d3f931b4b4a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #487 a4e20053-b136-436a-b22c-c8436dd46705)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #487 be301e5a-8cc0-4a37-96d4-c34ffb2b32bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #487 fbbf548c-9882-4f89-9dff-39f22a71eac0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #487 00546104-2b7c-45fc-a0c5-43c505a03b88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #487 8fb352fc-7e48-46d8-a774-8979ba78ba43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #487 59422e73-e45a-4c52-9298-6b0aea17bc79)");

unit.assert_eq8(8'h14, datamem_ext_i.datamem[13'h7B7],
"EXT DMEM (Testcase #487 90ca7762-d43b-42b3-87fb-7175fcb81405)");
unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h7B8],
"EXT DMEM (Testcase #487 f283bc7e-c2fa-433a-ba6c-d07b7ec25103)");
datamem_ext_i.datamem[13'h7B7] =
datamem_swap[16'h7B7];
datamem_ext_i.datamem[13'h7B8] =
datamem_swap[16'h7B8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #488
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5878;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #488)");
    end
end

unit.assert_eq16(16'h5878, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #488 d0f439f4-2fed-49de-b4d1-73904310f427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #488 7086202f-fb2a-4bd9-b525-b730ba4627fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #488 df7f18f1-31ef-4eca-9217-caec67ae9a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #488 0d90c39b-278e-42f4-826a-b1c0a87f0a37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #488 46c87382-82ea-4a3f-8743-133a83e88af9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #488 54225dc6-9810-4cc4-9afc-6d7decaf934b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #488 06d365f5-044b-47cb-a45c-163a0cf84e1d)");

unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'hB05],
"EXT DMEM (Testcase #488 e0f5f124-d65f-41dd-9a57-42740e7c0924)");
unit.assert_eq8(8'h58, datamem_ext_i.datamem[13'hB06],
"EXT DMEM (Testcase #488 cebc13d7-b464-4165-a02b-b581965921db)");
datamem_ext_i.datamem[13'hB05] =
datamem_swap[16'hB05];
datamem_ext_i.datamem[13'hB06] =
datamem_swap[16'hB06];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #489
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA76D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #489)");
    end
end

unit.assert_eq16(16'hA76D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #489 866383dc-78f6-48c5-9811-e848a6b2dbcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #489 c671a265-c435-4d7b-8802-bf5205037af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #489 fbc9f3ef-7bb5-44eb-974d-3da82d44a613)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #489 b2cd4598-c236-45b0-93f9-5b396a141c76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #489 923adb69-e2d3-4ba1-b4d9-a079885aa3a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #489 f0ca423f-95a3-46fa-9e1a-06714d6bc40a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #489 1dea0ec1-0b6b-4b6b-8dc0-e0ae8d166653)");

unit.assert_eq8(8'h6D, datamem_ext_i.datamem[13'h92F],
"EXT DMEM (Testcase #489 1495bda5-b68d-45f6-9862-7dedbaf372ca)");
unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'h930],
"EXT DMEM (Testcase #489 9ca9ffe3-fb79-4ec3-ac5d-207906cf35ad)");
datamem_ext_i.datamem[13'h92F] =
datamem_swap[16'h92F];
datamem_ext_i.datamem[13'h930] =
datamem_swap[16'h930];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #490
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2721;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #490)");
    end
end

unit.assert_eq16(16'h2721, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #490 f0386b97-9dfc-46e3-b3f7-5c669e999ca9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #490 0bdd67c7-617f-4cc4-8784-4eae7b070747)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #490 c45583cf-fe55-4e80-b85e-5bcf17885307)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #490 3861e3cd-c926-4416-9155-ef5eaa07d527)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #490 b93f1a43-66d8-4d14-90e7-bba612e313b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #490 e33c78b2-63d8-4b1a-b903-b1ec8697ad1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #490 fd7087fa-3cc0-4229-aab8-4e17aff8a7d7)");

unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'h4BE],
"EXT DMEM (Testcase #490 3f05c931-19e6-4207-8854-60a42ffec759)");
unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'h4BF],
"EXT DMEM (Testcase #490 1f6ca31b-4de3-4eaf-ab04-fe9b126de38a)");
datamem_ext_i.datamem[13'h4BE] =
datamem_swap[16'h4BE];
datamem_ext_i.datamem[13'h4BF] =
datamem_swap[16'h4BF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #491
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #491)");
    end
end

unit.assert_eq16(16'hC1C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #491 bcf3d74c-f140-4ded-9d64-178cead3c65c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #491 8f15e088-b6c9-421e-9d56-21f417eb60ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #491 0f4f2dfd-052e-4001-9d28-0dec1f44b914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #491 3627cb27-bed7-4742-bd42-1f95f6715103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #491 eb7a87bf-15ce-457a-aaf8-74d6dcdbac62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #491 68512fa4-9a47-49b6-80ec-1b6d71c6b787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #491 50523277-562c-4080-84ba-afc6d9a77936)");

unit.assert_eq8(8'hC7, datamem_ext_i.datamem[13'hFC3],
"EXT DMEM (Testcase #491 d97ada4c-53ec-4e8d-bff0-9dc297a3dc6b)");
unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'hFC4],
"EXT DMEM (Testcase #491 ebd9a0d4-688a-4676-b603-c4fe21d938c0)");
datamem_ext_i.datamem[13'hFC3] =
datamem_swap[16'hFC3];
datamem_ext_i.datamem[13'hFC4] =
datamem_swap[16'hFC4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #492
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1CB9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #492)");
    end
end

unit.assert_eq16(16'h1CB9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #492 8765d85e-b389-4047-b4e2-d4ff62990c30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #492 28a4c826-8be2-45ce-8f04-67121ec42a19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #492 a826bdd7-d9a9-46c0-8e0c-e7076028ab37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #492 02282418-ab80-4f02-807a-082b153fcfdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #492 1dedf78a-49bf-4520-887e-4a31a1dc7132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #492 481ce82f-80b8-4d68-98b4-5ef8ba5b4dc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #492 55e8f29a-9b67-42d0-9015-18317e2808d9)");

unit.assert_eq8(8'hB9, datamem_ext_i.datamem[13'hA5F],
"EXT DMEM (Testcase #492 e75dd9c4-d720-4d84-b25d-d1864a47c6d4)");
unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'hA60],
"EXT DMEM (Testcase #492 430d2410-025e-445e-b1a1-448bc2288b88)");
datamem_ext_i.datamem[13'hA5F] =
datamem_swap[16'hA5F];
datamem_ext_i.datamem[13'hA60] =
datamem_swap[16'hA60];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #493
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2BED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #493)");
    end
end

unit.assert_eq16(16'h2BED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #493 7beda543-d2ab-4f2a-a005-701019e0dd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #493 74b28f84-d8bb-4982-bc6a-0862c1ca7ce2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #493 46f25109-9139-459f-870f-9286bf6fbb31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #493 5f6ed4b6-4200-4b84-b8fc-c4ca54fbcf10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #493 cde7b1d0-b59a-4838-8fac-48375accf8cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #493 88320f4a-c720-43f9-91c9-c7d92340f092)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #493 cb8ad611-ff01-44d3-9881-7b31917954db)");

unit.assert_eq8(8'hED, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h75],
"INT DMEM (Testcase #493 56e13fb3-05c4-4782-8381-2c9594221f57)");
unit.assert_eq8(8'h2B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h76],
"INT DMEM (Testcase #493 f41bfb20-bb22-4f16-91ef-a93b7ad70d63)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h75] =
datamem_swap[16'h175];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h76] =
datamem_swap[16'h176];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #494
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h249F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #494)");
    end
end

unit.assert_eq16(16'h249F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #494 3700d6c7-369f-450c-80a2-e09cba7c5e1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #494 5edd9161-7a39-4009-9d42-42d6f59feb27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #494 5a1ea028-a04f-4fe4-8c76-fd69bf1b36c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #494 e48e1e4f-76dc-449f-8302-784b6f493d18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #494 360ca6b3-9b73-493e-bc42-050a79d67f53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #494 35f62fdd-df5d-40af-b3e2-11ca54e4471c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #494 0ff4958a-8dbd-4864-9527-50f5dffe225d)");

unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h5CA],
"EXT DMEM (Testcase #494 1f0b2c09-fefd-4ce8-a603-7a0c3227c0a7)");
unit.assert_eq8(8'h24, datamem_ext_i.datamem[13'h5CB],
"EXT DMEM (Testcase #494 90b9ef10-cbb8-4694-8d4c-2db6fff130e4)");
datamem_ext_i.datamem[13'h5CA] =
datamem_swap[16'h5CA];
datamem_ext_i.datamem[13'h5CB] =
datamem_swap[16'h5CB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #495
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD282;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #495)");
    end
end

unit.assert_eq16(16'hD282, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #495 c6843869-39cd-435e-ac38-f77810ccb787)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #495 2787a395-613a-442a-854e-67252034233b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #495 ec7f3e73-a17e-4cef-90e5-05c28696ae56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #495 0ba8b807-29d6-4187-a4a0-f57ed07eef6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #495 1498b6c2-b735-41b1-8c4e-0a7751057cb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #495 71b7262b-8e90-474e-b918-adffad3afae1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #495 ca0974d6-3b65-4db2-a858-f586f6e7a071)");

unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'h5B9],
"EXT DMEM (Testcase #495 8216cb3e-7609-4859-b1a9-06cb028b2816)");
unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h5BA],
"EXT DMEM (Testcase #495 b26daac9-9cc7-4e37-a588-55d23592f70e)");
datamem_ext_i.datamem[13'h5B9] =
datamem_swap[16'h5B9];
datamem_ext_i.datamem[13'h5BA] =
datamem_swap[16'h5BA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #496
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDA54;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #496)");
    end
end

unit.assert_eq16(16'hDA54, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #496 8c58c6fa-20cd-4cd9-b73b-cce089fe1e63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #496 1cf44e97-b1a9-44b0-bb7f-1a4d5ab345d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #496 a4847749-4449-4dba-a7e5-140bc6267e92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #496 554347f1-8839-433a-a859-f38b9ef139f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #496 4f5827ed-29cd-4566-abca-0f9c02ba15be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #496 a6de4818-fcf3-4374-a03f-6ad7e07f5c52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #496 db1ed1c1-201e-4d35-b7d6-347f16b6dea4)");

unit.assert_eq8(8'h54, datamem_ext_i.datamem[13'hABF],
"EXT DMEM (Testcase #496 d68251fb-feb8-49f4-b617-1176574f4085)");
unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'hAC0],
"EXT DMEM (Testcase #496 8916cf5f-79b8-4796-a31a-77b7191873ab)");
datamem_ext_i.datamem[13'hABF] =
datamem_swap[16'hABF];
datamem_ext_i.datamem[13'hAC0] =
datamem_swap[16'hAC0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #497
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A4D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #497)");
    end
end

unit.assert_eq16(16'h3A4D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #497 6d40b2de-8b8a-4c3f-ac08-1ddea51b7daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #497 c55e8624-e780-4313-a024-9ef1a0a704b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #497 402407a5-db74-4405-aea3-a27aca30cc39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #497 68ccaa5d-e525-4092-8aee-323e1f014ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #497 ef4c44ad-9dc3-4434-8a8b-c22044818dac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #497 94f3ce6b-22c7-4a6a-8c95-0b6cc0c3cf17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #497 671a5c5c-fa9d-4f35-af96-fb28e2aa0a41)");

unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'hDE3],
"EXT DMEM (Testcase #497 2d435193-8865-46cd-9587-6685af722b14)");
unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'hDE4],
"EXT DMEM (Testcase #497 8de338ca-0cc5-4a6d-a779-ae6fbb5788ac)");
datamem_ext_i.datamem[13'hDE3] =
datamem_swap[16'hDE3];
datamem_ext_i.datamem[13'hDE4] =
datamem_swap[16'hDE4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #498
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #498)");
    end
end

unit.assert_eq16(16'hB7F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #498 8d5f8e2a-20b3-4a02-930b-89dd8f521e8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #498 0e1ce3f9-4f82-4de7-9111-bc74a2866a11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #498 e8e88456-d881-49d7-935f-d87f9ee79c55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #498 b154eea8-5f06-445e-828e-0ce9d7b0bcd9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #498 153fc060-87d7-43f4-9411-fa4e9fd4900f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #498 d7a8a18e-5712-4ea7-b65c-e203777ca223)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #498 6566ddb4-dbb1-48cb-8dac-5973af2ecc85)");

unit.assert_eq8(8'hF9, datamem_ext_i.datamem[13'h9C0],
"EXT DMEM (Testcase #498 6f65cc57-ed3d-4c2f-8542-65ece45a3887)");
unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'h9C1],
"EXT DMEM (Testcase #498 30b3e04f-50d4-47af-974a-a229c626065a)");
datamem_ext_i.datamem[13'h9C0] =
datamem_swap[16'h9C0];
datamem_ext_i.datamem[13'h9C1] =
datamem_swap[16'h9C1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #499
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CC3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #499)");
    end
end

unit.assert_eq16(16'h5CC3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #499 90ec14cd-c000-49a1-af04-2be0f6e3ea92)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #499 961ef1fa-4c5a-4845-a5e2-87710361ff93)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #499 d28c27b3-ac35-4968-b0e7-42aaffa6e7a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #499 9a2411c3-9399-4133-be7a-e5bf29128dfd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #499 131a8372-1bea-4959-80e2-69319d2fcbc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #499 8776b694-f093-4f3e-8af4-98ca9ed233bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #499 c708a95f-e17e-49a9-8e57-86499948190e)");

unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'h86C],
"EXT DMEM (Testcase #499 c7db20f0-7056-4238-8b29-a83540de271f)");
unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'h86D],
"EXT DMEM (Testcase #499 4906ac7c-19b2-474e-94dc-a8b06e0a3b90)");
datamem_ext_i.datamem[13'h86C] =
datamem_swap[16'h86C];
datamem_ext_i.datamem[13'h86D] =
datamem_swap[16'h86D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #500
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h098F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #500)");
    end
end

unit.assert_eq16(16'h098F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #500 a4b4c3ec-b22e-4174-9248-81077de069c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #500 b65cd13d-847a-4226-ae16-3fbbf1bd4774)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #500 a9ba7fe8-068e-41c4-a162-d26c7340953e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #500 9c5aa537-a1b8-4388-b75f-925e641b7aa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #500 eb67ad16-4f22-478d-8ac9-f06507eb064b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #500 3eeb5b1a-daef-4d39-b97a-7a4606d42d76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #500 49a7a14f-17e8-42a2-913d-cc3cdd4d07ec)");

unit.assert_eq8(8'h8F, datamem_ext_i.datamem[13'h4C4],
"EXT DMEM (Testcase #500 0972372e-a379-4652-aedb-b5f5da259c14)");
unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'h4C5],
"EXT DMEM (Testcase #500 8fa94aa5-5269-4bc9-896a-7c76ccdb0ab6)");
datamem_ext_i.datamem[13'h4C4] =
datamem_swap[16'h4C4];
datamem_ext_i.datamem[13'h4C5] =
datamem_swap[16'h4C5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #501
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4E5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #501)");
    end
end

unit.assert_eq16(16'h4E5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #501 2e97cc2e-4d17-4582-bdf7-0e6065dd271c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #501 df624148-465f-485f-9f68-569ee5e2f148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #501 6b1dfa13-cf34-40e3-9fa4-0472981adde5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #501 f26b1294-6326-4d36-b047-dd8cd53c1ac4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #501 5cf55e24-a0dc-4e66-9be2-7f9136092ee1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #501 4f6595a0-e17d-49ce-9bae-c1c8fd458567)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #501 fd8764a2-601c-4b6b-a01b-aa1873d0a421)");

unit.assert_eq8(8'h5B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h48],
"INT DMEM (Testcase #501 a7a47bfc-62f2-4705-9bc7-613f063f5f40)");
unit.assert_eq8(8'h4E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h49],
"INT DMEM (Testcase #501 66f118e2-cd1f-4da4-9785-98791301d586)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h48] =
datamem_swap[16'h148];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h49] =
datamem_swap[16'h149];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #502
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0835;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #502)");
    end
end

unit.assert_eq16(16'h0835, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #502 151ae24b-a763-4877-a96d-fc477af58465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #502 5f54cefe-ad10-4b7e-a0f2-5c6d69821adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #502 7a466b2b-6e09-4eae-8e86-592c9366812a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #502 fd086277-262f-450c-b31b-d9eec98b62e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #502 688448c5-0ae9-4321-81e9-ab8d68233da2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #502 5db85f0c-60c7-443c-8d65-9146356efcfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #502 0de88946-e67b-4abd-a781-d820b6fc6278)");

unit.assert_eq8(8'h35, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h05],
"INT DMEM (Testcase #502 c5c26549-35d9-465a-aab8-543ce13862ee)");
unit.assert_eq8(8'h08, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h06],
"INT DMEM (Testcase #502 b8ff44d7-22d5-4197-bcde-549561021c9c)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h05] =
datamem_swap[16'h05];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h06] =
datamem_swap[16'h06];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #503
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEEC8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #503)");
    end
end

unit.assert_eq16(16'hEEC8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #503 5fdb982f-8e4e-4cbd-ab22-53e4348114f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #503 0acd5027-88fc-4e55-baeb-8763ea0324a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #503 891a36d0-5f88-4b83-95df-9bb34296338c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #503 9b8fe275-accd-4ef7-b2be-643e787411d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #503 48bdbe14-41c4-4287-b223-3ea5ee526ea2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #503 e1115f5a-9022-4622-a0b6-24e0a9c72b59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #503 d58f9fc9-23ca-4829-98d2-b62ddd32081e)");

unit.assert_eq8(8'hC8, datamem_ext_i.datamem[13'hC1A],
"EXT DMEM (Testcase #503 971ee174-1c87-4e68-9388-c1d3a930e429)");
unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'hC1B],
"EXT DMEM (Testcase #503 2936adb4-a8da-4350-bba0-7b0859089fa8)");
datamem_ext_i.datamem[13'hC1A] =
datamem_swap[16'hC1A];
datamem_ext_i.datamem[13'hC1B] =
datamem_swap[16'hC1B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #504
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h694D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #504)");
    end
end

unit.assert_eq16(16'h694D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #504 82a473a7-05c9-4f3d-8acb-34720f124b9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #504 3a18268f-8648-4b32-a08b-33d50934463d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #504 229e4202-b75c-468d-8fa7-b953d7648170)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #504 1a02d362-63a3-4dbf-963b-8c9ae0515b08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #504 34bcfbee-d2a7-4d28-a76f-6d6b239e309a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #504 1b7fc4c3-c56f-4d98-bd8c-d81f2080ae3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #504 c43d27e4-b44e-409e-9f60-a57aa0e6b81d)");

unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'hA8A],
"EXT DMEM (Testcase #504 773bd328-3d43-453f-86a4-d4daaa387597)");
unit.assert_eq8(8'h69, datamem_ext_i.datamem[13'hA8B],
"EXT DMEM (Testcase #504 0a7a51aa-8795-4be8-a078-0be7446c55b0)");
datamem_ext_i.datamem[13'hA8A] =
datamem_swap[16'hA8A];
datamem_ext_i.datamem[13'hA8B] =
datamem_swap[16'hA8B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #505
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #505)");
    end
end

unit.assert_eq16(16'h0C02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #505 e6de45b0-f061-4fef-b56b-2739393b5084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #505 346cbcf7-8945-4cbe-84f7-ea58a9ebc629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #505 ce3d97bd-9c74-4582-8756-ab68f40766e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #505 2696ecf7-144d-4b17-8ac7-65f7866c23ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #505 946ba6ee-ebf6-46b7-8e1f-c402454712cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #505 35dae6b9-b219-48bd-8206-f99820b73544)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #505 2550b49b-bbb2-412c-99a3-5b0a466423cd)");

unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'h2EF],
"EXT DMEM (Testcase #505 41acbb7a-feb3-4895-bc04-acb274cf257b)");
unit.assert_eq8(8'h0C, datamem_ext_i.datamem[13'h2F0],
"EXT DMEM (Testcase #505 12ad7dee-5cea-43cd-b5a6-3691cfd5fab9)");
datamem_ext_i.datamem[13'h2EF] =
datamem_swap[16'h2EF];
datamem_ext_i.datamem[13'h2F0] =
datamem_swap[16'h2F0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #506
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD30;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #506)");
    end
end

unit.assert_eq16(16'hFD30, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #506 5a398d01-47ff-469f-9f89-3ba3df80a7be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #506 00ba43d1-d493-4be3-8d3b-e1d25fd5fe0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #506 9785c49e-95b6-4164-b41b-2a8e1cf75939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #506 a86a4daa-04f2-4ad3-95b5-a27d5f3992b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #506 b2c77053-f62c-4835-a6e6-c30f23f40116)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #506 6e2a1e3a-95f8-4c32-8480-be366b68b0c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #506 f0914f8b-44dd-43e8-a30d-753b768353fc)");

unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'h294],
"EXT DMEM (Testcase #506 c21f050b-6c9b-4569-8ff4-16765e300849)");
unit.assert_eq8(8'hFD, datamem_ext_i.datamem[13'h295],
"EXT DMEM (Testcase #506 a026cf53-9d95-418e-9097-3821363b10db)");
datamem_ext_i.datamem[13'h294] =
datamem_swap[16'h294];
datamem_ext_i.datamem[13'h295] =
datamem_swap[16'h295];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #507
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7B6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #507)");
    end
end

unit.assert_eq16(16'h7B6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #507 4c603e86-95e4-4a92-a667-aa7aee3e8ba0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #507 fabeb83e-2aa5-499b-b3a9-ead41b08d90a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #507 46e48f28-e92c-43ac-b2e1-788e09083858)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #507 9961b501-5471-41fe-8608-5d5ab6b331bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #507 5d88bcab-778b-4303-9ee2-29b81fcd5682)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #507 e04af61e-e8ca-4ada-8af6-0733d4cdc3de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #507 2d34352f-0e2e-4530-91de-d792f28f6adf)");

unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h241],
"EXT DMEM (Testcase #507 fad0d449-1432-472a-bfc0-8107d20fb865)");
unit.assert_eq8(8'h7B, datamem_ext_i.datamem[13'h242],
"EXT DMEM (Testcase #507 537d444f-7e30-4028-b772-a913dcbc902d)");
datamem_ext_i.datamem[13'h241] =
datamem_swap[16'h241];
datamem_ext_i.datamem[13'h242] =
datamem_swap[16'h242];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #508
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h858A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #508)");
    end
end

unit.assert_eq16(16'h858A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #508 a09a368f-0ed3-4139-a598-942506747a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #508 3d62dd2e-35b3-4704-94ac-c9bf7ea6344c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #508 aa328280-427e-4169-a9f8-87fe0181266b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #508 7352df03-10b4-454d-beac-76b95b89f8d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #508 385234f7-aa5a-4264-a41e-998ae5d46e6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #508 a81f313e-83e2-444d-8dcb-2ae6250c10a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #508 480f190f-391c-4e18-a102-03f84b525f69)");

unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'hD25],
"EXT DMEM (Testcase #508 b7e45cc8-c78a-44e1-b162-79996c0f53c2)");
unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'hD26],
"EXT DMEM (Testcase #508 1a09dad8-eeb6-4ac1-93aa-a7b88ea29e2e)");
datamem_ext_i.datamem[13'hD25] =
datamem_swap[16'hD25];
datamem_ext_i.datamem[13'hD26] =
datamem_swap[16'hD26];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #509
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB022;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #509)");
    end
end

unit.assert_eq16(16'hB022, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #509 eeedbecc-132c-442e-a905-16dfcc610539)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #509 1a00478f-005b-4b13-8581-78ea974d1cd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #509 fb747877-4ac3-4a35-b05c-bf2801e9c1cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #509 a01d5bde-a3ef-4c53-a6dc-ba3abc332a9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #509 7fd9dd55-7c62-478a-b805-2d31aa476102)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #509 f388ffa2-bc57-43fb-9584-fae3b221dbce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #509 5209fa98-64d6-434e-ba9d-83420a16ecb7)");

unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'hCB8],
"EXT DMEM (Testcase #509 8954bd37-5c25-4fc9-8cbc-8fe66b857a29)");
unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hCB9],
"EXT DMEM (Testcase #509 b02a38f2-c8b2-4fb8-bb95-64a17ea64a61)");
datamem_ext_i.datamem[13'hCB8] =
datamem_swap[16'hCB8];
datamem_ext_i.datamem[13'hCB9] =
datamem_swap[16'hCB9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #510
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h19E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #510)");
    end
end

unit.assert_eq16(16'h19E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #510 8621e7dd-f03a-4a20-9d1b-3fe750cf6c7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #510 04fc8cf3-59ec-4468-88fb-8ef60b228002)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #510 788d06b5-cdff-4fbd-b54d-aa43679e18a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #510 3aa3c684-d508-4428-9374-ffbdcfe0ad8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #510 c8135610-b8d8-4990-83b5-4181d84eb7e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #510 0177c279-82a9-4b51-83f4-ffd84b580a8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #510 1879e7b7-6592-4a5d-af64-345bce1d65a8)");

unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'h55E],
"EXT DMEM (Testcase #510 7449cb6f-f8e9-4737-93a7-f9fb58372422)");
unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'h55F],
"EXT DMEM (Testcase #510 760f1a95-4def-410f-ac38-0998b6f9f2b2)");
datamem_ext_i.datamem[13'h55E] =
datamem_swap[16'h55E];
datamem_ext_i.datamem[13'h55F] =
datamem_swap[16'h55F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #511
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD2A6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #511)");
    end
end

unit.assert_eq16(16'hD2A6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #511 658c030c-c4bf-47bc-8200-1ef6b8bc6222)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #511 8ac2084b-3cab-4990-b1ca-9dce3ec33cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #511 ceaffce9-2cb2-49b5-94d8-0a1bbd5fdc3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #511 20113020-7014-49d1-8ebe-b4a5e29f4f30)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #511 904b71f8-8128-4764-9a49-587299834d39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #511 4e30f98a-fea4-4ec6-be03-b01fd600b00f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #511 8acaf39f-bada-4fd9-8cf4-f2685519e2f7)");

unit.assert_eq8(8'hA6, datamem_ext_i.datamem[13'hF35],
"EXT DMEM (Testcase #511 9d5a6d5d-9036-438a-a678-83dc6e88cbaa)");
unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'hF36],
"EXT DMEM (Testcase #511 1daadd8d-0fd3-4313-bdf7-969802613aa7)");
datamem_ext_i.datamem[13'hF35] =
datamem_swap[16'hF35];
datamem_ext_i.datamem[13'hF36] =
datamem_swap[16'hF36];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #512
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9608;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #512)");
    end
end

unit.assert_eq16(16'h9608, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #512 9a3059e3-ac20-42af-a5d9-c4783ee14eba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #512 4b5bb265-3e4e-48e5-8e8b-dda5392d6b72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #512 e5045d43-85ba-4537-89f3-ee9b0efdeb16)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #512 019734aa-84bd-4a87-89c8-9b42d83ec1c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #512 6de78974-8a89-4309-9a29-82ab2cfada50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #512 b3433cb1-e65e-46fb-8173-1cff03b9d8b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #512 6a4fe926-ed78-47da-b6fb-b34cd785d1dd)");

unit.assert_eq8(8'h08, datamem_ext_i.datamem[13'hB63],
"EXT DMEM (Testcase #512 4d7746c7-e8f4-4f6e-b8f0-f3c73a8c9211)");
unit.assert_eq8(8'h96, datamem_ext_i.datamem[13'hB64],
"EXT DMEM (Testcase #512 a25f59a6-634c-4697-b7c7-f699d8dcb278)");
datamem_ext_i.datamem[13'hB63] =
datamem_swap[16'hB63];
datamem_ext_i.datamem[13'hB64] =
datamem_swap[16'hB64];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #513
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h49C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #513)");
    end
end

unit.assert_eq16(16'h49C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #513 5808ef13-71c5-4b43-990b-3be274555aa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #513 47338684-6ad3-471e-aad0-ca82a45e799a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #513 482afe23-1860-4698-9f93-ea153256d124)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #513 dc32c501-9363-4f1c-bd96-2a0987107b3c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #513 c98e56ee-b335-4cbf-907a-98d019cf0ab3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #513 d200741b-4d3a-47fb-95c9-5344f347934c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #513 e78e6e11-f809-41de-99fc-a8b29d05b725)");

unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h2E5],
"EXT DMEM (Testcase #513 b24e46db-38fe-40c3-8139-96639c3bf846)");
unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h2E6],
"EXT DMEM (Testcase #513 80bf1b63-369f-4a66-b7f9-14caa2c4f251)");
datamem_ext_i.datamem[13'h2E5] =
datamem_swap[16'h2E5];
datamem_ext_i.datamem[13'h2E6] =
datamem_swap[16'h2E6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #514
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #514)");
    end
end

unit.assert_eq16(16'h8BD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #514 345fc3a6-f914-4139-a8e4-9ea4f0b56cc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #514 fc631fc0-8301-44f7-8068-619ee7ac09cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #514 e9c385dc-7423-4d89-b4e0-dbeccf79c7b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #514 3cdc83c9-72b4-4a44-87aa-55d4df688495)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #514 8ca99e6f-eaad-49dd-b89a-952a4633de0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #514 9ef5471f-5ae0-4071-b105-c89212a360bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #514 4d6bcf4f-5923-4246-9e1a-fc8846e347d9)");

unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'hE3A],
"EXT DMEM (Testcase #514 de39b6a8-6506-4a3a-b197-080160b426de)");
unit.assert_eq8(8'h8B, datamem_ext_i.datamem[13'hE3B],
"EXT DMEM (Testcase #514 25a1a38a-301a-4311-b21f-37e57d043bb5)");
datamem_ext_i.datamem[13'hE3A] =
datamem_swap[16'hE3A];
datamem_ext_i.datamem[13'hE3B] =
datamem_swap[16'hE3B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #515
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h03AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #515)");
    end
end

unit.assert_eq16(16'h03AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #515 20a5744a-f176-43d2-8c94-83bd2c2401ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #515 45400b64-bfa1-4e6c-b60b-2083b944ed0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #515 7971c622-6ae6-4835-bda4-93ce0833d6ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #515 7e631a91-7e57-4424-b5bf-5ba638786b0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #515 98755fda-6ee7-4321-a7de-e6426f88fa35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #515 6599370d-b60e-48f3-9c00-e4bc2bb8afca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #515 6df8f18e-66f7-4112-9a21-9fa747a106ae)");

unit.assert_eq8(8'hAC, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBD],
"INT DMEM (Testcase #515 b9170159-422b-422c-9535-1d611442133f)");
unit.assert_eq8(8'h03, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBE],
"INT DMEM (Testcase #515 9baae9d0-7f80-4ce8-8252-2a1c0bcbffd6)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBD] =
datamem_swap[16'h1BD];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBE] =
datamem_swap[16'h1BE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #516
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #516)");
    end
end

unit.assert_eq16(16'hBFA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #516 8f7736b8-3503-463d-b241-1b146f762e50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #516 a8eb9ca1-b39e-427a-8ac6-7ec7e7454844)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #516 f3c19c1a-7183-46c2-b72e-174d7b919bd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #516 0e707740-cfb0-471f-b3a4-d8d4503ca77e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #516 108b7983-b3dd-4a70-85aa-4afd3718cb8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #516 f896310d-9ba0-4694-bc49-f643fa50a8f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #516 d65e5e57-f550-45fd-bce1-f5c5cec42672)");

unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'hAB4],
"EXT DMEM (Testcase #516 e1300e5f-f34c-48cf-ba2c-8ebc3b3d2d65)");
unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'hAB5],
"EXT DMEM (Testcase #516 28dd5559-c8f3-4d05-b30a-94620a814282)");
datamem_ext_i.datamem[13'hAB4] =
datamem_swap[16'hAB4];
datamem_ext_i.datamem[13'hAB5] =
datamem_swap[16'hAB5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #517
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1957;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #517)");
    end
end

unit.assert_eq16(16'h1957, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #517 a1129abb-0456-4667-aaba-694e64d316ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #517 69ce4fa1-c5b5-4115-b9bd-3b11fbb3427a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #517 a513b4a0-cd0a-4348-9b62-c54e608ee8a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #517 374599cc-ce0e-4679-b8a6-b0f8f2871d3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #517 7f23df0d-1a4c-42b1-b521-8836c66b318f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #517 f08f9af9-783e-48ab-9e56-c004e9e11a03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #517 1e4aaf22-0337-4cb4-afd8-26dff4d8dc3d)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'h41D],
"EXT DMEM (Testcase #517 d37df32d-3fac-48fb-967f-c34ea9e0cc6e)");
unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'h41E],
"EXT DMEM (Testcase #517 655cd6a0-096a-4cd3-8556-89e75271e2b9)");
datamem_ext_i.datamem[13'h41D] =
datamem_swap[16'h41D];
datamem_ext_i.datamem[13'h41E] =
datamem_swap[16'h41E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #518
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD48E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #518)");
    end
end

unit.assert_eq16(16'hD48E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #518 19d9215c-50dd-49ac-9bd7-260e16818529)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #518 cd43b09e-5cc6-4eba-84a4-b3a4d3553e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #518 ebf50a68-bdd2-4515-a250-994291a4f1a8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #518 af8032cd-d5b7-40f8-ac2e-deade03dd024)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #518 6f11ea24-f58e-4235-bc32-f81ce0195699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #518 8f286487-27db-44df-b377-a07fa3003bbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #518 2893296a-ea40-4050-8cd1-c95e08405294)");

unit.assert_eq8(8'h8E, datamem_ext_i.datamem[13'h923],
"EXT DMEM (Testcase #518 407ad40c-7202-41ad-af55-8ea1808d3217)");
unit.assert_eq8(8'hD4, datamem_ext_i.datamem[13'h924],
"EXT DMEM (Testcase #518 62f3f74d-4252-4855-9321-b53eff2f7e9b)");
datamem_ext_i.datamem[13'h923] =
datamem_swap[16'h923];
datamem_ext_i.datamem[13'h924] =
datamem_swap[16'h924];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #519
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5F25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #519)");
    end
end

unit.assert_eq16(16'h5F25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #519 79c6f459-9ba3-4b09-b843-6d3a05eb05e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #519 922187ac-e36a-486a-a167-271df6c8d520)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #519 274c71e4-0a4e-4160-a233-17b485ef6093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #519 89c91a65-47e3-461b-a746-711726808750)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #519 085967b3-68c9-4573-bc35-9792a1f004fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #519 e612f476-6aaa-4d50-a2e4-132d9367f397)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #519 dee83790-3d25-4a51-9d46-4845069d5ecd)");

unit.assert_eq8(8'h25, datamem_ext_i.datamem[13'h823],
"EXT DMEM (Testcase #519 b33e588e-b4a4-42c4-8b7a-c42ab3862d15)");
unit.assert_eq8(8'h5F, datamem_ext_i.datamem[13'h824],
"EXT DMEM (Testcase #519 09890b7e-646d-496d-a705-5c42f91b2a2a)");
datamem_ext_i.datamem[13'h823] =
datamem_swap[16'h823];
datamem_ext_i.datamem[13'h824] =
datamem_swap[16'h824];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #520
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA094;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #520)");
    end
end

unit.assert_eq16(16'hA094, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #520 bb483b7a-5cca-46df-b16a-e39f56491346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #520 4bfeb1c3-1923-4d30-8a5a-c25cf57eda24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #520 e444ea12-1a76-463a-ad94-b846c0e824f4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #520 6207416f-0394-4775-b358-a41a209d7adc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #520 8c44425c-6dbd-4306-9863-a2c424ba5d36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #520 e883cded-655b-441e-bf0f-a9a3f595cd6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #520 0a2c66e6-3f03-461d-9edf-5760819aeee4)");

unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'hF3A],
"EXT DMEM (Testcase #520 f2365449-11ae-47fb-8a63-f011d0a326e6)");
unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'hF3B],
"EXT DMEM (Testcase #520 38b663d8-ded7-4cf7-b40d-aabe39a59f31)");
datamem_ext_i.datamem[13'hF3A] =
datamem_swap[16'hF3A];
datamem_ext_i.datamem[13'hF3B] =
datamem_swap[16'hF3B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #521
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h195C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #521)");
    end
end

unit.assert_eq16(16'h195C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #521 2cd5f087-7d2d-4b4a-aa5b-94ffce9ff3ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #521 70fb032e-dc05-4211-9500-7fcd2ae7248d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #521 0c5500ac-c649-4999-b413-fcfd726ddca3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #521 706f2c0a-b6a9-4f6d-beaa-63272b1bc099)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #521 bfcafd95-a626-4a7e-9d01-2200c2c1a0c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #521 a7d79836-5fc8-4cfb-888f-258a960dff33)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #521 c6181c7b-6310-4583-b8fb-869630a998a7)");

unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'h306],
"EXT DMEM (Testcase #521 581a42ad-fba4-4f7d-9659-3fa4416d5f1e)");
unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'h307],
"EXT DMEM (Testcase #521 eb4ee209-0821-471a-b07b-4f95a19a9695)");
datamem_ext_i.datamem[13'h306] =
datamem_swap[16'h306];
datamem_ext_i.datamem[13'h307] =
datamem_swap[16'h307];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #522
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1CB2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #522)");
    end
end

unit.assert_eq16(16'h1CB2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #522 3ed198e8-a347-4306-be68-c5da45886a18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #522 975d2747-5778-438d-bbe0-f407af5f29a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #522 234835b4-867b-44a5-84d7-75ee7be3bba9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #522 0b9d7141-cd1a-4095-9eb5-edb15712f73f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #522 7589c127-88c4-404e-8479-4149dc4cd298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #522 2dfba9bd-53e1-4cd3-a912-c7356584ae1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #522 5c11d7c6-d5ed-4198-bd50-3124be6637a7)");

unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'h8AB],
"EXT DMEM (Testcase #522 199241f4-b9a5-4b4d-8007-650817f30128)");
unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'h8AC],
"EXT DMEM (Testcase #522 296bd722-9c11-4338-8da7-af550960614a)");
datamem_ext_i.datamem[13'h8AB] =
datamem_swap[16'h8AB];
datamem_ext_i.datamem[13'h8AC] =
datamem_swap[16'h8AC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #523
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h733B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #523)");
    end
end

unit.assert_eq16(16'h733B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #523 8f221994-4365-476d-87f7-7138af41191c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #523 0bc0c199-2a30-4065-850c-d3c9f479611d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #523 ba8811ab-af9b-4056-9429-592ce855620f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #523 9b5465e2-5576-4caa-88e5-422cf09d4dda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #523 71b06c45-c20c-420e-927c-3eb3ed0a0fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #523 33cae27d-9019-46e7-ba1a-ed35dd8f53a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #523 aa19f77f-8f03-46ca-bbbd-aed47d011cdf)");

unit.assert_eq8(8'h3B, datamem_ext_i.datamem[13'h350],
"EXT DMEM (Testcase #523 61dee838-2e7f-420d-84b7-f520b05a66b3)");
unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'h351],
"EXT DMEM (Testcase #523 fab478c7-630d-471d-9d54-4bce56f37711)");
datamem_ext_i.datamem[13'h350] =
datamem_swap[16'h350];
datamem_ext_i.datamem[13'h351] =
datamem_swap[16'h351];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #524
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h868E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #524)");
    end
end

unit.assert_eq16(16'h868E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #524 a47c968e-3c5f-4914-87e4-d2761d17d8cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #524 8c321e22-5977-4e0b-af9f-e8e678f3dafa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #524 7e7c42e9-d06a-44e5-aaed-6d3ed1251555)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #524 64813542-3960-407b-be8e-4ff11731b236)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #524 952efae3-4299-4d39-a6bf-73f04468dd79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #524 073f97d3-68dc-428d-b279-fec2de21c655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #524 b10c08d3-64ca-4664-8718-9a25e4b7c1dc)");

unit.assert_eq8(8'h8E, datamem_ext_i.datamem[13'hAA6],
"EXT DMEM (Testcase #524 7df094d5-115f-45f5-b0ad-4ff08d5f039e)");
unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'hAA7],
"EXT DMEM (Testcase #524 b6565bf7-f6cf-44bd-b428-e01c9599402d)");
datamem_ext_i.datamem[13'hAA6] =
datamem_swap[16'hAA6];
datamem_ext_i.datamem[13'hAA7] =
datamem_swap[16'hAA7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #525
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #525)");
    end
end

unit.assert_eq16(16'hFFD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #525 0305e4fc-2ab0-46b0-9d0e-6dad1cdd435f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #525 7347d7f7-0f76-4e4e-bc8c-2c57c770b205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #525 030e9130-05a6-4ab6-b09c-9e73fa36de4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #525 01e6ea4d-7890-4602-8b63-8b9ebebf7f39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #525 56c423a3-4f7f-4b73-af7e-cadaf812b8e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #525 c03ed4f2-cae7-45f8-a4f9-78e371268e2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #525 d6e3c3fa-02df-4996-8bed-da5d7857c734)");

unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h868],
"EXT DMEM (Testcase #525 6f244243-320e-41ac-93f1-5918cdc14a31)");
unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'h869],
"EXT DMEM (Testcase #525 ecfa47a1-3c69-4223-8384-6054579cba7e)");
datamem_ext_i.datamem[13'h868] =
datamem_swap[16'h868];
datamem_ext_i.datamem[13'h869] =
datamem_swap[16'h869];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #526
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDFFF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #526)");
    end
end

unit.assert_eq16(16'hDFFF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #526 b7a2e826-91c1-4ccc-b3ff-22fe539a9c4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #526 461df7b9-6220-44ed-b199-8fe8ca8fcc8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #526 da07c4fd-5935-4f48-aa03-1b9c35f913ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #526 50ce938d-54af-4fcb-baee-f2115a4d8293)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #526 6f74a121-be11-4988-912d-0ec9cb37ae43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #526 4c0a25a2-b2c4-4d70-a4f1-1e5f9b1eedfc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #526 02bd348d-8e26-4b27-9b1e-34a5204bcfa9)");

unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'h943],
"EXT DMEM (Testcase #526 cdf98a0b-227a-4b28-b1ee-df7c28a1c31d)");
unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'h944],
"EXT DMEM (Testcase #526 7d42d7b2-f581-4a85-9568-6de8c40172d6)");
datamem_ext_i.datamem[13'h943] =
datamem_swap[16'h943];
datamem_ext_i.datamem[13'h944] =
datamem_swap[16'h944];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #527
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAE86;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #527)");
    end
end

unit.assert_eq16(16'hAE86, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #527 1b4c230d-1f06-487b-b183-26018a5bc8ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #527 00a8e4ad-74db-42d6-88f9-4b6a5ce42a97)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #527 a7074c3e-e5cd-4f67-b1ff-d3864f73ac92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #527 be617cd0-8032-41be-971f-c401f66ccd04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #527 b7979ce5-95ab-496a-9de7-6b03d9ea69f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #527 0c4811ba-ed42-4f5e-84f8-1f8a5b1adf89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #527 69ef54b5-db2c-4ed3-9001-fd16f371f994)");

unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'h935],
"EXT DMEM (Testcase #527 3d1d5104-aecc-4377-b59e-410213db61a8)");
unit.assert_eq8(8'hAE, datamem_ext_i.datamem[13'h936],
"EXT DMEM (Testcase #527 4614d473-8ac7-465d-866b-eb8134552de6)");
datamem_ext_i.datamem[13'h935] =
datamem_swap[16'h935];
datamem_ext_i.datamem[13'h936] =
datamem_swap[16'h936];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #528
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4340;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #528)");
    end
end

unit.assert_eq16(16'h4340, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #528 03f5e8f5-d74b-4db0-a780-0f14c736ea52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #528 52c2959a-5642-49c2-a18a-28dc3a281b32)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #528 aa5f3817-0504-4ace-8cc8-a0a31a6b2de8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #528 59e5a169-50ff-4e06-b373-db6d26dfbab6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #528 dca8c2b0-fd48-4294-b457-6a622f16361a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #528 7680afe1-e690-4cbf-9373-37fd004e8c3f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #528 b7872741-0937-4fb9-aefb-6ed9a2362e6d)");

unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'h647],
"EXT DMEM (Testcase #528 27960b6f-ee4c-4fc6-9911-7b31c421665c)");
unit.assert_eq8(8'h43, datamem_ext_i.datamem[13'h648],
"EXT DMEM (Testcase #528 612a7aaf-ce62-4dff-a3ef-702f652c7876)");
datamem_ext_i.datamem[13'h647] =
datamem_swap[16'h647];
datamem_ext_i.datamem[13'h648] =
datamem_swap[16'h648];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #529
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h22E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #529)");
    end
end

unit.assert_eq16(16'h22E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #529 e66fe43e-5f44-4b12-8583-742c9af33310)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #529 47836117-a3a0-4e8d-9a41-3119fe356c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #529 9e278826-d367-4600-957a-9c8cdab4fb3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #529 ce14c25d-1dec-42c0-8d16-a178fe82e08b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #529 9d6d9b95-0196-4c85-8671-eb520bed734d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #529 894d094a-16de-4d2c-907e-4f4dbdaee8b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #529 e0b0a345-c936-480f-be1a-c7157e51d18f)");

unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'hCB0],
"EXT DMEM (Testcase #529 d0053e10-75dc-4ab3-8bc8-42f365b4d4de)");
unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'hCB1],
"EXT DMEM (Testcase #529 d386edaa-6bff-4378-9901-8a09c6d50c9e)");
datamem_ext_i.datamem[13'hCB0] =
datamem_swap[16'hCB0];
datamem_ext_i.datamem[13'hCB1] =
datamem_swap[16'hCB1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #530
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5D74;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #530)");
    end
end

unit.assert_eq16(16'h5D74, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #530 42390e66-f4f3-4044-b9fd-ec374e69dc85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #530 374e33ae-e154-43ce-8c60-a3109a244a88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #530 6243da19-d308-481a-a894-bb0e2ee93248)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #530 0ed06e1a-cc9a-4d79-a83e-091092cb2513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #530 8f031f99-e179-43a8-946b-2e50e9bb1bdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #530 6e0f3316-f1a7-4cbd-9cea-55bd7ba20767)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #530 32c8800b-4f2d-4f0f-a1ed-3f2446c1f6dd)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h868],
"EXT DMEM (Testcase #530 b2465a8c-689d-4769-98db-4d05d643d208)");
unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'h869],
"EXT DMEM (Testcase #530 3561b6e1-af76-4238-8047-c38c3448e6cb)");
datamem_ext_i.datamem[13'h868] =
datamem_swap[16'h868];
datamem_ext_i.datamem[13'h869] =
datamem_swap[16'h869];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #531
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47FC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #531)");
    end
end

unit.assert_eq16(16'h47FC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #531 f20166bf-81e2-468d-8a01-729b7d39c7f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #531 5e54aac6-4c7a-45ec-8ef9-8721dafafc9d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #531 a7c3cff2-a827-4507-8678-b9d31d958376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #531 7333ebab-58bd-48dc-9cda-655703f1aeb4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #531 0ebb25bd-2433-42f9-a0fd-76c10ca93e76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #531 c18f95d3-6e1e-444f-aed9-790b2d85bc9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #531 5b2b10b2-6ab9-490c-aadb-d8d4b3eb9bf4)");

unit.assert_eq8(8'hFC, datamem_ext_i.datamem[13'hB48],
"EXT DMEM (Testcase #531 97c6cf44-86f6-4cd0-9a94-c340048536bf)");
unit.assert_eq8(8'h47, datamem_ext_i.datamem[13'hB49],
"EXT DMEM (Testcase #531 3d40d679-ee57-4f21-8ed5-91d9d27c1e41)");
datamem_ext_i.datamem[13'hB48] =
datamem_swap[16'hB48];
datamem_ext_i.datamem[13'hB49] =
datamem_swap[16'hB49];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #532
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #532)");
    end
end

unit.assert_eq16(16'hDD44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #532 7ddf98bd-f951-4a5e-bddd-031803aa2880)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #532 200c7656-b4b8-4e46-baee-673a980f603a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #532 e5cdaada-841d-42a5-b6af-595b7e1beb54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #532 69d9eed1-869c-4bde-a34c-e5c0d0dbd50a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #532 63c9f32c-e551-4fab-b0b1-20b23ceea557)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #532 0e567355-70e9-4193-acb8-0fa23c07aab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #532 797265a9-6aba-4252-b18e-90bdb0deea8c)");

unit.assert_eq8(8'h44, datamem_ext_i.datamem[13'hA8F],
"EXT DMEM (Testcase #532 4765740a-b6ca-4c8b-868c-fa51a32e62dc)");
unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'hA90],
"EXT DMEM (Testcase #532 c8ad0c6d-7fc6-4f4e-8ee9-7a9f04e66d9f)");
datamem_ext_i.datamem[13'hA8F] =
datamem_swap[16'hA8F];
datamem_ext_i.datamem[13'hA90] =
datamem_swap[16'hA90];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #533
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4E35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #533)");
    end
end

unit.assert_eq16(16'h4E35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #533 ae41f167-6690-40e4-8512-3bc92c26598c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #533 6d928fb5-14c1-4ec4-9feb-69cee87d2191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #533 adec6026-e678-4e17-a0ba-3ff7d3340b26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #533 0d0c5adb-a81c-465e-a0d6-4699c9a5e522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #533 c21c3e02-9851-4279-bcc4-36c6c98a6185)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #533 e6ae4cae-3c47-40e7-beaa-9423838686bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #533 80c93fa3-d34d-44c4-940d-0f027fba350a)");

unit.assert_eq8(8'h35, datamem_ext_i.datamem[13'h83E],
"EXT DMEM (Testcase #533 6d533b7a-80d9-4166-9d09-3ac340f96711)");
unit.assert_eq8(8'h4E, datamem_ext_i.datamem[13'h83F],
"EXT DMEM (Testcase #533 5b0a9b04-2721-4d61-b42e-073848ddd0a9)");
datamem_ext_i.datamem[13'h83E] =
datamem_swap[16'h83E];
datamem_ext_i.datamem[13'h83F] =
datamem_swap[16'h83F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #534
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h725B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #534)");
    end
end

unit.assert_eq16(16'h725B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #534 1280177b-fe93-4a6b-956b-3fbd8a81d7de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #534 1dc2dd81-5184-4c54-9303-c3fd50572b1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #534 c4da1665-03df-4abe-a4a3-42c53ed1814a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #534 e5cd4d8e-cb59-4ae8-a1f0-65a9819eba12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #534 916419f0-6c21-4550-aa3f-319f2015f5e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #534 586c6681-d20d-4bc4-9f62-35d0189d623a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #534 6a42a47e-e1b4-41dd-97cb-e03886068b66)");

unit.assert_eq8(8'h5B, datamem_ext_i.datamem[13'hFA6],
"EXT DMEM (Testcase #534 05925134-e242-4303-a2a1-7fe61e76c7d2)");
unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'hFA7],
"EXT DMEM (Testcase #534 caa7b809-8d5e-423a-bf69-55829836d832)");
datamem_ext_i.datamem[13'hFA6] =
datamem_swap[16'hFA6];
datamem_ext_i.datamem[13'hFA7] =
datamem_swap[16'hFA7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #535
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE7FA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #535)");
    end
end

unit.assert_eq16(16'hE7FA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #535 cc557de3-7823-4ddf-935b-96518c73d357)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #535 9a571014-7df3-41b2-b40b-6fbe48428dfc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #535 1a79f97c-f775-4326-a3af-f1ce4516388b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #535 10c0ecc7-0aad-41af-bde9-54e87a9103fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #535 179a98b2-f487-49a0-97a4-abb9f379e2de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #535 ffc14310-954b-4b7e-bbb8-fa0bc13f7a94)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #535 3da7fdce-06f8-427a-8c57-09b138c6c8b0)");

unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'h69A],
"EXT DMEM (Testcase #535 d87701e9-b175-4a92-b86a-01ef3b9dc16d)");
unit.assert_eq8(8'hE7, datamem_ext_i.datamem[13'h69B],
"EXT DMEM (Testcase #535 8f7f6af0-97ac-45d9-9985-163b78eda48b)");
datamem_ext_i.datamem[13'h69A] =
datamem_swap[16'h69A];
datamem_ext_i.datamem[13'h69B] =
datamem_swap[16'h69B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #536
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h30CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #536)");
    end
end

unit.assert_eq16(16'h30CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #536 443a17de-a247-4db2-a739-b1c025b265a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #536 e07b832c-7c1c-4313-ad61-b586d9ef00d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #536 9a40c812-89de-4ae5-8636-6f3010b9eb52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #536 5828f137-8be9-42f4-bde3-69d415cbd772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #536 5767ba08-86e0-4924-b128-e8dad3ac6e17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #536 8ca2093c-ff6e-4dfb-a7e2-70da5f1e2d2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #536 58322d8b-d4f7-4017-806e-29fe8c5ca98e)");

unit.assert_eq8(8'hCE, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h39],
"INT DMEM (Testcase #536 78f57a10-5bfe-4a39-beb3-3c650026cbfc)");
unit.assert_eq8(8'h30, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3A],
"INT DMEM (Testcase #536 358f2d69-170d-4216-8d57-cd3c682b8a1d)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h39] =
datamem_swap[16'h139];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3A] =
datamem_swap[16'h13A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #537
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h209F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #537)");
    end
end

unit.assert_eq16(16'h209F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #537 a58d00fb-d2b1-4559-a496-f5e834c364d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #537 dca94ae6-ad57-4372-81a9-ac652c757d71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #537 3a46e738-e3b9-48b9-b5b2-826a853ef27c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #537 798c2e75-28cc-4571-b06e-566b0a278b8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #537 b32219b0-77d1-4d7d-9565-f00ab9dc5ed3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #537 9842b23b-376f-4d2d-9129-ae442c77f8df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #537 a8e2dcf5-5768-4930-97fd-d7d37d0c105c)");

unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'hA9B],
"EXT DMEM (Testcase #537 e8ee3344-3335-4f88-8e4a-fa3023b01f4c)");
unit.assert_eq8(8'h20, datamem_ext_i.datamem[13'hA9C],
"EXT DMEM (Testcase #537 1d55298a-bbb6-4f98-82f2-7c2088acb0c6)");
datamem_ext_i.datamem[13'hA9B] =
datamem_swap[16'hA9B];
datamem_ext_i.datamem[13'hA9C] =
datamem_swap[16'hA9C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #538
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h990E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #538)");
    end
end

unit.assert_eq16(16'h990E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #538 f6c3d69a-6ec4-4001-b449-abbfd55b6bd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #538 ecd58220-e03b-4874-978a-ad316879a77a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #538 4725cdb9-e412-43b5-b297-ba60e6ad7da1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #538 04c4eaad-8060-46e8-942b-c9e126aa2698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #538 be0b0788-3da8-4c9d-a90b-32153e103087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #538 1e32c091-9bbb-458a-a998-020de8e4b265)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #538 996c64bb-e839-4d0d-a5de-5565d0f4bd7d)");

unit.assert_eq8(8'h0E, datamem_ext_i.datamem[13'hC6C],
"EXT DMEM (Testcase #538 b03cff63-7eb7-4686-8a24-43278fa7a3c7)");
unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'hC6D],
"EXT DMEM (Testcase #538 1ecdd82e-694c-4268-8e5f-93a8c257ac09)");
datamem_ext_i.datamem[13'hC6C] =
datamem_swap[16'hC6C];
datamem_ext_i.datamem[13'hC6D] =
datamem_swap[16'hC6D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #539
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD722;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #539)");
    end
end

unit.assert_eq16(16'hD722, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #539 d9e3ea27-fa38-454f-abaa-e6846072f3cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #539 032d89d0-aa6a-4838-8d5b-d689563616b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #539 6dbe2463-9781-4d99-a55c-9bb77463bbbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #539 f62ecf65-be86-4cd6-bf67-f978551435c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #539 30190c40-078b-4c83-b2dd-5c113ddf15e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #539 990b3806-afff-4a50-8ae2-032db29c72ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #539 6157b735-b405-4682-8769-96df548ba283)");

unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'hFE6],
"EXT DMEM (Testcase #539 27e25d18-6d46-4935-810d-699ba0ccd0ee)");
unit.assert_eq8(8'hD7, datamem_ext_i.datamem[13'hFE7],
"EXT DMEM (Testcase #539 77c425d9-f73e-4cf5-bf81-8c8a5ab687d7)");
datamem_ext_i.datamem[13'hFE6] =
datamem_swap[16'hFE6];
datamem_ext_i.datamem[13'hFE7] =
datamem_swap[16'hFE7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #540
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD09;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #540)");
    end
end

unit.assert_eq16(16'hDD09, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #540 206cf18c-b16d-4fc2-b7f8-64b7763b229c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #540 a169bf8a-5c92-4956-be6d-2387364d9213)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #540 1eb94d98-b791-4dde-af71-5464d802adb1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #540 3745a31a-9b69-4ec7-bc54-a08f790be31c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #540 884bff32-f35b-48fa-84ad-ad910515587a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #540 77d9db7c-2e36-4cfd-a4d4-e1730a72bbff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #540 4b86758b-bbbd-4b08-a89f-f24c35d79246)");

unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'h38D],
"EXT DMEM (Testcase #540 fe9c8ba4-a0de-4725-a53d-2e9a9b98e06f)");
unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'h38E],
"EXT DMEM (Testcase #540 59fd4a8b-1d16-4a00-a2b4-9bdee51430d6)");
datamem_ext_i.datamem[13'h38D] =
datamem_swap[16'h38D];
datamem_ext_i.datamem[13'h38E] =
datamem_swap[16'h38E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #541
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCB2E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #541)");
    end
end

unit.assert_eq16(16'hCB2E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #541 2ffc45c5-ebd3-4c3b-a281-4af7c1d7cd24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #541 1c821f78-8a00-46fa-8304-436b1df3f279)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #541 7134442a-8f3c-423e-88e2-f4a6eae5665e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #541 af2ebbf9-95ca-4335-a4ce-58e0ab095435)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #541 5b1b3677-ab86-4bed-939a-f30c2b4ba044)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #541 6a6ab357-a3c7-484d-9789-95fa6c114043)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #541 bb9f2d70-4c48-4e6a-afe8-3841318b4900)");

unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'h465],
"EXT DMEM (Testcase #541 0bd7da45-c12d-412d-8511-61590de1a158)");
unit.assert_eq8(8'hCB, datamem_ext_i.datamem[13'h466],
"EXT DMEM (Testcase #541 27f744ca-a5ec-4563-a170-276e7326e4cc)");
datamem_ext_i.datamem[13'h465] =
datamem_swap[16'h465];
datamem_ext_i.datamem[13'h466] =
datamem_swap[16'h466];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #542
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA7C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #542)");
    end
end

unit.assert_eq16(16'hA7C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #542 9cd8659a-78b5-4e20-a90b-d9d06857fb54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #542 beb31aa0-adcc-45f3-8ed5-fa88962afd6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #542 8af4cf5f-5ea8-4a87-9023-35f8e3b31ebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #542 505c94c5-bb95-4fa8-927b-e698200bdc68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #542 8957e728-0854-4c6d-ad57-a8534647bf49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #542 a04f6a62-58a8-410c-bd90-cce33d73a818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #542 74ddb552-15b3-46ec-949d-0b6399e3a881)");

unit.assert_eq8(8'hC9, datamem_ext_i.datamem[13'h5F9],
"EXT DMEM (Testcase #542 b596808f-e449-4fb4-99aa-0197f2880c72)");
unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'h5FA],
"EXT DMEM (Testcase #542 7de38409-ecd2-46cb-ada9-5a8e9e20f9db)");
datamem_ext_i.datamem[13'h5F9] =
datamem_swap[16'h5F9];
datamem_ext_i.datamem[13'h5FA] =
datamem_swap[16'h5FA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #543
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0911;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #543)");
    end
end

unit.assert_eq16(16'h0911, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #543 672b30c4-4ed3-43ec-98e5-618f9a7a783d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #543 dce9740e-a933-4aa5-b5e2-df3faef7f7eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #543 6261039a-8dfb-45ec-ab96-ed0f69ef7c3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #543 6d7b062a-f68c-4f8c-92a6-3fcfad9b2009)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #543 6cf9b77e-2b53-48ed-9083-8ecf045d850a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #543 4449fa4f-e1d0-47c5-88db-0b601d527a93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #543 7c247f5d-cd4e-4819-839d-333493bf6053)");

unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'h419],
"EXT DMEM (Testcase #543 aeb62cf7-7e7e-4385-9a49-76c64255d59c)");
unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'h41A],
"EXT DMEM (Testcase #543 d751d11e-d834-45bf-b2dc-f63b56432029)");
datamem_ext_i.datamem[13'h419] =
datamem_swap[16'h419];
datamem_ext_i.datamem[13'h41A] =
datamem_swap[16'h41A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #544
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC4B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #544)");
    end
end

unit.assert_eq16(16'hC4B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #544 89b7f742-2adb-4d67-af62-2ecdcc9f44b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #544 403298d7-952d-4603-a24e-deeba3744f6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #544 5497923d-a1a9-4143-b190-3e2b313d8f6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #544 eff35cd8-5d4d-4d93-a15e-98390082b2a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #544 0fb689e9-5ba8-421f-9534-bf3c278bc214)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #544 76438339-696c-44f1-b877-c3d877e51ad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #544 68d182a8-8055-4f80-bd7d-87397c601619)");

unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'h82C],
"EXT DMEM (Testcase #544 5663bf57-307e-44de-ae08-8b990d5b7544)");
unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h82D],
"EXT DMEM (Testcase #544 5007656e-c3ef-4823-8693-9599585fb1c1)");
datamem_ext_i.datamem[13'h82C] =
datamem_swap[16'h82C];
datamem_ext_i.datamem[13'h82D] =
datamem_swap[16'h82D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #545
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4AF6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #545)");
    end
end

unit.assert_eq16(16'h4AF6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #545 3aeef96f-1d0a-4a80-bfb6-e2502792f3dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #545 b8bc81ec-7e88-414e-b812-44a662195ba9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #545 bbc4850f-aa60-45a7-8d5b-92c9d322b390)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #545 cb89f3c2-4d31-4144-b331-fde61c6bacd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #545 34ddc34e-e278-4c66-b0fc-cc08d4b751c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #545 9bd28dae-8e6c-42fd-9794-c10b522b4074)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #545 8f41c2e7-a802-4e97-b7d9-92576df8c0c9)");

unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'hF29],
"EXT DMEM (Testcase #545 73d7a2e0-d266-4abc-a505-06b58f4fefe4)");
unit.assert_eq8(8'h4A, datamem_ext_i.datamem[13'hF2A],
"EXT DMEM (Testcase #545 92b43bae-4a9e-4278-bc8f-b06694a0811c)");
datamem_ext_i.datamem[13'hF29] =
datamem_swap[16'hF29];
datamem_ext_i.datamem[13'hF2A] =
datamem_swap[16'hF2A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #546
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D4B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #546)");
    end
end

unit.assert_eq16(16'h4D4B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #546 b792431f-fcef-4746-8b21-2b745a81e68a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #546 0d4e8141-7874-48f6-80fd-ceb126a1ad4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #546 6a268f21-49aa-4079-88c2-76a29d1e986b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #546 5c1b346d-db40-466f-b87c-971674d47253)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #546 82acf511-24e8-4d1b-8127-14900a5d7649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #546 8ee6bdb3-6d7a-4184-8ac5-4a6fcf023c46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #546 178ca2d9-8bbd-49a3-9d74-e0f1b5ed04ba)");

unit.assert_eq8(8'h4B, datamem_ext_i.datamem[13'h904],
"EXT DMEM (Testcase #546 d9f8d593-394d-4a70-9a91-4dec9f27fd02)");
unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'h905],
"EXT DMEM (Testcase #546 f3ab0b80-25bb-4522-b634-c6f092e9b214)");
datamem_ext_i.datamem[13'h904] =
datamem_swap[16'h904];
datamem_ext_i.datamem[13'h905] =
datamem_swap[16'h905];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #547
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5173;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #547)");
    end
end

unit.assert_eq16(16'h5173, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #547 67c88037-a3f5-4349-a73e-f7a50cea43f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #547 393b0acb-802d-4579-853b-16256bd66ddb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #547 050165be-a338-481f-a835-fff75e84bd20)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #547 1565e5e5-f108-4af9-9d7e-88453ab66f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #547 fa4571d8-d37f-4d98-9335-8d83b5099472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #547 096853a3-cb8c-4130-8e5b-1925c09c85f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #547 de8d1245-b712-4f5a-8d2d-72e0c76c0ef8)");

unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'hE93],
"EXT DMEM (Testcase #547 b92fa4de-0675-44ab-b9e8-e033637933c6)");
unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'hE94],
"EXT DMEM (Testcase #547 1b3a06f5-a3fd-43c9-a029-91909fa9f03c)");
datamem_ext_i.datamem[13'hE93] =
datamem_swap[16'hE93];
datamem_ext_i.datamem[13'hE94] =
datamem_swap[16'hE94];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #548
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2339;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #548)");
    end
end

unit.assert_eq16(16'h2339, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #548 4dee459b-1e49-43c5-9e8f-9f501e950011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #548 34617e59-1515-4ea8-ae6b-ccabebd210f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #548 8746e126-cd39-4b8e-b92a-50022b60838e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #548 d904915e-46f3-46b9-9fe3-54e9783f7930)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #548 15d4dc31-b5a4-4630-ac34-ab3e737ed133)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #548 261f2ae6-7c8e-4f7f-99b9-a354dc203b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #548 901f4c15-4773-47f9-97ad-d151e4b1d70a)");

unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'h992],
"EXT DMEM (Testcase #548 6f05cfc2-6c84-4f7b-bef7-e3cb236ec3ee)");
unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'h993],
"EXT DMEM (Testcase #548 ad4624d1-ca40-4edd-a784-a3cf9daedf38)");
datamem_ext_i.datamem[13'h992] =
datamem_swap[16'h992];
datamem_ext_i.datamem[13'h993] =
datamem_swap[16'h993];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #549
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC6F9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #549)");
    end
end

unit.assert_eq16(16'hC6F9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #549 087239af-5593-48c1-90e3-2d63d1db830c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #549 9545a0f3-9d97-423f-bdc9-8a37fddf09a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #549 913364b5-839f-498a-b8c8-ab014a13c167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #549 a6f88baa-a0ca-456a-a93f-d28a19a049e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #549 e023452d-a945-4e13-bfce-895a29683d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #549 9039c0b9-b595-4f58-9972-4d320ed99eee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #549 b9791862-a19d-4a9d-83fd-401e37f0069e)");

unit.assert_eq8(8'hF9, datamem_ext_i.datamem[13'h715],
"EXT DMEM (Testcase #549 2fb46893-bed3-4f06-a99a-006c4815ab1b)");
unit.assert_eq8(8'hC6, datamem_ext_i.datamem[13'h716],
"EXT DMEM (Testcase #549 857e58eb-c644-4724-b844-8b3418fd957e)");
datamem_ext_i.datamem[13'h715] =
datamem_swap[16'h715];
datamem_ext_i.datamem[13'h716] =
datamem_swap[16'h716];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #550
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEF46;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #550)");
    end
end

unit.assert_eq16(16'hEF46, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #550 2d98816e-64c3-4043-97e7-18b1117031ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #550 e3654895-3126-4fb3-be5b-c42a5a0cd00e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #550 fca9ebaa-c39d-4e65-b308-d4552eba9eed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #550 36d9c84e-26f8-40ee-b471-b7d9f28d78ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #550 55a6d292-2b64-4714-b759-79e59fc651a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #550 42517ecf-8527-444c-8a3a-06dc57b894ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #550 962d5a6b-0c0c-4324-ab90-a0ad5accbe80)");

unit.assert_eq8(8'h46, datamem_ext_i.datamem[13'hD96],
"EXT DMEM (Testcase #550 ab8e824a-7c9a-41f3-acb7-1546e4950eb4)");
unit.assert_eq8(8'hEF, datamem_ext_i.datamem[13'hD97],
"EXT DMEM (Testcase #550 fc5f261a-6ff5-4f0b-9874-921e45e528d7)");
datamem_ext_i.datamem[13'hD96] =
datamem_swap[16'hD96];
datamem_ext_i.datamem[13'hD97] =
datamem_swap[16'hD97];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #551
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA0BB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #551)");
    end
end

unit.assert_eq16(16'hA0BB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #551 670f8421-8531-4ecd-bc4d-1cfef83663a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #551 d388f6a7-6ef7-4387-aa7d-86b7e611a395)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #551 d3aea418-4252-4ea6-87bb-4d61e6952f2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #551 3da6881f-c93d-456f-bc79-01d752fd1933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #551 41d4291d-3b8a-4213-958e-51c63b6e4b82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #551 3f94cc01-596d-4b12-ab37-83886e472c9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #551 daecd917-2759-421c-b4f7-8b870f7a2584)");

unit.assert_eq8(8'hBB, datamem_ext_i.datamem[13'hE16],
"EXT DMEM (Testcase #551 80c5fdcb-0e81-485a-8cb5-01536de520e3)");
unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'hE17],
"EXT DMEM (Testcase #551 e7e40ff6-b05c-4e75-9448-7d29eeeb9b87)");
datamem_ext_i.datamem[13'hE16] =
datamem_swap[16'hE16];
datamem_ext_i.datamem[13'hE17] =
datamem_swap[16'hE17];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #552
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #552)");
    end
end

unit.assert_eq16(16'h0D3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #552 35b6e326-8c67-40ac-8d8d-b73e56d4fe0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #552 b6ea2af7-25a9-46df-a53a-57ef31c19b77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #552 ec1c915e-6eac-48dd-8ce2-4182c8c2c8eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #552 48bf98bb-bca0-40ae-85d5-140883c4e45e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #552 0ef10bb2-7d83-47b3-b997-7b5a9aa67515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #552 27cb2706-605a-4c58-a052-555450da145c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #552 aa8ecbfa-251c-4583-a820-02e8367d7ff3)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h26E],
"EXT DMEM (Testcase #552 9dd01cf0-72ee-400f-b41a-78bfba9c24ed)");
unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'h26F],
"EXT DMEM (Testcase #552 359d08c4-67de-46a4-8b43-ccd23b31c3d1)");
datamem_ext_i.datamem[13'h26E] =
datamem_swap[16'h26E];
datamem_ext_i.datamem[13'h26F] =
datamem_swap[16'h26F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #553
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC441;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #553)");
    end
end

unit.assert_eq16(16'hC441, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #553 0f4db1ec-cee5-4cfa-9aa1-431cf84309e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #553 97b962a6-ae43-4526-904f-fbcdcd2a9635)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #553 d9def6d8-3a89-4d30-a60e-bcf90a8b3c65)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #553 b20d69d3-147e-423b-8b90-2e34ad58e520)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #553 8653e229-cc79-4fa4-a73a-4b424bbaa97a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #553 51ff6d9b-1cc7-4c24-a1f1-cf4faf683952)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #553 b0ceab13-1a97-44e3-a675-56155cdf7a85)");

unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'h3F5],
"EXT DMEM (Testcase #553 82e89c3b-f08b-4a78-b60a-019c6055da9b)");
unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h3F6],
"EXT DMEM (Testcase #553 589601e7-c09a-4223-b071-c5923a3be994)");
datamem_ext_i.datamem[13'h3F5] =
datamem_swap[16'h3F5];
datamem_ext_i.datamem[13'h3F6] =
datamem_swap[16'h3F6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #554
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0534;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #554)");
    end
end

unit.assert_eq16(16'h0534, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #554 fa0451dc-fc9f-4881-8701-42496bf14aaa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #554 5493ee59-f485-42ba-bdca-10b1628f163b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #554 2af87cee-a775-4d5b-8311-c914bd18765d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #554 aadabf70-f223-4a28-b6b7-a6ba0f60ae86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #554 6127399d-f039-4914-ac04-8851b86f51c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #554 ebe2c977-f4a0-4b59-9967-7c9bbd5a2a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #554 208e6982-8aac-48dc-8586-e6f1fb3a767a)");

unit.assert_eq8(8'h34, datamem_ext_i.datamem[13'hA8C],
"EXT DMEM (Testcase #554 e944e398-6af7-490f-8a98-8dca55bc4b70)");
unit.assert_eq8(8'h05, datamem_ext_i.datamem[13'hA8D],
"EXT DMEM (Testcase #554 98413565-fc97-4e80-aafb-8d620cfb7b65)");
datamem_ext_i.datamem[13'hA8C] =
datamem_swap[16'hA8C];
datamem_ext_i.datamem[13'hA8D] =
datamem_swap[16'hA8D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #555
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF931;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #555)");
    end
end

unit.assert_eq16(16'hF931, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #555 8974a13a-712a-4fc1-9ae5-9aa55be7fe61)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #555 f7a6e2fd-04f8-4e44-afe6-a95d09128327)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #555 90357f77-7d07-4ad2-b8ec-ffe5c07737e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #555 94c92e5a-caea-45fb-9c2f-fab97070f971)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #555 95acd644-0694-4305-bbbe-a3607fcd5d8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #555 3d8f5522-90e7-4679-aaf3-8aa3f6cb1f5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #555 848d38a5-caf7-44b0-8da4-54a20de950ba)");

unit.assert_eq8(8'h31, datamem_ext_i.datamem[13'h594],
"EXT DMEM (Testcase #555 25db516c-0192-42de-88cb-3b42fb4a86ab)");
unit.assert_eq8(8'hF9, datamem_ext_i.datamem[13'h595],
"EXT DMEM (Testcase #555 6d11c2b4-a60c-4122-8782-119d8b173b15)");
datamem_ext_i.datamem[13'h594] =
datamem_swap[16'h594];
datamem_ext_i.datamem[13'h595] =
datamem_swap[16'h595];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #556
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0694;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #556)");
    end
end

unit.assert_eq16(16'h0694, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #556 b1c32462-4fbd-47a0-a3e6-e8a5282eb1ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #556 339059ba-7f75-4ab3-b9ef-7d28afa397e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #556 55b0c8dd-9c26-4843-9b77-556e51c6cb06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #556 f9647f3b-5be5-4bbf-98c9-5c4068aa9423)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #556 a4698192-3026-422d-9703-6db78dcfca1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #556 a7a2e835-a00d-4f58-bb63-f0051a41426a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #556 49d956e0-143c-4b53-8edf-14b5b8ee1f7c)");

unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'h59E],
"EXT DMEM (Testcase #556 c1355424-9163-428b-910f-8e798a6e6e96)");
unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h59F],
"EXT DMEM (Testcase #556 b5faf095-acea-4368-89c7-39c5d5da1610)");
datamem_ext_i.datamem[13'h59E] =
datamem_swap[16'h59E];
datamem_ext_i.datamem[13'h59F] =
datamem_swap[16'h59F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #557
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBB9C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #557)");
    end
end

unit.assert_eq16(16'hBB9C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #557 88d6350d-e3e2-4156-ac07-88095c576280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #557 1b257a94-d19b-4843-8c2b-5a94e1599206)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #557 9162d518-9009-460b-a03b-72a1f3d87fd2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #557 16daec9a-1116-4ac8-8de7-f577b7a7ad83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #557 d63dd328-cc15-473e-ab81-4e1a824feafc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #557 04ab4acd-1fa9-4b62-bde4-7d4437676742)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #557 8a254374-1267-436a-a4ef-d093c3b180f6)");

unit.assert_eq8(8'h9C, datamem_ext_i.datamem[13'h8A1],
"EXT DMEM (Testcase #557 ef8308b7-7d3b-4a83-9014-b5b4056dd7a7)");
unit.assert_eq8(8'hBB, datamem_ext_i.datamem[13'h8A2],
"EXT DMEM (Testcase #557 91cce4c8-5517-430c-beee-32d99501f3de)");
datamem_ext_i.datamem[13'h8A1] =
datamem_swap[16'h8A1];
datamem_ext_i.datamem[13'h8A2] =
datamem_swap[16'h8A2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #558
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0A21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #558)");
    end
end

unit.assert_eq16(16'h0A21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #558 9cb2df8a-0029-4a48-86ee-2336dee5dc9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #558 efcc6c09-2d9e-4ee1-a38b-5e15c54a3518)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #558 1c728805-8227-44c1-a6a7-e84d8ad130ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #558 68c1f3fb-83d5-462a-84b6-680c75a686b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #558 9f36c1b6-115c-4e0a-95a7-4e763107df04)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #558 57283a4e-4954-4a1d-a19c-65617eb31906)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #558 25304838-0af1-44f2-a12d-db227ca9375a)");

unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'h27A],
"EXT DMEM (Testcase #558 2aed8cda-76e6-4d4f-9c4a-38065edadaf6)");
unit.assert_eq8(8'h0A, datamem_ext_i.datamem[13'h27B],
"EXT DMEM (Testcase #558 8e82109d-18ce-4ca3-96c4-e741b130a8fd)");
datamem_ext_i.datamem[13'h27A] =
datamem_swap[16'h27A];
datamem_ext_i.datamem[13'h27B] =
datamem_swap[16'h27B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #559
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h21C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #559)");
    end
end

unit.assert_eq16(16'h21C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #559 b12a9073-47d6-44db-9a6f-6180ba44f20f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #559 ae75fe90-6a71-4ea5-bc13-7b634e7de280)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #559 7800f1e4-b369-45b4-b64e-2b65f06d586e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #559 5a541950-553b-4233-8507-e5bccc1924a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #559 976d1f15-b0ed-4109-bad0-0b1623352ef1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #559 b3e21310-9309-467b-b4f4-7a9a56dc04c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #559 e39b6eaa-ae8c-4d8a-b3c6-58b44b5e1344)");

unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'hD2B],
"EXT DMEM (Testcase #559 720ec796-dffe-4fd6-afa6-dc614cdceec2)");
unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'hD2C],
"EXT DMEM (Testcase #559 eeddd8de-d678-4ca3-9075-d21c3fdbeb16)");
datamem_ext_i.datamem[13'hD2B] =
datamem_swap[16'hD2B];
datamem_ext_i.datamem[13'hD2C] =
datamem_swap[16'hD2C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #560
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC596;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #560)");
    end
end

unit.assert_eq16(16'hC596, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #560 f193af8b-9d44-4622-9ea3-92c4bf780a63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #560 8c76fab8-23ad-43ef-9ed0-d5b79b296a82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #560 31e76f9d-b1ed-4b0a-9b8f-94396ca8b4b5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #560 70bf6f34-a9c0-4f6c-a274-135b7f45f405)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #560 1ed1958c-2e4d-40d9-ab40-0a981e2fb79b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #560 0f0a6e03-cebc-4d6f-a595-9d6d625f4654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #560 40179028-9d42-4a22-be23-5f9edfbf589e)");

unit.assert_eq8(8'h96, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF7],
"INT DMEM (Testcase #560 4e147eac-bd50-44ba-931f-6b33ff8ece1f)");
unit.assert_eq8(8'hC5, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF8],
"INT DMEM (Testcase #560 42a7b454-843f-44e7-83a5-4a791a654d10)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF7] =
datamem_swap[16'h1F7];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF8] =
datamem_swap[16'h1F8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #561
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE2C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #561)");
    end
end

unit.assert_eq16(16'hE2C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #561 1ddc0ff1-929d-43b2-934a-4196f5c4454e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #561 083fc2cb-0e8e-4c3b-9220-b3b66f74335a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #561 2dfce95e-4719-492d-8158-f4592d5ba941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #561 650e1eab-5677-466c-9cbb-d9fda532fbf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #561 ef98a076-f085-4088-9716-96de36ad9f5d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #561 deece872-7e06-457d-965a-3aa3fc394f70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #561 48780583-5f64-418f-a44e-8cc973f0476f)");

unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'h769],
"EXT DMEM (Testcase #561 35dcd57c-f693-4cf5-bbfb-0d2e09d355c9)");
unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'h76A],
"EXT DMEM (Testcase #561 06eebf1b-753c-4314-a417-390334e19cee)");
datamem_ext_i.datamem[13'h769] =
datamem_swap[16'h769];
datamem_ext_i.datamem[13'h76A] =
datamem_swap[16'h76A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #562
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #562)");
    end
end

unit.assert_eq16(16'hB0A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #562 963c7562-1991-4ffc-bd69-7462806ded3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #562 dc224b03-288f-4a63-bde0-0769e782c8b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #562 451f34fd-2213-4e69-8d43-f4e1a6da75ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #562 59319e94-57e3-4db9-b0d5-d3513eb5ba3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #562 05e66bdb-1834-4ead-a1ee-e162ebf1952f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #562 663c4a2b-711c-49d9-86ef-33964a9ea0f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #562 7aae9455-1915-452d-8bea-fd7b3e2f5cd2)");

unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'hC0E],
"EXT DMEM (Testcase #562 c7124fe9-f231-41e5-8d79-8609746409c9)");
unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hC0F],
"EXT DMEM (Testcase #562 da73a4ff-836d-4d35-aae0-bae73a26fb77)");
datamem_ext_i.datamem[13'hC0E] =
datamem_swap[16'hC0E];
datamem_ext_i.datamem[13'hC0F] =
datamem_swap[16'hC0F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #563
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h49D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #563)");
    end
end

unit.assert_eq16(16'h49D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #563 dd99251d-ef3d-4a27-aa41-ce914dc4ffc6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #563 2fe587f5-dd37-472a-8e87-a5eb741c2ce8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #563 942599bd-72c6-4caa-92e7-5fe14dc61398)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #563 4aea14db-7379-4f57-85e3-8fdc28cef1bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #563 fed5ae13-5ec9-40a0-8b29-f42a6891e67e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #563 5506ba7b-9e10-4dd8-8264-bb8e039d5fa6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #563 42f5d14d-fae4-4eec-9c86-80a3186edb3d)");

unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h72C],
"EXT DMEM (Testcase #563 2f61beaf-1341-4d28-86fa-15514b1a2319)");
unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h72D],
"EXT DMEM (Testcase #563 5b7b6a8e-4dbb-410b-a698-adacd581ba3c)");
datamem_ext_i.datamem[13'h72C] =
datamem_swap[16'h72C];
datamem_ext_i.datamem[13'h72D] =
datamem_swap[16'h72D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #564
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h33C7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #564)");
    end
end

unit.assert_eq16(16'h33C7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #564 4bff7ee2-2bbd-4adf-a731-7e4410a5eb34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #564 87f60afe-452a-457a-9797-37f55143fd3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #564 855fe70d-9466-46be-a3fa-1212ab6b1f46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #564 e8db6163-c2bf-4219-b860-73fc336a55de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #564 2b109cf8-e2a9-47e8-abb2-75821148811b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #564 d9b37892-2605-4872-a6aa-d0697611c70a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #564 1779338a-edcd-48e0-8a32-4a0017493f00)");

unit.assert_eq8(8'hC7, datamem_ext_i.datamem[13'h541],
"EXT DMEM (Testcase #564 8d2fa262-4323-4255-88c0-671a5c9d9ddf)");
unit.assert_eq8(8'h33, datamem_ext_i.datamem[13'h542],
"EXT DMEM (Testcase #564 cd4d75ae-143a-42a8-a673-a4a94da7c630)");
datamem_ext_i.datamem[13'h541] =
datamem_swap[16'h541];
datamem_ext_i.datamem[13'h542] =
datamem_swap[16'h542];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #565
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE212;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #565)");
    end
end

unit.assert_eq16(16'hE212, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #565 760bfc5a-0b03-4421-94af-f2d1216552ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #565 1e7a19fa-0ab4-4684-83f7-295451c7e803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #565 a4c9def0-40cf-4f77-a63c-d33e611ea995)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #565 b555f9fb-6b60-4d3a-8ef0-842807f7e275)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #565 9d827686-6730-4b20-aa0c-7084487fa405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #565 48c3738f-cf38-4865-8e04-eaec928908d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #565 e469c6c7-204d-4cf6-b192-df636bb7c893)");

unit.assert_eq8(8'h12, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB9],
"INT DMEM (Testcase #565 2789b998-2a45-4b20-b8f4-572d0e82ad40)");
unit.assert_eq8(8'hE2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBA],
"INT DMEM (Testcase #565 41922a48-b072-4f6d-b24c-dcfcb8e2c2fa)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB9] =
datamem_swap[16'h1B9];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hBA] =
datamem_swap[16'h1BA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #566
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h48C4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #566)");
    end
end

unit.assert_eq16(16'h48C4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #566 624c0474-79f4-4f67-bcad-ae9f071a57f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #566 c874d4c8-3972-4e37-a654-205a9e316dab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #566 bda1dbd0-0768-4b5e-8c8e-b82389acf181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #566 0d3cc5f6-ffcb-4b65-b9f6-e800d6cfbe79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #566 cf22ad1d-b392-4f25-a444-207b153ee6b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #566 330324a4-d0fc-4ef7-8e34-b42fcc8a622a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #566 bd858ed2-4ca9-425b-a63e-922cf9a15514)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hABE],
"EXT DMEM (Testcase #566 1e96bccc-722b-413a-a108-764234c32aab)");
unit.assert_eq8(8'h48, datamem_ext_i.datamem[13'hABF],
"EXT DMEM (Testcase #566 663b8361-f517-476a-a139-bb3f9985ce0b)");
datamem_ext_i.datamem[13'hABE] =
datamem_swap[16'hABE];
datamem_ext_i.datamem[13'hABF] =
datamem_swap[16'hABF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #567
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D4C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #567)");
    end
end

unit.assert_eq16(16'h4D4C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #567 80a81b7d-e2c8-4d4c-ab4c-ad7275929e73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #567 ca276d4a-fb0c-4658-b624-d8e62abb14ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #567 932dd80c-7f7b-4483-9ad5-e93eeb272781)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #567 787ffe0a-3408-4f33-a346-910c8f8d696a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #567 9ca9cefc-3f33-4aad-8a85-82b105138be9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #567 31538072-6f47-47d8-8c11-298871ca584f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #567 7340dff7-af5d-4222-9644-8b76c1603e5c)");

unit.assert_eq8(8'h4C, datamem_ext_i.datamem[13'hD10],
"EXT DMEM (Testcase #567 1cbef2f6-fb09-4df3-843d-5b7b9e761839)");
unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'hD11],
"EXT DMEM (Testcase #567 d7e449ce-4af2-4ed0-a1f2-d115b7fcd08f)");
datamem_ext_i.datamem[13'hD10] =
datamem_swap[16'hD10];
datamem_ext_i.datamem[13'hD11] =
datamem_swap[16'hD11];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #568
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h77C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #568)");
    end
end

unit.assert_eq16(16'h77C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #568 a8834e15-0b9b-496b-a35c-cc2523be5598)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #568 2c03d3f2-d80d-4001-8c77-7f4e9cf4d8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #568 d04003ba-e19c-4bcc-922b-d3eb4cc048fc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #568 a59bc87c-125a-4a13-9d55-2938302d7428)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #568 3e9b3f4e-f024-4880-bb3e-b01c3c6291f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #568 3103f9b3-c93d-44c1-a562-ff90e2f2d4e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #568 7aca3b17-feba-4a2b-a746-6800838cd4c7)");

unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h96B],
"EXT DMEM (Testcase #568 edf066e0-6871-45c5-a5b2-17944f228f65)");
unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'h96C],
"EXT DMEM (Testcase #568 4ca1db41-7632-42fc-acf2-eb1fa3be5dc3)");
datamem_ext_i.datamem[13'h96B] =
datamem_swap[16'h96B];
datamem_ext_i.datamem[13'h96C] =
datamem_swap[16'h96C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #569
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC084;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #569)");
    end
end

unit.assert_eq16(16'hC084, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #569 82de7a28-3686-480f-81e4-0ac414d43d18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #569 ac3fd007-a12c-4583-876a-cb8627826277)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #569 8bf3ef5f-6472-4be3-8198-9b9ba0a347b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #569 030127ca-5b5a-47fc-a6c7-f08e77aa1f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #569 8b7a445b-edbc-46bf-8679-acc5fc00b656)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #569 45a35678-c152-401d-afed-7c41000eff21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #569 ba0a0b15-9cee-40e6-8232-9643357e968f)");

unit.assert_eq8(8'h84, datamem_ext_i.datamem[13'h665],
"EXT DMEM (Testcase #569 c1f5cb63-b5b7-47f2-8f35-a3c62c5ea0f7)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h666],
"EXT DMEM (Testcase #569 dbe4f6f8-fce4-4b09-b795-3e1672d749df)");
datamem_ext_i.datamem[13'h665] =
datamem_swap[16'h665];
datamem_ext_i.datamem[13'h666] =
datamem_swap[16'h666];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #570
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0869;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #570)");
    end
end

unit.assert_eq16(16'h0869, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #570 2b32dec7-564f-4e69-aa74-28ebd1302868)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #570 0422292d-749f-4e61-aa44-ac587000324b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #570 e7b89db1-bf51-4ca0-b556-1708c6e5d492)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #570 8ae4aabc-0f22-48e4-a49a-5b158fe06078)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #570 fa6775e3-d886-47d2-9053-6cdbc5e9979d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #570 c093845f-136c-4637-a56a-3c577a80d87f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #570 2946f927-8b3f-4a36-9d6b-d59965b5bf8d)");

unit.assert_eq8(8'h69, datamem_ext_i.datamem[13'hA43],
"EXT DMEM (Testcase #570 7bb3932f-64a8-4052-9b54-08e6bd70f8a1)");
unit.assert_eq8(8'h08, datamem_ext_i.datamem[13'hA44],
"EXT DMEM (Testcase #570 ed3fdc60-ceda-4de8-862d-b803597d9b1e)");
datamem_ext_i.datamem[13'hA43] =
datamem_swap[16'hA43];
datamem_ext_i.datamem[13'hA44] =
datamem_swap[16'hA44];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #571
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h46E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #571)");
    end
end

unit.assert_eq16(16'h46E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #571 99709ed9-9352-4c1e-a5a3-e54f4594cb47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #571 173f243f-c51d-4b7d-86d7-986ef7db9695)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #571 a94e2601-1070-4b34-a57d-e526c1c5c036)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #571 1081f9d5-b52c-46ee-b2b6-5ff844c30f09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #571 c1fe3fd4-651f-4cb1-9b7d-f33fdc6971a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #571 1a4d657e-951a-4008-a6ad-1b01aa10511f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #571 0a863176-2b12-49d1-b312-8fc3829f15f1)");

unit.assert_eq8(8'hE7, datamem_ext_i.datamem[13'h4E8],
"EXT DMEM (Testcase #571 d407139f-a65a-4e78-aeb1-eaec958dbbfd)");
unit.assert_eq8(8'h46, datamem_ext_i.datamem[13'h4E9],
"EXT DMEM (Testcase #571 dcd48dc1-a9a3-4d9f-b063-03964e026dcc)");
datamem_ext_i.datamem[13'h4E8] =
datamem_swap[16'h4E8];
datamem_ext_i.datamem[13'h4E9] =
datamem_swap[16'h4E9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #572
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4DE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #572)");
    end
end

unit.assert_eq16(16'h4DE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #572 7a4bebaa-aea4-4017-877f-78d4e1e8a151)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #572 9ac7b778-0793-4cdb-aff6-19f13947f689)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #572 b5d223f5-a082-4286-80d6-6d4a4ba4fefd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #572 394839af-7e35-4726-95d6-558a001c8d79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #572 5fd1dcf7-8a9c-48f6-85d6-7c681ebef672)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #572 916890d9-1069-498f-bf30-5ad88bcfad6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #572 bc33b035-a54e-431a-bc20-c47b963cebd4)");

unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'h3C3],
"EXT DMEM (Testcase #572 aaeeabfe-99c8-425d-b42e-8bfa8e6b8e39)");
unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'h3C4],
"EXT DMEM (Testcase #572 807045bb-06b1-40ee-8417-09b250be2e3a)");
datamem_ext_i.datamem[13'h3C3] =
datamem_swap[16'h3C3];
datamem_ext_i.datamem[13'h3C4] =
datamem_swap[16'h3C4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #573
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h438B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #573)");
    end
end

unit.assert_eq16(16'h438B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #573 01d1862f-bc1f-45eb-b0d0-b8132d43d0bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #573 3c71b71a-30a4-48d3-9933-6d020cea4337)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #573 cb255b41-a5ca-488d-a8dd-451b20bb6685)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #573 4e76735f-4f19-4fa4-bdbc-2e3a8ce623a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #573 fd5659db-d6b6-42b3-bf26-901f242a3ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #573 910b5568-43f2-43b0-8c89-76a8f0d545a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #573 af73b9e3-74bf-4b9c-beb5-13e0bd13a1c7)");

unit.assert_eq8(8'h8B, datamem_ext_i.datamem[13'hCA9],
"EXT DMEM (Testcase #573 9af0cdd8-7477-471c-8495-45ad4085086d)");
unit.assert_eq8(8'h43, datamem_ext_i.datamem[13'hCAA],
"EXT DMEM (Testcase #573 87b550b1-79a5-4686-b8fb-53e0e3c22b0c)");
datamem_ext_i.datamem[13'hCA9] =
datamem_swap[16'hCA9];
datamem_ext_i.datamem[13'hCAA] =
datamem_swap[16'hCAA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #574
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBD5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #574)");
    end
end

unit.assert_eq16(16'hBD5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #574 4900a5b4-d4ca-4465-852e-8f7af6122d68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #574 5678fa8c-8ebb-494d-92f8-e6f9d381ac4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #574 5b931dd2-57cb-482f-81d7-bff94a508257)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #574 3be5faf1-8f2e-4ccd-93b4-84c7bdbe1023)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #574 1022e09a-ae36-4f3e-9cec-f3d54265daa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #574 c8e1f6a5-9188-45e9-bc5c-54e4e77e7618)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #574 48a31626-f256-4fc3-955a-2582f1a27a8f)");

unit.assert_eq8(8'h5A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF4],
"INT DMEM (Testcase #574 f0082475-16e5-4e5d-8e09-1572b4187cf0)");
unit.assert_eq8(8'hBD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF5],
"INT DMEM (Testcase #574 8dfaed5d-14ea-4e22-9356-6fa2fd1ae966)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF4] =
datamem_swap[16'h1F4];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF5] =
datamem_swap[16'h1F5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #575
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #575)");
    end
end

unit.assert_eq16(16'hC0A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #575 3eb7cb81-d711-4f07-b153-1d649d9c5c17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #575 586f42fa-6df8-49a1-91af-19dfd3ce72f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #575 18c44c02-aa2c-46a0-acdf-f70aa83e9507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #575 b1c03ac1-9321-468c-bd65-8f23145c7523)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #575 8f35f142-5d44-441a-b2f0-ed2cb07ceb21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #575 ee2bca3f-24eb-41d5-a1f4-4daf39cebc41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #575 afc45918-6b19-4dd9-9b9f-d2cdb7c4a3d5)");

unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'h3D4],
"EXT DMEM (Testcase #575 51c700af-7f98-4902-9d6d-4b7d2866436c)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h3D5],
"EXT DMEM (Testcase #575 df2d9afe-f9fa-42d7-8573-aa6fc4935f8d)");
datamem_ext_i.datamem[13'h3D4] =
datamem_swap[16'h3D4];
datamem_ext_i.datamem[13'h3D5] =
datamem_swap[16'h3D5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #576
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDCED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #576)");
    end
end

unit.assert_eq16(16'hDCED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #576 b93b56af-9fd3-4927-820b-01ed1b8bfc60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #576 f365ca2b-55c5-459b-8e5b-26dd63162b6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #576 f453d63b-d4c8-4bb5-8131-66aaaf2b5405)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #576 c932d000-acb1-4ace-ab5d-4f9e6961f58a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #576 c2a2e533-6909-4d3e-b040-f74df890b7c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #576 d30478c9-c8a5-4f80-8226-faeb63df72f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #576 53613f00-9aa2-4061-8d54-83eeeaab8a67)");

unit.assert_eq8(8'hED, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA2],
"INT DMEM (Testcase #576 0040163e-cecc-458b-bf76-7b3c6e2439d7)");
unit.assert_eq8(8'hDC, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA3],
"INT DMEM (Testcase #576 2f7a241f-0fc6-450f-b603-4275e85bfd10)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA2] =
datamem_swap[16'h1A2];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA3] =
datamem_swap[16'h1A3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #577
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8BAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #577)");
    end
end

unit.assert_eq16(16'h8BAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #577 820c96b9-c184-42a4-9bd8-0f654d035d8f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #577 7b342a09-af41-44b5-8084-a230d84a40f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #577 e5186a6c-8c05-440a-843f-651e74af3d79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #577 cb7ad5c3-61b9-41c6-a044-872e8eab7661)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #577 3279ca3e-370c-46c5-bcfe-0bd038063983)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #577 ca136284-94ea-4151-83f7-384685dc11fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #577 216bbff5-50cf-44c1-b344-687f6097b9dc)");

unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h4F2],
"EXT DMEM (Testcase #577 46655e84-e9e3-45ba-9db7-5ad8b29b2dd0)");
unit.assert_eq8(8'h8B, datamem_ext_i.datamem[13'h4F3],
"EXT DMEM (Testcase #577 6e32e60b-3629-4d4f-b614-f1ac0a137296)");
datamem_ext_i.datamem[13'h4F2] =
datamem_swap[16'h4F2];
datamem_ext_i.datamem[13'h4F3] =
datamem_swap[16'h4F3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #578
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AFC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #578)");
    end
end

unit.assert_eq16(16'h0AFC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #578 3eb68544-cf1b-4ac1-882e-0c2e20895a1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #578 0b8280be-c6ba-431c-9df1-63c672c2d0ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #578 d9946e82-287d-416a-aa11-a954cbd9b4f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #578 3160c7bd-4e23-4125-8671-a1dc5ee92e28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #578 1efffbff-dc0b-4255-b65b-73e8e68307bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #578 c7edd41d-befe-4fd8-8853-518169290168)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #578 a53b4876-402d-44ae-97a4-3e5bc74a1def)");

unit.assert_eq8(8'hFC, datamem_ext_i.datamem[13'hC95],
"EXT DMEM (Testcase #578 04e0e2ad-4e54-4369-a8ee-ba196f69eef5)");
unit.assert_eq8(8'h0A, datamem_ext_i.datamem[13'hC96],
"EXT DMEM (Testcase #578 ace161d1-3898-4355-9dd8-1598c81716e0)");
datamem_ext_i.datamem[13'hC95] =
datamem_swap[16'hC95];
datamem_ext_i.datamem[13'hC96] =
datamem_swap[16'hC96];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #579
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #579)");
    end
end

unit.assert_eq16(16'h0857, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #579 1be56359-4e5b-4edc-aaba-a41436cef089)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #579 a263dedf-bcf1-477d-a450-f2604f28df56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #579 5ddb2739-8ae2-4f21-82d2-c59718edba87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #579 48aa0a21-1f5a-4188-a474-055bc065adbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #579 e169baf4-196d-4475-8a2d-0f6c1b98579d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #579 756b937c-98a4-47eb-af8c-89227692f55a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #579 e1476bfd-4284-4b84-9aa1-03a0301bea01)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'hFF0],
"EXT DMEM (Testcase #579 90e3abb1-f43d-43b5-83fb-f521487a16f7)");
unit.assert_eq8(8'h08, datamem_ext_i.datamem[13'hFF1],
"EXT DMEM (Testcase #579 decdfaa5-449a-4963-bd2e-7ab3af188b02)");
datamem_ext_i.datamem[13'hFF0] =
datamem_swap[16'hFF0];
datamem_ext_i.datamem[13'hFF1] =
datamem_swap[16'hFF1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #580
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE381;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #580)");
    end
end

unit.assert_eq16(16'hE381, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #580 55f0a32e-7930-443e-97e7-02f186c1e5b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #580 474331b4-c33a-46c4-b7ca-544368c136fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #580 225e7324-0c7e-4a84-8d19-b0f9dff8c86a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #580 e555cf8e-8d8c-4443-91fe-af44acfda2e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #580 6ab3a588-2a76-416f-9937-c4b6c9d8a967)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #580 9032d259-1e37-4e10-9b3c-d68a880f7708)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #580 304f2426-e184-4387-aafe-3b72556c5e7a)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'h89A],
"EXT DMEM (Testcase #580 ce3701cb-783c-4193-b3fd-27f56ac38cba)");
unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'h89B],
"EXT DMEM (Testcase #580 87036372-14e0-4b81-9fe0-ca6468ad12f8)");
datamem_ext_i.datamem[13'h89A] =
datamem_swap[16'h89A];
datamem_ext_i.datamem[13'h89B] =
datamem_swap[16'h89B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #581
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0CF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #581)");
    end
end

unit.assert_eq16(16'hB0CF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #581 02468202-1043-4734-910c-b817fb10fc5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #581 44aaf637-50d8-4d10-a847-5dfa2d8cc485)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #581 834cd64d-9cf2-4307-8b24-6fbeb689a206)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #581 70a16800-764b-4588-9e28-5a85b60f1bd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #581 dcf60ae6-f113-4cf7-a186-f95377c77030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #581 4c077995-1333-44fa-bfe7-03b0fd796027)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #581 394a0ea7-ea74-4716-8b47-d5cb15b5bc8c)");

unit.assert_eq8(8'hCF, datamem_ext_i.datamem[13'hBA5],
"EXT DMEM (Testcase #581 eefb14bd-5b5b-4939-aeb1-aeaba8057b43)");
unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hBA6],
"EXT DMEM (Testcase #581 45a537dd-03bf-49f9-bb12-ec0d77d2b4a8)");
datamem_ext_i.datamem[13'hBA5] =
datamem_swap[16'hBA5];
datamem_ext_i.datamem[13'hBA6] =
datamem_swap[16'hBA6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #582
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2927;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #582)");
    end
end

unit.assert_eq16(16'h2927, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #582 fad687a5-43c5-418d-b7af-a13c12968148)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #582 03733d06-d9d6-4bcf-95b7-46a7a2fa6c88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #582 1aa31277-da95-4394-8503-7379346a38d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #582 15ef8cc7-18dd-4447-b79f-0913d8214005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #582 c7be4b7c-5f6d-45e5-b166-8564a72e92f6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #582 966633f6-13a1-41bf-b08a-fd810d24a0a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #582 40f6fdb7-0573-4fac-b119-de15d0dfae5b)");

unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'hC6B],
"EXT DMEM (Testcase #582 19b1f79d-bfa5-447a-8214-87c99424be3b)");
unit.assert_eq8(8'h29, datamem_ext_i.datamem[13'hC6C],
"EXT DMEM (Testcase #582 55ca6644-40ac-4990-8cd1-ba270dd2e0d6)");
datamem_ext_i.datamem[13'hC6B] =
datamem_swap[16'hC6B];
datamem_ext_i.datamem[13'hC6C] =
datamem_swap[16'hC6C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #583
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD98F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #583)");
    end
end

unit.assert_eq16(16'hD98F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #583 8e155802-90a7-4682-b41e-452315322945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #583 2c7c9c4a-a151-421f-9f1c-4b61b66b70dd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #583 25ccfed0-4e86-4e0c-93de-bb0672baa344)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #583 6bc45d17-f961-4a66-aafa-438647104229)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #583 4ef2cb5f-e561-4547-a35a-62e947dea63c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #583 897da1ce-190d-4754-b195-d58356d149b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #583 3b46a88f-fc75-4c68-9736-134a8aecc308)");

unit.assert_eq8(8'h8F, datamem_ext_i.datamem[13'hFAE],
"EXT DMEM (Testcase #583 3559dbb4-a39b-4270-a26c-48cfb18e17ea)");
unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'hFAF],
"EXT DMEM (Testcase #583 a4ebc329-0363-4f93-ad27-d17ca6d99eea)");
datamem_ext_i.datamem[13'hFAE] =
datamem_swap[16'hFAE];
datamem_ext_i.datamem[13'hFAF] =
datamem_swap[16'hFAF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #584
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9705;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #584)");
    end
end

unit.assert_eq16(16'h9705, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #584 6219e229-39ad-4414-946d-4114568c7156)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #584 84a37bb2-bb91-4593-ae1d-22999ac5816b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #584 1a3a6197-c6d0-4944-9ada-6337824bd3d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #584 d0971e2d-1bb0-42a2-bfda-4f948517de92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #584 358634a3-84d5-4156-8db2-64c73f6fa647)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #584 9f2791ad-6b62-4cc1-ab93-6c7e287d5c0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #584 51b70bd6-44b8-4898-b6f1-2cb221ecd9b0)");

unit.assert_eq8(8'h05, datamem_ext_i.datamem[13'hBBD],
"EXT DMEM (Testcase #584 dbd3771e-bba2-4c1e-b13a-f2d169b5a70b)");
unit.assert_eq8(8'h97, datamem_ext_i.datamem[13'hBBE],
"EXT DMEM (Testcase #584 de3b1823-5186-437a-b5d4-9980b89fcef3)");
datamem_ext_i.datamem[13'hBBD] =
datamem_swap[16'hBBD];
datamem_ext_i.datamem[13'hBBE] =
datamem_swap[16'hBBE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #585
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE868;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #585)");
    end
end

unit.assert_eq16(16'hE868, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #585 cbe5a047-c15d-42be-a823-51a25d6466f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #585 fbdd539b-a0bf-4cf7-98e5-158f73268dc0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #585 623af402-ca24-44fc-8eea-0e1ee077ac4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #585 f91df534-78d0-4bbc-8989-b39ef4d6a242)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #585 6548c4e6-e897-4727-b80a-0cc1cfa73ee4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #585 f15d17db-7746-4ab0-b7cf-b94ad15e496a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #585 bf173830-4f3c-4146-b10b-a92cc5712a12)");

unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'h8A0],
"EXT DMEM (Testcase #585 7b8e1981-77f8-4312-bbd3-4b5ff49475cf)");
unit.assert_eq8(8'hE8, datamem_ext_i.datamem[13'h8A1],
"EXT DMEM (Testcase #585 cf745ee6-9d3e-4a0a-8a99-f8e9d20b3e05)");
datamem_ext_i.datamem[13'h8A0] =
datamem_swap[16'h8A0];
datamem_ext_i.datamem[13'h8A1] =
datamem_swap[16'h8A1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #586
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB255;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #586)");
    end
end

unit.assert_eq16(16'hB255, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #586 a45bdd6a-9a45-42ba-937d-8b7930637136)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #586 76d31c6b-d07e-49b4-9fb1-44cbab93782c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #586 38826ef0-04d8-4149-ad65-e5fa772bfce4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #586 7e639367-1e6d-428b-9cd0-fd2b98717d7a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #586 c7c596ef-74e6-4a1e-928b-9cc454c5813c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #586 e9d5c908-6352-4597-8bab-a28fd6418bd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #586 6403904c-64cd-4479-92f2-276dca032db2)");

unit.assert_eq8(8'h55, datamem_ext_i.datamem[13'hD7D],
"EXT DMEM (Testcase #586 27dc1d65-2fd8-4701-938e-7c84554a0814)");
unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'hD7E],
"EXT DMEM (Testcase #586 b38613b3-7ca6-4e40-b6a0-a245ef2d992c)");
datamem_ext_i.datamem[13'hD7D] =
datamem_swap[16'hD7D];
datamem_ext_i.datamem[13'hD7E] =
datamem_swap[16'hD7E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #587
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC3AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #587)");
    end
end

unit.assert_eq16(16'hC3AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #587 c426ef8f-4424-4c04-b434-46b9675da9ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #587 f931dc88-0e17-4b76-b9af-6f7f356e448f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #587 73c5a182-919e-4594-9593-3e36c9dc2760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #587 b8265696-9d36-4372-8aa1-4bbd64f66a96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #587 17783da1-704c-4b49-8ff9-7580b13408be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #587 2c4b1cf1-d346-43bf-8f3e-ef0109f421d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #587 e5f780fd-c5a8-41c0-8385-499c6829b72a)");

unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h28F],
"EXT DMEM (Testcase #587 1d44f528-3a08-4645-9caf-746dcbbcd1c1)");
unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'h290],
"EXT DMEM (Testcase #587 490fd8ed-55b3-41a8-9849-0ea6da4f3312)");
datamem_ext_i.datamem[13'h28F] =
datamem_swap[16'h28F];
datamem_ext_i.datamem[13'h290] =
datamem_swap[16'h290];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #588
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hADE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #588)");
    end
end

unit.assert_eq16(16'hADE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #588 de1ae11c-cbd3-4132-93ca-f22d2e2ea680)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #588 cdcc136c-0c85-45e9-9861-dbf1a3c49875)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #588 60144bde-34b2-4653-9fc8-16ff9b4887c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #588 216845cf-5907-4f01-aa88-d5ac0dc4f77a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #588 3fa92bac-eb89-4c9c-b9fa-e72df0eca46d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #588 6961fad4-21a8-4964-b45f-07551fac195b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #588 3aef9704-b414-454c-a6fa-b37216a18a5a)");

unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'h454],
"EXT DMEM (Testcase #588 ca364b05-a686-4cea-a7a3-23f8ddf78754)");
unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h455],
"EXT DMEM (Testcase #588 aa4bfec3-7561-4837-b6a3-0730227444ae)");
datamem_ext_i.datamem[13'h454] =
datamem_swap[16'h454];
datamem_ext_i.datamem[13'h455] =
datamem_swap[16'h455];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #589
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7B0B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #589)");
    end
end

unit.assert_eq16(16'h7B0B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #589 20c55388-fe94-40c3-9b75-0835a9e8abfe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #589 c7484511-cab9-46b4-870e-c19b8e0ac744)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #589 d068cf51-ec9c-4779-ba89-c7abfb7173ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #589 eabdcd5f-ae41-4245-8fd7-696013f53a43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #589 fc8f042f-162d-4835-aad8-a492186728ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #589 adf8a033-ddce-40f0-8bba-58169fb2d3fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #589 17b4c2ad-ab72-43d8-9429-cf8ee9079ca5)");

unit.assert_eq8(8'h0B, datamem_ext_i.datamem[13'hCEF],
"EXT DMEM (Testcase #589 76d8b71c-f5b3-4716-a65c-af9fee431415)");
unit.assert_eq8(8'h7B, datamem_ext_i.datamem[13'hCF0],
"EXT DMEM (Testcase #589 2ef1c9ef-43a5-4137-bbad-69e58306c6fa)");
datamem_ext_i.datamem[13'hCEF] =
datamem_swap[16'hCEF];
datamem_ext_i.datamem[13'hCF0] =
datamem_swap[16'hCF0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #590
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3211;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #590)");
    end
end

unit.assert_eq16(16'h3211, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #590 62235172-be34-40d6-8852-fe7403d28d07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #590 5858b541-f76b-4030-9ad0-179bcfc43e1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #590 5dd0fdb5-88bf-4309-9530-73a95af4983f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #590 89113dc8-a708-43f9-a495-a8456c3306e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #590 c58b473e-1f61-412b-ba35-ce8972d18d96)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #590 bd39cd91-14b0-4f51-aed9-eaa001ffbb3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #590 10be3c26-7cfe-414f-9c4d-22cbaf5b1fda)");

unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'hB4D],
"EXT DMEM (Testcase #590 8f44761d-4521-4710-af03-7d8e6e0c6b15)");
unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'hB4E],
"EXT DMEM (Testcase #590 4f69da3d-3c24-4567-8b3c-74168b81002e)");
datamem_ext_i.datamem[13'hB4D] =
datamem_swap[16'hB4D];
datamem_ext_i.datamem[13'hB4E] =
datamem_swap[16'hB4E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #591
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7378;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #591)");
    end
end

unit.assert_eq16(16'h7378, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #591 2e729c97-c37b-4e41-98b5-935db2669c24)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #591 baf1e691-5d74-418e-852c-0739269f32a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #591 c2e674ad-17b4-42c0-b717-b12d19eb0c87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #591 3f53308a-a0a6-4575-b6e9-270b5f421e5c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #591 daa2268b-36e2-4f6f-98e2-c2f1f1cf0281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #591 3339471f-93f6-4687-b308-2495bf28eb99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #591 2830c0d2-f01a-4f66-8a34-1988462ede16)");

unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'hDDA],
"EXT DMEM (Testcase #591 3f042e31-afc2-4f16-8425-94d85b7495dd)");
unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'hDDB],
"EXT DMEM (Testcase #591 27845679-55c4-47da-a1be-df77edf0b384)");
datamem_ext_i.datamem[13'hDDA] =
datamem_swap[16'hDDA];
datamem_ext_i.datamem[13'hDDB] =
datamem_swap[16'hDDB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #592
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBCA9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #592)");
    end
end

unit.assert_eq16(16'hBCA9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #592 2c3aef3b-3acb-440e-98c2-c01098505605)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #592 a21661f9-ea44-4eca-a154-180c07c8331a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #592 e3bb954a-8657-467d-8e9d-5f8e38e6a9bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #592 6bd85f99-4cc2-4039-8a31-bd3bde0298e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #592 770f89cf-1cc3-4790-87a4-b492d998912d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #592 cab2c44a-4651-4ae2-ac82-62e2cdd61a7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #592 326222f4-de1e-4b51-8507-a215a7953a98)");

unit.assert_eq8(8'hA9, datamem_ext_i.datamem[13'h6C4],
"EXT DMEM (Testcase #592 4eab20d4-004d-44e1-abee-67aa9f168597)");
unit.assert_eq8(8'hBC, datamem_ext_i.datamem[13'h6C5],
"EXT DMEM (Testcase #592 87c14632-67cc-46cf-a02b-47f988ac1f3e)");
datamem_ext_i.datamem[13'h6C4] =
datamem_swap[16'h6C4];
datamem_ext_i.datamem[13'h6C5] =
datamem_swap[16'h6C5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #593
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h78A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #593)");
    end
end

unit.assert_eq16(16'h78A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #593 febae058-e89e-4f89-8ad5-03b679111bd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #593 325a3971-54dc-44d5-a862-099d1b01b2ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #593 f4e936bb-15d0-41bb-8fbd-c4477696643d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #593 59f38e99-5841-4868-9a75-773e08001719)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #593 04296cc3-08c4-43dd-9497-6c7248e9ed1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #593 84d5aec4-8988-42aa-b8b4-5cfbf3ae4597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #593 a6b83057-803b-4ff9-b965-9e12d929c4d0)");

unit.assert_eq8(8'hA3, datamem_ext_i.datamem[13'h326],
"EXT DMEM (Testcase #593 3bb19e6c-b665-4e4c-9654-6a1996e6c90a)");
unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'h327],
"EXT DMEM (Testcase #593 ba971d33-e449-4566-a9ce-26195f2c6eaa)");
datamem_ext_i.datamem[13'h326] =
datamem_swap[16'h326];
datamem_ext_i.datamem[13'h327] =
datamem_swap[16'h327];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #594
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAEF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #594)");
    end
end

unit.assert_eq16(16'hAEF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #594 5021a0c7-c2ce-4977-a8aa-07f15d3a8f4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #594 dd280d3d-0a39-44da-bba6-02a2c62079ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #594 bd44dcdf-609c-44f0-b221-57c1bd418900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #594 6c013bd3-7540-4a06-9489-d4646bc1d6b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #594 f5ad33db-51d1-4e39-93e8-c6890c77e80f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #594 619a4103-4fa6-46f1-9de3-d832828f62e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #594 73129152-5699-47d9-befa-4b5328ab94f5)");

unit.assert_eq8(8'hF7, datamem_ext_i.datamem[13'hFBA],
"EXT DMEM (Testcase #594 c722ad6a-608d-4560-9cfc-02c1c910ed40)");
unit.assert_eq8(8'hAE, datamem_ext_i.datamem[13'hFBB],
"EXT DMEM (Testcase #594 fd26f357-eb49-42d2-9f3e-f0fd24613077)");
datamem_ext_i.datamem[13'hFBA] =
datamem_swap[16'hFBA];
datamem_ext_i.datamem[13'hFBB] =
datamem_swap[16'hFBB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #595
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEE20;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #595)");
    end
end

unit.assert_eq16(16'hEE20, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #595 a6e8b623-a686-45ea-b511-20f87071e8a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #595 36b4dc1e-b353-4cc3-b032-36607c417dac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #595 b8050d4b-677f-44b3-8034-159fa47f388e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #595 f91d9984-0e59-4852-9bb7-0cac4503f522)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #595 cf9f521a-36aa-4318-b66a-2dec4a256a1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #595 d0a39a07-8745-4764-8b90-703d0e2c65fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #595 4cc7a90f-d613-42c6-beff-8b518cfaae8d)");

unit.assert_eq8(8'h20, datamem_ext_i.datamem[13'hDD7],
"EXT DMEM (Testcase #595 3cdb0969-ce66-4ea5-9364-2c354858023c)");
unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'hDD8],
"EXT DMEM (Testcase #595 34f5f244-cac8-46b4-9adf-511e877b7719)");
datamem_ext_i.datamem[13'hDD7] =
datamem_swap[16'hDD7];
datamem_ext_i.datamem[13'hDD8] =
datamem_swap[16'hDD8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #596
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9568;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #596)");
    end
end

unit.assert_eq16(16'h9568, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #596 76911806-e492-4080-bd45-47c2cb97fbee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #596 fa169952-c822-44a3-a137-3f385772245f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #596 4090f17b-721e-4fdb-a11d-83952ae0dbc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #596 77862f1f-b236-4e17-be1c-858f7ec0e876)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #596 59cd28fa-76b8-487b-881b-918bfcf8a23b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #596 6c1fb204-f80e-490b-80b0-a104002698a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #596 dfdba12b-df16-4f54-87dc-5fe222b25c10)");

unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'h278],
"EXT DMEM (Testcase #596 ca58d4b8-33c9-46ed-b54b-2586a157b14d)");
unit.assert_eq8(8'h95, datamem_ext_i.datamem[13'h279],
"EXT DMEM (Testcase #596 fb348e3f-e1c2-458e-b7b5-030bfa18a570)");
datamem_ext_i.datamem[13'h278] =
datamem_swap[16'h278];
datamem_ext_i.datamem[13'h279] =
datamem_swap[16'h279];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #597
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #597)");
    end
end

unit.assert_eq16(16'h0D45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #597 08535137-cde8-49ae-adc1-ae1386471c46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #597 511b7967-f270-4a8f-b126-97136861c3f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #597 af3ba36c-f453-4ece-bcab-a8bb546feeb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #597 fc0651d9-ecc1-4768-a105-1bf491b9d419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #597 9e0812bb-da68-4ad5-a21d-20d452bdd2e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #597 cb51c85e-659d-4939-826d-c89b700ff2f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #597 4973a130-340a-428b-9abd-813515ea4d32)");

unit.assert_eq8(8'h45, datamem_ext_i.datamem[13'h918],
"EXT DMEM (Testcase #597 a577e376-9fa0-4911-9a81-e1733d27aa2b)");
unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'h919],
"EXT DMEM (Testcase #597 1b49eafa-d885-4159-8243-bc9fb64c3c58)");
datamem_ext_i.datamem[13'h918] =
datamem_swap[16'h918];
datamem_ext_i.datamem[13'h919] =
datamem_swap[16'h919];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #598
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h698C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #598)");
    end
end

unit.assert_eq16(16'h698C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #598 0e575305-4631-40f6-85d2-21a373457b7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #598 890f9c88-1344-4d56-b9a3-99f86b628bbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #598 0b8fc732-f164-4aa9-a715-fc0e87ac2bb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #598 c0fe11a8-7a05-4703-a902-97d2663bbfb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #598 661bd1b8-c2cb-46f8-92b2-adeb253d6206)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #598 36ef6e71-e2b1-4865-b682-a28427fc1ff9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #598 46ad5e8b-bf81-420f-b25c-80bd581ec740)");

unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'hD33],
"EXT DMEM (Testcase #598 f3fda10e-02e2-4eb8-a686-5bea84d045bd)");
unit.assert_eq8(8'h69, datamem_ext_i.datamem[13'hD34],
"EXT DMEM (Testcase #598 b3da0b27-9123-4a53-be2f-5fea7eedf9fd)");
datamem_ext_i.datamem[13'hD33] =
datamem_swap[16'hD33];
datamem_ext_i.datamem[13'hD34] =
datamem_swap[16'hD34];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #599
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0674;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #599)");
    end
end

unit.assert_eq16(16'h0674, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #599 45bb482b-6e24-4ada-b13b-8f96b6b46f1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #599 9d9cb3bf-f3b1-4520-9556-bfac7a08250f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #599 25394096-30f4-4e52-b59f-a2e2401affca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #599 a3dfecd9-55fd-40a6-a973-5b24396f37db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #599 efaccced-2ddf-470e-9c7d-e997875fdc1a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #599 84d3479b-da05-41d7-9bc8-cf276b3cbffc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #599 9eca4594-74b8-41fd-bd02-5ec8bfd33f9c)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h3CE],
"EXT DMEM (Testcase #599 3678fbe2-6fb0-4325-9300-69bab68656fe)");
unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h3CF],
"EXT DMEM (Testcase #599 884f0479-baec-4e6e-afb5-998ad0b8aa15)");
datamem_ext_i.datamem[13'h3CE] =
datamem_swap[16'h3CE];
datamem_ext_i.datamem[13'h3CF] =
datamem_swap[16'h3CF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #600
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBBEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #600)");
    end
end

unit.assert_eq16(16'hBBEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #600 45fb72de-67a7-4e2b-be50-cadb9d91be06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #600 57818ef3-af5d-4bed-93d2-b38b6e1afdb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #600 af0b69d1-b536-4ebc-bfc8-bcc0b28b80b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #600 9d313c69-4127-40d0-9c0e-46f7e4271a11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #600 73effe24-c0e2-4706-86a9-5caaf462e6bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #600 b495b1d6-ac96-45e9-9f30-712a5a8cb7af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #600 8f37ab05-e8b4-4b0e-bb2c-2bf957eccf62)");

unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'h28A],
"EXT DMEM (Testcase #600 fd790bf8-e52f-4c7b-a5d5-114ab0fd8474)");
unit.assert_eq8(8'hBB, datamem_ext_i.datamem[13'h28B],
"EXT DMEM (Testcase #600 43bc3f88-c36e-4545-b1db-a18acaf6cd73)");
datamem_ext_i.datamem[13'h28A] =
datamem_swap[16'h28A];
datamem_ext_i.datamem[13'h28B] =
datamem_swap[16'h28B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #601
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4F6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #601)");
    end
end

unit.assert_eq16(16'h4F6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #601 81e14bbe-d4d4-4069-8aba-f5fbc0b7c4cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #601 d92e03d5-765f-45d2-a1d1-d698509631b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #601 f1680f94-00d0-44d4-9724-3a3072098116)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #601 e91c49b7-a563-4586-9531-4a5aeb60f7db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #601 339cdd32-bd77-478d-ad16-5e95b183ed9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #601 26e5c9dd-1048-4e9e-82d5-4541aa1a3eb8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #601 21fa6be3-460a-457f-af27-26d4e5f1a464)");

unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'h9BC],
"EXT DMEM (Testcase #601 94e4c5cd-db80-4bb0-914d-0e8d9b85a2f8)");
unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'h9BD],
"EXT DMEM (Testcase #601 35031e22-a0ee-4fb6-ad23-d2e536fcd74b)");
datamem_ext_i.datamem[13'h9BC] =
datamem_swap[16'h9BC];
datamem_ext_i.datamem[13'h9BD] =
datamem_swap[16'h9BD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #602
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB3BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #602)");
    end
end

unit.assert_eq16(16'hB3BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #602 08b5b11c-6602-4daa-bbe8-54afeb8b983e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #602 969e6262-0240-4f99-b2a4-d56cf4b5cf27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #602 e1b97442-0f42-46b3-a475-036fc855a3a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #602 7571d7bd-52a9-4663-92be-f67e5ce4d624)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #602 cdee8fb4-2f61-4eed-9776-ce146d3a441b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #602 db777aaa-8952-44eb-aa99-37a5a9780f15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #602 6c44a5c4-0e05-4536-9a5f-72165d46020c)");

unit.assert_eq8(8'hBC, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h43],
"INT DMEM (Testcase #602 ff6caaf3-5ec5-44c3-8822-e2ca89338ccb)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h44],
"INT DMEM (Testcase #602 90b678da-b911-4e34-86f8-99b325c8c3f5)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h43] =
datamem_swap[16'h43];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h44] =
datamem_swap[16'h44];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #603
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h30A1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #603)");
    end
end

unit.assert_eq16(16'h30A1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #603 15d90408-a392-4ed0-9c1f-dac9790b12ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #603 78b6a9f6-1a36-4ff5-8c1f-a1bc45e08bee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #603 64c3735b-8512-4836-9860-04afa99e5a25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #603 e8581c2c-046b-445f-92a3-bd9a84005b50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #603 ad369d33-2274-41fb-97fd-0b13f47a6049)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #603 f1c2da00-b03c-4360-a078-5b453dde5294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #603 14ccf611-b3dc-4bd2-8954-7f554a658570)");

unit.assert_eq8(8'hA1, datamem_ext_i.datamem[13'h484],
"EXT DMEM (Testcase #603 20c1c163-e7b7-4fd7-a1cd-ce1dad362901)");
unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'h485],
"EXT DMEM (Testcase #603 3cf9ebf5-62a0-4af8-8dd8-b665a128d5f6)");
datamem_ext_i.datamem[13'h484] =
datamem_swap[16'h484];
datamem_ext_i.datamem[13'h485] =
datamem_swap[16'h485];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #604
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFEF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #604)");
    end
end

unit.assert_eq16(16'hBFEF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #604 7a251b9a-fe3f-4747-a973-e6d3313fad01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #604 d33511cc-3975-4237-90f7-fcfe550ba317)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #604 66e08815-6a6c-4139-910d-952f037c6438)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #604 8e5ad1c6-5b95-442f-b43d-6b51f16d9d48)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #604 cdd6d028-e132-47f1-aed6-e66859345152)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #604 089c552b-45ad-4c1c-a478-043db5fac04d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #604 74d596b6-a58d-48f6-bd6b-08d9c210bbab)");

unit.assert_eq8(8'hEF, datamem_ext_i.datamem[13'h66C],
"EXT DMEM (Testcase #604 14188d3a-0863-4e3d-9f66-0d99f178d893)");
unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'h66D],
"EXT DMEM (Testcase #604 1c4e96df-bdd4-4e1b-9618-56adaa7c6c3f)");
datamem_ext_i.datamem[13'h66C] =
datamem_swap[16'h66C];
datamem_ext_i.datamem[13'h66D] =
datamem_swap[16'h66D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #605
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA98D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #605)");
    end
end

unit.assert_eq16(16'hA98D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #605 357b6356-5763-4f2c-b0aa-a8ed4a71b472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #605 d3229442-dbfc-45c2-856c-608304d6a470)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #605 5b99e2e6-4bd8-416a-bc00-374fffbdd3df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #605 1ced77b0-7811-4865-a182-01c1b407fee7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #605 467377c5-bcd9-4fe7-8081-8e6b8f53aa74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #605 0c4008b9-a03d-41bb-9d4f-f707f3c5a4d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #605 89276720-8899-40a4-891d-1b17bacad669)");

unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'h70C],
"EXT DMEM (Testcase #605 fc279f43-e1e6-4e2b-8a34-21f2f7bdc2fc)");
unit.assert_eq8(8'hA9, datamem_ext_i.datamem[13'h70D],
"EXT DMEM (Testcase #605 9e25eeb0-40c3-441e-8f11-e76c7da11041)");
datamem_ext_i.datamem[13'h70C] =
datamem_swap[16'h70C];
datamem_ext_i.datamem[13'h70D] =
datamem_swap[16'h70D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #606
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6310;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #606)");
    end
end

unit.assert_eq16(16'h6310, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #606 3aaf0fd5-4a55-42eb-bbd0-f72d116f0841)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #606 4f1de8f0-e2cb-44fd-8d44-e0a8869d8040)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #606 63a64576-b926-4945-8e48-a45400bb77fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #606 2d2b9c85-86eb-4d8d-a484-56e9620b0ac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #606 6506894d-715d-4469-a44f-a9720f672b62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #606 16daa9c6-7106-446f-beb5-0147258f54b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #606 6765b7ce-4509-447e-815c-2032d859fce3)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'h309],
"EXT DMEM (Testcase #606 4701c4e9-232a-4ed3-a41c-372353bd79e5)");
unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'h30A],
"EXT DMEM (Testcase #606 e95bdf3b-4d99-4815-82ec-aab69b05e88f)");
datamem_ext_i.datamem[13'h309] =
datamem_swap[16'h309];
datamem_ext_i.datamem[13'h30A] =
datamem_swap[16'h30A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #607
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h63AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #607)");
    end
end

unit.assert_eq16(16'h63AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #607 2830afbd-bddd-4bea-b3d9-f370dc6ae62c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #607 2b50b9d8-1636-40a9-81ce-6204dc1ad087)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #607 357087a1-237d-4243-98f9-d744d4b10526)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #607 5564c98a-76b1-40d0-af3f-5a6f6d1f3dc9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #607 c063edaa-dc5b-42d8-b28c-820b56edf632)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #607 5b2c70d8-68a6-4195-b9d7-48a1c382635a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #607 45b846ca-06df-4fd7-982f-3e7661691b30)");

unit.assert_eq8(8'hAE, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1E],
"INT DMEM (Testcase #607 d3e42eca-3f49-4184-8e47-6412e52cb70b)");
unit.assert_eq8(8'h63, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1F],
"INT DMEM (Testcase #607 7f33fbf1-d5c4-4162-bc50-bdbe152f6a9f)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1E] =
datamem_swap[16'h1E];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1F] =
datamem_swap[16'h1F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #608
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA52D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #608)");
    end
end

unit.assert_eq16(16'hA52D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #608 47981209-bbcc-414a-9740-2b4cc81f1679)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #608 e7261ef5-fd77-4d6d-9d05-e4c2c59514e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #608 266aad0e-b5d0-4142-a8a6-c4115eeb3007)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #608 048044fd-7163-4a7b-9cbe-d769f2fff467)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #608 2a777db0-331b-4ee5-8a5e-32992558c5ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #608 a19265f6-5745-407b-a14b-c661403f86a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #608 4b9bf999-1049-443e-b75b-0a743de60ca7)");

unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'h2F2],
"EXT DMEM (Testcase #608 ba9dcb83-287f-4919-a8b1-e1c0e96f84a8)");
unit.assert_eq8(8'hA5, datamem_ext_i.datamem[13'h2F3],
"EXT DMEM (Testcase #608 ef9deeba-2359-4299-bd67-ca2fefcc374c)");
datamem_ext_i.datamem[13'h2F2] =
datamem_swap[16'h2F2];
datamem_ext_i.datamem[13'h2F3] =
datamem_swap[16'h2F3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #609
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4FC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #609)");
    end
end

unit.assert_eq16(16'h4FC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #609 7e9b22ea-e956-4be1-bb0a-b1575074711f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #609 38438095-c56a-4261-b08f-d239610cbb01)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #609 f50d83ef-b792-4e32-9b78-c4e5cafe33a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #609 2700c34b-9965-483b-a872-0a9f0ff15964)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #609 7da9e6a6-5bc9-459d-974d-843553f7bdac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #609 3c61195f-e038-4064-bfb0-380644336434)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #609 810732e0-3c8d-4b0a-989c-8673e9f998fc)");

unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'hCF0],
"EXT DMEM (Testcase #609 6cf1d65e-8adc-4849-baa5-7f74a5ce266b)");
unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'hCF1],
"EXT DMEM (Testcase #609 fc8b6cc7-a0b2-46a8-bb49-b66d857e59c6)");
datamem_ext_i.datamem[13'hCF0] =
datamem_swap[16'hCF0];
datamem_ext_i.datamem[13'hCF1] =
datamem_swap[16'hCF1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #610
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3058;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #610)");
    end
end

unit.assert_eq16(16'h3058, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #610 ed3ec9cc-da9f-451f-bb57-7ddf1d9eeb1b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #610 d741d786-a5ec-4d0a-9f94-a8764a3f04bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #610 640b4411-0ea6-4d46-afe4-13738798fbdf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #610 f7f48482-eb81-4373-90a4-6a4cf11e9906)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #610 fb75e5c8-b911-42a3-8195-3aa957f98e00)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #610 206e68a1-e4e8-44f7-90dc-ed21a4c039f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #610 ddfc0f65-261c-4387-b0ee-b6c98bde6fea)");

unit.assert_eq8(8'h58, datamem_ext_i.datamem[13'h35F],
"EXT DMEM (Testcase #610 ed33c119-7e3c-4d5c-9770-e616a8cf3334)");
unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'h360],
"EXT DMEM (Testcase #610 4ec4c973-c734-4cb0-9dbc-52514c0733f1)");
datamem_ext_i.datamem[13'h35F] =
datamem_swap[16'h35F];
datamem_ext_i.datamem[13'h360] =
datamem_swap[16'h360];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #611
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h76A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #611)");
    end
end

unit.assert_eq16(16'h76A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #611 9aecaa6e-d31b-4514-abde-0c162a9c76d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #611 65b59247-5c8b-4e1b-b505-ad217067a57c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #611 0153197d-06ef-4640-a25b-e032fd73d2b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #611 5a48a8f7-9a77-4f61-ae13-adb95c457294)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #611 c6b8719d-d5d5-47b0-b2c3-f228ff721030)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #611 1b6ac857-b340-4206-85d6-2cb256a71748)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #611 3800b066-03cc-4de6-af8c-0a11e4579dd1)");

unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'h72B],
"EXT DMEM (Testcase #611 12b14225-52f1-4300-b500-b95661cb1136)");
unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'h72C],
"EXT DMEM (Testcase #611 ab5cae4c-b871-40dd-9e2e-dca87d3806be)");
datamem_ext_i.datamem[13'h72B] =
datamem_swap[16'h72B];
datamem_ext_i.datamem[13'h72C] =
datamem_swap[16'h72C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #612
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC76;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #612)");
    end
end

unit.assert_eq16(16'hDC76, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #612 5c638b0f-7782-47d2-938d-8618d363e57b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #612 aa35648c-59f0-4f45-858f-d79ceeee2628)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #612 4535f3a7-3c5c-4768-9291-027ef0b08213)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #612 a6ecb399-e2b3-4f6e-9943-df15f2d02a99)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #612 cbf2ae6f-0c5c-4c75-a60e-3baacf0702bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #612 65424210-8a76-4f87-8c7f-b6b5e0a2caae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #612 7bd8ee99-c5e8-411f-95ba-066c2fef744b)");

unit.assert_eq8(8'h76, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h31],
"INT DMEM (Testcase #612 97ce915b-dd0b-41e2-bbf7-cbac3d44c549)");
unit.assert_eq8(8'hDC, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h32],
"INT DMEM (Testcase #612 66778e48-f903-4141-ab4c-0f0d8d0b018d)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h31] =
datamem_swap[16'h131];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h32] =
datamem_swap[16'h132];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #613
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1DD8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #613)");
    end
end

unit.assert_eq16(16'h1DD8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #613 37f23dc8-1fea-4c82-a26a-87f97997cae3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #613 a661cfcd-5d0a-49b0-a103-53c1d8d8f40c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #613 d7aa6556-1e56-42a6-8cc1-0f4a21cc6049)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #613 1f448ed8-d1f1-47af-a9a7-80aae2a58876)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #613 3f698c72-f629-4ce5-b84c-12f3ffde8fc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #613 9e63260f-3ae2-4637-a45b-c4420b00373c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #613 874fb3e4-86ee-401e-8b26-102be758cb3c)");

unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'h653],
"EXT DMEM (Testcase #613 3d73ef26-f3de-426f-8ed8-c31ba90ea626)");
unit.assert_eq8(8'h1D, datamem_ext_i.datamem[13'h654],
"EXT DMEM (Testcase #613 0e6992b6-a2a3-4f96-9d6f-eddd91f1a30d)");
datamem_ext_i.datamem[13'h653] =
datamem_swap[16'h653];
datamem_ext_i.datamem[13'h654] =
datamem_swap[16'h654];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #614
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD2B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #614)");
    end
end

unit.assert_eq16(16'hD2B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #614 b0eefbc8-0725-4a2a-a550-7dc7a5abd75d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #614 f2f7edd5-ec6e-4cf7-929c-39e77cbe540b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #614 e7392a09-46bc-4f1d-914d-cdb139e5e035)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #614 2dac2cf5-9629-428a-b45f-a038151e1de0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #614 07bb56d8-b927-4c92-a3b1-c9e53478c162)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #614 46f38d68-83f2-458b-9a36-447f5a77e9e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #614 4efa1b5b-85a9-421d-b822-58876e08d2bc)");

unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'h397],
"EXT DMEM (Testcase #614 bfa03036-3f48-484b-b9af-85f4f8aa970c)");
unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h398],
"EXT DMEM (Testcase #614 1ca33ef8-7c1c-41b7-9189-d45a42c59746)");
datamem_ext_i.datamem[13'h397] =
datamem_swap[16'h397];
datamem_ext_i.datamem[13'h398] =
datamem_swap[16'h398];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #615
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9202;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #615)");
    end
end

unit.assert_eq16(16'h9202, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #615 8162e54a-c729-46dd-ac03-6c48d71f17cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #615 4670feac-0c2d-4586-bf67-b894a9bfb42e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #615 0fad3136-77c5-4e20-9a9d-570956c29fe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #615 4fa2d659-f8fa-4d28-a6c6-2c847266ebd9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #615 1c5b32db-42d1-451f-a91c-49b037936f39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #615 1974fb0f-f7a8-4ab7-bed5-fd25639af1c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #615 ef6e38db-5b6d-4f93-ab94-ad50602e78d5)");

unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'h3AB],
"EXT DMEM (Testcase #615 de5c2860-07a3-4354-996e-8e07aa8f968c)");
unit.assert_eq8(8'h92, datamem_ext_i.datamem[13'h3AC],
"EXT DMEM (Testcase #615 4cd0120c-6cdc-4ff4-9a04-db6d75dd6af1)");
datamem_ext_i.datamem[13'h3AB] =
datamem_swap[16'h3AB];
datamem_ext_i.datamem[13'h3AC] =
datamem_swap[16'h3AC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #616
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE0AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #616)");
    end
end

unit.assert_eq16(16'hE0AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #616 bedda691-2d05-401a-a33d-70619226c6ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #616 c0b09e47-9644-486f-b872-cf5bb2cdbeef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #616 61f781a4-726c-4cc9-a196-c5362e30e870)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #616 bd54fbe4-9971-420d-8138-e23845628513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #616 1c196007-fb67-4bad-b248-6eeae98c7952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #616 d7d6ca2e-7816-4c09-8f93-a1fe0dc70828)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #616 bdf25a7f-c6b3-4326-9a1f-b9c4837c5e0b)");

unit.assert_eq8(8'hAE, datamem_ext_i.datamem[13'h5CC],
"EXT DMEM (Testcase #616 1738704c-5626-4eea-beb9-464ecb7b62c4)");
unit.assert_eq8(8'hE0, datamem_ext_i.datamem[13'h5CD],
"EXT DMEM (Testcase #616 da6cc0f5-83f1-4b0c-a4f0-00d2ff567dbf)");
datamem_ext_i.datamem[13'h5CC] =
datamem_swap[16'h5CC];
datamem_ext_i.datamem[13'h5CD] =
datamem_swap[16'h5CD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #617
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC32E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #617)");
    end
end

unit.assert_eq16(16'hC32E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #617 b1546c00-8d42-4698-b6d0-79269ccf305e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #617 4c7f1b7c-81c2-4006-8dac-bd55426cbd19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #617 db83621d-2c4f-4543-8984-6bb31077de57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #617 ed512b97-1c5b-4ae5-9209-72cbf318bd44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #617 4c1b886a-6cb9-4079-9faa-f99cd59bd210)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #617 8966b1a6-9f02-4613-93b5-bba284cd892e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #617 e4e00815-1eec-429c-8345-28cf6d05fac9)");

unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'hC65],
"EXT DMEM (Testcase #617 568f2411-ff40-4bde-95cd-d008c98e318f)");
unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'hC66],
"EXT DMEM (Testcase #617 9d1b6901-142d-409f-9d1c-62c22eca264b)");
datamem_ext_i.datamem[13'hC65] =
datamem_swap[16'hC65];
datamem_ext_i.datamem[13'hC66] =
datamem_swap[16'hC66];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #618
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDAD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #618)");
    end
end

unit.assert_eq16(16'hDAD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #618 23b7d9a8-0a66-4990-a7cd-aee9dac45f60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #618 14ffde17-181c-4a0e-9a87-a1106ff4426a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #618 bdc7c7ae-17c3-4d0a-bcbe-37d5cd666cc7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #618 d05bf87c-520f-4d09-b384-9d6f7c3b633b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #618 4b6a758f-37fc-4abc-b848-fbea277f6408)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #618 ebbbd91c-521e-4034-b3c5-92f10465acd7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #618 7014391a-3d16-4b72-bdd3-64998e781ac6)");

unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'hFF5],
"EXT DMEM (Testcase #618 d1f0c282-4a42-4d5f-b8f1-11ee9799653d)");
unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'hFF6],
"EXT DMEM (Testcase #618 05b11680-ce02-4395-93fb-ca68c753df30)");
datamem_ext_i.datamem[13'hFF5] =
datamem_swap[16'hFF5];
datamem_ext_i.datamem[13'hFF6] =
datamem_swap[16'hFF6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #619
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8064;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #619)");
    end
end

unit.assert_eq16(16'h8064, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #619 cd352902-6d29-45a2-a0f8-f5560826f93b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #619 253b079f-9590-460f-8af4-bcf785099876)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #619 fb5284fa-b6e1-4c1e-8772-fa3a2b9ee4a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #619 b036d66b-1940-473c-8bf8-53065f7996cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #619 bd57cf05-9d9f-4cca-8008-93d30e668760)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #619 4df08f08-3032-435d-affe-d9a6aa1138dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #619 f160c6b6-f7dc-460a-9ce1-a4fb89956c74)");

unit.assert_eq8(8'h64, datamem_ext_i.datamem[13'h8C7],
"EXT DMEM (Testcase #619 85020306-159d-4c7b-b9c9-5a385aa40fa3)");
unit.assert_eq8(8'h80, datamem_ext_i.datamem[13'h8C8],
"EXT DMEM (Testcase #619 b1b26faf-61f4-4991-af22-7e92eba56d59)");
datamem_ext_i.datamem[13'h8C7] =
datamem_swap[16'h8C7];
datamem_ext_i.datamem[13'h8C8] =
datamem_swap[16'h8C8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #620
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDDCC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #620)");
    end
end

unit.assert_eq16(16'hDDCC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #620 80665d38-cdec-4247-b7df-99f8cee6e208)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #620 1523f6f9-fe87-44d5-815c-81c4f01bf044)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #620 d05ff404-73ad-4f21-b1cc-fcf9e2f10809)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #620 3ae9c8ba-ef03-44cd-a7bd-d4fcd47ffea6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #620 b6112653-939e-4ffd-a1b3-265fa710e15f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #620 0b70da2b-d85e-4948-80d9-cb8d6de46c3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #620 cac042be-0c0a-4235-8c91-9a04ba813a1b)");

unit.assert_eq8(8'hCC, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h22],
"INT DMEM (Testcase #620 0df25c91-153d-4ea5-91e9-91458e53f396)");
unit.assert_eq8(8'hDD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h23],
"INT DMEM (Testcase #620 2743e2a2-4f9f-4fed-9a9c-4a127fbc3496)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h22] =
datamem_swap[16'h122];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h23] =
datamem_swap[16'h123];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #621
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h58B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #621)");
    end
end

unit.assert_eq16(16'h58B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #621 44241f10-2c71-4c39-889c-127d89fb4a63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #621 1e7a2bb8-c38f-4bdc-9dac-7ceea4fa0bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #621 fea9519e-a67d-48a1-91e2-3e41becd49d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #621 cbb045b6-f666-4a0d-81fb-5c183ae2763c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #621 a64a4e29-55f4-4f71-8731-403e8544d018)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #621 5720ceb1-ecd4-4726-84b1-39a3985570b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #621 2774068b-f839-45ea-8c1a-7e7fbb47c52a)");

unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'hA10],
"EXT DMEM (Testcase #621 b0b10ea4-dde7-429e-9036-633c65235b7b)");
unit.assert_eq8(8'h58, datamem_ext_i.datamem[13'hA11],
"EXT DMEM (Testcase #621 e88c8dc4-b426-45d0-b480-7f0e474f2787)");
datamem_ext_i.datamem[13'hA10] =
datamem_swap[16'hA10];
datamem_ext_i.datamem[13'hA11] =
datamem_swap[16'hA11];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #622
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD1D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #622)");
    end
end

unit.assert_eq16(16'hD1D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #622 d484bcd3-2931-44f9-9964-ddc1ba361853)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #622 236a3038-39b3-4a5d-bcdd-b2e610c4cd4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #622 51980a2d-71ac-4816-a4c1-c138c8c607d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #622 e6518d01-fc02-4984-ae60-0fd5e41cd070)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #622 7a14be7f-8a4f-421e-b51c-4ca8e5a95c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #622 27185d6c-ae4e-4ad2-b06f-55d00cb9c167)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #622 bb14a054-04e1-40a6-b6e9-c9e66b64b82c)");

unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'h9F5],
"EXT DMEM (Testcase #622 89bd5c98-6339-4293-ae34-212d24a937c5)");
unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'h9F6],
"EXT DMEM (Testcase #622 b09e0223-687f-41cf-9618-e156667c2090)");
datamem_ext_i.datamem[13'h9F5] =
datamem_swap[16'h9F5];
datamem_ext_i.datamem[13'h9F6] =
datamem_swap[16'h9F6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #623
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h84DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #623)");
    end
end

unit.assert_eq16(16'h84DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #623 90b3b388-fe4f-4c4d-9a5f-a6abd28b367a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #623 84f229c7-50d2-403c-be55-96c5778e9395)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #623 b36aacfa-fc1f-41f4-bac2-cca1982cbe70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #623 1edcfaf9-285f-45a2-89dd-d7adb4cd7b74)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #623 3dd52f40-8a08-45c7-8f67-07e0a2c1b7fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #623 9ee600b6-9add-45b5-898b-8beb3aa852ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #623 5729f2fb-60e2-48b5-9d34-9ebe330efe23)");

unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'hC00],
"EXT DMEM (Testcase #623 489ac49b-b902-4905-8539-5822770ee23d)");
unit.assert_eq8(8'h84, datamem_ext_i.datamem[13'hC01],
"EXT DMEM (Testcase #623 46b52c9e-39c9-435c-bc84-cd0958e3820d)");
datamem_ext_i.datamem[13'hC00] =
datamem_swap[16'hC00];
datamem_ext_i.datamem[13'hC01] =
datamem_swap[16'hC01];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #624
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF3CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #624)");
    end
end

unit.assert_eq16(16'hF3CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #624 4b5df5e6-e5b1-4cb1-88f6-1e90fdf4b310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #624 69271e79-441c-47b0-ba30-a527e1d41b5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #624 db6d6b7e-761b-41db-942d-d80d1d4b08aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #624 cc0cc680-1442-4d9c-bd4f-68e0c1237b0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #624 71636700-dd37-4746-9c26-9fe127d0021f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #624 7c493a6d-904b-4099-95ee-acd89faa4fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #624 0fd61c24-e04e-43c9-aad5-d898504290ee)");

unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'hD6B],
"EXT DMEM (Testcase #624 b51b8f62-9065-4fe9-99a4-def37e3a79fb)");
unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'hD6C],
"EXT DMEM (Testcase #624 e884866b-132c-47e4-8b2f-210f9e1cb8fe)");
datamem_ext_i.datamem[13'hD6B] =
datamem_swap[16'hD6B];
datamem_ext_i.datamem[13'hD6C] =
datamem_swap[16'hD6C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #625
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC1B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #625)");
    end
end

unit.assert_eq16(16'hC1B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #625 7297bcd0-212c-493a-aadb-e8ef32473e8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #625 48b82b88-6baa-4b6f-90f6-ec93fd79e01c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #625 8d6e1c38-d6a4-44e1-bf91-2e23978308e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #625 77222c28-bc6f-4b2c-b49d-0e20806f4815)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #625 3df6021b-6918-4f1e-877f-e237073ae50c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #625 1c233101-d54c-4692-bb0f-d26ebd53c827)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #625 c18cf274-5730-49e9-8ff3-3d9a9cf9667a)");

unit.assert_eq8(8'hB5, datamem_ext_i.datamem[13'hFAB],
"EXT DMEM (Testcase #625 f8988bb3-bfdb-4b38-ab58-e799bfdab741)");
unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'hFAC],
"EXT DMEM (Testcase #625 e08265f6-2bb7-41b7-980b-671b8b7f1fd2)");
datamem_ext_i.datamem[13'hFAB] =
datamem_swap[16'hFAB];
datamem_ext_i.datamem[13'hFAC] =
datamem_swap[16'hFAC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #626
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3D22;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #626)");
    end
end

unit.assert_eq16(16'h3D22, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #626 c5b82048-187e-48d9-992b-39f03ddf9e9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #626 a7fb30cd-9ce7-4a73-925f-aec60427afa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #626 32dd02a0-ece0-41bb-89f5-43fdd675d18e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #626 539af30d-6183-4798-8175-8baef89d6fb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #626 2aff2803-9963-4f9a-b98c-68e5015fac39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #626 2b866a63-6090-43bd-bd27-3b7a44f9d31b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #626 3ca75f71-b2ad-4c72-b7dc-b75fc3446747)");

unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'hD54],
"EXT DMEM (Testcase #626 b7bd88cd-032f-42ac-9c8c-ee0157b25c6f)");
unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'hD55],
"EXT DMEM (Testcase #626 5ccc9a54-89bf-49e1-8de6-1a945172d5fd)");
datamem_ext_i.datamem[13'hD54] =
datamem_swap[16'hD54];
datamem_ext_i.datamem[13'hD55] =
datamem_swap[16'hD55];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #627
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9B55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #627)");
    end
end

unit.assert_eq16(16'h9B55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #627 7d941014-cea8-44fa-b849-2104c7663fb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #627 9ba51dde-650f-44d0-840d-b651cd1a3885)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #627 a460a538-2308-4c8a-925e-a38c82476eb9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #627 4c875e26-358b-4c93-a32c-9a37a30c48ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #627 bd0353be-618c-48bb-8c66-06c5c1b2f7af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #627 cb2b8e3a-e727-43f7-be2f-5d89d4d45bad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #627 91863572-b645-4e67-914d-391f95a22219)");

unit.assert_eq8(8'h55, datamem_ext_i.datamem[13'h2C9],
"EXT DMEM (Testcase #627 e923546c-7da9-426f-83a8-f73d4d72f907)");
unit.assert_eq8(8'h9B, datamem_ext_i.datamem[13'h2CA],
"EXT DMEM (Testcase #627 ee7d72d0-0a41-4f68-b77f-490a8a792172)");
datamem_ext_i.datamem[13'h2C9] =
datamem_swap[16'h2C9];
datamem_ext_i.datamem[13'h2CA] =
datamem_swap[16'h2CA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #628
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9C70;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #628)");
    end
end

unit.assert_eq16(16'h9C70, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #628 cf444f0d-1363-4552-afe8-709ffb15e8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #628 ecba0cc3-4809-4b4c-ac04-34cf2fc762cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #628 455ed961-cb63-48ad-b1b7-eac087c98a84)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #628 ef8677e9-1968-45f6-a16f-56885f5632f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #628 b2dd4d7c-2f5d-42d9-9e1b-e2e16fe21ed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #628 890ad60b-a76c-4abb-a707-0064a7086323)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #628 bf0493fb-8a79-4df6-8345-d693d11bf0f2)");

unit.assert_eq8(8'h70, datamem_ext_i.datamem[13'hA51],
"EXT DMEM (Testcase #628 b2373a1a-99e6-4113-af7b-86ebfa3548cb)");
unit.assert_eq8(8'h9C, datamem_ext_i.datamem[13'hA52],
"EXT DMEM (Testcase #628 2c9593db-9d03-48c6-8a22-e8d1d85e23b9)");
datamem_ext_i.datamem[13'hA51] =
datamem_swap[16'hA51];
datamem_ext_i.datamem[13'hA52] =
datamem_swap[16'hA52];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #629
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A44;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #629)");
    end
end

unit.assert_eq16(16'h8A44, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #629 53fb9d0a-e925-4435-a9bc-a880e85dadaf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #629 b450a2bb-42e4-4011-acdd-529851b8138c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #629 b0c37a2e-7bb0-4b35-bb3c-32373a045512)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #629 b139d1cd-5f7b-4678-a81d-e1596c6f1328)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #629 23de7ea2-05c5-48b0-bec9-2aebc0af2cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #629 7354669e-d129-4610-ab45-ec2d4a64e99c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #629 aa5402f9-1038-4051-84a8-35ca8d1ef222)");

unit.assert_eq8(8'h44, datamem_ext_i.datamem[13'h68A],
"EXT DMEM (Testcase #629 0d3e48d0-3aa0-4d17-ac7e-1f2d538f78ea)");
unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'h68B],
"EXT DMEM (Testcase #629 5bb50e4f-2ec6-4f28-bbef-d4a79f5ab7dc)");
datamem_ext_i.datamem[13'h68A] =
datamem_swap[16'h68A];
datamem_ext_i.datamem[13'h68B] =
datamem_swap[16'h68B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #630
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7174;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #630)");
    end
end

unit.assert_eq16(16'h7174, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #630 9a95bd92-0017-428a-8c05-18b0886b2b6e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #630 19d97c09-880b-4a5a-88ae-a2e9b559bc82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #630 5a74f76d-1e38-487d-8f83-f5d942e2fc9c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #630 cb71f29b-be4b-45a6-9247-c0fc7526990d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #630 0fa1870f-33ec-4f2e-8c56-3baed3c8aac8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #630 f73c0009-7411-482d-b006-73c78747f0de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #630 c31dffcc-e8a0-447c-9850-af099ab817ab)");

unit.assert_eq8(8'h74, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4D],
"INT DMEM (Testcase #630 90c0b9df-fadf-4034-ac5b-500474d62b69)");
unit.assert_eq8(8'h71, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4E],
"INT DMEM (Testcase #630 ab5e61aa-3f1f-4dc8-b943-1e2af7bde3dd)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4D] =
datamem_swap[16'h4D];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4E] =
datamem_swap[16'h4E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #631
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #631)");
    end
end

unit.assert_eq16(16'h47E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #631 3d623d3b-4a15-495a-83ef-af2ab9e35ef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #631 97fa2fca-b1c3-45cd-ba2f-599ea05b12b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #631 40a3ba8f-3638-419c-90f6-1bdcbe87503d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #631 73e4e245-baad-4a63-a272-8594eed19b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #631 640caf61-fd2c-4fbc-acb9-23e3881e3293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #631 43719f27-d78c-4892-9c64-39d1912b9af8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #631 e69765c2-91ac-4c82-aaa7-6d9340813581)");

unit.assert_eq8(8'hE0, datamem_ext_i.datamem[13'h5A9],
"EXT DMEM (Testcase #631 fe9dfcc8-3c7b-4979-92b4-ccfb806a6cb8)");
unit.assert_eq8(8'h47, datamem_ext_i.datamem[13'h5AA],
"EXT DMEM (Testcase #631 d89bb187-2efc-465c-8cb5-ee453a7a37ff)");
datamem_ext_i.datamem[13'h5A9] =
datamem_swap[16'h5A9];
datamem_ext_i.datamem[13'h5AA] =
datamem_swap[16'h5AA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #632
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4865;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #632)");
    end
end

unit.assert_eq16(16'h4865, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #632 e0b684c9-6c77-4011-832d-acd7c90150b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #632 aac34a6a-e622-48cb-8f35-5f9a3a6bea03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #632 9b0588d1-ac1b-420d-b7fd-cdbea660dec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #632 c577aa96-2561-49d0-baaf-93d4db4d120c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #632 189a65d4-596d-451e-a9d1-955db4034519)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #632 dbcef920-712c-4080-afa9-93c5492b15bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #632 9ab5fa06-3153-4f99-b4e7-7322ab57196e)");

unit.assert_eq8(8'h65, datamem_ext_i.datamem[13'h290],
"EXT DMEM (Testcase #632 78214e34-7c1a-48bb-8a80-9342eabbdf6e)");
unit.assert_eq8(8'h48, datamem_ext_i.datamem[13'h291],
"EXT DMEM (Testcase #632 12271313-065d-47c9-98cc-0639c1d272aa)");
datamem_ext_i.datamem[13'h290] =
datamem_swap[16'h290];
datamem_ext_i.datamem[13'h291] =
datamem_swap[16'h291];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #633
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA881;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #633)");
    end
end

unit.assert_eq16(16'hA881, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #633 96be613f-f514-4021-afef-bf84b0f1f6d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #633 4c984c69-13d7-48e3-9715-faad727fcdca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #633 b5a02892-f804-4034-8c3c-769c5115d3bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #633 49028541-f44e-4b70-941d-417b9dd709e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #633 996b050c-5b94-48de-82f9-d690fe163f9a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #633 2d0da5e9-04ab-4e3b-97bd-17ef3d516bcd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #633 5af53394-2fff-49fb-bcbb-ba3b0b6771af)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'h8AA],
"EXT DMEM (Testcase #633 5f2ea064-b9e7-4857-878f-c64acc57f59b)");
unit.assert_eq8(8'hA8, datamem_ext_i.datamem[13'h8AB],
"EXT DMEM (Testcase #633 5aeee630-8ba7-4422-aa06-9adea499cfb2)");
datamem_ext_i.datamem[13'h8AA] =
datamem_swap[16'h8AA];
datamem_ext_i.datamem[13'h8AB] =
datamem_swap[16'h8AB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #634
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC281;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #634)");
    end
end

unit.assert_eq16(16'hC281, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #634 37625a71-8548-4e26-b7ca-40bf561655d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #634 4f13a66e-dd58-45da-9f14-d1584111ca50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #634 72e117da-e95a-4765-8f3c-631d4c3e7675)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #634 e14662ad-684b-4426-a54c-40d71cbf4722)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #634 cc3338bf-5cb9-4b05-92ad-017161676f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #634 67a3530c-9cc0-4066-a6b8-41833cb20873)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #634 19861f95-5770-4295-976f-f48ab2c11825)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'h8B9],
"EXT DMEM (Testcase #634 cc337d55-e800-41c7-ab03-5acd8c778caf)");
unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'h8BA],
"EXT DMEM (Testcase #634 c46d77a7-4ace-42fa-95d8-b1527beef2f8)");
datamem_ext_i.datamem[13'h8B9] =
datamem_swap[16'h8B9];
datamem_ext_i.datamem[13'h8BA] =
datamem_swap[16'h8BA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #635
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #635)");
    end
end

unit.assert_eq16(16'h2D32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #635 b3ed37e6-e462-46f8-81ad-18ef1647afa6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #635 350603aa-9124-4fd6-8f0d-c5514c13db72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #635 cc2bd623-634d-4ea2-b2da-59f8434fa610)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #635 192f2dea-80ae-4f74-b82e-8944dfe00c65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #635 40952f84-44de-47f5-8d8f-bed4b08c03c7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #635 bc95b131-6d58-4b37-95d0-2a7b3c6464a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #635 59ec5dec-377d-4555-a3aa-1034595f7516)");

unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'h750],
"EXT DMEM (Testcase #635 2c6a53c9-2211-461b-b155-6650ac78da27)");
unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'h751],
"EXT DMEM (Testcase #635 fac72e08-8fb5-4732-8b90-89c403a6e8d6)");
datamem_ext_i.datamem[13'h750] =
datamem_swap[16'h750];
datamem_ext_i.datamem[13'h751] =
datamem_swap[16'h751];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #636
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h92B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #636)");
    end
end

unit.assert_eq16(16'h92B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #636 8eca988f-c2b7-49a4-b55c-ac48582ea8bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #636 fad3a1d8-c300-46c5-9ab3-a80bd779e068)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #636 7d8bb83d-4eb9-49b4-b46d-6a25912d4f8b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #636 b885add0-d9d4-4f0f-bd0a-8885a66b784d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #636 c8d8448e-0f61-4bfc-9f24-cc7b79e36bb7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #636 912557e2-87c8-4a96-88a1-34b735d4bd9e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #636 ec7bc326-d122-4c6a-9393-d16b580de2b3)");

unit.assert_eq8(8'hB8, datamem_ext_i.datamem[13'hF63],
"EXT DMEM (Testcase #636 d349f066-8f8f-49d1-9db5-0d51f44097f1)");
unit.assert_eq8(8'h92, datamem_ext_i.datamem[13'hF64],
"EXT DMEM (Testcase #636 e507094a-98ea-4769-8eda-c5474c3d5fd4)");
datamem_ext_i.datamem[13'hF63] =
datamem_swap[16'hF63];
datamem_ext_i.datamem[13'hF64] =
datamem_swap[16'hF64];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #637
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2B78;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #637)");
    end
end

unit.assert_eq16(16'h2B78, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #637 3564a416-f03f-4488-afd1-f34077d52cb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #637 0eb842bb-6476-448c-8ce0-063121c5fb79)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #637 6f1b56a1-c088-44fb-9369-fdbfb90fd931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #637 fca7d479-bc94-48f5-ae5e-23ac1f39063f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #637 d9daabbc-91b9-408c-94cc-852d69f8980b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #637 1ed39d00-78c2-4191-a72d-290f6c6bafbf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #637 596bbda6-ddcd-469a-bd8d-a905b6ba28ff)");

unit.assert_eq8(8'h78, datamem_ext_i.datamem[13'h332],
"EXT DMEM (Testcase #637 da901d00-2d56-4e52-8ab0-77e3d379dbd6)");
unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'h333],
"EXT DMEM (Testcase #637 fd38d7b3-51b1-4fe8-b1a9-a19e483f1d3f)");
datamem_ext_i.datamem[13'h332] =
datamem_swap[16'h332];
datamem_ext_i.datamem[13'h333] =
datamem_swap[16'h333];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #638
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE601;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #638)");
    end
end

unit.assert_eq16(16'hE601, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #638 715c2e05-9f22-424b-85bb-d00fc3a52355)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #638 3aa3b789-b1ef-45a3-b4b9-8f626db25997)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #638 d595f8c4-2e94-469f-b490-992f9f169cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #638 d16db083-2ee2-4816-b288-50da5625a929)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #638 65c76518-f651-48bc-b407-176e28602aa1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #638 3573b24c-49c2-4ccc-80ee-73801d65f607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #638 575f42d9-6fbf-4dc5-9754-982fab3cffb8)");

unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'h243],
"EXT DMEM (Testcase #638 dd354ad5-02cb-455b-b2ef-ee800be65674)");
unit.assert_eq8(8'hE6, datamem_ext_i.datamem[13'h244],
"EXT DMEM (Testcase #638 0329d4cf-78e3-44df-92ae-18fed732d0ee)");
datamem_ext_i.datamem[13'h243] =
datamem_swap[16'h243];
datamem_ext_i.datamem[13'h244] =
datamem_swap[16'h244];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #639
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB38F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #639)");
    end
end

unit.assert_eq16(16'hB38F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #639 863d5c8e-398b-4c0f-963a-b28a12f61998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #639 7465278a-873e-4a1b-85b6-9aa14721fae5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #639 1aef5610-8699-4c44-b589-caf53b880d75)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #639 e1ab9add-573e-40c4-b16a-f348ed269791)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #639 2ffaa84c-d4d5-49f3-99e3-26ffa3c9385a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #639 49604de6-2f7a-4ba2-a6c0-43f9339f1d4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #639 9d0160bc-ffc9-498e-8f24-ee899b2e2dd8)");

unit.assert_eq8(8'h8F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h93],
"INT DMEM (Testcase #639 3b3107b0-d8b2-44e7-b180-690a6bd78b8b)");
unit.assert_eq8(8'hB3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h94],
"INT DMEM (Testcase #639 ae92a601-195a-446d-9795-b694469822d2)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h93] =
datamem_swap[16'h93];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h94] =
datamem_swap[16'h94];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #640
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC9A7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #640)");
    end
end

unit.assert_eq16(16'hC9A7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #640 ce5721ca-be5b-474b-b662-173a46ec31be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #640 9e815f9e-23b0-433a-95ca-f81af8ece41d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #640 8d08d291-f7ff-42fe-ba9b-6b9e76b18419)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #640 f5856ec6-fae8-48ce-ad9b-a2e65ff35927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #640 76b9e647-38f3-4eb9-beb4-91562db5547d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #640 c71f09e8-95ef-4f4c-8863-cb96c0d2a259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #640 b1a8f954-611c-4b9f-b1d4-d0139e02c400)");

unit.assert_eq8(8'hA7, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3C],
"INT DMEM (Testcase #640 06441f42-f9f5-46ea-988c-3a15d408c27e)");
unit.assert_eq8(8'hC9, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3D],
"INT DMEM (Testcase #640 fb39147c-28ed-4592-b391-ee2c9eb7f115)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3C] =
datamem_swap[16'h13C];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h3D] =
datamem_swap[16'h13D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #641
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9B81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #641)");
    end
end

unit.assert_eq16(16'h9B81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #641 33b9958e-93ae-4645-971e-ea965ab570b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #641 c938937f-373a-4535-a7f9-07c33b0c25e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #641 dc4f4a13-26b2-4fa2-ae0b-dd47083882db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #641 820ed073-4d3f-43ee-ac93-c1c8127be293)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #641 69fec257-bd91-4db8-930c-c4d7d6b35271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #641 aa22f2dd-4c70-41b0-9f9f-4f1dd8573623)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #641 a228a144-8e95-4651-adcb-a0b7b568d52f)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'hCC4],
"EXT DMEM (Testcase #641 5764ec88-508c-4e5d-a12e-920929e1ddd9)");
unit.assert_eq8(8'h9B, datamem_ext_i.datamem[13'hCC5],
"EXT DMEM (Testcase #641 f298bee9-df5d-4617-a650-d9150ccef184)");
datamem_ext_i.datamem[13'hCC4] =
datamem_swap[16'hCC4];
datamem_ext_i.datamem[13'hCC5] =
datamem_swap[16'hCC5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #642
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBEE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #642)");
    end
end

unit.assert_eq16(16'hBEE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #642 13c5bc14-1611-4d54-b658-5c79d38483de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #642 7a063c0f-7e98-497b-a05d-f4ba4e680941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #642 a8010f1f-c2b6-465d-b5be-02acf8d61fe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #642 2ebabd80-1f0f-4115-be74-6ca8acb1301e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #642 35e99182-d10c-4de9-b43a-422fb048c184)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #642 c4e537c3-ebbd-4e48-8073-dac973fde3f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #642 f5ad6850-b18a-48c5-8d1c-dc11c31a97e8)");

unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'h665],
"EXT DMEM (Testcase #642 2f7f2945-a335-4a06-acf2-696276ba2816)");
unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'h666],
"EXT DMEM (Testcase #642 b802a1d5-da74-4cdd-b6a6-74914f07c6ae)");
datamem_ext_i.datamem[13'h665] =
datamem_swap[16'h665];
datamem_ext_i.datamem[13'h666] =
datamem_swap[16'h666];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #643
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD4C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #643)");
    end
end

unit.assert_eq16(16'hD4C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #643 c21c2dc2-0521-47cc-b157-7c38e268f8d5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #643 575e77ac-4991-4006-b23f-0c25aabadb6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #643 494b0b9e-10b2-461b-9e9c-bccbd347e269)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #643 37eda221-0de9-4701-8524-06e9e8f694a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #643 6e54e797-2ff4-43c8-bb9e-6224d3d40dab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #643 0ddaa616-83da-4065-a54f-a20433c7ba62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #643 820ed6be-7af9-4b02-90a7-8a4c10693434)");

unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'h4D3],
"EXT DMEM (Testcase #643 ebd722c4-8f18-4976-aadb-8c358df76085)");
unit.assert_eq8(8'hD4, datamem_ext_i.datamem[13'h4D4],
"EXT DMEM (Testcase #643 a9f342a6-25bc-4d95-aa05-bbeeef396395)");
datamem_ext_i.datamem[13'h4D3] =
datamem_swap[16'h4D3];
datamem_ext_i.datamem[13'h4D4] =
datamem_swap[16'h4D4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #644
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEFE3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #644)");
    end
end

unit.assert_eq16(16'hEFE3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #644 5c3ca853-5ab2-4546-93e3-786d22b23e0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #644 939d1b46-43a3-4c6a-8ebf-6e9eceb7bbc2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #644 2d085ac3-87c8-4201-9809-9a4ce5c1ba74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #644 0c65f102-512d-493c-8465-02a29459fae1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #644 82515f77-0cf3-49a0-93d3-06be5865464e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #644 75434b59-216c-4878-9a3d-1d2a421cc29b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #644 f7fd4908-98b1-4093-b213-941c1f42c29b)");

unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'h4AF],
"EXT DMEM (Testcase #644 34cc73a9-179a-4ca6-a622-61cb38c6357b)");
unit.assert_eq8(8'hEF, datamem_ext_i.datamem[13'h4B0],
"EXT DMEM (Testcase #644 8827d8a2-cbe9-4c88-be9b-4ca2b65348e9)");
datamem_ext_i.datamem[13'h4AF] =
datamem_swap[16'h4AF];
datamem_ext_i.datamem[13'h4B0] =
datamem_swap[16'h4B0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #645
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE8A8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #645)");
    end
end

unit.assert_eq16(16'hE8A8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #645 9bff3ad6-824b-4e66-90a3-9d3bb13abc79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #645 796fcce8-9fc0-4c38-baa5-2f3bb3d543a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #645 9b0b43ef-74f5-4377-b62a-e2cc07277cc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #645 7e11d534-19f8-40e7-ab93-bcd4702d44a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #645 11b3274d-02ac-4ccb-8f53-a65d5ae85ebb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #645 360c0a2d-1520-4741-8da6-3ddc8301f770)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #645 fae1a125-4670-4173-9d12-3abba22e0c0e)");

unit.assert_eq8(8'hA8, datamem_ext_i.datamem[13'hF79],
"EXT DMEM (Testcase #645 76fb1407-3364-4f35-9a06-48816181b929)");
unit.assert_eq8(8'hE8, datamem_ext_i.datamem[13'hF7A],
"EXT DMEM (Testcase #645 ae3b75b7-0194-4769-8fc3-468b08ee9feb)");
datamem_ext_i.datamem[13'hF79] =
datamem_swap[16'hF79];
datamem_ext_i.datamem[13'hF7A] =
datamem_swap[16'hF7A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #646
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #646)");
    end
end

unit.assert_eq16(16'hFA7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #646 469d7b77-0c32-4a9b-8fca-d3f92c171eb1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #646 8a45c3bc-6d14-4c04-9abf-fe2c65076e7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #646 7b60146b-8960-4fa5-8fff-68f18b0c711b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #646 f20aeb76-9789-4a6f-87cf-8f5bf5ebeef0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #646 60c0caa9-8aaa-4318-a2b6-4eb960e2edef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #646 d7621d05-ec09-491d-8d27-46e16759040c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #646 762d42fe-4fcf-4968-9c53-edd234f63363)");

unit.assert_eq8(8'h7B, datamem_ext_i.datamem[13'hD85],
"EXT DMEM (Testcase #646 da295f82-b3c0-4507-a23a-b51ba3917121)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hD86],
"EXT DMEM (Testcase #646 9018ee32-7414-4c18-85b5-ccbb36e60d85)");
datamem_ext_i.datamem[13'hD85] =
datamem_swap[16'hD85];
datamem_ext_i.datamem[13'hD86] =
datamem_swap[16'hD86];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #647
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h673F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #647)");
    end
end

unit.assert_eq16(16'h673F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #647 5022b091-0fe6-45d1-8c16-a4145d5876a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #647 0c0c500d-ae56-4dbe-98d8-b5ac82bab37e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #647 798aaaf3-7495-4d74-bce7-dc39c7cbec39)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #647 543221dd-44f6-4377-b124-5dd779c4e149)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #647 f329a4ae-c741-49f7-8a11-c8bbe851663d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #647 f8f0e79a-09a5-4cca-b535-1458c2c0577f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #647 3766aaa7-cba2-42e8-8c99-4f7369e54f12)");

unit.assert_eq8(8'h3F, datamem_ext_i.datamem[13'h290],
"EXT DMEM (Testcase #647 508e11bd-10ba-4b72-b49e-32668ed5b50d)");
unit.assert_eq8(8'h67, datamem_ext_i.datamem[13'h291],
"EXT DMEM (Testcase #647 50a32323-2577-4495-9c1b-3521fd586e0e)");
datamem_ext_i.datamem[13'h290] =
datamem_swap[16'h290];
datamem_ext_i.datamem[13'h291] =
datamem_swap[16'h291];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #648
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #648)");
    end
end

unit.assert_eq16(16'hC0C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #648 577d74d8-60de-410a-ae6f-4d1baf024e5a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #648 ff843378-1aa0-4d73-ae55-3edee0607939)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #648 37aea7de-45da-4f49-83ac-1fa897402362)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #648 779a6f3f-7379-4679-8e52-2c9caa185b1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #648 e2977d33-db4d-4c8f-af47-8411c585247a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #648 b3ef4e96-8545-4af0-a193-11d034afc352)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #648 6d2b7299-3bc2-4470-b4f7-9aaaa0bd7106)");

unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'hB84],
"EXT DMEM (Testcase #648 3529b9d8-3a3e-490f-97c2-4b9ab9e860b8)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'hB85],
"EXT DMEM (Testcase #648 5f793b00-06d6-498c-889f-cef536c9855b)");
datamem_ext_i.datamem[13'hB84] =
datamem_swap[16'hB84];
datamem_ext_i.datamem[13'hB85] =
datamem_swap[16'hB85];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #649
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #649)");
    end
end

unit.assert_eq16(16'hF2D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #649 b1d37a5d-f1fd-4bd8-90b8-f7f4220dd694)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #649 701237db-8e45-4e8e-9800-db5db796a646)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #649 862a1c4d-6ff2-4e98-b235-463720d20e32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #649 8db89920-8646-419c-a056-c0c7aa0ba401)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #649 59eada05-c6f4-4b09-927e-36240e28ab2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #649 64f25777-1d42-4442-8f69-ad8817ddbc01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #649 486c5f77-a2f7-4e03-bfbf-6b14da8ad8f9)");

unit.assert_eq8(8'hD7, datamem_ext_i.datamem[13'hA94],
"EXT DMEM (Testcase #649 97bc3b71-d89a-47c7-bfe4-10de28325e75)");
unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'hA95],
"EXT DMEM (Testcase #649 46cff432-9221-4340-a686-365bcbcce653)");
datamem_ext_i.datamem[13'hA94] =
datamem_swap[16'hA94];
datamem_ext_i.datamem[13'hA95] =
datamem_swap[16'hA95];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #650
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3612;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #650)");
    end
end

unit.assert_eq16(16'h3612, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #650 ce8352ba-5058-4a35-9d93-5de53db5659b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #650 fbae9558-ff8d-4466-ba5e-d2ae716bf5d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #650 14133baa-8778-4b17-b898-646a4c2c2c57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #650 351a1d53-fd7c-44a7-b7b9-500ec1ca8cdd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #650 f33f41c1-82ec-42c3-86b3-81d824c33bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #650 85fa6b30-0053-4401-acb7-a9745693cf03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #650 4ea1ab0c-eed8-4210-85a5-ad12be2b32c3)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'hE92],
"EXT DMEM (Testcase #650 27f543be-61ef-4cce-a12b-00c4d4771699)");
unit.assert_eq8(8'h36, datamem_ext_i.datamem[13'hE93],
"EXT DMEM (Testcase #650 ee5821e3-a478-42d6-a260-17392459da2c)");
datamem_ext_i.datamem[13'hE92] =
datamem_swap[16'hE92];
datamem_ext_i.datamem[13'hE93] =
datamem_swap[16'hE93];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #651
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD289;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #651)");
    end
end

unit.assert_eq16(16'hD289, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #651 0c79854d-17f9-448c-8e9e-8e71991f34da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #651 b8e0cc1d-6a4e-4140-9c83-e7ff24363637)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #651 c790b122-61dc-40d3-90e8-8ddbe581ca13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #651 b095fa57-ee4f-4bde-94b2-6217ad291154)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #651 2cdfd055-c784-4457-bf74-ad9944f7a4ce)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #651 9933b626-61be-4e94-80f0-39ea0df85ceb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #651 61547863-9590-4b89-a5e5-6f908362dae4)");

unit.assert_eq8(8'h89, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h9A],
"INT DMEM (Testcase #651 7d93a9bb-537e-4fc0-89be-b2282ad80ab5)");
unit.assert_eq8(8'hD2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h9B],
"INT DMEM (Testcase #651 8f3eb02e-8636-4ca6-8b78-02904ab80f7f)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h9A] =
datamem_swap[16'h9A];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h9B] =
datamem_swap[16'h9B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #652
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h872C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #652)");
    end
end

unit.assert_eq16(16'h872C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #652 0354687d-aa0e-437d-89bd-4d35cf32cb63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #652 476267ee-9cbc-4606-b7d8-52da577873e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #652 8aa215de-bddd-4e87-9fd1-c9597938d66a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #652 464276c1-5f57-4a18-936b-65e91d13e4f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #652 c241e1b4-09e9-4e1e-a3ef-b67557e8a47d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #652 52012677-e1f5-4833-946e-158e852318db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #652 b7944045-5f75-4207-8c3a-40e4f0d91baa)");

unit.assert_eq8(8'h2C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE2],
"INT DMEM (Testcase #652 8f64251b-d50d-4453-be6e-ab9a6a077b95)");
unit.assert_eq8(8'h87, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE3],
"INT DMEM (Testcase #652 87c6aa14-b597-4896-aae9-e863f528b87e)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE2] =
datamem_swap[16'hE2];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE3] =
datamem_swap[16'hE3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #653
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h86B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #653)");
    end
end

unit.assert_eq16(16'h86B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #653 e8179ec3-c703-48f0-a537-4b24dabb07a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #653 c04acad1-d03e-4303-8136-6a3bba282f8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #653 ba4289e4-7069-4aed-8cfa-e3b5fd6a7693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #653 42bfa1d8-df5e-4bb6-92f9-9106bce3fdb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #653 a476de76-1074-4072-97ba-b34217ce54e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #653 ea3519a8-8658-42e8-a7ef-8cd6827ddc53)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #653 bf7f167f-74be-4eaf-ad3a-ff7056a70981)");

unit.assert_eq8(8'hB1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h28],
"INT DMEM (Testcase #653 cbcffade-e8f3-4176-9701-560bd1fe1edf)");
unit.assert_eq8(8'h86, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h29],
"INT DMEM (Testcase #653 f49306cc-ff48-417e-bea1-71fce64e2422)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h28] =
datamem_swap[16'h128];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h29] =
datamem_swap[16'h129];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #654
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE16C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #654)");
    end
end

unit.assert_eq16(16'hE16C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #654 157ce88c-612e-408d-8439-565dd26423f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #654 d96df31c-b9c8-4b3d-b2f0-7450b28b0725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #654 bcadb645-5d2d-4a74-9c61-97d91512ff80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #654 f7396a85-068c-4d31-8e6e-ffb7da175404)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #654 2b252737-55b1-4ad7-a608-2229df0acea4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #654 8df1bb6a-4c8a-46ae-a851-0297b1bcd4a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #654 86d7c2a2-0d2f-44f3-ac9c-54b3cb5b4433)");

unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h57C],
"EXT DMEM (Testcase #654 5e572f97-8f18-4744-a8eb-2309e900f87b)");
unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'h57D],
"EXT DMEM (Testcase #654 9f4e124f-e45a-4fe0-9fe7-094fefe65c55)");
datamem_ext_i.datamem[13'h57C] =
datamem_swap[16'h57C];
datamem_ext_i.datamem[13'h57D] =
datamem_swap[16'h57D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #655
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h45C3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #655)");
    end
end

unit.assert_eq16(16'h45C3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #655 59447ded-628b-47ea-b250-ce23a26bccc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #655 a5eece37-0b13-4c17-b81d-18cffde21587)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #655 f41919ec-5aaf-4050-bcf0-abde11455c84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #655 3c613716-6af6-4e14-862e-218d1dea58ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #655 d00fd8a3-c97f-4a53-969b-46fdec325628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #655 e0cbb065-901d-45a3-9124-48a42d2e0330)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #655 722ec8d4-06ba-4acc-a882-d816c9e4d86c)");

unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'h713],
"EXT DMEM (Testcase #655 fb981f3c-ee75-4b1a-9bce-0416b72e5064)");
unit.assert_eq8(8'h45, datamem_ext_i.datamem[13'h714],
"EXT DMEM (Testcase #655 ce4cd07b-81a1-4a87-b957-36129656ca50)");
datamem_ext_i.datamem[13'h713] =
datamem_swap[16'h713];
datamem_ext_i.datamem[13'h714] =
datamem_swap[16'h714];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #656
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3CFB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #656)");
    end
end

unit.assert_eq16(16'h3CFB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #656 647d4fd1-4d45-4bc6-ba33-be64da104cf3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #656 3485d58e-6073-422b-aac3-867019ee18ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #656 75ea19c3-3139-4ef7-81c5-83cff8e8a2b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #656 e68df1ce-8dcc-4093-aa88-e64e2239ba1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #656 9e8ff698-b502-4709-ae44-70e96df9db2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #656 3b21f040-553b-46dc-a6a5-ffd51eaf3ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #656 02effbbd-fed8-4d94-8143-bd87b25e82ad)");

unit.assert_eq8(8'hFB, datamem_ext_i.datamem[13'h39F],
"EXT DMEM (Testcase #656 8a5258b6-c25c-4e2c-badd-5d00f3c21cb9)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h3A0],
"EXT DMEM (Testcase #656 a648045b-7a9a-44ce-8a4b-d4ad85ba448c)");
datamem_ext_i.datamem[13'h39F] =
datamem_swap[16'h39F];
datamem_ext_i.datamem[13'h3A0] =
datamem_swap[16'h3A0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #657
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h79D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #657)");
    end
end

unit.assert_eq16(16'h79D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #657 9fe4613a-2eab-4a3a-a554-be9a09b07c33)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #657 89dacefa-9e70-4edf-84f8-0e346cb14aa9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #657 580f9659-772b-488d-bb66-cb373d9f07ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #657 99c9ff4d-48a1-4ab4-ab9d-5ef87d3eb6c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #657 6dbf0fc7-a00c-49d6-a919-dacb296e6b22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #657 1968643c-bc3f-4faf-8ae6-647842530afd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #657 8080256d-53ee-4af6-8dc7-8f09fde1c0c3)");

unit.assert_eq8(8'hD4, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA3],
"INT DMEM (Testcase #657 8655212e-dd1d-4033-a82e-6b2e75e33916)");
unit.assert_eq8(8'h79, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA4],
"INT DMEM (Testcase #657 eb8f2521-f153-4fcf-bf94-fba0f0c54b4c)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA3] =
datamem_swap[16'h1A3];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hA4] =
datamem_swap[16'h1A4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #658
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h128A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #658)");
    end
end

unit.assert_eq16(16'h128A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #658 897634ee-3c76-4224-8889-67165a66174c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #658 cde943ca-e219-421d-a058-c6aa25dc4e83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #658 888eb96a-0672-4bd4-84cf-7f9179714ba7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #658 9a11d1e1-df3a-4100-b284-7570ebd76e82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #658 b158af43-4b5b-4613-ac57-9a22bbc120f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #658 ee7a506e-efc3-4a31-a48d-7b7f678a5e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #658 28be12e5-1e49-4892-8b4b-1687f1962759)");

unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'hCFC],
"EXT DMEM (Testcase #658 f709c5b1-7824-4ee9-b13b-dfd7843a3490)");
unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'hCFD],
"EXT DMEM (Testcase #658 dabe4bac-3d7f-4d63-8d97-28a0b3483bff)");
datamem_ext_i.datamem[13'hCFC] =
datamem_swap[16'hCFC];
datamem_ext_i.datamem[13'hCFD] =
datamem_swap[16'hCFD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #659
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2DA5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #659)");
    end
end

unit.assert_eq16(16'h2DA5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #659 e6ea6d84-0b22-472c-9acd-e412bbcaba34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #659 72810be9-88fb-49d0-a012-6256031edc4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #659 10f2f69d-815e-464f-98a3-855c6aa6aa90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #659 85b30595-de01-4e11-8a65-39195fec354a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #659 fed31f5c-3a3a-42a7-a734-f09ad42d429c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #659 61b95d5d-c9ff-48a9-aaea-0f355ae6fe1c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #659 f24f2c77-ba95-4532-b09d-91e743a4e79e)");

unit.assert_eq8(8'hA5, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h37],
"INT DMEM (Testcase #659 57c4964f-2324-455a-8061-e766e5d9f060)");
unit.assert_eq8(8'h2D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h38],
"INT DMEM (Testcase #659 99313900-6053-4f06-a1ea-6a3e925e23a0)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h37] =
datamem_swap[16'h37];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h38] =
datamem_swap[16'h38];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #660
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF9C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #660)");
    end
end

unit.assert_eq16(16'hF9C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #660 a68474ef-827a-460e-93fd-af9eafc9b42f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #660 4e067b76-6ad2-4bf5-b1cf-dc79c600cb91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #660 1c35d21c-5de6-4afd-99dc-828ad382d0a0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #660 1507f11a-f63b-4545-82e1-be53cf509b74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #660 0e2f9380-9823-450d-8101-af1e379d40c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #660 d2b23d56-2581-420c-b496-e016b3e2ac0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #660 d9976c2b-9271-4dcb-9619-44879699d1c9)");

unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'hBA3],
"EXT DMEM (Testcase #660 97dc8ceb-fa88-45e7-9d58-f3e4deeeae93)");
unit.assert_eq8(8'hF9, datamem_ext_i.datamem[13'hBA4],
"EXT DMEM (Testcase #660 214cffb5-5388-4b8e-a27a-354960d3de86)");
datamem_ext_i.datamem[13'hBA3] =
datamem_swap[16'hBA3];
datamem_ext_i.datamem[13'hBA4] =
datamem_swap[16'hBA4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #661
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE6EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #661)");
    end
end

unit.assert_eq16(16'hE6EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #661 2dc237e2-1884-42b0-81a3-0b3a8b43831d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #661 396a90f0-8c89-430b-9539-c57450f86aab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #661 7f7c2194-0dea-4a0a-b570-1dd8ab812d03)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #661 f218ffab-866f-420c-bbf1-6ad7ac436a17)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #661 93a7dcaf-e8d9-418d-9c0e-2e4dafb09b2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #661 267c74a8-c157-4d20-848c-d10dae686bf4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #661 3a79602a-d335-4b55-89b9-c0e803e82cc2)");

unit.assert_eq8(8'hEB, datamem_ext_i.datamem[13'h3EF],
"EXT DMEM (Testcase #661 d104594b-4723-4b2b-af80-996581cfb9ae)");
unit.assert_eq8(8'hE6, datamem_ext_i.datamem[13'h3F0],
"EXT DMEM (Testcase #661 2cfff3ac-b8c1-4552-982c-dc9e64bed9f2)");
datamem_ext_i.datamem[13'h3EF] =
datamem_swap[16'h3EF];
datamem_ext_i.datamem[13'h3F0] =
datamem_swap[16'h3F0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #662
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h302F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #662)");
    end
end

unit.assert_eq16(16'h302F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #662 589e205c-71a7-4fc8-948b-cb916c8b816a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #662 d8c3bb3c-cfde-4604-96c5-7d4a9135a76a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #662 d0dd5369-06a8-480e-b289-34d17f2c99ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #662 9083703e-b72d-4223-80c3-9605ecd47490)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #662 3400da93-090f-4bb9-af0c-32b166b5297a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #662 07bb4038-fb8a-4962-a6bf-02920f3a0b02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #662 c888dfc0-70ed-4845-991e-4bfc20d39b82)");

unit.assert_eq8(8'h2F, datamem_ext_i.datamem[13'hB6D],
"EXT DMEM (Testcase #662 2270e271-ce43-4f2b-bb4e-af146dabae7c)");
unit.assert_eq8(8'h30, datamem_ext_i.datamem[13'hB6E],
"EXT DMEM (Testcase #662 8bf52cf8-9c30-414a-a9ee-209bce7e44e4)");
datamem_ext_i.datamem[13'hB6D] =
datamem_swap[16'hB6D];
datamem_ext_i.datamem[13'hB6E] =
datamem_swap[16'hB6E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #663
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFF57;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #663)");
    end
end

unit.assert_eq16(16'hFF57, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #663 8dc2e35f-2687-4fa3-a236-662a510cf01a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #663 480a3be9-084a-4a7e-9a27-73159a42872f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #663 c5dad9fa-7a76-4d51-a72f-2f68841c3562)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #663 55e59664-4601-4b4c-890c-6abd61cee8ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #663 a941b74b-0209-48de-96a4-da91e5c12766)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #663 8e5af48b-d0c3-4f2a-ace5-3c2b3c80d05c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #663 b09933a0-6432-4179-bac1-c9eaeb61345b)");

unit.assert_eq8(8'h57, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE4],
"INT DMEM (Testcase #663 c06562b9-3ae9-4c80-88a2-05b4baa35996)");
unit.assert_eq8(8'hFF, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE5],
"INT DMEM (Testcase #663 56c08680-3586-4c93-a575-ba4c53acaf7c)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE4] =
datamem_swap[16'hE4];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hE5] =
datamem_swap[16'hE5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #664
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #664)");
    end
end

unit.assert_eq16(16'hEB68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #664 cb10d5f8-e016-464c-8505-62620f508260)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #664 62893208-541a-4fc9-bc38-9610792edc91)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #664 5ed2bb9c-815b-4acb-9e90-1cd24188f67b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #664 91368dd4-901a-409c-9a5d-1d1866368427)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #664 be2637c7-c514-4364-a26b-72c051cc0868)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #664 b7474f63-1c2c-436c-993e-9c484c9567eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #664 bd9819d8-23b9-41d3-909a-b85186c6864f)");

unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'hBA2],
"EXT DMEM (Testcase #664 2ea267d2-7a40-4879-9619-da1bcbaadbfd)");
unit.assert_eq8(8'hEB, datamem_ext_i.datamem[13'hBA3],
"EXT DMEM (Testcase #664 f6b652ca-601a-412a-92f1-9adbc03e30b9)");
datamem_ext_i.datamem[13'hBA2] =
datamem_swap[16'hBA2];
datamem_ext_i.datamem[13'hBA3] =
datamem_swap[16'hBA3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #665
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0FC5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #665)");
    end
end

unit.assert_eq16(16'h0FC5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #665 33121cfb-72ab-420d-8e8f-893881a610f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #665 bc90c708-4cc3-40dc-bf79-8ff05cbbaedb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #665 23771fd0-ea39-4e0b-9696-66570303642a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #665 0a38b8fd-f9b3-49da-8d06-e635a6e9c85b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #665 95afbe66-1fdd-44d9-b362-b5ef594bb53d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #665 da71a30c-7f54-49a2-943e-a40fab328949)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #665 e8ec3302-d84a-42e0-9874-1740269dc5d9)");

unit.assert_eq8(8'hC5, datamem_ext_i.datamem[13'h7B8],
"EXT DMEM (Testcase #665 77ef6fe5-917e-43a1-9078-611571bf2bd9)");
unit.assert_eq8(8'h0F, datamem_ext_i.datamem[13'h7B9],
"EXT DMEM (Testcase #665 f7c8ecb3-3f81-4cb1-83f5-d66672310e63)");
datamem_ext_i.datamem[13'h7B8] =
datamem_swap[16'h7B8];
datamem_ext_i.datamem[13'h7B9] =
datamem_swap[16'h7B9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #666
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h67C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #666)");
    end
end

unit.assert_eq16(16'h67C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #666 9aa5644e-3688-4f91-9bc8-8e17aff49931)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #666 cb11a0ff-96a7-4851-a7a5-f2640060b9ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #666 651e8001-8897-4850-8d72-e721fc2470ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #666 15530e5d-b459-4e39-9465-804a04cf0b91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #666 0d0e1c90-cd0a-4e27-a147-0f396c6744a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #666 1d6a077e-e6ee-476d-8b3b-d6123be33c60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #666 50d0ed46-0177-4bad-a717-7375592ee3fa)");

unit.assert_eq8(8'hC0, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h81],
"INT DMEM (Testcase #666 657a673c-2c3f-4b69-aa50-934a0d7f3c37)");
unit.assert_eq8(8'h67, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h82],
"INT DMEM (Testcase #666 a88229f1-d9da-4740-96eb-78cd5e9c0822)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h81] =
datamem_swap[16'h181];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h82] =
datamem_swap[16'h182];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #667
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA46E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #667)");
    end
end

unit.assert_eq16(16'hA46E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #667 d387a0d8-2e15-45dd-87e7-0a1e0ab93c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #667 be6f0943-2037-470a-aebd-e740cd8d8268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #667 6dd2ec5d-b158-4b5c-9e39-4af37ae2b4b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #667 19ef0590-7a6a-4db4-acc2-69fa79480f5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #667 cb162a18-bbd5-4743-b643-c713cfb2bee6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #667 784aa572-7f2f-4723-a90d-88d2290cd47e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #667 0302a963-8233-4971-adcb-426592c695cd)");

unit.assert_eq8(8'h6E, datamem_ext_i.datamem[13'h4C6],
"EXT DMEM (Testcase #667 09f54627-d1d4-4d0d-94a9-0f152e9b1d9e)");
unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'h4C7],
"EXT DMEM (Testcase #667 4cc4225d-1f18-43ad-9eae-9869b19568de)");
datamem_ext_i.datamem[13'h4C6] =
datamem_swap[16'h4C6];
datamem_ext_i.datamem[13'h4C7] =
datamem_swap[16'h4C7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #668
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h76A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #668)");
    end
end

unit.assert_eq16(16'h76A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #668 fa6209e3-c786-428b-a4c7-bb63d52b2e36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #668 f10c3f47-dc64-4cd2-a7d4-f50911167881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #668 4e893d44-d738-42eb-b2cd-1e1c683c0c83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #668 53185c72-2133-4ba6-81e8-85342728bff0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #668 15fdcb03-8caf-416f-b406-e439576fa9ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #668 c45e36f5-e70a-451e-84b0-1fd31e45e589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #668 4f63e841-ebd4-45c1-a354-da68b78cf7ca)");

unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'hE78],
"EXT DMEM (Testcase #668 b0166a2c-12e9-4f86-9135-53c1be44b1b3)");
unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'hE79],
"EXT DMEM (Testcase #668 c51090e0-31c5-48a9-a76a-94aa27edaecd)");
datamem_ext_i.datamem[13'hE78] =
datamem_swap[16'hE78];
datamem_ext_i.datamem[13'hE79] =
datamem_swap[16'hE79];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #669
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4FD1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #669)");
    end
end

unit.assert_eq16(16'h4FD1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #669 c799f4f4-e180-47bd-aece-cf8e2cdc6420)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #669 ceac78a4-9d8f-4000-9524-f4fcb177f01b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #669 603057a2-3128-4b81-96dc-d371b9656d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #669 78e00f46-4748-439e-a3c2-b244623712e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #669 0c4cb2fb-7e39-469a-9bc7-0c35189432a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #669 3641145b-a82e-4851-a1e9-dc9b5fefec8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #669 9a638194-2af8-4bd5-adbf-b70b4c887ee0)");

unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'h71D],
"EXT DMEM (Testcase #669 3d319182-d9a9-4e18-a5be-ded892d33946)");
unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'h71E],
"EXT DMEM (Testcase #669 5c7e2694-559e-4436-8879-d57ae878f760)");
datamem_ext_i.datamem[13'h71D] =
datamem_swap[16'h71D];
datamem_ext_i.datamem[13'h71E] =
datamem_swap[16'h71E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #670
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA700;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #670)");
    end
end

unit.assert_eq16(16'hA700, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #670 fd698640-3400-4b9b-a168-2b6e299417fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #670 801c8496-b359-44f7-b26c-1d8e88e03255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #670 57bfca63-2caf-4eb7-9e5c-0873bc4e124d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #670 d408afbd-89da-4650-b740-3392eed10142)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #670 00b6ad6b-8fd9-48ee-921c-86c340a3d329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #670 21d42fc4-3b8b-4b83-bf9d-2f2e29f94332)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #670 8acc5d7a-ec33-408f-afc4-40747180360b)");

unit.assert_eq8(8'h00, datamem_ext_i.datamem[13'h614],
"EXT DMEM (Testcase #670 2248a146-94f9-43c6-9bc8-701df29bf764)");
unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'h615],
"EXT DMEM (Testcase #670 bba1d6b2-44a4-4495-8dbe-03dba974b5ed)");
datamem_ext_i.datamem[13'h614] =
datamem_swap[16'h614];
datamem_ext_i.datamem[13'h615] =
datamem_swap[16'h615];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #671
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF363;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #671)");
    end
end

unit.assert_eq16(16'hF363, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #671 1681ffb5-5c7a-44ed-aeab-b3db39296151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #671 c91b0522-2444-41bc-a15a-8fd3d7a29fa8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #671 59c23383-324b-4cd3-afd3-7bc7161040b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #671 150f4698-5f9f-420f-9a57-f3e4197a99a3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #671 76229cc3-6c4a-4a28-a6fa-a0ea5584c0f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #671 55dbf4fa-2d0d-4fc5-8c35-fa4d5c521748)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #671 49fd6269-7032-4eb2-b3fc-11b8f6c413d1)");

unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'hD50],
"EXT DMEM (Testcase #671 8e91eef2-2e54-4ee6-bc2a-f83dc9e973a6)");
unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'hD51],
"EXT DMEM (Testcase #671 16898b58-229f-471e-b2cc-4bee62b5395f)");
datamem_ext_i.datamem[13'hD50] =
datamem_swap[16'hD50];
datamem_ext_i.datamem[13'hD51] =
datamem_swap[16'hD51];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #672
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1E62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #672)");
    end
end

unit.assert_eq16(16'h1E62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #672 8a89e06b-9e10-4659-a4aa-87a3d43ae89b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #672 a9424006-8633-46cd-8080-8b27c11941cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #672 fa255a54-a00a-4958-941c-e2279e6c387d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #672 2325ea13-fea6-41b5-8866-e9c8684cc6b5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #672 5db4f4fe-3d6a-44ce-9e28-57dbc4e0ff77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #672 b97aaa24-aef7-4e99-beb3-63f045ac4101)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #672 43af3820-34b9-4a8b-a3a8-d90b5d70252f)");

unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'hA59],
"EXT DMEM (Testcase #672 aeb5b565-07cc-4d86-b4c6-cd54446aa0bc)");
unit.assert_eq8(8'h1E, datamem_ext_i.datamem[13'hA5A],
"EXT DMEM (Testcase #672 eae12edf-b276-4438-b9f4-fcd6b2f1aebc)");
datamem_ext_i.datamem[13'hA59] =
datamem_swap[16'hA59];
datamem_ext_i.datamem[13'hA5A] =
datamem_swap[16'hA5A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #673
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAF92;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #673)");
    end
end

unit.assert_eq16(16'hAF92, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #673 02453b7a-b864-4c41-bf0f-96e4c060c187)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #673 9381c3fa-f8ec-4c3c-9c54-be9a265bcd8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #673 6bada0b9-9cff-49e8-b297-46c449ea0417)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #673 f66d6faa-bc9a-45be-9d32-2ee1a3420ad6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #673 dc5ec599-bb54-4ed8-88b6-72986a14f72f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #673 f7b0a82a-94c1-4853-b470-b18251a7206e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #673 85363007-2963-407e-9257-08a2e1b8461a)");

unit.assert_eq8(8'h92, datamem_ext_i.datamem[13'hE26],
"EXT DMEM (Testcase #673 daf7d260-b27a-48fc-899d-5382dc5f2706)");
unit.assert_eq8(8'hAF, datamem_ext_i.datamem[13'hE27],
"EXT DMEM (Testcase #673 922fa6f3-b875-40cd-8b2f-2ec2b0b3d25c)");
datamem_ext_i.datamem[13'hE26] =
datamem_swap[16'hE26];
datamem_ext_i.datamem[13'hE27] =
datamem_swap[16'hE27];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #674
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7ABB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #674)");
    end
end

unit.assert_eq16(16'h7ABB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #674 1e011f3d-b8e0-4fb8-8e21-1dc178e033d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #674 0654499c-d30f-4f05-bee7-6124690088f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #674 6d386387-1073-4556-bce4-13e31853a6e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #674 4f8bbdd2-856c-4427-a0f4-9f326dbb5693)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #674 683b3684-96f1-440c-a5f7-da0dd6d0b27d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #674 96f90e92-e8b2-4d6c-b442-4b362792189b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #674 9a611d23-d0c7-46a4-a06a-0fdfcc89720c)");

unit.assert_eq8(8'hBB, datamem_ext_i.datamem[13'h850],
"EXT DMEM (Testcase #674 358e1d1a-cc29-4a6c-8c48-3ec66afb0422)");
unit.assert_eq8(8'h7A, datamem_ext_i.datamem[13'h851],
"EXT DMEM (Testcase #674 ca62bdc6-e6b8-4eae-9300-81deb53635e8)");
datamem_ext_i.datamem[13'h850] =
datamem_swap[16'h850];
datamem_ext_i.datamem[13'h851] =
datamem_swap[16'h851];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #675
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h528A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #675)");
    end
end

unit.assert_eq16(16'h528A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #675 cde2913f-f5ce-4749-a2c4-5981f5191425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #675 ee7795ee-0425-4e46-9161-0d23ed004178)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #675 bb1f9aa5-7af9-44c8-ad16-b266d5f80c85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #675 35647611-0744-4b2d-9b3e-0950a2e8023f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #675 174a8880-28c4-4cb4-915b-3773bca97a2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #675 9402e44c-e761-4333-a4ba-7da4ede85425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #675 cb5187c1-9604-4637-9160-acf305308024)");

unit.assert_eq8(8'h8A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h61],
"INT DMEM (Testcase #675 8ad8faa3-aad5-4de6-bad1-d64dcaf53567)");
unit.assert_eq8(8'h52, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h62],
"INT DMEM (Testcase #675 d8519c07-75e0-4c22-bfcd-b47f8d9673bd)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h61] =
datamem_swap[16'h61];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h62] =
datamem_swap[16'h62];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #676
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7BB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #676)");
    end
end

unit.assert_eq16(16'h7BB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #676 c123ff45-0365-40b2-9577-73c0f1706432)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #676 6566f519-2611-4ba8-a615-263773286a49)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #676 768df333-cad7-4927-9376-feda413270e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #676 f12f06e2-3a1c-4bab-923c-2563584d1221)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #676 dad582f2-6374-4bb0-a223-1274ce739f03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #676 bb4c1318-df7b-4a17-a84b-ca077d7b69f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #676 2d5b351d-a59e-4aae-8098-c217ca6dc651)");

unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'hBC9],
"EXT DMEM (Testcase #676 25610b6b-ae1f-4cff-b90a-90c770431fac)");
unit.assert_eq8(8'h7B, datamem_ext_i.datamem[13'hBCA],
"EXT DMEM (Testcase #676 8cfdc540-0805-48de-aa49-9e70021ba52b)");
datamem_ext_i.datamem[13'hBC9] =
datamem_swap[16'hBC9];
datamem_ext_i.datamem[13'hBCA] =
datamem_swap[16'hBCA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #677
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #677)");
    end
end

unit.assert_eq16(16'h02E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #677 12a0a0e7-1c5d-43cc-8f68-b18a3ca33a2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #677 cd4a9952-7797-49b5-bb41-8fa09c240a0c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #677 97da3d87-dbb2-4a52-a497-023b99e83a07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #677 5d6b4a59-1199-439e-9747-150b46d80b11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #677 2c3d8664-a9c8-4331-9a2e-e774a19fe94a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #677 1f802ebe-8b2b-455d-a71c-30a2edbfe4a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #677 64425a22-f764-414c-88ae-1c0d13ad0797)");

unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'hE2E],
"EXT DMEM (Testcase #677 f39f8b2f-31ae-422e-aa32-202dd28ae28d)");
unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'hE2F],
"EXT DMEM (Testcase #677 b65c0089-efb9-4dfe-a60d-d4017b497f52)");
datamem_ext_i.datamem[13'hE2E] =
datamem_swap[16'hE2E];
datamem_ext_i.datamem[13'hE2F] =
datamem_swap[16'hE2F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #678
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h07;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB415;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #678)");
    end
end

unit.assert_eq16(16'hB415, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #678 387dab5c-ee1f-469a-9bbe-4d37272a958d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #678 76932d29-f371-4ac0-a16e-3aedf74ce143)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #678 b2c9e634-92d7-4f5a-a44f-1786fb9976f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #678 32f6a374-daf1-49b6-824c-05f331aab4a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #678 b568f523-eaa5-4ef3-897c-6cf15fc0295a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #678 b688296c-1ef3-4ee0-bbce-df58efa42121)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #678 2f6c1a28-9507-4367-8b29-a9e76f8a413c)");

unit.assert_eq8(8'h15, datamem_ext_i.datamem[13'h9F6],
"EXT DMEM (Testcase #678 55f39616-53e6-4737-864a-30818a78a28d)");
unit.assert_eq8(8'hB4, datamem_ext_i.datamem[13'h9F7],
"EXT DMEM (Testcase #678 9c45ba54-6382-44c5-9753-44b4c482b0da)");
datamem_ext_i.datamem[13'h9F6] =
datamem_swap[16'h9F6];
datamem_ext_i.datamem[13'h9F7] =
datamem_swap[16'h9F7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #679
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB074;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #679)");
    end
end

unit.assert_eq16(16'hB074, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #679 64703b5d-e48b-4f93-b353-5d80968e0912)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #679 ac1a8b47-b539-4088-a0e3-9b82fad2c89c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #679 c377a478-8b8e-48a1-b944-093db0585e55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #679 ec186651-6745-4eba-9676-396516ea2f2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #679 5a9f52ff-528d-4898-af95-655db0e56272)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #679 02c5c0a6-05c4-46ce-a338-ece7b06df2c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #679 e0ef0855-e1d8-4c18-a622-27798fba4ec6)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'hDAA],
"EXT DMEM (Testcase #679 3a155e78-e8e4-4e6d-8a74-c484d00b76be)");
unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hDAB],
"EXT DMEM (Testcase #679 15102d4c-20ca-4d91-89ee-1532d93a6b61)");
datamem_ext_i.datamem[13'hDAA] =
datamem_swap[16'hDAA];
datamem_ext_i.datamem[13'hDAB] =
datamem_swap[16'hDAB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #680
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2FBB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #680)");
    end
end

unit.assert_eq16(16'h2FBB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #680 8292c21e-7edf-4003-a064-8e89ab22bb7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #680 5fb7b39f-168a-42b7-b267-90405dbdc941)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #680 b87aff14-2589-4a1e-bf69-e8b0d0cc1e29)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #680 a3a03391-edd4-418f-9e1f-bd4380165abf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #680 6382b016-d43e-4f09-bc73-336242af127e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #680 05c4abe9-c5cd-4213-83a9-c203eacff8e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #680 21a148e0-93dd-45e8-9ea7-49cb162c2c43)");

unit.assert_eq8(8'hBB, datamem_ext_i.datamem[13'h6AC],
"EXT DMEM (Testcase #680 04dd50df-677e-40f0-abd1-03183690bf87)");
unit.assert_eq8(8'h2F, datamem_ext_i.datamem[13'h6AD],
"EXT DMEM (Testcase #680 774453b2-628a-4f3a-b79b-1b8675537843)");
datamem_ext_i.datamem[13'h6AC] =
datamem_swap[16'h6AC];
datamem_ext_i.datamem[13'h6AD] =
datamem_swap[16'h6AD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #681
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2E7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #681)");
    end
end

unit.assert_eq16(16'hF2E7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #681 d8dda0eb-0139-4d56-885d-df889e3f2871)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #681 cf56ad3e-598d-4741-83c6-5a7436abaf41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #681 3da8b606-5c31-4cd3-a71e-0291f40c2cba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #681 486d06b3-32e1-4e2a-b5d8-c84147d6fc0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #681 d6e0b920-321b-4de3-ae7e-df75395a0b4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #681 8b24c87b-7c56-421c-aed3-fc7ba332eb26)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #681 c4f23aaa-7b58-447a-a46b-f74c5cbd3ea8)");

unit.assert_eq8(8'hE7, datamem_ext_i.datamem[13'h56F],
"EXT DMEM (Testcase #681 e9d06f8f-b1b2-4bd7-91f6-ae7c104637b7)");
unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'h570],
"EXT DMEM (Testcase #681 b1a64f34-2ae6-4831-8ac6-08de85d90e78)");
datamem_ext_i.datamem[13'h56F] =
datamem_swap[16'h56F];
datamem_ext_i.datamem[13'h570] =
datamem_swap[16'h570];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #682
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD6D2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #682)");
    end
end

unit.assert_eq16(16'hD6D2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #682 7f51bc09-ec61-4ff2-80c9-cd47019f2c1f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #682 5f68f4b7-d567-4cab-bbe9-6a9e8bd36eb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #682 8c75d477-8ff6-4dd3-9395-a81ff3df7dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #682 cb505b3c-bf2c-4120-8eab-6d24143df4a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #682 03b9159d-289b-44ec-88f3-a2d43b6f461e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #682 e805d9ba-5d6c-4817-a4b4-d89f1daff6a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #682 c31f67b4-0c9d-4c86-a5d3-f422b41b8d0b)");

unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'hEFF],
"EXT DMEM (Testcase #682 e37f96da-0518-43bf-8f21-195df846a77b)");
unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'hF00],
"EXT DMEM (Testcase #682 ffde2aa4-80a9-43e9-beee-b3ddd38b76b5)");
datamem_ext_i.datamem[13'hEFF] =
datamem_swap[16'hEFF];
datamem_ext_i.datamem[13'hF00] =
datamem_swap[16'hF00];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #683
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC3AD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #683)");
    end
end

unit.assert_eq16(16'hC3AD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #683 762327d9-f6ce-44a0-8e88-604b28a65191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #683 dd67ee5a-d8a8-4c33-b538-28ae4f95003c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #683 b27ac411-1ec1-4d28-b185-88a69803efcf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #683 06ea8731-c2e9-4682-90ab-9ff50ce844b7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #683 850ea7b3-82f9-4db4-8eea-fb964a412fda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #683 d5c59c2b-1a83-4b13-8104-c348006add3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #683 6136ea0e-0d73-4b7a-a60a-8450805af1ad)");

unit.assert_eq8(8'hAD, datamem_ext_i.datamem[13'h548],
"EXT DMEM (Testcase #683 7092999f-bc2f-47cf-8352-a47aa3678140)");
unit.assert_eq8(8'hC3, datamem_ext_i.datamem[13'h549],
"EXT DMEM (Testcase #683 3a9d7692-b655-443b-9357-d58dd23ea2b4)");
datamem_ext_i.datamem[13'h548] =
datamem_swap[16'h548];
datamem_ext_i.datamem[13'h549] =
datamem_swap[16'h549];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #684
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6E97;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #684)");
    end
end

unit.assert_eq16(16'h6E97, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #684 8b3433bf-f1f4-46c4-a4dc-ddbc359edfbe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #684 4a0afbfe-ef4d-42af-bc45-54150c5c3812)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #684 b160e65f-b261-4bc8-9801-3c05d1519302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #684 0fd66747-7fa0-4183-bac1-6a43804b0f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #684 f1cf9273-c2cc-40f3-afc9-be90e42f1e36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #684 debb75d4-c42b-470a-9b32-cddd40c58fd8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #684 74ccb36b-1387-46d5-9b38-ef7b6024cac5)");

unit.assert_eq8(8'h97, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB8],
"INT DMEM (Testcase #684 d73d2b92-f0a7-4b61-8d90-7b8d27675f5a)");
unit.assert_eq8(8'h6E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB9],
"INT DMEM (Testcase #684 af8dfef2-e1c4-41c6-b6c3-2e0b2e96b228)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB8] =
datamem_swap[16'h1B8];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hB9] =
datamem_swap[16'h1B9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #685
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h48DA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #685)");
    end
end

unit.assert_eq16(16'h48DA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #685 7fcbdf9b-c070-475f-bb63-c3fc80b363a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #685 825eec85-b2cb-442d-98a8-29beec2f1db4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #685 dc9eea08-7b41-4f1b-b68e-a8777e7e49d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #685 f2108e66-48ad-472a-963b-6250cc22502c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #685 240f9a26-51c0-4f1b-8b94-e135ebf09aef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #685 79bd7de9-b3b5-4cfc-a927-d980a86518f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #685 f0118a48-d8bd-46ff-bf2c-47d3820d73d9)");

unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'h4AC],
"EXT DMEM (Testcase #685 2053b5f5-040a-4959-8696-1d55ae7d9942)");
unit.assert_eq8(8'h48, datamem_ext_i.datamem[13'h4AD],
"EXT DMEM (Testcase #685 e59b84a0-1ba8-4525-9e55-9eca6418b52e)");
datamem_ext_i.datamem[13'h4AC] =
datamem_swap[16'h4AC];
datamem_ext_i.datamem[13'h4AD] =
datamem_swap[16'h4AD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #686
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h27B6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #686)");
    end
end

unit.assert_eq16(16'h27B6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #686 d951bb2d-085a-46d6-9fcf-d74682b7cc98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #686 ac578285-1f8c-42a5-b7ad-e98fc14bfb56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #686 87c73937-e270-4458-a2fa-5af07c090a70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #686 601cff26-1258-4bbc-aa58-3fc3714f8018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #686 f7759d19-200f-4deb-afa0-e60e92cd6e0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #686 16dfff79-4701-43ce-b470-c2c658a7d6d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #686 354fad44-05f7-4151-9f3a-642383e22c53)");

unit.assert_eq8(8'hB6, datamem_ext_i.datamem[13'hD5E],
"EXT DMEM (Testcase #686 f4b71439-00de-4c09-8d35-8f69c665ba63)");
unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'hD5F],
"EXT DMEM (Testcase #686 ad2d7515-a208-4a96-9288-097cfaecd4a7)");
datamem_ext_i.datamem[13'hD5E] =
datamem_swap[16'hD5E];
datamem_ext_i.datamem[13'hD5F] =
datamem_swap[16'hD5F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #687
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h607D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #687)");
    end
end

unit.assert_eq16(16'h607D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #687 f8180fe1-1db6-4fa0-b209-74ed1811faff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #687 67348d2b-6875-4da5-bea7-07aa52a41d3b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #687 6c2e4fe0-c630-4003-9f0a-3ffc03e3d3f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #687 25cc31c4-f648-4e09-bbc0-3c8b4826433f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #687 df86e107-c4f5-4c26-91d3-e1ef9f0a5162)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #687 fa4b2ab4-d795-40fd-8b67-fb84b70030fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #687 f799c29c-f32b-4661-a48a-ed8a5b389b2b)");

unit.assert_eq8(8'h7D, datamem_ext_i.datamem[13'h444],
"EXT DMEM (Testcase #687 a5cf673e-4480-4b5c-929c-f2822c665afd)");
unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'h445],
"EXT DMEM (Testcase #687 25c03b2c-3fe4-44b5-bef7-05ce39424fe8)");
datamem_ext_i.datamem[13'h444] =
datamem_swap[16'h444];
datamem_ext_i.datamem[13'h445] =
datamem_swap[16'h445];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #688
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD472;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #688)");
    end
end

unit.assert_eq16(16'hD472, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #688 e1b0956a-a75a-4764-bebd-fdf3928bdf72)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #688 4c426710-393f-4e03-a870-dbdaef2c7425)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #688 3500bf88-7900-4367-bcde-220da5a8e8f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #688 4f90db3c-6182-4adb-a363-87b8e8603346)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #688 cf605015-a0bf-4f7f-9e1f-41c2bcc7eab4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #688 6ea947a7-6bee-4dc8-b292-30f8001e11d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #688 fe4ed716-cc24-4eab-9a7a-c52c8f04f27e)");

unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'h9C9],
"EXT DMEM (Testcase #688 c2c058ef-712f-444d-9739-46c9e8bd879b)");
unit.assert_eq8(8'hD4, datamem_ext_i.datamem[13'h9CA],
"EXT DMEM (Testcase #688 189a529b-6b81-413e-ba3f-efc0d60da182)");
datamem_ext_i.datamem[13'h9C9] =
datamem_swap[16'h9C9];
datamem_ext_i.datamem[13'h9CA] =
datamem_swap[16'h9CA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #689
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h803C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #689)");
    end
end

unit.assert_eq16(16'h803C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #689 f7abf30d-701a-45c1-a705-c3f75ae17818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #689 ea9d1191-b414-4485-912b-a1b24f62d57b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #689 ed38e79b-ab3e-4aba-94c2-5e3ad79821ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #689 6443f275-3fd7-4bad-99e4-a36a80f6afcb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #689 776dd5d3-8cf9-4e7b-9c8d-c19aa2045aa9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #689 5c1c8427-e1db-4f77-b44b-5e32aed3f87e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #689 a5233149-88aa-420f-bb27-110c78088bbd)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h845],
"EXT DMEM (Testcase #689 7d7d8126-ffc4-41c1-bb0e-2b59dcf343d7)");
unit.assert_eq8(8'h80, datamem_ext_i.datamem[13'h846],
"EXT DMEM (Testcase #689 c0135030-c93d-4736-8be0-9bd4b2b90282)");
datamem_ext_i.datamem[13'h845] =
datamem_swap[16'h845];
datamem_ext_i.datamem[13'h846] =
datamem_swap[16'h846];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #690
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9EEA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #690)");
    end
end

unit.assert_eq16(16'h9EEA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #690 6ee5de21-64bc-4c27-b453-bee530e5f680)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #690 d80d389c-d279-4c89-9f93-ddda87614c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #690 2e553c46-f440-44a5-b88d-131b4d9b05ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #690 6ef208aa-ec56-40ab-911b-5bcb34f6efb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #690 0a34a381-2343-4f69-a1f4-5d84426ae6ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #690 5e5df439-f4fb-44e1-b415-d9de63b0d05f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #690 bb12f5ea-c880-4d69-a4c3-27347a36f9f8)");

unit.assert_eq8(8'hEA, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hD8],
"INT DMEM (Testcase #690 5002a8a5-a2d1-4178-b09c-41fe6db96998)");
unit.assert_eq8(8'h9E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hD9],
"INT DMEM (Testcase #690 93c96ad3-38d5-47d9-926b-b233c348f489)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hD8] =
datamem_swap[16'h1D8];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hD9] =
datamem_swap[16'h1D9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #691
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h005B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #691)");
    end
end

unit.assert_eq16(16'h005B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #691 78f74b65-0d4d-4c98-963e-aa9d30624bf8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #691 2b21acdc-e52a-456c-ae2a-4a9726808336)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #691 d0e8fe5a-b804-4f15-8c20-1c336cfa1662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #691 b41c0344-c717-4d07-bcb7-1dd08d465600)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #691 83848f28-6344-451f-97dd-3ac9d05f23af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #691 a0fafcbb-0a36-4cfb-b48c-1f7f67ce2450)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #691 5bc55570-eedd-440e-9898-def9c407485f)");

unit.assert_eq8(8'h5B, datamem_ext_i.datamem[13'hD1F],
"EXT DMEM (Testcase #691 49783368-c287-4fbe-9170-3723088ee6c6)");
unit.assert_eq8(8'h00, datamem_ext_i.datamem[13'hD20],
"EXT DMEM (Testcase #691 c544c7a9-efce-4392-aefc-b22c9f637b86)");
datamem_ext_i.datamem[13'hD1F] =
datamem_swap[16'hD1F];
datamem_ext_i.datamem[13'hD20] =
datamem_swap[16'hD20];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #692
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1969;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #692)");
    end
end

unit.assert_eq16(16'h1969, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #692 e8f65a05-85e6-4c12-ad72-0f53f08f96c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #692 8b769e8d-a72b-4821-a3f0-c0fdcfa8df9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #692 e2173c13-4201-4b9a-b408-8d4e6e2e4de3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #692 024aec99-1c75-43d5-b625-8cefe3ce1f0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #692 f08d26a9-40b2-425b-9804-4f8b498c12a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #692 a1e90f6f-befa-4b59-9d88-813fae555d3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #692 dbc02057-8e70-459d-8c8a-8f10ec5d3bb8)");

unit.assert_eq8(8'h69, datamem_ext_i.datamem[13'hBAC],
"EXT DMEM (Testcase #692 873c9a24-81a4-4fd9-8669-a0d81f5c2435)");
unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'hBAD],
"EXT DMEM (Testcase #692 8579bc67-d3fc-4679-848a-281bca5339e5)");
datamem_ext_i.datamem[13'hBAC] =
datamem_swap[16'hBAC];
datamem_ext_i.datamem[13'hBAD] =
datamem_swap[16'hBAD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #693
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF17D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #693)");
    end
end

unit.assert_eq16(16'hF17D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #693 75d6b509-6b63-4267-a1b1-3eab4cd7a57f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #693 2ee225cd-c3eb-4700-9c4b-9c21bcdc80b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #693 28a95d03-ad54-4b34-95e8-69fb2ce27e07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #693 276cdf8c-fefc-4b71-93b1-89e2b96945a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #693 e942b913-9d8f-43bd-a632-d9ffb9619ee7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #693 db7ced8b-e5a7-4219-bd66-3a7fd8050f44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #693 59aaf4ea-7367-46b6-9154-7d7ae884448d)");

unit.assert_eq8(8'h7D, datamem_ext_i.datamem[13'hB74],
"EXT DMEM (Testcase #693 4505d193-c9d4-4383-b6ac-0de9fd3011e5)");
unit.assert_eq8(8'hF1, datamem_ext_i.datamem[13'hB75],
"EXT DMEM (Testcase #693 2de07e33-53bb-4218-b984-29e2e2069a59)");
datamem_ext_i.datamem[13'hB74] =
datamem_swap[16'hB74];
datamem_ext_i.datamem[13'hB75] =
datamem_swap[16'hB75];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #694
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAC28;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #694)");
    end
end

unit.assert_eq16(16'hAC28, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #694 7ac39fe3-d363-4fcf-a849-0be6d0ac0392)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #694 6e906719-9384-4303-a5e5-452e1dbd4dc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #694 9bb2b447-11b3-4030-9677-67ffb892cbb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #694 2bb82b60-411f-4d16-9777-194c10d42707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #694 3a6414c1-f5e7-4c6e-bcf1-bab43af8fa8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #694 46234b27-cb73-4df0-b57d-94dfe905054a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #694 3fe3cf21-3fce-440b-90a9-24fdeaa87810)");

unit.assert_eq8(8'h28, datamem_ext_i.datamem[13'hDFC],
"EXT DMEM (Testcase #694 efb42964-2f8c-42fa-bf79-64f426fe8a23)");
unit.assert_eq8(8'hAC, datamem_ext_i.datamem[13'hDFD],
"EXT DMEM (Testcase #694 3a951a5b-f026-4928-8383-a382f6debdaf)");
datamem_ext_i.datamem[13'hDFC] =
datamem_swap[16'hDFC];
datamem_ext_i.datamem[13'hDFD] =
datamem_swap[16'hDFD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #695
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59A2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #695)");
    end
end

unit.assert_eq16(16'h59A2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #695 9361f5df-54d2-47cb-87d1-7f206e8b85f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #695 a34fad12-c966-4fc9-9305-c560dfc87aeb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #695 9e419846-d100-45a6-b032-b9dd0e989fa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #695 cb25f0ed-df8b-427c-bc5f-0f8f604fe8da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #695 77b5e43f-f66a-40b2-92e2-61c3ef0b037f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #695 c8ba7c81-1f06-422c-b635-55cbae779c2d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #695 139f3c28-c90d-48a9-9d2c-1f38d6b93fcd)");

unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'hD82],
"EXT DMEM (Testcase #695 3c2794c6-0090-4afb-9a0a-69a6d9b6248b)");
unit.assert_eq8(8'h59, datamem_ext_i.datamem[13'hD83],
"EXT DMEM (Testcase #695 8b6a1dfe-b4c7-4022-a4b0-debb9cb9febc)");
datamem_ext_i.datamem[13'hD82] =
datamem_swap[16'hD82];
datamem_ext_i.datamem[13'hD83] =
datamem_swap[16'hD83];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #696
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4450;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #696)");
    end
end

unit.assert_eq16(16'h4450, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #696 dd7a00e4-5f3d-4890-80da-a14dd1574a73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #696 a81fff0b-6135-440a-9334-ca36d30c5c23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #696 d56727a1-b902-4307-9c95-aa885df62066)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #696 808d6627-f96a-4ba9-adac-55e419dfa25b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #696 7b3412a4-693b-4fb6-be68-624e9f00940d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #696 7ef3af77-ba5f-4a1f-bedd-bc885dd3e929)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #696 4bb485ea-f7c8-4fd6-a605-3ca7b485ab8c)");

unit.assert_eq8(8'h50, datamem_ext_i.datamem[13'h54B],
"EXT DMEM (Testcase #696 677e0159-0afc-42f0-b444-159381edde1c)");
unit.assert_eq8(8'h44, datamem_ext_i.datamem[13'h54C],
"EXT DMEM (Testcase #696 5717b38d-c7db-476e-b01d-46bdbffc25d8)");
datamem_ext_i.datamem[13'h54B] =
datamem_swap[16'h54B];
datamem_ext_i.datamem[13'h54C] =
datamem_swap[16'h54C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #697
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8AD3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #697)");
    end
end

unit.assert_eq16(16'h8AD3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #697 db8229b5-8824-49de-8090-22628629cb7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #697 88740451-d599-41c1-885f-b534229d05c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #697 173382f0-99ff-4f03-9b29-433e8e4a4fb6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #697 6b4e9fae-0497-4a41-afed-6dc29dbfe85c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #697 ce3eea1d-f36f-49b7-aa1f-7cc32034f715)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #697 e630b868-0fbd-44ce-b9bb-06421168915f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #697 6c39cf95-ae6e-4313-b0ce-aa6b9cd73f1d)");

unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h81C],
"EXT DMEM (Testcase #697 ab1f0b4c-6755-4abb-9e45-15e6fd0f7d4d)");
unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'h81D],
"EXT DMEM (Testcase #697 85a9214c-2f5a-43b3-b4e7-b596454968bb)");
datamem_ext_i.datamem[13'h81C] =
datamem_swap[16'h81C];
datamem_ext_i.datamem[13'h81D] =
datamem_swap[16'h81D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #698
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2106;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #698)");
    end
end

unit.assert_eq16(16'h2106, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #698 5a73e509-3e21-4275-8d62-8c67851b5434)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #698 54aad0f1-c14b-4781-a708-d9aded330893)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #698 ecced764-0b23-428c-86e9-be86179c320f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #698 e991cbaa-b7c1-4d49-9d64-d1de4ebf8f2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #698 1e802102-7f8f-412b-bd62-2321e1a5f513)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #698 7f24eb15-7943-40b9-952b-df1836b559fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #698 30a513ca-2b73-404f-8fd9-81c7736290f6)");

unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h76A],
"EXT DMEM (Testcase #698 b76d20d1-982c-49dc-b2a4-fe48b6b109c8)");
unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'h76B],
"EXT DMEM (Testcase #698 ff299cdd-2273-496b-b3b2-93be5789dde5)");
datamem_ext_i.datamem[13'h76A] =
datamem_swap[16'h76A];
datamem_ext_i.datamem[13'h76B] =
datamem_swap[16'h76B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #699
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9DB7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #699)");
    end
end

unit.assert_eq16(16'h9DB7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #699 34d8b050-efcc-4bd9-9ca3-b3c47b92c4cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #699 ac14bb44-7d55-4f19-88fe-ea175f6cdf29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #699 1c01ca97-7833-4f49-878c-3fb2a8e6ae4e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #699 b4974058-e671-4af6-b054-bf3dad326a81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #699 932cde7d-fff9-4460-ae28-44ae2c1c3fd5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #699 0b78645f-4006-41f0-a6fb-e732f7722e46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #699 d2c07369-c1c5-4ede-b442-e46d9cc92b3c)");

unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'hE9A],
"EXT DMEM (Testcase #699 e8f0571e-ec7a-4922-9853-741d40f68b96)");
unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'hE9B],
"EXT DMEM (Testcase #699 6cf8237d-f90e-4cc2-baf2-c215f21921ce)");
datamem_ext_i.datamem[13'hE9A] =
datamem_swap[16'hE9A];
datamem_ext_i.datamem[13'hE9B] =
datamem_swap[16'hE9B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #700
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B6E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #700)");
    end
end

unit.assert_eq16(16'h0B6E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #700 0af44925-379a-48e0-9509-fc955e93217c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #700 86f48285-0780-4677-b32f-defeb908b643)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #700 70838b69-a39a-4e76-ac8e-a78c5aaf4639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #700 135180ea-7245-4fd3-bc06-abf723bd8b0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #700 93ba0973-039b-4bb7-9a88-c10038399633)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #700 9c9a71bc-5a7f-4456-bce6-8aa63997c079)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #700 2cdbb6cf-36b0-4e52-8773-93d01fb89346)");

unit.assert_eq8(8'h6E, datamem_ext_i.datamem[13'hD23],
"EXT DMEM (Testcase #700 8bdd7c86-4f4f-4d5f-a6da-208b7b96bc4b)");
unit.assert_eq8(8'h0B, datamem_ext_i.datamem[13'hD24],
"EXT DMEM (Testcase #700 58aa2500-f556-4d8b-bc39-0877fe4df733)");
datamem_ext_i.datamem[13'hD23] =
datamem_swap[16'hD23];
datamem_ext_i.datamem[13'hD24] =
datamem_swap[16'hD24];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #701
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8693;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #701)");
    end
end

unit.assert_eq16(16'h8693, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #701 dd337594-058e-4552-b76a-379221f31c55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #701 de010289-af5a-4720-b4e5-20005e132bf6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #701 dff89b98-0c0b-47a3-ae1f-030b4cd5f54d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #701 78018b6e-b31e-4ac4-aa15-12e355aa03ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #701 8296a00b-30ce-42ab-b6df-fc71905de901)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #701 15854f44-a911-4785-a281-d90fd8d27fde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #701 29f5ee37-9108-483b-b64b-a67d6f77512f)");

unit.assert_eq8(8'h93, datamem_ext_i.datamem[13'h739],
"EXT DMEM (Testcase #701 7545ef5b-268e-41cc-ac06-6ff440abb307)");
unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'h73A],
"EXT DMEM (Testcase #701 594af962-4ce1-4475-a91a-7baf3828ae0a)");
datamem_ext_i.datamem[13'h739] =
datamem_swap[16'h739];
datamem_ext_i.datamem[13'h73A] =
datamem_swap[16'h73A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #702
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8813;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #702)");
    end
end

unit.assert_eq16(16'h8813, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #702 d3a5350f-012b-4acc-984e-55729c18806a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #702 ddc684cb-f4f6-41f8-9dcb-153c648cfc95)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #702 95c25e51-dbac-4d87-a80d-2db9e72959ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #702 b397e723-035b-4119-8d9a-aef0fc7e2590)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #702 8f41e318-3e52-43f0-9ed8-eef980d36285)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #702 81dc8fd4-03c7-46f2-b488-f9935a5e40ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #702 3cd87294-342f-4d31-a5b7-d2a1b764c212)");

unit.assert_eq8(8'h13, datamem_ext_i.datamem[13'h93C],
"EXT DMEM (Testcase #702 9e2d8107-d5c0-44fa-af6b-89947dc06f0c)");
unit.assert_eq8(8'h88, datamem_ext_i.datamem[13'h93D],
"EXT DMEM (Testcase #702 76cc2aff-daf0-4b01-aedd-7205f281bb19)");
datamem_ext_i.datamem[13'h93C] =
datamem_swap[16'h93C];
datamem_ext_i.datamem[13'h93D] =
datamem_swap[16'h93D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #703
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h43D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #703)");
    end
end

unit.assert_eq16(16'h43D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #703 dac9ac18-0003-4c6b-a55a-40be63bd8b1a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #703 df1d3c87-419b-4d15-a775-a8dedf756d90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #703 5375c211-b7af-43d4-a6f5-4a80dbb4b135)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #703 93181927-31e0-43db-81ab-2492681d311f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #703 07fb5849-4ec8-4a55-9f01-4be42a6416ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #703 7f728d29-0c7f-40b5-8d47-5b4a83967f97)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #703 d90eaa8f-773b-4296-bb87-88dd78d5c6e1)");

unit.assert_eq8(8'hD9, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h95],
"INT DMEM (Testcase #703 3cdfd11f-c91b-4708-a401-b1af7aca95f2)");
unit.assert_eq8(8'h43, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h96],
"INT DMEM (Testcase #703 3b80b409-ffcb-44a9-9deb-7f2e7258d430)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h95] =
datamem_swap[16'h95];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h96] =
datamem_swap[16'h96];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #704
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC030;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #704)");
    end
end

unit.assert_eq16(16'hC030, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #704 ef30d7de-9ba0-4d42-ba40-fb2a7c62143f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #704 ec8ea974-c5ca-4c96-8d1c-4aa7403b487c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #704 a1ec9aa8-1911-43b8-8e22-996d9a46287b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #704 2f158463-f9eb-427e-a066-03dd539990de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #704 d0bf799a-f678-4696-a2ca-83ec00b99246)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #704 d009a406-39ef-4368-bae4-4fa25cd3aea1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #704 d4d9a6fd-9dda-480c-bfe8-0426e39bb761)");

unit.assert_eq8(8'h30, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB0],
"INT DMEM (Testcase #704 a406a634-d981-46b1-b6e6-20d2f57b69e8)");
unit.assert_eq8(8'hC0, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB1],
"INT DMEM (Testcase #704 613cc045-c37b-483e-8e5b-3c633c696953)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB0] =
datamem_swap[16'hB0];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hB1] =
datamem_swap[16'hB1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #705
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h82E4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #705)");
    end
end

unit.assert_eq16(16'h82E4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #705 cf6f64d9-aefa-437c-b14a-cbbb1e33038f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #705 7543970c-2100-4b94-bab3-9101367128a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #705 a2418e81-ce96-4e98-acdf-fd5db8f861f7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #705 e1b56ae5-28d4-44e0-aa29-152f24055bb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #705 07012c8b-10af-4a72-88d6-aff07c2b1d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #705 aae3ae3c-55df-4dde-bbcd-921c9aaa4576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #705 9b9515a1-d2da-4de6-8997-56591d11a8c2)");

unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'hA06],
"EXT DMEM (Testcase #705 ce473cd0-578f-47d0-b6e2-10bc1201b4bf)");
unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'hA07],
"EXT DMEM (Testcase #705 c0b6a8f9-cb1e-43cb-9603-03512bc943f5)");
datamem_ext_i.datamem[13'hA06] =
datamem_swap[16'hA06];
datamem_ext_i.datamem[13'hA07] =
datamem_swap[16'hA07];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #706
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h611B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #706)");
    end
end

unit.assert_eq16(16'h611B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #706 5c46cae2-7dec-4291-80f7-ef0eb2e2facd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #706 0d969b87-7a57-4662-9f05-eee9cec49c41)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #706 1879547f-9bc3-4e50-b4c1-317b1116ea15)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #706 8f718088-64b4-4347-b371-e48d67598b17)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #706 280100ae-33fc-4333-a70b-4a13dbd25349)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #706 8a62e634-d211-4fef-8a3e-07f5ec5042e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #706 0369d339-8199-47b2-ae01-e6a44efde6ec)");

unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'h5ED],
"EXT DMEM (Testcase #706 b20f5ba1-0f97-40ef-8fd7-49c04b0d3752)");
unit.assert_eq8(8'h61, datamem_ext_i.datamem[13'h5EE],
"EXT DMEM (Testcase #706 77f2e6d8-1d79-4641-8a06-404d52fe0137)");
datamem_ext_i.datamem[13'h5ED] =
datamem_swap[16'h5ED];
datamem_ext_i.datamem[13'h5EE] =
datamem_swap[16'h5EE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #707
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h333C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #707)");
    end
end

unit.assert_eq16(16'h333C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #707 4fbc194e-efd8-4e53-be25-a246b9345564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #707 500aa30f-9520-4d55-a9d9-d4249c86ee44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #707 c3e19a7f-8f63-4524-a67e-063269be424a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #707 9e6df576-ab8d-4890-9580-839e73787371)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #707 89a9e677-7fc6-41c5-8323-71e9cd0cb9d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #707 8e6e9598-6842-499f-a518-ac0169f4e85c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #707 5f250add-8411-495d-ad42-c0b0a7658e41)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h456],
"EXT DMEM (Testcase #707 da0c02cc-2e62-4072-9302-ff81b02bf405)");
unit.assert_eq8(8'h33, datamem_ext_i.datamem[13'h457],
"EXT DMEM (Testcase #707 4b630464-11b7-4613-8d04-5cedacf580d9)");
datamem_ext_i.datamem[13'h456] =
datamem_swap[16'h456];
datamem_ext_i.datamem[13'h457] =
datamem_swap[16'h457];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #708
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #708)");
    end
end

unit.assert_eq16(16'h5CFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #708 7f932ae1-924b-44af-b69a-71e449333d04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #708 3ddb8877-a8ef-4dc9-8a08-f3b73854cf66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #708 2ed51e91-dfff-4de9-abaf-180399f96dd8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #708 bf388e0e-bf86-4b63-be86-2b1312e10d89)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #708 6b9303ad-46c4-486f-b5ec-b37a0d24cef6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #708 daba702f-78b0-4cf6-b2a4-fe1082d053e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #708 e894807e-e1be-4758-99b1-80a9d3de60b8)");

unit.assert_eq8(8'hFD, datamem_ext_i.datamem[13'h470],
"EXT DMEM (Testcase #708 fb5f45e8-28d1-469b-bad7-4aa7bf95a94d)");
unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'h471],
"EXT DMEM (Testcase #708 888858c7-e5b5-4dff-a654-345f128918b1)");
datamem_ext_i.datamem[13'h470] =
datamem_swap[16'h470];
datamem_ext_i.datamem[13'h471] =
datamem_swap[16'h471];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #709
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF8F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #709)");
    end
end

unit.assert_eq16(16'hF8F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #709 fa34e859-779e-479f-81f7-ac96207de6c8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #709 c770aef6-1066-47e9-88c8-4d7f68c7ba84)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #709 33997dd2-7902-4a3b-980b-a766fd4ef079)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #709 94ae71a5-e84f-4ffb-aa11-67762d522da7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #709 91e54eb3-e1d8-4d2a-8940-a19400533eac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #709 c0ee1558-e25f-4300-9497-14585e48f42b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #709 0f0f5312-6347-499e-ac33-4d4fd214693e)");

unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'h5CF],
"EXT DMEM (Testcase #709 114b7666-a0a4-4896-8313-c9f6aca38427)");
unit.assert_eq8(8'hF8, datamem_ext_i.datamem[13'h5D0],
"EXT DMEM (Testcase #709 67533e14-ef5d-4070-999e-33ffd9be3506)");
datamem_ext_i.datamem[13'h5CF] =
datamem_swap[16'h5CF];
datamem_ext_i.datamem[13'h5D0] =
datamem_swap[16'h5D0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #710
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEE04;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #710)");
    end
end

unit.assert_eq16(16'hEE04, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #710 f6779e91-b1e0-4eb6-b7ff-417132c30655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #710 a5be58a0-3fe7-405c-967f-c6062750bf15)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #710 7958fd3c-9ee9-4c45-a548-edfa0591d745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #710 bb7d4239-7629-46b4-a969-89425284cd95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #710 67b83926-c427-41fe-984b-87d63ffb4eb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #710 4d68439a-bf0e-4996-8d93-0fc0921f8093)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #710 cda98fb8-f719-49e6-9e9c-d60cce827d97)");

unit.assert_eq8(8'h04, datamem_ext_i.datamem[13'h3E2],
"EXT DMEM (Testcase #710 1bf9129c-f07a-4196-9a44-169610f4e577)");
unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'h3E3],
"EXT DMEM (Testcase #710 f2d99b44-5d3f-472b-9b69-ec044ea017ba)");
datamem_ext_i.datamem[13'h3E2] =
datamem_swap[16'h3E2];
datamem_ext_i.datamem[13'h3E3] =
datamem_swap[16'h3E3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #711
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h374B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #711)");
    end
end

unit.assert_eq16(16'h374B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #711 f2571e5c-0a2f-4565-80f4-fc2eb6d567d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #711 b1edefbe-d8e0-4648-86f3-ca482370d381)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #711 1d3c15b8-7e60-4680-b706-6b97fcc4bcac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #711 0c6b1451-40ba-46a7-b49f-3f85ee3a5ae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #711 3c81d045-58cf-4b5c-963c-a42e68e868ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #711 e5f04347-ca7e-45c6-8f29-8940575c47ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #711 f92b543c-0204-4e84-8e04-7f85e2a284d1)");

unit.assert_eq8(8'h4B, datamem_ext_i.datamem[13'h573],
"EXT DMEM (Testcase #711 0899fc51-7cde-41e2-a4f2-fe5af13d5ec6)");
unit.assert_eq8(8'h37, datamem_ext_i.datamem[13'h574],
"EXT DMEM (Testcase #711 bcedb497-a597-4039-a238-3b0b988a5c8c)");
datamem_ext_i.datamem[13'h573] =
datamem_swap[16'h573];
datamem_ext_i.datamem[13'h574] =
datamem_swap[16'h574];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #712
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEC42;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #712)");
    end
end

unit.assert_eq16(16'hEC42, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #712 b870a2ba-b73c-4695-bdef-d1aa6dae3db7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #712 74aacbd0-9e7a-4986-ba81-0f20de5d907a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #712 075eddc2-8648-4836-b8b2-fef46eb3f4a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #712 0562d576-429a-44f9-a15a-c279bba50c19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #712 32914e9d-c844-4e68-8b0d-581da6d1675c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #712 0c22c081-2a54-4cf2-9c2e-66b2ec70af64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #712 7e6b61dd-97d2-4c8c-918d-3d282d74b509)");

unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'hE17],
"EXT DMEM (Testcase #712 876daccb-f443-44ab-a338-9c9513ff3aca)");
unit.assert_eq8(8'hEC, datamem_ext_i.datamem[13'hE18],
"EXT DMEM (Testcase #712 ed0d9e68-948b-4825-865b-df93bb32b112)");
datamem_ext_i.datamem[13'hE17] =
datamem_swap[16'hE17];
datamem_ext_i.datamem[13'hE18] =
datamem_swap[16'hE18];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #713
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0698;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #713)");
    end
end

unit.assert_eq16(16'h0698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #713 364525a8-fb31-486f-ac8a-924c51ece6e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #713 d2ca76cf-f805-421f-8b45-fa8c20d0fb63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #713 615257a5-22cb-4059-bdc4-67b53f4ecd3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #713 ac695e0a-bed3-4b4f-a596-e8716d13aad8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #713 dac69da6-ad9a-4156-a727-02f418e23772)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #713 16dc3fee-1c56-470e-83a1-d7bf17160832)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #713 fec12748-6b14-41d7-ae55-a52081a41783)");

unit.assert_eq8(8'h98, datamem_ext_i.datamem[13'h715],
"EXT DMEM (Testcase #713 7d680db7-14a4-46ea-8314-d3fa88f6a1cd)");
unit.assert_eq8(8'h06, datamem_ext_i.datamem[13'h716],
"EXT DMEM (Testcase #713 8dcecac7-7392-404c-99d3-fd7ac66dd3c6)");
datamem_ext_i.datamem[13'h715] =
datamem_swap[16'h715];
datamem_ext_i.datamem[13'h716] =
datamem_swap[16'h716];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #714
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h89F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #714)");
    end
end

unit.assert_eq16(16'h89F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #714 77351fc8-1caa-46cb-b8c5-bf0d726a3cb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #714 622ec67d-9177-4fc5-b307-14e5ddbbb7ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #714 5dea40d1-0e64-45de-b2b6-85674bb99614)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #714 75ed9c83-0bca-4950-a2e8-9f9bc814a2e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #714 46b0bc29-32cb-4dd4-bc75-62c9e1557595)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #714 e01bf92f-6f80-455e-b6f3-3e01f96b4fe2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #714 f5abb3a1-2e7a-4c15-9fbf-2f694c134b38)");

unit.assert_eq8(8'hF7, datamem_ext_i.datamem[13'h5FF],
"EXT DMEM (Testcase #714 5ec845ea-d312-45f4-ba27-9ecb4f760b81)");
unit.assert_eq8(8'h89, datamem_ext_i.datamem[13'h600],
"EXT DMEM (Testcase #714 6e890cd8-6e13-4f7b-a654-04b164de9524)");
datamem_ext_i.datamem[13'h5FF] =
datamem_swap[16'h5FF];
datamem_ext_i.datamem[13'h600] =
datamem_swap[16'h600];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #715
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF987;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #715)");
    end
end

unit.assert_eq16(16'hF987, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #715 50b969b7-5e1c-44fc-89a8-40c5d7012a14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #715 33f7d6ad-1685-4b33-b87f-ffdd58e19456)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #715 361c946d-dbde-4186-ba1b-2205609cd908)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #715 2fd6b9a9-489a-4686-9f38-ef7de0953cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #715 4fda76bd-173d-4437-8d61-2f323780a8ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #715 160fce35-4020-4ce0-8183-c923c7f67cb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #715 997eb8ae-082e-4534-bc64-c5bd534649e8)");

unit.assert_eq8(8'h87, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1C],
"INT DMEM (Testcase #715 af40da64-f090-4046-9185-289113b62885)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1D],
"INT DMEM (Testcase #715 939c365f-6050-47f3-ad10-145be5c2f43b)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1C] =
datamem_swap[16'h1C];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h1D] =
datamem_swap[16'h1D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #716
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h209A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #716)");
    end
end

unit.assert_eq16(16'h209A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #716 df8900bb-3191-4d8d-999e-7ef2cc8391d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #716 c9f4b0e6-a9ee-4434-8532-3dc58a874654)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #716 861fcaae-86e4-4de7-ab30-43c38a6b2577)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #716 08d5d528-84b6-4edd-84e3-41d912858845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #716 20937e25-5251-4f4a-9945-94c403695e51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #716 844eeb51-b018-4818-9deb-b9153165401c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #716 6bae19e2-e957-4790-a643-275d10dfc941)");

unit.assert_eq8(8'h9A, datamem_ext_i.datamem[13'h561],
"EXT DMEM (Testcase #716 35da50fd-8d89-4a92-a057-e0db60ed75f0)");
unit.assert_eq8(8'h20, datamem_ext_i.datamem[13'h562],
"EXT DMEM (Testcase #716 09c5c7eb-f6a2-4440-8c36-d7b4181ad507)");
datamem_ext_i.datamem[13'h561] =
datamem_swap[16'h561];
datamem_ext_i.datamem[13'h562] =
datamem_swap[16'h562];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #717
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6579;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #717)");
    end
end

unit.assert_eq16(16'h6579, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #717 8395390c-6806-477a-a5d8-11dadd170662)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #717 61c131bc-c400-4db5-865c-69c9cd536d6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #717 4d82c6cb-5fe2-471c-aaa8-b673f66e9a52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #717 2d401cd9-8f8f-41e0-82e6-b4d9f8f9079b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #717 dbdcb0f3-af6e-41cf-aa03-619b347280c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #717 a0d92350-aa6c-41f3-b8f2-5f9db99e0635)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #717 9e46bcde-63a2-4708-9ec1-2851df16bea5)");

unit.assert_eq8(8'h79, datamem_ext_i.datamem[13'h74A],
"EXT DMEM (Testcase #717 285fef71-b735-412f-964e-899e912279f7)");
unit.assert_eq8(8'h65, datamem_ext_i.datamem[13'h74B],
"EXT DMEM (Testcase #717 e8563b44-27ea-4c57-811c-be6c81c99356)");
datamem_ext_i.datamem[13'h74A] =
datamem_swap[16'h74A];
datamem_ext_i.datamem[13'h74B] =
datamem_swap[16'h74B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #718
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7A8D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #718)");
    end
end

unit.assert_eq16(16'h7A8D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #718 0ff0a589-5ccb-48fb-8dad-e37a9667934f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #718 ac7d085b-973f-4b22-ba88-a636ab48805e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #718 a5de5be2-cf59-43d7-8b12-ef161f7146fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #718 a032ca20-16f4-4ad9-9f38-fd8d587c06f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #718 fac8cb8d-5870-422c-a124-cc305afbf03f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #718 63d8b208-429e-43dd-b431-3e22a72ee8ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #718 95c9e5d0-5405-4392-82df-f1d93a8ce0f1)");

unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'h375],
"EXT DMEM (Testcase #718 504b4ffc-43d7-4ec8-a8f7-f59cabe5ef20)");
unit.assert_eq8(8'h7A, datamem_ext_i.datamem[13'h376],
"EXT DMEM (Testcase #718 34352c17-742c-4cd5-9b72-2050d5367fba)");
datamem_ext_i.datamem[13'h375] =
datamem_swap[16'h375];
datamem_ext_i.datamem[13'h376] =
datamem_swap[16'h376];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #719
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h397A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #719)");
    end
end

unit.assert_eq16(16'h397A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #719 533bb85f-dafe-407a-bbb9-7935237b08d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #719 eaaf482f-8007-49d4-bda1-24daf89b6bd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #719 a8cd84d5-33ad-4eac-9fd4-6a45b71bae0c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #719 65b10abf-785f-4937-99d6-5765d6aed611)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #719 cfd97ad4-6487-4e94-a067-e834753f2f21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #719 2a5359e8-b6c1-4f86-ba93-49da1fdc8579)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #719 7eb42970-ecc8-4b37-9375-4e770899807e)");

unit.assert_eq8(8'h7A, datamem_ext_i.datamem[13'hEB2],
"EXT DMEM (Testcase #719 6aa6fc19-ded3-4fd7-bcdb-10506148184c)");
unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'hEB3],
"EXT DMEM (Testcase #719 393357f7-8900-4294-aa0c-2bf6d056d682)");
datamem_ext_i.datamem[13'hEB2] =
datamem_swap[16'hEB2];
datamem_ext_i.datamem[13'hEB3] =
datamem_swap[16'hEB3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #720
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1F21;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #720)");
    end
end

unit.assert_eq16(16'h1F21, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #720 ad1a8267-1e0d-4fe4-8170-4212495c0589)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #720 8624332c-9bf5-4db0-8658-21a131337b5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #720 cb225f1b-189e-454a-9405-3e6f14a6ba6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #720 f4e9ce8e-07da-461e-b7c0-87be1b7b31a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #720 5e7e1c28-d536-43f5-8f87-a920c031a088)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #720 b2cad1d2-6cff-4a3d-8ff5-39a58a7b1160)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #720 22aa0b25-f450-4e0b-8deb-ada8c67228fe)");

unit.assert_eq8(8'h21, datamem_ext_i.datamem[13'hB8C],
"EXT DMEM (Testcase #720 7d171b88-6660-40bb-b0cb-46ceef9827dd)");
unit.assert_eq8(8'h1F, datamem_ext_i.datamem[13'hB8D],
"EXT DMEM (Testcase #720 cabece02-d197-40fa-8889-da06e4434152)");
datamem_ext_i.datamem[13'hB8C] =
datamem_swap[16'hB8C];
datamem_ext_i.datamem[13'hB8D] =
datamem_swap[16'hB8D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #721
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #721)");
    end
end

unit.assert_eq16(16'hD3DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #721 411e95a8-1301-4573-aef8-f2647a6dcd2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #721 453f2d2e-d5bd-4fe7-a734-7565e282367a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #721 422a60ca-1b02-490c-97dc-85554b9bbb27)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #721 7137ec9e-33b4-4c28-9c99-4f6c54ddec0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #721 4128fab5-a604-4583-93c7-74603658dbe4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #721 314bcd91-c4c2-4257-bc87-0b31255d2639)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #721 1c72fba5-bcad-46e7-b54e-82dd09d436b7)");

unit.assert_eq8(8'hDD, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h03],
"INT DMEM (Testcase #721 8336840d-59de-4293-aa17-56dd16366513)");
unit.assert_eq8(8'hD3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h04],
"INT DMEM (Testcase #721 e4752eba-dc85-4165-9f13-159d0d8b4674)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h03] =
datamem_swap[16'h103];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h04] =
datamem_swap[16'h104];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #722
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0CFE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #722)");
    end
end

unit.assert_eq16(16'h0CFE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #722 37304a12-6c23-43dd-a436-48a45f33f3fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #722 dad5053f-2842-4a13-8823-b1373a38b524)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #722 fa32f7f5-18de-40f1-9146-b05a1287b742)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #722 b0a367a9-00b6-4abe-b1de-a43252ffb998)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #722 ad8839ac-ded6-46da-91ea-d3e0f8c4d2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #722 5318d2aa-5190-4a5e-a196-b4a27d6234d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #722 2d397b62-ac35-45dd-9660-08153c4e3fe9)");

unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'h9CE],
"EXT DMEM (Testcase #722 ed6b937a-0df7-44a0-a8bf-f02d8f580bc1)");
unit.assert_eq8(8'h0C, datamem_ext_i.datamem[13'h9CF],
"EXT DMEM (Testcase #722 92a31f68-f5a3-4529-9c62-2f8adbc4bf26)");
datamem_ext_i.datamem[13'h9CE] =
datamem_swap[16'h9CE];
datamem_ext_i.datamem[13'h9CF] =
datamem_swap[16'h9CF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #723
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3EB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #723)");
    end
end

unit.assert_eq16(16'hD3EB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #723 23171c3a-2c4c-44dd-a475-ec1edfd05dd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #723 fb5a810b-0b32-40fe-8d5e-467e75d6ed08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #723 789a508e-9c6b-44a6-abcb-4245f37efeca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #723 d9e5da21-41a2-4200-a6da-ec5017e8c7e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #723 0358b05f-7a0e-4430-9a57-5c8adb53e725)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #723 57ba5fd1-d650-40dd-b2db-f4a10f5b7e68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #723 4ba27f6e-434b-4fec-bba2-fbc1c63bb635)");

unit.assert_eq8(8'hEB, datamem_ext_i.datamem[13'h3FA],
"EXT DMEM (Testcase #723 a6cb1eb8-2eea-4661-bf7c-a565c678d39a)");
unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h3FB],
"EXT DMEM (Testcase #723 fde902d9-c9ec-444a-929a-2d0a449525ac)");
datamem_ext_i.datamem[13'h3FA] =
datamem_swap[16'h3FA];
datamem_ext_i.datamem[13'h3FB] =
datamem_swap[16'h3FB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #724
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h53CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #724)");
    end
end

unit.assert_eq16(16'h53CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #724 8383a2c3-9f96-4add-81fd-232606ce85e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #724 ad43889b-7817-4b58-a85b-438bf82697a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #724 14a5b943-5a69-451c-adba-9a0ba930af7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #724 a451c78c-4cbe-4f24-b5a8-46389844d040)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #724 24ad38b2-72c3-4c7c-a092-b7dd711c0de9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #724 faa19317-b9d2-4014-8fed-330fd71d0e08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #724 92b1e7fc-574d-4af7-aca0-7a99f16ec16e)");

unit.assert_eq8(8'hCD, datamem_ext_i.datamem[13'h37A],
"EXT DMEM (Testcase #724 5e2c95d8-56a9-4bf3-88a5-cb4abe2ef9df)");
unit.assert_eq8(8'h53, datamem_ext_i.datamem[13'h37B],
"EXT DMEM (Testcase #724 82a6632d-3953-4031-90d4-052969dad2bf)");
datamem_ext_i.datamem[13'h37A] =
datamem_swap[16'h37A];
datamem_ext_i.datamem[13'h37B] =
datamem_swap[16'h37B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #725
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE275;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #725)");
    end
end

unit.assert_eq16(16'hE275, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #725 3e271996-eac2-45f7-a499-eb6730e2dfec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #725 cf109993-c444-421b-9a45-608b2c726090)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #725 5c64e91b-4c1b-43dc-9474-0622a53f2972)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #725 bb9c6f87-05f4-4fb9-bee6-3a6d031f2d9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #725 441e6210-34dd-43fe-87fa-32e91cfd140f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #725 247eccdd-b72a-4a35-8cfe-9e90a7dbd2ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #725 f0e3e9d4-ecca-4bfb-8895-b8c6c26917cd)");

unit.assert_eq8(8'h75, datamem_ext_i.datamem[13'hFC1],
"EXT DMEM (Testcase #725 17821479-b67a-4b7f-8bf8-3ef5ae5835fd)");
unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'hFC2],
"EXT DMEM (Testcase #725 5b719423-0d75-4f53-9fd6-0f438e25f262)");
datamem_ext_i.datamem[13'hFC1] =
datamem_swap[16'hFC1];
datamem_ext_i.datamem[13'hFC2] =
datamem_swap[16'hFC2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #726
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA097;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #726)");
    end
end

unit.assert_eq16(16'hA097, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #726 86102591-d831-4a09-9cb2-e690eb088674)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #726 5a791741-007a-4e7e-9711-b3aca1f69c5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #726 a2fe635c-5029-4273-9876-f507afca9166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #726 4bc0873d-f509-4f24-8869-4db617e50a53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #726 a5e5f9ab-672f-4fa6-88d3-905a7ff1bed2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #726 254d0d41-2d99-4146-aab1-5f693ae1e0e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #726 28b28888-4697-4b2f-a8a7-91ce70374a11)");

unit.assert_eq8(8'h97, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h98],
"INT DMEM (Testcase #726 ba13f152-5f0b-44ba-bde0-1e8b918cc89b)");
unit.assert_eq8(8'hA0, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h99],
"INT DMEM (Testcase #726 981b982b-8b82-4fdf-9144-f71edc66f65e)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h98] =
datamem_swap[16'h198];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h99] =
datamem_swap[16'h199];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #727
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2D45;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #727)");
    end
end

unit.assert_eq16(16'h2D45, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #727 f06dd630-98f9-461f-9458-996ad10ef5db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #727 422ba6c5-4de1-4553-b4f8-0a69f4c25d45)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #727 6b173811-5005-4f8e-ace8-2b89725d9522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #727 38f5195b-c310-4014-8f4b-a2f0662a4399)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #727 8668ed2c-a4f6-4000-9d25-53719d05e8a0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #727 8ca3357e-583e-4e1d-ba0d-17e886db7106)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #727 8c29f476-f69b-4658-b4a1-ffc4cbeb19ec)");

unit.assert_eq8(8'h45, datamem_ext_i.datamem[13'hC37],
"EXT DMEM (Testcase #727 97494d15-f87a-4577-8af8-b0d284defb2d)");
unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'hC38],
"EXT DMEM (Testcase #727 76f13972-cbce-460a-99de-f7f9f8876237)");
datamem_ext_i.datamem[13'hC37] =
datamem_swap[16'hC37];
datamem_ext_i.datamem[13'hC38] =
datamem_swap[16'hC38];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #728
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h86FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #728)");
    end
end

unit.assert_eq16(16'h86FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #728 f3288b55-a137-41fb-9c51-20831fc5c4a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #728 4c7d3eac-2fc8-41f6-b033-c87ca66d58a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #728 91057d0b-592b-45f6-89a9-a1c1afa6d537)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #728 9cc043bd-8231-4725-bbb7-1d0eec1a0608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #728 b8ccbf9b-19f0-4791-88f9-d833c876df19)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #728 7d862736-61e1-4877-9426-97a8bedf2491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #728 5ea008ab-cf4b-4659-b332-38a87d41883f)");

unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'hDA2],
"EXT DMEM (Testcase #728 24feaa8d-eba0-4cd6-a942-5f1bb264072e)");
unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'hDA3],
"EXT DMEM (Testcase #728 a42d67d8-66f6-44ec-bbf8-9404e8e3d879)");
datamem_ext_i.datamem[13'hDA2] =
datamem_swap[16'hDA2];
datamem_ext_i.datamem[13'hDA3] =
datamem_swap[16'hDA3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #729
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD707;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #729)");
    end
end

unit.assert_eq16(16'hD707, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #729 d1317fc4-1226-406c-b8d0-acaf3ceaac57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #729 39fb9898-92ac-467f-a8ac-fe51a25e87d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #729 f0a2c60f-98eb-4abb-ae03-bbc7cbf105c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #729 c5bac0e5-b473-4c61-b006-adf20cc3945f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #729 bb246126-e8b2-4ce6-8a7d-13b8ba81a45a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #729 42b20661-9eab-435d-ac6e-21105dc8643f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #729 0c310d0c-925d-4caa-ad27-9dfcb4a4260e)");

unit.assert_eq8(8'h07, datamem_ext_i.datamem[13'hFEA],
"EXT DMEM (Testcase #729 cee224c4-8c1b-434b-81e5-b05a370b400f)");
unit.assert_eq8(8'hD7, datamem_ext_i.datamem[13'hFEB],
"EXT DMEM (Testcase #729 e9f994f7-81d2-457a-97b1-70b4916f7f94)");
datamem_ext_i.datamem[13'hFEA] =
datamem_swap[16'hFEA];
datamem_ext_i.datamem[13'hFEB] =
datamem_swap[16'hFEB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #730
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E9E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #730)");
    end
end

unit.assert_eq16(16'h2E9E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #730 c914d6d6-333d-4fd7-8bfb-caec4efceb36)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #730 9e049b3c-4174-4e28-8235-b47d4720f8a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #730 4b57115b-7930-40f2-bdf3-1847d58ed8bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #730 a5b9de0d-59d7-4e14-8478-6286a1787553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #730 59c3a4ad-9751-4ba2-92db-0229f0b88576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #730 d43b7e75-b056-407f-877e-e80720692bf2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #730 dc091c66-9bd9-421d-a975-d71fbbaaa3f4)");

unit.assert_eq8(8'h9E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h11],
"INT DMEM (Testcase #730 a224fc9c-168e-488c-9c5a-04e8d272c343)");
unit.assert_eq8(8'h2E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h12],
"INT DMEM (Testcase #730 42fdeb31-be43-4892-bce7-a280ffa447d5)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h11] =
datamem_swap[16'h11];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h12] =
datamem_swap[16'h12];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #731
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC16F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #731)");
    end
end

unit.assert_eq16(16'hC16F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #731 8843a9ca-e5d3-447a-8441-255737be3f44)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #731 a30fedd0-58af-4275-88e7-4f22a03e2202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #731 08fd3e88-045d-4b05-80a3-46c3fdd57f41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #731 6b49ffb7-7fae-4095-9fea-e610957ecc8b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #731 907a09c7-ea9a-4caf-97ef-bf963467a0f9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #731 24a5aae6-54a3-4636-9216-4bafd89b9654)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #731 1602fc09-4401-4a18-baa4-e8ba92baeccc)");

unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'h266],
"EXT DMEM (Testcase #731 c8dc192d-4830-4a4f-a075-d6478248e7a3)");
unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'h267],
"EXT DMEM (Testcase #731 c87ea393-db2a-48df-ad10-c09f043d5d84)");
datamem_ext_i.datamem[13'h266] =
datamem_swap[16'h266];
datamem_ext_i.datamem[13'h267] =
datamem_swap[16'h267];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #732
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDF2B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #732)");
    end
end

unit.assert_eq16(16'hDF2B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #732 abd4688f-664f-41ba-8109-ae0a419d1c10)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #732 8150e865-e852-4e93-a8ad-7b616811248f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #732 7acd0a31-fa38-4da5-af16-e5c1c156c00c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #732 c955c5fe-f255-4861-90e3-57cf15edd0eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #732 73bcf27e-5882-46ad-b9ff-0728aea33bf0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #732 af367c77-c748-4311-94d5-ced4382bd34b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #732 6a40829a-8025-48ba-94b7-14ace89dc8a9)");

unit.assert_eq8(8'h2B, datamem_ext_i.datamem[13'hF1A],
"EXT DMEM (Testcase #732 0ae2d15f-0e01-4236-a141-4845a69a1207)");
unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'hF1B],
"EXT DMEM (Testcase #732 ef58452a-4e30-4f68-b6e9-1a212ef4957a)");
datamem_ext_i.datamem[13'hF1A] =
datamem_swap[16'hF1A];
datamem_ext_i.datamem[13'hF1B] =
datamem_swap[16'hF1B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #733
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2663;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #733)");
    end
end

unit.assert_eq16(16'h2663, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #733 d4eeda45-ea68-4e9c-bea6-2ec6ea8be5d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #733 447d1a2d-526c-4a70-a6e8-dae37b213bbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #733 61804411-f1a2-46f5-a3db-d9bf26df1897)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #733 57c73f6a-50e1-4a5f-95fa-dea5ba4bbd4a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #733 83fb2df4-ee06-42d4-b0e8-7b94eeafb803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #733 187c54bf-aad0-47cb-a158-33bbc77dd5df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #733 2a1058a6-ec7b-4ae8-b6f2-01f0d917d244)");

unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'hB4A],
"EXT DMEM (Testcase #733 d8f4ea60-f7a5-4a73-ba4b-a5edc38e6a02)");
unit.assert_eq8(8'h26, datamem_ext_i.datamem[13'hB4B],
"EXT DMEM (Testcase #733 edd075f0-c17c-43f5-96db-33c15adffc6a)");
datamem_ext_i.datamem[13'hB4A] =
datamem_swap[16'hB4A];
datamem_ext_i.datamem[13'hB4B] =
datamem_swap[16'hB4B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #734
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h117C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #734)");
    end
end

unit.assert_eq16(16'h117C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #734 17befa17-b43f-4e4c-8d8f-3f29637b9142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #734 2a702764-9929-467a-aede-0f390b115475)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #734 5bb79f28-addf-4bcc-9ffa-7a51ca4449bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #734 b3beb487-fccc-4841-8e35-63e6c94840a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #734 f35a64df-d491-430e-a3e8-a9eb5730d2ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #734 654801df-960c-40b0-894c-2b6dfdcb23f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #734 a3d92d1d-0006-4093-9c83-924d8a2a2c33)");

unit.assert_eq8(8'h7C, datamem_ext_i.datamem[13'hD05],
"EXT DMEM (Testcase #734 00cfc686-eee8-45b5-89af-e21c5bd5568d)");
unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'hD06],
"EXT DMEM (Testcase #734 feee505b-6cfc-4644-a0f5-3384c10d9a5f)");
datamem_ext_i.datamem[13'hD05] =
datamem_swap[16'hD05];
datamem_ext_i.datamem[13'hD06] =
datamem_swap[16'hD06];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #735
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h38AC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #735)");
    end
end

unit.assert_eq16(16'h38AC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #735 8eb20be5-e3a2-4338-8c63-2ab055c3b621)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #735 fb21cf53-ccd7-47b4-a567-7eb28c4f2b7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #735 cdf4d635-9536-4f1a-b0d5-4149758c9c18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #735 b222b4e9-7bd2-4e4c-a3c0-19e324d77400)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #735 b84c84b1-59ae-47b6-9c87-01b090990ed3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #735 6a13478f-34f7-487f-9f75-0d4dd12da199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #735 dfb32b68-010a-4260-a3cb-7698dcf6c354)");

unit.assert_eq8(8'hAC, datamem_ext_i.datamem[13'hFD3],
"EXT DMEM (Testcase #735 1730aacb-c6d7-4b0c-9493-90cb78a1c7f7)");
unit.assert_eq8(8'h38, datamem_ext_i.datamem[13'hFD4],
"EXT DMEM (Testcase #735 2432fae5-87c1-498f-b9d9-841c95a0bfbe)");
datamem_ext_i.datamem[13'hFD3] =
datamem_swap[16'hFD3];
datamem_ext_i.datamem[13'hFD4] =
datamem_swap[16'hFD4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #736
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8046;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #736)");
    end
end

unit.assert_eq16(16'h8046, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #736 718f1972-a8b5-4ce2-85ff-6d8432ef257f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #736 da75a141-3467-46f4-94de-10f95439dd18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #736 a8e59fbf-4824-4eb2-bd87-3f035853c304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #736 6228e1c0-58b7-41e9-88dd-3be67e88d517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #736 e3cfa3ce-bbc4-4d6b-826a-dfff04b09679)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #736 47839010-fb6b-4108-b728-79d8329ba10c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #736 c2ceb2c7-5e88-4051-adb8-cdffcafd796f)");

unit.assert_eq8(8'h46, datamem_ext_i.datamem[13'h468],
"EXT DMEM (Testcase #736 8d2dd643-ce37-40af-9f06-5c5949c7910b)");
unit.assert_eq8(8'h80, datamem_ext_i.datamem[13'h469],
"EXT DMEM (Testcase #736 76e2e08f-b586-435d-9838-90f7acb1a74c)");
datamem_ext_i.datamem[13'h468] =
datamem_swap[16'h468];
datamem_ext_i.datamem[13'h469] =
datamem_swap[16'h469];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #737
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4917;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #737)");
    end
end

unit.assert_eq16(16'h4917, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #737 111be77b-3ebf-484f-833a-79425e092af4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #737 5003d72a-55eb-4e62-9b1b-819224d86a90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #737 63f01919-d356-4d7b-a240-0b8e8f352c62)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #737 4c033b87-563a-49e2-b634-f007f3563952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #737 095f98aa-af24-4f89-824d-2d095040d266)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #737 50e45994-a20f-4369-bc0a-2ef1f18c75fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #737 732480d4-6336-4e01-b71f-a74af2b5fafd)");

unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'h6BD],
"EXT DMEM (Testcase #737 b0ca1ab2-90ff-425f-b68d-3e34e875da5d)");
unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h6BE],
"EXT DMEM (Testcase #737 e3cd613e-4995-4940-a147-6e8497c283ed)");
datamem_ext_i.datamem[13'h6BD] =
datamem_swap[16'h6BD];
datamem_ext_i.datamem[13'h6BE] =
datamem_swap[16'h6BE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #738
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB03C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #738)");
    end
end

unit.assert_eq16(16'hB03C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #738 3ca36bfb-d4c7-4cf6-9935-69bd4fecda6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #738 fcfb3a9c-1695-4e10-8bab-4875c1fde815)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #738 c6c750f8-4c8c-4c01-ba78-2a5368926005)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #738 a6397c6c-529f-4fe0-9deb-10039c96f15f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #738 6ac45cff-3ada-4ff1-a46c-58213c7041d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #738 b0e4358b-e522-468d-9fe4-8fba80f88d0a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #738 3d3ed21e-a707-4792-a818-9bc9b4541ade)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h852],
"EXT DMEM (Testcase #738 17b9b6ce-fc72-47d1-8edc-ecf3facc0e7a)");
unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'h853],
"EXT DMEM (Testcase #738 a6de5dd3-af9f-40ba-82e4-20520fd3dc67)");
datamem_ext_i.datamem[13'h852] =
datamem_swap[16'h852];
datamem_ext_i.datamem[13'h853] =
datamem_swap[16'h853];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #739
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBE10;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #739)");
    end
end

unit.assert_eq16(16'hBE10, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #739 435fc770-6db6-46e7-903f-7c262ebb2e92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #739 5ac9dac9-0a3c-4170-9ecc-91365ffad9a7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #739 f06693e0-bc28-449a-b36b-3572778c8548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #739 92804057-698f-4d4c-8b56-f07402a560bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #739 b680125a-7e04-4b0f-af6c-7bf197fdfc9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #739 b81ea30c-0e03-4009-ab37-ed0d9434bb1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #739 934a992c-9869-4b2e-bf93-917453962bf8)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'h697],
"EXT DMEM (Testcase #739 74dd934d-b0f9-4bfe-9db4-ba61c8e433a8)");
unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'h698],
"EXT DMEM (Testcase #739 5f3bc6e8-4719-480c-a016-b06f5ef5da92)");
datamem_ext_i.datamem[13'h697] =
datamem_swap[16'h697];
datamem_ext_i.datamem[13'h698] =
datamem_swap[16'h698];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #740
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1BB5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #740)");
    end
end

unit.assert_eq16(16'h1BB5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #740 98b904ab-be67-4d96-8449-d3c4e1577755)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #740 67246699-4055-4f35-9cc6-f8e98ab34d32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #740 20b86fac-b698-4661-83dc-34c28e25e77d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #740 5329f11d-8f11-477c-96f5-67cae6120abd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #740 8c450bbc-cf51-44d6-90d8-2018ad0699e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #740 de05e719-deb8-4ca4-9b40-0074ea05c651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #740 eb332850-3ded-43a6-a5f3-37b41cc9e956)");

unit.assert_eq8(8'hB5, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF6],
"INT DMEM (Testcase #740 2f936206-ae34-448e-8351-2e0379934746)");
unit.assert_eq8(8'h1B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF7],
"INT DMEM (Testcase #740 d5d55ff3-a819-4456-bb4b-fa2cd5d262d6)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF6] =
datamem_swap[16'hF6];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF7] =
datamem_swap[16'hF7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #741
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBFE9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #741)");
    end
end

unit.assert_eq16(16'hBFE9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #741 8fc0250b-b891-49ec-beae-7acfbf8a7a39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #741 cdc50bdb-fa53-4d73-9791-1192ed1630ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #741 d59079cd-081a-4346-abde-05a00aa01df6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #741 dffceb04-5d9c-405b-be36-244b2a9c562c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #741 a2e4f011-a50a-49c3-ae84-5519e62e86a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #741 bbe3f329-7ac2-429f-bfc1-26d823126e47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #741 f9d361ec-77c1-4009-8c97-be53dfc82944)");

unit.assert_eq8(8'hE9, datamem_ext_i.datamem[13'hB5F],
"EXT DMEM (Testcase #741 a6c4dede-6af0-43b0-bcce-2103025e0fc4)");
unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'hB60],
"EXT DMEM (Testcase #741 fbfdd769-5810-4b9e-87f1-14876410e693)");
datamem_ext_i.datamem[13'hB5F] =
datamem_swap[16'hB5F];
datamem_ext_i.datamem[13'hB60] =
datamem_swap[16'hB60];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #742
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5CBF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #742)");
    end
end

unit.assert_eq16(16'h5CBF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #742 b1012820-3440-463a-8bf5-c88fd7e0e386)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #742 9b91e79c-eee7-4480-acf5-317de219a49e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #742 5927f636-170d-40d9-80a6-0f310280f22c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #742 6ed0eece-71bd-479a-9209-629d1ab5e7f9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #742 4eb75ae7-221b-4475-9937-91586f81d63a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #742 ebdf29f2-1c75-4a16-9ae5-323d341cea07)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #742 a3a2379e-dc4b-481c-a18f-ff435546f2bc)");

unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'h582],
"EXT DMEM (Testcase #742 cae89fca-60e9-4216-92e4-114dc42076b0)");
unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'h583],
"EXT DMEM (Testcase #742 1165acab-429a-4454-9d66-d25a3284b21b)");
datamem_ext_i.datamem[13'h582] =
datamem_swap[16'h582];
datamem_ext_i.datamem[13'h583] =
datamem_swap[16'h583];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #743
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #743)");
    end
end

unit.assert_eq16(16'h0B36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #743 b655fdbb-6e90-4119-a927-f93ac0132cb0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #743 82aefa4f-b376-4b88-a7a7-e91599b2f531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #743 44a3283f-2820-42a1-97de-c5b6094b8f4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #743 c2d35a82-a506-4220-aea5-fa1f86192dff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #743 c6b83c08-7135-4952-807f-a677a95b56c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #743 9043846f-8107-433b-adcf-c55ca2e755cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #743 ca527827-b4fb-4b9e-8e5a-5dd90342d8a5)");

unit.assert_eq8(8'h36, datamem_ext_i.datamem[13'hBD5],
"EXT DMEM (Testcase #743 318316b1-6ca9-4fdb-832b-7b2f69169651)");
unit.assert_eq8(8'h0B, datamem_ext_i.datamem[13'hBD6],
"EXT DMEM (Testcase #743 83d008c0-b02b-4fa8-9069-532c91c787cd)");
datamem_ext_i.datamem[13'hBD5] =
datamem_swap[16'hBD5];
datamem_ext_i.datamem[13'hBD6] =
datamem_swap[16'hBD6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #744
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9E7C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #744)");
    end
end

unit.assert_eq16(16'h9E7C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #744 ab64970b-70af-426e-83e8-f341d92f1862)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #744 de3415d0-d27b-48b2-9e46-1599dbfa5378)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #744 06fb739b-26ca-42ca-9f73-cca4dbed2b76)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #744 31a5d254-28a8-4a9e-b3e6-00d6feb4b2d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #744 3f9ab7a7-d474-4c1e-9da3-ec86341f5938)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #744 feac0599-2e56-4bc9-8a97-75deeb64948f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #744 06d57371-20eb-4b0f-beeb-576b332fb6b0)");

unit.assert_eq8(8'h7C, datamem_ext_i.datamem[13'h29F],
"EXT DMEM (Testcase #744 8c1e232c-1ee8-4e33-a8dc-3310e95d5acd)");
unit.assert_eq8(8'h9E, datamem_ext_i.datamem[13'h2A0],
"EXT DMEM (Testcase #744 bf6e4fe1-bfdc-4a06-8bee-50f5ed5d5079)");
datamem_ext_i.datamem[13'h29F] =
datamem_swap[16'h29F];
datamem_ext_i.datamem[13'h2A0] =
datamem_swap[16'h2A0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #745
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1EAB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #745)");
    end
end

unit.assert_eq16(16'h1EAB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #745 5c87d31a-d2a3-48b0-9323-991da599e345)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #745 fa4aaa7a-e818-4a3b-88ac-ccbc84a00d06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #745 7ae7090c-6b94-48b7-8c43-aff8da497281)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #745 c0adc890-6e11-4fed-85fd-3d004dc66f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #745 0b201f41-f64f-43ef-b2c2-81824fadae04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #745 e9dd6203-2ec8-45ff-a303-1ccdc05b28bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #745 de1ebbdb-fc66-46ec-b448-921bf50c447a)");

unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h8A2],
"EXT DMEM (Testcase #745 d1d2b595-ff0e-4e31-8af6-7efa4b3e3105)");
unit.assert_eq8(8'h1E, datamem_ext_i.datamem[13'h8A3],
"EXT DMEM (Testcase #745 11c5d3e5-7454-4194-894f-5aa82a4aaf40)");
datamem_ext_i.datamem[13'h8A2] =
datamem_swap[16'h8A2];
datamem_ext_i.datamem[13'h8A3] =
datamem_swap[16'h8A3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #746
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF7EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #746)");
    end
end

unit.assert_eq16(16'hF7EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #746 9ff26d8a-d554-4295-9c4d-01b171d5b81d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #746 a9cf9037-3153-4535-bad5-f2cce71c65fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #746 da7cb50a-1f26-49d8-8e15-44150e89b528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #746 8bb46d48-961f-4689-8bf2-387af20582cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #746 1a4aad37-d846-44ff-8acf-065f07fda8cb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #746 02614b57-6497-471e-b785-59bdaa6eaa1e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #746 6b94fcf3-c2f0-4869-855b-d8aaf32113db)");

unit.assert_eq8(8'hEF, datamem_ext_i.datamem[13'hE1A],
"EXT DMEM (Testcase #746 72d071fe-c2d0-42de-8d7b-7ab19e234a92)");
unit.assert_eq8(8'hF7, datamem_ext_i.datamem[13'hE1B],
"EXT DMEM (Testcase #746 06f4d9fa-41cd-4bd7-9542-8906e6913f4e)");
datamem_ext_i.datamem[13'hE1A] =
datamem_swap[16'hE1A];
datamem_ext_i.datamem[13'hE1B] =
datamem_swap[16'hE1B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #747
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD185;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #747)");
    end
end

unit.assert_eq16(16'hD185, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #747 da754527-c578-4c83-8728-869d48f5b896)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #747 9da6ffda-e89e-4e16-9976-bd1f62091183)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #747 7b11becb-49a0-4932-9122-7e8cd5051602)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #747 24c66d4e-87e2-4b00-b9c9-b29d63a8854b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #747 a8ae3db7-db7d-4516-af15-ac7575a39a94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #747 ff8f98aa-24e2-4051-a939-98afdc64efac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #747 30874a0a-286f-46c9-8fdd-1be83544a745)");

unit.assert_eq8(8'h85, datamem_ext_i.datamem[13'h75E],
"EXT DMEM (Testcase #747 0aec8fd6-f94f-4bea-bbe5-2c41bc84de59)");
unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'h75F],
"EXT DMEM (Testcase #747 f064403f-a86a-476d-b99b-de6f29ac7323)");
datamem_ext_i.datamem[13'h75E] =
datamem_swap[16'h75E];
datamem_ext_i.datamem[13'h75F] =
datamem_swap[16'h75F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #748
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5327;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #748)");
    end
end

unit.assert_eq16(16'h5327, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #748 a795cdfd-6d0a-4896-8706-421e2e46c9a1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #748 dd016493-807f-4ece-9868-ccde469258f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #748 6dbef3f9-28e3-4801-a5e5-35b53e208eff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #748 1f289b4f-3e34-4768-939c-56a1a097e6af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #748 7bf76a1c-2c2f-4b8a-aa09-f541fbb03bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #748 5bf1ec5d-3d9c-41a3-b6c5-bc9b16117d99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #748 e575fed6-2714-42b9-808a-749045ac0e60)");

unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'h292],
"EXT DMEM (Testcase #748 789d06df-00e4-49d3-8254-22d40c7bcea2)");
unit.assert_eq8(8'h53, datamem_ext_i.datamem[13'h293],
"EXT DMEM (Testcase #748 ff8142b7-8c6c-4593-9362-dab19cab1869)");
datamem_ext_i.datamem[13'h292] =
datamem_swap[16'h292];
datamem_ext_i.datamem[13'h293] =
datamem_swap[16'h293];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #749
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD50A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #749)");
    end
end

unit.assert_eq16(16'hD50A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #749 9426c112-224a-4119-95cb-6b005dc5c321)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #749 ce5e844e-6622-4408-a170-7714fc1ef899)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #749 62b28e55-3a88-490e-8981-9ff5dc199216)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #749 6e62d324-2266-471e-a341-af60d839fe88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #749 b6e42e79-3a8c-4272-b66c-99c6446fc142)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #749 53c70e8c-7b3e-4ecd-9cdb-b0decba4de2b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #749 3dd56a78-d4e0-41c8-bd1a-424833347d6e)");

unit.assert_eq8(8'h0A, datamem_ext_i.datamem[13'h9EF],
"EXT DMEM (Testcase #749 fd4ac936-dfc8-4f9c-91a9-702763899313)");
unit.assert_eq8(8'hD5, datamem_ext_i.datamem[13'h9F0],
"EXT DMEM (Testcase #749 1e7a148b-b235-46ef-9e36-4201f472dbbb)");
datamem_ext_i.datamem[13'h9EF] =
datamem_swap[16'h9EF];
datamem_ext_i.datamem[13'h9F0] =
datamem_swap[16'h9F0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #750
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF7B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #750)");
    end
end

unit.assert_eq16(16'hBF7B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #750 bd08faf1-6d01-4148-b6e2-8b575774e2c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #750 6e0a7aaa-3f94-4444-a99c-9d2cd0ff13f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #750 9b957c35-0a17-48c3-bddf-a99d2e1e0cbe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #750 46e0b415-c765-4636-a5be-836e3dbf423f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #750 e8967717-8ee3-40b8-be17-a1442b019d2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #750 d9b6ccb9-43c0-400f-98c9-1acfad88fd0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #750 361e1b6a-51b2-4a6d-ac0d-d787a8a20cad)");

unit.assert_eq8(8'h7B, datamem_ext_i.datamem[13'h70A],
"EXT DMEM (Testcase #750 74939fc1-b6ad-4cd7-9926-ec0bad1a8c07)");
unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'h70B],
"EXT DMEM (Testcase #750 bc995646-7d63-4253-aec6-950660b1735b)");
datamem_ext_i.datamem[13'h70A] =
datamem_swap[16'h70A];
datamem_ext_i.datamem[13'h70B] =
datamem_swap[16'h70B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #751
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9023;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #751)");
    end
end

unit.assert_eq16(16'h9023, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #751 afc162f3-1957-4d2c-9b7e-3d03711271ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #751 50e7f74b-5b41-47fc-9634-9b12ef33991d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #751 bb12dfb0-5194-462b-bf20-f5a7741d5cd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #751 9b0cbf03-06b4-4d7e-bc10-d3d0eb82c7e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #751 232c1994-fc05-4a50-b1e4-36004bb3e952)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #751 38bf55d7-83c8-49b5-8d75-f86a0840ed64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #751 ddd87d30-5486-4602-bd87-909e3f5bf35f)");

unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'hB46],
"EXT DMEM (Testcase #751 82303670-078e-4d92-bfc1-c96847ddb2db)");
unit.assert_eq8(8'h90, datamem_ext_i.datamem[13'hB47],
"EXT DMEM (Testcase #751 33c31809-132e-4c6f-ba14-3ccc49ac0ae3)");
datamem_ext_i.datamem[13'hB46] =
datamem_swap[16'hB46];
datamem_ext_i.datamem[13'hB47] =
datamem_swap[16'hB47];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #752
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h36B2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #752)");
    end
end

unit.assert_eq16(16'h36B2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #752 35a95ec1-8dec-43c2-a8b6-72d8174158ba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #752 48e9ad5b-daab-42d1-b609-8a260735b608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #752 985b34d0-c897-40e9-9e77-bb6c40fc1c71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #752 73703ede-de21-4615-96ab-a620ac32676a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #752 6ea7bbec-13d3-4aaf-89f5-3068d76a18b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #752 ddbf138f-1056-428e-8948-0b2c203b61d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #752 095372b7-4048-4ff7-824d-c91dd2c1e389)");

unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'h3DD],
"EXT DMEM (Testcase #752 13ef5e2e-c372-4cbc-a1a4-4985f034a164)");
unit.assert_eq8(8'h36, datamem_ext_i.datamem[13'h3DE],
"EXT DMEM (Testcase #752 683bebca-7d1a-4bc6-9e94-71a00f75dac4)");
datamem_ext_i.datamem[13'h3DD] =
datamem_swap[16'h3DD];
datamem_ext_i.datamem[13'h3DE] =
datamem_swap[16'h3DE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #753
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C40;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #753)");
    end
end

unit.assert_eq16(16'h6C40, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #753 601cb931-d848-4afc-913f-290a9192e9fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #753 c99a086c-8396-43fa-9649-3bab7bb1803b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #753 2327bf4d-5f0c-4f4a-9a4c-25da76af5903)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #753 8fdfb28a-7cea-4818-ac4a-199cf88ce8e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #753 3fa3a282-b0ce-4b67-9443-91abfc922488)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #753 a188cf23-9834-45eb-9dc1-ad62e050ab41)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #753 56540c86-9554-48bc-9831-e59ba9298eec)");

unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'hA77],
"EXT DMEM (Testcase #753 c2c0bb36-9711-436e-bbc2-f9f7d516789e)");
unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'hA78],
"EXT DMEM (Testcase #753 37d41d72-1ae1-400f-af5a-f1debc164463)");
datamem_ext_i.datamem[13'hA77] =
datamem_swap[16'hA77];
datamem_ext_i.datamem[13'hA78] =
datamem_swap[16'hA78];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #754
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h483F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #754)");
    end
end

unit.assert_eq16(16'h483F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #754 cef00039-eddc-4277-bce3-f419fc7a6e89)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #754 045bffda-93e2-4047-b512-56f32305400e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #754 421bd128-6edf-49f4-8a5a-6bd0cb9db916)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #754 6645b822-14f4-4ae3-8090-c5bbce6c57ba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #754 01c54e8a-08e0-490d-b1ec-3f8d04fd6d6c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #754 720a5de4-094a-402b-ba99-0bdc6d86e178)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #754 acf5cf91-adbb-407e-8eaf-210cc63d46d1)");

unit.assert_eq8(8'h3F, datamem_ext_i.datamem[13'h62A],
"EXT DMEM (Testcase #754 3d55ddc9-49a1-45c8-b14a-9cc842914ff7)");
unit.assert_eq8(8'h48, datamem_ext_i.datamem[13'h62B],
"EXT DMEM (Testcase #754 26fd08cb-22e4-4260-9b3d-883bc0d5af3e)");
datamem_ext_i.datamem[13'h62A] =
datamem_swap[16'h62A];
datamem_ext_i.datamem[13'h62B] =
datamem_swap[16'h62B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #755
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1109;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #755)");
    end
end

unit.assert_eq16(16'h1109, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #755 3d9e4eed-84c6-41f8-a5f0-bbd60a8ef125)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #755 7e4f2f9e-1ce5-4c25-915a-6c63c32e8740)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #755 710ba48c-1584-4e85-a778-40091215696b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #755 15e2691c-42e1-455d-8dd9-f3bf6e346bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #755 a3f4be8a-d397-44dd-a32d-d12fb6a38683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #755 d79fa6b5-aac0-4ff9-a902-69de53f4510e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #755 91fbfdb9-9b39-4d13-b24a-eddd0c63e3ff)");

unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'hAC8],
"EXT DMEM (Testcase #755 f61dc7f6-5af7-454f-a4c4-d82983d26891)");
unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'hAC9],
"EXT DMEM (Testcase #755 baf8eca9-242f-4cb4-9ed5-dc03bac448be)");
datamem_ext_i.datamem[13'hAC8] =
datamem_swap[16'hAC8];
datamem_ext_i.datamem[13'hAC9] =
datamem_swap[16'hAC9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #756
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #756)");
    end
end

unit.assert_eq16(16'h3C7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #756 2a4cd992-e938-4561-94fe-5d33a492dedb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #756 4c42d00d-be0b-46aa-896b-36507ebf099a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #756 3d2d37aa-7786-41a9-949c-807992fed517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #756 fc5581f0-df3f-4e78-bf34-fc00e6beae85)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #756 bd7b0d90-58a0-46db-ba0c-5d0cf2ab5c30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #756 9e3abf95-7c0d-4c21-98ca-12d5e4a67774)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #756 17922b59-473f-4555-98fd-c91f924cf76b)");

unit.assert_eq8(8'h7D, datamem_ext_i.datamem[13'h454],
"EXT DMEM (Testcase #756 35cb5503-2eff-42aa-a483-86be03df6c21)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h455],
"EXT DMEM (Testcase #756 312bdb2d-69a7-4d2e-a447-be37f081e6ed)");
datamem_ext_i.datamem[13'h454] =
datamem_swap[16'h454];
datamem_ext_i.datamem[13'h455] =
datamem_swap[16'h455];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #757
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E93;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #757)");
    end
end

unit.assert_eq16(16'h2E93, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #757 7c32ce90-9fad-4709-94c0-ced4d66be1d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #757 bc6ecf41-0850-4fb1-86eb-c5f007240d60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #757 f6bce913-9e6b-42b9-b512-a934ca02f15e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #757 83e8acef-7f53-4d69-9857-b789008e6e57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #757 5364163d-a4a6-4d40-87b3-c61dcf29864c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #757 4e800501-d1cf-4b6d-8839-fb365826fff0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #757 fb7cad37-232a-46a1-a07f-3e00a6bb99c0)");

unit.assert_eq8(8'h93, datamem_ext_i.datamem[13'hC57],
"EXT DMEM (Testcase #757 26c72cea-9846-47d6-a2d9-d96496c54fd2)");
unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'hC58],
"EXT DMEM (Testcase #757 57a43eaf-5d2d-4862-a44a-8285ed23a558)");
datamem_ext_i.datamem[13'hC57] =
datamem_swap[16'hC57];
datamem_ext_i.datamem[13'hC58] =
datamem_swap[16'hC58];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #758
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h93CD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #758)");
    end
end

unit.assert_eq16(16'h93CD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #758 a178f0ca-a8e2-4be5-97fc-18dd6426f996)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #758 bba01fae-af75-49e0-abe0-3ef0cf99bd7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #758 e35e8963-eb26-4cb4-a5db-66f0f85d5971)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #758 61ce3c00-7045-448a-a56f-b2e8e29e086d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #758 eb8c0bc5-6fac-4821-82d2-fd239a86d214)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #758 d61346df-d65c-48b3-bbf3-333ffdb2c940)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #758 10a2eb42-c4ff-459c-a83d-d64c30899d89)");

unit.assert_eq8(8'hCD, datamem_ext_i.datamem[13'h5CB],
"EXT DMEM (Testcase #758 4e0e9213-49a8-4367-9d40-3f2914ba6bf2)");
unit.assert_eq8(8'h93, datamem_ext_i.datamem[13'h5CC],
"EXT DMEM (Testcase #758 b2e2667f-37a2-4ac8-9a83-c36f54aee525)");
datamem_ext_i.datamem[13'h5CB] =
datamem_swap[16'h5CB];
datamem_ext_i.datamem[13'h5CC] =
datamem_swap[16'h5CC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #759
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h689E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #759)");
    end
end

unit.assert_eq16(16'h689E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #759 c2f1caf6-19b7-41a0-a23c-8ea5a3e6dedb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #759 e78d7e49-2094-46d8-a34c-d0672051c22e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #759 c496e7dc-561e-4d11-8a15-6f3cfab81dc6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #759 f5a50caf-a3f9-4a8d-9c92-cd362f89997d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #759 06638dc1-f059-4d10-8475-9755f57590c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #759 d8b30d91-a4f2-4978-a37f-cbb095226029)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #759 0c040f96-2628-494c-85ea-d118c0f30976)");

unit.assert_eq8(8'h9E, datamem_ext_i.datamem[13'hD2E],
"EXT DMEM (Testcase #759 49e828da-eb48-4c06-8afb-98c560550552)");
unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'hD2F],
"EXT DMEM (Testcase #759 ece219c2-c609-4b25-b594-4ce97452139a)");
datamem_ext_i.datamem[13'hD2E] =
datamem_swap[16'hD2E];
datamem_ext_i.datamem[13'hD2F] =
datamem_swap[16'hD2F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #760
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA1FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #760)");
    end
end

unit.assert_eq16(16'hA1FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #760 29c28169-8d7c-4c79-8ce5-6eb9b02750b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #760 a68f9fee-178a-44bd-aa72-3f32a98639d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #760 12a069a9-ab51-495d-8805-8189a55ab2cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #760 17477c1b-a498-40fd-bf99-7532b2a7970d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #760 c6a0c40d-1680-4e2f-8fbe-f31ff6fb9d6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #760 ba8791c9-ff09-44b0-8a5d-e821179e7c4b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #760 c84f4bce-42ce-4c9d-991b-fe0c21aa2970)");

unit.assert_eq8(8'hFB, datamem_ext_i.datamem[13'h60F],
"EXT DMEM (Testcase #760 3e9db5b9-b74d-4b1f-994c-247dfd941014)");
unit.assert_eq8(8'hA1, datamem_ext_i.datamem[13'h610],
"EXT DMEM (Testcase #760 658090a9-7484-429c-86da-702826b50866)");
datamem_ext_i.datamem[13'h60F] =
datamem_swap[16'h60F];
datamem_ext_i.datamem[13'h610] =
datamem_swap[16'h610];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #761
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB65;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #761)");
    end
end

unit.assert_eq16(16'hAB65, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #761 d146444f-d35a-458e-9ea2-06e4b4f10376)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #761 085fa7b5-0617-4f9f-be32-4d1312fa3d90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #761 358abf9b-d179-4f25-9df9-40441567b0bf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #761 25a91d14-a827-46bc-aa4a-796269a551f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #761 9c1032c3-78fd-4cbf-adb7-c65c8b264279)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #761 d3dee5f2-b48c-49b2-8229-653fd9688a82)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #761 aee20506-eba7-4508-99e5-a49c02d42220)");

unit.assert_eq8(8'h65, datamem_ext_i.datamem[13'h3C0],
"EXT DMEM (Testcase #761 0810868e-bbb3-4ff7-b866-fa90cc6418e3)");
unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h3C1],
"EXT DMEM (Testcase #761 d0daa7b4-91b6-4748-968c-ae6931b14507)");
datamem_ext_i.datamem[13'h3C0] =
datamem_swap[16'h3C0];
datamem_ext_i.datamem[13'h3C1] =
datamem_swap[16'h3C1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #762
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6FF3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #762)");
    end
end

unit.assert_eq16(16'h6FF3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #762 c0de6a2c-783d-4781-8007-22a584121e1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #762 7c21bf69-fd89-4908-95c3-f407f38f028c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #762 20b7d1bd-ca61-4bfa-b897-c0b2b9677f60)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #762 8da1ed2c-af30-471e-84f7-2c6f08a8447c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #762 98ef5247-ea28-41ca-9b82-aea6e5ff7aa8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #762 e5015445-e974-4611-aa25-3e7fd17b00c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #762 57aa6320-a1f8-4709-9ba8-ec44b671fc6c)");

unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'hC07],
"EXT DMEM (Testcase #762 027858e5-0be4-4b3f-94bf-55848e448925)");
unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'hC08],
"EXT DMEM (Testcase #762 5d2e2219-3368-4afc-858d-520958bc18ab)");
datamem_ext_i.datamem[13'hC07] =
datamem_swap[16'hC07];
datamem_ext_i.datamem[13'hC08] =
datamem_swap[16'hC08];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #763
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4F55;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #763)");
    end
end

unit.assert_eq16(16'h4F55, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #763 c5bd67d6-c12d-4ca6-ab6f-9f58139bf870)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #763 e4b92482-7378-4a5d-92b3-037da8d61ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #763 858d52c2-71ab-4774-90e8-e2b070c08a24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #763 b9290ee3-0dda-48ae-b6e8-21eb296e6e40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #763 67e2442b-e27c-47bd-8313-8fe363252aca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #763 03ab7302-2c79-44ec-95d2-0a13f384f58e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #763 6f9a7d25-b3d1-47ed-b0a1-d84e6494c049)");

unit.assert_eq8(8'h55, datamem_ext_i.datamem[13'h859],
"EXT DMEM (Testcase #763 4ea7fe21-67bb-4ae1-8088-d9929941a0fd)");
unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'h85A],
"EXT DMEM (Testcase #763 9dd25b6f-10f1-4431-bd02-5a2b1d13dda8)");
datamem_ext_i.datamem[13'h859] =
datamem_swap[16'h859];
datamem_ext_i.datamem[13'h85A] =
datamem_swap[16'h85A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #764
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA9F1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #764)");
    end
end

unit.assert_eq16(16'hA9F1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #764 4ac88e9b-e63a-49c4-a183-5a1624eb27b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #764 f1ac46eb-9656-444c-bd3a-12e2a3cf33cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #764 5f9aef12-8eff-4482-8f59-4d83b93824a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #764 d7e8b3a6-8c17-48df-b843-b25130d7d87b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #764 35d855b5-8e42-48b9-ae03-86739609ef6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #764 b24e1ca3-034c-4275-bf7d-52bdc3093623)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #764 2e2c78d7-eb41-476e-8ff3-0d0b0efbe7c0)");

unit.assert_eq8(8'hF1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h42],
"INT DMEM (Testcase #764 01f5584a-0173-47c9-9bd3-26821e097e18)");
unit.assert_eq8(8'hA9, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h43],
"INT DMEM (Testcase #764 f3da7a04-937a-4bc7-b96a-9bb5cb5cc3e1)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h42] =
datamem_swap[16'h42];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h43] =
datamem_swap[16'h43];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #765
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7CDC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #765)");
    end
end

unit.assert_eq16(16'h7CDC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #765 0daa8e79-24dd-488e-bd13-e9c228bf6927)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #765 3323390f-337f-481a-904b-449faab1d20e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #765 97ffd1bc-507d-4950-a864-d9abc79c325c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #765 aea4d10f-7f4e-4217-98f2-c82857ca2f87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #765 4742d09b-8e54-4d1e-9cbe-a32565246de7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #765 44575217-4ce5-4564-be31-1bdde788b980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #765 a897f221-fd33-473d-9f6a-e0fad5fb42cb)");

unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'h46F],
"EXT DMEM (Testcase #765 e132dbed-7ac8-41b8-b42a-7acfe8524b3c)");
unit.assert_eq8(8'h7C, datamem_ext_i.datamem[13'h470],
"EXT DMEM (Testcase #765 86fbf22d-c7ea-4a95-9aee-cbdd137c0fe5)");
datamem_ext_i.datamem[13'h46F] =
datamem_swap[16'h46F];
datamem_ext_i.datamem[13'h470] =
datamem_swap[16'h470];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #766
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h256F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #766)");
    end
end

unit.assert_eq16(16'h256F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #766 1c60fc89-2a89-47dc-b8fa-cfd1d41675fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #766 53c7821e-d8bd-4ee8-965b-b9daea98e2ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #766 eacdc60d-738b-4b35-9ce3-6c544e7d21df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #766 8dd4013d-99ba-42ad-ae96-713b93638d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #766 1886b645-0fc5-4e7e-90aa-1407729700ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #766 ddc31816-938b-4459-9edb-f6eb1a5ad084)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #766 c3ffe868-0a89-4a99-9eb8-9e728edc6145)");

unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'hFDF],
"EXT DMEM (Testcase #766 8ec6c880-99fe-4dba-96a4-c1499250169f)");
unit.assert_eq8(8'h25, datamem_ext_i.datamem[13'hFE0],
"EXT DMEM (Testcase #766 88623fe4-7aa8-4f2e-8374-1a4caf8f69cd)");
datamem_ext_i.datamem[13'hFDF] =
datamem_swap[16'hFDF];
datamem_ext_i.datamem[13'hFE0] =
datamem_swap[16'hFE0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #767
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56B1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #767)");
    end
end

unit.assert_eq16(16'h56B1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #767 e0c29795-bf83-4894-8a77-9338ecfd741d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #767 96e0acb3-c9f4-4ff1-b6b3-690218b6f522)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #767 e6f0f7cd-4df2-4ae3-95b8-f393d852b919)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #767 89e2f58b-b9b6-4ebc-ba56-361b831089a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #767 c2620bfa-b79e-4ae7-9e60-cbab7bac553a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #767 ca516fba-e58e-4df1-936b-4772f3046a5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #767 4eb61554-1530-4724-8cbd-0178bb8f16db)");

unit.assert_eq8(8'hB1, datamem_ext_i.datamem[13'h31F],
"EXT DMEM (Testcase #767 872693e4-bdbb-4bbd-95bf-911f89b805c9)");
unit.assert_eq8(8'h56, datamem_ext_i.datamem[13'h320],
"EXT DMEM (Testcase #767 3c65ec96-fc05-4be6-aa61-ffaef5b6f3bf)");
datamem_ext_i.datamem[13'h31F] =
datamem_swap[16'h31F];
datamem_ext_i.datamem[13'h320] =
datamem_swap[16'h320];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #768
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #768)");
    end
end

unit.assert_eq16(16'h02C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #768 df5b4215-d70d-4770-baa9-3c7a48ea5ff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #768 8dad664c-f6c8-4876-afe2-e16f09021e3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #768 9610bf44-dc48-4582-bef5-1ca3115dfc07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #768 6011388e-2394-49d0-b9ae-a5ee3a3515fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #768 dbec4684-aeef-4f21-a123-2341673e99ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #768 3a41aa01-952a-480f-be5b-01d088ae0f98)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #768 f48d22fa-d97b-4b8d-97a2-31e5fb826f78)");

unit.assert_eq8(8'hC6, datamem_ext_i.datamem[13'h459],
"EXT DMEM (Testcase #768 ab8ab2b4-1a9c-4ded-ab7c-64cbcf5db7b7)");
unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'h45A],
"EXT DMEM (Testcase #768 a866c402-e8a3-4744-91d9-96e6028ad73a)");
datamem_ext_i.datamem[13'h459] =
datamem_swap[16'h459];
datamem_ext_i.datamem[13'h45A] =
datamem_swap[16'h45A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #769
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD2F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #769)");
    end
end

unit.assert_eq16(16'hD2F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #769 166f760d-90c8-4eb4-ae10-440c5d990de2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #769 71dd3e0e-8e13-4f24-b6ca-fd9fb44f4840)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #769 456949cc-bdff-412c-a1de-748e4bf82140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #769 82f310c0-a3c9-46ab-8f64-55e6817ea695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #769 bb5fdda3-dcf4-47ec-8e53-722428946507)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #769 9ddb4248-568f-467d-85e6-16a510226932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #769 88b49e54-9dda-4539-8c3a-c9291f0b4651)");

unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'h8F1],
"EXT DMEM (Testcase #769 a5a7262e-ec52-4604-abcb-d253356c4c27)");
unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h8F2],
"EXT DMEM (Testcase #769 e16dcbb2-d916-433e-8164-bab65c330867)");
datamem_ext_i.datamem[13'h8F1] =
datamem_swap[16'h8F1];
datamem_ext_i.datamem[13'h8F2] =
datamem_swap[16'h8F2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #770
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC229;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #770)");
    end
end

unit.assert_eq16(16'hC229, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #770 01b0cebb-1ca4-47a2-aa73-ca0e9e2c1319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #770 5e485f99-2a9b-4add-94a9-b1c3e77f6fc8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #770 253e8ce4-88c2-41ca-83b7-8e96cfad28c0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #770 39becd72-0466-460b-ae56-fa278927c16b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #770 c83b493b-987e-49e0-bcf5-31697b15985a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #770 585d91bc-b9b1-43d4-b9df-0787b9204cf7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #770 2bddc212-0daf-45ee-b84a-8e2c746040be)");

unit.assert_eq8(8'h29, datamem_ext_i.datamem[13'h677],
"EXT DMEM (Testcase #770 4f1d2659-2176-4b04-b537-3f83b22b37c7)");
unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'h678],
"EXT DMEM (Testcase #770 7ff20289-4d0e-48db-ac67-ed13ce73a22a)");
datamem_ext_i.datamem[13'h677] =
datamem_swap[16'h677];
datamem_ext_i.datamem[13'h678] =
datamem_swap[16'h678];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #771
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h39B4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #771)");
    end
end

unit.assert_eq16(16'h39B4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #771 41160719-62bc-4bf1-b234-154f1c43c4e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #771 922757a2-5b2e-42d3-9c01-b139dc9fedd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #771 82a82eab-3d6f-4c6c-a3ee-bd99490bc0e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #771 f1cbc359-3e38-42ee-8566-285feb0dd540)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #771 efdd66d5-833f-462e-8068-a88f712022b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #771 01fc7135-490b-4f70-b61b-b88e3fd963bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #771 1ce6c73d-33c9-4587-abe9-51153a347804)");

unit.assert_eq8(8'hB4, datamem_ext_i.datamem[13'h762],
"EXT DMEM (Testcase #771 2aa808e6-2d79-47b4-8a12-ca7a1ad05404)");
unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'h763],
"EXT DMEM (Testcase #771 0ff81a80-1b9b-44c7-b167-46af91b5e200)");
datamem_ext_i.datamem[13'h762] =
datamem_swap[16'h762];
datamem_ext_i.datamem[13'h763] =
datamem_swap[16'h763];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #772
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1B2F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #772)");
    end
end

unit.assert_eq16(16'h1B2F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #772 5b59c34a-8b4f-43a0-b468-a1282ada755a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #772 47bf7a02-4491-42bc-bdeb-6609cdb3add2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #772 e2f4921e-c6c1-459d-9455-f85e77428476)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #772 185cdf6a-df3b-45ff-b857-f63b31cf03e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #772 5a3452f6-3f7e-40c9-9f68-a25eee1e98df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #772 a0742900-998d-4942-bd5e-d8f6317a5655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #772 5ae4d62a-2e46-4761-9516-abe5228d1f97)");

unit.assert_eq8(8'h2F, datamem_ext_i.datamem[13'hDC4],
"EXT DMEM (Testcase #772 a5ef7f75-54fe-46e8-bc26-dbe309bf954e)");
unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'hDC5],
"EXT DMEM (Testcase #772 9922482a-2c35-4542-b13a-96c84d8de04c)");
datamem_ext_i.datamem[13'hDC4] =
datamem_swap[16'hDC4];
datamem_ext_i.datamem[13'hDC5] =
datamem_swap[16'hDC5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #773
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h65C5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #773)");
    end
end

unit.assert_eq16(16'h65C5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #773 713a5665-2db2-4995-a254-5723ec927ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #773 e60eba79-4b07-43d0-8424-1f645eaedbba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #773 bee030d1-ccdf-4e34-afaa-43ef3ac6dacd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #773 626eee9b-9495-4dd2-a190-f77b960637a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #773 7a97df9c-6b67-42b5-af45-2effc19bd67a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #773 06a194da-9efa-412a-98a9-a9e7864e453e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #773 ee675867-77e4-4548-a79b-e25ee9c68b49)");

unit.assert_eq8(8'hC5, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h99],
"INT DMEM (Testcase #773 da4099e3-30fa-4cee-a979-9c06b7f2633d)");
unit.assert_eq8(8'h65, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h9A],
"INT DMEM (Testcase #773 ed35d253-5033-4b9c-9611-869409b1c9d5)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h99] =
datamem_swap[16'h199];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h9A] =
datamem_swap[16'h19A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #774
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h868C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #774)");
    end
end

unit.assert_eq16(16'h868C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #774 03a5cc03-19ea-4fc8-8f01-cbfa49bea27c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #774 36b3fb5b-476f-41d2-83bb-3c5913ce5a8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #774 57afcd61-33e8-4457-a617-e74df6afb68d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #774 5cc0581a-ec20-49ee-91d4-4099edbb9f2f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #774 f0dec1ed-0144-4e3b-af4b-0f058695dd0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #774 16705d76-2892-425a-b729-2b856636b158)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #774 022412a7-3edd-4aa0-ad87-68001eadaa26)");

unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'hFF6],
"EXT DMEM (Testcase #774 e70c46c2-15d3-45f0-ad94-ec253e3672d4)");
unit.assert_eq8(8'h86, datamem_ext_i.datamem[13'hFF7],
"EXT DMEM (Testcase #774 35c9bc26-03d6-4ef0-90b4-26d41bdd2bae)");
datamem_ext_i.datamem[13'hFF6] =
datamem_swap[16'hFF6];
datamem_ext_i.datamem[13'hFF7] =
datamem_swap[16'hFF7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #775
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E11;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #775)");
    end
end

unit.assert_eq16(16'h0E11, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #775 17ed24b2-be68-4dbf-ab1c-8d49aaeaaac9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #775 2106f042-1ae9-4878-8b56-ad9e49845465)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #775 6c59c91a-2ad7-4301-97a4-60a2548e5f1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #775 6953c06e-4387-4de1-8f65-3d5aae558ead)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #775 58b50ad5-6280-4711-ab09-fd02526d1120)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #775 541b7821-cd3c-4af6-816c-5c7b611caebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #775 aca47e3d-da8e-4f6a-ab66-8cb100ce2c1a)");

unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'h89F],
"EXT DMEM (Testcase #775 96fc8109-8b68-46c0-baf7-ca17118eedfc)");
unit.assert_eq8(8'h0E, datamem_ext_i.datamem[13'h8A0],
"EXT DMEM (Testcase #775 059d14fa-93f6-4fad-b0e8-68ad0f202fde)");
datamem_ext_i.datamem[13'h89F] =
datamem_swap[16'h89F];
datamem_ext_i.datamem[13'h8A0] =
datamem_swap[16'h8A0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #776
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9756;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #776)");
    end
end

unit.assert_eq16(16'h9756, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #776 5dfb2867-b765-4958-b658-dce5277872db)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #776 4101ba55-f5f6-4ede-ba72-7a234e6d9aad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #776 4ed8faea-666d-4962-aedf-8db13a86242a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #776 dbabab48-7a39-47ab-947b-0e7d16adf025)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #776 9465090c-0451-442a-9396-e9f4f83a5685)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #776 9a3970b8-560a-4773-9f66-6aa9ce183803)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #776 85161cc9-4576-435f-bc9e-892431c905ae)");

unit.assert_eq8(8'h56, datamem_ext_i.datamem[13'hABE],
"EXT DMEM (Testcase #776 10a8fbb4-17fd-4898-bff2-15ee050613fe)");
unit.assert_eq8(8'h97, datamem_ext_i.datamem[13'hABF],
"EXT DMEM (Testcase #776 fd0e683c-c80e-4bf9-a801-1b6cbb62f6b6)");
datamem_ext_i.datamem[13'hABE] =
datamem_swap[16'hABE];
datamem_ext_i.datamem[13'hABF] =
datamem_swap[16'hABF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #777
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h437E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #777)");
    end
end

unit.assert_eq16(16'h437E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #777 1ba62cbd-cb4b-4ff9-8008-1dabcdbe7f58)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #777 a383f095-7c30-4791-b804-487d64875b5e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #777 5e892855-4e66-4847-9d98-013f16190ebe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #777 189914d2-0b94-4a6f-8cda-3156a58d7ba4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #777 8f8bc06b-099b-4209-a81b-5911651a5f2b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #777 56f9196c-7161-4682-b637-87eed65fb1b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #777 2be1a1bb-a1f7-4b75-8e07-ffa3811c53c6)");

unit.assert_eq8(8'h7E, datamem_ext_i.datamem[13'h347],
"EXT DMEM (Testcase #777 f25ff543-c11f-4abb-85d3-f203f8903556)");
unit.assert_eq8(8'h43, datamem_ext_i.datamem[13'h348],
"EXT DMEM (Testcase #777 1bcbcbee-929f-429c-8501-5b09d272802a)");
datamem_ext_i.datamem[13'h347] =
datamem_swap[16'h347];
datamem_ext_i.datamem[13'h348] =
datamem_swap[16'h348];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #778
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0C60;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #778)");
    end
end

unit.assert_eq16(16'h0C60, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #778 a6f9a5dd-69b0-476e-9c17-bf15b141e358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #778 13af886c-4bf7-4557-810f-4d81ca5d835e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #778 ac61b845-a002-424a-8ff4-b8628a118d9f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #778 7c317722-83cc-4482-8526-e6fda7445a64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #778 4580279f-904b-4cb2-8972-ca8fdac59052)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #778 78448f2d-b664-4699-a133-9c9ef4485397)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #778 7885ce5f-9512-4d16-a98d-12c2e3c10865)");

unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'h46B],
"EXT DMEM (Testcase #778 10a01c25-c3e0-4dee-9975-8fb658cdc2ca)");
unit.assert_eq8(8'h0C, datamem_ext_i.datamem[13'h46C],
"EXT DMEM (Testcase #778 9740ac49-bde9-4b81-b276-6ea190473019)");
datamem_ext_i.datamem[13'h46B] =
datamem_swap[16'h46B];
datamem_ext_i.datamem[13'h46C] =
datamem_swap[16'h46C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #779
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC5F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #779)");
    end
end

unit.assert_eq16(16'hC5F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #779 412c4b27-8c9c-425a-bbd5-f59629c319ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #779 6757e352-a238-4ec7-b512-dd316cb8fa56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #779 aee1329b-4918-434a-bab0-78d9232cc528)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #779 9fac6076-af9e-4871-85b4-79df170e9060)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #779 9b2583f8-8095-4332-88d4-21394963da7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #779 da7b1116-babf-40bd-b739-73b50f0d7c93)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #779 77a5e299-37e1-4c55-9d50-7a85501e73c1)");

unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'h3E6],
"EXT DMEM (Testcase #779 4865610d-43c0-4db7-8c1c-bd7380fdc140)");
unit.assert_eq8(8'hC5, datamem_ext_i.datamem[13'h3E7],
"EXT DMEM (Testcase #779 cbabf8fb-102c-49cf-9734-5b225fc48a9f)");
datamem_ext_i.datamem[13'h3E6] =
datamem_swap[16'h3E6];
datamem_ext_i.datamem[13'h3E7] =
datamem_swap[16'h3E7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #780
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA3CB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #780)");
    end
end

unit.assert_eq16(16'hA3CB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #780 5293510a-f4d8-460e-9d68-3bcd2bf64b7b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #780 eff859ee-f475-4752-938f-2bbd4fe00093)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #780 d88a9192-0e1f-4898-9fc3-1eaa1391c7e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #780 fe2c2bd9-e4a4-499e-b23a-b503ed4a60fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #780 4c2ae791-5e85-4a34-9b5a-9261c40410fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #780 1ba87c3f-9ec3-456b-9121-18ca38919380)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #780 b56d04e3-7493-45c0-ae1d-bbd5c12e9fa2)");

unit.assert_eq8(8'hCB, datamem_ext_i.datamem[13'h542],
"EXT DMEM (Testcase #780 a64c4249-2877-4776-9ca6-fa9b6b8c05e3)");
unit.assert_eq8(8'hA3, datamem_ext_i.datamem[13'h543],
"EXT DMEM (Testcase #780 34936976-c476-4ca4-ab6f-ed9b30761c65)");
datamem_ext_i.datamem[13'h542] =
datamem_swap[16'h542];
datamem_ext_i.datamem[13'h543] =
datamem_swap[16'h543];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #781
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFA73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #781)");
    end
end

unit.assert_eq16(16'hFA73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #781 5a24c88c-4108-467f-9854-8061c5e1f8ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #781 c751bf34-2d47-4a07-b8a0-994a7208f381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #781 3d82e9e1-2a73-4c42-849d-5cc52f1a9b2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #781 cdc41ba7-4535-4d5b-a5c7-71926ac7b83a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #781 0709df6a-a454-4987-8e14-5fd845abc9b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #781 4119ba01-643c-4f57-96fd-c0de8cd46122)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #781 e8fb86c6-0aaa-4b5a-b460-8d117a4505b2)");

unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'hFE2],
"EXT DMEM (Testcase #781 e30ae8aa-7735-4198-b2ae-a52aaecf5c1f)");
unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'hFE3],
"EXT DMEM (Testcase #781 b7329cbb-b723-46ed-b271-3418d03e1871)");
datamem_ext_i.datamem[13'hFE2] =
datamem_swap[16'hFE2];
datamem_ext_i.datamem[13'hFE3] =
datamem_swap[16'hFE3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #782
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB2DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #782)");
    end
end

unit.assert_eq16(16'hB2DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #782 de01a0f8-ddf5-4cbf-a71f-da1d355f0a47)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #782 9905384a-6733-4ddb-a508-f593e5d04500)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #782 4cb958e2-ec8c-4ad3-88ef-f747004b7e2f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #782 857f87f2-c540-4fb7-a809-8708ae1fc45c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #782 ede7f953-48de-44d4-a8f3-2e34a6d01d3a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #782 30bfb658-4f16-4b13-8307-67f654e35310)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #782 4c2e3001-e6f1-429f-b24b-ba0eb250d2a0)");

unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'hD37],
"EXT DMEM (Testcase #782 6a6168ba-b775-4f82-b858-3728cc0f28af)");
unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'hD38],
"EXT DMEM (Testcase #782 4f3485f1-d9ac-42bd-98c7-231708031be4)");
datamem_ext_i.datamem[13'hD37] =
datamem_swap[16'hD37];
datamem_ext_i.datamem[13'hD38] =
datamem_swap[16'hD38];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #783
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h91A9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #783)");
    end
end

unit.assert_eq16(16'h91A9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #783 fb65aa06-4113-4218-a272-15653b6c7695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #783 e2211b98-aeb6-47ce-bfce-66ff4db625bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #783 5dae80a6-f0e1-4b57-9b64-dd5fa1a47d43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #783 f185f1c8-9aca-4d84-a3a8-872251b2ba0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #783 fa90911b-df46-4faa-9fdd-fa42d263cf54)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #783 65592dfb-8fe1-40a9-94e3-6f202199f4db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #783 971bce79-9d3b-43c4-aae6-8ff04ea4cc53)");

unit.assert_eq8(8'hA9, datamem_ext_i.datamem[13'hCA9],
"EXT DMEM (Testcase #783 ebf6ed2e-10ef-4bab-8ff9-73863cccb4fb)");
unit.assert_eq8(8'h91, datamem_ext_i.datamem[13'hCAA],
"EXT DMEM (Testcase #783 191df83f-9c90-4738-8d58-b9f2e22e15df)");
datamem_ext_i.datamem[13'hCA9] =
datamem_swap[16'hCA9];
datamem_ext_i.datamem[13'hCAA] =
datamem_swap[16'hCAA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #784
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD35C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #784)");
    end
end

unit.assert_eq16(16'hD35C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #784 99365ace-c4f2-42df-a1fc-33930fe07a67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #784 63e909fb-cf71-4c0d-abc9-5ee1c5e0e7f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #784 182f63a3-0f44-4c4e-ba64-0c4d4d6aa356)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #784 b3844d4a-9601-47be-8074-4d290610af2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #784 2c05d93c-2127-4e4d-a4d6-0a5c865f06cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #784 c4d44142-643d-45aa-9851-01061356c59e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #784 9332b259-49c1-4d3a-84e4-8d755968504b)");

unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'h9E7],
"EXT DMEM (Testcase #784 99378698-a829-48c4-bb9b-abe6cc6adcf9)");
unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h9E8],
"EXT DMEM (Testcase #784 99a51dd8-c87b-4df9-aa3f-1a82c5c86977)");
datamem_ext_i.datamem[13'h9E7] =
datamem_swap[16'h9E7];
datamem_ext_i.datamem[13'h9E8] =
datamem_swap[16'h9E8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #785
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2FB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #785)");
    end
end

unit.assert_eq16(16'hF2FB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #785 bdca5a45-9dcc-4bc8-a6d9-3ba1bde247b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #785 5ef26526-6c68-4d91-9c1d-1d060c3d46d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #785 26f8d350-16f3-4820-ab54-34472b606ed6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #785 06613826-f0c8-4b5e-a685-9f3d586989d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #785 ccc06ddf-2571-4470-a185-41a74cd394f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #785 df38d41c-49a1-49ac-b32c-fa1c386cd8af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #785 ca55ab76-857d-41eb-826e-31a9e1891c00)");

unit.assert_eq8(8'hFB, datamem_ext_i.datamem[13'h2C4],
"EXT DMEM (Testcase #785 a9d459f4-85b5-4f13-a8ee-90e7b5e25382)");
unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'h2C5],
"EXT DMEM (Testcase #785 22539a76-ff5b-4f50-8220-dc0a8a803819)");
datamem_ext_i.datamem[13'h2C4] =
datamem_swap[16'h2C4];
datamem_ext_i.datamem[13'h2C5] =
datamem_swap[16'h2C5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #786
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E41;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #786)");
    end
end

unit.assert_eq16(16'h2E41, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #786 daf82268-79c5-4765-8093-0dba5961c740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #786 1a600bcf-06f4-4ff1-8c5d-739a5944f955)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #786 63cfb390-f2e7-4b72-94be-bd67811298f1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #786 7b707b85-bd5a-4cb3-93c6-e1881744fb23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #786 67daf086-0c76-40ae-b651-122d56715c02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #786 7e098988-058f-4ca5-b677-e1e0d3e05f7e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #786 a6ac7cd0-46f8-4005-8fb9-4140f68fa5fe)");

unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'h484],
"EXT DMEM (Testcase #786 e84ee2d5-eb31-42f2-ba29-0a319fb14e3e)");
unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'h485],
"EXT DMEM (Testcase #786 c52e33e9-becf-46aa-b64a-a947a31d9138)");
datamem_ext_i.datamem[13'h484] =
datamem_swap[16'h484];
datamem_ext_i.datamem[13'h485] =
datamem_swap[16'h485];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #787
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB223;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #787)");
    end
end

unit.assert_eq16(16'hB223, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #787 9eae250e-c153-4c36-af06-c80607461813)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #787 683f866d-0b60-4a76-ab96-ce8ad9dbe453)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #787 1d1db5d8-3a67-49dc-ac36-82fed11572eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #787 d39e39da-aa62-4a20-8e6f-cf401951e23c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #787 3b5a5e06-c06d-4a47-be64-c2d02900babc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #787 f8c6b994-96ee-43be-9092-f553c1f11e5a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #787 8ccd6923-7f8d-4d94-951f-0b67f2ef80ef)");

unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'h820],
"EXT DMEM (Testcase #787 6c3a2be4-b257-4772-8a60-509cb922c1ff)");
unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'h821],
"EXT DMEM (Testcase #787 4b71d1b5-176c-41f8-a89f-fb7061ed3aac)");
datamem_ext_i.datamem[13'h820] =
datamem_swap[16'h820];
datamem_ext_i.datamem[13'h821] =
datamem_swap[16'h821];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #788
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA7E0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #788)");
    end
end

unit.assert_eq16(16'hA7E0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #788 e03932c7-98aa-4cd8-9e5b-558f63ebaa21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #788 b89ae0b8-bb24-4be6-be22-8da95da1013c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #788 186ae1a1-1ba4-4ff4-912f-0f60635d7b77)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #788 5ce6ccc6-2605-4247-97ee-96532d92778c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #788 8f331d0b-7508-4dad-a949-29b4068a0472)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #788 bd446ef9-3bb3-4f24-86a2-1f229332d11f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #788 b2d64855-89c8-400b-be1a-fe26eda0408d)");

unit.assert_eq8(8'hE0, datamem_ext_i.datamem[13'h54C],
"EXT DMEM (Testcase #788 6c6df7c2-73fc-4fd5-b541-4bd385478360)");
unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'h54D],
"EXT DMEM (Testcase #788 51856c40-f942-446a-8126-19d43cae5ee5)");
datamem_ext_i.datamem[13'h54C] =
datamem_swap[16'h54C];
datamem_ext_i.datamem[13'h54D] =
datamem_swap[16'h54D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #789
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hED68;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #789)");
    end
end

unit.assert_eq16(16'hED68, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #789 04d5293a-dcf7-4cb1-b334-887823919d78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #789 2fe7be24-2ea4-4445-931b-11e2ce4b4589)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #789 66f5e338-60b9-40cc-b8a7-548e77652400)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #789 ff3ebfa2-ec18-4913-a0a5-71e2a79d9749)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #789 13bef794-b7b0-4cc8-9486-8765e4e6bdea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #789 ccb3c1bf-019d-483b-b3d8-5911eafcde0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #789 e973e8f6-95d0-4117-9bf8-731068f04f2f)");

unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'h92A],
"EXT DMEM (Testcase #789 296c5d74-7734-4e1e-87e7-8fb813b75356)");
unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'h92B],
"EXT DMEM (Testcase #789 529504dd-bedc-46ea-ac60-e78646368ca2)");
datamem_ext_i.datamem[13'h92A] =
datamem_swap[16'h92A];
datamem_ext_i.datamem[13'h92B] =
datamem_swap[16'h92B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #790
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7276;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #790)");
    end
end

unit.assert_eq16(16'h7276, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #790 098a8153-d587-4932-a18c-eb3995b1a5ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #790 076ce81a-7791-4a28-b718-81973e6fe265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #790 c2f3b227-6b65-4f3e-890f-4fb572c68bc3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #790 b2734fa0-f645-45b0-b37a-70ee792e69da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #790 ff8d5d0d-5cb8-4779-afb4-806812453a0f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #790 ed718ea7-ccad-4f2f-8983-dc3470180387)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #790 842c7f8a-7873-427f-b6cf-f50cb9a23e59)");

unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'h254],
"EXT DMEM (Testcase #790 de4fb9cc-8e9b-41e5-aa44-81baa72732d5)");
unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'h255],
"EXT DMEM (Testcase #790 e6e8ddca-d662-4b6e-9a3c-7f92b84db5a4)");
datamem_ext_i.datamem[13'h254] =
datamem_swap[16'h254];
datamem_ext_i.datamem[13'h255] =
datamem_swap[16'h255];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #791
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC0F6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #791)");
    end
end

unit.assert_eq16(16'hC0F6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #791 8a89112a-4fcd-43d6-97f7-3b4673e357ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #791 733255b0-2a0d-4fb0-93dc-8a39f157e50e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #791 c13a75fc-4129-4597-a776-718807ab41d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #791 524aeab4-853a-4221-bc43-c88a85a7181c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #791 0a127a59-8b68-494d-bbe0-c86067371982)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #791 8f4e5e1f-c830-4038-b9b0-c7b142dda19f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #791 2c010e29-1a5c-41a1-a97e-0c647ec2e3f1)");

unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'h391],
"EXT DMEM (Testcase #791 66ae904b-090a-4487-ae29-b650b2671d18)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h392],
"EXT DMEM (Testcase #791 173de5f6-5f15-4010-b514-2a7c84991b51)");
datamem_ext_i.datamem[13'h391] =
datamem_swap[16'h391];
datamem_ext_i.datamem[13'h392] =
datamem_swap[16'h392];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #792
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h319A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #792)");
    end
end

unit.assert_eq16(16'h319A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #792 7479d651-9533-4c20-9c72-393092f0e51b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #792 7ec14088-4a05-4051-9f1c-70082347b19d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #792 ec293c13-a558-41db-8a5a-96be1c821c31)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #792 e2c51b11-d841-4e93-a86b-b1cfdac24d52)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #792 9a0db012-c084-41ad-9a87-dc5e7be1ad10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #792 d56b591f-7380-4a86-a8c9-d2ae58b5a911)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #792 c8ae2559-f548-4aef-85a9-b628a4b06515)");

unit.assert_eq8(8'h9A, datamem_ext_i.datamem[13'hEEB],
"EXT DMEM (Testcase #792 46fb367f-2c2e-4463-8d6d-2ea5c8601edb)");
unit.assert_eq8(8'h31, datamem_ext_i.datamem[13'hEEC],
"EXT DMEM (Testcase #792 47c87197-2d72-4f9f-a71b-eefdc3138e39)");
datamem_ext_i.datamem[13'hEEB] =
datamem_swap[16'hEEB];
datamem_ext_i.datamem[13'hEEC] =
datamem_swap[16'hEEC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #793
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h741A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #793)");
    end
end

unit.assert_eq16(16'h741A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #793 38cce5b3-205f-4424-b2c1-d2055a4e2553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #793 b8518967-be07-4ba7-bb3e-05ce79e4ae71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #793 9427ff3f-af7a-4dcc-bad7-0cca4a664fba)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #793 f6ca6ba9-ae44-4bff-a9ba-307c70c0ff12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #793 617b6ad3-5b53-4489-b1c0-e2e0173db02b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #793 5acdca00-652a-405f-8e09-7a4284583a70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #793 2f449d90-5c8d-40b7-ace8-482440b57721)");

unit.assert_eq8(8'h1A, datamem_ext_i.datamem[13'hC03],
"EXT DMEM (Testcase #793 d37f3ccb-37e3-4821-9e27-b2feef579130)");
unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'hC04],
"EXT DMEM (Testcase #793 86621e65-0e48-4f82-8176-7a7e3b6d2b7a)");
datamem_ext_i.datamem[13'hC03] =
datamem_swap[16'hC03];
datamem_ext_i.datamem[13'hC04] =
datamem_swap[16'hC04];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #794
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC456;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #794)");
    end
end

unit.assert_eq16(16'hC456, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #794 14097475-4e28-4f7a-ae8f-29a2ea565f24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #794 372cde3e-573a-4d25-ae04-c96c8b539c0e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #794 04e934d1-5851-4a7e-835e-d5b174204fed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #794 42c44e56-c3d8-4ef7-ae12-a4e8dee9fe9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #794 51348bf2-2df3-41a2-9aee-4f9b72174d12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #794 970bdd86-4b71-49cd-928a-90101833989a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #794 772e7f89-7bfb-4040-a8df-8863e5231e47)");

unit.assert_eq8(8'h56, datamem_ext_i.datamem[13'hC7E],
"EXT DMEM (Testcase #794 2914e969-32d3-4492-94df-1cc9279e523c)");
unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hC7F],
"EXT DMEM (Testcase #794 3459472c-7eb7-4a8c-a880-c9839961608f)");
datamem_ext_i.datamem[13'hC7E] =
datamem_swap[16'hC7E];
datamem_ext_i.datamem[13'hC7F] =
datamem_swap[16'hC7F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #795
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA135;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #795)");
    end
end

unit.assert_eq16(16'hA135, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #795 60ace548-d518-44af-bfe8-7c5f42341f92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #795 4372b27b-69c3-4740-ba87-750267423a9d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #795 285ff1d7-f35d-4c43-b54a-c87c2e217ad5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #795 312c9d5b-8384-4925-8c69-0eeb5fa1b533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #795 9c80084e-645a-4ab1-b2b6-094db53dc433)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #795 8eeb2dae-ccd4-4cb4-8cd2-cef795e4f296)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #795 cd44f8d8-e729-4b58-a5fe-1b70a65112a2)");

unit.assert_eq8(8'h35, datamem_ext_i.datamem[13'hD55],
"EXT DMEM (Testcase #795 dbad8e51-dab8-4018-af7b-b0e9bd3f50a2)");
unit.assert_eq8(8'hA1, datamem_ext_i.datamem[13'hD56],
"EXT DMEM (Testcase #795 ee24a6b1-fba3-4f1f-b24c-b0328534f645)");
datamem_ext_i.datamem[13'hD55] =
datamem_swap[16'hD55];
datamem_ext_i.datamem[13'hD56] =
datamem_swap[16'hD56];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #796
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC8AB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #796)");
    end
end

unit.assert_eq16(16'hC8AB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #796 c7eb9708-430e-4017-b2f4-51d983f17437)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #796 0403f17e-e8db-478d-bfea-bd3cb7dc20d0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #796 cb00c03a-30c3-40e1-b1f8-8a9618b81f18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #796 5b00e333-212f-4f02-9ca6-24824adcbe24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #796 f3444d60-c45f-4de4-a854-c9fbdf54458f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #796 dd91ea1c-c90e-4329-8bcd-8c3ee73c3d29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #796 0867fe8c-0f59-4e2f-b98c-d7fc0c792c8f)");

unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'h835],
"EXT DMEM (Testcase #796 f0a9babe-b629-4e4c-aa5e-a0ab8995cde7)");
unit.assert_eq8(8'hC8, datamem_ext_i.datamem[13'h836],
"EXT DMEM (Testcase #796 f7e919f9-368a-4ebf-a07f-acd4a7e7b26e)");
datamem_ext_i.datamem[13'h835] =
datamem_swap[16'h835];
datamem_ext_i.datamem[13'h836] =
datamem_swap[16'h836];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #797
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDB33;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #797)");
    end
end

unit.assert_eq16(16'hDB33, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #797 76b68aca-9b43-4a33-adcf-9a2b2dd6a328)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #797 68224ebf-99b1-4dd6-a3f4-5af1d0878b49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #797 af6b56d2-c998-4737-9987-914530348509)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #797 2ddeb33d-2b3c-4349-ae87-527ba7119b70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #797 40d2c610-ec8e-43aa-9827-f37366f0a8f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #797 8566ada4-b63b-4d57-b59d-7dea0bc84129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #797 63e98a8a-3c74-4852-ad50-c1e5289a9ac3)");

unit.assert_eq8(8'h33, datamem_ext_i.datamem[13'hEEC],
"EXT DMEM (Testcase #797 cd7ac6d5-6005-4215-a153-f99240cb49e6)");
unit.assert_eq8(8'hDB, datamem_ext_i.datamem[13'hEED],
"EXT DMEM (Testcase #797 ee0728de-6c69-4b96-8f40-03b22d18c19e)");
datamem_ext_i.datamem[13'hEEC] =
datamem_swap[16'hEEC];
datamem_ext_i.datamem[13'hEED] =
datamem_swap[16'hEED];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #798
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h11DF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #798)");
    end
end

unit.assert_eq16(16'h11DF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #798 4757a514-a13b-4e4e-a900-2c58f412fe51)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #798 22c04320-d5cc-48da-be3a-7bd45f508836)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #798 f9b7b8d7-5c58-4c02-a55d-1b3e6122c9fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #798 d1b70042-675a-4381-83b8-9a69e24eb132)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #798 5002e6ca-81ff-478a-9fa5-1c555d3234d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #798 4245e8ad-1c66-4795-b009-d5ee139ee4c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #798 6ab7dc67-5fda-4171-8c05-97d492b432d2)");

unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'hAFF],
"EXT DMEM (Testcase #798 8eed4f65-be20-4c8a-8b8b-754212e3c815)");
unit.assert_eq8(8'h11, datamem_ext_i.datamem[13'hB00],
"EXT DMEM (Testcase #798 35dcf52f-e0b9-4bc9-8a51-3d7275d90488)");
datamem_ext_i.datamem[13'hAFF] =
datamem_swap[16'hAFF];
datamem_ext_i.datamem[13'hB00] =
datamem_swap[16'hB00];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #799
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7162;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #799)");
    end
end

unit.assert_eq16(16'h7162, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #799 d2870a4a-7342-4a93-ace5-4a7ffd4b11ed)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #799 67e30f6a-d9fc-4e0f-b095-aad4c29dba51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #799 b2783a12-dbb4-46f9-b1d1-9c64c1392e0e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #799 bb61240b-54c7-459f-9d96-458929f50dee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #799 2ebaee17-6be2-471d-a193-c03b2e76a1a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #799 467d9d92-c486-46f9-a262-bba27bdd3fa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #799 55b79768-9861-4e03-8640-a59547a5b2b7)");

unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'hA45],
"EXT DMEM (Testcase #799 87fa4e70-9420-4165-8c47-a02a0d36ccb8)");
unit.assert_eq8(8'h71, datamem_ext_i.datamem[13'hA46],
"EXT DMEM (Testcase #799 09c58da9-9e49-487b-b1e7-891ea790350d)");
datamem_ext_i.datamem[13'hA45] =
datamem_swap[16'hA45];
datamem_ext_i.datamem[13'hA46] =
datamem_swap[16'hA46];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #800
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC510;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #800)");
    end
end

unit.assert_eq16(16'hC510, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #800 faa2f431-16c7-499f-b951-7f4a46e6d759)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #800 780a4630-8366-4605-b4ee-ac2f78519909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #800 6617757e-b40d-4485-a266-442a2d5cc12c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #800 3adb3936-c683-4e63-9acd-a425005368d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #800 2e527e0e-9723-4f77-926b-dcaebffab914)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #800 3013a01c-3d27-43fb-a99c-bddc8ee0997f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #800 90065958-7080-4ac0-bcc9-be6b9aec6291)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'hBC7],
"EXT DMEM (Testcase #800 8f76e428-e4ca-4a8f-b411-540e95593740)");
unit.assert_eq8(8'hC5, datamem_ext_i.datamem[13'hBC8],
"EXT DMEM (Testcase #800 250594f4-159e-4195-a363-2185cee9940e)");
datamem_ext_i.datamem[13'hBC7] =
datamem_swap[16'hBC7];
datamem_ext_i.datamem[13'hBC8] =
datamem_swap[16'hBC8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #801
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE257;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #801)");
    end
end

unit.assert_eq16(16'hE257, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #801 48e72e10-c5e0-4361-a29a-05ca3aeebf8a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #801 d8f63b00-5ce3-4a0f-9896-4cc6eb491b55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #801 7a13ce82-b8d1-459b-866e-3bb7b20bf601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #801 89b771af-acdd-4a41-a7b6-f2bd92d21196)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #801 c177f760-b3c4-4df6-bd53-f73ce4fffba6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #801 4f4e8735-b76a-4357-9e12-7b5819f867af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #801 b2c090e1-0674-49c6-b282-90e8746ab2f0)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'hFEB],
"EXT DMEM (Testcase #801 728d094b-3cb9-4ae5-8629-2496fd840ac9)");
unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'hFEC],
"EXT DMEM (Testcase #801 640a351d-0c52-4641-b776-55efe3bad743)");
datamem_ext_i.datamem[13'hFEB] =
datamem_swap[16'hFEB];
datamem_ext_i.datamem[13'hFEC] =
datamem_swap[16'hFEC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #802
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8FDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #802)");
    end
end

unit.assert_eq16(16'h8FDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #802 ec1e578d-0ff4-48c9-996d-4ddca6daf360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #802 25141ad4-97bb-46ab-9a40-0259f2cc653a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #802 60d8d606-ad57-4f3a-a343-8dea9eac4550)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #802 0fead9e9-9c7d-4890-a05d-055e5eb1b86f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #802 7a08fe6b-6769-4169-aa3e-c4f07e19070f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #802 a020358a-32fb-4798-9855-111d0a176600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #802 2d5a26fb-8ea0-4602-bbf3-f59e1f51df5a)");

unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'hD19],
"EXT DMEM (Testcase #802 92ce010b-64e0-48df-9d7b-5daf9234064d)");
unit.assert_eq8(8'h8F, datamem_ext_i.datamem[13'hD1A],
"EXT DMEM (Testcase #802 9e8b09e7-b3e1-4ada-ae17-aa62a8322035)");
datamem_ext_i.datamem[13'hD19] =
datamem_swap[16'hD19];
datamem_ext_i.datamem[13'hD1A] =
datamem_swap[16'hD1A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #803
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h91;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0AA2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #803)");
    end
end

unit.assert_eq16(16'h0AA2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #803 12afcede-44ff-4d39-8335-0154ad963ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #803 39caa5ff-e05d-4f0a-bb01-6c0e5c74b8d1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #803 6049cd2a-1af8-4b85-a6ac-9c8397bc3b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #803 bf54a7da-c204-4f25-ac51-49df41cf4601)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #803 bc2b73aa-6046-46b8-8184-6e3f293f59ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #803 6e951b84-c9e0-4e62-b499-0a615bb771ac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #803 d7d9f99b-a478-4ec7-9fd1-db6d631247d3)");

unit.assert_eq8(8'hA2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h70],
"INT DMEM (Testcase #803 fee272ab-24f0-442f-985f-3897a5dc0441)");
unit.assert_eq8(8'h0A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h71],
"INT DMEM (Testcase #803 b347aa05-3d37-43e3-be7b-0c8126422705)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h70] =
datamem_swap[16'h70];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h71] =
datamem_swap[16'h71];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #804
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h61E9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #804)");
    end
end

unit.assert_eq16(16'h61E9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #804 58f194a5-8179-4b47-8ee3-13718e985845)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #804 c01491f1-865a-40f4-b547-b70772e13bc3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #804 95ececac-2576-423e-acd7-b9a9a64e5930)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #804 27b792f8-ed9a-4253-b4fe-5eba001256fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #804 45dc2c37-9322-4280-9bc2-986bdb0b4ce1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #804 610222cf-35f6-494f-8404-a7beafd207e9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #804 1c4e1450-e1f3-4079-8578-1289b4bce534)");

unit.assert_eq8(8'hE9, datamem_ext_i.datamem[13'h6C1],
"EXT DMEM (Testcase #804 8a7d5265-176a-47a4-bcee-a6bf8b1802bd)");
unit.assert_eq8(8'h61, datamem_ext_i.datamem[13'h6C2],
"EXT DMEM (Testcase #804 63ab8cbe-e767-4a27-8bbc-f757b9213714)");
datamem_ext_i.datamem[13'h6C1] =
datamem_swap[16'h6C1];
datamem_ext_i.datamem[13'h6C2] =
datamem_swap[16'h6C2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #805
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8B05;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #805)");
    end
end

unit.assert_eq16(16'h8B05, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #805 cce4181d-d596-482c-8bc5-07e367ab1617)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #805 65c016d8-d5ed-47d7-b17d-0f3ba1dfeef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #805 154df6b1-c4a8-4b8e-9e6e-64e47ca5efa0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #805 a83698ba-dac4-4b1c-8a76-36e07e650531)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #805 e51e8e47-658b-4e6a-9f1d-f6445483a20a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #805 b8c96802-737e-48b6-b377-8d9d9c5fb0d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #805 51d6fde3-2d5f-461e-ad6e-bd3994fcc7ea)");

unit.assert_eq8(8'h05, datamem_ext_i.datamem[13'h4ED],
"EXT DMEM (Testcase #805 83d40f22-6c05-4bbf-bf52-3a3a42103245)");
unit.assert_eq8(8'h8B, datamem_ext_i.datamem[13'h4EE],
"EXT DMEM (Testcase #805 b905a35b-d23f-4475-a71b-b5d4108895db)");
datamem_ext_i.datamem[13'h4ED] =
datamem_swap[16'h4ED];
datamem_ext_i.datamem[13'h4EE] =
datamem_swap[16'h4EE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #806
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0BA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #806)");
    end
end

unit.assert_eq16(16'hB0BA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #806 0fa28355-61c1-48d1-bc36-fbc31f4de8c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #806 98597c04-9974-400a-a3ec-aa9e46d95501)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #806 155d0e78-0d5b-4413-aafd-c1be181bfb07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #806 ac16646d-b2ae-4c11-842f-d697cff83f34)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #806 e0e723fa-fd69-4f90-a234-0d055bdd23cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #806 a53f0a14-855a-4e17-8548-1aaa7199d5cf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #806 6db68389-c085-4a6f-b8ac-49ea72a4c6c6)");

unit.assert_eq8(8'hBA, datamem_ext_i.datamem[13'hF67],
"EXT DMEM (Testcase #806 ffa60fb9-0103-4f66-80f4-50149e19a509)");
unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hF68],
"EXT DMEM (Testcase #806 d6326cd2-992a-4d9e-a988-a5397f596f78)");
datamem_ext_i.datamem[13'hF67] =
datamem_swap[16'hF67];
datamem_ext_i.datamem[13'hF68] =
datamem_swap[16'hF68];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #807
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h59CA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #807)");
    end
end

unit.assert_eq16(16'h59CA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #807 d39d41cb-8f16-4368-9e8c-29ce330e5bb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #807 74cc920b-db30-4c6a-804d-3cd46a403cd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #807 8ff2f3dd-3437-45ee-8706-1a66682985c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #807 1770016f-b8fd-4b12-a1cd-b373b1a5c0a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #807 bda5a12d-05b2-4d9a-801b-32ffce1ac6ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #807 1abaf594-07b7-4c1b-88e6-68cc73f90227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #807 43a5ac14-cbb9-4c0f-b1ed-0bae5c07f392)");

unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'h590],
"EXT DMEM (Testcase #807 2ed488a8-b1be-4e0f-a4be-ace563ce28f9)");
unit.assert_eq8(8'h59, datamem_ext_i.datamem[13'h591],
"EXT DMEM (Testcase #807 869e7f55-3dc0-4670-8985-745502e43da7)");
datamem_ext_i.datamem[13'h590] =
datamem_swap[16'h590];
datamem_ext_i.datamem[13'h591] =
datamem_swap[16'h591];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #808
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD165;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #808)");
    end
end

unit.assert_eq16(16'hD165, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #808 905b6f36-a95c-4fd4-97e1-c2d347c7da8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #808 ba3f6234-92ec-4770-8e51-bbe8757a7240)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #808 3dd1bd38-0432-4220-b332-59cfd4599e6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #808 9aa2d35e-1288-4354-a208-3466b54e5743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #808 aa354cad-6e59-4b85-84b7-456c66f15b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #808 a2963a40-e959-4962-af47-7411f074ef83)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #808 8712992c-2870-4e41-8711-74fc4d943997)");

unit.assert_eq8(8'h65, datamem_ext_i.datamem[13'hD46],
"EXT DMEM (Testcase #808 d7d8f3ea-2d52-4d2b-b154-0300063d57d1)");
unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'hD47],
"EXT DMEM (Testcase #808 ccbe4e90-095b-492d-a849-e9158624b5ad)");
datamem_ext_i.datamem[13'hD46] =
datamem_swap[16'hD46];
datamem_ext_i.datamem[13'hD47] =
datamem_swap[16'hD47];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #809
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8AD4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #809)");
    end
end

unit.assert_eq16(16'h8AD4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #809 4094c413-2f36-4c1e-b451-7be2812c3298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #809 183f71e8-a3d4-4386-af54-b99196422f9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #809 138ae9f9-3abc-425d-b689-70cfe121ba99)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #809 3bd9f78a-694a-4da3-9684-bdbfdaa01548)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #809 1272c3e4-5a39-40c0-acb4-1cfd7e7b558b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #809 4d4406e6-ed58-45ea-99f2-848e0a916592)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #809 91d8adbe-694b-49d7-8c08-54548ae57ff4)");

unit.assert_eq8(8'hD4, datamem_ext_i.datamem[13'h7F7],
"EXT DMEM (Testcase #809 f5b88d75-ef9d-4543-b89d-233931d26847)");
unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'h7F8],
"EXT DMEM (Testcase #809 4f644ae9-5197-40f4-a2ce-f065126e4207)");
datamem_ext_i.datamem[13'h7F7] =
datamem_swap[16'h7F7];
datamem_ext_i.datamem[13'h7F8] =
datamem_swap[16'h7F8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #810
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h37C2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #810)");
    end
end

unit.assert_eq16(16'h37C2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #810 aa1c2505-dd64-4332-b557-b134656c89c6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #810 44cb6851-8f81-4646-baaa-23b9c8fff255)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #810 c075b0e8-162a-4be0-9cbf-abe05c0c9f54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #810 840d02ef-7802-4f7a-b733-b0bf19d78968)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #810 4628ee11-ca1e-4049-ae97-1dbcac7c7348)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #810 aa6b24d2-fbee-4724-a0f1-bb1037e12d59)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #810 98e374d4-bf58-4e2c-8038-4e38ec696d75)");

unit.assert_eq8(8'hC2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h62],
"INT DMEM (Testcase #810 a018a076-8b9b-4670-84fa-ccef03574121)");
unit.assert_eq8(8'h37, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h63],
"INT DMEM (Testcase #810 ff1e9276-57f2-4706-b3af-19df4a9e1e00)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h62] =
datamem_swap[16'h162];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h63] =
datamem_swap[16'h163];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #811
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #811)");
    end
end

unit.assert_eq16(16'hB7C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #811 6a97fdc0-b1a9-4f76-8b97-205ef3307ed9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #811 3c10995f-0051-4673-9d08-14fbdfc82ff7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #811 044f08d3-933c-4c26-a381-d2f8614057f2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #811 f6bde5c3-dbd7-4e1d-b64f-ffa0e7c1a124)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #811 130262b5-5277-406a-9204-050e6f754c12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #811 602361f5-6963-48e6-8f0c-af455504447e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #811 fbc24683-72e9-4eca-825c-c04248fb6b91)");

unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'hD30],
"EXT DMEM (Testcase #811 66ad66e6-b4b1-401a-b5b7-9c55651791a0)");
unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'hD31],
"EXT DMEM (Testcase #811 81257b26-4183-452e-b617-15afd7e14d52)");
datamem_ext_i.datamem[13'hD30] =
datamem_swap[16'hD30];
datamem_ext_i.datamem[13'hD31] =
datamem_swap[16'hD31];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #812
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h68B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #812)");
    end
end

unit.assert_eq16(16'h68B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #812 de919822-a323-425c-ae83-42eb3051ad8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #812 874e3f73-1681-4ec9-a4cc-d4a9631c8df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #812 cf3ac9ec-22c1-411b-b6d1-adc82837e576)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #812 18f22fbf-2d81-42a4-b634-93ba061abc1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #812 3da44ce9-857e-44e9-99c6-76e9fb11f628)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #812 1ce4dee7-535c-403b-b2c7-d23408597715)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #812 7a363ea7-d715-4a29-a72c-b0971456a0a4)");

unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hFF8],
"EXT DMEM (Testcase #812 6b2660bf-21b7-4dc4-8d53-3618ee2ae9a9)");
unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'hFF9],
"EXT DMEM (Testcase #812 872b02ac-82c5-4dbc-9a97-5a21a36a59ff)");
datamem_ext_i.datamem[13'hFF8] =
datamem_swap[16'hFF8];
datamem_ext_i.datamem[13'hFF9] =
datamem_swap[16'hFF9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #813
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h793C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #813)");
    end
end

unit.assert_eq16(16'h793C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #813 9f6e5d0d-86a4-49b4-adf7-8ad2abc295da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #813 365dcd76-1c85-4b3d-9145-68335b69dfc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #813 732d8ff0-16ac-49a9-9050-41ed2826e740)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #813 2d8d924a-8f36-4938-99e7-361aa0f4add3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #813 2cf805c5-1760-4050-be49-ddf79cd6b25a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #813 6e3aedec-98b8-43fa-98f9-3f4e0cd0eb85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #813 af761d58-d5aa-4784-ba5a-c15d4f315bb4)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'hAAC],
"EXT DMEM (Testcase #813 23d39e5a-14e5-44c6-8c4b-740058f0c4c3)");
unit.assert_eq8(8'h79, datamem_ext_i.datamem[13'hAAD],
"EXT DMEM (Testcase #813 8635da01-830b-4d83-b386-0ce7ca6fa195)");
datamem_ext_i.datamem[13'hAAC] =
datamem_swap[16'hAAC];
datamem_ext_i.datamem[13'hAAD] =
datamem_swap[16'hAAD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #814
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC24D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #814)");
    end
end

unit.assert_eq16(16'hC24D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #814 8c984d6e-f2d7-4f50-923e-6637b1732ed1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #814 d900889b-0955-436b-962c-34217e3f26d9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #814 5342385e-7857-4abb-b046-2cc63b09b29e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #814 b670fbb9-34dd-46d1-9a4a-3bca303f6a65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #814 cf99ad6b-08e6-4f47-8698-8a9ee46934da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #814 0437172a-4ace-42b2-bd4b-07f6865f9b9a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #814 1e4d8c4a-a97c-4401-90fd-ad3a461349e9)");

unit.assert_eq8(8'h4D, datamem_ext_i.datamem[13'h232],
"EXT DMEM (Testcase #814 f33b0913-0e64-482b-ade7-514137facdd8)");
unit.assert_eq8(8'hC2, datamem_ext_i.datamem[13'h233],
"EXT DMEM (Testcase #814 326ebabc-4d7f-4cce-a638-7c3308063f1d)");
datamem_ext_i.datamem[13'h232] =
datamem_swap[16'h232];
datamem_ext_i.datamem[13'h233] =
datamem_swap[16'h233];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #815
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h425A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #815)");
    end
end

unit.assert_eq16(16'h425A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #815 7131eaa6-5330-4b55-b474-909ab9fe75b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #815 18a21dbd-dda8-4671-a1d7-864dd1662948)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #815 7332881d-c02e-4994-86c0-2b0938855df7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #815 62e204bc-b2aa-4d6d-a3c8-9dac5776503e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #815 f705ead5-64bc-492b-b967-79cdd2731ced)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #815 1f5bf9d9-8868-48c5-9702-d9a4f59d913f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #815 332fa5fa-f902-45e1-91c3-43c9f857e2d0)");

unit.assert_eq8(8'h5A, datamem_ext_i.datamem[13'h9FF],
"EXT DMEM (Testcase #815 354f45ef-e821-4d55-a27c-974c4dd3f7ba)");
unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'hA00],
"EXT DMEM (Testcase #815 40703f95-22a3-40f4-b1c2-70c092871d53)");
datamem_ext_i.datamem[13'h9FF] =
datamem_swap[16'h9FF];
datamem_ext_i.datamem[13'hA00] =
datamem_swap[16'hA00];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #816
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h352F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #816)");
    end
end

unit.assert_eq16(16'h352F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #816 dfc4c7ab-95bf-484e-b9f9-819856ec5fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #816 8eb7fff2-1f14-413b-b249-30b19c5c54cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #816 b9c5a346-a72a-4c8e-bba3-0c691dfb7795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #816 3115e754-ce29-490b-b354-e5ebc93445b6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #816 9101615d-db3e-4274-a715-744b5bfa6890)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #816 0d11c138-f6b8-4e40-85f5-92fe27bf9486)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #816 4772726d-4d8b-413d-83f5-eb31215bb631)");

unit.assert_eq8(8'h2F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hFC],
"INT DMEM (Testcase #816 b34e8ff3-d5ce-4a99-a225-2c00e5fc05d9)");
unit.assert_eq8(8'h35, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hFD],
"INT DMEM (Testcase #816 85d5d3b6-6c9e-4ae7-ac24-edf606f645f9)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hFC] =
datamem_swap[16'hFC];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hFD] =
datamem_swap[16'hFD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #817
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD531;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #817)");
    end
end

unit.assert_eq16(16'hD531, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #817 934af633-cfdf-4854-894b-ee6b20b253bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #817 92a55ece-dfa0-41bd-9d80-6ba4fa27f62f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #817 8f10f3fa-311f-4e43-9d20-36f9a6d70b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #817 50ba749d-5b7a-4749-9760-b6d6f9a1e917)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #817 a24a4e29-2eda-42b1-97ed-819dceddae57)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #817 850f6d08-4057-4aaf-9de5-b2eaa804fc08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #817 f49f489f-a365-4109-b253-2c7d0eb01f7c)");

unit.assert_eq8(8'h31, datamem_ext_i.datamem[13'hA69],
"EXT DMEM (Testcase #817 d10bf078-73a8-43b7-bc7f-70cfc99f3673)");
unit.assert_eq8(8'hD5, datamem_ext_i.datamem[13'hA6A],
"EXT DMEM (Testcase #817 5b5a4a91-91b9-4be4-95ba-39ad849b9c46)");
datamem_ext_i.datamem[13'hA69] =
datamem_swap[16'hA69];
datamem_ext_i.datamem[13'hA6A] =
datamem_swap[16'hA6A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #818
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3833;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #818)");
    end
end

unit.assert_eq16(16'h3833, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #818 0b0e97f8-21e2-4a20-a912-626b878918d5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #818 4a271edd-c77e-44a9-a7c5-37d86cf92212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #818 10ab416a-4e79-4cc3-b3ef-84e8268eaae4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #818 2824049f-cb1f-4492-b756-cf0e9753ceef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #818 4bceeaa5-1a03-47db-81c9-a9099ee4d430)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #818 536d3496-6dcc-47a8-9e3d-df40496ef0da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #818 fd726f0c-b107-44ca-ae71-942a2cab719d)");

unit.assert_eq8(8'h33, datamem_ext_i.datamem[13'h9E7],
"EXT DMEM (Testcase #818 e22622c0-bad2-4158-b65f-06aa6f221b93)");
unit.assert_eq8(8'h38, datamem_ext_i.datamem[13'h9E8],
"EXT DMEM (Testcase #818 66299d43-dac3-4ffe-9063-0cacb59a0ce2)");
datamem_ext_i.datamem[13'h9E7] =
datamem_swap[16'h9E7];
datamem_ext_i.datamem[13'h9E8] =
datamem_swap[16'h9E8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #819
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #819)");
    end
end

unit.assert_eq16(16'hCA1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #819 36cb9eba-9003-4e80-a5db-48f5a5255ae9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #819 a50bbe1e-967e-4359-bd3c-d364fab4e279)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #819 4358e9ec-1a7e-446f-8232-751ab7e8dece)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #819 dd2e320f-a16f-4686-8ea0-506657654a77)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #819 2f95d24b-ec7c-4503-8a29-02a734b2708b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #819 61e6a68b-f5ac-4af4-ab8f-ebc85c56ea3e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #819 5ac7bb27-8eae-4711-bda3-18174c9733b3)");

unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'h5C1],
"EXT DMEM (Testcase #819 c0eefbeb-c8c9-4cc7-9cbc-f2021eca2a03)");
unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'h5C2],
"EXT DMEM (Testcase #819 59575103-2ecc-4304-a662-b07874871de5)");
datamem_ext_i.datamem[13'h5C1] =
datamem_swap[16'h5C1];
datamem_ext_i.datamem[13'h5C2] =
datamem_swap[16'h5C2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #820
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFCFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #820)");
    end
end

unit.assert_eq16(16'hFCFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #820 88e479d2-b5a6-446f-99b3-3b02814aedc4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #820 865fc998-a2f5-4eee-9ec8-21e5d7bcea14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #820 95334f04-c11d-4758-b576-7548f654ceb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #820 9479ccb9-58fd-4391-a871-e2591600450c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #820 34cc57b7-9f9d-43d1-9857-2af39ec47e95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #820 47d0d19f-23ed-4920-a989-7ae8af3b9ea0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #820 e07013b6-a72c-4431-bc85-cda464ea38c7)");

unit.assert_eq8(8'hFD, datamem_ext_i.datamem[13'hF94],
"EXT DMEM (Testcase #820 3d93899e-8b2f-4aea-94ff-a01afa027f45)");
unit.assert_eq8(8'hFC, datamem_ext_i.datamem[13'hF95],
"EXT DMEM (Testcase #820 22471fe6-ecaf-4416-a3f8-3779e371d8f4)");
datamem_ext_i.datamem[13'hF94] =
datamem_swap[16'hF94];
datamem_ext_i.datamem[13'hF95] =
datamem_swap[16'hF95];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #821
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h1C73;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #821)");
    end
end

unit.assert_eq16(16'h1C73, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #821 9d7ab1d3-c730-4bb9-a1a3-054c3520cbda)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #821 d046767b-577f-4fc0-af54-f5a65338fe1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #821 b4c4b7de-61aa-486b-adb8-ad43bee08f68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #821 4acba05a-a300-4035-ab30-231e41a90f35)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #821 7310440c-a36d-4e57-84e0-53f380ff37ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #821 8bfaff62-1686-4ff4-ab5f-6510cd87c552)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #821 2db51341-c0b2-40f1-84f7-6c81e5dd78a9)");

unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'h3FD],
"EXT DMEM (Testcase #821 b66a0762-5ccd-4c20-b207-aa324fc24e86)");
unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'h3FE],
"EXT DMEM (Testcase #821 332969d3-254e-4f92-92ff-a2bd170d5b00)");
datamem_ext_i.datamem[13'h3FD] =
datamem_swap[16'h3FD];
datamem_ext_i.datamem[13'h3FE] =
datamem_swap[16'h3FE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #822
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2C59;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #822)");
    end
end

unit.assert_eq16(16'h2C59, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #822 03014a31-62c4-4524-8112-3752fa7ee61c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #822 2e2cc15d-5bdc-4171-9bea-95a6b4a974fa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #822 55bce966-e12b-463b-9904-65107fc1bdd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #822 96e6d294-e993-4770-bbd1-12efc34ab129)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #822 b037b3c6-c258-4ec3-b678-53030867e83b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #822 5a1c1e6c-f65b-4649-8161-2318360e7b57)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #822 3c165d86-4e6e-4463-91f4-f5fd9e9425ac)");

unit.assert_eq8(8'h59, datamem_ext_i.datamem[13'hB6A],
"EXT DMEM (Testcase #822 213b4467-9343-40ff-9c9a-6489a5208ffe)");
unit.assert_eq8(8'h2C, datamem_ext_i.datamem[13'hB6B],
"EXT DMEM (Testcase #822 f45b45fd-a866-4219-95b9-625e1597ca9d)");
datamem_ext_i.datamem[13'hB6A] =
datamem_swap[16'hB6A];
datamem_ext_i.datamem[13'hB6B] =
datamem_swap[16'hB6B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #823
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h777C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #823)");
    end
end

unit.assert_eq16(16'h777C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #823 c8c6f99f-1f7f-4bfc-9c84-b9efd68743ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #823 e2189ae8-d3ce-4c1d-9538-be5f8c74a0ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #823 9f74cb31-f6a9-4d48-bb5a-a3a95ab70cc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #823 81fab1ee-75f4-4247-aa3f-39248c3da90a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #823 5de67e49-4bd5-4ca9-8790-aed6866caebf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #823 5020d618-89cb-4c3c-aaf5-9089570acf2d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #823 1d4e390b-9f32-460d-8cc1-7b2be5ddc597)");

unit.assert_eq8(8'h7C, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4F],
"INT DMEM (Testcase #823 29c08ebf-f751-4f91-b481-efb52d70cf83)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h50],
"INT DMEM (Testcase #823 ce3c8424-ad34-4209-9cfc-b68b47f803c6)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4F] =
datamem_swap[16'h4F];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h50] =
datamem_swap[16'h50];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #824
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCE9F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #824)");
    end
end

unit.assert_eq16(16'hCE9F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #824 ec82f53e-4d07-462e-8875-641f92d1460f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #824 feb35b59-7544-4563-a90d-eaa7a26a75ce)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #824 9799f50e-1f7a-43a2-af56-9affa01acecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #824 258db037-7262-49b3-824d-2e77b8a2a932)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #824 227b11aa-a238-4714-9ad5-7cbdc41861d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #824 1a5333e2-03bd-46b4-adcf-56dbac08a9cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #824 bdf780df-63c5-4bf6-ae6c-d0c8952729d2)");

unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h395],
"EXT DMEM (Testcase #824 cce17455-ea32-48cb-a7c3-774799b6c187)");
unit.assert_eq8(8'hCE, datamem_ext_i.datamem[13'h396],
"EXT DMEM (Testcase #824 5ebd823f-7fd9-4766-8cf4-c231766689c5)");
datamem_ext_i.datamem[13'h395] =
datamem_swap[16'h395];
datamem_ext_i.datamem[13'h396] =
datamem_swap[16'h396];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #825
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3A02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #825)");
    end
end

unit.assert_eq16(16'h3A02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #825 229d459c-698e-4e5f-8f93-8dc36961f5fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #825 763736b3-ae0e-4ca1-9100-eb50838771b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #825 7af80200-53a6-4972-a29f-dea2ba999866)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #825 1ccd9ca5-b7ca-4336-8a45-3257a95e418c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #825 fa16b6d0-c475-441d-b186-382f60c28d9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #825 c541cd76-c2a0-43d4-886e-04d4890ccde1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #825 1a1c1d5d-da04-4d23-9955-bda17c6ff75c)");

unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'hAB2],
"EXT DMEM (Testcase #825 8df07e5e-b377-4b82-a779-6cfcd2879b90)");
unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'hAB3],
"EXT DMEM (Testcase #825 359047ce-eef9-424e-a318-09a3bfc3b210)");
datamem_ext_i.datamem[13'hAB2] =
datamem_swap[16'hAB2];
datamem_ext_i.datamem[13'hAB3] =
datamem_swap[16'hAB3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #826
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD695;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #826)");
    end
end

unit.assert_eq16(16'hD695, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #826 61c54151-a8f0-4239-876e-60a9b46f5514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #826 1e9f5607-9a31-4140-9e1b-015555329659)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #826 a3edee90-69fd-4585-9a85-b4425cf5a692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #826 93a73ede-f7c7-43c7-bb7d-c3fc337fdce2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #826 798b1461-3132-49b8-af67-619e13838381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #826 9b04e1d1-1109-4b1b-a365-3c608f9586c8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #826 ea3011ad-d7f7-4126-bbd8-d09916ee27fa)");

unit.assert_eq8(8'h95, datamem_ext_i.datamem[13'h75E],
"EXT DMEM (Testcase #826 c2ff0e7f-0010-4ade-8bf4-8f163617ebb2)");
unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'h75F],
"EXT DMEM (Testcase #826 0354ff1c-e723-4a76-8d9b-6344f62e4700)");
datamem_ext_i.datamem[13'h75E] =
datamem_swap[16'h75E];
datamem_ext_i.datamem[13'h75F] =
datamem_swap[16'h75F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #827
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h28C9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #827)");
    end
end

unit.assert_eq16(16'h28C9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #827 cdab3301-f180-43f3-8baa-4dcac26e0e39)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #827 80eba422-6461-4a84-bb8b-5570d4fa469e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #827 5f6e58f0-ed04-406d-8723-0329b1e1660e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #827 0a9d1638-9bea-419f-a9c6-ef021f54cbb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #827 16041adc-7903-4584-b64d-cee58a0b3659)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #827 3e907206-97b3-4f5e-8629-e7c6932ac431)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #827 85b94e60-ce0f-48bb-ab9d-4269f25682d4)");

unit.assert_eq8(8'hC9, datamem_ext_i.datamem[13'h41D],
"EXT DMEM (Testcase #827 40f8c36f-c002-4b7a-8499-65495340a108)");
unit.assert_eq8(8'h28, datamem_ext_i.datamem[13'h41E],
"EXT DMEM (Testcase #827 24f10b16-06c8-4ec6-82a8-336edb856a0c)");
datamem_ext_i.datamem[13'h41D] =
datamem_swap[16'h41D];
datamem_ext_i.datamem[13'h41E] =
datamem_swap[16'h41E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #828
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE2F7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #828)");
    end
end

unit.assert_eq16(16'hE2F7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #828 2680b980-1517-423c-ba8f-7ffc67200071)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #828 dbac18a6-0df5-4f45-b4cd-48faf1532c09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #828 a105607f-d637-403b-ab3f-f5f50a466c4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #828 9d3f8a18-aeb8-4d92-8afe-ef7a1cde12e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #828 8d65661f-72d2-4e0d-8d5c-ffc34bbab402)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #828 3f40f3e4-50de-4f4c-8773-085fda024143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #828 397ef97c-4f1e-4ed1-818e-059d6c599656)");

unit.assert_eq8(8'hF7, datamem_ext_i.datamem[13'hBED],
"EXT DMEM (Testcase #828 50ff1f66-0292-4f51-81fe-8d46d5cb252c)");
unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'hBEE],
"EXT DMEM (Testcase #828 cf776d55-64fa-406d-a142-c5ee78278db4)");
datamem_ext_i.datamem[13'hBED] =
datamem_swap[16'hBED];
datamem_ext_i.datamem[13'hBEE] =
datamem_swap[16'hBEE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #829
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h749A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #829)");
    end
end

unit.assert_eq16(16'h749A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #829 a89cd7aa-7586-4808-8e87-9aa398f11a62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #829 0d4a7c0e-89e4-4142-b15a-ade289de958b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #829 491ef32e-26f3-4b87-8992-0b0073004471)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #829 52da1a4e-a0e1-48fd-81db-476aa41ab9af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #829 7f7bb1b2-a26f-4b4d-8daa-c3e900936e79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #829 b7d80353-e7ad-41ba-8506-997fbb8fa1da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #829 4a81d0f2-86f5-4880-ac4b-7263e96a64c5)");

unit.assert_eq8(8'h9A, datamem_ext_i.datamem[13'h65C],
"EXT DMEM (Testcase #829 3bc13c2e-ec34-48c4-895c-9f987bd9fb3f)");
unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h65D],
"EXT DMEM (Testcase #829 d61640f7-f194-4331-a248-b28373475a92)");
datamem_ext_i.datamem[13'h65C] =
datamem_swap[16'h65C];
datamem_ext_i.datamem[13'h65D] =
datamem_swap[16'h65D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #830
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5B51;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #830)");
    end
end

unit.assert_eq16(16'h5B51, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #830 fb1ef338-010d-4d74-a599-5bd293ad2ec5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #830 1be32622-7b6a-4f1f-8491-72a271fa7797)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #830 7d37493f-36f8-44a0-b505-953e3f7ab271)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #830 17888ce1-a9f0-4722-8366-b782b723937d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #830 50739865-7cc2-408a-ac35-83cbde0442b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #830 2a9ac419-8da9-45fc-a0a1-0fd70f233f62)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #830 88c03244-1f8d-432b-997c-197ed17e2d64)");

unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'h9D1],
"EXT DMEM (Testcase #830 06ca2a10-dc09-45e2-8d2a-06dacd14152f)");
unit.assert_eq8(8'h5B, datamem_ext_i.datamem[13'h9D2],
"EXT DMEM (Testcase #830 8fede014-1d19-486a-bce0-3525eaae96c6)");
datamem_ext_i.datamem[13'h9D1] =
datamem_swap[16'h9D1];
datamem_ext_i.datamem[13'h9D2] =
datamem_swap[16'h9D2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #831
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3CE1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #831)");
    end
end

unit.assert_eq16(16'h3CE1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #831 e3cf68a7-085a-41fc-85ec-5d10862bdc72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #831 ef71814a-cb4c-4488-9a8e-397082af198a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #831 6791bcec-1ee8-45b7-b79b-6108c22087ca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #831 3feab58a-7751-45fe-bbd0-3f745ea64454)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #831 df57a04d-f8ea-48fa-b695-4913247c7483)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #831 a3f742fa-dad0-4520-b753-b28ae6f386e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #831 b8a1a7cb-72ba-42cb-b6ca-82cbda3d093f)");

unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'hC42],
"EXT DMEM (Testcase #831 98bcbc40-afd3-4489-93d0-2ad2ae24e2b1)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'hC43],
"EXT DMEM (Testcase #831 300980bc-69e2-42a1-8b33-5ac1034c09dd)");
datamem_ext_i.datamem[13'hC42] =
datamem_swap[16'hC42];
datamem_ext_i.datamem[13'hC43] =
datamem_swap[16'hC43];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #832
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4C5F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #832)");
    end
end

unit.assert_eq16(16'h4C5F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #832 274f3eae-5c87-4eed-98a8-516ed2616018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #832 7e2a6a0d-a4da-44aa-bf7d-c5a86e12ecac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #832 77819074-59d5-491b-bd51-aedd3f5f5381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #832 f0cb6e09-b6ae-4fd0-9a0b-fa1ef5f8a5be)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #832 ebc60ef6-6138-4262-b7cb-239c6189ff43)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #832 8fc0b962-b63e-4789-8b22-f91c13094d74)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #832 3ff0a9b9-7329-4535-93de-b032bbc6954e)");

unit.assert_eq8(8'h5F, datamem_ext_i.datamem[13'hF95],
"EXT DMEM (Testcase #832 745b3b6e-f632-44a6-834e-ff1a209756d1)");
unit.assert_eq8(8'h4C, datamem_ext_i.datamem[13'hF96],
"EXT DMEM (Testcase #832 eaa78a32-a962-41e4-bf19-611e321b5fbb)");
datamem_ext_i.datamem[13'hF95] =
datamem_swap[16'hF95];
datamem_ext_i.datamem[13'hF96] =
datamem_swap[16'hF96];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #833
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h68D3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #833)");
    end
end

unit.assert_eq16(16'h68D3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #833 d7ff5fe2-542d-468c-bcf3-8a62a2b28d88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #833 ba6b9f50-8e6c-47b4-9a41-e04f8665dc18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #833 e2aeb13c-bb60-4bca-b51d-be7cc0ae6b64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #833 9ee6ae5b-2535-4018-9c55-f3ace7a1a3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #833 2546e637-f00a-45d1-8517-f0dcf0e9f294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #833 bcac2b94-e585-4b67-acf5-d6b7103d3a4d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #833 b4f00823-1c6e-47cd-8cec-05c79f7147af)");

unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'h7B0],
"EXT DMEM (Testcase #833 fa52ea26-dcc8-465f-8a53-7a59df805df9)");
unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'h7B1],
"EXT DMEM (Testcase #833 e02cd889-527d-4422-a766-ad8c610f1d12)");
datamem_ext_i.datamem[13'h7B0] =
datamem_swap[16'h7B0];
datamem_ext_i.datamem[13'h7B1] =
datamem_swap[16'h7B1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #834
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB140;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #834)");
    end
end

unit.assert_eq16(16'hB140, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #834 c6a23864-778c-4498-94ea-6588ae628a2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #834 decb677b-0468-4ce0-b9e7-308049df2528)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #834 e997cb52-9cb7-4526-9205-29087b9cb0b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #834 f342a2dd-a835-417e-ad21-a09246a2fcbc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #834 b6ed756e-fc9d-484f-b6eb-dab8e35f0941)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #834 bb93b485-215c-44ac-807e-e92f535935c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #834 e33966a8-c7e4-46b6-a391-f68a5102b253)");

unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'hB71],
"EXT DMEM (Testcase #834 90376273-6612-4f0e-9e60-d36c7209882d)");
unit.assert_eq8(8'hB1, datamem_ext_i.datamem[13'hB72],
"EXT DMEM (Testcase #834 fc9ead68-8c8e-4a6a-9343-a66653d391ce)");
datamem_ext_i.datamem[13'hB71] =
datamem_swap[16'hB71];
datamem_ext_i.datamem[13'hB72] =
datamem_swap[16'hB72];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #835
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC440;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #835)");
    end
end

unit.assert_eq16(16'hC440, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #835 2c35e745-27f9-40ec-9582-05581bc6723f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #835 88244b8e-1650-4714-aec6-bb08eb278e55)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #835 6e12d59e-1d3c-4c5e-ad86-15a1834a7e04)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #835 9a7937b2-3341-4456-a291-f0fde76e914c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #835 730d13e1-98bf-4f69-a08c-7d2bc3218ef9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #835 b6b81736-3f2d-4e20-9e5f-a320f8c7c5a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #835 b8582e29-ef91-4046-b5b3-827e81e8a866)");

unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'h4CF],
"EXT DMEM (Testcase #835 bb6f2e39-c6ed-46b5-894b-2a62ee600db7)");
unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h4D0],
"EXT DMEM (Testcase #835 0d08ea35-bc50-499b-bc80-c328493ec8db)");
datamem_ext_i.datamem[13'h4CF] =
datamem_swap[16'h4CF];
datamem_ext_i.datamem[13'h4D0] =
datamem_swap[16'h4D0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #836
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h84DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #836)");
    end
end

unit.assert_eq16(16'h84DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #836 154173e8-4dbe-440e-9e1c-adb95a080b46)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #836 4b91a612-11ff-419b-b9b4-f62746b1035c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #836 e3d2e10d-c113-4e6d-a543-2deec69f3572)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #836 2f36ae09-4cf4-42be-9ce6-3fbd565235f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #836 984e3b36-70a7-4b7d-b676-abd7fae92d68)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #836 6f85b33d-9754-43dd-a6fa-1cd2e306df1b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #836 c8460c4a-5ae7-4403-ad38-e606e1c5e916)");

unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'hBF0],
"EXT DMEM (Testcase #836 0763beca-9a0b-40b3-9919-74346db20d3d)");
unit.assert_eq8(8'h84, datamem_ext_i.datamem[13'hBF1],
"EXT DMEM (Testcase #836 a2f0d8e7-6f3f-435e-a345-4f198c007d2b)");
datamem_ext_i.datamem[13'hBF0] =
datamem_swap[16'hBF0];
datamem_ext_i.datamem[13'hBF1] =
datamem_swap[16'hBF1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #837
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h024C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #837)");
    end
end

unit.assert_eq16(16'h024C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #837 49758210-c939-45a3-8074-bd30734a691b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #837 b9ab8bc9-3eec-4527-ac48-0a4eecd9dcc4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #837 6d48821d-b87a-4cbf-ae9e-6639ca64abe0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #837 c4bc85c6-7254-403e-8493-2e6b8ad59bf8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #837 faaf6ab7-a399-4cd1-ba8a-b84bd0d0ad4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #837 2cf1e2f1-557d-4dc2-b12e-8e67a42365b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #837 ecde6364-27f9-426e-b2d7-372eb88555e8)");

unit.assert_eq8(8'h4C, datamem_ext_i.datamem[13'hA14],
"EXT DMEM (Testcase #837 9047d5ff-60d6-44b6-8369-414fb9dc0522)");
unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'hA15],
"EXT DMEM (Testcase #837 c5840c12-fe48-4241-be3e-74849aeea1c9)");
datamem_ext_i.datamem[13'hA14] =
datamem_swap[16'hA14];
datamem_ext_i.datamem[13'hA15] =
datamem_swap[16'hA15];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #838
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8ECE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #838)");
    end
end

unit.assert_eq16(16'h8ECE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #838 ea5b3c2b-bedd-42f6-a4e7-3ea74abe3c6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #838 bcd0f147-f275-4f9e-8c92-22a76ff5d01e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #838 dad65cb0-ef37-4391-9432-271ca9573f21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #838 ed7750d7-565e-4915-a2ae-8c08ab65a75e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #838 3ddbd54c-7e5b-4199-b418-863a245beb21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #838 983a35ad-6548-4672-ae50-e57246827fbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #838 71373094-4f0b-4ab5-841f-39b02ad0a625)");

unit.assert_eq8(8'hCE, datamem_ext_i.datamem[13'h325],
"EXT DMEM (Testcase #838 343aca9f-5585-4889-9014-1e2426124b29)");
unit.assert_eq8(8'h8E, datamem_ext_i.datamem[13'h326],
"EXT DMEM (Testcase #838 7e2a2fc8-7da7-48f0-a5d6-996905711bd0)");
datamem_ext_i.datamem[13'h325] =
datamem_swap[16'h325];
datamem_ext_i.datamem[13'h326] =
datamem_swap[16'h326];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #839
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAF35;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #839)");
    end
end

unit.assert_eq16(16'hAF35, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #839 1884d719-4b34-4262-b3bc-dfb554b22f5f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #839 91751e31-692a-4c92-8b8a-bdf7f5684dd4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #839 dc48aefe-20ee-4ea4-9348-0d71b997db23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #839 910b21b3-1f1d-41b0-b6da-ddf99a3ea58c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #839 eaaca011-9dd6-40f2-a3f4-e6ed54c5ef9c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #839 f57d9f50-f2bf-4b30-982d-10e34d9e4008)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #839 d81b0733-6d9e-4f06-9e92-46aea11e69c1)");

unit.assert_eq8(8'h35, datamem_ext_i.datamem[13'h49B],
"EXT DMEM (Testcase #839 3142cd6e-5c1c-4d8f-8c72-b397d8061831)");
unit.assert_eq8(8'hAF, datamem_ext_i.datamem[13'h49C],
"EXT DMEM (Testcase #839 5fc0e4f7-0082-4390-85cb-4e5f8443dc88)");
datamem_ext_i.datamem[13'h49B] =
datamem_swap[16'h49B];
datamem_ext_i.datamem[13'h49C] =
datamem_swap[16'h49C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #840
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4A01;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #840)");
    end
end

unit.assert_eq16(16'h4A01, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #840 45e3d8a9-9c62-47fe-a2bd-5f77e9bf2a6a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #840 3e960d23-9b9f-4333-85cc-bc80f8dea6a4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #840 f2ac7456-7dbf-4ebd-8ff1-86fe401c8614)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #840 026099ef-d3c0-4734-93ef-892f79f7db49)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #840 c66ec019-5209-481d-8352-a7e77e48d3e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #840 d463177f-aedc-43a7-bfbc-7185548b3354)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #840 9f3fa343-66d5-4302-b2b5-c1d02291023f)");

unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'h4B4],
"EXT DMEM (Testcase #840 1a0dc0a9-1c16-4435-926f-7544dd7d95a9)");
unit.assert_eq8(8'h4A, datamem_ext_i.datamem[13'h4B5],
"EXT DMEM (Testcase #840 fc1d316e-420c-4af9-ba98-221bf4e36203)");
datamem_ext_i.datamem[13'h4B4] =
datamem_swap[16'h4B4];
datamem_ext_i.datamem[13'h4B5] =
datamem_swap[16'h4B5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #841
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA439;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #841)");
    end
end

unit.assert_eq16(16'hA439, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #841 ad8e5cad-4190-4a96-887a-a45b3aaeb60e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #841 180a2d6b-55af-4e87-9ff5-9046c648dbda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #841 290d572c-1a8d-441f-8698-3abda26baf70)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #841 fd4d2006-69ef-4772-a5b4-a283d2a71011)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #841 c8993eb8-f142-43c3-b7c2-86f651f9dfa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #841 392448e1-4417-4a33-a1c0-17597e9339b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #841 0fd71f49-9aa3-4066-85c6-af930e94c4b6)");

unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'hA7A],
"EXT DMEM (Testcase #841 53984c4a-000c-4383-bc09-5b6763fbddd9)");
unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'hA7B],
"EXT DMEM (Testcase #841 46370ea6-a45e-48e8-838a-68ac48fe7f4c)");
datamem_ext_i.datamem[13'hA7A] =
datamem_swap[16'hA7A];
datamem_ext_i.datamem[13'hA7B] =
datamem_swap[16'hA7B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #842
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h24F2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #842)");
    end
end

unit.assert_eq16(16'h24F2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #842 651008ed-df01-4926-99c0-fe7f1ba5dd03)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #842 a53d384d-ab81-4485-8471-2a29b2a97631)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #842 4e91d7e6-8b3a-49a1-a0cc-22abd4b2f14a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #842 51594e86-9418-44dd-b699-aa514feac75c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #842 68edfb08-f701-45df-a710-286cfb68dafc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #842 b2012b92-952a-4d7f-acbb-7267d44fc67b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #842 cd0d506d-4ebe-4958-9f25-82e33ebcc023)");

unit.assert_eq8(8'hF2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h15],
"INT DMEM (Testcase #842 6e173a10-9d28-4974-9a2d-99ad4edb924f)");
unit.assert_eq8(8'h24, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h16],
"INT DMEM (Testcase #842 16957276-a228-4eb0-a906-ee7a80ef534b)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h15] =
datamem_swap[16'h15];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h16] =
datamem_swap[16'h16];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #843
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3CF1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #843)");
    end
end

unit.assert_eq16(16'h3CF1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #843 10c06368-c08c-4784-aaa4-b6333b7678c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #843 c4bf3ccb-7600-49ae-bae3-c757844eb89f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #843 77dea114-65b3-485e-90ea-42b8d935e61d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #843 1f574a05-a20f-4288-844f-6535e31226eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #843 4a1ff429-a128-4e1e-a348-d19a76569a06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #843 6c86aa70-037a-44a5-97b3-9585fd406115)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #843 9950a362-84fd-45cd-a807-ebe20fb2e48d)");

unit.assert_eq8(8'hF1, datamem_ext_i.datamem[13'h886],
"EXT DMEM (Testcase #843 2f293fb4-4f5e-43cf-a14c-6bc939709456)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h887],
"EXT DMEM (Testcase #843 19b8a487-4615-40c5-83a7-878e6333867b)");
datamem_ext_i.datamem[13'h886] =
datamem_swap[16'h886];
datamem_ext_i.datamem[13'h887] =
datamem_swap[16'h887];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #844
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9D81;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #844)");
    end
end

unit.assert_eq16(16'h9D81, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #844 f78c2e88-937d-4bf5-8cd5-e681a9f2ee75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #844 8dd4599c-68f3-4eaa-9757-e72246c4c0d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #844 16db9685-3a54-49d5-b4a1-8d4f7e2c78d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #844 cbf0cadf-2ceb-454e-9d8c-3a9adacf02e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #844 bf6b3380-57d1-44cc-b443-4d1aff11265a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #844 762baebf-e781-488b-aa0f-608960473a7a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #844 e719e1b2-8726-436b-83c9-4ea5396355b4)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'hE9B],
"EXT DMEM (Testcase #844 c621fadb-1bf2-459d-bf43-d0c9b9c93d18)");
unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'hE9C],
"EXT DMEM (Testcase #844 476278ba-b876-4cdc-89f0-8e18f72ae3fc)");
datamem_ext_i.datamem[13'hE9B] =
datamem_swap[16'hE9B];
datamem_ext_i.datamem[13'hE9C] =
datamem_swap[16'hE9C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #845
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA622;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #845)");
    end
end

unit.assert_eq16(16'hA622, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #845 8d418499-8912-4f79-8264-d0d5e5fed671)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #845 ea2c609e-e43d-4890-8da9-f77bbe2953c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #845 73318134-f259-41aa-850f-32f63a00c8d3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #845 b743c109-894e-467a-8828-b79afd0b1e28)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #845 a963c47d-f0d0-4af4-9730-552d7d6842af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #845 da0e4cfe-e490-4a68-818a-4a00748f3b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #845 e94a5f5e-4c70-4ff6-9de1-e02a08cd6e86)");

unit.assert_eq8(8'h22, datamem_ext_i.datamem[13'hD19],
"EXT DMEM (Testcase #845 a048f161-5a76-47d8-a6f3-cc47ec66879c)");
unit.assert_eq8(8'hA6, datamem_ext_i.datamem[13'hD1A],
"EXT DMEM (Testcase #845 8d9d790a-4ec5-480c-89a2-7fb0be51db3c)");
datamem_ext_i.datamem[13'hD19] =
datamem_swap[16'hD19];
datamem_ext_i.datamem[13'hD1A] =
datamem_swap[16'hD1A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #846
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h77A3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #846)");
    end
end

unit.assert_eq16(16'h77A3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #846 41e86e16-967f-431b-a1ff-266b94944e72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #846 6929d432-bc88-488e-ba75-df17e7633bac)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #846 39e95924-9a94-4e2f-9bb8-1a1a4b4b2810)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #846 3add197a-fce3-4738-bfd9-a58ec5d205e8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #846 b017bb03-b4da-4ac2-8f6e-49f4d7b95daf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #846 f04db562-7549-4288-85ac-0f4e19adbd25)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #846 db672969-55f2-4600-a417-ce20a51936cd)");

unit.assert_eq8(8'hA3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h16],
"INT DMEM (Testcase #846 05dd83e4-e046-4b39-bb4e-0c47531cc917)");
unit.assert_eq8(8'h77, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h17],
"INT DMEM (Testcase #846 35396e7a-0b97-4123-a593-2b3877579517)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h16] =
datamem_swap[16'h116];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h17] =
datamem_swap[16'h117];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #847
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB874;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #847)");
    end
end

unit.assert_eq16(16'hB874, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #847 5b3cfb4d-08da-43ba-a360-172680666771)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #847 160e4ff9-ef2f-4016-bdb8-de4fa6a48191)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #847 06e67ed8-0190-4494-8e77-dbf889c656f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #847 0dd91dc6-c3b4-4acb-9705-fa916863f0cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #847 536c81c5-d713-4291-a963-3a94f110538c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #847 71e55d9e-30df-4647-b39c-250c380e0e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #847 3639ad8c-2c1c-4bed-badd-84ef08595401)");

unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h9C9],
"EXT DMEM (Testcase #847 ec005cb5-aa02-45b9-bda5-2e8ada489737)");
unit.assert_eq8(8'hB8, datamem_ext_i.datamem[13'h9CA],
"EXT DMEM (Testcase #847 dd6a3105-5cb0-474d-a8f7-60e9bba3c4fb)");
datamem_ext_i.datamem[13'h9C9] =
datamem_swap[16'h9C9];
datamem_ext_i.datamem[13'h9CA] =
datamem_swap[16'h9CA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #848
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h27DC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #848)");
    end
end

unit.assert_eq16(16'h27DC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #848 6958cfb1-7995-4489-8429-074e6ec495f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #848 de63ef71-65b4-41f1-a6f9-532476e488e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #848 68884268-a216-4093-ae49-8a191a3deccf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #848 e543327b-a6ab-4b4a-8868-bb677e3463ea)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #848 e8803760-48ed-4c5b-96c5-773411a080e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #848 504f07a7-76d2-4d83-980c-10fb52ec5d95)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #848 f9cd267c-069e-401a-958b-cd46aab9bd94)");

unit.assert_eq8(8'hDC, datamem_ext_i.datamem[13'hA06],
"EXT DMEM (Testcase #848 a3559322-b520-4f76-87ef-7dcd226d4147)");
unit.assert_eq8(8'h27, datamem_ext_i.datamem[13'hA07],
"EXT DMEM (Testcase #848 3524986d-2324-4ee8-9784-634defbf4850)");
datamem_ext_i.datamem[13'hA06] =
datamem_swap[16'hA06];
datamem_ext_i.datamem[13'hA07] =
datamem_swap[16'hA07];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #849
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB7D5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #849)");
    end
end

unit.assert_eq16(16'hB7D5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #849 0a7b9d24-a260-48af-840a-c2178d2a46a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #849 76c3e676-ccea-4299-8f5c-418a82764e60)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #849 93c1ca9a-7f27-443d-9c52-24ce74c5697f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #849 dd822216-9dbb-4a2e-bc47-151294971b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #849 4483c5d3-cbeb-4a96-89d5-6b11db487a66)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #849 718a17f6-5e1d-49a8-bdf4-cea693f429a9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #849 f5cb19c0-d93c-43b2-aa25-94d175732d66)");

unit.assert_eq8(8'hD5, datamem_ext_i.datamem[13'h7FD],
"EXT DMEM (Testcase #849 d7382522-b0fc-41b1-8575-3884b255870f)");
unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'h7FE],
"EXT DMEM (Testcase #849 e57281fb-c390-49b4-baa2-0f7879b1c989)");
datamem_ext_i.datamem[13'h7FD] =
datamem_swap[16'h7FD];
datamem_ext_i.datamem[13'h7FE] =
datamem_swap[16'h7FE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #850
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h38D6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #850)");
    end
end

unit.assert_eq16(16'h38D6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #850 cd8e4dce-8ae4-42c0-971a-9b5adb186878)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #850 9cc8f838-07c4-4537-a2a4-a9b8e2797327)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #850 df4641e5-be6e-464c-ae45-fdf9c2789224)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #850 711c547b-61e8-462f-8fb8-9beb39ed9cee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #850 87016ade-5808-4772-8a02-3e7838c06d50)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #850 53f5589c-605c-44cc-9afa-56103e670485)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #850 7b6990c9-7bde-44b9-bcee-8dd3755ce1a3)");

unit.assert_eq8(8'hD6, datamem_ext_i.datamem[13'hF6A],
"EXT DMEM (Testcase #850 3bffcdc9-62c5-46f3-9607-777a61561b93)");
unit.assert_eq8(8'h38, datamem_ext_i.datamem[13'hF6B],
"EXT DMEM (Testcase #850 6dfd28f7-018d-4818-b45c-efeca98c8a24)");
datamem_ext_i.datamem[13'hF6A] =
datamem_swap[16'hF6A];
datamem_ext_i.datamem[13'hF6B] =
datamem_swap[16'hF6B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #851
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA04E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #851)");
    end
end

unit.assert_eq16(16'hA04E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #851 2bcdd1fc-1538-49e7-b9ab-2b9ee42d386c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #851 1a8b5b12-745d-4045-8cc0-03364b94c612)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #851 b65b094e-a1d1-40bb-a1f7-359404813de1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #851 000faabc-d706-44ad-b257-d2c4399c2d37)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #851 feb701a5-72b4-45ca-855a-175e72ab6fb2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #851 7c8de904-3d97-4f21-9d33-7fcc4d64eec4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #851 fe1bb89f-4b07-4034-a594-8f74935c68cc)");

unit.assert_eq8(8'h4E, datamem_ext_i.datamem[13'h32C],
"EXT DMEM (Testcase #851 79d1eb12-13b4-4be2-9e3b-5108d68ec8f5)");
unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'h32D],
"EXT DMEM (Testcase #851 d9678c61-48ba-4df5-b4a0-a6a306c52e12)");
datamem_ext_i.datamem[13'h32C] =
datamem_swap[16'h32C];
datamem_ext_i.datamem[13'h32D] =
datamem_swap[16'h32D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #852
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h498A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #852)");
    end
end

unit.assert_eq16(16'h498A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #852 84e40cc6-ac19-4866-bc08-1eb60e5716fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #852 6259ceb7-aaed-465a-acaa-01da56dd0307)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #852 3d94202f-a3a1-43db-9e53-9d281cab0e2c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #852 e40980a3-d8cc-4e1e-ac06-668ad8cb7607)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #852 d68dc740-c4cb-4e01-8910-bbc007b8e199)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #852 51cfc8dd-6f70-41e9-807f-816900a01bd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #852 ff6bc42a-1c23-4658-8066-9dfd6f09f2f5)");

unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'h73D],
"EXT DMEM (Testcase #852 27dfc030-746f-4aef-9c82-566088577a55)");
unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'h73E],
"EXT DMEM (Testcase #852 34849189-d3ba-4c57-ba47-fe3595ec6ab5)");
datamem_ext_i.datamem[13'h73D] =
datamem_swap[16'h73D];
datamem_ext_i.datamem[13'h73E] =
datamem_swap[16'h73E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #853
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h67F3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #853)");
    end
end

unit.assert_eq16(16'h67F3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #853 858f622f-0bb8-4372-adc5-99688111ce70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #853 58cde5e6-1809-4c38-ac68-95f93d3aa143)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #853 4542de0c-c92a-4330-9ea3-2e3bc1461c98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #853 66422dc8-e8d3-4170-9c4f-b873decd5a69)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #853 2c28e187-27a6-470c-955d-9c92aa8c0efa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #853 a9a3abda-9632-4a2a-992b-679e7f64908d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #853 ff38aa6c-7724-4931-9cd2-820626c0a75e)");

unit.assert_eq8(8'hF3, datamem_ext_i.datamem[13'h3E2],
"EXT DMEM (Testcase #853 353fa683-321f-481c-8fc7-f1c23f4130ca)");
unit.assert_eq8(8'h67, datamem_ext_i.datamem[13'h3E3],
"EXT DMEM (Testcase #853 3fd8ebc1-7f1f-497c-bab5-2d60d66f44c3)");
datamem_ext_i.datamem[13'h3E2] =
datamem_swap[16'h3E2];
datamem_ext_i.datamem[13'h3E3] =
datamem_swap[16'h3E3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #854
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9F4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #854)");
    end
end

unit.assert_eq16(16'hD9F4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #854 7a0c338f-99b4-4dd9-8f13-af137dc25820)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #854 face6474-562a-4ff8-b44f-ea6954d67b42)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #854 6053ef50-6391-4f99-912e-d8b1eb554d2a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #854 fb516e56-bb07-47a5-b896-608a978e90f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #854 98d8b602-9575-4726-be20-1c66df543ffd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #854 9b690ab7-551f-40d5-a654-d7e8e33d481c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #854 ffb84d6f-38a3-4ced-b7ef-51b6b781f7ee)");

unit.assert_eq8(8'hF4, datamem_ext_i.datamem[13'h229],
"EXT DMEM (Testcase #854 0e43ed16-2f2d-42d8-993c-e75f3a57eb63)");
unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'h22A],
"EXT DMEM (Testcase #854 388224dc-e7d5-4bfc-8037-4848fc6c6dd0)");
datamem_ext_i.datamem[13'h229] =
datamem_swap[16'h229];
datamem_ext_i.datamem[13'h22A] =
datamem_swap[16'h22A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #855
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5289;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #855)");
    end
end

unit.assert_eq16(16'h5289, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #855 c2095d48-c674-405b-9b8c-f2db49caec05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #855 f466a263-fda6-4373-b9c4-4203f41f2b6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #855 a7753dc3-bb32-4e3e-b1b5-015031be1eff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #855 4255cffd-0b2c-4157-8e5b-6973c180e8d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #855 65fd02ce-0a9c-4216-a49d-2ec707f937ec)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #855 bb4775d6-b6b9-42c7-9e0d-ed8e4ff1baa2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #855 8c702c35-23cc-4410-8ca0-dfbb9bd154e9)");

unit.assert_eq8(8'h89, datamem_ext_i.datamem[13'hE0A],
"EXT DMEM (Testcase #855 57c70c0c-5462-495b-a9e8-e4bad6b28a2d)");
unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'hE0B],
"EXT DMEM (Testcase #855 73825412-6d17-4e78-8b4e-6f2792843c32)");
datamem_ext_i.datamem[13'hE0A] =
datamem_swap[16'hE0A];
datamem_ext_i.datamem[13'hE0B] =
datamem_swap[16'hE0B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #856
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h51ED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #856)");
    end
end

unit.assert_eq16(16'h51ED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #856 443d69bd-d1fa-49b1-9496-5257777684ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #856 84879b27-7fe7-4ab8-bad5-b1ed015e3b9b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #856 0fcf2490-9f18-40f2-83b0-506e1bb82495)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #856 be5e6c49-7e81-43f3-a7d3-cb5f4cb301fd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #856 28570611-3ffc-49b2-8e79-3b213e64a4eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #856 b0f30d58-dadb-4104-bba4-229661e29007)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #856 ee38f247-2105-4130-9caf-e09e03a507ff)");

unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'hAA0],
"EXT DMEM (Testcase #856 a422c93c-b5ff-40a7-81a5-256787a6a037)");
unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'hAA1],
"EXT DMEM (Testcase #856 5c73379b-5a2f-4be6-a928-c3c5773f85a3)");
datamem_ext_i.datamem[13'hAA0] =
datamem_swap[16'hAA0];
datamem_ext_i.datamem[13'hAA1] =
datamem_swap[16'hAA1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #857
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0F16;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #857)");
    end
end

unit.assert_eq16(16'h0F16, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #857 b9a8929e-a93d-4473-86f5-6f441d1be90f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #857 76979618-1744-4e59-aab6-73839b18c018)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #857 0c888de7-7d97-429f-897c-d3d476d95a8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #857 42a9a06d-76ac-432b-a6d6-4cee20865c9e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #857 5d72a544-bb53-4720-a15c-5ee9c5e147a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #857 6e191b9e-6f65-448a-a923-27ce9a2090cd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #857 ee8f9fd0-cfac-4e85-83bc-da065a0ded1c)");

unit.assert_eq8(8'h16, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h5F],
"INT DMEM (Testcase #857 9f356c18-e885-4aca-a838-6eb455bd75d9)");
unit.assert_eq8(8'h0F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h60],
"INT DMEM (Testcase #857 759f8843-d06c-48e8-a4de-fcfb88ea41be)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h5F] =
datamem_swap[16'h15F];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h60] =
datamem_swap[16'h160];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #858
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h902A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #858)");
    end
end

unit.assert_eq16(16'h902A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #858 76782b05-3964-4faf-86d1-65f874be24cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #858 8116c1ef-9f09-443e-8a21-5dc84b1bb8d0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #858 79d2d5c3-a608-491a-93fd-bcc1006a886f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #858 f29fae12-6968-4f6e-b14b-a72cfed88588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #858 d20bf1c4-fc8b-4f5c-9104-d375722cf084)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #858 3dd5d85e-c39d-4dc7-ac0e-a2ead523398a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #858 44edf36e-a3ad-48b2-80c6-7b31222f3a43)");

unit.assert_eq8(8'h2A, datamem_ext_i.datamem[13'h9D0],
"EXT DMEM (Testcase #858 f1b480b0-7012-486d-b420-d24fc89c6dc0)");
unit.assert_eq8(8'h90, datamem_ext_i.datamem[13'h9D1],
"EXT DMEM (Testcase #858 c0e7b9aa-619e-4d79-9663-6af0410f675a)");
datamem_ext_i.datamem[13'h9D0] =
datamem_swap[16'h9D0];
datamem_ext_i.datamem[13'h9D1] =
datamem_swap[16'h9D1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #859
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE9AF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #859)");
    end
end

unit.assert_eq16(16'hE9AF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #859 b11260db-c077-432c-baf5-9db8f63c39f0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #859 a6969a65-4767-470c-bcd5-4d1c268bf5d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #859 e6176899-1fd5-4ec0-b53d-e150fe708584)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #859 ee372070-4945-4f8b-aa2a-dde03c50d1eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #859 b342af87-d45e-4f35-94a7-c8d844bd5f0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #859 009f7707-cdb4-4b5d-bf54-bfd910e36546)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #859 39347aa4-8456-478c-83d5-69bea0ee081e)");

unit.assert_eq8(8'hAF, datamem_ext_i.datamem[13'hBE4],
"EXT DMEM (Testcase #859 d8ec4234-277a-4606-98e0-cce86f008869)");
unit.assert_eq8(8'hE9, datamem_ext_i.datamem[13'hBE5],
"EXT DMEM (Testcase #859 91b18c87-ecf8-4a6b-b0e6-0decbd7d9032)");
datamem_ext_i.datamem[13'hBE4] =
datamem_swap[16'hBE4];
datamem_ext_i.datamem[13'hBE5] =
datamem_swap[16'hBE5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #860
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB100;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #860)");
    end
end

unit.assert_eq16(16'hB100, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #860 e91aa1af-3e75-42a0-b4f8-1cb3b0408618)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #860 ead048e2-4cd8-472a-8f22-79a4c52fb905)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #860 e4d9df21-b2b1-444b-a74e-cd74bbbda415)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #860 34c01adc-8292-49ac-94d0-008b66c65409)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #860 ec8f8090-57d1-4a77-b697-e3a910bf076a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #860 43bc73d3-4eae-4a4a-8463-36aae502dccb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #860 0a6b613b-e02d-46f3-8ef8-28efb2aab816)");

unit.assert_eq8(8'h00, datamem_ext_i.datamem[13'hAF2],
"EXT DMEM (Testcase #860 7319a773-ea39-47da-b175-04ee73d14194)");
unit.assert_eq8(8'hB1, datamem_ext_i.datamem[13'hAF3],
"EXT DMEM (Testcase #860 61b4b610-e7ae-43d9-aab9-b1bac619e93c)");
datamem_ext_i.datamem[13'hAF2] =
datamem_swap[16'hAF2];
datamem_ext_i.datamem[13'hAF3] =
datamem_swap[16'hAF3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #861
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD210;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #861)");
    end
end

unit.assert_eq16(16'hD210, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #861 ad7da464-cf23-4948-82f3-b53dc75fa847)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #861 d8e6b1f1-28e3-4ba1-aa60-5c6ca983a342)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #861 b1f8b79c-ae9f-4dbc-a23e-eaff40134e54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #861 a6c862a7-2201-48c7-a1d9-10663dec5f35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #861 fcff0866-e924-4025-a1dc-0b58a3e34fb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #861 6796d5a4-ac1f-4333-aae2-8535fea4369d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #861 10c6d1ed-a159-476a-9f64-a8b36f663a90)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'h289],
"EXT DMEM (Testcase #861 51bc175f-4f31-4aa2-ae4c-6b899a6b7e65)");
unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'h28A],
"EXT DMEM (Testcase #861 2505a192-7107-4d5a-9602-5f3b3858eee2)");
datamem_ext_i.datamem[13'h289] =
datamem_swap[16'h289];
datamem_ext_i.datamem[13'h28A] =
datamem_swap[16'h28A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #862
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFEF7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #862)");
    end
end

unit.assert_eq16(16'hFEF7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #862 a2cadce9-4177-4c42-bd00-1c39e159ad2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #862 03b40b3d-a658-430e-9edb-7b5661d4f245)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #862 952166fd-212f-454b-b5fa-ed7afccc42e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #862 e4dd2dfe-65ce-4e65-a0cc-6f13b62aa2e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #862 70d6f1b0-5613-44f0-9161-1d69b2eb7b4b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #862 59b3b1af-7a5d-4f8e-b00e-2982b174b211)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #862 01f97db2-a0af-44be-a657-338f270bc9ab)");

unit.assert_eq8(8'hF7, datamem_ext_i.datamem[13'h261],
"EXT DMEM (Testcase #862 2e9ba587-4f20-496e-afa5-52fa7a8a0dec)");
unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'h262],
"EXT DMEM (Testcase #862 34e40edf-e997-45ec-97ce-fe896d418262)");
datamem_ext_i.datamem[13'h261] =
datamem_swap[16'h261];
datamem_ext_i.datamem[13'h262] =
datamem_swap[16'h262];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #863
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2C6C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #863)");
    end
end

unit.assert_eq16(16'h2C6C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #863 7e08ee04-26a5-49af-8d22-3e6f69c4d259)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #863 25485289-1661-43f7-9737-fd12f40e0e13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #863 2ae931dd-0e97-4e17-9787-7fcf84cf0e0d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #863 cefe5c6c-3f1f-4555-805d-160c8f4d620e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #863 9f0e0e62-6fde-440b-a56d-25821fbb3fe8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #863 765a5d9a-9296-4e67-b6e3-5e2397385265)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #863 166e6135-09bf-4891-a6e3-58054f2d98ef)");

unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h22A],
"EXT DMEM (Testcase #863 069a1614-565f-4966-acae-07704264fcf5)");
unit.assert_eq8(8'h2C, datamem_ext_i.datamem[13'h22B],
"EXT DMEM (Testcase #863 e9327a34-290e-4d5e-964d-d3ceb8108d28)");
datamem_ext_i.datamem[13'h22A] =
datamem_swap[16'h22A];
datamem_ext_i.datamem[13'h22B] =
datamem_swap[16'h22B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #864
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBE29;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #864)");
    end
end

unit.assert_eq16(16'hBE29, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #864 3654f068-39d0-4117-a85f-38acd6f01f7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #864 3af31e9c-1853-459f-bd32-0816712b164e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #864 67a70874-d719-4990-9d98-a662aea5d283)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #864 d3eaf2b4-6ecb-4710-87cd-c334930532d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #864 69ea1278-30c7-4738-b0ec-2ac697bbf81d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #864 893dc63d-1b9a-4eb7-880c-a4c32654ba3d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #864 e0ffcfad-3db7-4e70-8927-c4895d9822fa)");

unit.assert_eq8(8'h29, datamem_ext_i.datamem[13'hBCD],
"EXT DMEM (Testcase #864 55d65b43-7c7a-4068-8e1f-2feacfda6af9)");
unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'hBCE],
"EXT DMEM (Testcase #864 e72eb58f-dd6b-43ca-8243-db7407b3aa7c)");
datamem_ext_i.datamem[13'hBCD] =
datamem_swap[16'hBCD];
datamem_ext_i.datamem[13'hBCE] =
datamem_swap[16'hBCE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #865
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB951;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #865)");
    end
end

unit.assert_eq16(16'hB951, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #865 d5382da4-3264-4e55-84ad-12ae477379a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #865 1bd77631-f2a6-4d13-923f-bbc21c7fd564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #865 d92e1176-53a0-494f-b85a-679836ec4d1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #865 9e92b263-170e-4867-b2c6-189e473e993d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #865 921d5d95-2094-4641-a0f9-65661d2dc9e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #865 b42494e2-50d5-4a8b-b91e-0deb6d3ea1aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #865 08e49aea-4885-446a-9cea-b976470b9e32)");

unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'h809],
"EXT DMEM (Testcase #865 ffb78a9c-585f-4872-a460-456e6d244c7a)");
unit.assert_eq8(8'hB9, datamem_ext_i.datamem[13'h80A],
"EXT DMEM (Testcase #865 62073b4c-f000-4734-a247-0053df10cb3d)");
datamem_ext_i.datamem[13'h809] =
datamem_swap[16'h809];
datamem_ext_i.datamem[13'h80A] =
datamem_swap[16'h80A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #866
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDAA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #866)");
    end
end

unit.assert_eq16(16'hDAA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #866 f4c17137-5e55-45b7-bfd6-9386870d64e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #866 57169058-0307-430d-b739-a486edb1c48b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #866 ba5b059a-9984-46c4-9a3f-39af20c7735c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #866 eae9163e-42d4-491e-af7e-ac5f719574b4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #866 4271d5cb-a80f-45f9-bedb-12d37d842d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #866 8b33d384-c133-4555-b52f-b8b5aa072243)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #866 e20fb498-7c26-4b19-90d7-12210da7da4b)");

unit.assert_eq8(8'hA3, datamem_ext_i.datamem[13'h35E],
"EXT DMEM (Testcase #866 e1925970-45dc-4b52-914d-372abaa9d82d)");
unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'h35F],
"EXT DMEM (Testcase #866 a7f38507-a390-4c31-898f-a157c55da349)");
datamem_ext_i.datamem[13'h35E] =
datamem_swap[16'h35E];
datamem_ext_i.datamem[13'h35F] =
datamem_swap[16'h35F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #867
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4AD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #867)");
    end
end

unit.assert_eq16(16'h4AD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #867 923b9ee6-9c16-4e50-bace-d5eaf85cb232)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #867 04e3d40c-6def-4a75-abd4-fb0cdd7af57c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #867 440e7f69-086b-4d88-82e1-3a16d636f93c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #867 d7364680-2a5b-4946-a7f6-c4208146225c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #867 24bf1ac6-6b13-404e-a892-59ee36a973bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #867 d4f9b16c-491f-48a9-8b83-54ac1cb655cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #867 e5907787-4345-4fe9-8fd1-dc681746aa5a)");

unit.assert_eq8(8'hD2, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5A],
"INT DMEM (Testcase #867 a6d51fa3-2e9c-4514-9ce1-cc91caec0794)");
unit.assert_eq8(8'h4A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5B],
"INT DMEM (Testcase #867 cb227646-6432-48e2-b5eb-8500b3b5d1b8)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5A] =
datamem_swap[16'h5A];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5B] =
datamem_swap[16'h5B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #868
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2E34;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #868)");
    end
end

unit.assert_eq16(16'h2E34, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #868 aa9ae4e0-b1c4-4979-a025-697d21da275c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #868 b4194c0c-e0d2-45f6-a60a-3f8cc53a4df4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #868 a79c89a4-229a-4421-b327-9a17da77d559)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #868 38584324-4c62-44da-8256-aa69aaa53063)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #868 03582deb-240e-4cbb-a357-6c03629812eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #868 7249b871-75b0-4135-b38b-aa6b53a09928)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #868 f9e00f52-32c1-4560-ac58-f768e08bbfca)");

unit.assert_eq8(8'h34, datamem_ext_i.datamem[13'h2B4],
"EXT DMEM (Testcase #868 7e9623a5-5233-4080-a534-090fb1916fb2)");
unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'h2B5],
"EXT DMEM (Testcase #868 09cd25cf-0dd4-415b-a863-ce8261fb81f8)");
datamem_ext_i.datamem[13'h2B4] =
datamem_swap[16'h2B4];
datamem_ext_i.datamem[13'h2B5] =
datamem_swap[16'h2B5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #869
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6C72;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #869)");
    end
end

unit.assert_eq16(16'h6C72, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #869 fa99bdb6-f5bb-47bc-ad1a-9662b3283aa4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #869 3f93ee1f-14e6-4321-b20a-4a7141ab95a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #869 bd9c07f7-e7e5-4637-89b7-a445657ed68e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #869 9607d8ed-a1b0-4570-937c-fe8e5a178e06)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #869 4d50b956-a2f3-4d55-8912-a8fab8082d66)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #869 d7bdc3fd-fec6-4d8a-9acc-97ad8f15afe7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #869 fab51a24-d220-4c77-b118-10757546a1a8)");

unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'h791],
"EXT DMEM (Testcase #869 da924d13-a52a-44df-a027-ec1a99cd4fc5)");
unit.assert_eq8(8'h6C, datamem_ext_i.datamem[13'h792],
"EXT DMEM (Testcase #869 c527b811-08ec-4c90-ba22-a2ba79571367)");
datamem_ext_i.datamem[13'h791] =
datamem_swap[16'h791];
datamem_ext_i.datamem[13'h792] =
datamem_swap[16'h792];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #870
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8960;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #870)");
    end
end

unit.assert_eq16(16'h8960, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #870 19bbaee6-83f0-4f22-9f7d-3052d7f923aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #870 a18e19bc-d575-4ec1-b132-94ddee02791b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #870 ceedbb12-4eca-4bd9-8ec5-a85b3a447a71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #870 917052d2-168c-4451-bc29-4467f3329946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #870 a14fbfac-98e8-4db6-97b2-a540fd15cf90)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #870 ea3e376a-ca41-4b4b-baf1-b314fe27c768)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #870 dd7e0186-31a0-479f-b2a7-ae759bdec463)");

unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'h49A],
"EXT DMEM (Testcase #870 7551ef62-ddb0-4989-97d6-9dec7e287287)");
unit.assert_eq8(8'h89, datamem_ext_i.datamem[13'h49B],
"EXT DMEM (Testcase #870 29e4f114-1e55-4fb1-a299-13503bc67ccf)");
datamem_ext_i.datamem[13'h49A] =
datamem_swap[16'h49A];
datamem_ext_i.datamem[13'h49B] =
datamem_swap[16'h49B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #871
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4699;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #871)");
    end
end

unit.assert_eq16(16'h4699, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #871 91fa9776-2cab-42be-9101-bfffa031ac08)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #871 5b3228c2-1fe4-4576-9c23-d168fa7026da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #871 53fad4f9-b557-4381-827a-6bedfb83a846)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #871 7864d8aa-597c-4d5b-8afc-6d9b198a7826)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #871 5f0bc55d-5ed7-4fe0-8bea-94e4e86982e2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #871 7ae1debd-96a7-4f5e-a657-069b52cf3481)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #871 a5b7ff8f-8bca-4ec7-b68d-84257d7b2230)");

unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'h48B],
"EXT DMEM (Testcase #871 35225def-dd22-4bfb-95e4-f1163f67fc91)");
unit.assert_eq8(8'h46, datamem_ext_i.datamem[13'h48C],
"EXT DMEM (Testcase #871 d2090f66-65c9-43ed-ae37-7e130b8856e4)");
datamem_ext_i.datamem[13'h48B] =
datamem_swap[16'h48B];
datamem_ext_i.datamem[13'h48C] =
datamem_swap[16'h48C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #872
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3B8C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #872)");
    end
end

unit.assert_eq16(16'h3B8C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #872 767dad3f-898f-458e-b67c-ee20ecd211e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #872 86bf21a3-a4ca-4abf-8473-9da9e9cc3cef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #872 08f23f83-1466-4a56-8b62-7305d72a6b86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #872 45245da6-a20e-40d5-9038-48e7bfb55b90)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #872 1686f0a9-0fbb-4907-b4ed-a8d55d856b7e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #872 58995a06-8386-4505-9ebb-2b3a53e113e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #872 56beb296-d36a-42c4-9463-69f5dcf7aa5f)");

unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'h3E2],
"EXT DMEM (Testcase #872 83b1097b-bf40-436a-9d51-abc16d844870)");
unit.assert_eq8(8'h3B, datamem_ext_i.datamem[13'h3E3],
"EXT DMEM (Testcase #872 764f4104-703a-43ca-b9a5-0c46568f1ac1)");
datamem_ext_i.datamem[13'h3E2] =
datamem_swap[16'h3E2];
datamem_ext_i.datamem[13'h3E3] =
datamem_swap[16'h3E3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #873
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5E3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #873)");
    end
end

unit.assert_eq16(16'h5E3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #873 37a92a9a-8795-4209-80e5-1c05988ece88)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #873 829948af-3ef9-44ac-a00b-1a538ab3b533)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #873 99d8a830-11fe-4e31-aa85-8d3037cfacd1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #873 3a2f6ec5-7aec-45a6-a0ad-dd849f8ae23a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #873 1b20a668-7aa2-41e1-97d9-1427605c8688)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #873 2b5a7a98-68cc-4ed4-994a-a70a0c177176)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #873 83c325bb-6513-4e9a-a622-23dddda1cc49)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'hA2B],
"EXT DMEM (Testcase #873 0fa71379-ddec-423c-b810-37860ea917fe)");
unit.assert_eq8(8'h5E, datamem_ext_i.datamem[13'hA2C],
"EXT DMEM (Testcase #873 04e74824-f752-467a-ba7d-fec5ef132b1c)");
datamem_ext_i.datamem[13'hA2B] =
datamem_swap[16'hA2B];
datamem_ext_i.datamem[13'hA2C] =
datamem_swap[16'hA2C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #874
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h62DD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #874)");
    end
end

unit.assert_eq16(16'h62DD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #874 6ccc0f2a-8eda-4c3c-b63a-8f8d2d401f2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #874 3eda91ed-9a77-4713-b3f8-9faebba588d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #874 18ec4baa-0575-49bd-ba40-0a9b65283591)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #874 fa3aa3cd-3938-4f78-b6b6-2878117ce7f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #874 32de7860-97fc-496d-92f1-d9de0fbf2a01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #874 9664f3c5-6f77-4df1-b088-03450e65310e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #874 00d73f57-7889-4898-858b-10a7560e6525)");

unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'h8FC],
"EXT DMEM (Testcase #874 2c837774-4750-4eb8-a2ba-1287ed835c04)");
unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'h8FD],
"EXT DMEM (Testcase #874 d84f31d7-9b94-4c44-8dc1-0cc2e18e9c8e)");
datamem_ext_i.datamem[13'h8FC] =
datamem_swap[16'h8FC];
datamem_ext_i.datamem[13'h8FD] =
datamem_swap[16'h8FD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #875
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hECDD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #875)");
    end
end

unit.assert_eq16(16'hECDD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #875 3843898f-cd52-435f-8e52-759c3988112f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #875 cd196e2a-c2ab-4eaa-83d7-dafe1673b914)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #875 5b69c3ec-c9dd-4577-b84c-5e032a4db564)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #875 c7fea1d8-56ad-405a-80cb-462decaa8c38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #875 5d887a6c-19e5-4a6a-b08f-9af1b4393b0b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #875 2649623f-b8e0-41dc-87ec-1df4d664f091)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #875 d07266b3-e891-4b2f-a076-e3a6c3390c32)");

unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'hB31],
"EXT DMEM (Testcase #875 6e4067be-2bbc-4a13-b320-efa6266c7960)");
unit.assert_eq8(8'hEC, datamem_ext_i.datamem[13'hB32],
"EXT DMEM (Testcase #875 7cc70821-c98f-43ad-bb4e-502e9af1be88)");
datamem_ext_i.datamem[13'hB31] =
datamem_swap[16'hB31];
datamem_ext_i.datamem[13'hB32] =
datamem_swap[16'hB32];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #876
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h42B3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #876)");
    end
end

unit.assert_eq16(16'h42B3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #876 562be48b-24a0-4d59-8e7c-ce75144faa0d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #876 6fe756ad-8cff-4323-8576-6ef3fe17fa07)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #876 cf72674a-27f4-46af-9557-5538b2efe055)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #876 30a7b998-d3ab-4ffe-9c9a-398514b2c2a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #876 916e95a0-063c-4457-a480-0ba0cd155425)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #876 395de006-784f-4508-9a59-c11daa833ce2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #876 741b4127-2a35-46dc-adf9-e4910f52a903)");

unit.assert_eq8(8'hB3, datamem_ext_i.datamem[13'hFE4],
"EXT DMEM (Testcase #876 b999c786-969f-413f-a0c7-7bbc8f7df2dd)");
unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'hFE5],
"EXT DMEM (Testcase #876 e2143e93-1578-407d-b5fe-3a60d56613f3)");
datamem_ext_i.datamem[13'hFE4] =
datamem_swap[16'hFE4];
datamem_ext_i.datamem[13'hFE5] =
datamem_swap[16'hFE5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #877
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h434B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #877)");
    end
end

unit.assert_eq16(16'h434B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #877 9d133b97-3fcf-4a10-9f72-35ac9234baa3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #877 b107d76b-3a9f-475f-a49d-d183bc164a8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #877 19a5369e-4c8a-4bda-b830-2207f8add78a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #877 a8224b04-5f75-4221-ac7b-12a299020479)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #877 9a644bdb-767a-4970-bcc7-e1eb3e5e6a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #877 f3b5fb24-e94a-48e9-ac33-b2110327fbe9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #877 a37a36de-d112-4275-a0ac-9733d048cb0d)");

unit.assert_eq8(8'h4B, datamem_ext_i.datamem[13'hEA6],
"EXT DMEM (Testcase #877 63de6b5d-b3ec-4195-9a8d-0ad1fd1a66a3)");
unit.assert_eq8(8'h43, datamem_ext_i.datamem[13'hEA7],
"EXT DMEM (Testcase #877 4432ec15-daa7-47a3-94cd-968361cc5dbe)");
datamem_ext_i.datamem[13'hEA6] =
datamem_swap[16'hEA6];
datamem_ext_i.datamem[13'hEA7] =
datamem_swap[16'hEA7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #878
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h55AE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #878)");
    end
end

unit.assert_eq16(16'h55AE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #878 1eea472f-f221-49e1-9b91-8994a2573b8d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #878 d6a701e5-c856-4595-b52f-3eb56f1d2608)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #878 3a53b279-94e9-4eee-843e-2779ddb52c22)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #878 98c8d8db-2ad6-481f-b830-b5b48abfbd45)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #878 0b77abd5-d942-45cd-a5ed-ac5fbbac2413)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #878 8ee10b41-3529-4cfe-8841-3a872882f6c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #878 d6411db4-01cd-4287-88e0-4bd9c7c7dcfa)");

unit.assert_eq8(8'hAE, datamem_ext_i.datamem[13'hEF9],
"EXT DMEM (Testcase #878 fce17bf5-4b47-46ba-9e91-f6eb9e274f23)");
unit.assert_eq8(8'h55, datamem_ext_i.datamem[13'hEFA],
"EXT DMEM (Testcase #878 bd789b28-d92d-493b-846f-1ed591da5bbb)");
datamem_ext_i.datamem[13'hEF9] =
datamem_swap[16'hEF9];
datamem_ext_i.datamem[13'hEFA] =
datamem_swap[16'hEFA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #879
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5C12;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #879)");
    end
end

unit.assert_eq16(16'h5C12, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #879 4b491021-4846-482f-b71c-1165d1929b8f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #879 ccef6c17-2bc9-4de3-b00b-af5129c455e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #879 1a262aa8-93e7-47b0-994f-f073442650f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #879 2a245e11-9856-4c18-ae5d-04c3b59fd28e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #879 17035ca7-1d9c-48be-8f0a-329dfbfe751d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #879 9eb67657-9862-4976-9092-aebf08e3e098)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #879 2c2727a3-0236-4fe4-adf4-7e0f779dccec)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h760],
"EXT DMEM (Testcase #879 1211215f-0e42-4a60-8bc4-8c44aed05015)");
unit.assert_eq8(8'h5C, datamem_ext_i.datamem[13'h761],
"EXT DMEM (Testcase #879 3310f767-7e52-4ca9-8c72-622fe7208bbf)");
datamem_ext_i.datamem[13'h760] =
datamem_swap[16'h760];
datamem_ext_i.datamem[13'h761] =
datamem_swap[16'h761];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #880
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD019;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #880)");
    end
end

unit.assert_eq16(16'hD019, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #880 31bcbf01-30d7-43d4-8082-1bbd4aaeb9f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #880 5bdb1c7b-d349-44f9-964e-77ec5e8e5540)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #880 b3b886c7-8fa6-4d3a-a8ba-d470e707e655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #880 4ec7d67e-f46f-472f-b858-4643044d345b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #880 7873bbdb-e681-4e20-a858-debb81d09775)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #880 4f270a58-7659-4988-9345-b6249d7ec8dc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #880 fada8751-ca2b-49e3-87b7-698b067de343)");

unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'h85B],
"EXT DMEM (Testcase #880 4f9a50f6-475e-4b7f-9d6f-e1ef4ccfa989)");
unit.assert_eq8(8'hD0, datamem_ext_i.datamem[13'h85C],
"EXT DMEM (Testcase #880 cdd98680-6ff3-4512-99fb-d2f20036e8b7)");
datamem_ext_i.datamem[13'h85B] =
datamem_swap[16'h85B];
datamem_ext_i.datamem[13'h85C] =
datamem_swap[16'h85C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #881
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h363A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #881)");
    end
end

unit.assert_eq16(16'h363A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #881 08588411-7ee2-4eea-b73d-309b3bfa5140)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #881 c724ba8a-93f7-439d-957e-434854c11c13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #881 9c174d0d-0b66-49cd-a463-a522a2bea7e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #881 52625b2d-9154-4598-8349-e0c770dbc375)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #881 cf157c75-9a30-420f-aae0-b7b5e5b5408c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #881 14adf35c-03a3-48a7-9e09-d98becf2f52b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #881 4298d139-1d9f-43d3-b9fe-5ef527c64a14)");

unit.assert_eq8(8'h3A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h16],
"INT DMEM (Testcase #881 537a594a-f7c0-41e2-bde6-01623e564bdf)");
unit.assert_eq8(8'h36, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h17],
"INT DMEM (Testcase #881 8641c735-815e-49de-ba4d-d50c7d0b8cc2)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h16] =
datamem_swap[16'h116];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h17] =
datamem_swap[16'h117];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #882
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFCCF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #882)");
    end
end

unit.assert_eq16(16'hFCCF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #882 ac6832a6-4892-4e53-9133-75d96ce09380)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #882 d844244d-e255-4a65-99d7-119484b2759e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #882 f5dd3b5e-03ce-4739-9caf-49d226d5e652)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #882 caa70bf6-b30b-48fd-8ad6-c3492d5dbcc8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #882 bb755f2d-8dcc-4399-a5da-6aa145ea3df1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #882 735afce3-33f7-4860-b5f9-71d303bf568c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #882 1683a288-d4d6-450d-bdba-e3b05592dc88)");

unit.assert_eq8(8'hCF, datamem_ext_i.datamem[13'h64C],
"EXT DMEM (Testcase #882 9425d0a2-a522-4f47-ad77-8f88ab0283d0)");
unit.assert_eq8(8'hFC, datamem_ext_i.datamem[13'h64D],
"EXT DMEM (Testcase #882 9154ccbc-dbf5-4163-835a-eeb12aa9156e)");
datamem_ext_i.datamem[13'h64C] =
datamem_swap[16'h64C];
datamem_ext_i.datamem[13'h64D] =
datamem_swap[16'h64D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #883
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4D24;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #883)");
    end
end

unit.assert_eq16(16'h4D24, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #883 6e13f291-f3e3-4ca7-b9e8-9ea90c6b78f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #883 7c3d57ae-e5dd-4b5d-98d9-48450c3e56d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #883 f930c3b6-b565-41e3-bea7-6efb4573e3b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #883 a6582594-846e-49e2-87f4-233cde30e6d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #883 8e05f475-e80d-4278-81bf-c4802a89cc87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #883 28642d7d-d4cd-4d9e-a035-0c6438408707)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #883 2489cfa9-a56c-43f7-b201-6dd13074eaed)");

unit.assert_eq8(8'h24, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF3],
"INT DMEM (Testcase #883 66a0e803-370a-495c-be91-e7c4c91d9fc0)");
unit.assert_eq8(8'h4D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF4],
"INT DMEM (Testcase #883 f99e656a-24f1-43f3-86b3-68fcab414299)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF3] =
datamem_swap[16'hF3];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hF4] =
datamem_swap[16'hF4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #884
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9217;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #884)");
    end
end

unit.assert_eq16(16'h9217, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #884 f9b1fe11-a604-479c-a0e4-9599f064e18e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #884 666ca317-e0a2-4273-93ea-66e5c8e9cfe7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #884 d7fc307a-c135-410a-87f9-f534033281bc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #884 9bc66667-83bd-4335-b354-7b4a29805609)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #884 fa5868d4-59fe-477f-88cb-e49e3fb27a87)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #884 129b8981-5602-4edf-a185-9c62093a5f81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #884 1fda8591-be8f-403a-9c0f-5c9b663ce7c3)");

unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'h41E],
"EXT DMEM (Testcase #884 6c226c3f-6ac7-4a44-b155-84345af0fcb3)");
unit.assert_eq8(8'h92, datamem_ext_i.datamem[13'h41F],
"EXT DMEM (Testcase #884 6ea19e0c-b823-40cb-a4b8-260fe39723c5)");
datamem_ext_i.datamem[13'h41E] =
datamem_swap[16'h41E];
datamem_ext_i.datamem[13'h41F] =
datamem_swap[16'h41F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #885
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3C9D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #885)");
    end
end

unit.assert_eq16(16'h3C9D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #885 d46af4bb-f286-43f3-8fcc-07b93318cad9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #885 475635e0-9b5f-4fd8-8ba2-30c5063e6a53)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #885 6b9607ea-9dd4-4cfa-9bbd-b16f9d60c360)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #885 3a7ccadf-22d9-408d-8f51-c94ca5d9e5c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #885 d4099b4f-0efd-4d19-b46f-f854128af00c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #885 98931b56-0c46-48e5-96e2-4a77926e18e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #885 3a78d7c1-5c0b-4908-92e2-d879ce962f9d)");

unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'h6AE],
"EXT DMEM (Testcase #885 b5e3b11b-141f-47cd-8278-d4bc877409d5)");
unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h6AF],
"EXT DMEM (Testcase #885 e0ce6e4a-8808-4779-960f-f3bd30b91bb3)");
datamem_ext_i.datamem[13'h6AE] =
datamem_swap[16'h6AE];
datamem_ext_i.datamem[13'h6AF] =
datamem_swap[16'h6AF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #886
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h551E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #886)");
    end
end

unit.assert_eq16(16'h551E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #886 393b8505-7ae6-4cea-b00b-3a7fdf6675b2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #886 cf34ed3d-1baa-425f-9775-096d35cf5d28)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #886 a2fdcd99-9cf9-4fb7-a342-f36cf086b770)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #886 ad077a70-9aca-4d4a-a258-074382da81e1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #886 51936a0d-b2ca-41b0-98e9-73d681428bb0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #886 88263ef2-c58a-46a0-91fd-a06531bffc91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #886 e8db03b2-63cb-4ea8-ad40-e5c7b68bc34e)");

unit.assert_eq8(8'h1E, datamem_ext_i.datamem[13'h3D3],
"EXT DMEM (Testcase #886 97b9f34c-17ea-40a9-bb81-6a25dd36f9fb)");
unit.assert_eq8(8'h55, datamem_ext_i.datamem[13'h3D4],
"EXT DMEM (Testcase #886 ff43a558-4eb0-4c72-831b-567aecf085b1)");
datamem_ext_i.datamem[13'h3D3] =
datamem_swap[16'h3D3];
datamem_ext_i.datamem[13'h3D4] =
datamem_swap[16'h3D4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #887
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBBC1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #887)");
    end
end

unit.assert_eq16(16'hBBC1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #887 2e8efe2d-f7be-4671-832d-7c1eabcbf9f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #887 66c82a06-430d-481c-a035-7fb01fd3f4dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #887 7898d858-f898-4175-b57a-9728684daac1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #887 7063d4fc-53ab-42da-8195-e5e3e4a8b6eb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #887 6bb90504-010e-4af6-be38-1fd281e8f98f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #887 7c255831-9c96-4358-a2d5-a5a8bc9a9745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #887 16c36988-2373-4a15-9f42-c4891ef13090)");

unit.assert_eq8(8'hC1, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAC],
"INT DMEM (Testcase #887 2a68a457-45ac-4a93-9d0c-a070c0600033)");
unit.assert_eq8(8'hBB, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAD],
"INT DMEM (Testcase #887 9c274f12-dd09-4e78-8f40-def22b3d442e)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAC] =
datamem_swap[16'hAC];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hAD] =
datamem_swap[16'hAD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #888
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9C64;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #888)");
    end
end

unit.assert_eq16(16'h9C64, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #888 5c9378e2-2d72-4abc-a32e-3df4a367a9b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #888 7efe994c-846d-4759-8f80-9a1dbb969d40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #888 41aab635-598b-4f56-a44b-3e4646497d09)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #888 d2ba0970-7e6e-4a26-a4ed-ecada88d0699)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #888 8e2dd06d-e25d-45c8-9138-f67938bc465c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #888 16c5d84c-8c6d-4825-9496-06a1faa0d59d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #888 a1cd2307-f77d-4cac-85d7-bc28f8a98c70)");

unit.assert_eq8(8'h64, datamem_ext_i.datamem[13'h473],
"EXT DMEM (Testcase #888 babb21bf-8fdc-4b41-b7db-a4b51de173ce)");
unit.assert_eq8(8'h9C, datamem_ext_i.datamem[13'h474],
"EXT DMEM (Testcase #888 5bac91db-09ba-4b1a-92d8-aa6464bd27dd)");
datamem_ext_i.datamem[13'h473] =
datamem_swap[16'h473];
datamem_ext_i.datamem[13'h474] =
datamem_swap[16'h474];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #889
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC081;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #889)");
    end
end

unit.assert_eq16(16'hC081, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #889 24222b24-e089-4e99-847b-7f79ccae76db)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #889 ac6a0e3a-cce8-4c30-b414-1e216771d933)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #889 37cc8561-fd54-413a-b4db-9d159abf21bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #889 7aa7d23f-5a36-4693-b8cc-c9461dc2180f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #889 548eb07d-86fd-4508-8050-482601ae26c9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #889 dd3a9fb5-769e-41f0-a446-495b7bdafc3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #889 fa4a796c-1b51-4758-afad-6c0c7f492a8b)");

unit.assert_eq8(8'h81, datamem_ext_i.datamem[13'h2D5],
"EXT DMEM (Testcase #889 2d50ed11-1e86-45a9-9470-69cee892d5ff)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h2D6],
"EXT DMEM (Testcase #889 fe6dcd7b-2051-4bfa-8787-c75ea41147d8)");
datamem_ext_i.datamem[13'h2D5] =
datamem_swap[16'h2D5];
datamem_ext_i.datamem[13'h2D6] =
datamem_swap[16'h2D6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #890
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h474B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #890)");
    end
end

unit.assert_eq16(16'h474B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #890 e48fde98-e0aa-4d13-9946-21d682196561)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #890 baedd325-9742-475e-ba2b-1b9d3ac5b5d8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #890 d12072c4-74ca-4ded-a190-10dac8c01900)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #890 bd65c468-54a3-4440-9d39-7e145815d725)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #890 a5c97e13-0178-4568-8eef-686ac2a110e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #890 db8ada05-c8b1-44b9-b277-40060ebad734)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #890 089f1473-d8cd-447c-b317-4b60e195d964)");

unit.assert_eq8(8'h4B, datamem_ext_i.datamem[13'hBB0],
"EXT DMEM (Testcase #890 0c672d89-ffe3-44e3-8724-7eb508fd3cc1)");
unit.assert_eq8(8'h47, datamem_ext_i.datamem[13'hBB1],
"EXT DMEM (Testcase #890 41fe0758-2d40-44b3-bd0c-a321dc3ff895)");
datamem_ext_i.datamem[13'hBB0] =
datamem_swap[16'hBB0];
datamem_ext_i.datamem[13'hBB1] =
datamem_swap[16'hBB1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #891
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC8BC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #891)");
    end
end

unit.assert_eq16(16'hC8BC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #891 6b3e3b91-eacb-4f24-9701-86adc3d90026)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #891 6104adc4-03e8-413b-a327-5c2469e57358)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #891 60f6a81e-259a-4653-bd36-aa722c07c423)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #891 91cb9e81-47c7-4b97-b8ac-6ad2dadba299)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #891 e2d3fe15-6a27-419b-8dbd-30271af1db13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #891 0e777a52-25e3-4764-86ce-64f6c9d607b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #891 fc7212df-496a-4642-92c6-e5c1107dbae0)");

unit.assert_eq8(8'hBC, datamem_ext_i.datamem[13'h6BF],
"EXT DMEM (Testcase #891 67265e85-cac0-453f-83cc-f648747ad790)");
unit.assert_eq8(8'hC8, datamem_ext_i.datamem[13'h6C0],
"EXT DMEM (Testcase #891 e1cb808e-8150-4c40-a41f-2f2da1832b12)");
datamem_ext_i.datamem[13'h6BF] =
datamem_swap[16'h6BF];
datamem_ext_i.datamem[13'h6C0] =
datamem_swap[16'h6C0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #892
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h104E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #892)");
    end
end

unit.assert_eq16(16'h104E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #892 ca3d4c95-dcf1-4f67-996c-d225b01a65b1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #892 425a6ae8-36f2-4e3a-8f1c-648e1c0bb74e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #892 bf5a1ab2-4718-4c29-a590-840e0d0e8148)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #892 869703a5-588b-4738-834f-2aa55badcb43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #892 89576ed6-14bf-4868-98b4-e4b6c99900ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #892 1e4cb54d-386f-4754-b5fa-a5282b49e62a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #892 f98bad5d-04ca-4c29-90db-e9fdac451eae)");

unit.assert_eq8(8'h4E, datamem_ext_i.datamem[13'hCC4],
"EXT DMEM (Testcase #892 7412d469-f262-4186-b5c2-ce301e368666)");
unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'hCC5],
"EXT DMEM (Testcase #892 842ecd61-a132-4aaf-86c6-31525183a529)");
datamem_ext_i.datamem[13'hCC4] =
datamem_swap[16'hCC4];
datamem_ext_i.datamem[13'hCC5] =
datamem_swap[16'hCC5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #893
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h92;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF93E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #893)");
    end
end

unit.assert_eq16(16'hF93E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #893 4838025a-82f2-4183-9da3-a5d300d4d8a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #893 136c551e-57ce-4f36-b849-47b8741a4803)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #893 6d2a459c-9141-4ca6-b194-ee02658f5683)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #893 64db394d-25fb-4050-8112-14d1786183df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #893 5541a9d2-ede5-48ff-b619-aed98d0022f5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #893 51e1f7dc-64b2-4ee8-8e16-e84995566f71)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #893 e9727de0-15b4-4e2b-9a8f-ccfd359cdb78)");

unit.assert_eq8(8'h3E, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF5],
"INT DMEM (Testcase #893 69b3d9bd-9447-4a46-af65-854dcb9b52bb)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF6],
"INT DMEM (Testcase #893 a38b101f-1bb9-4715-90f4-cfc662f9ba01)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF5] =
datamem_swap[16'h1F5];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF6] =
datamem_swap[16'h1F6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #894
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCA39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #894)");
    end
end

unit.assert_eq16(16'hCA39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #894 c6334ae7-648d-489d-811a-03b6df72f8e1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #894 a8f86034-b3f0-49e4-a675-f2db132ca1e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #894 0a6ea84c-7abf-4f01-bb55-a8ea7a106fbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #894 25d717e4-563c-41f1-9915-5dcc324c027c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #894 c525b9bf-0bca-4c80-bec8-5d4c079b93e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #894 5b6d80f7-a553-41c1-92c2-9a6091333d21)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #894 98ab85d1-f178-4703-ada9-f154daf2a198)");

unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'hF60],
"EXT DMEM (Testcase #894 1edfdaa1-0f81-4cc3-97fa-ef77263062c0)");
unit.assert_eq8(8'hCA, datamem_ext_i.datamem[13'hF61],
"EXT DMEM (Testcase #894 6a4f4620-56d7-4fd9-b68b-f38fb8b51583)");
datamem_ext_i.datamem[13'hF60] =
datamem_swap[16'hF60];
datamem_ext_i.datamem[13'hF61] =
datamem_swap[16'hF61];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #895
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBE17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #895)");
    end
end

unit.assert_eq16(16'hBE17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #895 baad2a7c-7883-439b-aad7-d7b11157a3cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #895 24ea863a-451e-4895-bafe-df8b88601484)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #895 6c3bcb6c-efce-44d3-b98b-d333cd6671fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #895 92811041-1aae-48ba-b8ac-88547d9a1951)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #895 5315fad0-fd06-4d5d-80e1-cdd34997e5ed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #895 5506e583-fff5-41a8-a181-d9c123b77bcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #895 4b398f43-0f20-4936-8cf3-d0ab2b221747)");

unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'hF8F],
"EXT DMEM (Testcase #895 064592a4-a133-4ed8-9c94-dbb6e7f0c184)");
unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'hF90],
"EXT DMEM (Testcase #895 861f3a40-f424-4adb-8a5c-4bd6789479b8)");
datamem_ext_i.datamem[13'hF8F] =
datamem_swap[16'hF8F];
datamem_ext_i.datamem[13'hF90] =
datamem_swap[16'hF90];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #896
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h47F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #896)");
    end
end

unit.assert_eq16(16'h47F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #896 f901021a-0b88-4096-a46b-2e61d7466eef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #896 b717176e-7fc3-4530-817f-2b977f55374a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #896 229e8d86-56c0-4130-ba15-8ec8c0e14bb2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #896 682d1462-355d-466d-a9f3-7322f8a67f64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #896 42f6ba45-6bc9-44c2-9aea-2c321e73bd7c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #896 4c288f3f-b462-40be-9ec5-9484cd27470e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #896 f8fdba4a-5aff-4de2-bdc7-f2d371f35ed7)");

unit.assert_eq8(8'hF8, datamem_ext_i.datamem[13'hE21],
"EXT DMEM (Testcase #896 650eb67e-448c-4463-b36f-40e1ee10631c)");
unit.assert_eq8(8'h47, datamem_ext_i.datamem[13'hE22],
"EXT DMEM (Testcase #896 dfc56f99-01b0-4109-bbb6-45ef5e40bd07)");
datamem_ext_i.datamem[13'hE21] =
datamem_swap[16'hE21];
datamem_ext_i.datamem[13'hE22] =
datamem_swap[16'hE22];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #897
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF2F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #897)");
    end
end

unit.assert_eq16(16'hF2F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #897 167f4a51-3004-4ddf-8377-60ae8bfc50bd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #897 26da2275-4923-4fe1-93cf-32aaf49bfa02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #897 698f6d9b-79a1-4b5f-9a41-4063b89d1d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #897 7b2400cb-6d1d-4c70-ab46-b52c36d2126b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #897 e110a1fa-bdd9-446b-8c58-cccfd70ea1b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #897 e7765d16-7a06-4e0a-9064-04ff6ab010fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #897 0c6d1d8d-7a5e-42eb-b43f-2eb084d90d66)");

unit.assert_eq8(8'hF8, datamem_ext_i.datamem[13'h91B],
"EXT DMEM (Testcase #897 59392815-c7e7-4117-a84f-37f7008b815a)");
unit.assert_eq8(8'hF2, datamem_ext_i.datamem[13'h91C],
"EXT DMEM (Testcase #897 a4ab94af-c7d5-4461-9ee2-eb608eccd6c8)");
datamem_ext_i.datamem[13'h91B] =
datamem_swap[16'h91B];
datamem_ext_i.datamem[13'h91C] =
datamem_swap[16'h91C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #898
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0444;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #898)");
    end
end

unit.assert_eq16(16'h0444, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #898 1bfb156a-e6e8-4c03-a1a8-ad8df8983a02)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #898 37453b3e-56cf-4f7e-b0f9-c300a125acde)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #898 9fcaeed8-78f6-4695-b3c4-a5e4da46945c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #898 0350078c-0e3b-42ed-9708-8fbf5648d695)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #898 9e1eee8c-b898-4b7d-a568-2f1b308d7001)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #898 41357f16-339d-4ce0-89e7-9349f3ecc1ae)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #898 502b9bec-b292-488b-b143-e862e0c739d4)");

unit.assert_eq8(8'h44, datamem_ext_i.datamem[13'hCD7],
"EXT DMEM (Testcase #898 78938c83-00a3-4863-ab71-7fef104c834a)");
unit.assert_eq8(8'h04, datamem_ext_i.datamem[13'hCD8],
"EXT DMEM (Testcase #898 19898b6b-638b-45b7-8ddf-65d91fb403b0)");
datamem_ext_i.datamem[13'hCD7] =
datamem_swap[16'hCD7];
datamem_ext_i.datamem[13'hCD8] =
datamem_swap[16'hCD8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #899
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE2D9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #899)");
    end
end

unit.assert_eq16(16'hE2D9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #899 d295b0d6-e712-4b79-be20-fd0b0a0a273e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #899 92e4ea6f-3bfe-42e9-a884-0d631c9cbebc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #899 c4bb5a79-4c60-4dd1-b0ed-16438f2097e5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #899 81b8acf5-f91a-4b49-942e-3c5edd3d7f3b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #899 e844ae40-8450-43cb-80e3-c4964df0b3b3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #899 50f5feca-0ecd-484d-b7f7-9f2da663a202)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #899 ae4f120c-b380-466d-a642-980f54c14fc8)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'hAFF],
"EXT DMEM (Testcase #899 9ca5274a-c273-472a-a070-94f246f95c3c)");
unit.assert_eq8(8'hE2, datamem_ext_i.datamem[13'hB00],
"EXT DMEM (Testcase #899 dfc881fd-d0d7-4714-97d1-4a25178adfb7)");
datamem_ext_i.datamem[13'hAFF] =
datamem_swap[16'hAFF];
datamem_ext_i.datamem[13'hB00] =
datamem_swap[16'hB00];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #900
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF857;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #900)");
    end
end

unit.assert_eq16(16'hF857, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #900 0375b188-3a36-425a-9f41-52c1984fe1a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #900 c07911e5-3fa5-4f41-9e3a-530823b15094)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #900 a0e3e190-aa2e-4119-b381-e785caf7930c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #900 e21f6112-801b-4591-a38b-2885f37655d4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #900 1ae04204-2549-4ef0-8db3-32e96b2ceab9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #900 22e931ff-546b-401b-80fc-06e3abd8fe8d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #900 ce7bdf86-703d-4dde-8617-af333caa433d)");

unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'h2FA],
"EXT DMEM (Testcase #900 44bfaf25-8778-46d6-a57d-be893115b3d5)");
unit.assert_eq8(8'hF8, datamem_ext_i.datamem[13'h2FB],
"EXT DMEM (Testcase #900 609cdb56-5dc1-4db1-ad18-a988e42b47c5)");
datamem_ext_i.datamem[13'h2FA] =
datamem_swap[16'h2FA];
datamem_ext_i.datamem[13'h2FB] =
datamem_swap[16'h2FB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #901
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h17;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h870E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #901)");
    end
end

unit.assert_eq16(16'h870E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #901 f722c448-3f8c-4ec7-8cb7-0a324c923795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #901 ba2fd5ff-30f2-45ed-bfdd-e854e2b32459)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #901 0635f01a-64cd-479a-a2e2-f4af8db94651)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #901 1b839ad4-6a5f-4e60-97ac-c0bb44dd6bab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #901 958a833b-b91f-4ff9-8b96-d68982bc1698)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #901 1fea6964-e9a4-481c-878e-f39d40a68d50)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #901 30efcab2-749a-429e-81c0-88101b0a626e)");

unit.assert_eq8(8'h0E, datamem_ext_i.datamem[13'hD8A],
"EXT DMEM (Testcase #901 e8a25546-4b0f-4223-8e72-977ad3aaf319)");
unit.assert_eq8(8'h87, datamem_ext_i.datamem[13'hD8B],
"EXT DMEM (Testcase #901 713b4ae5-08b2-468c-b49f-2c64bb737b9a)");
datamem_ext_i.datamem[13'hD8A] =
datamem_swap[16'hD8A];
datamem_ext_i.datamem[13'hD8B] =
datamem_swap[16'hD8B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #902
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h32F8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #902)");
    end
end

unit.assert_eq16(16'h32F8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #902 1a387245-f4d7-4b34-8921-4cf7e0bce13a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #902 bccb0a18-4996-4cca-a9d9-42c25d333d13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #902 863a9cc4-b649-4a1f-95eb-42e277da14e2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #902 9d3f2f3e-e51c-45d2-b504-c814e48defef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #902 bb7eaa3b-4137-4b93-ba24-161a33b17d68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #902 cbbc60d0-8c41-41d7-9ae1-b21b51c4a4b1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #902 23da87dd-7bd7-4b37-a741-3995e77caa35)");

unit.assert_eq8(8'hF8, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h36],
"INT DMEM (Testcase #902 ec1c6f95-48ba-4b96-8c8e-921d5f0e8fe9)");
unit.assert_eq8(8'h32, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h37],
"INT DMEM (Testcase #902 a5e39a27-ed85-49e8-afc1-85597a4e72da)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h36] =
datamem_swap[16'h36];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h37] =
datamem_swap[16'h37];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #903
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h10D7;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #903)");
    end
end

unit.assert_eq16(16'h10D7, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #903 4893763a-d1f6-464a-959d-19df4cf90e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #903 62e3e720-b08b-4a9a-90c6-01bb05753c14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #903 a61b65fa-1db7-4153-831a-784658861b36)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #903 82eaf057-f7c4-434f-bcea-5c1e469a8ef7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #903 48d41180-b6c4-4f2b-b862-2663827ff719)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #903 72dbe61f-e59a-40e5-8c5a-f4668e3e6564)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #903 41114c8b-9395-4d50-bb3c-4164d382b3b9)");

unit.assert_eq8(8'hD7, datamem_ext_i.datamem[13'hF6B],
"EXT DMEM (Testcase #903 cc77504f-8161-43e7-a45a-5d13aed8f2e3)");
unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'hF6C],
"EXT DMEM (Testcase #903 65aa8ea4-ee72-4f03-af8c-67fabc3c4d6e)");
datamem_ext_i.datamem[13'hF6B] =
datamem_swap[16'hF6B];
datamem_ext_i.datamem[13'hF6C] =
datamem_swap[16'hF6C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #904
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA217;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #904)");
    end
end

unit.assert_eq16(16'hA217, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #904 4c71e657-775c-4e7f-a8ca-dd7d43464517)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #904 1848be52-59b4-493c-a8e1-d00d009b491d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #904 43ef8feb-89d6-4100-9075-5623cb09c35c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #904 fca64714-b707-400f-a848-2a7031047335)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #904 cb92f7f7-e29a-4182-9757-eba3368576e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #904 f50dcd59-1bef-4a7c-bca6-771f7549d9d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #904 0638df9d-ac8f-4324-83ce-c298c5906bbb)");

unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'h894],
"EXT DMEM (Testcase #904 4dd24641-149e-4d41-8ea6-e18885c615c2)");
unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'h895],
"EXT DMEM (Testcase #904 223bf872-3e08-47a9-bd23-8bbd94c4d4ee)");
datamem_ext_i.datamem[13'h894] =
datamem_swap[16'h894];
datamem_ext_i.datamem[13'h895] =
datamem_swap[16'h895];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #905
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h06;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC450;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #905)");
    end
end

unit.assert_eq16(16'hC450, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #905 1f243b83-e145-4530-9536-5221e4ddc7d2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #905 26a9179f-4bf1-4542-a327-c4ed66fa8dc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #905 e0725c78-5b8b-4aa6-b8cb-003264602515)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #905 747327c8-2f5d-46d5-a49a-42679246bbf1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #905 542eb7c6-5cf5-416d-9028-0b1535d50298)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #905 441b09b6-b000-4b63-83d8-1a08498c81e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #905 9db1def8-f156-4df3-ae52-6842ead54fcc)");

unit.assert_eq8(8'h50, datamem_ext_i.datamem[13'h8A9],
"EXT DMEM (Testcase #905 3364a7c8-b16b-4396-9195-0ea5b96d86d6)");
unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'h8AA],
"EXT DMEM (Testcase #905 ff67f991-b98c-4bd2-985a-4f38566abe74)");
datamem_ext_i.datamem[13'h8A9] =
datamem_swap[16'h8A9];
datamem_ext_i.datamem[13'h8AA] =
datamem_swap[16'h8AA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #906
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF957;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #906)");
    end
end

unit.assert_eq16(16'hF957, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #906 afd9886d-0ff0-4b0e-9cc1-faac73439ac7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #906 815c3a8f-526a-4643-9579-063ee4cbd587)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #906 6c9f3e7e-68a1-44be-9c93-b7e4845d2cfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #906 a5aa6e03-915d-4f01-a0b5-31624216ab21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #906 2ecf5257-04e4-48e6-a40b-671306487e67)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #906 3a8e0aed-5e5c-4265-baed-31bb5cd3937f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #906 e8b9f9a0-8e18-4af4-b874-f9944e2056d9)");

unit.assert_eq8(8'h57, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC7],
"INT DMEM (Testcase #906 70af9604-d4c2-4c5a-affe-54cf011cb778)");
unit.assert_eq8(8'hF9, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC8],
"INT DMEM (Testcase #906 8b4ab575-d110-4a9e-a382-974bfc819748)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC7] =
datamem_swap[16'hC7];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hC8] =
datamem_swap[16'hC8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #907
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBA02;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #907)");
    end
end

unit.assert_eq16(16'hBA02, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #907 0c470dc5-cb8a-4e41-ad66-716b00c722fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #907 7d76e8b5-d552-4e41-aa1a-a21f3505900d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #907 26242f7e-60cc-4bfe-acef-90509adeaa3a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #907 6446328f-db6f-4d02-b458-007208cc88a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #907 2a7fbe1a-390e-455f-aed1-98009266cc3d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #907 869d0595-b55b-47df-a5d9-e219c8ca80e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #907 c3f65006-0ce3-4e27-8e33-063805357b35)");

unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'hC1B],
"EXT DMEM (Testcase #907 f843eccd-0979-4364-ae1d-fbec854f8362)");
unit.assert_eq8(8'hBA, datamem_ext_i.datamem[13'hC1C],
"EXT DMEM (Testcase #907 4ed0c20c-94d2-4be0-a3f1-7f4383eccaec)");
datamem_ext_i.datamem[13'hC1B] =
datamem_swap[16'hC1B];
datamem_ext_i.datamem[13'hC1C] =
datamem_swap[16'hC1C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #908
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA72A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #908)");
    end
end

unit.assert_eq16(16'hA72A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #908 438ece9b-7987-4c94-a022-6aab00e6705a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #908 f5cb477a-6b0c-448f-a8e0-ef8346654343)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #908 3796fc88-5bca-4d9e-b13b-7af0254454c0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #908 cbb364b0-fa40-4d74-9448-a0814b6dc0f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #908 5617f513-0bba-4f18-bf31-7140c94eb649)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #908 eaddbb6a-4f1a-4ff9-a6dd-a0cfef49d88a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #908 643847db-c8aa-47db-bcf4-7488fb24f4fd)");

unit.assert_eq8(8'h2A, datamem_ext_i.datamem[13'hC2E],
"EXT DMEM (Testcase #908 ecdcd84d-5bd6-4256-9001-f705ffaff520)");
unit.assert_eq8(8'hA7, datamem_ext_i.datamem[13'hC2F],
"EXT DMEM (Testcase #908 ab2a7c5c-5556-4d82-b4f5-d88c7480c36c)");
datamem_ext_i.datamem[13'hC2E] =
datamem_swap[16'hC2E];
datamem_ext_i.datamem[13'hC2F] =
datamem_swap[16'hC2F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #909
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDD1C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #909)");
    end
end

unit.assert_eq16(16'hDD1C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #909 23748036-de7d-4d86-988a-e1cffbfee38f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #909 8a7239dc-3e99-4847-9995-c1c9cc579738)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #909 459902e8-a4fa-4f25-86c8-29561d1ebc94)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #909 4085b5cd-3efd-4db7-9a23-b84c0e68978e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #909 73fb5dc5-a23a-47c7-9e9f-5bcff70113c3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #909 86f07749-faa8-4762-98b2-a23f5bb1b183)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #909 df223694-6fee-4691-8991-55453a6f1ee6)");

unit.assert_eq8(8'h1C, datamem_ext_i.datamem[13'h83D],
"EXT DMEM (Testcase #909 e45a999f-b76f-4d19-9276-ee02c1a599bc)");
unit.assert_eq8(8'hDD, datamem_ext_i.datamem[13'h83E],
"EXT DMEM (Testcase #909 709d16af-e3c2-4d0e-9422-b2622dad7608)");
datamem_ext_i.datamem[13'h83D] =
datamem_swap[16'h83D];
datamem_ext_i.datamem[13'h83E] =
datamem_swap[16'h83E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #910
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8A25;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #910)");
    end
end

unit.assert_eq16(16'h8A25, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #910 bd5a990f-44ab-4a4d-a051-f549e6e60601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #910 7fa36950-307f-47c4-8093-e6d42b00418e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #910 cc62f877-6c15-46b4-aa95-dd51614514d8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #910 9c95ebfc-0898-4c98-a66b-14a3b283d9b2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #910 b2fa7a3d-5fb6-4fdb-90ed-55a85cc32ec6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #910 3b806139-84ad-4017-9520-c90bfe56b2f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #910 1f6351fc-d144-40af-9f7a-147c6d67cfb5)");

unit.assert_eq8(8'h25, datamem_ext_i.datamem[13'h4F7],
"EXT DMEM (Testcase #910 1db61897-7c73-499d-b892-ce30a2e164f1)");
unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'h4F8],
"EXT DMEM (Testcase #910 a1bedfbb-57a2-42c7-96bb-eb7fb8cf1178)");
datamem_ext_i.datamem[13'h4F7] =
datamem_swap[16'h4F7];
datamem_ext_i.datamem[13'h4F8] =
datamem_swap[16'h4F8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #911
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF149;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #911)");
    end
end

unit.assert_eq16(16'hF149, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #911 83aedbc9-9c91-4963-ac85-99b09ef0e2d9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #911 62bb5e12-c813-47ad-b3ac-e23f2979ef6f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #911 233aeb73-e02f-4aa9-82cf-546037cb8096)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #911 f2771032-5969-4c2f-b5b1-c015c4e5f857)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #911 55a25480-d87c-4595-a14e-2f37b7a89b2a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #911 dd2865a5-b9c4-4572-a1f6-5fbb3a335c86)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #911 c0a4db97-6572-4320-a362-b8e7846188d8)");

unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'hC22],
"EXT DMEM (Testcase #911 019d0a54-a97e-44e6-a935-d0fec4b6d56b)");
unit.assert_eq8(8'hF1, datamem_ext_i.datamem[13'hC23],
"EXT DMEM (Testcase #911 6f2ccc91-8a4e-4671-ae57-23f02257f33e)");
datamem_ext_i.datamem[13'hC22] =
datamem_swap[16'hC22];
datamem_ext_i.datamem[13'hC23] =
datamem_swap[16'hC23];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #912
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h86;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCDDA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #912)");
    end
end

unit.assert_eq16(16'hCDDA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #912 9c6891e4-5d19-4b8e-9071-ab80c86d5064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #912 07154a35-1610-4a44-8a43-767e5d177076)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #912 bd502595-c1de-4a39-8eb0-544af42d649d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #912 cd8f7b99-7ab8-4b79-9c3a-616f82672703)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #912 1313df82-516f-4fbd-b40d-6a1341899f3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #912 c5e65bed-900c-4085-b82b-35ce3bc28a23)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #912 01102ab9-ce39-40b8-a940-d331fa077809)");

unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'hE4C],
"EXT DMEM (Testcase #912 76d7eddc-0885-42a2-ac90-9b5c8430b860)");
unit.assert_eq8(8'hCD, datamem_ext_i.datamem[13'hE4D],
"EXT DMEM (Testcase #912 37828625-d473-43f8-aad1-90a5a17edb33)");
datamem_ext_i.datamem[13'hE4C] =
datamem_swap[16'hE4C];
datamem_ext_i.datamem[13'hE4D] =
datamem_swap[16'hE4D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #913
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD4D1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #913)");
    end
end

unit.assert_eq16(16'hD4D1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #913 1c3954e2-b6cf-4ea2-a28a-398c137d1ed4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #913 5a6c4ea8-72c7-4eef-93ff-d33dce97fce0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #913 eb8af780-9ce6-4490-abb9-1e7ad3637720)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #913 ee6527c9-34c3-4e6d-a0c6-2e8bc1b54629)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #913 943e46bf-0680-44b5-916c-2ab8fe03a06f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #913 343d888f-d3c8-4417-92b0-cd13c88f45e4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #913 38d177ae-868a-4b43-a2f7-d5183afb42db)");

unit.assert_eq8(8'hD1, datamem_ext_i.datamem[13'h420],
"EXT DMEM (Testcase #913 38e1b465-cf7c-4899-91aa-ba276fd580bf)");
unit.assert_eq8(8'hD4, datamem_ext_i.datamem[13'h421],
"EXT DMEM (Testcase #913 58bd889c-c6d1-4d76-9b97-cfa625929d99)");
datamem_ext_i.datamem[13'h420] =
datamem_swap[16'h420];
datamem_ext_i.datamem[13'h421] =
datamem_swap[16'h421];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #914
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2383;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #914)");
    end
end

unit.assert_eq16(16'h2383, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #914 a84c1b40-3a19-46ef-8ef3-e509bf6495b9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #914 c1ea6fee-0d07-457e-bea5-b47802c04d02)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #914 d71be0a6-6e94-4899-b511-fbb71d1223b0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #914 a2a873ec-aba1-4158-bdb6-f4df21eac7c4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #914 8ff21f43-8364-4479-8006-626a47df392c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #914 33f9bd2b-583b-4480-bf43-d8e868f3b381)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #914 4edca780-4cf6-4787-8453-1c4f5adfc984)");

unit.assert_eq8(8'h83, datamem_ext_i.datamem[13'hBFD],
"EXT DMEM (Testcase #914 72b80db4-5d9b-46b7-89d6-4fcd7755ec20)");
unit.assert_eq8(8'h23, datamem_ext_i.datamem[13'hBFE],
"EXT DMEM (Testcase #914 9f0e6bac-7fc8-4e96-895a-df6da83df11e)");
datamem_ext_i.datamem[13'hBFD] =
datamem_swap[16'hBFD];
datamem_ext_i.datamem[13'hBFE] =
datamem_swap[16'hBFE];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #915
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2EB8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #915)");
    end
end

unit.assert_eq16(16'h2EB8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #915 da226b98-698d-48b1-b438-faab66bc7bf9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #915 2f3e3573-bca8-417e-8468-ac7acffaf8c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #915 e2bea882-7a57-49c7-bcdc-bfc4b2ed3331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #915 ccab3634-aa40-45c6-b06a-578b09d51aaf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #915 6ae7455a-581f-4f96-ba32-416a2093a37d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #915 02927f8a-a824-41ff-a734-15da2af38515)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #915 9908449f-637b-4a3e-9068-e9f448c7ad82)");

unit.assert_eq8(8'hB8, datamem_ext_i.datamem[13'h67E],
"EXT DMEM (Testcase #915 da7a8ff7-912a-449f-9448-d8460fc47748)");
unit.assert_eq8(8'h2E, datamem_ext_i.datamem[13'h67F],
"EXT DMEM (Testcase #915 21599c5c-cca3-437b-b54a-b819a89f7be2)");
datamem_ext_i.datamem[13'h67E] =
datamem_swap[16'h67E];
datamem_ext_i.datamem[13'h67F] =
datamem_swap[16'h67F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #916
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h014F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #916)");
    end
end

unit.assert_eq16(16'h014F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #916 4df7edc4-b55f-4830-900b-f2adf8c82b7c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #916 20a581bf-192c-4779-9a03-12e642f20194)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #916 7bf0169b-9843-4f19-a50b-a3892147bf85)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #916 84822a6e-35a6-4ce9-b28d-c4d725a9ded1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #916 3835252e-f77e-4c2f-ae3c-31cf4fbb9c1d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #916 ce8051d8-2a92-4979-ba4e-3e4dfe0b47da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #916 0da113bb-8a8c-4448-adb7-050e2942a64d)");

unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'hD19],
"EXT DMEM (Testcase #916 6828e547-f816-47cb-a8e6-aa6457acb52d)");
unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'hD1A],
"EXT DMEM (Testcase #916 901b032a-5ca5-47e1-9e27-886bf6976cad)");
datamem_ext_i.datamem[13'hD19] =
datamem_swap[16'hD19];
datamem_ext_i.datamem[13'hD1A] =
datamem_swap[16'hD1A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #917
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF49D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #917)");
    end
end

unit.assert_eq16(16'hF49D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #917 ee1b0720-27da-4efa-9740-704fd071be4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #917 a0210586-a93c-42b8-aba8-bbc0168a2c65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #917 674b074c-d87a-4cbc-b545-2dd9e10135ec)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #917 1c496d7a-b2a5-4de2-8759-4a327d2f6ddc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #917 07761843-3ed7-4bfd-a808-6b5143f6bdcb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #917 abba17af-92e3-4122-b198-51fbc811e50f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #917 5d388cd7-dc45-4f1f-890f-eb58baa7ace3)");

unit.assert_eq8(8'h9D, datamem_ext_i.datamem[13'hA39],
"EXT DMEM (Testcase #917 088ae474-fdfe-4b94-8568-7ae86c55e460)");
unit.assert_eq8(8'hF4, datamem_ext_i.datamem[13'hA3A],
"EXT DMEM (Testcase #917 56d9532a-8569-4f88-ae2e-c737d37b68f8)");
datamem_ext_i.datamem[13'hA39] =
datamem_swap[16'hA39];
datamem_ext_i.datamem[13'hA3A] =
datamem_swap[16'hA3A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #918
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9F7D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #918)");
    end
end

unit.assert_eq16(16'h9F7D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #918 006a304b-e497-4f29-b269-2065ed594eef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #918 51f30782-72dc-4c7e-9ea5-5a461174e315)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #918 791e274f-4fd6-4621-af3d-7f1cdf876390)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #918 88ff22e5-521f-4ebd-9c89-09a7e5c627cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #918 be34dc23-7fda-4417-8a2f-dbc9c8741c56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #918 13789b77-78c6-44a2-b94c-583d56c889cc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #918 17a1350c-decd-4c26-aba8-6132c45adc59)");

unit.assert_eq8(8'h7D, datamem_ext_i.datamem[13'hB3C],
"EXT DMEM (Testcase #918 398e2018-cb1e-46f4-997a-599342a554c3)");
unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'hB3D],
"EXT DMEM (Testcase #918 94198de8-64fc-4451-b86d-1a69a743921a)");
datamem_ext_i.datamem[13'hB3C] =
datamem_swap[16'hB3C];
datamem_ext_i.datamem[13'hB3D] =
datamem_swap[16'hB3D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #919
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDFE5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #919)");
    end
end

unit.assert_eq16(16'hDFE5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #919 e8e05f25-47b1-437d-8701-3e6a1ff9921f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #919 d9032842-4d0f-4637-b34e-2f652514de35)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #919 4c39a121-2842-4fdc-baad-2e4ebe6b241f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #919 ae973e53-5938-4921-b061-1c22c32ebf87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #919 10e81dad-957e-4e31-8600-3e124ab334f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #919 3fde6269-19c5-4e67-8d9b-119985e938de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #919 d54f7f2a-2bec-4a14-bfc7-c35cc3778dd0)");

unit.assert_eq8(8'hE5, datamem_ext_i.datamem[13'hDBE],
"EXT DMEM (Testcase #919 998a65f0-5c2b-4f10-a276-1227cca37e92)");
unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'hDBF],
"EXT DMEM (Testcase #919 2301e74f-8e56-4822-a6cc-80f45092e2cb)");
datamem_ext_i.datamem[13'hDBE] =
datamem_swap[16'hDBE];
datamem_ext_i.datamem[13'hDBF] =
datamem_swap[16'hDBF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #920
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF879;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #920)");
    end
end

unit.assert_eq16(16'hF879, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #920 37ffdd80-b8b8-4a5e-ae7e-cf101a7b8feb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #920 ceda0a22-bb65-4c9b-a1eb-35c518948743)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #920 ae256bcc-5ed0-49c5-bcbb-8dbc2040cd27)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #920 0489df6f-ef22-44a6-83d0-538940b135ee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #920 40167694-7f86-4067-af94-81c822a9c326)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #920 8d72c900-54f2-45e5-abc3-de455f79fa56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #920 908adde2-504e-405f-8b2d-2444c4ae6bd1)");

unit.assert_eq8(8'h79, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h99],
"INT DMEM (Testcase #920 d10f6dd3-3269-4ba4-a5f4-3af46efda250)");
unit.assert_eq8(8'hF8, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h9A],
"INT DMEM (Testcase #920 eea2817e-fb25-487e-83c7-ea403a8516a5)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h99] =
datamem_swap[16'h99];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h9A] =
datamem_swap[16'h9A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #921
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h99B0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #921)");
    end
end

unit.assert_eq16(16'h99B0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #921 c7b20b3c-9a37-4d87-969c-4e34bd5d74d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #921 97ec69d9-71e5-4644-aa1d-310351559818)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #921 c6046f14-67dc-43de-be1c-4ec0676f53e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #921 2cd7d39e-72cd-4241-b503-6e86ad29a421)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #921 ca0a2d3a-1a7e-454a-9f2b-a060c87cd710)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #921 7412dbd7-1df4-4604-976f-e49c17be7d98)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #921 871a0cd4-5887-459f-86ad-793973ba18dc)");

unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hAB6],
"EXT DMEM (Testcase #921 252d3552-9085-417a-86ff-89273ecc9c22)");
unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'hAB7],
"EXT DMEM (Testcase #921 a44f35b3-3b49-4c58-972e-b9687d59e9dd)");
datamem_ext_i.datamem[13'hAB6] =
datamem_swap[16'hAB6];
datamem_ext_i.datamem[13'hAB7] =
datamem_swap[16'hAB7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #922
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7210;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #922)");
    end
end

unit.assert_eq16(16'h7210, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #922 58396c07-adf7-4397-9ccc-c0af9c932445)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #922 5dc34425-f8f3-4d54-9012-744628afc193)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #922 83ba455c-2a84-4c4b-aa83-9664a711d020)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #922 f8c655a9-7cd4-426c-8d22-aed5490daaa5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #922 3e56edab-f1dc-42ef-bab2-9503ae195d14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #922 6908378d-7a69-440f-a0a1-05985e98f447)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #922 c9ffb86f-3df4-43dd-89b0-7950911c2029)");

unit.assert_eq8(8'h10, datamem_ext_i.datamem[13'hC7F],
"EXT DMEM (Testcase #922 67c9f43f-b388-430a-b76a-f69f94b2863b)");
unit.assert_eq8(8'h72, datamem_ext_i.datamem[13'hC80],
"EXT DMEM (Testcase #922 94352472-8379-4d46-83b2-5b3bf84ad2e6)");
datamem_ext_i.datamem[13'hC7F] =
datamem_swap[16'hC7F];
datamem_ext_i.datamem[13'hC80] =
datamem_swap[16'hC80];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #923
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC9C8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #923)");
    end
end

unit.assert_eq16(16'hC9C8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #923 6eb879a4-1e3b-45f0-a458-054c392d077f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #923 d83a5d92-fcd5-4f78-88e9-6a2a79094453)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #923 38167737-2894-41cc-8064-b45715242c7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #923 edde92d2-e15c-47c5-9bfc-3683bb37e69b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #923 dcdb21d9-abd7-46e7-ad11-48787239a881)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #923 76c695d2-fd73-49e0-85a1-6de46b48148b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #923 11491cce-c3ea-47c5-b3dd-4b879e779190)");

unit.assert_eq8(8'hC8, datamem_ext_i.datamem[13'h532],
"EXT DMEM (Testcase #923 35d8d2c0-9e18-42a6-b31f-93737b273ef2)");
unit.assert_eq8(8'hC9, datamem_ext_i.datamem[13'h533],
"EXT DMEM (Testcase #923 fd04e45e-249e-4ba2-9167-2512c23c356f)");
datamem_ext_i.datamem[13'h532] =
datamem_swap[16'h532];
datamem_ext_i.datamem[13'h533] =
datamem_swap[16'h533];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #924
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h87;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB5A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #924)");
    end
end

unit.assert_eq16(16'hB5A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #924 2b8f165b-760b-4ae0-a3d5-feb8da35506b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #924 7a781390-4504-433a-ba70-bb8b3b7b3588)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #924 9ee492b7-bc47-443e-93d8-3bc2b6a85aa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #924 5391e2e7-c338-4061-a23b-75335717bccd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #924 d8833722-d40a-4b0c-ab32-1a777be6a833)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #924 3f588b4b-1d08-4c0a-9655-7117d6e231fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #924 a460c832-bf0e-4394-ba76-acc59dde0488)");

unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'h8B4],
"EXT DMEM (Testcase #924 ab08580b-a706-4707-a87a-270f5c443337)");
unit.assert_eq8(8'hB5, datamem_ext_i.datamem[13'h8B5],
"EXT DMEM (Testcase #924 06f72542-f79f-4914-b28e-c98e5d288291)");
datamem_ext_i.datamem[13'h8B4] =
datamem_swap[16'h8B4];
datamem_ext_i.datamem[13'h8B5] =
datamem_swap[16'h8B5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #925
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h41;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB55D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #925)");
    end
end

unit.assert_eq16(16'hB55D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #925 2b1ea18e-42f1-4e8e-98ca-04564fc5dcc2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #925 aabff8fc-00d0-4287-96ef-cd4b86dbf25e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #925 20177039-bee5-404d-97e3-5f97bb559e4e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #925 780c7839-e69d-48dd-bae4-d06ee4fdc205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #925 2e643d53-a253-4b35-acdb-11689dfaff91)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #925 f3395488-982a-4b83-b16f-2522ef1880aa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #925 0ef10f46-e8b6-4269-abf3-95ba8ab3a390)");

unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'h62D],
"EXT DMEM (Testcase #925 a82dd968-f802-44a7-a144-ff2287cc8b58)");
unit.assert_eq8(8'hB5, datamem_ext_i.datamem[13'h62E],
"EXT DMEM (Testcase #925 84725071-8223-43fd-87fa-440cb0165be0)");
datamem_ext_i.datamem[13'h62D] =
datamem_swap[16'h62D];
datamem_ext_i.datamem[13'h62E] =
datamem_swap[16'h62E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #926
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4160;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #926)");
    end
end

unit.assert_eq16(16'h4160, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #926 56996a6e-665b-4288-99a0-d7f62b480f48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #926 52ed1df9-fd21-4043-b8ed-cc996c783006)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #926 9db7cde1-9fa0-409a-8761-a118e7f7f324)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #926 62a34072-959c-48b6-b8eb-d98474cc234f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #926 a128842d-3240-4253-9717-eddc90f9ee78)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #926 98c32d94-218d-46e7-aa14-1d646c12074e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #926 ec8085c7-68a7-4076-a209-b1706005026f)");

unit.assert_eq8(8'h60, datamem_ext_i.datamem[13'hDEF],
"EXT DMEM (Testcase #926 2278416d-3b2b-49f7-9834-30eb37e8ebfb)");
unit.assert_eq8(8'h41, datamem_ext_i.datamem[13'hDF0],
"EXT DMEM (Testcase #926 8ad81b31-947c-4508-8d0d-4197fe9c4e40)");
datamem_ext_i.datamem[13'hDEF] =
datamem_swap[16'hDEF];
datamem_ext_i.datamem[13'hDF0] =
datamem_swap[16'hDF0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #927
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE41D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #927)");
    end
end

unit.assert_eq16(16'hE41D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #927 1a15d3bf-0fe7-4d1a-89eb-435b5eb917d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #927 e38603cf-320a-46b0-9ab0-8def852d16e7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #927 5a85c28b-40d8-40db-88c2-dd622f33c1d6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #927 04cf1187-1e34-4a4d-a27b-bdb7a87c9b01)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #927 704d3ddd-eae2-4b9e-bdb8-e3763344b0df)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #927 6116745a-fe41-460e-89f9-001b72f7a4cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #927 413312b8-3c90-4c1c-92cc-02ec81bb51a8)");

unit.assert_eq8(8'h1D, datamem_ext_i.datamem[13'h9DC],
"EXT DMEM (Testcase #927 e84f1dfa-2cdc-4b89-a2ea-ba755842e84f)");
unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'h9DD],
"EXT DMEM (Testcase #927 d5be9ed0-4521-4423-9f60-e27ea1a9887e)");
datamem_ext_i.datamem[13'h9DC] =
datamem_swap[16'h9DC];
datamem_ext_i.datamem[13'h9DD] =
datamem_swap[16'h9DD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #928
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDED0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #928)");
    end
end

unit.assert_eq16(16'hDED0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #928 a229ef47-1f08-4e40-8e40-759fb58c9f12)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #928 654b7e53-904d-4bcd-a576-a9a247b14717)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #928 bea55040-a6eb-4052-94a4-1c384556a70e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #928 81f261b6-7b8b-4f1d-895a-aa537e98e127)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #928 2fe68436-3dfa-477d-8eeb-1994b3125702)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #928 32ca486e-b83d-41c3-8222-ca347d6459e7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #928 e66fcda1-f66d-4db2-bf8a-298230defb01)");

unit.assert_eq8(8'hD0, datamem_ext_i.datamem[13'hEF7],
"EXT DMEM (Testcase #928 32cbfe81-646b-4913-928f-8b1022a9a15d)");
unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'hEF8],
"EXT DMEM (Testcase #928 b461414c-c075-4711-8c43-4c8cc60073fc)");
datamem_ext_i.datamem[13'hEF7] =
datamem_swap[16'hEF7];
datamem_ext_i.datamem[13'hEF8] =
datamem_swap[16'hEF8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #929
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7019;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #929)");
    end
end

unit.assert_eq16(16'h7019, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #929 f38a5d83-e4c7-4bf3-bd46-de5bf2f5c145)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #929 29139681-ecad-45a3-92ca-3c8c5cd8f2fe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #929 d7d46fa0-ef4f-44a0-8115-7dbdd1b182b9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #929 da0825de-a5f2-481b-84aa-8b7dbf0e9bfb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #929 87fdc69c-3e5a-40a4-b0e6-471f1724ed40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #929 9e22e572-80af-4e5a-9cc7-061943bb0b54)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #929 e401cd8b-bca8-400d-b700-28bcf8b5a8a8)");

unit.assert_eq8(8'h19, datamem_ext_i.datamem[13'h303],
"EXT DMEM (Testcase #929 978f51fe-c800-417f-953e-df5eeb70007a)");
unit.assert_eq8(8'h70, datamem_ext_i.datamem[13'h304],
"EXT DMEM (Testcase #929 f6957539-94c6-4bbe-8691-d184542e4926)");
datamem_ext_i.datamem[13'h303] =
datamem_swap[16'h303];
datamem_ext_i.datamem[13'h304] =
datamem_swap[16'h304];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #930
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h42;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEB3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #930)");
    end
end

unit.assert_eq16(16'hEB3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #930 e8c959a6-81a1-41d4-9e4a-9c066d6494ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #930 09f97ddc-fd36-40d3-b5ff-5ed1170648e5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #930 18e649b4-7057-470a-a4b5-7acbef9d0205)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #930 8bf4d8c2-bf29-40f4-aafd-176007064763)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #930 9abec62a-66ea-4ce3-8d28-9be7a65befa4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #930 fb6a8680-a135-4c38-b7ad-bb92114e1443)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #930 f594c6f3-89f2-48e0-aea3-22c75b4f22db)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'h6E2],
"EXT DMEM (Testcase #930 13d07fa5-d0a9-49cb-bfcd-b7c3e7531dde)");
unit.assert_eq8(8'hEB, datamem_ext_i.datamem[13'h6E3],
"EXT DMEM (Testcase #930 58c8ed7b-3a2a-4f3b-bca3-070524fd89f5)");
datamem_ext_i.datamem[13'h6E2] =
datamem_swap[16'h6E2];
datamem_ext_i.datamem[13'h6E3] =
datamem_swap[16'h6E3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #931
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h83;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF4CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #931)");
    end
end

unit.assert_eq16(16'hF4CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #931 d977294d-66ab-452a-89d6-19a641158be9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #931 66eb1e66-ab46-4f9a-8af0-e06a7249a55e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #931 47c0a43c-dfc2-4c33-ad54-a95fffbec264)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #931 cac95441-acbf-46e0-b0b9-317f9355882d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #931 2396d063-8758-4693-9650-cfbd71de8f0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #931 077d53c0-a171-4a7f-9b1f-3aa9df0cba06)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #931 50fe26bf-a64a-4db8-9917-6dc9ca749c4b)");

unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'h7BA],
"EXT DMEM (Testcase #931 c41893f5-d7a9-4338-84da-b7c1ecaf73da)");
unit.assert_eq8(8'hF4, datamem_ext_i.datamem[13'h7BB],
"EXT DMEM (Testcase #931 f21ca06f-87ef-4a30-b5b8-204d612fc5b6)");
datamem_ext_i.datamem[13'h7BA] =
datamem_swap[16'h7BA];
datamem_ext_i.datamem[13'h7BB] =
datamem_swap[16'h7BB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #932
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD970;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #932)");
    end
end

unit.assert_eq16(16'hD970, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #932 a3b878ce-399f-4d79-9062-6285495a21ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #932 eb5505a1-c750-4304-916c-af5eeaec705f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #932 c1266250-211b-48e5-a93a-623a899cc7e4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #932 9c0091d3-ae33-4978-8b15-8e8a9e9e79d4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #932 71acde5f-89ce-480b-8358-2d32afee7a09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #932 2771a17f-4e96-47ef-b97e-38617d9f9804)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #932 8042b647-f63e-40f5-8a1c-2a421ea3eab8)");

unit.assert_eq8(8'h70, datamem_ext_i.datamem[13'h77D],
"EXT DMEM (Testcase #932 78a63267-3e23-4fb2-bf83-b77bf2e9e65b)");
unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'h77E],
"EXT DMEM (Testcase #932 10db42f9-00de-4a69-a6c7-685ca58abce4)");
datamem_ext_i.datamem[13'h77D] =
datamem_swap[16'h77D];
datamem_ext_i.datamem[13'h77E] =
datamem_swap[16'h77E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #933
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF6F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #933)");
    end
end

unit.assert_eq16(16'hBF6F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #933 9457ed3c-b966-451a-972f-17b75faf8533)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #933 5cd36087-e383-41fd-bdd8-8161a8eaf42e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #933 24321043-4817-48a9-8a7e-50090b765980)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #933 3056a74a-b12a-4831-a586-47342fa475f3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #933 003370bc-8af1-4abe-b3ad-16c6365eff0a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #933 1d9bd2bf-0ba1-4132-a29d-370b0b793b63)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #933 7ff7cc48-6018-44c3-87f2-58ea9603ad86)");

unit.assert_eq8(8'h6F, datamem_ext_i.datamem[13'h62C],
"EXT DMEM (Testcase #933 d76c3255-70a8-4458-b0b5-0ebae323e782)");
unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'h62D],
"EXT DMEM (Testcase #933 7ad5ba72-d4fc-4f6e-a15d-3ea03b772e92)");
datamem_ext_i.datamem[13'h62C] =
datamem_swap[16'h62C];
datamem_ext_i.datamem[13'h62D] =
datamem_swap[16'h62D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #934
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFFCB;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #934)");
    end
end

unit.assert_eq16(16'hFFCB, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #934 dd01c632-4517-425e-9138-3e609db02899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #934 a54391bb-0a75-4423-9ad9-1bd03a974c14)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #934 87560546-7fe9-4e21-aa6a-f1e0bbe35d6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #934 ee42c58c-4cf9-49a6-aa49-b018be167d7f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #934 e3930ca0-b725-4ebf-8e0c-048eb5d8d9be)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #934 297c10cb-12d2-4200-998b-2ffb41b36391)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #934 140a60bb-0e66-4813-ba6c-cce46c2ce8cd)");

unit.assert_eq8(8'hCB, datamem_ext_i.datamem[13'h561],
"EXT DMEM (Testcase #934 f978537e-900d-43aa-99bc-6574daea16ea)");
unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'h562],
"EXT DMEM (Testcase #934 20d1c96e-0b8a-474f-9335-a7b613911d70)");
datamem_ext_i.datamem[13'h561] =
datamem_swap[16'h561];
datamem_ext_i.datamem[13'h562] =
datamem_swap[16'h562];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #935
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6803;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #935)");
    end
end

unit.assert_eq16(16'h6803, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #935 b4b9df29-a82b-4481-b743-a535f42f4109)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #935 0d3de62b-c234-4d15-a5ec-27535e02c32e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #935 6b89ee7c-2fb1-4b7f-8e45-8a0a04b9b373)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #935 dbadf356-2367-4f6e-8cec-87f526635946)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #935 48809655-78ee-4fec-9db8-a44e7ebae04e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #935 cfc324a1-5f8e-44a5-98e7-72f782ea7209)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #935 abe4c27a-b6d6-4eab-92fb-931f69e23677)");

unit.assert_eq8(8'h03, datamem_ext_i.datamem[13'hB92],
"EXT DMEM (Testcase #935 a5017c1b-851b-4200-b715-6f96f4a0d9ac)");
unit.assert_eq8(8'h68, datamem_ext_i.datamem[13'hB93],
"EXT DMEM (Testcase #935 ba0fb7dd-d006-4ec2-8d74-550f1ca881b4)");
datamem_ext_i.datamem[13'hB92] =
datamem_swap[16'hB92];
datamem_ext_i.datamem[13'hB93] =
datamem_swap[16'hB93];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #936
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h85;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE1CE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #936)");
    end
end

unit.assert_eq16(16'hE1CE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #936 9fed3575-fe46-4b31-be73-391c3ab2650d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #936 9e97be8a-594f-442f-8e0b-0e389c99b90f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #936 87b8f2b0-dd69-4b76-9ebb-d4f710d69ff9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #936 064de594-dbb6-49ce-99a8-daadbf8db596)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #936 ec9abd1c-9a74-4817-9137-83a12501a7ad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #936 1c17cc1d-82fa-447b-bfd1-0dcc2fe31cc5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #936 a9d1abae-452d-491b-abda-30d27f04ff0e)");

unit.assert_eq8(8'hCE, datamem_ext_i.datamem[13'hE1B],
"EXT DMEM (Testcase #936 f4199e9a-d607-46c2-98da-828499edecae)");
unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'hE1C],
"EXT DMEM (Testcase #936 58eaa4e5-2176-4cca-a5cb-b28b6dba3474)");
datamem_ext_i.datamem[13'hE1B] =
datamem_swap[16'hE1B];
datamem_ext_i.datamem[13'hE1C] =
datamem_swap[16'hE1C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #937
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0BB6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #937)");
    end
end

unit.assert_eq16(16'h0BB6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #937 53277c7b-1505-4383-8504-0169be1af5f1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #937 c5b7b960-5478-46cf-b917-d7dcf2263ba8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #937 7b90b6e4-1168-47a0-ad86-9e446defd2de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #937 bb186c39-76cf-4249-b2af-b9d805866b12)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #937 c4a20e04-3f2e-4dda-87aa-dac0944653ef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #937 4ee4fdf2-2b3c-4c0a-b9e5-f11640243689)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #937 e33c99f6-9902-478f-a02b-85fe4174419b)");

unit.assert_eq8(8'hB6, datamem_ext_i.datamem[13'hF73],
"EXT DMEM (Testcase #937 3cd66304-19ea-435e-9828-f24c40a9d6fe)");
unit.assert_eq8(8'h0B, datamem_ext_i.datamem[13'hF74],
"EXT DMEM (Testcase #937 8300060d-4ef7-4104-9fac-cc9e45f78786)");
datamem_ext_i.datamem[13'hF73] =
datamem_swap[16'hF73];
datamem_ext_i.datamem[13'hF74] =
datamem_swap[16'hF74];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #938
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h11;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7E39;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #938)");
    end
end

unit.assert_eq16(16'h7E39, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #938 4a61e2c6-fc6e-4bc5-b16f-1d0e49333e8e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #938 20b9472a-a399-418e-bb49-3bea28cd5745)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #938 c5c659b5-d672-48bd-9619-60fc70f505b8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #938 9e33c478-c7a7-4c2e-b0d8-cc379bc2a7b0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #938 da4e4318-34be-42d7-8d8d-c6639f1d164a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #938 9dff7007-f61e-4357-8ea2-94b0a68fda73)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #938 ca0cbc4f-18b3-4782-93af-44ba08190b71)");

unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'h4D6],
"EXT DMEM (Testcase #938 133b9a4c-8022-45d3-9510-d737392cd261)");
unit.assert_eq8(8'h7E, datamem_ext_i.datamem[13'h4D7],
"EXT DMEM (Testcase #938 d89043e7-768f-4346-97bf-2dbed423e33d)");
datamem_ext_i.datamem[13'h4D6] =
datamem_swap[16'h4D6];
datamem_ext_i.datamem[13'h4D7] =
datamem_swap[16'h4D7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #939
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h10;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h39C0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #939)");
    end
end

unit.assert_eq16(16'h39C0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #939 edb8c8c0-2746-4618-acd9-7dfe12bf91b8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #939 d6bbc873-6062-41a1-8aea-ca406aa63553)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #939 501c51b6-01ae-40eb-af62-c7827eba1ea8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #939 3cc8b674-b29d-4e9a-b9c7-c199f2d15304)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #939 ede42c30-b632-4da1-8f2b-f061c7ee4c40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #939 5855ccc3-0402-40e5-ae8b-5d9bca6a76f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #939 5b80ea58-aca5-42cf-a7c6-1898a566fbe3)");

unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h470],
"EXT DMEM (Testcase #939 c69e31c6-45e6-424b-8b5b-24bb53af27c4)");
unit.assert_eq8(8'h39, datamem_ext_i.datamem[13'h471],
"EXT DMEM (Testcase #939 529ca2ae-4825-41b1-b66b-0997eb3456eb)");
datamem_ext_i.datamem[13'h470] =
datamem_swap[16'h470];
datamem_ext_i.datamem[13'h471] =
datamem_swap[16'h471];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #940
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF664;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #940)");
    end
end

unit.assert_eq16(16'hF664, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #940 33b2aa86-7060-407c-ae68-b2960e3bd77d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #940 03edc4f2-d09c-4e8a-9446-73c20af4febf)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #940 64062f55-a982-43b2-b48c-84a5e0e532c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #940 b834021c-cad1-45a7-918b-4767e1e61144)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #940 9b838d7f-d7eb-45a2-a45d-afeb8fb92b7b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #940 80adb6f7-f614-4ca3-8285-d412560eda7f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #940 dbfcfe8d-dfe9-4e17-8e73-8906db234690)");

unit.assert_eq8(8'h64, datamem_ext_i.datamem[13'hAAA],
"EXT DMEM (Testcase #940 49f425c9-c57b-44b5-9d7b-6c9d91fb9cf6)");
unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'hAAB],
"EXT DMEM (Testcase #940 a3c41310-3851-4574-8483-ac3aa576200d)");
datamem_ext_i.datamem[13'hAAA] =
datamem_swap[16'hAAA];
datamem_ext_i.datamem[13'hAAB] =
datamem_swap[16'hAAB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #941
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4BC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #941)");
    end
end

unit.assert_eq16(16'h4BC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #941 9a025293-d047-4892-8dd2-105355c2e6dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #941 c77258bb-2503-4850-90af-4aa3804108ca)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #941 3538d9d3-43c4-437a-81c4-509eb6b4ff72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #941 ca2549c9-b5d3-44b7-bfaa-6ae9d2877858)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #941 3af1a3aa-98d0-4b1d-9131-9aed91116e72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #941 09b33aec-774c-4ef3-a092-cdb05ac19627)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #941 8e25ba0d-25a8-446e-b873-cb0d25d2bef5)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hFB4],
"EXT DMEM (Testcase #941 16ecc1b7-c84f-41a0-a20b-225620844c6d)");
unit.assert_eq8(8'h4B, datamem_ext_i.datamem[13'hFB5],
"EXT DMEM (Testcase #941 29ba5788-c10f-462a-81e1-d2f92244c2f1)");
datamem_ext_i.datamem[13'hFB4] =
datamem_swap[16'hFB4];
datamem_ext_i.datamem[13'hFB5] =
datamem_swap[16'hFB5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #942
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h56;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE399;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #942)");
    end
end

unit.assert_eq16(16'hE399, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #942 493e5b22-090c-492a-8b57-91b3656549c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #942 3d0f230f-2465-468b-9749-5d00e8f2f8bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #942 9adcd75e-69c0-4c2a-bebf-7ca905babfa7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #942 aca6357b-bbc3-4779-b0ed-bc3ec46d6800)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #942 164684c4-ac78-4894-9a99-d686cc9f268c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #942 2894bd21-4522-44ea-b794-5ca62c1996c1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #942 9eee497d-2265-4039-b9e1-2decde4839d9)");

unit.assert_eq8(8'h99, datamem_ext_i.datamem[13'hA06],
"EXT DMEM (Testcase #942 d407759d-ae6e-4f34-8657-6b6409c824a0)");
unit.assert_eq8(8'hE3, datamem_ext_i.datamem[13'hA07],
"EXT DMEM (Testcase #942 95530b81-e0bf-4cca-97a5-53a24b736f63)");
datamem_ext_i.datamem[13'hA06] =
datamem_swap[16'hA06];
datamem_ext_i.datamem[13'hA07] =
datamem_swap[16'hA07];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #943
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h40D4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #943)");
    end
end

unit.assert_eq16(16'h40D4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #943 5e3195cf-6507-46be-aeef-086ee23dede2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #943 b0907ea9-7bb1-4918-9a91-5ffa2fdcf6fb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #943 9bce080d-4122-4d68-a762-665913832014)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #943 3bd8d75a-7215-42d4-bc73-e9afa268fbdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #943 c993ab38-ae87-4725-a9f7-13af83d64ff6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #943 72b6b5b6-0caf-467d-ab1f-515fd7fb8d30)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #943 8b51a339-29ab-4904-89a9-e8cf16de770b)");

unit.assert_eq8(8'hD4, datamem_ext_i.datamem[13'h651],
"EXT DMEM (Testcase #943 0a0d6824-de10-45a6-be7f-0898d456d2c3)");
unit.assert_eq8(8'h40, datamem_ext_i.datamem[13'h652],
"EXT DMEM (Testcase #943 2e865917-098d-4e28-8549-ce1a3d9862f7)");
datamem_ext_i.datamem[13'h651] =
datamem_swap[16'h651];
datamem_ext_i.datamem[13'h652] =
datamem_swap[16'h652];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #944
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hEAE6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #944)");
    end
end

unit.assert_eq16(16'hEAE6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #944 dae60099-70b0-413c-87a9-73e696fa4947)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #944 66436a55-95a3-49ce-9cae-0c52ed8161a1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #944 8eb14f22-2161-414a-b2bc-6396604e7181)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #944 9de04f7b-489d-4c7d-986c-b1dc30ba5884)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #944 814108ea-0a8d-4e66-a41c-9aeb2b1c5491)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #944 2119b712-cadc-4df7-af09-a64a434fc98a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #944 a4ca7394-bcb5-4094-884e-a03757b8d05d)");

unit.assert_eq8(8'hE6, datamem_ext_i.datamem[13'h48B],
"EXT DMEM (Testcase #944 97fa7b4c-caf5-4bb6-8f33-0a62d8e7e04b)");
unit.assert_eq8(8'hEA, datamem_ext_i.datamem[13'h48C],
"EXT DMEM (Testcase #944 c00420fa-5145-45f6-b8ac-aeb340fedb87)");
datamem_ext_i.datamem[13'h48B] =
datamem_swap[16'h48B];
datamem_ext_i.datamem[13'h48C] =
datamem_swap[16'h48C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #945
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hFD2D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #945)");
    end
end

unit.assert_eq16(16'hFD2D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #945 c6b68a09-c1b1-4659-8723-ad0c9e450cad)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #945 100cfb03-a1b0-47dc-b359-e192b6228268)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #945 f179d07b-7423-4c50-ae74-64b6ec55e50b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #945 40c3bab4-117f-45a9-8a82-a61e53b4cf09)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #945 7221a1ca-ee36-4c88-b6db-ea584f290e6e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #945 6d58184f-3b24-4cf1-a181-2e2360e0bfdc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #945 395632e4-3f9b-4b89-83db-410003c79e7c)");

unit.assert_eq8(8'h2D, datamem_ext_i.datamem[13'hDFB],
"EXT DMEM (Testcase #945 788859d1-2832-4c14-bd8b-0581c6ababf8)");
unit.assert_eq8(8'hFD, datamem_ext_i.datamem[13'hDFC],
"EXT DMEM (Testcase #945 b4f4646c-328e-42f2-aa10-f0b429d0091d)");
datamem_ext_i.datamem[13'hDFB] =
datamem_swap[16'hDFB];
datamem_ext_i.datamem[13'hDFC] =
datamem_swap[16'hDFC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #946
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h638A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #946)");
    end
end

unit.assert_eq16(16'h638A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #946 7b5fc212-8775-410d-a388-8a587e8b652f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #946 0e513f0a-2438-479c-98bf-4928b54a2d78)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #946 b7d6c2e3-0995-41aa-b8bb-632d88d40c6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #946 6f5a4a36-9ccc-4de6-ac95-bab6cba6fdda)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #946 7be57728-dee8-41f5-a1ff-65157a0226d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #946 ad84bd1d-ef83-494e-b4b9-bb4598ee8597)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #946 aaaba7a6-8576-4e9e-a157-7a6d359c9ab9)");

unit.assert_eq8(8'h8A, datamem_ext_i.datamem[13'hE31],
"EXT DMEM (Testcase #946 a639b40c-7ae8-48ad-b736-3736a86d03bd)");
unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'hE32],
"EXT DMEM (Testcase #946 cae8313e-aec0-4911-a64a-2d034d0f3e00)");
datamem_ext_i.datamem[13'hE31] =
datamem_swap[16'hE31];
datamem_ext_i.datamem[13'hE32] =
datamem_swap[16'hE32];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #947
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h90;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDAA4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #947)");
    end
end

unit.assert_eq16(16'hDAA4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #947 8dcd330f-232d-4f69-a83b-c69dd320fcb3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #947 20621ab1-c373-4e14-8350-0e90dba5debe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #947 e3fc5047-8506-4fc6-be4b-82c811033f3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #947 a5514b18-4c5c-45f5-be54-ad090ec82d58)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #947 c25c4471-950c-4295-8905-f0e50957af7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #947 873d7309-049f-4d4c-a745-037c3b70f480)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #947 f0962890-56a8-4590-acc0-b1bb2b73ec4d)");

unit.assert_eq8(8'hA4, datamem_ext_i.datamem[13'hA9A],
"EXT DMEM (Testcase #947 30f5fa18-9cd5-409a-a92d-f2f259eb6543)");
unit.assert_eq8(8'hDA, datamem_ext_i.datamem[13'hA9B],
"EXT DMEM (Testcase #947 28f39b50-7a95-4c4a-be02-14b416879887)");
datamem_ext_i.datamem[13'hA9A] =
datamem_swap[16'hA9A];
datamem_ext_i.datamem[13'hA9B] =
datamem_swap[16'hA9B];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #948
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA283;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #948)");
    end
end

unit.assert_eq16(16'hA283, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #948 7a567385-66b4-459d-b8e0-2e55b80bb3f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #948 0b977cbc-ab5f-4cbb-b888-aed807edce4c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #948 8feebc62-fb4e-4823-b982-34ef0da41795)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #948 0002d1e0-2ef3-4180-a66d-0dc3fa9a01bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #948 120de9ac-35a5-40ef-9715-f51a2ee70816)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #948 0af2542b-4608-45f7-997f-bd771004f42f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #948 1efdf182-14eb-4439-8be1-7ce87ed3751a)");

unit.assert_eq8(8'h83, datamem_ext_i.datamem[13'hA88],
"EXT DMEM (Testcase #948 64e91176-e64f-4b06-b47a-8e65fe87c710)");
unit.assert_eq8(8'hA2, datamem_ext_i.datamem[13'hA89],
"EXT DMEM (Testcase #948 feea80f9-0cba-4e72-a365-88173f85f8aa)");
datamem_ext_i.datamem[13'hA88] =
datamem_swap[16'hA88];
datamem_ext_i.datamem[13'hA89] =
datamem_swap[16'hA89];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #949
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5897;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #949)");
    end
end

unit.assert_eq16(16'h5897, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #949 34d0a9e8-ddf3-49b7-ab55-b477e526708e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #949 03bd06e3-95c7-4e41-9707-2560e5aa1b23)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #949 61d9fab3-8bf4-4e9c-9454-272e7b346b51)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #949 2e648984-b3a3-4a0d-af4d-c3f8d3824eca)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #949 7b7a0db5-1b7c-4623-b1b9-102706e5797e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #949 82fc5a95-96f7-4080-b897-8877e6b002a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #949 efbd7a80-19c1-427b-b397-74142449b4bd)");

unit.assert_eq8(8'h97, datamem_ext_i.datamem[13'h69B],
"EXT DMEM (Testcase #949 ef1ce923-8a4d-4958-bd40-48ef568c882c)");
unit.assert_eq8(8'h58, datamem_ext_i.datamem[13'h69C],
"EXT DMEM (Testcase #949 79ae47b9-300e-4b2a-808d-f197f6cd7883)");
datamem_ext_i.datamem[13'h69B] =
datamem_swap[16'h69B];
datamem_ext_i.datamem[13'h69C] =
datamem_swap[16'h69C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #950
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h50;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7333;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #950)");
    end
end

unit.assert_eq16(16'h7333, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #950 6c78fd64-5eee-466e-8cb3-a648c7aa8409)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #950 9871aa68-f966-400d-8ba9-10195a3e3e9f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #950 911c5d7c-63f1-402e-af08-68d2d2972e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #950 0021f3d6-37b0-41e1-a20d-6f586a8f3466)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #950 074c9dff-316d-41ce-89ca-9ecc83e296f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #950 10a37081-7042-401d-a127-1c035ffd8dbb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #950 e04c4245-461b-4dbb-8b0a-60df7f873a5b)");

unit.assert_eq8(8'h33, datamem_ext_i.datamem[13'hEDF],
"EXT DMEM (Testcase #950 ed371efe-44ab-451f-b91b-57e4220950d2)");
unit.assert_eq8(8'h73, datamem_ext_i.datamem[13'hEE0],
"EXT DMEM (Testcase #950 f9213ab2-3ad7-4fe8-82a6-d1d16bf3f28b)");
datamem_ext_i.datamem[13'hEDF] =
datamem_swap[16'hEDF];
datamem_ext_i.datamem[13'hEE0] =
datamem_swap[16'hEE0];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #951
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h424E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #951)");
    end
end

unit.assert_eq16(16'h424E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #951 07c58a9a-5e9b-4a33-88c0-f5cb8bb5480d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #951 1df9a5cd-d700-4f49-920a-3665bf8b1c68)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #951 c10167d8-0685-4d97-97d1-bc2de2f974af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #951 c2ca023e-ec19-460d-ba95-28198d8a514e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #951 81507f88-e9ac-4e9b-840b-c49aad99c3a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #951 8d13dc45-d75f-496a-8cc5-9addeba6f7d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #951 e6809265-f327-4893-acc0-a214aff44261)");

unit.assert_eq8(8'h4E, datamem_ext_i.datamem[13'h4B9],
"EXT DMEM (Testcase #951 fc69a0e3-f708-4ea9-8b21-42e343efb436)");
unit.assert_eq8(8'h42, datamem_ext_i.datamem[13'h4BA],
"EXT DMEM (Testcase #951 7bc17870-76b4-4b4c-85ce-153c0e324168)");
datamem_ext_i.datamem[13'h4B9] =
datamem_swap[16'h4B9];
datamem_ext_i.datamem[13'h4BA] =
datamem_swap[16'h4BA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #952
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h44;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD807;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #952)");
    end
end

unit.assert_eq16(16'hD807, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #952 bc772a88-b6c4-4e61-afbb-25f0f62a3d92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #952 3e1714e8-9e51-41c9-96c5-a93961ae21ad)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #952 58fcb128-6a62-4d0f-bb52-3f1bc54c6212)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #952 054b2ae9-7c12-4e74-accf-cc701ecc709b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #952 53f22d55-1965-467c-9005-598936c124d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #952 cb4153ef-9ce8-4c4d-b6f1-8217aa448afa)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #952 fe6d6042-4d41-41e6-aa42-ecbff545b02b)");

unit.assert_eq8(8'h07, datamem_ext_i.datamem[13'h2C9],
"EXT DMEM (Testcase #952 5d9e26c8-a459-4fbe-a78c-e81d837df976)");
unit.assert_eq8(8'hD8, datamem_ext_i.datamem[13'h2CA],
"EXT DMEM (Testcase #952 4c532fea-4578-4fbd-be61-80a618dafb52)");
datamem_ext_i.datamem[13'h2C9] =
datamem_swap[16'h2C9];
datamem_ext_i.datamem[13'h2CA] =
datamem_swap[16'h2CA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #953
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h322A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #953)");
    end
end

unit.assert_eq16(16'h322A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #953 cfa94148-7fa5-4130-a424-c71901230329)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #953 da961f97-d02d-4f24-88ab-383b72a214cb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #953 cbaf4db9-b719-4f9a-8af1-60b45d04961c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #953 efe7da75-ff8a-4a0d-986e-ff14fb3b50f0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #953 9fec78ce-2b69-4e73-9811-51d3d0969b79)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #953 cadaf753-f27a-4986-bbfc-8d011c82c6a6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #953 5faf32b5-71e5-41a5-bfa5-f67247fdd08c)");

unit.assert_eq8(8'h2A, datamem_ext_i.datamem[13'hBD0],
"EXT DMEM (Testcase #953 e870f516-d82d-424f-941f-8451d5d004c0)");
unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'hBD1],
"EXT DMEM (Testcase #953 043b41a1-0728-455d-8db2-e6a42d763db0)");
datamem_ext_i.datamem[13'hBD0] =
datamem_swap[16'hBD0];
datamem_ext_i.datamem[13'hBD1] =
datamem_swap[16'hBD1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #954
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDC3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #954)");
    end
end

unit.assert_eq16(16'hDC3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #954 61e23ef7-3681-401a-90a4-eb388a4d3692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #954 2e634ca0-669e-43a7-bab6-4aee44ec880a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #954 2aa89153-61da-43db-96ab-e530d8cfd6cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #954 aaadbcc5-38c5-4622-87c2-672577c944ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #954 0d0226ed-cfa2-4e00-aa8a-412dc038cefc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #954 f7057775-d89c-44eb-9907-45a07d5047b4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #954 9c91ba05-7c0a-4343-89b3-d2143d44cce1)");

unit.assert_eq8(8'h3D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF6],
"INT DMEM (Testcase #954 9e97c07b-7521-424d-a156-ac7693180efb)");
unit.assert_eq8(8'hDC, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF7],
"INT DMEM (Testcase #954 71e709d9-249f-408c-92a3-cfbdd29142bd)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF6] =
datamem_swap[16'h1F6];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'hF7] =
datamem_swap[16'h1F7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #955
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3358;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #955)");
    end
end

unit.assert_eq16(16'h3358, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #955 8da5696d-78fb-4810-ac43-ceea76757ff4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #955 0d538cab-1e3a-4d72-9024-50cdb7407c6b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #955 346b567f-e670-4d69-a002-956192a770d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #955 6d03f87c-c542-48a2-b5b2-a451063ea3f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #955 dedc0fd8-91cc-4b5d-a43f-c521f128cff3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #955 12018970-a096-4e40-813f-8afcbee09887)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #955 3056d332-6533-488e-aafe-97e6402d738b)");

unit.assert_eq8(8'h58, datamem_ext_i.datamem[13'h373],
"EXT DMEM (Testcase #955 8f6ca038-604d-4895-b29b-e10e288f1bda)");
unit.assert_eq8(8'h33, datamem_ext_i.datamem[13'h374],
"EXT DMEM (Testcase #955 33cb4d35-1934-4dc0-9e96-23f206b1a196)");
datamem_ext_i.datamem[13'h373] =
datamem_swap[16'h373];
datamem_ext_i.datamem[13'h374] =
datamem_swap[16'h374];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #956
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0B3D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #956)");
    end
end

unit.assert_eq16(16'h0B3D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #956 11a2a9e0-07ed-4162-87d2-9e06659c02af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #956 1a1b5197-fba8-47fb-bc9a-360462df2c3c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #956 6a125138-e79e-4ade-95e1-4bea8cb3ebb5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #956 d84c997a-6931-4de9-ac45-cd4a994fdc56)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #956 10ca4ecb-5753-43cf-a782-adbbb4006f10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #956 fba07028-97a7-4b09-84ad-bf585a63389b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #956 6aa7b7ff-27c1-4b08-a393-f46212c90fc0)");

unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'hE54],
"EXT DMEM (Testcase #956 ba435de2-7abc-4fd5-8f7d-9e415d7eb7a3)");
unit.assert_eq8(8'h0B, datamem_ext_i.datamem[13'hE55],
"EXT DMEM (Testcase #956 f6752a6f-0a0f-48d3-9ab1-e6e19744e713)");
datamem_ext_i.datamem[13'hE54] =
datamem_swap[16'hE54];
datamem_ext_i.datamem[13'hE55] =
datamem_swap[16'hE55];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #957
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h93;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h125F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #957)");
    end
end

unit.assert_eq16(16'h125F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #957 ba73db0f-fea8-46c3-a41f-5e28e6475087)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #957 3b53f87d-e70a-49cd-b6e3-e01cc0d71e64)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #957 373bbd0f-5562-4cd4-9207-20944b12e899)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #957 55ecde1b-7474-40ed-bd3f-c64a76eebb34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #957 21bdd8e2-f7da-4f66-b421-433f59c3e729)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #957 01ce1974-1655-4d4b-9eb5-a79786683237)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #957 f8d011fb-43c3-4ecb-82c4-95174c55b0bb)");

unit.assert_eq8(8'h5F, datamem_ext_i.datamem[13'h2A8],
"EXT DMEM (Testcase #957 f7b3cfd8-10ff-4bb1-997c-1090e8aa623f)");
unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h2A9],
"EXT DMEM (Testcase #957 ba308fbb-f265-497c-abe6-6f997effa8d2)");
datamem_ext_i.datamem[13'h2A8] =
datamem_swap[16'h2A8];
datamem_ext_i.datamem[13'h2A9] =
datamem_swap[16'h2A9];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #958
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h7495;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #958)");
    end
end

unit.assert_eq16(16'h7495, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #958 cd687542-4395-407f-9821-5368d9b69301)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #958 64a14723-d5fd-4ed6-aa95-e9cf31ff14fb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #958 8dcd3fdc-013e-4acb-a157-f79636f7350a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #958 bd2d25d5-1b40-4cb2-a527-48a88b5d30bb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #958 8e421171-b9eb-45f3-8faf-5f9230bcdc13)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #958 765f0c3e-37bb-45ac-8cb3-8dae617652a2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #958 b7a3ea02-f1ee-4c01-bb26-74331c7b5a21)");

unit.assert_eq8(8'h95, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h87],
"INT DMEM (Testcase #958 cf736c2c-69b5-4d0e-adcf-9c4c634ea81f)");
unit.assert_eq8(8'h74, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h88],
"INT DMEM (Testcase #958 9d397da4-4223-43ec-82e5-46c4414b1595)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h87] =
datamem_swap[16'h187];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h88] =
datamem_swap[16'h188];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #959
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8DC4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #959)");
    end
end

unit.assert_eq16(16'h8DC4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #959 6ec49a04-5057-48d7-ad0d-62e31d64dc6c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #959 4ebba650-589e-41ff-92b2-cbae9405fecb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #959 07c626b3-81f2-4100-986c-2632a13aebed)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #959 6e06c1fa-c82e-43c2-b4bb-8f311a8c0f37)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #959 23f119c9-6238-4564-b9a7-6b614a3cddff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #959 d2981490-3333-4177-aef1-cdc8b7414437)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #959 8d1a3285-b001-4d72-8a7c-003c753e4006)");

unit.assert_eq8(8'hC4, datamem_ext_i.datamem[13'hF85],
"EXT DMEM (Testcase #959 f8e2b9d6-9e49-40c0-a9b6-f6b11195ecb4)");
unit.assert_eq8(8'h8D, datamem_ext_i.datamem[13'hF86],
"EXT DMEM (Testcase #959 024ea160-1c32-456e-8c8a-c1741a03372e)");
datamem_ext_i.datamem[13'hF85] =
datamem_swap[16'hF85];
datamem_ext_i.datamem[13'hF86] =
datamem_swap[16'hF86];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #960
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hC009;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #960)");
    end
end

unit.assert_eq16(16'hC009, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #960 34a3adb0-00ec-4461-9118-56bb915dcf20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #960 064dcb81-ab15-47bc-a4d6-d60330cf7dfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #960 b9bd6b6a-a24a-4a03-96cd-da934933b909)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #960 01c951e1-5736-405f-9709-d9296326e042)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #960 0f8d7e1b-55fb-4b54-98ac-823825457b48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #960 41f50ce8-2456-446f-818a-1cc26af5570e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #960 a088c439-6b9a-4f8b-8ab3-aae154435abc)");

unit.assert_eq8(8'h09, datamem_ext_i.datamem[13'h54B],
"EXT DMEM (Testcase #960 becad94a-6628-4b09-9100-a9809b80307c)");
unit.assert_eq8(8'hC0, datamem_ext_i.datamem[13'h54C],
"EXT DMEM (Testcase #960 18546a2b-2037-4c48-b683-51379e3bd0ba)");
datamem_ext_i.datamem[13'h54B] =
datamem_swap[16'h54B];
datamem_ext_i.datamem[13'h54C] =
datamem_swap[16'h54C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #961
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9FF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #961)");
    end
end

unit.assert_eq16(16'h9FF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #961 f6210ff3-b58f-4a91-9eb2-db9b4f15c600)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #961 fb01bc41-b760-4b81-8995-d2144455c5a5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #961 06216fb1-c152-46d3-99cb-832f2f51d57a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #961 819b8ef1-6b0f-41f7-8554-70d5470884c1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #961 42bdd261-f63f-4d7e-8529-11fec08c165c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #961 65a34ad2-0414-43a0-bf38-7c9eb9ad66f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #961 491097bb-eaf9-4e86-9609-c4a684356d92)");

unit.assert_eq8(8'hF4, datamem_ext_i.datamem[13'h969],
"EXT DMEM (Testcase #961 840991b1-2dbf-4620-a2a0-00b803ae20a6)");
unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h96A],
"EXT DMEM (Testcase #961 282e6105-1a57-4427-8edb-ef5f04fe34f3)");
datamem_ext_i.datamem[13'h969] =
datamem_swap[16'h969];
datamem_ext_i.datamem[13'h96A] =
datamem_swap[16'h96A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #962
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8CED;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #962)");
    end
end

unit.assert_eq16(16'h8CED, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #962 96f07b22-470e-42eb-b12c-17a0f59ecd34)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #962 5bfdf72f-3ba7-4287-9aac-598c752c54f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #962 33f96a21-b1f2-4f4e-b9df-fcede85a824a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #962 3ffad192-613e-4714-93e6-5813bf1b1792)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #962 7c2c2aee-413d-43b6-b587-a6d061c38afb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #962 e2a05c2a-6294-49e9-8992-60c30c1330a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #962 226d9bf4-0a45-408b-96ed-2295a544045a)");

unit.assert_eq8(8'hED, datamem_ext_i.datamem[13'hCA5],
"EXT DMEM (Testcase #962 f38831b8-f410-4577-a05e-e5478babeecf)");
unit.assert_eq8(8'h8C, datamem_ext_i.datamem[13'hCA6],
"EXT DMEM (Testcase #962 015885cd-3e80-48d0-891b-4718decc7e7d)");
datamem_ext_i.datamem[13'hCA5] =
datamem_swap[16'hCA5];
datamem_ext_i.datamem[13'hCA6] =
datamem_swap[16'hCA6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #963
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h95;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB2FF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #963)");
    end
end

unit.assert_eq16(16'hB2FF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #963 f08290c8-e112-48d9-b830-99b90548863d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #963 c804255a-1a8c-425c-b52a-f801389cf36c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #963 0177f48d-dbb6-4f84-825e-7dc6dc988603)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #963 485e7a5d-26af-4b5a-a847-223735024135)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #963 cdb5a1b9-8e1c-4f14-9946-6a4c8a298c5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #963 e0823ca7-2f15-4278-b602-af42a1248b14)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #963 49c1333f-f556-4aee-801c-23bba6b0bdd8)");

unit.assert_eq8(8'hFF, datamem_ext_i.datamem[13'h211],
"EXT DMEM (Testcase #963 e11ad626-096e-45db-9634-ad7e3935b1a8)");
unit.assert_eq8(8'hB2, datamem_ext_i.datamem[13'h212],
"EXT DMEM (Testcase #963 e3f7cbc5-df5a-494c-a483-86f4e6e9a84d)");
datamem_ext_i.datamem[13'h211] =
datamem_swap[16'h211];
datamem_ext_i.datamem[13'h212] =
datamem_swap[16'h212];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #964
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3DF5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #964)");
    end
end

unit.assert_eq16(16'h3DF5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #964 741a976f-8611-4fe3-804e-a6f6b0b28147)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #964 092cd3ea-b458-4fa9-9b4f-481e9645fabb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #964 0d366306-3492-4d4e-bb24-084b1f1bea4f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #964 d51c8487-891a-4bf6-ac9d-d2d80c741c11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #964 627a89f5-0b3e-4ea8-97c4-9d33703559cf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #964 e6bc5d95-e381-42df-bde6-e9a19a805319)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #964 1cc8b0bf-a3c0-421f-a3d3-164b2900f9fa)");

unit.assert_eq8(8'hF5, datamem_ext_i.datamem[13'h23B],
"EXT DMEM (Testcase #964 09545102-83e8-4874-b561-93bef763c5b6)");
unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'h23C],
"EXT DMEM (Testcase #964 be2e8bac-36b8-4703-8586-d528b52ed68d)");
datamem_ext_i.datamem[13'h23B] =
datamem_swap[16'h23B];
datamem_ext_i.datamem[13'h23C] =
datamem_swap[16'h23C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #965
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h05;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5770;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #965)");
    end
end

unit.assert_eq16(16'h5770, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #965 804182f5-d7ab-456a-a56c-5969c0a01103)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #965 6bd92683-d182-4fdd-9b19-6a5a0470b188)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #965 d7a7fb0a-03d8-4944-94af-6c196389006c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #965 822bc12d-7d10-4f57-b20d-1999177f76fa)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #965 431b8b19-ffc6-49e5-a308-339f613b49a4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #965 88ce3d69-2eec-4588-9310-16e6c717ea0f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #965 d2508dd6-997d-4abf-b137-a0da77585a9c)");

unit.assert_eq8(8'h70, datamem_ext_i.datamem[13'h974],
"EXT DMEM (Testcase #965 ebdc9de5-6031-4d31-a925-a8ec702051f1)");
unit.assert_eq8(8'h57, datamem_ext_i.datamem[13'h975],
"EXT DMEM (Testcase #965 97415d4b-64a4-40d1-8d11-22643c1d1dde)");
datamem_ext_i.datamem[13'h974] =
datamem_swap[16'h974];
datamem_ext_i.datamem[13'h975] =
datamem_swap[16'h975];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #966
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h02;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6B5A;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #966)");
    end
end

unit.assert_eq16(16'h6B5A, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #966 130a0186-0086-4ead-bfe4-95422809c945)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #966 9238bcf5-7aa1-44b5-a90d-2bfd54e4bc81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #966 38937895-8265-45ff-86f0-2106705c057d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #966 21d7dc56-1be4-4be7-8825-79947a036bb5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #966 2e153f39-2259-4d0e-87d5-9047ce61b3dc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #966 9e60d556-af0e-45a8-8369-0a3b781eefeb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #966 79225574-9134-4d6e-aa3c-4d1ad13eca63)");

unit.assert_eq8(8'h5A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5E],
"INT DMEM (Testcase #966 fa312208-6fae-4ae6-a36c-2d6eaee1793d)");
unit.assert_eq8(8'h6B, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5F],
"INT DMEM (Testcase #966 a6553cc5-1146-4a83-b67b-c640125e0d59)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5E] =
datamem_swap[16'h5E];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h5F] =
datamem_swap[16'h5F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #967
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2CFD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #967)");
    end
end

unit.assert_eq16(16'h2CFD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #967 7cc068bf-d90d-4841-ad27-453c2750285f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #967 561b91f9-49bb-499d-9fd9-9db0e1dfd997)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #967 8c21d4bf-2c61-4347-a8b2-387e9d56b26b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #967 72ae8edb-cfea-445b-b02a-475e91f0d32a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #967 26e172ce-8fda-470f-a1e2-9d50ab34e54f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #967 68b6bc05-8653-484b-996f-2165b92bfc8e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #967 081b8be2-f74b-4c25-9687-aefca91e2e2e)");

unit.assert_eq8(8'hFD, datamem_ext_i.datamem[13'h9CE],
"EXT DMEM (Testcase #967 d81d1aa2-1b2d-4057-a1e5-b238bcb80f99)");
unit.assert_eq8(8'h2C, datamem_ext_i.datamem[13'h9CF],
"EXT DMEM (Testcase #967 20571d2f-594e-41ea-8997-a0089bdd1187)");
datamem_ext_i.datamem[13'h9CE] =
datamem_swap[16'h9CE];
datamem_ext_i.datamem[13'h9CF] =
datamem_swap[16'h9CF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #968
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h80;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6241;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #968)");
    end
end

unit.assert_eq16(16'h6241, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #968 b8ae4b4e-c187-40b7-b828-ed1f62d3f086)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #968 d6501f11-d520-481f-aaee-52af7d1abab2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #968 6713dff1-c054-45b6-addf-f5e3d97c3a80)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #968 de95bf14-3437-4ec6-89a4-cfa9afabaf4d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #968 9178368f-b059-48e1-ad5e-f3487a4ebb43)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #968 9f6eeb23-468a-4efb-ae7f-53b621570ff7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #968 fc1bf8ce-155f-41fc-ae5e-c7bcb32f315f)");

unit.assert_eq8(8'h41, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4C],
"INT DMEM (Testcase #968 a20e3974-d883-44d4-a96b-d7e1c553052d)");
unit.assert_eq8(8'h62, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4D],
"INT DMEM (Testcase #968 d7bbcfc1-bab5-4a25-a69a-7cc27b9d6ac7)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4C] =
datamem_swap[16'h4C];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h4D] =
datamem_swap[16'h4D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #969
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h47;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD3B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #969)");
    end
end

unit.assert_eq16(16'hD3B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #969 610b17f7-b0ea-446d-aa1e-d9fa27ebae18)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #969 cc253332-155a-4808-8557-6dffb7d3af1e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #969 a9e44038-a669-4260-970f-43f21a9e3c8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #969 47794753-19a0-4fb7-990d-957bfd5725c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #969 32e1763d-4722-4c24-808d-1e67f3b785af)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #969 8af25a45-6b9e-4950-aa2d-564649896ecf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #969 718c3250-6cb2-41f4-9005-3934b4265f01)");

unit.assert_eq8(8'hB5, datamem_ext_i.datamem[13'hC42],
"EXT DMEM (Testcase #969 a8528ca4-6bd7-4679-ba50-817bd8083bba)");
unit.assert_eq8(8'hD3, datamem_ext_i.datamem[13'hC43],
"EXT DMEM (Testcase #969 9c386c4f-66df-4c7a-8425-34043d63b92d)");
datamem_ext_i.datamem[13'hC42] =
datamem_swap[16'hC42];
datamem_ext_i.datamem[13'hC43] =
datamem_swap[16'hC43];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #970
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hBF66;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #970)");
    end
end

unit.assert_eq16(16'hBF66, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #970 9c143cd1-368b-45d1-9860-c0041e9fcee0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #970 2c8bb755-6f7f-4234-aafd-1c4bd25c543b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #970 2002b163-c982-47e0-b0d9-6d65daef410f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #970 bc715b79-b19f-4c24-bb82-ae49ad10ff1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #970 a33bb1d4-68af-4c69-831f-0ad4afc4b7ff)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #970 c610f054-d474-412c-bfb3-c7ef40686514)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #970 e033304e-0b7d-4667-9817-80e207b5da14)");

unit.assert_eq8(8'h66, datamem_ext_i.datamem[13'h414],
"EXT DMEM (Testcase #970 68b6c68a-2eb4-4cb5-b6c5-82eb3d0c8f01)");
unit.assert_eq8(8'hBF, datamem_ext_i.datamem[13'h415],
"EXT DMEM (Testcase #970 6d6dd7f5-9768-4fa0-82ca-548f150917b7)");
datamem_ext_i.datamem[13'h414] =
datamem_swap[16'h414];
datamem_ext_i.datamem[13'h415] =
datamem_swap[16'h415];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #971
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h549F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #971)");
    end
end

unit.assert_eq16(16'h549F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #971 45918707-8756-4429-861e-e1587ac7f8a3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #971 f64b2e99-b711-4a6e-b115-842ed835578c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #971 291c91c3-0b5c-4f94-bd52-6b90b67b1ebf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #971 db0be401-5de1-48bc-ae2e-8fcd0c9fb983)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #971 82092089-3a24-46dc-a808-b4ebfa1afa65)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #971 ff6966eb-0bb0-4ae5-bdf3-e4d2ac19027b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #971 1c134b1b-8a2b-4d78-985d-78744426c018)");

unit.assert_eq8(8'h9F, datamem_ext_i.datamem[13'h24D],
"EXT DMEM (Testcase #971 8187d07f-d2d3-4485-b972-44742b4ac5e2)");
unit.assert_eq8(8'h54, datamem_ext_i.datamem[13'h24E],
"EXT DMEM (Testcase #971 2b4219ce-7baa-4f19-9675-f0cdc9b3b929)");
datamem_ext_i.datamem[13'h24D] =
datamem_swap[16'h24D];
datamem_ext_i.datamem[13'h24E] =
datamem_swap[16'h24E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #972
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h2971;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #972)");
    end
end

unit.assert_eq16(16'h2971, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #972 bfd176ca-3c0a-4641-bd41-cc2096b0a0b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #972 00e33d94-aaa6-4158-9c9d-9b9f5433b20e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #972 88d6805f-1dd3-4922-acc7-cccdf834fb72)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #972 5398544e-05cf-4ceb-9b62-f12e7fd953e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #972 a855b987-d7d4-4d50-b866-a6dea0af04bf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #972 0152935e-c2b4-4ab5-b059-7642e101f1c3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #972 617abdb7-cd82-43e8-9291-ca2dc3fffde7)");

unit.assert_eq8(8'h71, datamem_ext_i.datamem[13'hDB3],
"EXT DMEM (Testcase #972 b19683cb-27b8-446b-9c29-2eda4de828be)");
unit.assert_eq8(8'h29, datamem_ext_i.datamem[13'hDB4],
"EXT DMEM (Testcase #972 ed9bec1d-f7e7-4c41-93d4-f8a530988be1)");
datamem_ext_i.datamem[13'hDB3] =
datamem_swap[16'hDB3];
datamem_ext_i.datamem[13'hDB4] =
datamem_swap[16'hDB4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #973
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6170;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #973)");
    end
end

unit.assert_eq16(16'h6170, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #973 03918eab-12d1-48e6-b810-5f101a18244d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #973 fc9e7178-4926-441b-b4a9-5b0833f413fe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #973 48f5af48-2781-4f03-b88f-544dce6afd67)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #973 874ecb56-559c-4b11-a888-0821886637cd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #973 bd3dfd41-a71f-47e1-9184-3ee69a3a0ff1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #973 392d9501-1990-4f68-9a6d-d824b817addc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #973 5f1d674c-2b84-46e2-8a93-05073894befb)");

unit.assert_eq8(8'h70, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hEA],
"INT DMEM (Testcase #973 335541f0-7778-4f16-8701-d9c5fb262acd)");
unit.assert_eq8(8'h61, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hEB],
"INT DMEM (Testcase #973 e25bf8ec-3dcf-4aa7-8ff3-68c9f984d756)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hEA] =
datamem_swap[16'hEA];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'hEB] =
datamem_swap[16'hEB];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #974
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA99B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #974)");
    end
end

unit.assert_eq16(16'hA99B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #974 d8e96f70-15ff-4c52-ba97-99a2caf89294)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #974 1ba8e81c-368e-48bb-8583-2ed7c24509da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #974 f40e2c54-3182-4a7f-b407-a57cacca22b6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #974 a6e08104-9543-44f3-9e92-5094c8427c83)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #974 bd497b5c-820d-455c-976f-6b40ebafeb70)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #974 22e5e04c-50c6-4060-ad4b-7af6b183f846)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #974 b018268f-a169-497e-8062-d66995c05bd7)");

unit.assert_eq8(8'h9B, datamem_ext_i.datamem[13'h471],
"EXT DMEM (Testcase #974 a78d139f-16ba-4fba-b473-0b9cbf88a121)");
unit.assert_eq8(8'hA9, datamem_ext_i.datamem[13'h472],
"EXT DMEM (Testcase #974 f8fd97cc-c953-4687-a68f-b362eeaeb903)");
datamem_ext_i.datamem[13'h471] =
datamem_swap[16'h471];
datamem_ext_i.datamem[13'h472] =
datamem_swap[16'h472];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #975
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h84;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hCD5B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #975)");
    end
end

unit.assert_eq16(16'hCD5B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #975 358fe010-dc62-437f-89c5-765c8979d82a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #975 7d807510-e186-4d6c-ace9-35907e33183a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #975 ced69992-086b-4047-b4c7-7d0ed383cb40)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #975 803d1f07-7cb3-4af1-a5f3-eb7d4461ecd2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #975 8bd1bd60-e995-4332-8440-7d109ae8a05d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #975 8be5ac5c-27a9-47b1-9e18-bccb1adfa844)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #975 c9752b4e-b8d1-492b-ab4c-1fd931bfde48)");

unit.assert_eq8(8'h5B, datamem_ext_i.datamem[13'h222],
"EXT DMEM (Testcase #975 2e280959-caa7-4db0-bc16-d1355d651f87)");
unit.assert_eq8(8'hCD, datamem_ext_i.datamem[13'h223],
"EXT DMEM (Testcase #975 b5efc337-be91-4c16-9198-6dbb021ef7ed)");
datamem_ext_i.datamem[13'h222] =
datamem_swap[16'h222];
datamem_ext_i.datamem[13'h223] =
datamem_swap[16'h223];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #976
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDFD2;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #976)");
    end
end

unit.assert_eq16(16'hDFD2, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #976 1c501707-220b-4d91-9a9f-35b285772324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #976 3fc444bb-8316-4ab6-a570-09299938a46b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #976 55a2fa93-e74a-48a1-a6bf-9497602c22ef)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #976 1ff30d90-5617-48e8-a73a-a4f3a912e00b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #976 a3620d83-c499-4b66-a80c-b4aac7130fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #976 4c58eccf-eefa-4fad-8ea8-682def7539f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #976 1dab5737-ec70-4298-ad73-6628353bca9f)");

unit.assert_eq8(8'hD2, datamem_ext_i.datamem[13'hE53],
"EXT DMEM (Testcase #976 28e681ad-211d-434f-9ff7-49cbdab1758c)");
unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'hE54],
"EXT DMEM (Testcase #976 68e3b3c4-06ca-4012-a289-dca35328e05c)");
datamem_ext_i.datamem[13'hE53] =
datamem_swap[16'hE53];
datamem_ext_i.datamem[13'hE54] =
datamem_swap[16'hE54];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #977
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC2;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF649;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #977)");
    end
end

unit.assert_eq16(16'hF649, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #977 be00deae-1c1a-4790-9836-68c430fc495b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #977 8293de27-4e82-4c45-a1c2-bd8246e712bd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #977 c9f7e3dc-390d-43ea-b37c-a705a506b314)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #977 a8848bba-c565-4eb0-952b-5179f115e778)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #977 dd904eed-e4db-490b-a7ae-9198c0e3bd6f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #977 a6bf99a0-42b5-4fb4-b40d-8866753d0d46)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #977 6a63f186-709e-4688-8482-edcd87101211)");

unit.assert_eq8(8'h49, datamem_ext_i.datamem[13'hB72],
"EXT DMEM (Testcase #977 03e4beee-1434-4b9f-bc0a-25e8456893d8)");
unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'hB73],
"EXT DMEM (Testcase #977 0d976662-219c-47cd-a631-31cb396cf073)");
datamem_ext_i.datamem[13'hB72] =
datamem_swap[16'hB72];
datamem_ext_i.datamem[13'hB73] =
datamem_swap[16'hB73];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #978
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDEFA;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #978)");
    end
end

unit.assert_eq16(16'hDEFA, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #978 b698811d-65c1-449f-a789-11facb68abf5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #978 121d1cd3-7d51-491d-832b-4d364b8afdf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #978 4cb69318-9086-47a8-b514-3299e89cc3f6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #978 c143a085-02f6-4ad0-897d-9c1a3e4d5b82)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #978 d53ac43a-b86c-4d30-8251-47d7069d1340)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #978 00507c1c-d23f-4464-a71e-4014855b6c71)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #978 9afe6389-a565-4352-9e6b-8f0c2706c270)");

unit.assert_eq8(8'hFA, datamem_ext_i.datamem[13'h54E],
"EXT DMEM (Testcase #978 782536d3-2797-47a9-a3ff-606bb8c310e8)");
unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'h54F],
"EXT DMEM (Testcase #978 e68bc052-2a3f-45d8-ad79-f2eb649d3a92)");
datamem_ext_i.datamem[13'h54E] =
datamem_swap[16'h54E];
datamem_ext_i.datamem[13'h54F] =
datamem_swap[16'h54F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #979
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB1FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #979)");
    end
end

unit.assert_eq16(16'hB1FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #979 c27440a4-d63b-4518-a286-a97ebe6061c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #979 a9108d74-8808-4f2a-bf15-d940e44238d2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #979 290e8390-24a7-4a6c-b56b-228b1d57f601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #979 2d62a773-76a0-42ff-afd0-3fb0eedb9958)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #979 bb3588e2-56c5-40fe-af0a-03338bbed77e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #979 7a781603-0a5b-4f54-b98e-7a0050032dbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #979 0081fd39-7ca4-4d2e-9476-5eef595c3f2f)");

unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'hBF6],
"EXT DMEM (Testcase #979 ce522e85-4b63-4e87-b020-3b9a56fb90f1)");
unit.assert_eq8(8'hB1, datamem_ext_i.datamem[13'hBF7],
"EXT DMEM (Testcase #979 fa7aaa2d-b5d4-4f61-939a-ceac1a32ff26)");
datamem_ext_i.datamem[13'hBF6] =
datamem_swap[16'hBF6];
datamem_ext_i.datamem[13'hBF7] =
datamem_swap[16'hBF7];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #980
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h12;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF682;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #980)");
    end
end

unit.assert_eq16(16'hF682, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #980 2f157a2d-db5b-44b0-ba74-f644d0f33ac3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #980 79e2a784-78db-4f51-94e0-814d4b19a3d7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #980 46584ace-9b0d-4485-aa58-946b8aa743c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #980 4c4c28cb-b676-4d5a-bbcd-63527d119374)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #980 1b4b5cb7-42ca-435b-b42d-656264a3d994)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #980 2da24140-b036-4d6d-a473-9c6be8048296)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #980 ec4083da-04f8-4b27-b02e-824dad29deff)");

unit.assert_eq8(8'h82, datamem_ext_i.datamem[13'h5F4],
"EXT DMEM (Testcase #980 f24a84d8-fc96-4ea1-9b42-899e25e4a799)");
unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'h5F5],
"EXT DMEM (Testcase #980 46e1c165-f668-430c-8dda-c12c620ce37a)");
datamem_ext_i.datamem[13'h5F4] =
datamem_swap[16'h5F4];
datamem_ext_i.datamem[13'h5F5] =
datamem_swap[16'h5F5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #981
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h176E;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #981)");
    end
end

unit.assert_eq16(16'h176E, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #981 f660172a-f276-4a70-abcb-6ab8c346f5ea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #981 69f84c70-18e1-431e-b5f4-0c0faf3baf52)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #981 f3d986e4-c880-41fb-8ed1-ef4ff73413de)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #981 88d5e20f-65b0-4b8a-be9d-b93e75eda1ff)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #981 d4b0f707-5296-4ef9-95a1-3a27846345ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #981 7c8d310d-9121-4ccb-95a1-d67cdb4fc34f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #981 fe4fd9b1-ada7-4461-9a82-421a79fae695)");

unit.assert_eq8(8'h6E, datamem_ext_i.datamem[13'hF86],
"EXT DMEM (Testcase #981 dbd81be0-b4a3-4364-a908-27a3dab12a51)");
unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'hF87],
"EXT DMEM (Testcase #981 ca66a270-1ecf-4db4-9aa0-d9d7144d6406)");
datamem_ext_i.datamem[13'hF86] =
datamem_swap[16'hF86];
datamem_ext_i.datamem[13'hF87] =
datamem_swap[16'hF87];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #982
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0296;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #982)");
    end
end

unit.assert_eq16(16'h0296, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #982 a56a5bd2-bf09-4098-a637-cff392efe8e6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #982 26ee05b6-1871-483b-9ebb-89c44fb8be75)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #982 9588d2a6-3efa-4e74-9ab9-9508fecd18b7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #982 f0b98693-1717-4e68-a90d-393c8cd448dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #982 808802cd-cd20-4375-962f-7e1460078ea0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #982 8338322b-7fe3-43c9-aea6-3b79fd82cebe)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #982 f3506168-0c59-44a9-bd8c-c0c5781ca88b)");

unit.assert_eq8(8'h96, datamem_ext_i.datamem[13'hFAC],
"EXT DMEM (Testcase #982 309085d5-9ff7-4908-a577-19ac390461bf)");
unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'hFAD],
"EXT DMEM (Testcase #982 3d021f28-8393-48d1-a88c-62a1c741ef87)");
datamem_ext_i.datamem[13'hFAC] =
datamem_swap[16'hFAC];
datamem_ext_i.datamem[13'hFAD] =
datamem_swap[16'hFAD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #983
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h44E1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #983)");
    end
end

unit.assert_eq16(16'h44E1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #983 0d578946-e5dc-488d-9ecf-fc54e4358c96)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #983 b80e98f8-4501-4f50-a689-fe0c94eab3d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #983 0c8888bc-2dc9-4702-8c09-33d19bfcfb5d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #983 51c3564e-3e1c-4578-aaaf-c74ab382d07e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #983 0b349a00-135d-42a8-a06f-b4ae9b8e8a40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #983 a09253c2-6b39-4a47-bf95-4e8801969fd7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #983 239b58b5-a6d0-4d1f-ae98-fd9428446f80)");

unit.assert_eq8(8'hE1, datamem_ext_i.datamem[13'hC7F],
"EXT DMEM (Testcase #983 6754f310-5107-416d-b2dd-4599d55aa7a2)");
unit.assert_eq8(8'h44, datamem_ext_i.datamem[13'hC80],
"EXT DMEM (Testcase #983 066cac57-6359-4313-ad4a-e9b0fa5799ba)");
datamem_ext_i.datamem[13'hC7F] =
datamem_swap[16'hC7F];
datamem_ext_i.datamem[13'hC80] =
datamem_swap[16'hC80];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #984
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3D32;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #984)");
    end
end

unit.assert_eq16(16'h3D32, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #984 8ae5021d-333c-4c9e-8d21-90fcd61f1f21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #984 08846457-039a-4e05-a146-6eb6943329eb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #984 595ad8e8-3f55-482e-8aa2-59a8f3814fa2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #984 a8e33b56-b889-4044-b39c-0378ffa5effc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #984 5260a201-81a8-412a-ad6e-0bb8611d1592)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #984 7e923d58-7b93-4b2b-8066-31000629ec8c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #984 0c7c8ca3-580c-4c57-bbe4-9dcb3448fd63)");

unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'hBB3],
"EXT DMEM (Testcase #984 34d55576-f09b-4bce-94ff-46af8257ea5c)");
unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'hBB4],
"EXT DMEM (Testcase #984 072565c0-508b-4a00-b26f-6079a712288a)");
datamem_ext_i.datamem[13'hBB3] =
datamem_swap[16'hBB3];
datamem_ext_i.datamem[13'hBB4] =
datamem_swap[16'hBB4];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #985
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h15;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3F62;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #985)");
    end
end

unit.assert_eq16(16'h3F62, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #985 2ef08d6c-3904-451c-88fc-485c1ce4d3a9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #985 d1b3c920-de3b-4f39-b34f-9cf565687134)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #985 428d44d5-bf7e-4448-b038-c2136c562255)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #985 10be4ed1-7dc7-4d16-a610-eede3c346811)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #985 26b2942c-73ba-4d1f-a0cc-620a630d93e6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #985 e09cf6de-78f2-4a65-8f3b-9ab80351bd56)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #985 789b6112-ab85-41af-a368-a8e38967db26)");

unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'hBB0],
"EXT DMEM (Testcase #985 0bb1d2ad-cb36-4423-b0a1-e5f15bae8a66)");
unit.assert_eq8(8'h3F, datamem_ext_i.datamem[13'hBB1],
"EXT DMEM (Testcase #985 63017ffc-9122-4332-a4f8-3ef664c4b743)");
datamem_ext_i.datamem[13'hBB0] =
datamem_swap[16'hBB0];
datamem_ext_i.datamem[13'hBB1] =
datamem_swap[16'hBB1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #986
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD0;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD9CC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #986)");
    end
end

unit.assert_eq16(16'hD9CC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #986 85711dc1-dd74-41ce-b486-ef269c8cc05b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #986 0e240bcd-07ca-476f-a60c-7af36334af2e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #986 e5236d40-f066-43ae-be64-cded929061da)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #986 c14c9c2f-55d0-4035-8cd8-ee0fec504369)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #986 dcc9ad7d-d1ba-4ca6-adf5-29d4424ef987)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #986 ff830082-ea92-4b37-bc17-ce0a34757332)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #986 6aa6d5fd-e6bd-45d8-87f4-ed84656f8a65)");

unit.assert_eq8(8'hCC, datamem_ext_i.datamem[13'h9B1],
"EXT DMEM (Testcase #986 eb2efb7a-49b0-4d7c-b767-083af1b887cb)");
unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'h9B2],
"EXT DMEM (Testcase #986 821fd297-c2b5-4770-bcc0-c5710adfacaf)");
datamem_ext_i.datamem[13'h9B1] =
datamem_swap[16'h9B1];
datamem_ext_i.datamem[13'h9B2] =
datamem_swap[16'h9B2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #987
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h04;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB8A0;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #987)");
    end
end

unit.assert_eq16(16'hB8A0, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #987 eb40cd8a-5a96-4b8c-89ad-bbfb4386269c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #987 4d4c4c32-0c75-4e88-818e-c335a2855fef)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #987 5217583f-e7f9-400b-b867-161bb3061644)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #987 a8151559-d27e-417f-9651-649b10e6e7e9)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #987 321cbc62-203a-45bf-b5d3-93077b431cb3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #987 e64d825f-2ccb-4d8a-9b78-8c61494a0a92)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #987 3bfc1851-1f14-4436-af30-443842e7982e)");

unit.assert_eq8(8'hA0, datamem_ext_i.datamem[13'hF77],
"EXT DMEM (Testcase #987 d520e25d-2637-44bc-9768-fd808ea51488)");
unit.assert_eq8(8'hB8, datamem_ext_i.datamem[13'hF78],
"EXT DMEM (Testcase #987 821b75d2-b44a-4c7d-b3f0-025ac87b0a38)");
datamem_ext_i.datamem[13'hF77] =
datamem_swap[16'hF77];
datamem_ext_i.datamem[13'hF78] =
datamem_swap[16'hF78];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #988
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h55;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9D89;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #988)");
    end
end

unit.assert_eq16(16'h9D89, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #988 5cadeec2-3c83-4921-8ef6-eff7f9ee6692)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #988 14687bd8-430c-4626-a828-8378ef7b391b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #988 7bd9ad82-001e-416d-945d-f1b8cdf14458)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #988 9851d268-08d1-458d-a9b0-eba99c0ca0f4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #988 3e5268cc-b837-4a24-aba4-b6aa92d896ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #988 a0689dfc-e5a7-4f0d-8860-39a4877ba613)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #988 dd7f50f6-e082-4da9-8332-30f8fb5a79f0)");

unit.assert_eq8(8'h89, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h61],
"INT DMEM (Testcase #988 3948d23b-3c29-4461-89d6-ef6150a77cf3)");
unit.assert_eq8(8'h9D, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h62],
"INT DMEM (Testcase #988 3a471f26-a1ce-4fcd-aa10-ef979c706f09)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h61] =
datamem_swap[16'h61];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h62] =
datamem_swap[16'h62];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #989
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h8463;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #989)");
    end
end

unit.assert_eq16(16'h8463, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #989 20c43323-9d40-4973-9548-d7ccc1e63bfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #989 5b79aaa3-9446-4cb4-8099-1d735208123a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #989 09013dce-9249-4322-aaa0-6083109365f2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #989 35e423e9-354c-4964-aa15-511b174b2ae9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #989 f144bf3a-6c39-4054-be8e-b7183006c7f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #989 926a281c-c672-4c65-b56c-a85a55db1e11)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #989 26617f76-8df9-42a1-9708-48516699f5db)");

unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'h7BB],
"EXT DMEM (Testcase #989 28d2c231-0d95-4dc5-9d4c-64a36164d0be)");
unit.assert_eq8(8'h84, datamem_ext_i.datamem[13'h7BC],
"EXT DMEM (Testcase #989 1710b3a6-7a99-4756-a6e7-ced1e55dcb07)");
datamem_ext_i.datamem[13'h7BB] =
datamem_swap[16'h7BB];
datamem_ext_i.datamem[13'h7BC] =
datamem_swap[16'h7BC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #990
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD7;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h02C6;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #990)");
    end
end

unit.assert_eq16(16'h02C6, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #990 7ca082ef-1f70-49c1-88d7-0b611ab0857b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #990 5f17811c-f57b-4691-9ce7-f19519e75cdc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #990 0569ecc2-a7e3-40e6-baf9-bc230a0c5333)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #990 4f652b60-7344-4b45-9b4e-115a97f5e23f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #990 6744fa6e-487b-44e5-9154-a9270b32ae6a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #990 fc33c626-c2ec-4f25-bf25-93fde1ca4ade)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #990 992e23de-87ba-4985-9066-e3469ebf52ad)");

unit.assert_eq8(8'hC6, datamem_ext_i.datamem[13'h983],
"EXT DMEM (Testcase #990 55d0f49c-1d44-4601-94b0-be64b30b5530)");
unit.assert_eq8(8'h02, datamem_ext_i.datamem[13'h984],
"EXT DMEM (Testcase #990 f38ef3ed-5bbf-41a6-aac5-490395d2753d)");
datamem_ext_i.datamem[13'h983] =
datamem_swap[16'h983];
datamem_ext_i.datamem[13'h984] =
datamem_swap[16'h984];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #991
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4FA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #991)");
    end
end

unit.assert_eq16(16'h4FA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #991 5099fcfb-22a4-4cc1-b925-68aec1befac2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #991 70b403fd-cdfb-487b-b281-aedc304478c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #991 68c090c5-7e20-4479-b0ab-fed58f99de3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #991 ba86bf98-0a08-47c2-b731-2a17d1f89442)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #991 471639b3-b6b7-4488-b9d9-72777e3f3620)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #991 56909ead-2f69-44c6-95bc-26304295111b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #991 565c0971-fa71-44e0-9ae7-cbffe40d79d3)");

unit.assert_eq8(8'hA3, datamem_ext_i.datamem[13'h9DE],
"EXT DMEM (Testcase #991 620f7368-a373-4e4e-9cb2-5ff1ef628f9a)");
unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'h9DF],
"EXT DMEM (Testcase #991 6cf678bf-9b9a-4997-8568-6eca415318df)");
datamem_ext_i.datamem[13'h9DE] =
datamem_swap[16'h9DE];
datamem_ext_i.datamem[13'h9DF] =
datamem_swap[16'h9DF];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #992
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hF698;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #992)");
    end
end

unit.assert_eq16(16'hF698, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #992 37b9729d-0e53-4a25-a6ee-ed2bcc9e6e48)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #992 201f1f00-3158-4dbb-a7d5-69b7cf41db81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #992 97ed8d6f-ded7-436e-a15c-855c82581f55)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #992 732f3997-c2d1-41e9-a0f5-417eb4712e21)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #992 dd696489-d252-4a21-8aa2-60150dd79a11)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #992 57454690-0381-440f-976c-c28c2eba3e5f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #992 814df2d8-789c-41b8-8195-e177cb52afe5)");

unit.assert_eq8(8'h98, datamem_ext_i.datamem[13'hBC0],
"EXT DMEM (Testcase #992 f9681d9d-752f-4bd1-a327-c85162f3067b)");
unit.assert_eq8(8'hF6, datamem_ext_i.datamem[13'hBC1],
"EXT DMEM (Testcase #992 d5949dde-ea74-46d7-b72b-ec009ab59a63)");
datamem_ext_i.datamem[13'hBC0] =
datamem_swap[16'hBC0];
datamem_ext_i.datamem[13'hBC1] =
datamem_swap[16'hBC1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #993
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC4;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h191F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #993)");
    end
end

unit.assert_eq16(16'h191F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #993 e292ebf2-43c0-478a-90f9-3a06874b5bcc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #993 f85347fd-7ef5-47c5-8e1f-4292e7ada1ab)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #993 aa69900c-9bf1-45dc-b4ec-2dc47bab144e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #993 0ad43e2b-28f8-4e46-8c34-f5d830511fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #993 e94e0c41-2e91-4670-97b4-3d6c12d6aa5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #993 ab3d0233-4450-4c78-a69b-d3d9b1b39302)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #993 2be8cec2-13d6-4bef-b150-13dfcceaf523)");

unit.assert_eq8(8'h1F, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8C],
"INT DMEM (Testcase #993 d7c7e7d2-6f3d-4b44-897b-03136af11204)");
unit.assert_eq8(8'h19, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8D],
"INT DMEM (Testcase #993 3b79db57-a6a0-477d-981d-3291e48d9797)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8C] =
datamem_swap[16'h18C];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i2.Memory[8'h8D] =
datamem_swap[16'h18D];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #994
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4412;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #994)");
    end
end

unit.assert_eq16(16'h4412, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #994 ba8ab2c0-ba23-4063-953b-a9774ece33d7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #994 36543df0-2aa6-4cb9-9f46-309bed521a7d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #994 9d0e4fb4-2a3d-4dba-a6af-fe4fb08047fd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #994 e001c001-a3fe-4383-9f2c-9cf8363c0ad5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #994 8c413e07-eba5-4563-b97b-9c85ab9a720a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #994 ba7f91de-4dfb-497f-b4da-276508b7172f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #994 dff372a6-4159-470e-9102-87e41d4a05ad)");

unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h7E5],
"EXT DMEM (Testcase #994 e56dc0f2-2822-4b99-897f-d23477cfba69)");
unit.assert_eq8(8'h44, datamem_ext_i.datamem[13'h7E6],
"EXT DMEM (Testcase #994 f2cdf38b-75dd-41b0-857e-08ba596ebdf5)");
datamem_ext_i.datamem[13'h7E5] =
datamem_swap[16'h7E5];
datamem_ext_i.datamem[13'h7E6] =
datamem_swap[16'h7E6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #995
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDEF4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #995)");
    end
end

unit.assert_eq16(16'hDEF4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #995 fef1238c-412a-4807-8c60-e0b69372c223)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #995 cdb7d29a-8383-44ac-a0dd-6d5bf5681f1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #995 2991dc23-2e08-41e3-a222-52e42dc2960d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #995 d7aaf510-85d0-4632-bcf0-4da742aedc31)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #995 8250191f-2156-48a3-a197-2a0503f4f0f8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #995 3af7530c-67df-479e-a101-8f294adf4c86)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #995 4eb6989a-daa2-4877-a494-3386385f2682)");

unit.assert_eq8(8'hF4, datamem_ext_i.datamem[13'h5F4],
"EXT DMEM (Testcase #995 782407fa-0fe7-4703-b0b2-8b28e54daaa8)");
unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'h5F5],
"EXT DMEM (Testcase #995 7cd9a649-0ea0-4838-a313-531508472ab8)");
datamem_ext_i.datamem[13'h5F4] =
datamem_swap[16'h5F4];
datamem_ext_i.datamem[13'h5F5] =
datamem_swap[16'h5F5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #996
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h01;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3AE4;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #996)");
    end
end

unit.assert_eq16(16'h3AE4, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #996 8af97f10-222d-4b04-9f60-dec4a2f8deea)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #996 e892bb3b-79c6-48ee-abc5-0bc6f08e3bc1)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #996 9665d8f1-d16d-48e4-bd68-404652fe8b81)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #996 8879423f-0db0-476c-84f4-2f0e844d09af)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #996 700b9a53-32b4-478e-954b-613ef9edcd38)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #996 cae98e3e-2e1e-4da7-ace3-05c9d39cbe10)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #996 ad1a36d1-ef72-4ef6-893e-b5b9ea257848)");

unit.assert_eq8(8'hE4, datamem_ext_i.datamem[13'h3F2],
"EXT DMEM (Testcase #996 bb502ae8-39fe-47ca-ab39-18f8cb644c7e)");
unit.assert_eq8(8'h3A, datamem_ext_i.datamem[13'h3F3],
"EXT DMEM (Testcase #996 7bb426e2-389f-4863-8fbe-c4cb592b262e)");
datamem_ext_i.datamem[13'h3F2] =
datamem_swap[16'h3F2];
datamem_ext_i.datamem[13'h3F3] =
datamem_swap[16'h3F3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #997
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB17;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #997)");
    end
end

unit.assert_eq16(16'hAB17, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #997 b082d5d6-88bb-43b5-bbb9-a7d61813a58e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #997 cb192c1e-c546-459f-9ae1-ed36d00cad29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #997 8b6f90c8-75ae-4c56-8a78-2ec4d722ae8a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #997 3c5b0f51-4b2d-43ac-b679-ae20fbc1b370)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #997 c10cad0f-4f14-48d3-ac57-3a3736e68c18)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #997 026d6d99-ae47-4f35-9fc3-5680a7f2b696)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #997 343f611d-717a-4836-8926-5bea5ef99059)");

unit.assert_eq8(8'h17, datamem_ext_i.datamem[13'hA4F],
"EXT DMEM (Testcase #997 fbc3ce10-d163-4150-b0f7-8d0a4792f380)");
unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'hA50],
"EXT DMEM (Testcase #997 4c28e9d4-33fc-4488-bd7f-0b4750a62e2c)");
datamem_ext_i.datamem[13'hA4F] =
datamem_swap[16'hA4F];
datamem_ext_i.datamem[13'hA50] =
datamem_swap[16'hA50];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #998
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h14;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB0B5;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #998)");
    end
end

unit.assert_eq16(16'hB0B5, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #998 91f5ad9f-15bd-4434-8cfd-8626c3662aac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #998 d5af9939-a24c-40bd-95d8-e1a93c5d81c2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #998 6815034e-9039-44c3-8c05-f25a87972adb)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #998 3f4b84fc-5aeb-4f39-9cd3-dc904eb405e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #998 c82b3680-a40a-4dfa-81c2-8a280634bb5b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #998 45acac35-4bca-402d-9fa0-4b0a2ff8f9ae)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #998 5bc572ef-3e58-4bf8-84c5-89e7c24c31ce)");

unit.assert_eq8(8'hB5, datamem_ext_i.datamem[13'hE94],
"EXT DMEM (Testcase #998 1ebe9852-8045-4bd0-9518-3e1a2703d995)");
unit.assert_eq8(8'hB0, datamem_ext_i.datamem[13'hE95],
"EXT DMEM (Testcase #998 7e489618-f7c9-47eb-a455-01b0fc0d79a8)");
datamem_ext_i.datamem[13'hE94] =
datamem_swap[16'hE94];
datamem_ext_i.datamem[13'hE95] =
datamem_swap[16'hE95];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #999
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h03;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h56BE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #999)");
    end
end

unit.assert_eq16(16'h56BE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #999 e56ff3bb-ff39-4b0e-a835-9939d2a8bbfe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #999 af1fc8fa-9d34-4948-a194-1ccd46cc1e88)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #999 41f3d20b-b6b9-4079-96ee-f94518bbeabd)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #999 555b9ab2-dded-438a-ba71-de46530271da)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #999 bfc87aa2-4727-4e9f-b154-200d3371a30f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #999 a23c3323-7352-4607-803b-d3e0f49e47de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #999 f7b746ce-5fd9-4d65-a6f2-6135cb4011bf)");

unit.assert_eq8(8'hBE, datamem_ext_i.datamem[13'hEE2],
"EXT DMEM (Testcase #999 c4ebf9f3-544b-42d5-84e3-5335195ead46)");
unit.assert_eq8(8'h56, datamem_ext_i.datamem[13'hEE3],
"EXT DMEM (Testcase #999 e9044656-5157-4025-848c-0db9b29ffb46)");
datamem_ext_i.datamem[13'hEE2] =
datamem_swap[16'hEE2];
datamem_ext_i.datamem[13'hEE3] =
datamem_swap[16'hEE3];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1000
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h52;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h283D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1000)");
    end
end

unit.assert_eq16(16'h283D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1000 a345ef0f-0191-4db0-977e-16281c569331)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1000 6a5056e9-c1bf-4a16-b478-f3921da48a05)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1000 c81f634d-df10-4694-9fc9-5d0202e3051b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1000 544a8e74-9c72-4bb7-88f6-a290f0977f13)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1000 9634b471-b9d3-4249-b4c5-f4f59a7ea9d1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1000 8f4843bd-dc40-4950-9e55-c23eaae9bef2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1000 d0ac2dc7-8a6a-4e76-b434-aae4a4663058)");

unit.assert_eq8(8'h3D, datamem_ext_i.datamem[13'h388],
"EXT DMEM (Testcase #1000 7ff2898a-8882-4250-9516-df9478150af4)");
unit.assert_eq8(8'h28, datamem_ext_i.datamem[13'h389],
"EXT DMEM (Testcase #1000 b59c3ccd-1f38-409a-996b-f4f74c252376)");
datamem_ext_i.datamem[13'h388] =
datamem_swap[16'h388];
datamem_ext_i.datamem[13'h389] =
datamem_swap[16'h389];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1001
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h62C1;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1001)");
    end
end

unit.assert_eq16(16'h62C1, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1001 4219a161-c897-4478-9b4c-c09b87b4e14b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1001 235d7036-7909-4669-9c74-0e1ec3c6440d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1001 b5a45f5d-0398-4330-b15c-0d8e683809dd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1001 7213d1be-5e24-48cb-8cad-b405c78688a5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1001 ed47e584-e5b7-4790-9bd1-2d2553bce1f7)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1001 9728ce80-f8b2-4b66-a0f9-80d8803509ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1001 ae466fe2-68e6-4108-92ed-76ed26a7e9a3)");

unit.assert_eq8(8'hC1, datamem_ext_i.datamem[13'h59B],
"EXT DMEM (Testcase #1001 1966b4ce-ef72-4bff-b6b9-83d526e2e79c)");
unit.assert_eq8(8'h62, datamem_ext_i.datamem[13'h59C],
"EXT DMEM (Testcase #1001 94956062-015e-4ed9-af4f-70c781d11286)");
datamem_ext_i.datamem[13'h59B] =
datamem_swap[16'h59B];
datamem_ext_i.datamem[13'h59C] =
datamem_swap[16'h59C];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1002
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h54;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5AD9;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1002)");
    end
end

unit.assert_eq16(16'h5AD9, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1002 18ec16d6-2dd5-4621-877d-5387cc495228)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1002 58c45e65-e308-41ac-9471-974af08c2fbd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1002 453c2007-e618-4d1d-9cbd-fcb67b68825a)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1002 921ab997-12a6-43f4-b0bd-6c60fa68cc8c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1002 ce482b42-0c3b-44d6-84e2-a82b7886157e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1002 c803fca9-7989-4ae6-9d27-b655e38550ab)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1002 82e18fed-d0da-447b-b88e-41ca5bea0ee3)");

unit.assert_eq8(8'hD9, datamem_ext_i.datamem[13'h605],
"EXT DMEM (Testcase #1002 f5c643f0-84df-451d-8d4c-702fcdcd8830)");
unit.assert_eq8(8'h5A, datamem_ext_i.datamem[13'h606],
"EXT DMEM (Testcase #1002 872f9d7c-1dab-406f-9f24-15e9cb8209a9)");
datamem_ext_i.datamem[13'h605] =
datamem_swap[16'h605];
datamem_ext_i.datamem[13'h606] =
datamem_swap[16'h606];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1003
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h96;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4F1B;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1003)");
    end
end

unit.assert_eq16(16'h4F1B, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1003 474e342f-20da-4b11-9c84-12071d92a064)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1003 44c953b1-a3b8-49cb-996b-2f625654c655)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1003 05e6b6f8-3ed5-40dc-a4da-5b59a42cb9a7)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1003 1e2cb78b-e4a0-493a-92cb-cd2739dfef80)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1003 0b9b27f5-5061-4058-830a-b3a68e4b57e0)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1003 aa72d9aa-872f-4d73-928f-8a5fb7ec3c2e)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1003 9b5aaaed-e889-49dd-b1ff-d622218a382f)");

unit.assert_eq8(8'h1B, datamem_ext_i.datamem[13'h6D1],
"EXT DMEM (Testcase #1003 9dc371d0-6c57-4d95-86a7-06e9799902d2)");
unit.assert_eq8(8'h4F, datamem_ext_i.datamem[13'h6D2],
"EXT DMEM (Testcase #1003 dea92eea-c661-4198-83b5-436fe1086a81)");
datamem_ext_i.datamem[13'h6D1] =
datamem_swap[16'h6D1];
datamem_ext_i.datamem[13'h6D2] =
datamem_swap[16'h6D2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1004
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h43;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h74FE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1004)");
    end
end

unit.assert_eq16(16'h74FE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1004 51c38648-55a3-46b9-8e69-628925795fa5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1004 58b6bd2d-59a9-4833-9172-729ad574b05b)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1004 d62d2061-95f7-4d0f-8add-0ed7e0f524a6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1004 963e3ef6-55a0-4170-85f8-8dd280a1e0ee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1004 b4c2b34a-75fa-4bcb-8e04-aa04eb57db3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1004 a3f03142-df24-416f-8187-6802d13f4a5e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1004 fe036ca2-5967-45f7-97a4-cb61956a2980)");

unit.assert_eq8(8'hFE, datamem_ext_i.datamem[13'h878],
"EXT DMEM (Testcase #1004 446b3cf7-d4dd-4b51-8877-2f39d1e48d7d)");
unit.assert_eq8(8'h74, datamem_ext_i.datamem[13'h879],
"EXT DMEM (Testcase #1004 124e13a3-cf8e-432c-8f0e-547dece1ccca)");
datamem_ext_i.datamem[13'h878] =
datamem_swap[16'h878];
datamem_ext_i.datamem[13'h879] =
datamem_swap[16'h879];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1005
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hC3;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h4351;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1005)");
    end
end

unit.assert_eq16(16'h4351, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1005 10ed1a77-1894-4a61-898b-66e007049798)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1005 f5c4f0a8-a227-40c6-bf58-3468a28f6995)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1005 39510845-8008-40c4-90fe-35007ad8a123)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1005 0628c921-66fb-45ab-9edc-546549994669)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1005 a5cdcb38-2ca1-425d-843a-9e64cd70c47d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1005 3a363931-052b-49e7-b12e-e66c77c95120)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1005 de294ddb-9121-4821-89ce-89f7cdbf4d0f)");

unit.assert_eq8(8'h51, datamem_ext_i.datamem[13'hAB0],
"EXT DMEM (Testcase #1005 ab1abc6a-6cea-4914-a6d8-95995ddb949f)");
unit.assert_eq8(8'h43, datamem_ext_i.datamem[13'hAB1],
"EXT DMEM (Testcase #1005 ffdba28e-b36b-4cc1-8c8b-2582a92bcfd8)");
datamem_ext_i.datamem[13'hAB0] =
datamem_swap[16'hAB0];
datamem_ext_i.datamem[13'hAB1] =
datamem_swap[16'hAB1];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1006
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h45;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h5DEE;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1006)");
    end
end

unit.assert_eq16(16'h5DEE, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1006 ba78cdb9-cf28-4a6f-9f6f-0ff1ae108795)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1006 9a39b43d-62e6-4cea-8431-4677d90d2d29)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1006 5df7182a-de2a-49ff-b1f7-26b5f17dd603)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1006 6aa683be-9c0b-4b62-a704-149fc1912867)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1006 8aa2eb1f-fb97-4411-bcdb-9de8f80e4cf9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1006 7e8d487d-e69e-49bc-ba51-fcbfed029166)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1006 7d161210-e6ef-4648-a455-ede4dcfa470a)");

unit.assert_eq8(8'hEE, datamem_ext_i.datamem[13'hFE7],
"EXT DMEM (Testcase #1006 b081d214-0576-4b64-964d-082029bac167)");
unit.assert_eq8(8'h5D, datamem_ext_i.datamem[13'hFE8],
"EXT DMEM (Testcase #1006 94b134f9-ca97-45a4-8e75-cda09732b3ff)");
datamem_ext_i.datamem[13'hFE7] =
datamem_swap[16'hFE7];
datamem_ext_i.datamem[13'hFE8] =
datamem_swap[16'hFE8];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1007
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h127F;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1007)");
    end
end

unit.assert_eq16(16'h127F, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1007 39e4a417-1336-4e57-9255-ac497772eca8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1007 30020fad-3e5c-419c-b0f0-e9fee044c829)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1007 6bd3d1b7-44cd-4178-9ec7-4c48578ed649)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1007 1843b333-faa5-490e-a049-eb9d2e982e87)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1007 fd861435-82ea-4816-9d58-be0d8bf9cc2c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1007 3220be64-d0fb-4e9c-8b48-3870f5dcf151)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1007 2242691a-5270-46dd-adce-42fb25e3309c)");

unit.assert_eq8(8'h7F, datamem_ext_i.datamem[13'h2A5],
"EXT DMEM (Testcase #1007 3a937d2b-b012-4078-85c8-884df6780ffa)");
unit.assert_eq8(8'h12, datamem_ext_i.datamem[13'h2A6],
"EXT DMEM (Testcase #1007 dd880d5d-2663-49c9-947d-673988c56faa)");
datamem_ext_i.datamem[13'h2A5] =
datamem_swap[16'h2A5];
datamem_ext_i.datamem[13'h2A6] =
datamem_swap[16'h2A6];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1008
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDE2C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1008)");
    end
end

unit.assert_eq16(16'hDE2C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1008 c0c2cb1c-eabc-4fd8-829b-1e7ab23ac530)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1008 bb559954-d567-4ee0-8e20-72c292047e76)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1008 ecc3aaa4-43c8-46af-b175-c6c36d410f63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1008 6d64d65b-53e7-4dbc-a45e-6ffdd952370c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1008 e1e885bf-2913-4d89-a1dd-b7b83c5a8df3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1008 6e1e36f6-0ad8-4d1a-a742-1d46581bb451)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1008 31c5d31c-ce60-4c31-a748-164ac7e05769)");

unit.assert_eq8(8'h2C, datamem_ext_i.datamem[13'h79D],
"EXT DMEM (Testcase #1008 699a432a-8246-4785-8997-65688cc2d8a2)");
unit.assert_eq8(8'hDE, datamem_ext_i.datamem[13'h79E],
"EXT DMEM (Testcase #1008 a4be360a-6c1c-486a-9152-b6b9d9b8a7ca)");
datamem_ext_i.datamem[13'h79D] =
datamem_swap[16'h79D];
datamem_ext_i.datamem[13'h79E] =
datamem_swap[16'h79E];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1009
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h51;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h52EC;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1009)");
    end
end

unit.assert_eq16(16'h52EC, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1009 dfc0be62-0671-40b1-960f-75bcd040b756)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1009 b306075a-fc4a-49ac-8ecb-655da2bcfe32)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1009 ba5cfeb2-ea1d-4c1f-bf1b-896ad0636b1f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1009 61c9d821-5403-42d2-8256-77d0c4c593b3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1009 87f4cb49-3800-441b-a1f1-3d96d5652723)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1009 45422495-e1b2-4781-8ae1-7c6cb6e9c354)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1009 18c66932-9fdf-4028-9aab-e3ee3cef49c9)");

unit.assert_eq8(8'hEC, datamem_ext_i.datamem[13'hDF1],
"EXT DMEM (Testcase #1009 3395fe90-115f-4670-87a6-81e255539ac7)");
unit.assert_eq8(8'h52, datamem_ext_i.datamem[13'hDF2],
"EXT DMEM (Testcase #1009 a627c890-3a9c-4c6a-b710-f1a852a85187)");
datamem_ext_i.datamem[13'hDF1] =
datamem_swap[16'hDF1];
datamem_ext_i.datamem[13'hDF2] =
datamem_swap[16'hDF2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1010
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h13;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hB776;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1010)");
    end
end

unit.assert_eq16(16'hB776, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1010 663d691b-d121-4bad-bb42-353e1dd5ede2)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1010 01f946b2-5d2e-4c29-b8ad-844b752d8217)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1010 9a6b475a-f3a6-420d-b92c-55e5c373d818)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1010 a691d3cb-9ef4-4e53-be4d-1ed7950a830d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1010 b9692180-5af6-4f92-bc19-dee6c12c5eb8)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1010 7bc3a456-08d8-4d34-be6d-56fda1905655)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1010 5c8b2263-054d-4ec4-b90a-effa3205a06f)");

unit.assert_eq8(8'h76, datamem_ext_i.datamem[13'h6A4],
"EXT DMEM (Testcase #1010 466b3ceb-be9c-45be-bb8e-8c27731bf17d)");
unit.assert_eq8(8'hB7, datamem_ext_i.datamem[13'h6A5],
"EXT DMEM (Testcase #1010 5b628a27-4a50-4b7c-bd3d-f72af2b4bd41)");
datamem_ext_i.datamem[13'h6A4] =
datamem_swap[16'h6A4];
datamem_ext_i.datamem[13'h6A5] =
datamem_swap[16'h6A5];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1011
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD6;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9BBD;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1011)");
    end
end

unit.assert_eq16(16'h9BBD, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1011 830b0bc6-7cb6-484e-b28e-763d287c8324)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1011 55311da4-6f34-41a8-a0ad-b4263b618601)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1011 02baf228-86b0-448a-bcff-723b49c7844f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1011 1cd4ce06-26da-4625-b274-a8a3786ee2bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1011 52d2a405-3fd1-4f2c-bebe-54d9c32745e3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1011 42d5b5e9-f0db-444f-8ef3-134403455094)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1011 99522499-bc62-4898-ae5b-13d476cfc1ac)");

unit.assert_eq8(8'hBD, datamem_ext_i.datamem[13'h6B9],
"EXT DMEM (Testcase #1011 ce48eefb-e28b-4ec6-9dd6-b3a7167efbf7)");
unit.assert_eq8(8'h9B, datamem_ext_i.datamem[13'h6BA],
"EXT DMEM (Testcase #1011 d8cdabe2-b32b-405e-9fc3-27ff2934c812)");
datamem_ext_i.datamem[13'h6B9] =
datamem_swap[16'h6B9];
datamem_ext_i.datamem[13'h6BA] =
datamem_swap[16'h6BA];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1012
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h82;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0145;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1012)");
    end
end

unit.assert_eq16(16'h0145, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1012 fe0fb95a-477a-4626-aa55-b3bc7004ee64)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1012 41a9b94c-9c66-4dcb-b671-1c3c4520cda8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1012 041612d7-4fb8-411b-ad3e-5554a9f154f8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1012 43afa0bd-c2c3-4cc7-b47c-d71b7b2541ac)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1012 4d70b014-1881-432c-b934-2c0b51c14968)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1012 a528a9c5-dacf-4ff7-b89f-8cdde0851388)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1012 a42a65c1-7063-4bec-834d-0715217541d4)");

unit.assert_eq8(8'h45, datamem_ext_i.datamem[13'h4FC],
"EXT DMEM (Testcase #1012 0a2515b5-9b2d-493a-b075-9dc660376d1c)");
unit.assert_eq8(8'h01, datamem_ext_i.datamem[13'h4FD],
"EXT DMEM (Testcase #1012 92523532-fe41-4628-9810-4df7f6cd85eb)");
datamem_ext_i.datamem[13'h4FC] =
datamem_swap[16'h4FC];
datamem_ext_i.datamem[13'h4FD] =
datamem_swap[16'h4FD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1013
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h40;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0D63;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1013)");
    end
end

unit.assert_eq16(16'h0D63, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1013 f6c4f338-0f41-49c2-958e-07d8c729e52a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1013 d6c8e44e-74ee-4fdc-a898-569259395fd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1013 924a4583-1ed1-4ee7-8bd0-2500b264d18f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1013 65bcb4b6-77d2-4ebd-8ec5-6dd781f9e227)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1013 48c818a5-70f1-475b-bd7e-acb4a01c9efe)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1013 4ef7a2e5-f940-449c-962c-873c54f332df)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1013 b86c7b09-4d9b-4acf-9f44-83dc604e4c14)");

unit.assert_eq8(8'h63, datamem_ext_i.datamem[13'h331],
"EXT DMEM (Testcase #1013 d2ad0891-9000-41de-94f2-4554872d92cf)");
unit.assert_eq8(8'h0D, datamem_ext_i.datamem[13'h332],
"EXT DMEM (Testcase #1013 312ae6e0-b747-4cd3-8878-1e01e7fe57ee)");
datamem_ext_i.datamem[13'h331] =
datamem_swap[16'h331];
datamem_ext_i.datamem[13'h332] =
datamem_swap[16'h332];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1014
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h97;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h297C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1014)");
    end
end

unit.assert_eq16(16'h297C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1014 e2efe6e9-6d22-4e54-9a5e-8651a8398e3f)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1014 b8970ed9-e9d2-4b15-803f-192cd3c16535)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1014 ec130012-1d84-4630-9ead-ec9e2c81e39e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1014 ced6cb96-ff98-40e0-bf48-e0e01afaf1c5)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1014 23a0dde6-0e8b-487b-85cd-ec679e71c68e)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1014 4a663d7b-45a2-40c4-87f1-fba6d631260d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1014 49dca72d-6b03-481a-93d0-dde14e9b37a1)");

unit.assert_eq8(8'h7C, datamem_ext_i.datamem[13'hABB],
"EXT DMEM (Testcase #1014 b259d7e3-f3f3-404b-9186-38a172b45eef)");
unit.assert_eq8(8'h29, datamem_ext_i.datamem[13'hABC],
"EXT DMEM (Testcase #1014 2a691968-e920-4eb4-9e3c-09da0b90ec65)");
datamem_ext_i.datamem[13'hABB] =
datamem_swap[16'hABB];
datamem_ext_i.datamem[13'hABC] =
datamem_swap[16'hABC];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1015
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h46;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h0E6D;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1015)");
    end
end

unit.assert_eq16(16'h0E6D, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1015 b7439dce-6819-405c-a934-83d6785d9f6d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1015 9929db4e-4cf2-4246-af2f-b77bd7f87bba)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1015 1466f640-6453-47a3-a981-150712f568c9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1015 0e831063-a93e-42ac-bea8-b85342ba89d6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1015 1a99d316-75d8-484a-a41a-8bffa2d9f9c6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1015 ee0e8557-0c14-4cee-a0b4-25abd82ab57a)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1015 7563e872-f6bb-4abc-86bc-bc874c599b0c)");

unit.assert_eq8(8'h6D, datamem_ext_i.datamem[13'hE82],
"EXT DMEM (Testcase #1015 53a0134b-af94-47b6-9e0f-25793fc609d2)");
unit.assert_eq8(8'h0E, datamem_ext_i.datamem[13'hE83],
"EXT DMEM (Testcase #1015 02bdd2d9-acab-410a-a8a7-cc548008c4cb)");
datamem_ext_i.datamem[13'hE82] =
datamem_swap[16'hE82];
datamem_ext_i.datamem[13'hE83] =
datamem_swap[16'hE83];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1016
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h00;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h9AA3;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1016)");
    end
end

unit.assert_eq16(16'h9AA3, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1016 00fed85a-3eb7-41b7-bbe9-8388fc2d820d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1016 c2616723-e601-46c6-8ca7-147a31a9ee24)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1016 346087af-bbcb-4741-90c5-8b7e0d540ca0)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1016 271c5dbd-7f30-44e6-8fe1-d9bf76db8764)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1016 cd7f710e-22ce-4a22-87e4-2d50d6ae770d)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1016 bff355b3-96e4-419a-b7df-a0acfbb72adb)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1016 3db28262-a2d8-4a57-8817-8267843f8994)");

unit.assert_eq8(8'hA3, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h51],
"INT DMEM (Testcase #1016 7beb1ff4-a553-4fa4-b9f5-962f0b8d3539)");
unit.assert_eq8(8'h9A, top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h52],
"INT DMEM (Testcase #1016 104e7d39-b0ef-4939-8fe4-56fe23cc70d6)");
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h51] =
datamem_swap[16'h51];
top_z80_i.z80_i.memory_control_i.idram_i.SY180_256X8X1CM8_i1.Memory[8'h52] =
datamem_swap[16'h52];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1017
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h57;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hD7EF;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1017)");
    end
end

unit.assert_eq16(16'hD7EF, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1017 455ae248-70a1-4f05-a967-06fa72a1d5cc)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1017 0f5b473f-f431-4f26-9c3d-babd40caa6c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1017 c808e390-847d-4cc0-a05d-504b72578bfd)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1017 bf313880-71a5-4351-b7b0-a3d4fd67dd20)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1017 37ae0e74-58be-4aad-ae11-59dfcb1c33f3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1017 a80a792e-d0e6-4873-9cc8-765bbc4e6767)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1017 a66e8561-fba1-4b8a-9d5c-b1f8065d01a9)");

unit.assert_eq8(8'hEF, datamem_ext_i.datamem[13'hEF1],
"EXT DMEM (Testcase #1017 c8662280-9462-4afb-aafd-a02ae9ef5d40)");
unit.assert_eq8(8'hD7, datamem_ext_i.datamem[13'hEF2],
"EXT DMEM (Testcase #1017 8011f89e-3416-4f51-bd22-6c0830a22daa)");
datamem_ext_i.datamem[13'hEF1] =
datamem_swap[16'hEF1];
datamem_ext_i.datamem[13'hEF2] =
datamem_swap[16'hEF2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1018
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h81;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h3277;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1018)");
    end
end

unit.assert_eq16(16'h3277, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1018 8823712e-a39f-4cd3-903b-d2aff8a285de)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1018 1f8a868e-22fa-4fba-a947-fd43029660f5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1018 6b82aace-be91-4b3f-9dbb-88030e13e9e3)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1018 f546e373-a5ff-45af-adb3-29939257a4a8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1018 307fc884-7ea9-4b18-8c61-308dde79cee4)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1018 0f3023d8-cdd6-4cc8-bf8f-82efd6d167c4)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1018 86af4e1c-2a0f-4229-b518-ea9c586d5c72)");

unit.assert_eq8(8'h77, datamem_ext_i.datamem[13'h3C1],
"EXT DMEM (Testcase #1018 3a3e360a-8306-4a27-8b65-78764cfbc967)");
unit.assert_eq8(8'h32, datamem_ext_i.datamem[13'h3C2],
"EXT DMEM (Testcase #1018 f1ae5ab0-b58b-476b-9efc-6b6454b6cd4d)");
datamem_ext_i.datamem[13'h3C1] =
datamem_swap[16'h3C1];
datamem_ext_i.datamem[13'h3C2] =
datamem_swap[16'h3C2];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1019
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h16;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hE8B8;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1019)");
    end
end

unit.assert_eq16(16'hE8B8, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1019 4fe59f88-eb55-4d4f-a9ca-3a736d370aee)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1019 876fc831-e80d-4f18-af34-e45d81742b0b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1019 e4c83ab0-d010-4c68-a254-bca3c96efdbf)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1019 6bacea37-3c89-46a1-9575-a25dea474ac6)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1019 ec91a829-48b1-4790-8192-e7e440c92c1c)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1019 abcbafb3-5a8f-476e-a18e-2db3b988500c)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1019 1972201c-67a4-4bdc-9293-227f7800225e)");

unit.assert_eq8(8'hB8, datamem_ext_i.datamem[13'h3FC],
"EXT DMEM (Testcase #1019 59b11128-e823-422d-a416-a850d5cf263d)");
unit.assert_eq8(8'hE8, datamem_ext_i.datamem[13'h3FD],
"EXT DMEM (Testcase #1019 b372a27f-c023-4a08-8394-922feda93a63)");
datamem_ext_i.datamem[13'h3FC] =
datamem_swap[16'h3FC];
datamem_ext_i.datamem[13'h3FD] =
datamem_swap[16'h3FD];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1020
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD5;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hA826;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1020)");
    end
end

unit.assert_eq16(16'hA826, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1020 7bd94933-1b49-4cb1-886f-7e0beef8bd81)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1020 e7dccc22-474b-4621-b737-09433ffdcc1d)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1020 bf2c78c2-698a-4c9a-8aba-13363c8c1551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1020 344cc8bb-5a2c-4b56-840c-0ee62a17d586)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1020 9668c7af-2e72-4bee-bf52-d2ca56a4582b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1020 f82fd25b-552b-4725-b9b8-5c176f8979d3)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1020 e47d9410-373c-4a09-9b7c-1a6ffdb45be7)");

unit.assert_eq8(8'h26, datamem_ext_i.datamem[13'hC9E],
"EXT DMEM (Testcase #1020 e785d9d2-c44d-4a6e-8851-9739b61e112f)");
unit.assert_eq8(8'hA8, datamem_ext_i.datamem[13'hC9F],
"EXT DMEM (Testcase #1020 3b2a3bdb-99a6-4a43-a499-52e535e5bafb)");
datamem_ext_i.datamem[13'hC9E] =
datamem_swap[16'hC9E];
datamem_ext_i.datamem[13'hC9F] =
datamem_swap[16'hC9F];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1021
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'hD1;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hDF36;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1021)");
    end
end

unit.assert_eq16(16'hDF36, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1021 db178ba5-7323-4c0f-9a2f-980828904920)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1021 01824411-1792-4d01-9c54-52e3804f6f40)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1021 62cb921c-8d7e-40c8-bdd9-7bf50cb0d9c2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1021 4b1499ad-deea-4509-9670-ea9c54104ff6)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1021 52503765-f694-4ed9-86d5-224c2892dac9)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1021 e988f021-401a-4810-bf60-1295c4165dd1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1021 a238f344-8b4c-4b45-846c-a97ed828f675)");

unit.assert_eq8(8'h36, datamem_ext_i.datamem[13'hB39],
"EXT DMEM (Testcase #1021 27fc1c29-d0c4-4056-9436-f5e68831b3a1)");
unit.assert_eq8(8'hDF, datamem_ext_i.datamem[13'hB3A],
"EXT DMEM (Testcase #1021 e98f00db-fc51-4e62-a700-b7417c0a2134)");
datamem_ext_i.datamem[13'hB39] =
datamem_swap[16'hB39];
datamem_ext_i.datamem[13'hB3A] =
datamem_swap[16'hB3A];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1022
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h53;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'hAB3C;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1022)");
    end
end

unit.assert_eq16(16'hAB3C, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1022 642f31e4-cb62-4277-a9a5-d416c43777e8)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1022 88ddb7aa-efbf-4ee8-9651-08ef7de56424)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1022 12759611-01ef-4cfd-9260-fdd6123c5ad1)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1022 e9ff7c7c-dbda-4a68-ae0f-40f31f0d823b)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1022 91aaa466-880d-4f66-9ecc-ddda5ec84551)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1022 086f5cc8-d488-4c55-a3ae-461c692bc5a2)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1022 77f09884-3789-46a8-a99b-d74907babe74)");

unit.assert_eq8(8'h3C, datamem_ext_i.datamem[13'hF68],
"EXT DMEM (Testcase #1022 1ca99577-9702-474d-84d8-28a8f7d62dab)");
unit.assert_eq8(8'hAB, datamem_ext_i.datamem[13'hF69],
"EXT DMEM (Testcase #1022 12b8ceb9-9e91-4c83-9be0-34c5758585bf)");
datamem_ext_i.datamem[13'hF68] =
datamem_swap[16'hF68];
datamem_ext_i.datamem[13'hF69] =
datamem_swap[16'hF69];

#(CLKPERIOD / 4);

// BEGIN TESTCASE #1023
top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f = 8'h94;
{ top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l } = 16'h6D94;

#(CLKPERIOD);

loop_condition = 1'b1;
loop_counter = 5'b0;
while (loop_condition) begin
    #(3 * CLKPERIOD / 4);
    if (top_z80_i.z80_i.cpu_i.controller_i.fsm_i.state ==
        FSM_STATE_INSTR_FETCH1_1) begin
        loop_condition = 1'b0;
    end else begin
        #(CLKPERIOD / 4);
        loop_counter = loop_counter + 1;
        if (loop_counter == 5'b11111)
            unit.fail("Instruction not terminating (Testcase #1023)");
    end
end

unit.assert_eq16(16'h6D94, { top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.h, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.l },
"HL (Testcase #1023 1cb83187-dc9c-457e-b81a-acbb3edb3112)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[7],
"S (Testcase #1023 646493bc-de04-460d-af4e-ce8fdbdfe7c5)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[6],
"Z (Testcase #1023 0e946f36-31d9-4dbb-863d-b8379f5d19bc)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[4],
"H (Testcase #1023 4741d388-ec2a-4e7b-bb69-a5a807ccbfee)");
unit.assert_eq(1'b1, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[2],
"PV (Testcase #1023 59254283-eea8-4366-a03d-afcda4aad36f)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[1],
"N (Testcase #1023 003fe078-6276-491e-be3d-e398b528dc63)");
unit.assert_eq(1'b0, top_z80_i.z80_i.cpu_i.datapath_i.regfile_i.f[0],
"C (Testcase #1023 603227bd-e450-41b3-b8b8-8549d1783376)");

unit.assert_eq8(8'h94, datamem_ext_i.datamem[13'h46F],
"EXT DMEM (Testcase #1023 e6f628a3-b670-4bc5-b611-58cff67021e1)");
unit.assert_eq8(8'h6D, datamem_ext_i.datamem[13'h470],
"EXT DMEM (Testcase #1023 1ae1086c-5091-499b-a020-a074ece5efc8)");
datamem_ext_i.datamem[13'h46F] =
datamem_swap[16'h46F];
datamem_ext_i.datamem[13'h470] =
datamem_swap[16'h470];

#(CLKPERIOD / 4);

unit.finish("ld16nnhl ('LD (nn),HL')");
